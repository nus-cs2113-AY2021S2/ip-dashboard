[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"D | N | return book | June 6th"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":"E | Y | project meetin | Aug 6th 2-4pm"},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"T | N | read book"}],"authorContributionMap":{"jianningzhuang":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"Duke is a desktop app for managing tasks, optimized for use via a Command Line Interface (CLI)."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":"### Add a Task"},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":"Add a task to the task list.\u003cbr\u003e"},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"There are 3 types of tasks available - Todo, Deadline and Event.\u003cbr\u003e"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":"Deadline and Event tasks have a date and/or time tagged to them."},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":"### List all Tasks"},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":"List all tasks in the task list in the order they were added."},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":"### Mark Task as Done"},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":"Mark a task in the task list as done."},{"lineNumber":17,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":"### Delete a Task"},{"lineNumber":19,"author":{"gitId":"jianningzhuang"},"content":"Delete a task from the task list."},{"lineNumber":20,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":21,"author":{"gitId":"jianningzhuang"},"content":"### Find a Task"},{"lineNumber":22,"author":{"gitId":"jianningzhuang"},"content":"Search for all tasks containing a keyword in their description.\u003cbr\u003e"},{"lineNumber":23,"author":{"gitId":"jianningzhuang"},"content":"List out all the relevant tasks."},{"lineNumber":24,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":25,"author":{"gitId":"jianningzhuang"},"content":"### Save Current Tasks"},{"lineNumber":26,"author":{"gitId":"jianningzhuang"},"content":"Information on all tasks are saved automatically after any changes are made."},{"lineNumber":27,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":28,"author":{"gitId":"jianningzhuang"},"content":"### Exit the Application"},{"lineNumber":29,"author":{"gitId":"jianningzhuang"},"content":"Exit from the application."},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"jianningzhuang"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e"},{"lineNumber":34,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":35,"author":{"gitId":"jianningzhuang"},"content":":information_source: Words in `UPPER_CASE` are the parameters to be supplied by the user."},{"lineNumber":36,"author":{"gitId":"jianningzhuang"},"content":"  "},{"lineNumber":37,"author":{"gitId":"jianningzhuang"},"content":"\u003c/div\u003e"},{"lineNumber":38,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":39,"author":{"gitId":"jianningzhuang"},"content":"### Adding a Todo: `todo`"},{"lineNumber":40,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":41,"author":{"gitId":"jianningzhuang"},"content":"Adds a Todo task to the task list"},{"lineNumber":42,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":43,"author":{"gitId":"jianningzhuang"},"content":"Format: `todo TASK_DESCRIPTION`"},{"lineNumber":44,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":45,"author":{"gitId":"jianningzhuang"},"content":"Examples:"},{"lineNumber":46,"author":{"gitId":"jianningzhuang"},"content":"* `todo read book`"},{"lineNumber":47,"author":{"gitId":"jianningzhuang"},"content":"* `todo return book`"},{"lineNumber":48,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":49,"author":{"gitId":"jianningzhuang"},"content":"Expected Outcome:"},{"lineNumber":50,"author":{"gitId":"jianningzhuang"},"content":"```"},{"lineNumber":51,"author":{"gitId":"jianningzhuang"},"content":"------------------------------------------------------------"},{"lineNumber":52,"author":{"gitId":"jianningzhuang"},"content":"Got it. I\u0027ve added this task"},{"lineNumber":53,"author":{"gitId":"jianningzhuang"},"content":"[T][N] read book"},{"lineNumber":54,"author":{"gitId":"jianningzhuang"},"content":"Now you have 1 task in the list"},{"lineNumber":55,"author":{"gitId":"jianningzhuang"},"content":"------------------------------------------------------------"},{"lineNumber":56,"author":{"gitId":"jianningzhuang"},"content":"```"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"jianningzhuang"},"content":"### Adding a Deadline: `deadline`"},{"lineNumber":59,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":60,"author":{"gitId":"jianningzhuang"},"content":"Adds a Deadline task to the task list"},{"lineNumber":61,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":62,"author":{"gitId":"jianningzhuang"},"content":"Format: `deadline TASK_DESCRIPTION /by DATETIME`"},{"lineNumber":63,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":64,"author":{"gitId":"jianningzhuang"},"content":"Examples:"},{"lineNumber":65,"author":{"gitId":"jianningzhuang"},"content":"* `deadline return book /by June 6th`"},{"lineNumber":66,"author":{"gitId":"jianningzhuang"},"content":"* `deadline finish iP /by tonight`"},{"lineNumber":67,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":68,"author":{"gitId":"jianningzhuang"},"content":"Expected Outcome:"},{"lineNumber":69,"author":{"gitId":"jianningzhuang"},"content":"```"},{"lineNumber":70,"author":{"gitId":"jianningzhuang"},"content":"------------------------------------------------------------"},{"lineNumber":71,"author":{"gitId":"jianningzhuang"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":72,"author":{"gitId":"jianningzhuang"},"content":"[D][N] return book (by: June 6th)"},{"lineNumber":73,"author":{"gitId":"jianningzhuang"},"content":"Now you have 2 tasks in the list"},{"lineNumber":74,"author":{"gitId":"jianningzhuang"},"content":"------------------------------------------------------------"},{"lineNumber":75,"author":{"gitId":"jianningzhuang"},"content":"```"},{"lineNumber":76,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":77,"author":{"gitId":"jianningzhuang"},"content":"### Adding an Event: `event`"},{"lineNumber":78,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":79,"author":{"gitId":"jianningzhuang"},"content":"Adds an Event task to the task list"},{"lineNumber":80,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":81,"author":{"gitId":"jianningzhuang"},"content":"Format: `event TASK_DESCRIPTION /at DATETIME`"},{"lineNumber":82,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":83,"author":{"gitId":"jianningzhuang"},"content":"Examples:"},{"lineNumber":84,"author":{"gitId":"jianningzhuang"},"content":"* `event project meeting /at Aug 6th 2-4pm`"},{"lineNumber":85,"author":{"gitId":"jianningzhuang"},"content":"* `event a REAL date :\u0027\u0027\u0027-) /at 8am`"},{"lineNumber":86,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":87,"author":{"gitId":"jianningzhuang"},"content":"Expected Outcome:"},{"lineNumber":88,"author":{"gitId":"jianningzhuang"},"content":"```"},{"lineNumber":89,"author":{"gitId":"jianningzhuang"},"content":"------------------------------------------------------------"},{"lineNumber":90,"author":{"gitId":"jianningzhuang"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":91,"author":{"gitId":"jianningzhuang"},"content":"[E][N] project meetin (at: Aug 6th 2-4pm)"},{"lineNumber":92,"author":{"gitId":"jianningzhuang"},"content":"Now you have 3 tasks in the list"},{"lineNumber":93,"author":{"gitId":"jianningzhuang"},"content":"------------------------------------------------------------"},{"lineNumber":94,"author":{"gitId":"jianningzhuang"},"content":"```"},{"lineNumber":95,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":96,"author":{"gitId":"jianningzhuang"},"content":"### Listing all Tasks: `list`"},{"lineNumber":97,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":98,"author":{"gitId":"jianningzhuang"},"content":"Lists out all tasks in the task list in the order they were added."},{"lineNumber":99,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":100,"author":{"gitId":"jianningzhuang"},"content":"Format: `list`"},{"lineNumber":101,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":102,"author":{"gitId":"jianningzhuang"},"content":"Expected Outcome:"},{"lineNumber":103,"author":{"gitId":"jianningzhuang"},"content":"```"},{"lineNumber":104,"author":{"gitId":"jianningzhuang"},"content":"------------------------------------------------------------"},{"lineNumber":105,"author":{"gitId":"jianningzhuang"},"content":"Here are the tasks in your list:"},{"lineNumber":106,"author":{"gitId":"jianningzhuang"},"content":"1.[T][N] read book"},{"lineNumber":107,"author":{"gitId":"jianningzhuang"},"content":"2.[D][N] return book (by: June 6th)"},{"lineNumber":108,"author":{"gitId":"jianningzhuang"},"content":"3.[E][N] project meetin (at: Aug 6th 2-4pm)"},{"lineNumber":109,"author":{"gitId":"jianningzhuang"},"content":"------------------------------------------------------------"},{"lineNumber":110,"author":{"gitId":"jianningzhuang"},"content":"```"},{"lineNumber":111,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":112,"author":{"gitId":"jianningzhuang"},"content":"### Marking a Task as Done: `done`"},{"lineNumber":113,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":114,"author":{"gitId":"jianningzhuang"},"content":"Marks a task in the task list at the specified index as done."},{"lineNumber":115,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":116,"author":{"gitId":"jianningzhuang"},"content":"Format: `done INDEX`"},{"lineNumber":117,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":118,"author":{"gitId":"jianningzhuang"},"content":"Examples:"},{"lineNumber":119,"author":{"gitId":"jianningzhuang"},"content":"* `done 1`"},{"lineNumber":120,"author":{"gitId":"jianningzhuang"},"content":"* `done 3`"},{"lineNumber":121,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":122,"author":{"gitId":"jianningzhuang"},"content":"Expected Outcome:"},{"lineNumber":123,"author":{"gitId":"jianningzhuang"},"content":"```"},{"lineNumber":124,"author":{"gitId":"jianningzhuang"},"content":"------------------------------------------------------------"},{"lineNumber":125,"author":{"gitId":"jianningzhuang"},"content":"Nice! I\u0027ve marked this task as done:"},{"lineNumber":126,"author":{"gitId":"jianningzhuang"},"content":"[T][Y] read book"},{"lineNumber":127,"author":{"gitId":"jianningzhuang"},"content":"------------------------------------------------------------"},{"lineNumber":128,"author":{"gitId":"jianningzhuang"},"content":"```"},{"lineNumber":129,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":130,"author":{"gitId":"jianningzhuang"},"content":"### Deleting a Task: `delete`"},{"lineNumber":131,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":132,"author":{"gitId":"jianningzhuang"},"content":"Deletes a task from the task list at the specified index."},{"lineNumber":133,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":134,"author":{"gitId":"jianningzhuang"},"content":"Format: `delete INDEX`"},{"lineNumber":135,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":136,"author":{"gitId":"jianningzhuang"},"content":"Example: `delete 1`"},{"lineNumber":137,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":138,"author":{"gitId":"jianningzhuang"},"content":"Expected Outcome:"},{"lineNumber":139,"author":{"gitId":"jianningzhuang"},"content":"```"},{"lineNumber":140,"author":{"gitId":"jianningzhuang"},"content":"------------------------------------------------------------"},{"lineNumber":141,"author":{"gitId":"jianningzhuang"},"content":"Noted. I\u0027ve removed this task:"},{"lineNumber":142,"author":{"gitId":"jianningzhuang"},"content":"[T][Y] read book"},{"lineNumber":143,"author":{"gitId":"jianningzhuang"},"content":"Now you have 2 tasks in the list"},{"lineNumber":144,"author":{"gitId":"jianningzhuang"},"content":"------------------------------------------------------------"},{"lineNumber":145,"author":{"gitId":"jianningzhuang"},"content":"```"},{"lineNumber":146,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":147,"author":{"gitId":"jianningzhuang"},"content":"### Finding Tasks: `find`"},{"lineNumber":148,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":149,"author":{"gitId":"jianningzhuang"},"content":"Searches for all tasks containing a keyword in their description.\u003cbr\u003e"},{"lineNumber":150,"author":{"gitId":"jianningzhuang"},"content":"Lists out all the relevant tasks."},{"lineNumber":151,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":152,"author":{"gitId":"jianningzhuang"},"content":"Format: `find KEYWORD`"},{"lineNumber":153,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":154,"author":{"gitId":"jianningzhuang"},"content":"Example: `find book`"},{"lineNumber":155,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":156,"author":{"gitId":"jianningzhuang"},"content":"Expected Outcome:"},{"lineNumber":157,"author":{"gitId":"jianningzhuang"},"content":"```"},{"lineNumber":158,"author":{"gitId":"jianningzhuang"},"content":"------------------------------------------------------------"},{"lineNumber":159,"author":{"gitId":"jianningzhuang"},"content":"Here are the matching tasks in your list:"},{"lineNumber":160,"author":{"gitId":"jianningzhuang"},"content":"1.[D][N] return book (by: June 6th)"},{"lineNumber":161,"author":{"gitId":"jianningzhuang"},"content":"2.[T][N] read book"},{"lineNumber":162,"author":{"gitId":"jianningzhuang"},"content":"------------------------------------------------------------"},{"lineNumber":163,"author":{"gitId":"jianningzhuang"},"content":"```"},{"lineNumber":164,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":165,"author":{"gitId":"jianningzhuang"},"content":"### Exiting Duke: `bye`"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"jianningzhuang"},"content":"Exits the application with a goodbye message."},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"jianningzhuang"},"content":"Format: `bye`"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"jianningzhuang"},"content":"Expected Outcome:"},{"lineNumber":172,"author":{"gitId":"jianningzhuang"},"content":"```"},{"lineNumber":173,"author":{"gitId":"jianningzhuang"},"content":"------------------------------------------------------------"},{"lineNumber":174,"author":{"gitId":"jianningzhuang"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":175,"author":{"gitId":"jianningzhuang"},"content":"------------------------------------------------------------"},{"lineNumber":176,"author":{"gitId":"jianningzhuang"},"content":"```"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"jianningzhuang"},"content":"## Command Summary"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"jianningzhuang"},"content":"Action | Format, Examples"},{"lineNumber":181,"author":{"gitId":"jianningzhuang"},"content":"--------|------------------"},{"lineNumber":182,"author":{"gitId":"jianningzhuang"},"content":"**Todo** | `todo TASK_DESCRIPTION` \u003cbr\u003e e.g. `todo read book`"},{"lineNumber":183,"author":{"gitId":"jianningzhuang"},"content":"**Deadline** | `deadline TASK_DESCRIPTION /by DATETIME` \u003cbr\u003e e.g. `deadline return book /by June 6th`"},{"lineNumber":184,"author":{"gitId":"jianningzhuang"},"content":"**Event** | `event TASK_DESCRIPTION /at DATETIME` \u003cbr\u003e e.g. `event project meeting /at Aug 6th 2-4pm`"},{"lineNumber":185,"author":{"gitId":"jianningzhuang"},"content":"**List** | `list`"},{"lineNumber":186,"author":{"gitId":"jianningzhuang"},"content":"**Done** | `done INDEX`\u003cbr\u003e e.g. `done 1`"},{"lineNumber":187,"author":{"gitId":"jianningzhuang"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g. `delete 3`"},{"lineNumber":188,"author":{"gitId":"jianningzhuang"},"content":"**Find** | `find KEYWORD`\u003cbr\u003e e.g. `find book`"},{"lineNumber":189,"author":{"gitId":"jianningzhuang"},"content":"**Exit** | `bye`"}],"authorContributionMap":{"jianningzhuang":175,"-":14}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":"import duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"import duke.exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":"import duke.parser.Parser;"},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":"import duke.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"import duke.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":"public class Duke {"},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":"    private Storage storage;"},{"lineNumber":17,"author":{"gitId":"jianningzhuang"},"content":"    private TaskList tasks;"},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":"    private Ui ui;"},{"lineNumber":19,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":20,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"jianningzhuang"},"content":"     * Constructor for Duke Class"},{"lineNumber":22,"author":{"gitId":"jianningzhuang"},"content":"     * Initialises UI, Storage and TaskList"},{"lineNumber":23,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"jianningzhuang"},"content":"    public Duke() {"},{"lineNumber":25,"author":{"gitId":"jianningzhuang"},"content":"        ui \u003d new Ui();"},{"lineNumber":26,"author":{"gitId":"jianningzhuang"},"content":"        storage \u003d new Storage();"},{"lineNumber":27,"author":{"gitId":"jianningzhuang"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"jianningzhuang"},"content":"            tasks \u003d new TaskList(storage.loadFile());"},{"lineNumber":29,"author":{"gitId":"jianningzhuang"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":30,"author":{"gitId":"jianningzhuang"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":31,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":34,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"jianningzhuang"},"content":"     * Runs Duke"},{"lineNumber":36,"author":{"gitId":"jianningzhuang"},"content":"     * Reads in commands and executes them"},{"lineNumber":37,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"jianningzhuang"},"content":"    public void run() {"},{"lineNumber":39,"author":{"gitId":"jianningzhuang"},"content":"        ui.greet();"},{"lineNumber":40,"author":{"gitId":"jianningzhuang"},"content":"        boolean isExit \u003d false;"},{"lineNumber":41,"author":{"gitId":"jianningzhuang"},"content":"        while (!isExit) {"},{"lineNumber":42,"author":{"gitId":"jianningzhuang"},"content":"            try {"},{"lineNumber":43,"author":{"gitId":"jianningzhuang"},"content":"                String line \u003d ui.readInput();"},{"lineNumber":44,"author":{"gitId":"jianningzhuang"},"content":"                ui.showLine();"},{"lineNumber":45,"author":{"gitId":"jianningzhuang"},"content":"                Command c \u003d Parser.parse(line);"},{"lineNumber":46,"author":{"gitId":"jianningzhuang"},"content":"                c.execute(tasks, ui, storage);"},{"lineNumber":47,"author":{"gitId":"jianningzhuang"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":48,"author":{"gitId":"jianningzhuang"},"content":"            } catch (DukeException e) {"},{"lineNumber":49,"author":{"gitId":"jianningzhuang"},"content":"                ui.showError(e.getErrorMessage());"},{"lineNumber":50,"author":{"gitId":"jianningzhuang"},"content":"            } finally {"},{"lineNumber":51,"author":{"gitId":"jianningzhuang"},"content":"                ui.showLine();"},{"lineNumber":52,"author":{"gitId":"jianningzhuang"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":56,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"jianningzhuang"},"content":"     * Runs an instance of Duke"},{"lineNumber":58,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"jianningzhuang"},"content":"     * @param args arguments from command line (if any)"},{"lineNumber":60,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"jianningzhuang"},"content":"    public static void main(String[] args) {"},{"lineNumber":62,"author":{"gitId":"jianningzhuang"},"content":"        new Duke().run();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jianningzhuang":63,"-":2}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":"public class AddDeadlineCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"    private String line;"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":"     * Constructor of AddDeadlineCommand Class"},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":"     * @param line user input"},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":"    public AddDeadlineCommand(String line) {"},{"lineNumber":17,"author":{"gitId":"jianningzhuang"},"content":"        this.line \u003d line;"},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":20,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"jianningzhuang"},"content":"     * Adds Deadline task to TaskList and saves it in a textfile"},{"lineNumber":22,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"jianningzhuang"},"content":"     * @param tasks TaskList containing tasks"},{"lineNumber":24,"author":{"gitId":"jianningzhuang"},"content":"     * @param ui User Interface"},{"lineNumber":25,"author":{"gitId":"jianningzhuang"},"content":"     * @param storage Storage to load and save tasks"},{"lineNumber":26,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"jianningzhuang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":29,"author":{"gitId":"jianningzhuang"},"content":"        tasks.addDeadline(line);"},{"lineNumber":30,"author":{"gitId":"jianningzhuang"},"content":"        storage.saveFile(tasks.getTasks());"},{"lineNumber":31,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":33,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"jianningzhuang"},"content":"     * Returns false as command is not of type bye"},{"lineNumber":35,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"jianningzhuang"},"content":"     * @return boolean false"},{"lineNumber":37,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"jianningzhuang"},"content":"    public boolean isExit() {"},{"lineNumber":40,"author":{"gitId":"jianningzhuang"},"content":"        return false;"},{"lineNumber":41,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":43,"author":{"gitId":"jianningzhuang"},"content":"}"}],"authorContributionMap":{"jianningzhuang":43}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":"public class AddEventCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"    private String line;"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":"     * Constructor of AddEventCommand Class"},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":"     * @param line user input"},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":"    public AddEventCommand(String line) {"},{"lineNumber":17,"author":{"gitId":"jianningzhuang"},"content":"        this.line \u003d line;"},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":20,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"jianningzhuang"},"content":"     * Adds Event task to TaskList and saves it in a textfile"},{"lineNumber":22,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"jianningzhuang"},"content":"     * @param tasks TaskList containing tasks"},{"lineNumber":24,"author":{"gitId":"jianningzhuang"},"content":"     * @param ui User Interface"},{"lineNumber":25,"author":{"gitId":"jianningzhuang"},"content":"     * @param storage Storage to load and save tasks"},{"lineNumber":26,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"jianningzhuang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":29,"author":{"gitId":"jianningzhuang"},"content":"        tasks.addEvent(line);"},{"lineNumber":30,"author":{"gitId":"jianningzhuang"},"content":"        storage.saveFile(tasks.getTasks());"},{"lineNumber":31,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":33,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"jianningzhuang"},"content":"     * Returns false as command is not of type bye"},{"lineNumber":35,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"jianningzhuang"},"content":"     * @return boolean false"},{"lineNumber":37,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"jianningzhuang"},"content":"    public boolean isExit() {"},{"lineNumber":40,"author":{"gitId":"jianningzhuang"},"content":"        return false;"},{"lineNumber":41,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"jianningzhuang"},"content":"}"}],"authorContributionMap":{"jianningzhuang":42}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":"public class AddTodoCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"    private String line;"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":"     * Constructor of AddTodoCommand Class"},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":"     * @param line user input"},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":"    public AddTodoCommand(String line) {"},{"lineNumber":17,"author":{"gitId":"jianningzhuang"},"content":"        this.line \u003d line;"},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":20,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"jianningzhuang"},"content":"     * Adds Todo task to TaskList and saves it in a textfile"},{"lineNumber":22,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"jianningzhuang"},"content":"     * @param tasks TaskList containing tasks"},{"lineNumber":24,"author":{"gitId":"jianningzhuang"},"content":"     * @param ui User Interface"},{"lineNumber":25,"author":{"gitId":"jianningzhuang"},"content":"     * @param storage Storage to load and save tasks"},{"lineNumber":26,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"jianningzhuang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":29,"author":{"gitId":"jianningzhuang"},"content":"        tasks.addTodo(line);"},{"lineNumber":30,"author":{"gitId":"jianningzhuang"},"content":"        storage.saveFile(tasks.getTasks());"},{"lineNumber":31,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":33,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"jianningzhuang"},"content":"     * Returns false as command is not of type bye"},{"lineNumber":35,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"jianningzhuang"},"content":"     * @return boolean false"},{"lineNumber":37,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"jianningzhuang"},"content":"    public boolean isExit() {"},{"lineNumber":40,"author":{"gitId":"jianningzhuang"},"content":"        return false;"},{"lineNumber":41,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"jianningzhuang"},"content":"}"}],"authorContributionMap":{"jianningzhuang":42}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":"public class ByeCommand extends Command{"},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":"     * Prints farewell message and saves the textfile before exiting"},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":"     * @param tasks TaskList containing tasks"},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":"     * @param ui User Interface"},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":"     * @param storage Storage to load and save tasks"},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"jianningzhuang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":"        ui.bidGoodbye();"},{"lineNumber":19,"author":{"gitId":"jianningzhuang"},"content":"        storage.saveFile(tasks.getTasks());"},{"lineNumber":20,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":22,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"jianningzhuang"},"content":"     * Returns true as command is of type bye"},{"lineNumber":24,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"jianningzhuang"},"content":"     * @return boolean true"},{"lineNumber":26,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"jianningzhuang"},"content":"    public boolean isExit() {"},{"lineNumber":29,"author":{"gitId":"jianningzhuang"},"content":"        return true;"},{"lineNumber":30,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jianningzhuang"},"content":"}"}],"authorContributionMap":{"jianningzhuang":31}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":"public abstract class Command {"},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":"     * Executes corresponding method based on type of command"},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":"     * @param tasks TaskList containing tasks"},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":"     * @param ui User Interface"},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":"     * @param storage Storage to load and save tasks"},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"},{"lineNumber":17,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"jianningzhuang"},"content":"     * Returns boolean isExit based on type of command"},{"lineNumber":20,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"jianningzhuang"},"content":"     * @return boolean isExit"},{"lineNumber":22,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jianningzhuang"},"content":"    public abstract boolean isExit();"},{"lineNumber":24,"author":{"gitId":"jianningzhuang"},"content":"}"}],"authorContributionMap":{"jianningzhuang":24}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"    private String line;"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":"     * Constructor of DeleteCommand Class"},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":"     * @param line user input"},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":"    public DeleteCommand(String line) {"},{"lineNumber":17,"author":{"gitId":"jianningzhuang"},"content":"        this.line \u003d line;"},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":20,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"jianningzhuang"},"content":"     * Deletes a task from TaskList and saves the textfile"},{"lineNumber":22,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"jianningzhuang"},"content":"     * @param tasks TaskList containing tasks"},{"lineNumber":24,"author":{"gitId":"jianningzhuang"},"content":"     * @param ui User Interface"},{"lineNumber":25,"author":{"gitId":"jianningzhuang"},"content":"     * @param storage Storage to load and save tasks"},{"lineNumber":26,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"jianningzhuang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":29,"author":{"gitId":"jianningzhuang"},"content":"        tasks.deleteTask(line);"},{"lineNumber":30,"author":{"gitId":"jianningzhuang"},"content":"        storage.saveFile(tasks.getTasks());"},{"lineNumber":31,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":33,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"jianningzhuang"},"content":"     * Returns false as command is not of type bye"},{"lineNumber":35,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"jianningzhuang"},"content":"     * @return boolean false"},{"lineNumber":37,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"jianningzhuang"},"content":"    public boolean isExit() {"},{"lineNumber":40,"author":{"gitId":"jianningzhuang"},"content":"        return false;"},{"lineNumber":41,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"jianningzhuang"},"content":"}"}],"authorContributionMap":{"jianningzhuang":42}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":"public class DoneCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"    private String line;"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":"     * Constructor of DoneCommand Class"},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":"     * @param line user input"},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":"    public DoneCommand(String line) {"},{"lineNumber":17,"author":{"gitId":"jianningzhuang"},"content":"        this.line \u003d line;"},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":20,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"jianningzhuang"},"content":"     * Marks a task from TaskList as done and saves the textfile"},{"lineNumber":22,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"jianningzhuang"},"content":"     * @param tasks TaskList containing tasks"},{"lineNumber":24,"author":{"gitId":"jianningzhuang"},"content":"     * @param ui User Interface"},{"lineNumber":25,"author":{"gitId":"jianningzhuang"},"content":"     * @param storage Storage to load and save tasks"},{"lineNumber":26,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"jianningzhuang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":29,"author":{"gitId":"jianningzhuang"},"content":"        tasks.markDone(line);"},{"lineNumber":30,"author":{"gitId":"jianningzhuang"},"content":"        storage.saveFile(tasks.getTasks());"},{"lineNumber":31,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":33,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"jianningzhuang"},"content":"     * Returns false as command is not of type bye"},{"lineNumber":35,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"jianningzhuang"},"content":"     * @return boolean false"},{"lineNumber":37,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"jianningzhuang"},"content":"    public boolean isExit() {"},{"lineNumber":40,"author":{"gitId":"jianningzhuang"},"content":"        return false;"},{"lineNumber":41,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"jianningzhuang"},"content":"}"}],"authorContributionMap":{"jianningzhuang":42}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":"public class FindCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"    private String line;"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":"     * Constructor of FindCommand Class"},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":"     * @param line user input"},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":"    public FindCommand(String line) {"},{"lineNumber":17,"author":{"gitId":"jianningzhuang"},"content":"        this.line \u003d line;"},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":20,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"jianningzhuang"},"content":"     * Finds a task from TaskList based on keyword"},{"lineNumber":22,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"jianningzhuang"},"content":"     * @param tasks TaskList containing tasks"},{"lineNumber":24,"author":{"gitId":"jianningzhuang"},"content":"     * @param ui User Interface"},{"lineNumber":25,"author":{"gitId":"jianningzhuang"},"content":"     * @param storage Storage to load and save tasks"},{"lineNumber":26,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"jianningzhuang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":29,"author":{"gitId":"jianningzhuang"},"content":"        tasks.findTask(line);"},{"lineNumber":30,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":32,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"jianningzhuang"},"content":"     * Returns false as command is not of type bye"},{"lineNumber":34,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"jianningzhuang"},"content":"     * @return boolean false"},{"lineNumber":36,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"jianningzhuang"},"content":"    public boolean isExit() {"},{"lineNumber":39,"author":{"gitId":"jianningzhuang"},"content":"        return false;"},{"lineNumber":40,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"jianningzhuang"},"content":"}"}],"authorContributionMap":{"jianningzhuang":41}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":"public class ListCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":"     * Prints all tasks in TaskList"},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":"     * @param tasks TaskList containing tasks"},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":"     * @param ui User Interface"},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":"     * @param storage Storage to load and save tasks"},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"jianningzhuang"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":"        tasks.printList();"},{"lineNumber":19,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":21,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"jianningzhuang"},"content":"     * Returns false as command is not of type bye"},{"lineNumber":23,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"jianningzhuang"},"content":"     * @return boolean false"},{"lineNumber":25,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"jianningzhuang"},"content":"    public boolean isExit() {"},{"lineNumber":28,"author":{"gitId":"jianningzhuang"},"content":"        return false;"},{"lineNumber":29,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"jianningzhuang"},"content":"}"}],"authorContributionMap":{"jianningzhuang":30}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"public abstract class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"    protected String ERROR_MESSAGE;"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":"    public String getErrorMessage() {"},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":"        return ERROR_MESSAGE;"},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":"}"}],"authorContributionMap":{"jianningzhuang":10}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"public class InvalidCommandException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":"    public InvalidCommandException() {"},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":"        this.ERROR_MESSAGE \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"}"}],"authorContributionMap":{"jianningzhuang":9}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"import duke.exception.InvalidCommandException;"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":"import duke.command.*;"},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":"    private static final String BYE_COMMAND \u003d \"bye\";"},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"    private static final String LIST_COMMAND \u003d \"list\";"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";"},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";"},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";"},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":"    private static final String DONE_COMMAND \u003d \"done\";"},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";"},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":"    private static final String FIND_COMMAND \u003d \"find\";"},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":17,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":"     * Returns the corresponding Command object based on user input"},{"lineNumber":19,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"jianningzhuang"},"content":"     * @param line user input to be parsed"},{"lineNumber":21,"author":{"gitId":"jianningzhuang"},"content":"     * @return Command object"},{"lineNumber":22,"author":{"gitId":"jianningzhuang"},"content":"     * @throws InvalidCommandException If given line does not have a valid command"},{"lineNumber":23,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"jianningzhuang"},"content":"    public static Command parse(String line) throws InvalidCommandException {"},{"lineNumber":25,"author":{"gitId":"jianningzhuang"},"content":"        Command command \u003d null;"},{"lineNumber":26,"author":{"gitId":"jianningzhuang"},"content":"        if (line.equals(BYE_COMMAND)) {"},{"lineNumber":27,"author":{"gitId":"jianningzhuang"},"content":"            command \u003d new ByeCommand();"},{"lineNumber":28,"author":{"gitId":"jianningzhuang"},"content":"        } else if (line.equals(LIST_COMMAND)) {"},{"lineNumber":29,"author":{"gitId":"jianningzhuang"},"content":"            command \u003d new ListCommand();"},{"lineNumber":30,"author":{"gitId":"jianningzhuang"},"content":"        } else if (line.startsWith(TODO_COMMAND)) {"},{"lineNumber":31,"author":{"gitId":"jianningzhuang"},"content":"            command \u003d new AddTodoCommand(line);"},{"lineNumber":32,"author":{"gitId":"jianningzhuang"},"content":"        } else if (line.startsWith(DEADLINE_COMMAND)) {"},{"lineNumber":33,"author":{"gitId":"jianningzhuang"},"content":"            command \u003d new AddDeadlineCommand(line);"},{"lineNumber":34,"author":{"gitId":"jianningzhuang"},"content":"        } else if (line.startsWith(EVENT_COMMAND)) {"},{"lineNumber":35,"author":{"gitId":"jianningzhuang"},"content":"            command \u003d new AddEventCommand(line);"},{"lineNumber":36,"author":{"gitId":"jianningzhuang"},"content":"        } else if (line.startsWith(DONE_COMMAND)) {"},{"lineNumber":37,"author":{"gitId":"jianningzhuang"},"content":"            command \u003d new DoneCommand(line);"},{"lineNumber":38,"author":{"gitId":"jianningzhuang"},"content":"        } else if (line.startsWith(DELETE_COMMAND)) {"},{"lineNumber":39,"author":{"gitId":"jianningzhuang"},"content":"            command \u003d new DeleteCommand(line);"},{"lineNumber":40,"author":{"gitId":"jianningzhuang"},"content":"        } else if (line.startsWith(FIND_COMMAND)) {"},{"lineNumber":41,"author":{"gitId":"jianningzhuang"},"content":"            command \u003d new FindCommand(line);"},{"lineNumber":42,"author":{"gitId":"jianningzhuang"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"jianningzhuang"},"content":"            throw new InvalidCommandException();"},{"lineNumber":44,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"jianningzhuang"},"content":"        return command;"},{"lineNumber":46,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"jianningzhuang"},"content":"}"}],"authorContributionMap":{"jianningzhuang":47}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":"import java.nio.file.Path;"},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":"import java.nio.file.Paths;"},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":"import java.util.ArrayList;"},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":"import java.util.Scanner;"},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":17,"author":{"gitId":"jianningzhuang"},"content":"public class Storage {"},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":19,"author":{"gitId":"jianningzhuang"},"content":"    private static final String root \u003d System.getProperty(\"user.dir\");"},{"lineNumber":20,"author":{"gitId":"jianningzhuang"},"content":"    private static final Path filePath \u003d Paths.get(root, \"data\", \"duke.txt\");"},{"lineNumber":21,"author":{"gitId":"jianningzhuang"},"content":"    private static final Path dirPath \u003d Paths.get(root, \"data\");"},{"lineNumber":22,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":23,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"jianningzhuang"},"content":"     * Constructor"},{"lineNumber":25,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"jianningzhuang"},"content":"     * Creates new directory and file based on dirPath and filePath if not found"},{"lineNumber":27,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"jianningzhuang"},"content":"    public Storage() {"},{"lineNumber":29,"author":{"gitId":"jianningzhuang"},"content":"        File fileDirectory \u003d new File(dirPath.toString());"},{"lineNumber":30,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":31,"author":{"gitId":"jianningzhuang"},"content":"        if (!fileDirectory.exists()) {"},{"lineNumber":32,"author":{"gitId":"jianningzhuang"},"content":"            fileDirectory.mkdir();"},{"lineNumber":33,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"jianningzhuang"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"jianningzhuang"},"content":"            File dataFile \u003d new File(filePath.toString());"},{"lineNumber":36,"author":{"gitId":"jianningzhuang"},"content":"            dataFile.createNewFile();"},{"lineNumber":37,"author":{"gitId":"jianningzhuang"},"content":"        } catch (IOException e) {"},{"lineNumber":38,"author":{"gitId":"jianningzhuang"},"content":"            e.printStackTrace();"},{"lineNumber":39,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":42,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"jianningzhuang"},"content":"     * Loads saved TaskList from file"},{"lineNumber":44,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"jianningzhuang"},"content":"     * @return ArrayList of tasks saved in file"},{"lineNumber":46,"author":{"gitId":"jianningzhuang"},"content":"     * @throws FileNotFoundException when pathname does not exist"},{"lineNumber":47,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"jianningzhuang"},"content":"    public ArrayList\u003cTask\u003e loadFile() throws FileNotFoundException {"},{"lineNumber":49,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":50,"author":{"gitId":"jianningzhuang"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":51,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":52,"author":{"gitId":"jianningzhuang"},"content":"        File dataFile \u003d new File(filePath.toString());"},{"lineNumber":53,"author":{"gitId":"jianningzhuang"},"content":"        Scanner scanner \u003d new Scanner(dataFile);"},{"lineNumber":54,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":55,"author":{"gitId":"jianningzhuang"},"content":"        while (scanner.hasNext()) {"},{"lineNumber":56,"author":{"gitId":"jianningzhuang"},"content":"            String line \u003d scanner.nextLine();"},{"lineNumber":57,"author":{"gitId":"jianningzhuang"},"content":"            String type \u003d line.substring(0, 1);"},{"lineNumber":58,"author":{"gitId":"jianningzhuang"},"content":"            String info \u003d line.substring(8);"},{"lineNumber":59,"author":{"gitId":"jianningzhuang"},"content":"            int dateIndex \u003d info.indexOf(\u0027|\u0027);"},{"lineNumber":60,"author":{"gitId":"jianningzhuang"},"content":"            switch (type) {"},{"lineNumber":61,"author":{"gitId":"jianningzhuang"},"content":"            case \"T\":"},{"lineNumber":62,"author":{"gitId":"jianningzhuang"},"content":"                tasks.add(new Todo(info));"},{"lineNumber":63,"author":{"gitId":"jianningzhuang"},"content":"                if (line.charAt(4) \u003d\u003d \u0027Y\u0027) {"},{"lineNumber":64,"author":{"gitId":"jianningzhuang"},"content":"                    tasks.get(tasks.size() - 1).setAsDone();"},{"lineNumber":65,"author":{"gitId":"jianningzhuang"},"content":"                }"},{"lineNumber":66,"author":{"gitId":"jianningzhuang"},"content":"                break;"},{"lineNumber":67,"author":{"gitId":"jianningzhuang"},"content":"            case \"D\":"},{"lineNumber":68,"author":{"gitId":"jianningzhuang"},"content":"                tasks.add(new Deadline(info.substring(0, dateIndex - 1), info.substring(dateIndex + 2)));"},{"lineNumber":69,"author":{"gitId":"jianningzhuang"},"content":"                if (line.charAt(4) \u003d\u003d \u0027Y\u0027) {"},{"lineNumber":70,"author":{"gitId":"jianningzhuang"},"content":"                    tasks.get(tasks.size() - 1).setAsDone();"},{"lineNumber":71,"author":{"gitId":"jianningzhuang"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"jianningzhuang"},"content":"                break;"},{"lineNumber":73,"author":{"gitId":"jianningzhuang"},"content":"            case \"E\":"},{"lineNumber":74,"author":{"gitId":"jianningzhuang"},"content":"                tasks.add(new Event(info.substring(0, dateIndex - 1), info.substring(dateIndex + 2)));"},{"lineNumber":75,"author":{"gitId":"jianningzhuang"},"content":"                if (line.charAt(4) \u003d\u003d \u0027Y\u0027) {"},{"lineNumber":76,"author":{"gitId":"jianningzhuang"},"content":"                    tasks.get(tasks.size() - 1).setAsDone();"},{"lineNumber":77,"author":{"gitId":"jianningzhuang"},"content":"                }"},{"lineNumber":78,"author":{"gitId":"jianningzhuang"},"content":"                break;"},{"lineNumber":79,"author":{"gitId":"jianningzhuang"},"content":"            default:"},{"lineNumber":80,"author":{"gitId":"jianningzhuang"},"content":"                break;"},{"lineNumber":81,"author":{"gitId":"jianningzhuang"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"jianningzhuang"},"content":"        return tasks;"},{"lineNumber":84,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":86,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"jianningzhuang"},"content":"     * Saves tasks to file"},{"lineNumber":88,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"jianningzhuang"},"content":"     * @param tasks ArrayList of tasks to be saved"},{"lineNumber":90,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"jianningzhuang"},"content":"    public void saveFile(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":92,"author":{"gitId":"jianningzhuang"},"content":"        try {"},{"lineNumber":93,"author":{"gitId":"jianningzhuang"},"content":"            FileWriter writer \u003d new FileWriter(filePath.toString());"},{"lineNumber":94,"author":{"gitId":"jianningzhuang"},"content":"            for (Task task : tasks) {"},{"lineNumber":95,"author":{"gitId":"jianningzhuang"},"content":"                if (task instanceof Todo) {"},{"lineNumber":96,"author":{"gitId":"jianningzhuang"},"content":"                    writer.write(\"T | \" + task.getStatusIcon() + \" | \" + task.getDescription() + System.lineSeparator());"},{"lineNumber":97,"author":{"gitId":"jianningzhuang"},"content":"                } else if (task instanceof Deadline) {"},{"lineNumber":98,"author":{"gitId":"jianningzhuang"},"content":"                    writer.write(\"D | \" + task.getStatusIcon() + \" | \" + task.getDescription() + \" | \" + ((Deadline) task).getBy() + System.lineSeparator());"},{"lineNumber":99,"author":{"gitId":"jianningzhuang"},"content":"                } else if (task instanceof Event) {"},{"lineNumber":100,"author":{"gitId":"jianningzhuang"},"content":"                    writer.write(\"E | \" + task.getStatusIcon() + \" | \" + task.getDescription() + \" | \" + ((Event) task).getAt() + System.lineSeparator());"},{"lineNumber":101,"author":{"gitId":"jianningzhuang"},"content":"                } else {"},{"lineNumber":102,"author":{"gitId":"jianningzhuang"},"content":"                    return;"},{"lineNumber":103,"author":{"gitId":"jianningzhuang"},"content":"                }"},{"lineNumber":104,"author":{"gitId":"jianningzhuang"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"jianningzhuang"},"content":"            writer.close();"},{"lineNumber":106,"author":{"gitId":"jianningzhuang"},"content":"        } catch (IOException e) {"},{"lineNumber":107,"author":{"gitId":"jianningzhuang"},"content":"            e.printStackTrace();"},{"lineNumber":108,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"jianningzhuang"},"content":"}"}],"authorContributionMap":{"jianningzhuang":110}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"    protected String by;"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":"    protected LocalDate date;"},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":"    protected boolean hasDate \u003d false;"},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":"     * Constructor for Deadline Class"},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":"     * @param description String description of task"},{"lineNumber":17,"author":{"gitId":"jianningzhuang"},"content":"     * @param by due date or time of task"},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"jianningzhuang"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":20,"author":{"gitId":"jianningzhuang"},"content":"        super(description);"},{"lineNumber":21,"author":{"gitId":"jianningzhuang"},"content":"        this.by \u003d by;"},{"lineNumber":22,"author":{"gitId":"jianningzhuang"},"content":"        LocalDate parsedDate \u003d parseDate(by);"},{"lineNumber":23,"author":{"gitId":"jianningzhuang"},"content":"        if (parsedDate !\u003d null) {"},{"lineNumber":24,"author":{"gitId":"jianningzhuang"},"content":"            hasDate \u003d true;"},{"lineNumber":25,"author":{"gitId":"jianningzhuang"},"content":"            this.date \u003d parsedDate;"},{"lineNumber":26,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":29,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":30,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"jianningzhuang"},"content":"     * Returns a LocalDate object parsed from input String"},{"lineNumber":32,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"jianningzhuang"},"content":"     * @param line String of date"},{"lineNumber":34,"author":{"gitId":"jianningzhuang"},"content":"     * @return LocalDate object parsed"},{"lineNumber":35,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"jianningzhuang"},"content":"    public LocalDate parseDate(String line) {"},{"lineNumber":37,"author":{"gitId":"jianningzhuang"},"content":"        LocalDate parsedDate \u003d null;"},{"lineNumber":38,"author":{"gitId":"jianningzhuang"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"jianningzhuang"},"content":"            parsedDate \u003d LocalDate.parse(line);"},{"lineNumber":40,"author":{"gitId":"jianningzhuang"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":41,"author":{"gitId":"jianningzhuang"},"content":"            //System.out.println(\"invalid date format\");"},{"lineNumber":42,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"jianningzhuang"},"content":"        return parsedDate;"},{"lineNumber":44,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":46,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":47,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"jianningzhuang"},"content":"     * Returns the due date of the task"},{"lineNumber":49,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"jianningzhuang"},"content":"     * @return String of by parameter"},{"lineNumber":51,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"jianningzhuang"},"content":"    public String getBy() {"},{"lineNumber":53,"author":{"gitId":"jianningzhuang"},"content":"        return this.by;"},{"lineNumber":54,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":56,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"jianningzhuang"},"content":"     * Returns a String representation of the task including the status icon, description and due date"},{"lineNumber":58,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"jianningzhuang"},"content":"     * @return String representation of task"},{"lineNumber":60,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"jianningzhuang"},"content":"    public String toString() {"},{"lineNumber":63,"author":{"gitId":"jianningzhuang"},"content":"        if (hasDate) {"},{"lineNumber":64,"author":{"gitId":"jianningzhuang"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"},{"lineNumber":65,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"jianningzhuang"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"},{"lineNumber":67,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":69,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":70,"author":{"gitId":"jianningzhuang"},"content":"}"}],"authorContributionMap":{"jianningzhuang":70}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"    protected String at;"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":"    protected LocalDate date;"},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":"    protected boolean hasDate \u003d false;"},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":"     * Constructor for Event Class"},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":"     * @param description String description of task"},{"lineNumber":17,"author":{"gitId":"jianningzhuang"},"content":"     * @param at date which task takes place"},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"jianningzhuang"},"content":"    public Event(String description, String at) {"},{"lineNumber":20,"author":{"gitId":"jianningzhuang"},"content":"        super(description);"},{"lineNumber":21,"author":{"gitId":"jianningzhuang"},"content":"        this.at \u003d at;"},{"lineNumber":22,"author":{"gitId":"jianningzhuang"},"content":"        LocalDate parsedDate \u003d parseDate(at);"},{"lineNumber":23,"author":{"gitId":"jianningzhuang"},"content":"        if (parsedDate !\u003d null) {"},{"lineNumber":24,"author":{"gitId":"jianningzhuang"},"content":"            hasDate \u003d true;"},{"lineNumber":25,"author":{"gitId":"jianningzhuang"},"content":"            this.date \u003d parsedDate;"},{"lineNumber":26,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":29,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"jianningzhuang"},"content":"     * Returns a LocalDate object parsed from input String"},{"lineNumber":31,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"jianningzhuang"},"content":"     * @param line String of date"},{"lineNumber":33,"author":{"gitId":"jianningzhuang"},"content":"     * @return LocalDate object parsed"},{"lineNumber":34,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"jianningzhuang"},"content":"    public LocalDate parseDate(String line) {"},{"lineNumber":36,"author":{"gitId":"jianningzhuang"},"content":"        LocalDate parsedDate \u003d null;"},{"lineNumber":37,"author":{"gitId":"jianningzhuang"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"jianningzhuang"},"content":"            parsedDate \u003d LocalDate.parse(line);"},{"lineNumber":39,"author":{"gitId":"jianningzhuang"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":40,"author":{"gitId":"jianningzhuang"},"content":"            //System.out.println(\"invalid date format\");"},{"lineNumber":41,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"jianningzhuang"},"content":"        return parsedDate;"},{"lineNumber":43,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":45,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"jianningzhuang"},"content":"     * Returns the date which task takes place"},{"lineNumber":47,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"jianningzhuang"},"content":"     * @return String of at parameter"},{"lineNumber":49,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"jianningzhuang"},"content":"    public String getAt() {"},{"lineNumber":51,"author":{"gitId":"jianningzhuang"},"content":"        return this.at;"},{"lineNumber":52,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":54,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"jianningzhuang"},"content":"     * Returns a String representation of the task including the status icon, description and date which it happens"},{"lineNumber":56,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"jianningzhuang"},"content":"     * @return String representation of task"},{"lineNumber":58,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":60,"author":{"gitId":"jianningzhuang"},"content":"    public String toString() {"},{"lineNumber":61,"author":{"gitId":"jianningzhuang"},"content":"        if (hasDate) {"},{"lineNumber":62,"author":{"gitId":"jianningzhuang"},"content":"            return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"},{"lineNumber":63,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"jianningzhuang"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"},{"lineNumber":65,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"jianningzhuang"},"content":"}"}],"authorContributionMap":{"jianningzhuang":66}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"     * Constructor for Task Class"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":"     * @param description Description of the task"},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":"    public Task(String description) {"},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":"        this.isDone \u003d false;"},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"jianningzhuang"},"content":"     * Returns the current status icon of whether the task is done"},{"lineNumber":20,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"jianningzhuang"},"content":"     * @return Y if task is done and N if task is not done"},{"lineNumber":22,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jianningzhuang"},"content":"    public String getStatusIcon() {"},{"lineNumber":24,"author":{"gitId":"jianningzhuang"},"content":"        return (isDone ? \"Y\" : \"N\");"},{"lineNumber":25,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":27,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"jianningzhuang"},"content":"     * Returns the description of the task"},{"lineNumber":29,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"jianningzhuang"},"content":"     * @return String description of the task"},{"lineNumber":31,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"jianningzhuang"},"content":"    public String getDescription() {"},{"lineNumber":33,"author":{"gitId":"jianningzhuang"},"content":"        return description;"},{"lineNumber":34,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":36,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":37,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"jianningzhuang"},"content":"     * Sets the task as done"},{"lineNumber":39,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"jianningzhuang"},"content":"    public void setAsDone() {"},{"lineNumber":41,"author":{"gitId":"jianningzhuang"},"content":"        this.isDone \u003d true;"},{"lineNumber":42,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":44,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"jianningzhuang"},"content":"     * Returns a String representation of the task including the status icon and description"},{"lineNumber":46,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"jianningzhuang"},"content":"     * @return String representation of the task"},{"lineNumber":48,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"jianningzhuang"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitId":"jianningzhuang"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"},{"lineNumber":52,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jianningzhuang"},"content":"}"}],"authorContributionMap":{"jianningzhuang":53}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":"    private Ui ui \u003d new Ui();"},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":"     * Constructor of new TaskList"},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":19,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"jianningzhuang"},"content":"     * Constructor of loading a TaskList"},{"lineNumber":21,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"jianningzhuang"},"content":"     * @param tasks ArrayList of Tasks that was previously saved"},{"lineNumber":23,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"jianningzhuang"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":25,"author":{"gitId":"jianningzhuang"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":26,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":28,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"jianningzhuang"},"content":"     * Returns all the tasks in ArrayList"},{"lineNumber":30,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"jianningzhuang"},"content":"     * @return ArrayList of tasks"},{"lineNumber":32,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"jianningzhuang"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":34,"author":{"gitId":"jianningzhuang"},"content":"        return this.tasks;"},{"lineNumber":35,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":37,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"jianningzhuang"},"content":"     * Prints a list of all tasks currently in TaskList"},{"lineNumber":39,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"jianningzhuang"},"content":"    public void printList() {"},{"lineNumber":41,"author":{"gitId":"jianningzhuang"},"content":"        ui.printList(tasks);"},{"lineNumber":42,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":44,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":45,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"jianningzhuang"},"content":"     * Adds a Todo task to the TaskList"},{"lineNumber":47,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"jianningzhuang"},"content":"     * @param line user input containing description of task"},{"lineNumber":49,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"jianningzhuang"},"content":"    public void addTodo(String line) {"},{"lineNumber":51,"author":{"gitId":"jianningzhuang"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"jianningzhuang"},"content":"            int descriptionStart \u003d 5;"},{"lineNumber":53,"author":{"gitId":"jianningzhuang"},"content":"            String description \u003d line.substring(descriptionStart);"},{"lineNumber":54,"author":{"gitId":"jianningzhuang"},"content":"            tasks.add(new Todo(description));"},{"lineNumber":55,"author":{"gitId":"jianningzhuang"},"content":"            ui.printAddTaskMessage(tasks);"},{"lineNumber":56,"author":{"gitId":"jianningzhuang"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":57,"author":{"gitId":"jianningzhuang"},"content":"            System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":58,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":61,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"jianningzhuang"},"content":"     * Adds a Deadline task to the TaskList"},{"lineNumber":63,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"jianningzhuang"},"content":"     * @param line user input containing description and due date"},{"lineNumber":65,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"jianningzhuang"},"content":"    public void addDeadline(String line) {"},{"lineNumber":67,"author":{"gitId":"jianningzhuang"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"jianningzhuang"},"content":"            int descriptionStart \u003d 9;"},{"lineNumber":69,"author":{"gitId":"jianningzhuang"},"content":"            int descriptionEnd \u003d line.indexOf(\"/by\") - 1;"},{"lineNumber":70,"author":{"gitId":"jianningzhuang"},"content":"            String description \u003d line.substring(descriptionStart, descriptionEnd);"},{"lineNumber":71,"author":{"gitId":"jianningzhuang"},"content":"            int byStart \u003d line.indexOf(\"/by\") + 4;"},{"lineNumber":72,"author":{"gitId":"jianningzhuang"},"content":"            String by \u003d line.substring(byStart);"},{"lineNumber":73,"author":{"gitId":"jianningzhuang"},"content":"            tasks.add(new Deadline(description, by));"},{"lineNumber":74,"author":{"gitId":"jianningzhuang"},"content":"            ui.printAddTaskMessage(tasks);"},{"lineNumber":75,"author":{"gitId":"jianningzhuang"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":76,"author":{"gitId":"jianningzhuang"},"content":"            System.out.println(\"OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":77,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":80,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"jianningzhuang"},"content":"     * Adds an Event task to the TaskList"},{"lineNumber":82,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"jianningzhuang"},"content":"     * @param line user input containing description and date of event"},{"lineNumber":84,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"jianningzhuang"},"content":"    public void addEvent(String line) {"},{"lineNumber":86,"author":{"gitId":"jianningzhuang"},"content":"        try {"},{"lineNumber":87,"author":{"gitId":"jianningzhuang"},"content":"            int descriptionStart \u003d 6;"},{"lineNumber":88,"author":{"gitId":"jianningzhuang"},"content":"            int descriptionEnd \u003d line.indexOf(\"/at\") - 1;"},{"lineNumber":89,"author":{"gitId":"jianningzhuang"},"content":"            String description \u003d line.substring(descriptionStart, descriptionEnd);"},{"lineNumber":90,"author":{"gitId":"jianningzhuang"},"content":"            int atStart \u003d line.indexOf(\"/at\") + 4;"},{"lineNumber":91,"author":{"gitId":"jianningzhuang"},"content":"            String at \u003d line.substring(atStart);"},{"lineNumber":92,"author":{"gitId":"jianningzhuang"},"content":"            tasks.add(new Event(description, at));"},{"lineNumber":93,"author":{"gitId":"jianningzhuang"},"content":"            ui.printAddTaskMessage(tasks);"},{"lineNumber":94,"author":{"gitId":"jianningzhuang"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":95,"author":{"gitId":"jianningzhuang"},"content":"            System.out.println(\"OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":96,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":99,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"jianningzhuang"},"content":"     * Marks a task as done"},{"lineNumber":101,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"jianningzhuang"},"content":"     * @param line user input containing index of task in TaskList"},{"lineNumber":103,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"jianningzhuang"},"content":"    public void markDone(String line) {"},{"lineNumber":105,"author":{"gitId":"jianningzhuang"},"content":"        try {"},{"lineNumber":106,"author":{"gitId":"jianningzhuang"},"content":"            int itemNum \u003d Integer.parseInt(line.substring(5));"},{"lineNumber":107,"author":{"gitId":"jianningzhuang"},"content":"            tasks.get(itemNum - 1).setAsDone();"},{"lineNumber":108,"author":{"gitId":"jianningzhuang"},"content":"            ui.printMarkDoneMessage(tasks, itemNum);"},{"lineNumber":109,"author":{"gitId":"jianningzhuang"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":110,"author":{"gitId":"jianningzhuang"},"content":"            System.out.println(\"OOPS!!! The index of the task to be marked as done cannot be empty.\");"},{"lineNumber":111,"author":{"gitId":"jianningzhuang"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":112,"author":{"gitId":"jianningzhuang"},"content":"            System.out.println(\"OOPS!!! The index of the task to be marked as done is out of range\");"},{"lineNumber":113,"author":{"gitId":"jianningzhuang"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":114,"author":{"gitId":"jianningzhuang"},"content":"            System.out.println(\"OOPS!!! The index of the task to be marked as done is invalid\");"},{"lineNumber":115,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":118,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"jianningzhuang"},"content":"     * Deletes a task from the TaskList"},{"lineNumber":120,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":121,"author":{"gitId":"jianningzhuang"},"content":"     * @param line user input containing index of task to be deleted"},{"lineNumber":122,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"jianningzhuang"},"content":"    public void deleteTask(String line) {"},{"lineNumber":124,"author":{"gitId":"jianningzhuang"},"content":"        try {"},{"lineNumber":125,"author":{"gitId":"jianningzhuang"},"content":"            int itemNum \u003d Integer.parseInt(line.substring(7));"},{"lineNumber":126,"author":{"gitId":"jianningzhuang"},"content":"            Task toBeDeleted \u003d tasks.get(itemNum - 1);"},{"lineNumber":127,"author":{"gitId":"jianningzhuang"},"content":"            tasks.remove(itemNum - 1);"},{"lineNumber":128,"author":{"gitId":"jianningzhuang"},"content":"            ui.printDeleteTaskMessage(tasks, toBeDeleted);"},{"lineNumber":129,"author":{"gitId":"jianningzhuang"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":130,"author":{"gitId":"jianningzhuang"},"content":"            System.out.println(\"OOPS!!! The index of the task to be deleted cannot be empty.\");"},{"lineNumber":131,"author":{"gitId":"jianningzhuang"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":132,"author":{"gitId":"jianningzhuang"},"content":"            System.out.println(\"OOPS!!! The index of the task to be deleted is out of range\");"},{"lineNumber":133,"author":{"gitId":"jianningzhuang"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":134,"author":{"gitId":"jianningzhuang"},"content":"            System.out.println(\"OOPS!!! The index of the task to be deleted is invalid\");"},{"lineNumber":135,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":137,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":139,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"jianningzhuang"},"content":"     * Searches for task in TaskList based on description"},{"lineNumber":141,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":142,"author":{"gitId":"jianningzhuang"},"content":"     * @param line user input containing description to be filtered"},{"lineNumber":143,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"jianningzhuang"},"content":"    public void findTask(String line) {"},{"lineNumber":145,"author":{"gitId":"jianningzhuang"},"content":"        try {"},{"lineNumber":146,"author":{"gitId":"jianningzhuang"},"content":"            String keyword \u003d line.substring(5);"},{"lineNumber":147,"author":{"gitId":"jianningzhuang"},"content":"            int count \u003d 1;"},{"lineNumber":148,"author":{"gitId":"jianningzhuang"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":149,"author":{"gitId":"jianningzhuang"},"content":"            for (Task task : tasks) {"},{"lineNumber":150,"author":{"gitId":"jianningzhuang"},"content":"                if (task.getDescription().contains(keyword)) {"},{"lineNumber":151,"author":{"gitId":"jianningzhuang"},"content":"                    System.out.println(count + \".\" + task.toString());"},{"lineNumber":152,"author":{"gitId":"jianningzhuang"},"content":"                    count++;"},{"lineNumber":153,"author":{"gitId":"jianningzhuang"},"content":"                }"},{"lineNumber":154,"author":{"gitId":"jianningzhuang"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"jianningzhuang"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":156,"author":{"gitId":"jianningzhuang"},"content":"            System.out.println(\"OOPS!!! There was no keyword to search for\");"},{"lineNumber":157,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":160,"author":{"gitId":"jianningzhuang"},"content":"}"}],"authorContributionMap":{"jianningzhuang":160}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":"     * Constructor for Todo Class"},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":"     * @param description String description of task"},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":"    public Todo(String description) {"},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":"     * Returns a String representation of the task including the status icon and description"},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"jianningzhuang"},"content":"     * @return String representation of task"},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"jianningzhuang"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"jianningzhuang"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"jianningzhuang"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":22,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jianningzhuang"},"content":"}"}],"authorContributionMap":{"jianningzhuang":23}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":"    public static final String DIVIDER_LINE \u003d \"---------------------------------------------------------\";"},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":"    private Scanner in;"},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":"     * Constructor of Ui Class"},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"jianningzhuang"},"content":"    public Ui() {"},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":"        in \u003d new Scanner(System.in);"},{"lineNumber":19,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":21,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"jianningzhuang"},"content":"     * Returns String of next line of user input"},{"lineNumber":23,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"jianningzhuang"},"content":"     * @return String of user input"},{"lineNumber":25,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"jianningzhuang"},"content":"    public String readInput() {"},{"lineNumber":27,"author":{"gitId":"jianningzhuang"},"content":"        return in.nextLine();"},{"lineNumber":28,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":30,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"jianningzhuang"},"content":"     * Prints divider line made of dashes"},{"lineNumber":32,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"jianningzhuang"},"content":"    public void showLine() {"},{"lineNumber":34,"author":{"gitId":"jianningzhuang"},"content":"        System.out.println(DIVIDER_LINE);"},{"lineNumber":35,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":37,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"jianningzhuang"},"content":"     * Prints Duke logo and welcome message"},{"lineNumber":39,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"jianningzhuang"},"content":"    public void greet() {"},{"lineNumber":41,"author":{"gitId":"jianningzhuang"},"content":"        String logo \u003d \" ____        _\\n\""},{"lineNumber":42,"author":{"gitId":"jianningzhuang"},"content":"                + \"|  _ \\\\ _   _| | _____\\n\""},{"lineNumber":43,"author":{"gitId":"jianningzhuang"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":44,"author":{"gitId":"jianningzhuang"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":45,"author":{"gitId":"jianningzhuang"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":46,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":47,"author":{"gitId":"jianningzhuang"},"content":"        System.out.println(DIVIDER_LINE);"},{"lineNumber":48,"author":{"gitId":"jianningzhuang"},"content":"        System.out.println(logo);"},{"lineNumber":49,"author":{"gitId":"jianningzhuang"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":50,"author":{"gitId":"jianningzhuang"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":51,"author":{"gitId":"jianningzhuang"},"content":"        System.out.println(DIVIDER_LINE);"},{"lineNumber":52,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":54,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"jianningzhuang"},"content":"     * Prints farewell message when exiting Duke"},{"lineNumber":56,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"jianningzhuang"},"content":"    public void bidGoodbye() {"},{"lineNumber":58,"author":{"gitId":"jianningzhuang"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":59,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":61,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"jianningzhuang"},"content":"     * Prints out tasks in TaskList"},{"lineNumber":63,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"jianningzhuang"},"content":"     * @param tasks ArrayList of tasks"},{"lineNumber":65,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"jianningzhuang"},"content":"    public void printList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":67,"author":{"gitId":"jianningzhuang"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":68,"author":{"gitId":"jianningzhuang"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++){"},{"lineNumber":69,"author":{"gitId":"jianningzhuang"},"content":"            System.out.print(i + \".\");"},{"lineNumber":70,"author":{"gitId":"jianningzhuang"},"content":"            System.out.println(tasks.get(i-1).toString());"},{"lineNumber":71,"author":{"gitId":"jianningzhuang"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":74,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"jianningzhuang"},"content":"     * Prints confirm message that task has been added"},{"lineNumber":76,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"jianningzhuang"},"content":"     * @param tasks ArrayList of tasks"},{"lineNumber":78,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"jianningzhuang"},"content":"    public void printAddTaskMessage(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":80,"author":{"gitId":"jianningzhuang"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":81,"author":{"gitId":"jianningzhuang"},"content":"        System.out.println(tasks.get(tasks.size() - 1).toString());"},{"lineNumber":82,"author":{"gitId":"jianningzhuang"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");"},{"lineNumber":83,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":85,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"jianningzhuang"},"content":"     * Prints confirm message that task has been marked as done"},{"lineNumber":87,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"jianningzhuang"},"content":"     * @param tasks ArrayList of tasks"},{"lineNumber":89,"author":{"gitId":"jianningzhuang"},"content":"     * @param itemNum index of task that was marked done"},{"lineNumber":90,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"jianningzhuang"},"content":"    public void printMarkDoneMessage(ArrayList\u003cTask\u003e tasks, int itemNum) {"},{"lineNumber":92,"author":{"gitId":"jianningzhuang"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":93,"author":{"gitId":"jianningzhuang"},"content":"        System.out.println(tasks.get(itemNum - 1).toString());"},{"lineNumber":94,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":96,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"jianningzhuang"},"content":"     * Prints confirm message that task has been deleted"},{"lineNumber":98,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":99,"author":{"gitId":"jianningzhuang"},"content":"     * @param tasks ArrayList of tasks"},{"lineNumber":100,"author":{"gitId":"jianningzhuang"},"content":"     * @param justDeleted task that was deleted"},{"lineNumber":101,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"jianningzhuang"},"content":"    public void printDeleteTaskMessage(ArrayList\u003cTask\u003e tasks, Task justDeleted) {"},{"lineNumber":103,"author":{"gitId":"jianningzhuang"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":104,"author":{"gitId":"jianningzhuang"},"content":"        System.out.println(justDeleted.toString());"},{"lineNumber":105,"author":{"gitId":"jianningzhuang"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");"},{"lineNumber":106,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"jianningzhuang"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"jianningzhuang"},"content":"     * Prints the corresponding error message"},{"lineNumber":109,"author":{"gitId":"jianningzhuang"},"content":"     *"},{"lineNumber":110,"author":{"gitId":"jianningzhuang"},"content":"     * @param errorMessage error message returned from exception"},{"lineNumber":111,"author":{"gitId":"jianningzhuang"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"jianningzhuang"},"content":"    public void showError(String errorMessage) {"},{"lineNumber":113,"author":{"gitId":"jianningzhuang"},"content":"        System.out.println(errorMessage);"},{"lineNumber":114,"author":{"gitId":"jianningzhuang"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":116,"author":{"gitId":"jianningzhuang"},"content":""},{"lineNumber":117,"author":{"gitId":"jianningzhuang"},"content":"}"}],"authorContributionMap":{"jianningzhuang":117}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"T | Y | read book"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":"D | N | return book | June 6th"},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"T | Y | join sports club"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":"T | N | borrow book"}],"authorContributionMap":{"jianningzhuang":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jianningzhuang"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"jianningzhuang"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"jianningzhuang"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"jianningzhuang"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"jianningzhuang"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"jianningzhuang"},"content":"done 4"},{"lineNumber":7,"author":{"gitId":"jianningzhuang"},"content":"todo borrow book"},{"lineNumber":8,"author":{"gitId":"jianningzhuang"},"content":"list"},{"lineNumber":9,"author":{"gitId":"jianningzhuang"},"content":"delete 3"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":"list"},{"lineNumber":11,"author":{"gitId":"jianningzhuang"},"content":"find book"},{"lineNumber":12,"author":{"gitId":"jianningzhuang"},"content":"edqdboqwhubo"},{"lineNumber":13,"author":{"gitId":"jianningzhuang"},"content":"delete"},{"lineNumber":14,"author":{"gitId":"jianningzhuang"},"content":"delete 5"},{"lineNumber":15,"author":{"gitId":"jianningzhuang"},"content":"todo"},{"lineNumber":16,"author":{"gitId":"jianningzhuang"},"content":"bye"}],"authorContributionMap":{"jianningzhuang":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"jianningzhuang"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"jianningzhuang"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"jianningzhuang":2,"-":19}}]
