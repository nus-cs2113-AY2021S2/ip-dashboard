[{"path":"Baggie.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"[E]|false|1|1"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":"[E]|false|2|2"},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"[T]|false|1"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":"[T]|false|2"}],"authorContributionMap":{"baggiiiie":4}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"# Baggie User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"Baggie is an interactive task-manager. He is purely based on Command-Line Interface (CLI). With his help, you could be event more productive!"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":"## Getting Started"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":"## Table of Contents"},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":"  * [1. Before Start](#1-before-start)"},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":"  * [2. Features](#2-features)"},{"lineNumber":9,"author":{"gitId":"baggiiiie"},"content":"    + [2.1 Help Menu](#21-help-menu)"},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":"    + [2.2 Add Task](#22-add-task)"},{"lineNumber":11,"author":{"gitId":"baggiiiie"},"content":"      - [Deadline Task](#deadline-task)"},{"lineNumber":12,"author":{"gitId":"baggiiiie"},"content":"      - [Event Task](#event-task)"},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"      - [Dodo Task](#todo-task)"},{"lineNumber":14,"author":{"gitId":"baggiiiie"},"content":"    + [2.3 Print Task List](#23-print-task-list)"},{"lineNumber":15,"author":{"gitId":"baggiiiie"},"content":"    + [2.4 Mark As Done](#24-mark-as-done)"},{"lineNumber":16,"author":{"gitId":"baggiiiie"},"content":"    + [2.5 Delete Tasks](#25-delete-tasks)"},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":"    + [2.6 Find Task On A date](#26-find-task-on-a-date)"},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":"    + [2.7 Find Task With Keyword](#27-find-task-with-keyword)"},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"    + [2.8 Exit Command](#28-exit-command)"},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":"    + [2.9 Invalid Command](#29-invalid-command)"},{"lineNumber":21,"author":{"gitId":"baggiiiie"},"content":"  * [3. Command Overview](#3-command-overview)"},{"lineNumber":22,"author":{"gitId":"baggiiiie"},"content":"  * [4. Storage](#4-storage)"},{"lineNumber":23,"author":{"gitId":"baggiiiie"},"content":"  * [5. Contributors](#5-contributors)"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"baggiiiie"},"content":"## 1. Before Start"},{"lineNumber":27,"author":{"gitId":"baggiiiie"},"content":"- Ensure you have Java 11 or above installed in your Computer."},{"lineNumber":28,"author":{"gitId":"baggiiiie"},"content":"- Download the latest version of `Baggie.jar` file from [here](https://github.com/baggiiiie/ip/releases/tag/v2.0)."},{"lineNumber":29,"author":{"gitId":"baggiiiie"},"content":"- Move the `Baggie.jar` file to the folder of your choice."},{"lineNumber":30,"author":{"gitId":"baggiiiie"},"content":"- Open terminal(For MacOS)/command prompt(For Windows) and change working directory to that folder. "},{"lineNumber":31,"author":{"gitId":"baggiiiie"},"content":"- Launch *Baggie* by entering *java -jar ip.jar*."},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"baggiiiie"},"content":"**Following is the Welcome Page if Baggie is running successfull**"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":35,"author":{"gitId":"baggiiiie"},"content":"  "},{"lineNumber":36,"author":{"gitId":"baggiiiie"},"content":"██████   █████   ██████   ██████  ██ ███████ "},{"lineNumber":37,"author":{"gitId":"baggiiiie"},"content":"██   ██ ██   ██ ██       ██       ██ ██      "},{"lineNumber":38,"author":{"gitId":"baggiiiie"},"content":"██████  ███████ ██   ███ ██   ███ ██ ██████ "},{"lineNumber":39,"author":{"gitId":"baggiiiie"},"content":"██   ██ ██   ██ ██    ██ ██    ██ ██ ██      "},{"lineNumber":40,"author":{"gitId":"baggiiiie"},"content":"██████  ██   ██  ██████   ██████  ██ ███████ "},{"lineNumber":41,"author":{"gitId":"baggiiiie"},"content":"____________________________________________________________"},{"lineNumber":42,"author":{"gitId":"baggiiiie"},"content":" Hello! I\u0027m Baggie"},{"lineNumber":43,"author":{"gitId":"baggiiiie"},"content":" Type \u0027help\u0027 to see what i could do for you"},{"lineNumber":44,"author":{"gitId":"baggiiiie"},"content":"____________________________________________________________"},{"lineNumber":45,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":47,"author":{"gitId":"baggiiiie"},"content":"## 2. Features"},{"lineNumber":48,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":49,"author":{"gitId":"baggiiiie"},"content":"### 2.1 Help Menu "},{"lineNumber":50,"author":{"gitId":"baggiiiie"},"content":"This command prints a help menu for the user."},{"lineNumber":51,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":52,"author":{"gitId":"baggiiiie"},"content":"Format: `help`"},{"lineNumber":53,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":54,"author":{"gitId":"baggiiiie"},"content":"Example: `help`"},{"lineNumber":55,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":56,"author":{"gitId":"baggiiiie"},"content":"Expected Output:"},{"lineNumber":57,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":58,"author":{"gitId":"baggiiiie"},"content":" Here\u0027s what I could do for you ^_^"},{"lineNumber":59,"author":{"gitId":"baggiiiie"},"content":" help: print help menu"},{"lineNumber":60,"author":{"gitId":"baggiiiie"},"content":" list: see saved tasks in the list"},{"lineNumber":61,"author":{"gitId":"baggiiiie"},"content":" done: mark a task in the list as done"},{"lineNumber":62,"author":{"gitId":"baggiiiie"},"content":" delete: delete a task from the list"},{"lineNumber":63,"author":{"gitId":"baggiiiie"},"content":" date: search saved tasks on a specific day"},{"lineNumber":64,"author":{"gitId":"baggiiiie"},"content":" find: search saved tasks by keywords"},{"lineNumber":65,"author":{"gitId":"baggiiiie"},"content":" bye: exit Baggie"},{"lineNumber":66,"author":{"gitId":"baggiiiie"},"content":" how to add tasks into the list:"},{"lineNumber":67,"author":{"gitId":"baggiiiie"},"content":" \ttodo-\u003e format: todo [task]"},{"lineNumber":68,"author":{"gitId":"baggiiiie"},"content":" \tevent-\u003e format: event [task] / [time]"},{"lineNumber":69,"author":{"gitId":"baggiiiie"},"content":" \tdeadline-\u003e format: deadline [task] / [time]"},{"lineNumber":70,"author":{"gitId":"baggiiiie"},"content":" \t[tip: enter date as YYYY-MM-DD to help Baggie understand better!]"},{"lineNumber":71,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":72,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":73,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":74,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":75,"author":{"gitId":"baggiiiie"},"content":"### 2.2 Add Task "},{"lineNumber":76,"author":{"gitId":"baggiiiie"},"content":"This command add a task into task list for the user."},{"lineNumber":77,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":78,"author":{"gitId":"baggiiiie"},"content":"#### Deadline Task"},{"lineNumber":79,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":80,"author":{"gitId":"baggiiiie"},"content":"Format: `deadline [task description] / [YYYY-MM-DD]`"},{"lineNumber":81,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":82,"author":{"gitId":"baggiiiie"},"content":"Example: `deadlilne submit UG / 2021-03-05`"},{"lineNumber":83,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":84,"author":{"gitId":"baggiiiie"},"content":"Expected Output:"},{"lineNumber":85,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":86,"author":{"gitId":"baggiiiie"},"content":" Task added! ^_^"},{"lineNumber":87,"author":{"gitId":"baggiiiie"},"content":" 5: [D] [-] submit UG (by: Mar 5 2021)"},{"lineNumber":88,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":89,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":90,"author":{"gitId":"baggiiiie"},"content":"Expected output when date is not in the right format:"},{"lineNumber":91,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":92,"author":{"gitId":"baggiiiie"},"content":" Task added! ^_^"},{"lineNumber":93,"author":{"gitId":"baggiiiie"},"content":" 5: [D] [-] submit UG (by: 2021 03 05)"},{"lineNumber":94,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":95,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":96,"author":{"gitId":"baggiiiie"},"content":"#### Event Task"},{"lineNumber":97,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":98,"author":{"gitId":"baggiiiie"},"content":"Format: `event [task description] / [YYYY-MM-DD]`"},{"lineNumber":99,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":100,"author":{"gitId":"baggiiiie"},"content":"Example: `event CNY dinner / 2021-02-11`"},{"lineNumber":101,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":102,"author":{"gitId":"baggiiiie"},"content":"Expected Output:"},{"lineNumber":103,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":104,"author":{"gitId":"baggiiiie"},"content":" Task added! ^_^"},{"lineNumber":105,"author":{"gitId":"baggiiiie"},"content":" 5: [E] [-] event CNY dinner (at: Feb 11 2021)"},{"lineNumber":106,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":107,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":108,"author":{"gitId":"baggiiiie"},"content":"Expected output when date is not in the right format:"},{"lineNumber":109,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":110,"author":{"gitId":"baggiiiie"},"content":" Task added! ^_^"},{"lineNumber":111,"author":{"gitId":"baggiiiie"},"content":" 5: [E] [-] event CNY dinner (at: 2021 02 11)"},{"lineNumber":112,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":113,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":114,"author":{"gitId":"baggiiiie"},"content":"#### Todo Task"},{"lineNumber":115,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":116,"author":{"gitId":"baggiiiie"},"content":"Format: `todo [task description]`"},{"lineNumber":117,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":118,"author":{"gitId":"baggiiiie"},"content":"Example: `todo submit UG`"},{"lineNumber":119,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":120,"author":{"gitId":"baggiiiie"},"content":"Expected Output:"},{"lineNumber":121,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":122,"author":{"gitId":"baggiiiie"},"content":" Task added! ^_^"},{"lineNumber":123,"author":{"gitId":"baggiiiie"},"content":" 5: [T] [-] submit UG"},{"lineNumber":124,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":125,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":126,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":127,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":128,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":129,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":130,"author":{"gitId":"baggiiiie"},"content":"### 2.3 Print Task List "},{"lineNumber":131,"author":{"gitId":"baggiiiie"},"content":"This command prints a task list for the user."},{"lineNumber":132,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":133,"author":{"gitId":"baggiiiie"},"content":"Format: `list`"},{"lineNumber":134,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":135,"author":{"gitId":"baggiiiie"},"content":"Example: `list`"},{"lineNumber":136,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":137,"author":{"gitId":"baggiiiie"},"content":"Expected output when there is no task in the list:"},{"lineNumber":138,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":139,"author":{"gitId":"baggiiiie"},"content":"  List is empty :o"},{"lineNumber":140,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":141,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":142,"author":{"gitId":"baggiiiie"},"content":"Expected output when there are tasks in the list:"},{"lineNumber":143,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":144,"author":{"gitId":"baggiiiie"},"content":" 1: [D] [X] math tutorial (by: Feb 27 2021)"},{"lineNumber":145,"author":{"gitId":"baggiiiie"},"content":" 2: [T] [-] submit UG"},{"lineNumber":146,"author":{"gitId":"baggiiiie"},"content":" 3: [E] [-] CNY dinner (at: 5pm)"},{"lineNumber":147,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":148,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":149,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":150,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":151,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":152,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":153,"author":{"gitId":"baggiiiie"},"content":"### 2.4 Mark As Done "},{"lineNumber":154,"author":{"gitId":"baggiiiie"},"content":"This command marks a task in the list as done."},{"lineNumber":155,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":156,"author":{"gitId":"baggiiiie"},"content":"Format: `done [index]`"},{"lineNumber":157,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":158,"author":{"gitId":"baggiiiie"},"content":"Example: `done 1`"},{"lineNumber":159,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":160,"author":{"gitId":"baggiiiie"},"content":"Expected output when the task is in the list:"},{"lineNumber":161,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":162,"author":{"gitId":"baggiiiie"},"content":" Yay! This task is done!"},{"lineNumber":163,"author":{"gitId":"baggiiiie"},"content":" 5: [D] [X] submit UG (by: Mar 5 2021)"},{"lineNumber":164,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":165,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":166,"author":{"gitId":"baggiiiie"},"content":"Expected output when the task is not in the list:"},{"lineNumber":167,"author":{"gitId":"-"},"content":"```"},{"lineNumber":168,"author":{"gitId":"baggiiiie"},"content":" You don\u0027t have Task 5 in your list ^_^ "},{"lineNumber":169,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":170,"author":{"gitId":"baggiiiie"},"content":"Expected output when the task is already done:"},{"lineNumber":171,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":172,"author":{"gitId":"baggiiiie"},"content":"The task is already done ^_^"},{"lineNumber":173,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":174,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":175,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":176,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":177,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":178,"author":{"gitId":"baggiiiie"},"content":"### 2.5 Delete Tasks "},{"lineNumber":179,"author":{"gitId":"baggiiiie"},"content":"This command deletes a task from list for the user."},{"lineNumber":180,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":181,"author":{"gitId":"baggiiiie"},"content":"Format: `delete [index]`"},{"lineNumber":182,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":183,"author":{"gitId":"baggiiiie"},"content":"Example: `delete 5`"},{"lineNumber":184,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":185,"author":{"gitId":"baggiiiie"},"content":"Expected output when the task is in the list:"},{"lineNumber":186,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":187,"author":{"gitId":"baggiiiie"},"content":" 5: [D] [X] submit UG (by: Mar 5 2021)"},{"lineNumber":188,"author":{"gitId":"baggiiiie"},"content":" Yay! This task is deleted!"},{"lineNumber":189,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":190,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":191,"author":{"gitId":"baggiiiie"},"content":"Expected output when the task is not in the list:"},{"lineNumber":192,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":193,"author":{"gitId":"baggiiiie"},"content":" You don\u0027t have Task 5 in your list ^_^ "},{"lineNumber":194,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":195,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":196,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":197,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":198,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":199,"author":{"gitId":"baggiiiie"},"content":"### 2.6 Find Task On A date "},{"lineNumber":200,"author":{"gitId":"baggiiiie"},"content":"This command finds tasks on a specific date for the user."},{"lineNumber":201,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":202,"author":{"gitId":"baggiiiie"},"content":"Format: `date [YYYY-MM-DD]`"},{"lineNumber":203,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":204,"author":{"gitId":"baggiiiie"},"content":"Example: `date 2021-03-05`"},{"lineNumber":205,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":206,"author":{"gitId":"baggiiiie"},"content":"Expected Output:"},{"lineNumber":207,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":208,"author":{"gitId":"baggiiiie"},"content":" 4. [D] [-] submit UG (by: Mar 5 2021)"},{"lineNumber":209,"author":{"gitId":"baggiiiie"},"content":" 6. [E] [-] math tutorial (at: Mar 5 2021)"},{"lineNumber":210,"author":{"gitId":"baggiiiie"},"content":" There are 2 task(s)"},{"lineNumber":211,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":212,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":213,"author":{"gitId":"baggiiiie"},"content":"Expected output when the date is not in the right format:"},{"lineNumber":214,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":215,"author":{"gitId":"baggiiiie"},"content":" Baggie could find any tasks related to 2021 03 05"},{"lineNumber":216,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":217,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":218,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":219,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":220,"author":{"gitId":"baggiiiie"},"content":"### 2.7 Find Task With Keyword "},{"lineNumber":221,"author":{"gitId":"baggiiiie"},"content":"This command finds tasks containing the keyword for the user."},{"lineNumber":222,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":223,"author":{"gitId":"baggiiiie"},"content":"Format: `keyword [keyword]`"},{"lineNumber":224,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":225,"author":{"gitId":"baggiiiie"},"content":"Example: `keyword math`"},{"lineNumber":226,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":227,"author":{"gitId":"baggiiiie"},"content":"Expected Output:"},{"lineNumber":228,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":229,"author":{"gitId":"baggiiiie"},"content":"5. [E] [-] math tutorial (at: Mar 5 2021)"},{"lineNumber":230,"author":{"gitId":"baggiiiie"},"content":"6. [T] [-] math HW2"},{"lineNumber":231,"author":{"gitId":"baggiiiie"},"content":"There are 2 task(s)"},{"lineNumber":232,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":233,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":234,"author":{"gitId":"baggiiiie"},"content":"Expected output when there is no task containing keyword in the list:"},{"lineNumber":235,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":236,"author":{"gitId":"baggiiiie"},"content":" Baggie could find any tasks related to math"},{"lineNumber":237,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":238,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":239,"author":{"gitId":"baggiiiie"},"content":"### 2.8 Exit Command"},{"lineNumber":240,"author":{"gitId":"baggiiiie"},"content":"This command exits the programm for the user."},{"lineNumber":241,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":242,"author":{"gitId":"baggiiiie"},"content":"Format: `bye`"},{"lineNumber":243,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":244,"author":{"gitId":"baggiiiie"},"content":"Example: `bye`"},{"lineNumber":245,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":246,"author":{"gitId":"baggiiiie"},"content":"Expected Output:"},{"lineNumber":247,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":248,"author":{"gitId":"baggiiiie"},"content":" File saved!"},{"lineNumber":249,"author":{"gitId":"baggiiiie"},"content":" Bye! Hope to see you again soon!"},{"lineNumber":250,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":251,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":252,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":253,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":254,"author":{"gitId":"baggiiiie"},"content":"### 2.9 Invalid Command"},{"lineNumber":255,"author":{"gitId":"baggiiiie"},"content":"Baggie shows error message."},{"lineNumber":256,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":257,"author":{"gitId":"baggiiiie"},"content":"Example: `quit`"},{"lineNumber":258,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":259,"author":{"gitId":"baggiiiie"},"content":"Expected Output:"},{"lineNumber":260,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":261,"author":{"gitId":"baggiiiie"},"content":" Baggie doesn\u0027t know what to do with the command D:"},{"lineNumber":262,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":263,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":264,"author":{"gitId":"baggiiiie"},"content":"## 3. Command Overview"},{"lineNumber":265,"author":{"gitId":"baggiiiie"},"content":"| Command | Format | Example |"},{"lineNumber":266,"author":{"gitId":"baggiiiie"},"content":"|:---:|:---:|:---:|"},{"lineNumber":267,"author":{"gitId":"baggiiiie"},"content":"| Help Menu|`help`|`help`|"},{"lineNumber":268,"author":{"gitId":"baggiiiie"},"content":"| Print List|`list`|`list`|"},{"lineNumber":269,"author":{"gitId":"baggiiiie"},"content":"| Mark As Done|`done [index]`|`done 1`|"},{"lineNumber":270,"author":{"gitId":"baggiiiie"},"content":"| Delete Task|`delete [index]`|`delete 1`|"},{"lineNumber":271,"author":{"gitId":"baggiiiie"},"content":"| Find With Date|`date [YYYY-MM-DD]`|`date 2021-03-05`|"},{"lineNumber":272,"author":{"gitId":"baggiiiie"},"content":"| Find With Keyword|`keyword [keyword]`|`keyword math`|"},{"lineNumber":273,"author":{"gitId":"baggiiiie"},"content":"| Add Deadline Task|`deadline [task]/[time]`|`deadline submit UG/2021-03-05`|"},{"lineNumber":274,"author":{"gitId":"baggiiiie"},"content":"| Add Event Task|`event [task]/[time]`|`event CNY dinner/2021-02-11`|"},{"lineNumber":275,"author":{"gitId":"baggiiiie"},"content":"| Add Todo Task|`todo [task]`|`todo submit UG`|"},{"lineNumber":276,"author":{"gitId":"baggiiiie"},"content":"| Exit Program|`bye`|`bye`|"},{"lineNumber":277,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":278,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":279,"author":{"gitId":"baggiiiie"},"content":" "},{"lineNumber":280,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":281,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":282,"author":{"gitId":"baggiiiie"},"content":"## 4. Storage"},{"lineNumber":283,"author":{"gitId":"baggiiiie"},"content":"If File  `Baggie.txt` exists in the working directory, Baggie will read from the file and load the saved tasks into task list;"},{"lineNumber":284,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":285,"author":{"gitId":"baggiiiie"},"content":"If File  `Baggie.txt` does not exist in the working directory, Baggie will create a new file `Baggie.txt`;"},{"lineNumber":286,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":287,"author":{"gitId":"baggiiiie"},"content":"Baggie updates `Baggie.txt` every time user exits the program by entering [Exit Command](#28-exit-command)"},{"lineNumber":288,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":289,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":290,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":291,"author":{"gitId":"baggiiiie"},"content":"## 5. Contributors"},{"lineNumber":292,"author":{"gitId":"baggiiiie"},"content":"   - [baggiiiie](https://github.com/baggiiiie)"}],"authorContributionMap":{"baggiiiie":284,"-":8}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"# Baggie User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"Baggie is an interactive task-manager. He is purely based on Command-Line Interface (CLI). With his help, you could be event more productive!"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":"## Getting Started"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":"## Table of Contents"},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":"  * [1. Before Start](#1-before-start)"},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":"  * [2. Features](#2-features)"},{"lineNumber":9,"author":{"gitId":"baggiiiie"},"content":"    + [2.1 Help Menu](#21-help-menu)"},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":"    + [2.2 Add Task](#22-add-task)"},{"lineNumber":11,"author":{"gitId":"baggiiiie"},"content":"      - [Deadline Task](#deadline-task)"},{"lineNumber":12,"author":{"gitId":"baggiiiie"},"content":"      - [Event Task](#event-task)"},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"      - [Dodo Task](#todo-task)"},{"lineNumber":14,"author":{"gitId":"baggiiiie"},"content":"    + [2.3 Print Task List](#23-print-task-list)"},{"lineNumber":15,"author":{"gitId":"baggiiiie"},"content":"    + [2.4 Mark As Done](#24-mark-as-done)"},{"lineNumber":16,"author":{"gitId":"baggiiiie"},"content":"    + [2.5 Delete Tasks](#25-delete-tasks)"},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":"    + [2.6 Find Task On A date](#26-find-task-on-a-date)"},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":"    + [2.7 Find Task With Keyword](#27-find-task-with-keyword)"},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"    + [2.8 Exit Command](#28-exit-command)"},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":"    + [2.9 Invalid Command](#29-invalid-command)"},{"lineNumber":21,"author":{"gitId":"baggiiiie"},"content":"  * [3. Command Overview](#3-command-overview)"},{"lineNumber":22,"author":{"gitId":"baggiiiie"},"content":"  * [4. Storage](#4-storage)"},{"lineNumber":23,"author":{"gitId":"baggiiiie"},"content":"  * [5. Contributors](#5-contributors)"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"baggiiiie"},"content":"## 1. Before Start"},{"lineNumber":27,"author":{"gitId":"baggiiiie"},"content":"- Ensure you have Java 11 or above installed in your Computer."},{"lineNumber":28,"author":{"gitId":"baggiiiie"},"content":"- Download the latest version of `Baggie.jar` file from [here](https://github.com/baggiiiie/ip/releases/tag/v2.0)."},{"lineNumber":29,"author":{"gitId":"baggiiiie"},"content":"- Move the `Baggie.jar` file to the folder of your choice."},{"lineNumber":30,"author":{"gitId":"baggiiiie"},"content":"- Open terminal(For MacOS)/command prompt(For Windows) and change working directory to that folder. "},{"lineNumber":31,"author":{"gitId":"baggiiiie"},"content":"- Launch *Baggie* by entering *java -jar ip.jar*."},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"baggiiiie"},"content":"**Following is the Welcome Page if Baggie is running successfull**"},{"lineNumber":34,"author":{"gitId":"baggiiiie"},"content":"   ```"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  "},{"lineNumber":36,"author":{"gitId":"baggiiiie"},"content":"██████   █████   ██████   ██████  ██ ███████ "},{"lineNumber":37,"author":{"gitId":"baggiiiie"},"content":"██   ██ ██   ██ ██       ██       ██ ██      "},{"lineNumber":38,"author":{"gitId":"baggiiiie"},"content":"██████  ███████ ██   ███ ██   ███ ██ ██████ "},{"lineNumber":39,"author":{"gitId":"baggiiiie"},"content":"██   ██ ██   ██ ██    ██ ██    ██ ██ ██      "},{"lineNumber":40,"author":{"gitId":"baggiiiie"},"content":"██████  ██   ██  ██████   ██████  ██ ███████ "},{"lineNumber":41,"author":{"gitId":"baggiiiie"},"content":"____________________________________________________________"},{"lineNumber":42,"author":{"gitId":"baggiiiie"},"content":" Hello! I\u0027m Baggie"},{"lineNumber":43,"author":{"gitId":"baggiiiie"},"content":" Type \u0027help\u0027 to see what i could do for you"},{"lineNumber":44,"author":{"gitId":"baggiiiie"},"content":"____________________________________________________________"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"baggiiiie"},"content":"   ```"},{"lineNumber":47,"author":{"gitId":"baggiiiie"},"content":"## 2. Features"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"baggiiiie"},"content":"### 2.1 Help Menu "},{"lineNumber":50,"author":{"gitId":"baggiiiie"},"content":"This command prints a help menu for the user."},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"baggiiiie"},"content":"Format: `help`"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"baggiiiie"},"content":"Example: `help`"},{"lineNumber":55,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":56,"author":{"gitId":"baggiiiie"},"content":"Expected Output:"},{"lineNumber":57,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":58,"author":{"gitId":"baggiiiie"},"content":" Here\u0027s what I could do for you ^_^"},{"lineNumber":59,"author":{"gitId":"baggiiiie"},"content":" help: print help menu"},{"lineNumber":60,"author":{"gitId":"baggiiiie"},"content":" list: see saved tasks in the list"},{"lineNumber":61,"author":{"gitId":"baggiiiie"},"content":" done: mark a task in the list as done"},{"lineNumber":62,"author":{"gitId":"baggiiiie"},"content":" delete: delete a task from the list"},{"lineNumber":63,"author":{"gitId":"baggiiiie"},"content":" date: search saved tasks on a specific day"},{"lineNumber":64,"author":{"gitId":"baggiiiie"},"content":" find: search saved tasks by keywords"},{"lineNumber":65,"author":{"gitId":"baggiiiie"},"content":" bye: exit Baggie"},{"lineNumber":66,"author":{"gitId":"baggiiiie"},"content":" how to add tasks into the list:"},{"lineNumber":67,"author":{"gitId":"baggiiiie"},"content":" \ttodo-\u003e format: todo [task]"},{"lineNumber":68,"author":{"gitId":"baggiiiie"},"content":" \tevent-\u003e format: event [task] / [time]"},{"lineNumber":69,"author":{"gitId":"baggiiiie"},"content":" \tdeadline-\u003e format: deadline [task] / [time]"},{"lineNumber":70,"author":{"gitId":"baggiiiie"},"content":" \t[tip: enter date as YYYY-MM-DD to help Baggie understand better!]"},{"lineNumber":71,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":72,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":73,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":74,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":75,"author":{"gitId":"baggiiiie"},"content":"### 2.2 Add Task "},{"lineNumber":76,"author":{"gitId":"baggiiiie"},"content":"This command add a task into task list for the user."},{"lineNumber":77,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":78,"author":{"gitId":"baggiiiie"},"content":"#### Deadline Task"},{"lineNumber":79,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":80,"author":{"gitId":"baggiiiie"},"content":"Format: `deadline [task description] / [YYYY-MM-DD]`"},{"lineNumber":81,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":82,"author":{"gitId":"baggiiiie"},"content":"Example: `deadlilne submit UG / 2021-03-05`"},{"lineNumber":83,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":84,"author":{"gitId":"baggiiiie"},"content":"Expected Output:"},{"lineNumber":85,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":86,"author":{"gitId":"baggiiiie"},"content":" Task added! ^_^"},{"lineNumber":87,"author":{"gitId":"baggiiiie"},"content":" 5: [D] [-] submit UG (by: Mar 5 2021)"},{"lineNumber":88,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":89,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":90,"author":{"gitId":"baggiiiie"},"content":"Expected output when date is not in the right format:"},{"lineNumber":91,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":92,"author":{"gitId":"baggiiiie"},"content":" Task added! ^_^"},{"lineNumber":93,"author":{"gitId":"baggiiiie"},"content":" 5: [D] [-] submit UG (by: 2021 03 05)"},{"lineNumber":94,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":95,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":96,"author":{"gitId":"baggiiiie"},"content":"#### Event Task"},{"lineNumber":97,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":98,"author":{"gitId":"baggiiiie"},"content":"Format: `event [task description] / [YYYY-MM-DD]`"},{"lineNumber":99,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":100,"author":{"gitId":"baggiiiie"},"content":"Example: `event CNY dinner / 2021-02-11`"},{"lineNumber":101,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":102,"author":{"gitId":"baggiiiie"},"content":"Expected Output:"},{"lineNumber":103,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":104,"author":{"gitId":"baggiiiie"},"content":" Task added! ^_^"},{"lineNumber":105,"author":{"gitId":"baggiiiie"},"content":" 5: [E] [-] event CNY dinner (at: Feb 11 2021)"},{"lineNumber":106,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":107,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":108,"author":{"gitId":"baggiiiie"},"content":"Expected output when date is not in the right format:"},{"lineNumber":109,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":110,"author":{"gitId":"baggiiiie"},"content":" Task added! ^_^"},{"lineNumber":111,"author":{"gitId":"baggiiiie"},"content":" 5: [E] [-] event CNY dinner (at: 2021 02 11)"},{"lineNumber":112,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":113,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":114,"author":{"gitId":"baggiiiie"},"content":"#### Todo Task"},{"lineNumber":115,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":116,"author":{"gitId":"baggiiiie"},"content":"Format: `todo [task description]`"},{"lineNumber":117,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":118,"author":{"gitId":"baggiiiie"},"content":"Example: `todo submit UG`"},{"lineNumber":119,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":120,"author":{"gitId":"baggiiiie"},"content":"Expected Output:"},{"lineNumber":121,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":122,"author":{"gitId":"baggiiiie"},"content":" Task added! ^_^"},{"lineNumber":123,"author":{"gitId":"baggiiiie"},"content":" 5: [T] [-] submit UG"},{"lineNumber":124,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":125,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":126,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":127,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":128,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":129,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":130,"author":{"gitId":"baggiiiie"},"content":"### 2.3 Print Task List "},{"lineNumber":131,"author":{"gitId":"baggiiiie"},"content":"This command prints a task list for the user."},{"lineNumber":132,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":133,"author":{"gitId":"baggiiiie"},"content":"Format: `list`"},{"lineNumber":134,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":135,"author":{"gitId":"baggiiiie"},"content":"Example: `list`"},{"lineNumber":136,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":137,"author":{"gitId":"baggiiiie"},"content":"Expected output when there is no task in the list:"},{"lineNumber":138,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":139,"author":{"gitId":"baggiiiie"},"content":"  List is empty :o"},{"lineNumber":140,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":141,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":142,"author":{"gitId":"baggiiiie"},"content":"Expected output when there are tasks in the list:"},{"lineNumber":143,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":144,"author":{"gitId":"baggiiiie"},"content":" 1: [D] [X] math tutorial (by: Feb 27 2021)"},{"lineNumber":145,"author":{"gitId":"baggiiiie"},"content":" 2: [T] [-] submit UG"},{"lineNumber":146,"author":{"gitId":"baggiiiie"},"content":" 3: [E] [-] CNY dinner (at: 5pm)"},{"lineNumber":147,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":148,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":149,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":150,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":151,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":152,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":153,"author":{"gitId":"baggiiiie"},"content":"### 2.4 Mark As Done "},{"lineNumber":154,"author":{"gitId":"baggiiiie"},"content":"This command marks a task in the list as done."},{"lineNumber":155,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":156,"author":{"gitId":"baggiiiie"},"content":"Format: `done [index]`"},{"lineNumber":157,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":158,"author":{"gitId":"baggiiiie"},"content":"Example: `done 1`"},{"lineNumber":159,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":160,"author":{"gitId":"baggiiiie"},"content":"Expected output when the task is in the list:"},{"lineNumber":161,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":162,"author":{"gitId":"baggiiiie"},"content":" Yay! This task is done!"},{"lineNumber":163,"author":{"gitId":"baggiiiie"},"content":" 5: [D] [X] submit UG (by: Mar 5 2021)"},{"lineNumber":164,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":165,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":166,"author":{"gitId":"baggiiiie"},"content":"Expected output when the task is not in the list:"},{"lineNumber":167,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":168,"author":{"gitId":"baggiiiie"},"content":" You don\u0027t have Task 5 in your list ^_^ "},{"lineNumber":169,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":170,"author":{"gitId":"baggiiiie"},"content":"Expected output when the task is already done:"},{"lineNumber":171,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":172,"author":{"gitId":"baggiiiie"},"content":"The task is already done ^_^"},{"lineNumber":173,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":174,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":175,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":176,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":177,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":178,"author":{"gitId":"baggiiiie"},"content":"### 2.5 Delete Tasks "},{"lineNumber":179,"author":{"gitId":"baggiiiie"},"content":"This command deletes a task from list for the user."},{"lineNumber":180,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":181,"author":{"gitId":"baggiiiie"},"content":"Format: `delete [index]`"},{"lineNumber":182,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":183,"author":{"gitId":"baggiiiie"},"content":"Example: `delete 5`"},{"lineNumber":184,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":185,"author":{"gitId":"baggiiiie"},"content":"Expected output when the task is in the list:"},{"lineNumber":186,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":187,"author":{"gitId":"baggiiiie"},"content":" 5: [D] [X] submit UG (by: Mar 5 2021)"},{"lineNumber":188,"author":{"gitId":"baggiiiie"},"content":" Yay! This task is deleted!"},{"lineNumber":189,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":190,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":191,"author":{"gitId":"baggiiiie"},"content":"Expected output when the task is not in the list:"},{"lineNumber":192,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":193,"author":{"gitId":"baggiiiie"},"content":" You don\u0027t have Task 5 in your list ^_^ "},{"lineNumber":194,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":195,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":196,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":197,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":198,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":199,"author":{"gitId":"baggiiiie"},"content":"### 2.6 Find Task On A date "},{"lineNumber":200,"author":{"gitId":"baggiiiie"},"content":"This command finds tasks on a specific date for the user."},{"lineNumber":201,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":202,"author":{"gitId":"baggiiiie"},"content":"Format: `date [YYYY-MM-DD]`"},{"lineNumber":203,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":204,"author":{"gitId":"baggiiiie"},"content":"Example: `date 2021-03-05`"},{"lineNumber":205,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":206,"author":{"gitId":"baggiiiie"},"content":"Expected Output:"},{"lineNumber":207,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":208,"author":{"gitId":"baggiiiie"},"content":" 4. [D] [-] submit UG (by: Mar 5 2021)"},{"lineNumber":209,"author":{"gitId":"baggiiiie"},"content":" 6. [E] [-] math tutorial (at: Mar 5 2021)"},{"lineNumber":210,"author":{"gitId":"baggiiiie"},"content":" There are 2 task(s)"},{"lineNumber":211,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":212,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":213,"author":{"gitId":"baggiiiie"},"content":"Expected output when the date is not in the right format:"},{"lineNumber":214,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":215,"author":{"gitId":"baggiiiie"},"content":" Baggie could find any tasks related to 2021 03 05"},{"lineNumber":216,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":217,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":218,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":219,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":220,"author":{"gitId":"baggiiiie"},"content":"### 2.7 Find Task With Keyword "},{"lineNumber":221,"author":{"gitId":"baggiiiie"},"content":"This command finds tasks containing the keyword for the user."},{"lineNumber":222,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":223,"author":{"gitId":"baggiiiie"},"content":"Format: `keyword [keyword]`"},{"lineNumber":224,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":225,"author":{"gitId":"baggiiiie"},"content":"Example: `keyword math`"},{"lineNumber":226,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":227,"author":{"gitId":"baggiiiie"},"content":"Expected Output:"},{"lineNumber":228,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":229,"author":{"gitId":"baggiiiie"},"content":"5. [E] [-] math tutorial (at: Mar 5 2021)"},{"lineNumber":230,"author":{"gitId":"baggiiiie"},"content":"6. [T] [-] math HW2"},{"lineNumber":231,"author":{"gitId":"baggiiiie"},"content":"There are 2 task(s)"},{"lineNumber":232,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":233,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":234,"author":{"gitId":"baggiiiie"},"content":"Expected output when there is no task containing keyword in the list:"},{"lineNumber":235,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":236,"author":{"gitId":"baggiiiie"},"content":" Baggie could find any tasks related to math"},{"lineNumber":237,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":238,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":239,"author":{"gitId":"baggiiiie"},"content":"### 2.8 Exit Command"},{"lineNumber":240,"author":{"gitId":"baggiiiie"},"content":"This command exits the programm for the user."},{"lineNumber":241,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":242,"author":{"gitId":"baggiiiie"},"content":"Format: `bye`"},{"lineNumber":243,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":244,"author":{"gitId":"baggiiiie"},"content":"Example: `bye`"},{"lineNumber":245,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":246,"author":{"gitId":"baggiiiie"},"content":"Expected Output:"},{"lineNumber":247,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":248,"author":{"gitId":"baggiiiie"},"content":" File saved!"},{"lineNumber":249,"author":{"gitId":"baggiiiie"},"content":" Bye! Hope to see you again soon!"},{"lineNumber":250,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":251,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":252,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":253,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":254,"author":{"gitId":"baggiiiie"},"content":"### 2.9 Invalid Command"},{"lineNumber":255,"author":{"gitId":"baggiiiie"},"content":"Baggie shows error message."},{"lineNumber":256,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":257,"author":{"gitId":"baggiiiie"},"content":"Example: `quit`"},{"lineNumber":258,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":259,"author":{"gitId":"baggiiiie"},"content":"Expected Output:"},{"lineNumber":260,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":261,"author":{"gitId":"baggiiiie"},"content":" Baggie doesn\u0027t know what to do with the command D:"},{"lineNumber":262,"author":{"gitId":"baggiiiie"},"content":"```"},{"lineNumber":263,"author":{"gitId":"baggiiiie"},"content":"## 3. Command Overview"},{"lineNumber":264,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":265,"author":{"gitId":"baggiiiie"},"content":"\u0026nbsp;"},{"lineNumber":266,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":267,"author":{"gitId":"baggiiiie"},"content":"| Command | Format | Example |"},{"lineNumber":268,"author":{"gitId":"baggiiiie"},"content":"|:-------:|:----------:|:-------------------:|"},{"lineNumber":269,"author":{"gitId":"baggiiiie"},"content":"| Help Menu|`help`|`help`|"},{"lineNumber":270,"author":{"gitId":"baggiiiie"},"content":"| Print List|`list`|`list`|"},{"lineNumber":271,"author":{"gitId":"baggiiiie"},"content":"| Mark As Done|`done [index]`|`done 1`|"},{"lineNumber":272,"author":{"gitId":"baggiiiie"},"content":"| Delete Task|`delete [index]`|`delete 1`|"},{"lineNumber":273,"author":{"gitId":"baggiiiie"},"content":"| Find With Date|`date [YYYY-MM-DD]`|`date 2021-03-05`|"},{"lineNumber":274,"author":{"gitId":"baggiiiie"},"content":"| Find With Keyword|`keyword [keyword]`|`keyword math`|"},{"lineNumber":275,"author":{"gitId":"baggiiiie"},"content":"| Add Deadline Task|`deadline [task]/[time]`|`deadline submit UG/2021-03-05`|"},{"lineNumber":276,"author":{"gitId":"baggiiiie"},"content":"| Add Event Task|`event [task]/[time]`|`event CNY dinner/2021-02-11`|"},{"lineNumber":277,"author":{"gitId":"baggiiiie"},"content":"| Add Todo Task|`todo [task]`|`todo submit UG`|"},{"lineNumber":278,"author":{"gitId":"baggiiiie"},"content":"| Exit Program|`bye`|`bye`|"},{"lineNumber":279,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":280,"author":{"gitId":"baggiiiie"},"content":"\u0026nbsp;"},{"lineNumber":281,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":282,"author":{"gitId":"baggiiiie"},"content":" "},{"lineNumber":283,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":284,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":285,"author":{"gitId":"baggiiiie"},"content":"## 4. Storage"},{"lineNumber":286,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":287,"author":{"gitId":"baggiiiie"},"content":"If File  `Baggie.txt` exists in the working directory, Baggie will read from the file and load the saved tasks into task list;"},{"lineNumber":288,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":289,"author":{"gitId":"baggiiiie"},"content":"If File  `Baggie.txt` does not exist in the working directory, Baggie will create a new file `Baggie.txt`."},{"lineNumber":290,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":291,"author":{"gitId":"baggiiiie"},"content":"Baggie updates `Baggie.txt` every time user exits the program by entering [Exit Command](#28-exit-command)."},{"lineNumber":292,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":293,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":294,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":295,"author":{"gitId":"baggiiiie"},"content":"## 5. Contributors"},{"lineNumber":296,"author":{"gitId":"baggiiiie"},"content":"   - [baggiiiie](https://github.com/baggiiiie)"}],"authorContributionMap":{"baggiiiie":286,"-":10}},{"path":"src/main/java/Baggie/Baggie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package Baggie;"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"import Baggie.FileHandling.FileHandler;"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Parser.ProcessInput;"},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Task.*;"},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":"import Baggie.UI.PrintMessages;"},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"baggiiiie"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":11,"author":{"gitId":"baggiiiie"},"content":"public class Baggie {"},{"lineNumber":12,"author":{"gitId":"baggiiiie"},"content":"    public static String inputString;"},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"    public static int taskCount \u003d 0;"},{"lineNumber":14,"author":{"gitId":"baggiiiie"},"content":"    public static List\u003cTask\u003e lists \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":16,"author":{"gitId":"baggiiiie"},"content":"    public static void main(String[] args) {"},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":"        PrintMessages.greetings();"},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":"        FileHandler.readFile();"},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"        ProcessInput.processCommand();"},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":"        FileHandler.writeFile();"},{"lineNumber":21,"author":{"gitId":"baggiiiie"},"content":"        PrintMessages.goodbye();"},{"lineNumber":22,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"baggiiiie"},"content":"}"}],"authorContributionMap":{"baggiiiie":23}},{"path":"src/main/java/Baggie/Commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package Baggie.Commands;"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Baggie;"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":"import Baggie.UI.PrintMessages;"},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Task.DeadlineTask;"},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":"import static Baggie.UI.TEXT.TIME_DIVIDER;"},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":9,"author":{"gitId":"baggiiiie"},"content":"public class AddDeadlineCommand extends Baggie {"},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"baggiiiie"},"content":"     * Adds Deadline Task into the list,"},{"lineNumber":12,"author":{"gitId":"baggiiiie"},"content":"     * Shows error message if theres no time input"},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"     * @param taskDescription"},{"lineNumber":14,"author":{"gitId":"baggiiiie"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"baggiiiie"},"content":"    public static void execute(String taskDescription) {"},{"lineNumber":16,"author":{"gitId":"baggiiiie"},"content":"        if (taskDescription.contains(TIME_DIVIDER)) {"},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":"            String[] taskAndTime \u003d taskDescription.split(TIME_DIVIDER, 2);"},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":"            lists.add(new DeadlineTask(taskAndTime[0].trim(), taskAndTime[1].trim()));"},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"            PrintMessages.taskAddedText();"},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":"            taskCount++;"},{"lineNumber":21,"author":{"gitId":"baggiiiie"},"content":"        } else {"},{"lineNumber":22,"author":{"gitId":"baggiiiie"},"content":"            PrintMessages.taskWithoutTime();"},{"lineNumber":23,"author":{"gitId":"baggiiiie"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"baggiiiie"},"content":"}"}],"authorContributionMap":{"baggiiiie":25}},{"path":"src/main/java/Baggie/Commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package Baggie.Commands;"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Baggie;"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":"import Baggie.UI.PrintMessages;"},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Task.EventTask;"},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":"import static Baggie.UI.TEXT.TIME_DIVIDER;"},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":9,"author":{"gitId":"baggiiiie"},"content":"public class AddEventCommand extends Baggie {"},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"baggiiiie"},"content":"     * Adds Event Task into the list"},{"lineNumber":12,"author":{"gitId":"baggiiiie"},"content":"     * Shows error if theres no time input"},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"     * @param taskDescription"},{"lineNumber":14,"author":{"gitId":"baggiiiie"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"baggiiiie"},"content":"    public static void execute(String taskDescription) {"},{"lineNumber":16,"author":{"gitId":"baggiiiie"},"content":"        if (taskDescription.contains(TIME_DIVIDER)) {"},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":"            String[] taskAndTime \u003d taskDescription.split(TIME_DIVIDER, 2);"},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":"            lists.add(new EventTask(taskAndTime[0].trim(), taskAndTime[1].trim()));"},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"            PrintMessages.taskAddedText();"},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":"            taskCount++;"},{"lineNumber":21,"author":{"gitId":"baggiiiie"},"content":"        } else {"},{"lineNumber":22,"author":{"gitId":"baggiiiie"},"content":"            PrintMessages.taskWithoutTime();"},{"lineNumber":23,"author":{"gitId":"baggiiiie"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"baggiiiie"},"content":"}"}],"authorContributionMap":{"baggiiiie":25}},{"path":"src/main/java/Baggie/Commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package Baggie.Commands;"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Baggie;"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Task.ToDoTask;"},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":"import Baggie.UI.PrintMessages;"},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":"public class AddTodoCommand extends Baggie {"},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"baggiiiie"},"content":"     * Adds Todo Task into the list"},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":"     * @param taskDescription"},{"lineNumber":11,"author":{"gitId":"baggiiiie"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"baggiiiie"},"content":"    public static void execute(String taskDescription) {"},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"        lists.add(new ToDoTask(taskDescription));"},{"lineNumber":14,"author":{"gitId":"baggiiiie"},"content":"        PrintMessages.taskAddedText();"},{"lineNumber":15,"author":{"gitId":"baggiiiie"},"content":"        taskCount++;"},{"lineNumber":16,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":"}"}],"authorContributionMap":{"baggiiiie":17}},{"path":"src/main/java/Baggie/Commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package Baggie.Commands;"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Baggie;"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":"import Baggie.UI.PrintMessages;"},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":"public class DeleteCommand extends Baggie {"},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":"     * Deletes a task"},{"lineNumber":9,"author":{"gitId":"baggiiiie"},"content":"     * @param deleteTask"},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"baggiiiie"},"content":"    public static void deleteTask(String deleteTask){"},{"lineNumber":12,"author":{"gitId":"baggiiiie"},"content":"        try {"},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"            int deleteTaskIndex \u003d Integer.parseInt(deleteTask) - 1;"},{"lineNumber":14,"author":{"gitId":"baggiiiie"},"content":"            if (deleteTaskIndex \u003c taskCount \u0026\u0026 deleteTaskIndex \u003e\u003d 0) {"},{"lineNumber":15,"author":{"gitId":"baggiiiie"},"content":"                PrintListCommand.printList(deleteTaskIndex, deleteTaskIndex + 1);"},{"lineNumber":16,"author":{"gitId":"baggiiiie"},"content":"                lists.remove(deleteTaskIndex);"},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":"                PrintMessages.taskDeleted();"},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":"                taskCount--;"},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"            } else {"},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":"                PrintMessages.exceedListLength(deleteTaskIndex + 1);"},{"lineNumber":21,"author":{"gitId":"baggiiiie"},"content":"            }"},{"lineNumber":22,"author":{"gitId":"baggiiiie"},"content":"        } catch (Exception e) {"},{"lineNumber":23,"author":{"gitId":"baggiiiie"},"content":"            PrintMessages.illegalInput();"},{"lineNumber":24,"author":{"gitId":"baggiiiie"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":26,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"baggiiiie"},"content":"}"}],"authorContributionMap":{"baggiiiie":27}},{"path":"src/main/java/Baggie/Commands/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package Baggie.Commands;"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Baggie;"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Exceptions.IllegalKeywordException;"},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":"import Baggie.UI.PrintMessages;"},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Task.Task;"},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"baggiiiie"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":11,"author":{"gitId":"baggiiiie"},"content":"import static Baggie.UI.TEXT.DATE_FORMAT;"},{"lineNumber":12,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"public class FindTaskCommand extends Baggie {"},{"lineNumber":14,"author":{"gitId":"baggiiiie"},"content":"    private static final String DOT \u003d \". \";"},{"lineNumber":15,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":16,"author":{"gitId":"baggiiiie"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":"     * Finds tasks on a specific date"},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":"     * Shows error if theres no task on the date"},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"     * @param date"},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"baggiiiie"},"content":"    public static void FindWithDate(String date) {"},{"lineNumber":22,"author":{"gitId":"baggiiiie"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"baggiiiie"},"content":"            int taskCount \u003d 0;"},{"lineNumber":24,"author":{"gitId":"baggiiiie"},"content":"            LocalDate parsedDate \u003d LocalDate.parse(date);"},{"lineNumber":25,"author":{"gitId":"baggiiiie"},"content":"            String formattedDate \u003d parsedDate.format(DateTimeFormatter.ofPattern(DATE_FORMAT));"},{"lineNumber":26,"author":{"gitId":"baggiiiie"},"content":"            for (Task task : lists) {"},{"lineNumber":27,"author":{"gitId":"baggiiiie"},"content":"                if (formattedDate.equals(task.getTaskTime())) {"},{"lineNumber":28,"author":{"gitId":"baggiiiie"},"content":"                    System.out.println(lists.indexOf(task) + 1 + DOT + task.toString());"},{"lineNumber":29,"author":{"gitId":"baggiiiie"},"content":"                    taskCount++;"},{"lineNumber":30,"author":{"gitId":"baggiiiie"},"content":"                }"},{"lineNumber":31,"author":{"gitId":"baggiiiie"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"baggiiiie"},"content":"            PrintMessages.printTaskCount(taskCount);"},{"lineNumber":33,"author":{"gitId":"baggiiiie"},"content":"        } catch (Exception e) {"},{"lineNumber":34,"author":{"gitId":"baggiiiie"},"content":"            PrintMessages.cannotFind(date);"},{"lineNumber":35,"author":{"gitId":"baggiiiie"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":38,"author":{"gitId":"baggiiiie"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"baggiiiie"},"content":"     * Finds tasks with a specific keyword"},{"lineNumber":40,"author":{"gitId":"baggiiiie"},"content":"     * Shows error if theres no task containing the keyword"},{"lineNumber":41,"author":{"gitId":"baggiiiie"},"content":"     * @param keyword"},{"lineNumber":42,"author":{"gitId":"baggiiiie"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"baggiiiie"},"content":"    public static void FindWithKeyword(String keyword) {"},{"lineNumber":44,"author":{"gitId":"baggiiiie"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"baggiiiie"},"content":"            boolean found \u003d false;"},{"lineNumber":46,"author":{"gitId":"baggiiiie"},"content":"            int taskCount \u003d 0;"},{"lineNumber":47,"author":{"gitId":"baggiiiie"},"content":"            for (Task task : lists) {"},{"lineNumber":48,"author":{"gitId":"baggiiiie"},"content":"                if (task.getTask().contains(keyword)) {"},{"lineNumber":49,"author":{"gitId":"baggiiiie"},"content":"                    System.out.println(lists.indexOf(task) + 1 + DOT + task.toString());"},{"lineNumber":50,"author":{"gitId":"baggiiiie"},"content":"                    found \u003d true;"},{"lineNumber":51,"author":{"gitId":"baggiiiie"},"content":"                    taskCount++;"},{"lineNumber":52,"author":{"gitId":"baggiiiie"},"content":"                }"},{"lineNumber":53,"author":{"gitId":"baggiiiie"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"baggiiiie"},"content":"            PrintMessages.printTaskCount(taskCount);"},{"lineNumber":55,"author":{"gitId":"baggiiiie"},"content":"            if (!found) {"},{"lineNumber":56,"author":{"gitId":"baggiiiie"},"content":"                throw new IllegalKeywordException();"},{"lineNumber":57,"author":{"gitId":"baggiiiie"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"baggiiiie"},"content":"        } catch (IllegalKeywordException e) {"},{"lineNumber":59,"author":{"gitId":"baggiiiie"},"content":"            PrintMessages.cannotFind(keyword);"},{"lineNumber":60,"author":{"gitId":"baggiiiie"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"baggiiiie"},"content":"}"}],"authorContributionMap":{"baggiiiie":62}},{"path":"src/main/java/Baggie/Commands/MarkAsDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package Baggie.Commands;"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Baggie;"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":"import Baggie.UI.PrintMessages;"},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":"public class MarkAsDoneCommand extends Baggie {"},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":"     * Takes the index from input"},{"lineNumber":9,"author":{"gitId":"baggiiiie"},"content":"     * and marks the task with the index as done"},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":"     * @param doneTask"},{"lineNumber":11,"author":{"gitId":"baggiiiie"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"baggiiiie"},"content":"    public static void markAsDone(String doneTask){"},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"baggiiiie"},"content":"            int doneTaskIndex \u003d Integer.parseInt(doneTask) - 1;"},{"lineNumber":15,"author":{"gitId":"baggiiiie"},"content":"            if (doneTaskIndex \u003c taskCount \u0026\u0026 doneTaskIndex \u003e\u003d 0) {"},{"lineNumber":16,"author":{"gitId":"baggiiiie"},"content":"                if (!lists.get(doneTaskIndex).isDone()) {"},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":"                    lists.get(doneTaskIndex).markAsDone();"},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":"                    PrintMessages.taskDone();"},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"                    PrintListCommand.printList(doneTaskIndex, doneTaskIndex + 1);"},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":"                } else {"},{"lineNumber":21,"author":{"gitId":"baggiiiie"},"content":"                    PrintMessages.taskAlreadyDone();"},{"lineNumber":22,"author":{"gitId":"baggiiiie"},"content":"                }"},{"lineNumber":23,"author":{"gitId":"baggiiiie"},"content":"            } else {"},{"lineNumber":24,"author":{"gitId":"baggiiiie"},"content":"                PrintMessages.exceedListLength(doneTaskIndex + 1);"},{"lineNumber":25,"author":{"gitId":"baggiiiie"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"baggiiiie"},"content":"        } catch (Exception e) {"},{"lineNumber":27,"author":{"gitId":"baggiiiie"},"content":"            PrintMessages.illegalInput();"},{"lineNumber":28,"author":{"gitId":"baggiiiie"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":30,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"baggiiiie"},"content":"}"}],"authorContributionMap":{"baggiiiie":31}},{"path":"src/main/java/Baggie/Commands/PrintListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package Baggie.Commands;"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Baggie;"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":"import Baggie.UI.PrintMessages;"},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":"import static Baggie.UI.TEXT.*;"},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":"public class PrintListCommand extends Baggie {"},{"lineNumber":9,"author":{"gitId":"baggiiiie"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":"     * Prints list from start index to end index"},{"lineNumber":11,"author":{"gitId":"baggiiiie"},"content":"     * Prints both list and a single task"},{"lineNumber":12,"author":{"gitId":"baggiiiie"},"content":"     * @param startIndex"},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"     * @param endIndex"},{"lineNumber":14,"author":{"gitId":"baggiiiie"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"baggiiiie"},"content":"    public static void printList(int startIndex, int endIndex) {"},{"lineNumber":16,"author":{"gitId":"baggiiiie"},"content":"        if (endIndex \u003d\u003d 0) {"},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":"            System.out.println(LIST_EMPTY);"},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":"        } else {"},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"            for(int i \u003d startIndex; i \u003c endIndex; ++i) {"},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":"                System.out.println(SPACE + (i + 1) + SEMICOLON + lists.get(i).toString());"},{"lineNumber":21,"author":{"gitId":"baggiiiie"},"content":"            }"},{"lineNumber":22,"author":{"gitId":"baggiiiie"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"baggiiiie"},"content":"}"}],"authorContributionMap":{"baggiiiie":24}},{"path":"src/main/java/Baggie/Exceptions/IllegalKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package Baggie.Exceptions;"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"public class IllegalKeywordException extends Exception {"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":"}"}],"authorContributionMap":{"baggiiiie":4}},{"path":"src/main/java/Baggie/FileHandling/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package Baggie.FileHandling;"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Baggie;"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Commands.PrintListCommand;"},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Task.DeadlineTask;"},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Task.EventTask;"},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Task.Task;"},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Task.ToDoTask;"},{"lineNumber":9,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitId":"baggiiiie"},"content":"import java.io.FileWriter;"},{"lineNumber":12,"author":{"gitId":"baggiiiie"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":15,"author":{"gitId":"baggiiiie"},"content":"import static Baggie.UI.TEXT.*;"},{"lineNumber":16,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":"public class FileHandler extends Baggie {"},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":"     * Loads tasks from file"},{"lineNumber":21,"author":{"gitId":"baggiiiie"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"baggiiiie"},"content":"    public static void readFile(){"},{"lineNumber":23,"author":{"gitId":"baggiiiie"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"baggiiiie"},"content":"            String localDir \u003d System.getProperty(USER_DIRECTORY); //get the path of current directory"},{"lineNumber":25,"author":{"gitId":"baggiiiie"},"content":"            File file \u003d new File(localDir + File.separator + FILE_NAME);"},{"lineNumber":26,"author":{"gitId":"baggiiiie"},"content":"            if (file.createNewFile()) {"},{"lineNumber":27,"author":{"gitId":"baggiiiie"},"content":"                //create new file if file does not exist"},{"lineNumber":28,"author":{"gitId":"baggiiiie"},"content":"                System.out.println( A_NEW_FILE + file.getName() + HAS_BEEN_CREATED + IT_COULD_BE_FOUND + file.getAbsolutePath());"},{"lineNumber":29,"author":{"gitId":"baggiiiie"},"content":"            } else {"},{"lineNumber":30,"author":{"gitId":"baggiiiie"},"content":"                System.out.println( READ_FILE + file.getName()+ \"] ^_^\\n\" + IT_COULD_BE_FOUND + file.getAbsolutePath());"},{"lineNumber":31,"author":{"gitId":"baggiiiie"},"content":"                Scanner readingFile \u003d new Scanner(file);"},{"lineNumber":32,"author":{"gitId":"baggiiiie"},"content":"                while (readingFile.hasNextLine()) {"},{"lineNumber":33,"author":{"gitId":"baggiiiie"},"content":"                    String line \u003d readingFile.nextLine();"},{"lineNumber":34,"author":{"gitId":"baggiiiie"},"content":"                    String[] parts \u003d line.split(\"\\\\|\", 4);"},{"lineNumber":35,"author":{"gitId":"baggiiiie"},"content":"                    String type \u003d parts[0];"},{"lineNumber":36,"author":{"gitId":"baggiiiie"},"content":"                    String isDone \u003d parts[1];"},{"lineNumber":37,"author":{"gitId":"baggiiiie"},"content":"                    String task \u003d parts[2];"},{"lineNumber":38,"author":{"gitId":"baggiiiie"},"content":"                    Task taskInFile \u003d new Task(task);"},{"lineNumber":39,"author":{"gitId":"baggiiiie"},"content":"                    switch (type) {"},{"lineNumber":40,"author":{"gitId":"baggiiiie"},"content":"                    case TASK_TYPE_TODO:"},{"lineNumber":41,"author":{"gitId":"baggiiiie"},"content":"                    taskInFile \u003d new ToDoTask(task);"},{"lineNumber":42,"author":{"gitId":"baggiiiie"},"content":"                    lists.add(taskInFile);"},{"lineNumber":43,"author":{"gitId":"baggiiiie"},"content":"                    break;"},{"lineNumber":44,"author":{"gitId":"baggiiiie"},"content":"                    case TASK_TYPE_DEADLINE:"},{"lineNumber":45,"author":{"gitId":"baggiiiie"},"content":"                    String time \u003d parts[3];"},{"lineNumber":46,"author":{"gitId":"baggiiiie"},"content":"                    taskInFile \u003d new DeadlineTask(task, time);"},{"lineNumber":47,"author":{"gitId":"baggiiiie"},"content":"                    lists.add(taskInFile);"},{"lineNumber":48,"author":{"gitId":"baggiiiie"},"content":"                    break;"},{"lineNumber":49,"author":{"gitId":"baggiiiie"},"content":"                    case TASK_TYPE_EVENT:"},{"lineNumber":50,"author":{"gitId":"baggiiiie"},"content":"                    time \u003d parts[3];"},{"lineNumber":51,"author":{"gitId":"baggiiiie"},"content":"                    taskInFile \u003d new EventTask(task, time);"},{"lineNumber":52,"author":{"gitId":"baggiiiie"},"content":"                    lists.add(taskInFile);"},{"lineNumber":53,"author":{"gitId":"baggiiiie"},"content":"                    break;"},{"lineNumber":54,"author":{"gitId":"baggiiiie"},"content":"                    }"},{"lineNumber":55,"author":{"gitId":"baggiiiie"},"content":"                    if (isDone.equals(TRUE)) {"},{"lineNumber":56,"author":{"gitId":"baggiiiie"},"content":"                        taskInFile.markAsDone();"},{"lineNumber":57,"author":{"gitId":"baggiiiie"},"content":"                    }"},{"lineNumber":58,"author":{"gitId":"baggiiiie"},"content":"                }"},{"lineNumber":59,"author":{"gitId":"baggiiiie"},"content":"                taskCount \u003d lists.size();"},{"lineNumber":60,"author":{"gitId":"baggiiiie"},"content":"                //prints list after copying every task from file"},{"lineNumber":61,"author":{"gitId":"baggiiiie"},"content":"                PrintListCommand.printList(0, taskCount);"},{"lineNumber":62,"author":{"gitId":"baggiiiie"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"baggiiiie"},"content":"        } catch (IOException e) {"},{"lineNumber":64,"author":{"gitId":"baggiiiie"},"content":"            e.printStackTrace();"},{"lineNumber":65,"author":{"gitId":"baggiiiie"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":68,"author":{"gitId":"baggiiiie"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"baggiiiie"},"content":"     * Copies list to file"},{"lineNumber":70,"author":{"gitId":"baggiiiie"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"baggiiiie"},"content":"    public static void writeFile(){"},{"lineNumber":72,"author":{"gitId":"baggiiiie"},"content":"        try {"},{"lineNumber":73,"author":{"gitId":"baggiiiie"},"content":"            String localDir \u003d System.getProperty(USER_DIRECTORY);"},{"lineNumber":74,"author":{"gitId":"baggiiiie"},"content":"            FileWriter writer \u003d new FileWriter(localDir + File.separator + FILE_NAME ,false);"},{"lineNumber":75,"author":{"gitId":"baggiiiie"},"content":"            for (Task taskInList : lists) {"},{"lineNumber":76,"author":{"gitId":"baggiiiie"},"content":"                writer.write(taskInList.getTaskType() + DIVIDER + taskInList.isDone() + DIVIDER + taskInList.getTask().trim());"},{"lineNumber":77,"author":{"gitId":"baggiiiie"},"content":"                if (!(taskInList instanceof ToDoTask)) {"},{"lineNumber":78,"author":{"gitId":"baggiiiie"},"content":"                    //if it\u0027s a deadline task or event task, there\u0027s time info"},{"lineNumber":79,"author":{"gitId":"baggiiiie"},"content":"                    writer.write(DIVIDER + taskInList.getTaskTime().trim());"},{"lineNumber":80,"author":{"gitId":"baggiiiie"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"baggiiiie"},"content":"                writer.write(\"\\r\\n\");"},{"lineNumber":82,"author":{"gitId":"baggiiiie"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"baggiiiie"},"content":"            System.out.println(FILE_SAVED);"},{"lineNumber":84,"author":{"gitId":"baggiiiie"},"content":"            writer.close();"},{"lineNumber":85,"author":{"gitId":"baggiiiie"},"content":"        } catch (IOException e) {"},{"lineNumber":86,"author":{"gitId":"baggiiiie"},"content":"            e.printStackTrace();"},{"lineNumber":87,"author":{"gitId":"baggiiiie"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"baggiiiie"},"content":"}"}],"authorContributionMap":{"baggiiiie":89}},{"path":"src/main/java/Baggie/Parser/ProcessInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package Baggie.Parser;"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Commands.*;"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Baggie;"},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":"import Baggie.UI.PrintMessages;"},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":"import Baggie.UI.TEXT;"},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":"public class ProcessInput extends Baggie {"},{"lineNumber":11,"author":{"gitId":"baggiiiie"},"content":"    public static final String EXIT_COMMAND \u003d \"bye\";"},{"lineNumber":12,"author":{"gitId":"baggiiiie"},"content":"    public static final String LIST_COMMAND \u003d \"list\";"},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"    public static final String DONE_COMMAND \u003d \"done\";"},{"lineNumber":14,"author":{"gitId":"baggiiiie"},"content":"    public static final String DELETE_COMMAND \u003d \"delete\";"},{"lineNumber":15,"author":{"gitId":"baggiiiie"},"content":"    public static final String HELP_COMMAND \u003d \"help\";"},{"lineNumber":16,"author":{"gitId":"baggiiiie"},"content":"    public static final String KEYWORD_COMMAND \u003d \"keyword\";"},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":"    public static final String DATE_COMMAND \u003d \"date\";"},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":"    public static final String TODO_COMMAND \u003d \"todo\";"},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"    public static final String DEADLINE_COMMAND \u003d \"deadline\";"},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":"    public static final String EVENT_COMMAND \u003d \"event\";"},{"lineNumber":21,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":22,"author":{"gitId":"baggiiiie"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"baggiiiie"},"content":"     * Reads command input from user"},{"lineNumber":24,"author":{"gitId":"baggiiiie"},"content":"     * Switches to different tasks according to the first word"},{"lineNumber":25,"author":{"gitId":"baggiiiie"},"content":"     * Shows errors if the second word is invalid"},{"lineNumber":26,"author":{"gitId":"baggiiiie"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"baggiiiie"},"content":"    public static void processCommand(){"},{"lineNumber":28,"author":{"gitId":"baggiiiie"},"content":"        Scanner userInput \u003d new Scanner(System.in);"},{"lineNumber":29,"author":{"gitId":"baggiiiie"},"content":"        while(true) {"},{"lineNumber":30,"author":{"gitId":"baggiiiie"},"content":"            inputString \u003d userInput.nextLine().trim();"},{"lineNumber":31,"author":{"gitId":"baggiiiie"},"content":"            String[] inputStringSplit \u003d inputString.split(\" \", 2);"},{"lineNumber":32,"author":{"gitId":"baggiiiie"},"content":"            System.out.println(TEXT.LINE);"},{"lineNumber":33,"author":{"gitId":"baggiiiie"},"content":"            switch (inputStringSplit[0].toLowerCase()) {"},{"lineNumber":34,"author":{"gitId":"baggiiiie"},"content":"            case EXIT_COMMAND:"},{"lineNumber":35,"author":{"gitId":"baggiiiie"},"content":"                //ends program"},{"lineNumber":36,"author":{"gitId":"baggiiiie"},"content":"                return;"},{"lineNumber":37,"author":{"gitId":"baggiiiie"},"content":"            case DONE_COMMAND:"},{"lineNumber":38,"author":{"gitId":"baggiiiie"},"content":"                //marks a task as done"},{"lineNumber":39,"author":{"gitId":"baggiiiie"},"content":"                if (inputStringSplit.length \u003e 1) {"},{"lineNumber":40,"author":{"gitId":"baggiiiie"},"content":"                    //makes sure there\u0027s an index after \"done\", otherwise shows error"},{"lineNumber":41,"author":{"gitId":"baggiiiie"},"content":"                    MarkAsDoneCommand.markAsDone(inputStringSplit[1]);"},{"lineNumber":42,"author":{"gitId":"baggiiiie"},"content":"                } else {"},{"lineNumber":43,"author":{"gitId":"baggiiiie"},"content":"                    PrintMessages.noIndexInput();"},{"lineNumber":44,"author":{"gitId":"baggiiiie"},"content":"                }"},{"lineNumber":45,"author":{"gitId":"baggiiiie"},"content":"                break;"},{"lineNumber":46,"author":{"gitId":"baggiiiie"},"content":"            case DELETE_COMMAND:"},{"lineNumber":47,"author":{"gitId":"baggiiiie"},"content":"                //deletes a task"},{"lineNumber":48,"author":{"gitId":"baggiiiie"},"content":"                if (inputStringSplit.length \u003e 1) {"},{"lineNumber":49,"author":{"gitId":"baggiiiie"},"content":"                    DeleteCommand.deleteTask(inputStringSplit[1]);"},{"lineNumber":50,"author":{"gitId":"baggiiiie"},"content":"                } else {"},{"lineNumber":51,"author":{"gitId":"baggiiiie"},"content":"                    PrintMessages.noIndexInput();"},{"lineNumber":52,"author":{"gitId":"baggiiiie"},"content":"                }"},{"lineNumber":53,"author":{"gitId":"baggiiiie"},"content":"                break;"},{"lineNumber":54,"author":{"gitId":"baggiiiie"},"content":"            case LIST_COMMAND:"},{"lineNumber":55,"author":{"gitId":"baggiiiie"},"content":"                //shows list"},{"lineNumber":56,"author":{"gitId":"baggiiiie"},"content":"                PrintListCommand.printList(0, taskCount);"},{"lineNumber":57,"author":{"gitId":"baggiiiie"},"content":"                break;"},{"lineNumber":58,"author":{"gitId":"baggiiiie"},"content":"            case HELP_COMMAND:"},{"lineNumber":59,"author":{"gitId":"baggiiiie"},"content":"                //shows help menu"},{"lineNumber":60,"author":{"gitId":"baggiiiie"},"content":"                PrintMessages.helpMenu();"},{"lineNumber":61,"author":{"gitId":"baggiiiie"},"content":"                break;"},{"lineNumber":62,"author":{"gitId":"baggiiiie"},"content":"            case DATE_COMMAND:"},{"lineNumber":63,"author":{"gitId":"baggiiiie"},"content":"                //finds tasks on a date"},{"lineNumber":64,"author":{"gitId":"baggiiiie"},"content":"                if (inputStringSplit.length \u003e 1) {"},{"lineNumber":65,"author":{"gitId":"baggiiiie"},"content":"                    FindTaskCommand.FindWithDate(inputStringSplit[1]);"},{"lineNumber":66,"author":{"gitId":"baggiiiie"},"content":"                } else {"},{"lineNumber":67,"author":{"gitId":"baggiiiie"},"content":"                    PrintMessages.dateEmpty();"},{"lineNumber":68,"author":{"gitId":"baggiiiie"},"content":"                }"},{"lineNumber":69,"author":{"gitId":"baggiiiie"},"content":"                break;"},{"lineNumber":70,"author":{"gitId":"baggiiiie"},"content":"            case KEYWORD_COMMAND:"},{"lineNumber":71,"author":{"gitId":"baggiiiie"},"content":"                //finds tasks containing keyword"},{"lineNumber":72,"author":{"gitId":"baggiiiie"},"content":"                if (inputStringSplit.length \u003e 1) {"},{"lineNumber":73,"author":{"gitId":"baggiiiie"},"content":"                    FindTaskCommand.FindWithKeyword(inputStringSplit[1]);"},{"lineNumber":74,"author":{"gitId":"baggiiiie"},"content":"                } else {"},{"lineNumber":75,"author":{"gitId":"baggiiiie"},"content":"                    PrintMessages.keywordEmpty();"},{"lineNumber":76,"author":{"gitId":"baggiiiie"},"content":"                }"},{"lineNumber":77,"author":{"gitId":"baggiiiie"},"content":"                break;"},{"lineNumber":78,"author":{"gitId":"baggiiiie"},"content":"            case TODO_COMMAND:"},{"lineNumber":79,"author":{"gitId":"baggiiiie"},"content":"                if (inputStringSplit.length \u003e 1) {"},{"lineNumber":80,"author":{"gitId":"baggiiiie"},"content":"                    AddTodoCommand.execute(inputStringSplit[1]);"},{"lineNumber":81,"author":{"gitId":"baggiiiie"},"content":"                } else {"},{"lineNumber":82,"author":{"gitId":"baggiiiie"},"content":"                    PrintMessages.taskDescriptionEmpty();"},{"lineNumber":83,"author":{"gitId":"baggiiiie"},"content":"                }"},{"lineNumber":84,"author":{"gitId":"baggiiiie"},"content":"                break;"},{"lineNumber":85,"author":{"gitId":"baggiiiie"},"content":"            case DEADLINE_COMMAND:"},{"lineNumber":86,"author":{"gitId":"baggiiiie"},"content":"                if (inputStringSplit.length \u003e 1) {"},{"lineNumber":87,"author":{"gitId":"baggiiiie"},"content":"                    AddDeadlineCommand.execute(inputStringSplit[1]);"},{"lineNumber":88,"author":{"gitId":"baggiiiie"},"content":"                } else {"},{"lineNumber":89,"author":{"gitId":"baggiiiie"},"content":"                    PrintMessages.taskDescriptionEmpty();"},{"lineNumber":90,"author":{"gitId":"baggiiiie"},"content":"                }"},{"lineNumber":91,"author":{"gitId":"baggiiiie"},"content":"                break;"},{"lineNumber":92,"author":{"gitId":"baggiiiie"},"content":"            case EVENT_COMMAND:"},{"lineNumber":93,"author":{"gitId":"baggiiiie"},"content":"                if (inputStringSplit.length \u003e 1) {"},{"lineNumber":94,"author":{"gitId":"baggiiiie"},"content":"                    AddEventCommand.execute(inputStringSplit[1]);"},{"lineNumber":95,"author":{"gitId":"baggiiiie"},"content":"                } else {"},{"lineNumber":96,"author":{"gitId":"baggiiiie"},"content":"                    PrintMessages.taskDescriptionEmpty();"},{"lineNumber":97,"author":{"gitId":"baggiiiie"},"content":"                }"},{"lineNumber":98,"author":{"gitId":"baggiiiie"},"content":"                break;"},{"lineNumber":99,"author":{"gitId":"baggiiiie"},"content":"            default:"},{"lineNumber":100,"author":{"gitId":"baggiiiie"},"content":"                PrintMessages.illegalInput();"},{"lineNumber":101,"author":{"gitId":"baggiiiie"},"content":"                break;"},{"lineNumber":102,"author":{"gitId":"baggiiiie"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"baggiiiie"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"baggiiiie"},"content":"}"}],"authorContributionMap":{"baggiiiie":105}},{"path":"src/main/java/Baggie/Task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package Baggie.Task;"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":"import static Baggie.UI.TEXT.DATE_FORMAT;"},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":"import static Baggie.UI.TEXT.DEADLINE_ICON;"},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":9,"author":{"gitId":"baggiiiie"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":11,"author":{"gitId":"baggiiiie"},"content":"    protected String time;"},{"lineNumber":12,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"    public DeadlineTask(String taskDescription, String time) {"},{"lineNumber":14,"author":{"gitId":"baggiiiie"},"content":"        super(taskDescription);"},{"lineNumber":15,"author":{"gitId":"baggiiiie"},"content":"        this.time \u003d time;"},{"lineNumber":16,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"    public String getTaskTime() {"},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"baggiiiie"},"content":"            LocalDate d1 \u003d LocalDate.parse(time);"},{"lineNumber":22,"author":{"gitId":"baggiiiie"},"content":"            return d1.format(DateTimeFormatter.ofPattern(DATE_FORMAT));"},{"lineNumber":23,"author":{"gitId":"baggiiiie"},"content":"        } catch (Exception e) {"},{"lineNumber":24,"author":{"gitId":"baggiiiie"},"content":"            return time;"},{"lineNumber":25,"author":{"gitId":"baggiiiie"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":28,"author":{"gitId":"baggiiiie"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"baggiiiie"},"content":"     * Prints task type"},{"lineNumber":30,"author":{"gitId":"baggiiiie"},"content":"     * @return [D]"},{"lineNumber":31,"author":{"gitId":"baggiiiie"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"baggiiiie"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"baggiiiie"},"content":"    public String getTaskType() {"},{"lineNumber":34,"author":{"gitId":"baggiiiie"},"content":"        return DEADLINE_ICON;"},{"lineNumber":35,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":37,"author":{"gitId":"baggiiiie"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"baggiiiie"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"baggiiiie"},"content":"        return getTaskType() + super.toString() + \" (by: \" + getTaskTime() + \")\";"},{"lineNumber":40,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"baggiiiie"},"content":"}"}],"authorContributionMap":{"baggiiiie":41}},{"path":"src/main/java/Baggie/Task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package Baggie.Task;"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":"import static Baggie.UI.TEXT.DATE_FORMAT;"},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":"import static Baggie.UI.TEXT.EVENT_ICON;"},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":9,"author":{"gitId":"baggiiiie"},"content":"public class EventTask extends Task {"},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":11,"author":{"gitId":"baggiiiie"},"content":"    protected String time;"},{"lineNumber":12,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"    public EventTask(String description, String time) {"},{"lineNumber":14,"author":{"gitId":"baggiiiie"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"baggiiiie"},"content":"        this.time \u003d time;"},{"lineNumber":16,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"    public String getTaskType() {"},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":"        return EVENT_ICON;"},{"lineNumber":21,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":23,"author":{"gitId":"baggiiiie"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"baggiiiie"},"content":"     * Gets time info"},{"lineNumber":25,"author":{"gitId":"baggiiiie"},"content":"     * @return time with correct format if applicable"},{"lineNumber":26,"author":{"gitId":"baggiiiie"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"baggiiiie"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"baggiiiie"},"content":"    public String getTaskTime(){"},{"lineNumber":29,"author":{"gitId":"baggiiiie"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"baggiiiie"},"content":"            LocalDate d1 \u003d LocalDate.parse(time);"},{"lineNumber":31,"author":{"gitId":"baggiiiie"},"content":"            return d1.format(DateTimeFormatter.ofPattern(DATE_FORMAT));"},{"lineNumber":32,"author":{"gitId":"baggiiiie"},"content":"        } catch (Exception e) {"},{"lineNumber":33,"author":{"gitId":"baggiiiie"},"content":"            return time;"},{"lineNumber":34,"author":{"gitId":"baggiiiie"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":37,"author":{"gitId":"baggiiiie"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"baggiiiie"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"baggiiiie"},"content":"        return getTaskType() + super.toString() + \" (at: \" + getTaskTime() + \")\";"},{"lineNumber":40,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"baggiiiie"},"content":"}"}],"authorContributionMap":{"baggiiiie":41}},{"path":"src/main/java/Baggie/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package Baggie.Task;"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"import static Baggie.UI.TEXT.*;"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":"public class Task {"},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":"    protected String taskDescription;"},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":"    protected boolean isDone;"},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":9,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":"    public Task(String taskDescription) {"},{"lineNumber":11,"author":{"gitId":"baggiiiie"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":12,"author":{"gitId":"baggiiiie"},"content":"        this.isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":15,"author":{"gitId":"baggiiiie"},"content":"    public String getStatusIcon() {"},{"lineNumber":16,"author":{"gitId":"baggiiiie"},"content":"        return (isDone ? DONE_ICON : NOT_DONE_ICON);"},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"    public void markAsDone() {"},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":"        this.isDone \u003d true;"},{"lineNumber":21,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":23,"author":{"gitId":"baggiiiie"},"content":"    public boolean isDone() { return isDone; }"},{"lineNumber":24,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":25,"author":{"gitId":"baggiiiie"},"content":"    public String getTask() {"},{"lineNumber":26,"author":{"gitId":"baggiiiie"},"content":"        return taskDescription;"},{"lineNumber":27,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":29,"author":{"gitId":"baggiiiie"},"content":"    public String getTaskType() {"},{"lineNumber":30,"author":{"gitId":"baggiiiie"},"content":"        return null;"},{"lineNumber":31,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":33,"author":{"gitId":"baggiiiie"},"content":"    public String getTaskTime() {"},{"lineNumber":34,"author":{"gitId":"baggiiiie"},"content":"        return null;"},{"lineNumber":35,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":37,"author":{"gitId":"baggiiiie"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"baggiiiie"},"content":"        return LEFT_SQUARE_BRACKET + getStatusIcon() + RIGHT_SQUARE_BRACKET + getTask();"},{"lineNumber":39,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"baggiiiie"},"content":"}"}],"authorContributionMap":{"baggiiiie":40}},{"path":"src/main/java/Baggie/Task/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package Baggie.Task;"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"import static Baggie.UI.TEXT.TODO_ICON;"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":"public class ToDoTask extends Task {"},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":"    public ToDoTask(String taskDescription) {"},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":"        super(taskDescription);"},{"lineNumber":9,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":11,"author":{"gitId":"baggiiiie"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"baggiiiie"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"        return getTaskType() + super.toString();"},{"lineNumber":14,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":16,"author":{"gitId":"baggiiiie"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":"    public String getTaskType() {"},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":"        return TODO_ICON;"},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":"}"}],"authorContributionMap":{"baggiiiie":20}},{"path":"src/main/java/Baggie/UI/PrintMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package Baggie.UI;"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Commands.PrintListCommand;"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":"public class PrintMessages extends TEXT {"},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":"     * Shows messages"},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"baggiiiie"},"content":"    public static void taskDescriptionEmpty(){"},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":"        System.out.println(TASK_EMPTY);"},{"lineNumber":11,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"    public static void taskWithoutTime() {"},{"lineNumber":14,"author":{"gitId":"baggiiiie"},"content":"        System.out.println(TASK_WITHOUT_TIME);"},{"lineNumber":15,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":"    public static void illegalInput() {"},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":"        System.out.println(ILLEGAL_INPUT);"},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":21,"author":{"gitId":"baggiiiie"},"content":"    public static void noIndexInput() {"},{"lineNumber":22,"author":{"gitId":"baggiiiie"},"content":"        System.out.println(NO_INDEX);"},{"lineNumber":23,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":25,"author":{"gitId":"baggiiiie"},"content":"    public static void exceedListLength(int taskIndex) {"},{"lineNumber":26,"author":{"gitId":"baggiiiie"},"content":"        System.out.println(YOU_DO_NOT_HAVE + taskIndex + IN_YOUR_LIST);"},{"lineNumber":27,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":29,"author":{"gitId":"baggiiiie"},"content":"    public static void taskAlreadyDone() {"},{"lineNumber":30,"author":{"gitId":"baggiiiie"},"content":"        System.out.println(TASK_ALREADY_DONE);"},{"lineNumber":31,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":33,"author":{"gitId":"baggiiiie"},"content":"    public static void cannotFind(String input) {"},{"lineNumber":34,"author":{"gitId":"baggiiiie"},"content":"        System.out.println( DUKE_CANNOT_FIND + input);"},{"lineNumber":35,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":37,"author":{"gitId":"baggiiiie"},"content":"    public static void greetings(){"},{"lineNumber":38,"author":{"gitId":"baggiiiie"},"content":"        System.out.println( LOGO + LINE + GREETING + LINE );"},{"lineNumber":39,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":41,"author":{"gitId":"baggiiiie"},"content":"    public static void goodbye(){"},{"lineNumber":42,"author":{"gitId":"baggiiiie"},"content":"        System.out.println( ENDING + LINE );"},{"lineNumber":43,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":45,"author":{"gitId":"baggiiiie"},"content":"    public static void helpMenu(){"},{"lineNumber":46,"author":{"gitId":"baggiiiie"},"content":"        System.out.println(HELP_MENU);"},{"lineNumber":47,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":49,"author":{"gitId":"baggiiiie"},"content":"    public static void taskAddedText() {"},{"lineNumber":50,"author":{"gitId":"baggiiiie"},"content":"        System.out.println(TASK_ADDED);"},{"lineNumber":51,"author":{"gitId":"baggiiiie"},"content":"        PrintListCommand.printList(taskCount, taskCount + 1);"},{"lineNumber":52,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":54,"author":{"gitId":"baggiiiie"},"content":"    public static void taskDeleted() {"},{"lineNumber":55,"author":{"gitId":"baggiiiie"},"content":"        System.out.println(TASK_DELETED);"},{"lineNumber":56,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":58,"author":{"gitId":"baggiiiie"},"content":"    public static void taskDone() {"},{"lineNumber":59,"author":{"gitId":"baggiiiie"},"content":"        System.out.println(TASK_DONE);"},{"lineNumber":60,"author":{"gitId":"baggiiiie"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":62,"author":{"gitId":"baggiiiie"},"content":"    public static void keywordEmpty() { System.out.println(KEYWORD_EMPTY);}"},{"lineNumber":63,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":64,"author":{"gitId":"baggiiiie"},"content":"    public static void dateEmpty() { System.out.println(DATE_EMPTY); }"},{"lineNumber":65,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":66,"author":{"gitId":"baggiiiie"},"content":"    public static void printTaskCount(int taskCount) { System.out.println(THERE_ARE + taskCount + TASKS);}"},{"lineNumber":67,"author":{"gitId":"baggiiiie"},"content":"}"}],"authorContributionMap":{"baggiiiie":67}},{"path":"src/main/java/Baggie/UI/TEXT.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package Baggie.UI;"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"import Baggie.Baggie;"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":"public class TEXT extends Baggie {"},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":""},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":"    public static final String LINE \u003d \"____________________________________________________________\\n\";"},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":"    public static final String LOGO \u003d"},{"lineNumber":9,"author":{"gitId":"baggiiiie"},"content":"           \"\\n██████   █████   ██████   ██████  ██ ███████ \\n\" +"},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":"                   \"██   ██ ██   ██ ██       ██       ██ ██      \\n\" +"},{"lineNumber":11,"author":{"gitId":"baggiiiie"},"content":"                   \"██████  ███████ ██   ███ ██   ███ ██ █████   \\n\" +"},{"lineNumber":12,"author":{"gitId":"baggiiiie"},"content":"                   \"██   ██ ██   ██ ██    ██ ██    ██ ██ ██      \\n\" +"},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"                   \"██████  ██   ██  ██████   ██████  ██ ███████ \\n\" +"},{"lineNumber":14,"author":{"gitId":"baggiiiie"},"content":"                   \"                                            \\n\";"},{"lineNumber":15,"author":{"gitId":"baggiiiie"},"content":"    public static final String GREETING \u003d \" Hello! I\u0027m Baggie\\n\" + \" Type \u0027help\u0027 to see what i could do for you\\n\";"},{"lineNumber":16,"author":{"gitId":"baggiiiie"},"content":"    public static final String ENDING \u003d \" Bye! Hope to see you again soon!\\n\";"},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":"    public static final String HELP_MENU \u003d \" Here\u0027s what I could do for you ^_^\\n\""},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":"            + \" help: print help menu\\n\""},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"            + \" list: see saved tasks in the list\\n\""},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":"            + \" done: mark a task in the list as done\\n\""},{"lineNumber":21,"author":{"gitId":"baggiiiie"},"content":"            + \" delete: delete a task from the list\\n\""},{"lineNumber":22,"author":{"gitId":"baggiiiie"},"content":"            + \" date: search saved tasks on a specific day\\n\""},{"lineNumber":23,"author":{"gitId":"baggiiiie"},"content":"            + \" find: search saved tasks by keywords\\n\""},{"lineNumber":24,"author":{"gitId":"baggiiiie"},"content":"            + \" bye: exit Baggie\\n\""},{"lineNumber":25,"author":{"gitId":"baggiiiie"},"content":"            + \" how to add tasks into the list:\\n\""},{"lineNumber":26,"author":{"gitId":"baggiiiie"},"content":"            + \" \\ttodo -\u003e format: todo [task]\\n\""},{"lineNumber":27,"author":{"gitId":"baggiiiie"},"content":"            + \" \\tevent -\u003e format: event [task] / [time]\\n\""},{"lineNumber":28,"author":{"gitId":"baggiiiie"},"content":"            + \" \\tdeadline -\u003e format: deadline [task] / [time]\\n\""},{"lineNumber":29,"author":{"gitId":"baggiiiie"},"content":"            + \" \\t[tip: enter date as YYYY-MM-DD to help Baggie understand better!]\\n\";"},{"lineNumber":30,"author":{"gitId":"baggiiiie"},"content":"    public static final String TASK_ADDED \u003d \" Task added! ^_^\";"},{"lineNumber":31,"author":{"gitId":"baggiiiie"},"content":"    public static final String TASK_DELETED \u003d \" Yay! This task is deleted!\";"},{"lineNumber":32,"author":{"gitId":"baggiiiie"},"content":"    public static final String TASK_DONE \u003d \" Yay! This task is done!\";"},{"lineNumber":33,"author":{"gitId":"baggiiiie"},"content":"    public static final String TASK_EMPTY \u003d \" No task description :(\\n Ahh what\u0027s the task here?\";"},{"lineNumber":34,"author":{"gitId":"baggiiiie"},"content":"    public static final String TASK_WITHOUT_TIME \u003d \" No time input :(\";"},{"lineNumber":35,"author":{"gitId":"baggiiiie"},"content":"    public static final String NO_INDEX \u003d \" No index input :(\";"},{"lineNumber":36,"author":{"gitId":"baggiiiie"},"content":"    public static final String ILLEGAL_INPUT \u003d \" Baggie doesn\u0027t know what to do with the command D:\";"},{"lineNumber":37,"author":{"gitId":"baggiiiie"},"content":"    public static final String TASK_ALREADY_DONE \u003d \" The task is already done ^_^\";"},{"lineNumber":38,"author":{"gitId":"baggiiiie"},"content":"    public static final String YOU_DO_NOT_HAVE \u003d \" You don\u0027t have Task \";"},{"lineNumber":39,"author":{"gitId":"baggiiiie"},"content":"    public static final String IN_YOUR_LIST \u003d \" in your list ^_^ \";"},{"lineNumber":40,"author":{"gitId":"baggiiiie"},"content":"    public static final String DUKE_CANNOT_FIND \u003d \" Baggie could find any tasks related to \";"},{"lineNumber":41,"author":{"gitId":"baggiiiie"},"content":"    public static final String LIST_EMPTY \u003d \" List is empty :o\";"},{"lineNumber":42,"author":{"gitId":"baggiiiie"},"content":"    public static final String A_NEW_FILE \u003d \" A new file [\";"},{"lineNumber":43,"author":{"gitId":"baggiiiie"},"content":"    public static final String HAS_BEEN_CREATED \u003d \"] has been created! ^_^\\n\";"},{"lineNumber":44,"author":{"gitId":"baggiiiie"},"content":"    public static final String IT_COULD_BE_FOUND \u003d \" It could be found at: \";"},{"lineNumber":45,"author":{"gitId":"baggiiiie"},"content":"    public static final String READ_FILE \u003d \" Reading saved Task Lists from [\";"},{"lineNumber":46,"author":{"gitId":"baggiiiie"},"content":"    public static final String FILE_SAVED \u003d \" File saved!\";"},{"lineNumber":47,"author":{"gitId":"baggiiiie"},"content":"    public static final String KEYWORD_EMPTY \u003d \" What\u0027s the keyword here?\";"},{"lineNumber":48,"author":{"gitId":"baggiiiie"},"content":"    public static final String DATE_EMPTY \u003d \" What\u0027s the date here?\";"},{"lineNumber":49,"author":{"gitId":"baggiiiie"},"content":"    public static final String THERE_ARE \u003d \"There are \";"},{"lineNumber":50,"author":{"gitId":"baggiiiie"},"content":"    public static final String TASKS \u003d \" tasks\";"},{"lineNumber":51,"author":{"gitId":"baggiiiie"},"content":"    public static final String FILE_NAME \u003d \"Baggie.txt\";"},{"lineNumber":52,"author":{"gitId":"baggiiiie"},"content":"    public static final String USER_DIRECTORY \u003d \"user.dir\";"},{"lineNumber":53,"author":{"gitId":"baggiiiie"},"content":"    public static final String TASK_TYPE_DEADLINE \u003d \"[D]\";"},{"lineNumber":54,"author":{"gitId":"baggiiiie"},"content":"    public static final String TASK_TYPE_TODO \u003d \"[T]\";"},{"lineNumber":55,"author":{"gitId":"baggiiiie"},"content":"    public static final String TASK_TYPE_EVENT \u003d \"[E]\";"},{"lineNumber":56,"author":{"gitId":"baggiiiie"},"content":"    public static final String TRUE \u003d \"true\";"},{"lineNumber":57,"author":{"gitId":"baggiiiie"},"content":"    public static final String DIVIDER \u003d \"|\";"},{"lineNumber":58,"author":{"gitId":"baggiiiie"},"content":"    public static final String TIME_DIVIDER \u003d \"/\";"},{"lineNumber":59,"author":{"gitId":"baggiiiie"},"content":"    public static final String DONE_ICON \u003d \"X\";"},{"lineNumber":60,"author":{"gitId":"baggiiiie"},"content":"    public static final String SPACE \u003d \" \";"},{"lineNumber":61,"author":{"gitId":"baggiiiie"},"content":"    public static final String LEFT_SQUARE_BRACKET \u003d \" [\";"},{"lineNumber":62,"author":{"gitId":"baggiiiie"},"content":"    public static final String RIGHT_SQUARE_BRACKET \u003d \"] \";"},{"lineNumber":63,"author":{"gitId":"baggiiiie"},"content":"    public static final String DATE_FORMAT \u003d \"MMM d yyyy\";"},{"lineNumber":64,"author":{"gitId":"baggiiiie"},"content":"    public static final String DEADLINE_ICON \u003d \"[D]\";"},{"lineNumber":65,"author":{"gitId":"baggiiiie"},"content":"    public static final String EVENT_ICON \u003d \"[E]\";"},{"lineNumber":66,"author":{"gitId":"baggiiiie"},"content":"    public static final String TODO_ICON \u003d \"[T]\";"},{"lineNumber":67,"author":{"gitId":"baggiiiie"},"content":"    public static final String SEMICOLON \u003d \": \";"},{"lineNumber":68,"author":{"gitId":"baggiiiie"},"content":"    public static final String NOT_DONE_ICON \u003d \"-\";"},{"lineNumber":69,"author":{"gitId":"baggiiiie"},"content":"}"}],"authorContributionMap":{"baggiiiie":69}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":"java -classpath ..\\bin Duke2.Baggie.Baggie \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"baggiiiie":1,"-":20}}]
