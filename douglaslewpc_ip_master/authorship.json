[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":"import commands.Task;"},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"import commands.Todo;"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":"import commands.Deadline;"},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"import commands.Event;"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"import exceptions.DukeException;"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"    public static final int maxTasks \u003d 100;"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"    private static final String border \u003d \"    ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\";"},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"    private static Task[] tasks \u003d new Task[maxTasks];"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":"        welcomeMessage();"},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"        boolean isOn \u003d true;"},{"lineNumber":17,"author":{"gitId":"douglaslewpc"},"content":"        int numOfCompletedTasks \u003d 0;"},{"lineNumber":18,"author":{"gitId":"douglaslewpc"},"content":"        int numOfTasks \u003d 0;"},{"lineNumber":19,"author":{"gitId":"douglaslewpc"},"content":"        int n \u003d 0;"},{"lineNumber":20,"author":{"gitId":"douglaslewpc"},"content":"        while(isOn \u0026\u0026 in.hasNextLine()) {"},{"lineNumber":21,"author":{"gitId":"douglaslewpc"},"content":"            String line \u003d in.nextLine();"},{"lineNumber":22,"author":{"gitId":"douglaslewpc"},"content":"            String[] words \u003d line.split(\" \");"},{"lineNumber":23,"author":{"gitId":"douglaslewpc"},"content":"            try{"},{"lineNumber":24,"author":{"gitId":"douglaslewpc"},"content":"                if(line.equals(\"bye\")){"},{"lineNumber":25,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println(border);"},{"lineNumber":26,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println(\"    Bye. Hope to see you again soon!\");"},{"lineNumber":27,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println(\" \");"},{"lineNumber":28,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println(border);"},{"lineNumber":29,"author":{"gitId":"douglaslewpc"},"content":"                    isOn \u003d false;"},{"lineNumber":30,"author":{"gitId":"douglaslewpc"},"content":"                } else if(words[0].equals(\"todo\")){"},{"lineNumber":31,"author":{"gitId":"douglaslewpc"},"content":"                    String description \u003d \"\";"},{"lineNumber":32,"author":{"gitId":"douglaslewpc"},"content":"                    try{"},{"lineNumber":33,"author":{"gitId":"douglaslewpc"},"content":"                        int wordsCount \u003d words.length;"},{"lineNumber":34,"author":{"gitId":"douglaslewpc"},"content":"                        if(words.length\u003d\u003d1){"},{"lineNumber":35,"author":{"gitId":"douglaslewpc"},"content":"                            throw new DukeException(\"missing_parameter\");"},{"lineNumber":36,"author":{"gitId":"douglaslewpc"},"content":"                        }"},{"lineNumber":37,"author":{"gitId":"douglaslewpc"},"content":"                        for(String word:words){"},{"lineNumber":38,"author":{"gitId":"douglaslewpc"},"content":"                            wordsCount--;"},{"lineNumber":39,"author":{"gitId":"douglaslewpc"},"content":"                            if(word.equals(\"todo\")){"},{"lineNumber":40,"author":{"gitId":"douglaslewpc"},"content":"                                continue;"},{"lineNumber":41,"author":{"gitId":"douglaslewpc"},"content":"                            } else if(wordsCount\u003d\u003d0){"},{"lineNumber":42,"author":{"gitId":"douglaslewpc"},"content":"                                description \u003d description + word;"},{"lineNumber":43,"author":{"gitId":"douglaslewpc"},"content":"                            } else{"},{"lineNumber":44,"author":{"gitId":"douglaslewpc"},"content":"                                description \u003d description + word + \" \";"},{"lineNumber":45,"author":{"gitId":"douglaslewpc"},"content":"                            }"},{"lineNumber":46,"author":{"gitId":"douglaslewpc"},"content":"                        }"},{"lineNumber":47,"author":{"gitId":"douglaslewpc"},"content":"                        tasks[n] \u003d new Todo(description);"},{"lineNumber":48,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(border);"},{"lineNumber":49,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"    Got it. I\u0027ve added this task:\");"},{"lineNumber":50,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"      \"+tasks[n]);"},{"lineNumber":51,"author":{"gitId":"douglaslewpc"},"content":"                        n++;"},{"lineNumber":52,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"    Now you have \" + n +\" tasks in the list.\");"},{"lineNumber":53,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\" \");"},{"lineNumber":54,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(border);"},{"lineNumber":55,"author":{"gitId":"douglaslewpc"},"content":"                    }catch (DukeException e) {"},{"lineNumber":56,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(border);"},{"lineNumber":57,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"    OOPS!! The description of a todo cannot be empty.\");"},{"lineNumber":58,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(border);"},{"lineNumber":59,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":60,"author":{"gitId":"douglaslewpc"},"content":"                } else if(words[0].equals(\"deadline\")){"},{"lineNumber":61,"author":{"gitId":"douglaslewpc"},"content":"                    String description \u003d \"\";"},{"lineNumber":62,"author":{"gitId":"douglaslewpc"},"content":"                    String by \u003d \"\";"},{"lineNumber":63,"author":{"gitId":"douglaslewpc"},"content":"                    try{"},{"lineNumber":64,"author":{"gitId":"douglaslewpc"},"content":"                        boolean byFlag \u003d false;"},{"lineNumber":65,"author":{"gitId":"douglaslewpc"},"content":"                        int wordsCount \u003d words.length;"},{"lineNumber":66,"author":{"gitId":"douglaslewpc"},"content":"                        if(wordsCount\u003d\u003d1){"},{"lineNumber":67,"author":{"gitId":"douglaslewpc"},"content":"                            throw new DukeException(\"missing_parameter\");"},{"lineNumber":68,"author":{"gitId":"douglaslewpc"},"content":"                        }"},{"lineNumber":69,"author":{"gitId":"douglaslewpc"},"content":"                        for(String word:words){"},{"lineNumber":70,"author":{"gitId":"douglaslewpc"},"content":"                            wordsCount--;"},{"lineNumber":71,"author":{"gitId":"douglaslewpc"},"content":"                            if(word.equals(\"/by\")){"},{"lineNumber":72,"author":{"gitId":"douglaslewpc"},"content":"                                byFlag \u003d true;"},{"lineNumber":73,"author":{"gitId":"douglaslewpc"},"content":"                                continue;"},{"lineNumber":74,"author":{"gitId":"douglaslewpc"},"content":"                            }"},{"lineNumber":75,"author":{"gitId":"douglaslewpc"},"content":"                            if(word.equals(\"deadline\")){"},{"lineNumber":76,"author":{"gitId":"douglaslewpc"},"content":"                                continue;"},{"lineNumber":77,"author":{"gitId":"douglaslewpc"},"content":"                            }"},{"lineNumber":78,"author":{"gitId":"douglaslewpc"},"content":"                            if(byFlag \u0026\u0026 wordsCount\u003d\u003d0){"},{"lineNumber":79,"author":{"gitId":"douglaslewpc"},"content":"                                by \u003d by + word;"},{"lineNumber":80,"author":{"gitId":"douglaslewpc"},"content":"                            } else if(byFlag){"},{"lineNumber":81,"author":{"gitId":"douglaslewpc"},"content":"                                by \u003d by + word + \" \";"},{"lineNumber":82,"author":{"gitId":"douglaslewpc"},"content":"                            } else{"},{"lineNumber":83,"author":{"gitId":"douglaslewpc"},"content":"                                description \u003d description + word + \" \";"},{"lineNumber":84,"author":{"gitId":"douglaslewpc"},"content":"                            }"},{"lineNumber":85,"author":{"gitId":"douglaslewpc"},"content":"                        }"},{"lineNumber":86,"author":{"gitId":"douglaslewpc"},"content":"                        tasks[n] \u003d new Deadline(description,by);"},{"lineNumber":87,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(border);"},{"lineNumber":88,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"    Got it. I\u0027ve added this task:\");"},{"lineNumber":89,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"      \"+tasks[n]);"},{"lineNumber":90,"author":{"gitId":"douglaslewpc"},"content":"                        n++;"},{"lineNumber":91,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"    Now you have \" + n +\" tasks in the list.\");"},{"lineNumber":92,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\" \");"},{"lineNumber":93,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(border);"},{"lineNumber":94,"author":{"gitId":"douglaslewpc"},"content":"                    }catch (DukeException e){"},{"lineNumber":95,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(border);"},{"lineNumber":96,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"    OOPS!! The description of the deadline cannot be empty.\");"},{"lineNumber":97,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(border);"},{"lineNumber":98,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":99,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":100,"author":{"gitId":"douglaslewpc"},"content":"                } else if(words[0].equals(\"event\")){"},{"lineNumber":101,"author":{"gitId":"douglaslewpc"},"content":"                    String description \u003d \"\";"},{"lineNumber":102,"author":{"gitId":"douglaslewpc"},"content":"                    String at \u003d \"\";"},{"lineNumber":103,"author":{"gitId":"douglaslewpc"},"content":"                    try{"},{"lineNumber":104,"author":{"gitId":"douglaslewpc"},"content":"                        boolean atFlag \u003d false;"},{"lineNumber":105,"author":{"gitId":"douglaslewpc"},"content":"                        int wordsCount \u003d words.length;"},{"lineNumber":106,"author":{"gitId":"douglaslewpc"},"content":"                        if(wordsCount\u003d\u003d1){"},{"lineNumber":107,"author":{"gitId":"douglaslewpc"},"content":"                            throw new DukeException(\"missing_parameter\");"},{"lineNumber":108,"author":{"gitId":"douglaslewpc"},"content":"                        }"},{"lineNumber":109,"author":{"gitId":"douglaslewpc"},"content":"                        for(String word:words){"},{"lineNumber":110,"author":{"gitId":"douglaslewpc"},"content":"                            wordsCount--;"},{"lineNumber":111,"author":{"gitId":"douglaslewpc"},"content":"                            if(word.equals(\"/at\")){"},{"lineNumber":112,"author":{"gitId":"douglaslewpc"},"content":"                                atFlag \u003d true;"},{"lineNumber":113,"author":{"gitId":"douglaslewpc"},"content":"                                continue;"},{"lineNumber":114,"author":{"gitId":"douglaslewpc"},"content":"                            }"},{"lineNumber":115,"author":{"gitId":"douglaslewpc"},"content":"                            if(word.equals(\"event\")){"},{"lineNumber":116,"author":{"gitId":"douglaslewpc"},"content":"                                continue;"},{"lineNumber":117,"author":{"gitId":"douglaslewpc"},"content":"                            }"},{"lineNumber":118,"author":{"gitId":"douglaslewpc"},"content":"                            if(atFlag \u0026\u0026 wordsCount\u003d\u003d0){"},{"lineNumber":119,"author":{"gitId":"douglaslewpc"},"content":"                                at \u003d at + word;"},{"lineNumber":120,"author":{"gitId":"douglaslewpc"},"content":"                            } else if(atFlag){"},{"lineNumber":121,"author":{"gitId":"douglaslewpc"},"content":"                                at \u003d at + word + \" \";"},{"lineNumber":122,"author":{"gitId":"douglaslewpc"},"content":"                            } else{"},{"lineNumber":123,"author":{"gitId":"douglaslewpc"},"content":"                                description \u003d description + word + \" \";"},{"lineNumber":124,"author":{"gitId":"douglaslewpc"},"content":"                            }"},{"lineNumber":125,"author":{"gitId":"douglaslewpc"},"content":"                        }"},{"lineNumber":126,"author":{"gitId":"douglaslewpc"},"content":"                        tasks[n] \u003d new Event(description,at);"},{"lineNumber":127,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(border);"},{"lineNumber":128,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"    Got it. I\u0027ve added this task:\");"},{"lineNumber":129,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"      \"+tasks[n]);"},{"lineNumber":130,"author":{"gitId":"douglaslewpc"},"content":"                        n++;"},{"lineNumber":131,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"    Now you have \" + n +\" tasks in the list.\");"},{"lineNumber":132,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\" \");"},{"lineNumber":133,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(border);"},{"lineNumber":134,"author":{"gitId":"douglaslewpc"},"content":"                    }catch (DukeException e){"},{"lineNumber":135,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(border);"},{"lineNumber":136,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"    OOPS!! The description of the deadline cannot be empty.\");"},{"lineNumber":137,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(border);"},{"lineNumber":138,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":139,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":140,"author":{"gitId":"douglaslewpc"},"content":"                } else if(words[0].equals(\"done\")){"},{"lineNumber":141,"author":{"gitId":"douglaslewpc"},"content":"                    int taskNum \u003d Integer.parseInt(words[1])-1;"},{"lineNumber":142,"author":{"gitId":"douglaslewpc"},"content":"                    tasks[taskNum].markAsDone();"},{"lineNumber":143,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println(border);"},{"lineNumber":144,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println(\"    Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":145,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println(\"      \" + tasks[taskNum]);"},{"lineNumber":146,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println(\" \");"},{"lineNumber":147,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println(border);"},{"lineNumber":148,"author":{"gitId":"douglaslewpc"},"content":"                } else if(line.equals(\"list\")){"},{"lineNumber":149,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println(border);"},{"lineNumber":150,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println(\"    Here are the tasks in your list:\");"},{"lineNumber":151,"author":{"gitId":"douglaslewpc"},"content":"                    for(int i\u003d0;i\u003cn;i++){"},{"lineNumber":152,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"    \"+(i + 1) + \".\" + tasks[i]);"},{"lineNumber":153,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":154,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println(\" \");"},{"lineNumber":155,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println(border);"},{"lineNumber":156,"author":{"gitId":"douglaslewpc"},"content":"                } else {"},{"lineNumber":157,"author":{"gitId":"douglaslewpc"},"content":"                    throw new DukeException(\"unrecognized_input\");"},{"lineNumber":158,"author":{"gitId":"douglaslewpc"},"content":"                }"},{"lineNumber":159,"author":{"gitId":"douglaslewpc"},"content":"            }catch(DukeException e){"},{"lineNumber":160,"author":{"gitId":"douglaslewpc"},"content":"                System.out.println(border);"},{"lineNumber":161,"author":{"gitId":"douglaslewpc"},"content":"                System.out.println(\"    OOPS!! I\u0027m sorry, but I don\u0027t know what that means.\");"},{"lineNumber":162,"author":{"gitId":"douglaslewpc"},"content":"                System.out.println(border);"},{"lineNumber":163,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":164,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":167,"author":{"gitId":"douglaslewpc"},"content":"    private static void welcomeMessage() {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":170,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":171,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":174,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\");"},{"lineNumber":175,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":176,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":177,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\" \");"},{"lineNumber":178,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\");"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"douglaslewpc":169,"-":11}},{"path":"src/main/java/commands/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"public class Deadline extends Task{"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":"    protected String by;"},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"    public Deadline(String description, String by){"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"    public String toString(){"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":16}},{"path":"src/main/java/commands/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"public class Event extends Task{"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"    protected String at;"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"    public Event(String description, String at){"},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"        this.at \u003d at;"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"    public String toString(){"},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";"},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":16}},{"path":"src/main/java/commands/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"    public Task(String description){"},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"    public void markAsDone(){"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"        isDone \u003d true;"},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":"    public String getTask(){"},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"        return description;"},{"lineNumber":17,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":19,"author":{"gitId":"douglaslewpc"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"douglaslewpc"},"content":"    public String toString(){"},{"lineNumber":21,"author":{"gitId":"douglaslewpc"},"content":"        if(isDone){"},{"lineNumber":22,"author":{"gitId":"douglaslewpc"},"content":"            return \"[X] \" + description;"},{"lineNumber":23,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"douglaslewpc"},"content":"        else{"},{"lineNumber":25,"author":{"gitId":"douglaslewpc"},"content":"            return \"[ ] \" + description;"},{"lineNumber":26,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":29,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":29}},{"path":"src/main/java/commands/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"public class Todo extends Task{"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"    public Todo(String description){"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"    public String toString(){"},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":13}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"public class DukeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":"    public DukeException(String s){"},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"        super(s);"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":8}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":"list"},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"deadline return book /by June 6th"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"todo join sports club"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"done 4"},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"todo borrow book"},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"list"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"deadline return book /by Sunday"},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"event projects meeting /at Mon 2-4pm"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"list"}],"authorContributionMap":{"douglaslewpc":12}}]
