[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":"A brief User Guide for CS2113T IP Project."},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Feature 1 "},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"Adds a todo to the list."},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"### Feature 2"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"Adds a deadline to the list."},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"### Feature 3"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"Adds an event to the list."},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":"### Feature 4"},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"Marks a task as completed on the list."},{"lineNumber":17,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":18,"author":{"gitId":"douglaslewpc"},"content":"### Feature 5"},{"lineNumber":19,"author":{"gitId":"douglaslewpc"},"content":"Deletes a task from the list."},{"lineNumber":20,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":21,"author":{"gitId":"douglaslewpc"},"content":"### Feature 6"},{"lineNumber":22,"author":{"gitId":"douglaslewpc"},"content":"Finds an item on the list."},{"lineNumber":23,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":24,"author":{"gitId":"douglaslewpc"},"content":"### Feature 7"},{"lineNumber":25,"author":{"gitId":"douglaslewpc"},"content":"Views the current list."},{"lineNumber":26,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"douglaslewpc"},"content":"### `todo task` - adds a task to the list"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"douglaslewpc"},"content":"Adds a tasks that is categorized as todo to the list."},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"douglaslewpc"},"content":"`todo read book`"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"douglaslewpc"},"content":"    -------------------------------------------------------------------------------------------------------------------------------"},{"lineNumber":41,"author":{"gitId":"douglaslewpc"},"content":"    Got it. I\u0027ve added this task:"},{"lineNumber":42,"author":{"gitId":"douglaslewpc"},"content":"      [T] [ ] read book"},{"lineNumber":43,"author":{"gitId":"douglaslewpc"},"content":"    Now you have 1 tasks in the list."},{"lineNumber":44,"author":{"gitId":"douglaslewpc"},"content":" "},{"lineNumber":45,"author":{"gitId":"douglaslewpc"},"content":"    -------------------------------------------------------------------------------------------------------------------------------"}],"authorContributionMap":{"douglaslewpc":30,"-":15}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"import commands.Task;"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":"import commands.Todo;"},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"import commands.Deadline;"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"import commands.Event;"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"import exceptions.DukeException;"},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"import tasklist.TaskList;"},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"import ui.Ui;"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"import parser.Parser;"},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"import storage.Storage;"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":17,"author":{"gitId":"douglaslewpc"},"content":"    public static final int maxTasks \u003d 100;"},{"lineNumber":18,"author":{"gitId":"douglaslewpc"},"content":"    private static final String border \u003d \"    -------------------------------------------------------------------------------------------------------------------------------\";"},{"lineNumber":19,"author":{"gitId":"douglaslewpc"},"content":"    private static TaskList tasks \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"douglaslewpc"},"content":"    private static final Ui ui \u003d new Ui();"},{"lineNumber":21,"author":{"gitId":"douglaslewpc"},"content":"    private static Parser parser \u003d new Parser();"},{"lineNumber":22,"author":{"gitId":"douglaslewpc"},"content":"    private static Storage storage \u003d new Storage();"},{"lineNumber":23,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":25,"author":{"gitId":"douglaslewpc"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"douglaslewpc"},"content":"            storage.loadFile(tasks);"},{"lineNumber":27,"author":{"gitId":"douglaslewpc"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":28,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\"No saved file found\");"},{"lineNumber":29,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"douglaslewpc"},"content":"        ui.printWelcomeMessage();"},{"lineNumber":31,"author":{"gitId":"douglaslewpc"},"content":"        tasks.printList();"},{"lineNumber":32,"author":{"gitId":"douglaslewpc"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":33,"author":{"gitId":"douglaslewpc"},"content":"        boolean isOn \u003d true;"},{"lineNumber":34,"author":{"gitId":"douglaslewpc"},"content":"        while (isOn \u0026\u0026 in.hasNextLine()) {"},{"lineNumber":35,"author":{"gitId":"douglaslewpc"},"content":"            String line \u003d in.nextLine();"},{"lineNumber":36,"author":{"gitId":"douglaslewpc"},"content":"            String[] words \u003d line.split(\" \");"},{"lineNumber":37,"author":{"gitId":"douglaslewpc"},"content":"            try {"},{"lineNumber":38,"author":{"gitId":"douglaslewpc"},"content":"                String taskType \u003d parser.processUserCommand(words[0]);"},{"lineNumber":39,"author":{"gitId":"douglaslewpc"},"content":"                if (taskType.equals(\"bye\")) {"},{"lineNumber":40,"author":{"gitId":"douglaslewpc"},"content":"                    try {"},{"lineNumber":41,"author":{"gitId":"douglaslewpc"},"content":"                        storage.saveFile(tasks);"},{"lineNumber":42,"author":{"gitId":"douglaslewpc"},"content":"                    } catch (IOException e) {"},{"lineNumber":43,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"Unable to save the current list as a text file\");"},{"lineNumber":44,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":45,"author":{"gitId":"douglaslewpc"},"content":"                    tasks.printList();"},{"lineNumber":46,"author":{"gitId":"douglaslewpc"},"content":"                    isOn \u003d false;"},{"lineNumber":47,"author":{"gitId":"douglaslewpc"},"content":"                } else if (taskType.equals(\"todo\")) {"},{"lineNumber":48,"author":{"gitId":"douglaslewpc"},"content":"                    String description \u003d parser.processTodo(words);"},{"lineNumber":49,"author":{"gitId":"douglaslewpc"},"content":"                    if (description.equals(\"\")) {"},{"lineNumber":50,"author":{"gitId":"douglaslewpc"},"content":"                        continue;"},{"lineNumber":51,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":52,"author":{"gitId":"douglaslewpc"},"content":"                    Todo todo \u003d new Todo(description);"},{"lineNumber":53,"author":{"gitId":"douglaslewpc"},"content":"                    tasks.addTask(todo);"},{"lineNumber":54,"author":{"gitId":"douglaslewpc"},"content":"                    ui.printAddTaskMessage(tasks);"},{"lineNumber":55,"author":{"gitId":"douglaslewpc"},"content":"                    try {"},{"lineNumber":56,"author":{"gitId":"douglaslewpc"},"content":"                        storage.saveFile(tasks);"},{"lineNumber":57,"author":{"gitId":"douglaslewpc"},"content":"                    } catch (IOException e) {"},{"lineNumber":58,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"Unable to save the current list as a text file\");"},{"lineNumber":59,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":60,"author":{"gitId":"douglaslewpc"},"content":"                } else if (taskType.equals(\"deadline\")) {"},{"lineNumber":61,"author":{"gitId":"douglaslewpc"},"content":"                    String[] information \u003d parser.processDeadline(words);"},{"lineNumber":62,"author":{"gitId":"douglaslewpc"},"content":"                    String description \u003d information[0];"},{"lineNumber":63,"author":{"gitId":"douglaslewpc"},"content":"                    String by \u003d information[1];"},{"lineNumber":64,"author":{"gitId":"douglaslewpc"},"content":"                    if (description.equals(\"\")) {"},{"lineNumber":65,"author":{"gitId":"douglaslewpc"},"content":"                        continue;"},{"lineNumber":66,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":67,"author":{"gitId":"douglaslewpc"},"content":"                    Deadline deadline \u003d new Deadline(description, by);"},{"lineNumber":68,"author":{"gitId":"douglaslewpc"},"content":"                    tasks.addTask(deadline);"},{"lineNumber":69,"author":{"gitId":"douglaslewpc"},"content":"                    ui.printAddTaskMessage(tasks);"},{"lineNumber":70,"author":{"gitId":"douglaslewpc"},"content":"                    try {"},{"lineNumber":71,"author":{"gitId":"douglaslewpc"},"content":"                        storage.saveFile(tasks);"},{"lineNumber":72,"author":{"gitId":"douglaslewpc"},"content":"                    } catch (IOException e) {"},{"lineNumber":73,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"Unable to save the current list as a text file\");"},{"lineNumber":74,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":75,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":76,"author":{"gitId":"douglaslewpc"},"content":"                } else if (taskType.equals(\"event\")) {"},{"lineNumber":77,"author":{"gitId":"douglaslewpc"},"content":"                    String[] information \u003d parser.processEvent(words);"},{"lineNumber":78,"author":{"gitId":"douglaslewpc"},"content":"                    String description \u003d information[0];"},{"lineNumber":79,"author":{"gitId":"douglaslewpc"},"content":"                    String at \u003d information[1];"},{"lineNumber":80,"author":{"gitId":"douglaslewpc"},"content":"                    if (description.equals(\"\")) {"},{"lineNumber":81,"author":{"gitId":"douglaslewpc"},"content":"                        continue;"},{"lineNumber":82,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":83,"author":{"gitId":"douglaslewpc"},"content":"                    Event event \u003d new Event(description, at);"},{"lineNumber":84,"author":{"gitId":"douglaslewpc"},"content":"                    tasks.addTask(event);"},{"lineNumber":85,"author":{"gitId":"douglaslewpc"},"content":"                    ui.printAddTaskMessage(tasks);"},{"lineNumber":86,"author":{"gitId":"douglaslewpc"},"content":"                    try {"},{"lineNumber":87,"author":{"gitId":"douglaslewpc"},"content":"                        storage.saveFile(tasks);"},{"lineNumber":88,"author":{"gitId":"douglaslewpc"},"content":"                    } catch (IOException e) {"},{"lineNumber":89,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"Unable to save the current list as a text file\");"},{"lineNumber":90,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":91,"author":{"gitId":"douglaslewpc"},"content":"                } else if (taskType.equals(\"done\")) {"},{"lineNumber":92,"author":{"gitId":"douglaslewpc"},"content":"                    int taskNum \u003d Integer.parseInt(words[1]) - 1;"},{"lineNumber":93,"author":{"gitId":"douglaslewpc"},"content":"                    tasks.markTaskAsDone(taskNum);"},{"lineNumber":94,"author":{"gitId":"douglaslewpc"},"content":"                    try {"},{"lineNumber":95,"author":{"gitId":"douglaslewpc"},"content":"                        storage.saveFile(tasks);"},{"lineNumber":96,"author":{"gitId":"douglaslewpc"},"content":"                    } catch (IOException e) {"},{"lineNumber":97,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"Unable to save the current list as a text file\");"},{"lineNumber":98,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":99,"author":{"gitId":"douglaslewpc"},"content":"                } else if (taskType.equals(\"list\")) {"},{"lineNumber":100,"author":{"gitId":"douglaslewpc"},"content":"                    tasks.printList();"},{"lineNumber":101,"author":{"gitId":"douglaslewpc"},"content":"                } else if (taskType.equals(\"delete\")) {"},{"lineNumber":102,"author":{"gitId":"douglaslewpc"},"content":"                    if(words.length\u003d\u003d1){"},{"lineNumber":103,"author":{"gitId":"douglaslewpc"},"content":"                        throw new DukeException(\"unrecognized_input\");"},{"lineNumber":104,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":105,"author":{"gitId":"douglaslewpc"},"content":"                    int taskNum \u003d Integer.parseInt(words[1]) - 1;"},{"lineNumber":106,"author":{"gitId":"douglaslewpc"},"content":"                    tasks.deleteTask(taskNum);"},{"lineNumber":107,"author":{"gitId":"douglaslewpc"},"content":"                    try {"},{"lineNumber":108,"author":{"gitId":"douglaslewpc"},"content":"                        storage.saveFile(tasks);"},{"lineNumber":109,"author":{"gitId":"douglaslewpc"},"content":"                    } catch (IOException e) {"},{"lineNumber":110,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"Unable to save the current list as a text file\");"},{"lineNumber":111,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":112,"author":{"gitId":"douglaslewpc"},"content":"                } else if (taskType.equals(\"find\")) {"},{"lineNumber":113,"author":{"gitId":"douglaslewpc"},"content":"                    String keyword \u003d words[1];"},{"lineNumber":114,"author":{"gitId":"douglaslewpc"},"content":"                    tasks.find(keyword);"},{"lineNumber":115,"author":{"gitId":"douglaslewpc"},"content":"                } else {"},{"lineNumber":116,"author":{"gitId":"douglaslewpc"},"content":"                    throw new DukeException(\"unrecognized_input\");"},{"lineNumber":117,"author":{"gitId":"douglaslewpc"},"content":"                }"},{"lineNumber":118,"author":{"gitId":"douglaslewpc"},"content":"            } catch (DukeException e) {"},{"lineNumber":119,"author":{"gitId":"douglaslewpc"},"content":"                System.out.println(border);"},{"lineNumber":120,"author":{"gitId":"douglaslewpc"},"content":"                System.out.println(\"    OOPS!! I\u0027m sorry, but I don\u0027t know what that means.\");"},{"lineNumber":121,"author":{"gitId":"douglaslewpc"},"content":"                System.out.println(border);"},{"lineNumber":122,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"douglaslewpc":121,"-":4}},{"path":"src/main/java/commands/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"public class Deadline extends Task{"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":"    protected String by;"},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"    public Deadline(String description, String by){"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"    public String toString(){"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"        return \"[D] \" + super.toString() + \"(by: \" + by + \")\";"},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":16}},{"path":"src/main/java/commands/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"public class Event extends Task{"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"    protected String at;"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"    public Event(String description, String at){"},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"        this.at \u003d at;"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"    public String toString(){"},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":"        return \"[E] \" + super.toString() + \"(at: \" + at + \")\";"},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":16}},{"path":"src/main/java/commands/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"    public void markAsDone() {"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"        isDone \u003d true;"},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"    public String getTask() {"},{"lineNumber":17,"author":{"gitId":"douglaslewpc"},"content":"        return description;"},{"lineNumber":18,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":20,"author":{"gitId":"douglaslewpc"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"douglaslewpc"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"douglaslewpc"},"content":"        if (isDone) {"},{"lineNumber":23,"author":{"gitId":"douglaslewpc"},"content":"            return \"[X] \" + description;"},{"lineNumber":24,"author":{"gitId":"douglaslewpc"},"content":"        } else {"},{"lineNumber":25,"author":{"gitId":"douglaslewpc"},"content":"            return \"[ ] \" + description;"},{"lineNumber":26,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":29,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":29}},{"path":"src/main/java/commands/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"        return \"[T] \" + super.toString();"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":13}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"public class DukeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":"    public DukeException(String s){"},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"        super(s);"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":8}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":"* The Parser class deals with making sense of the user input"},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"* */"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":"package parser;"},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"import exceptions.DukeException;"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"import java.util.Arrays;"},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":"    public static final String border \u003d \"    -------------------------------------------------------------------------------------------------------------------------------\";"},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":"    public static final List\u003cString\u003e commands \u003d Arrays.asList(\"event\", \"deadline\", \"todo\", \"list\", \"done\", \"delete\", \"bye\",\"find\");"},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":17,"author":{"gitId":"douglaslewpc"},"content":"    public String processUserCommand(String userCommand) {"},{"lineNumber":18,"author":{"gitId":"douglaslewpc"},"content":"        if (commands.contains(userCommand)) {"},{"lineNumber":19,"author":{"gitId":"douglaslewpc"},"content":"            switch (userCommand) {"},{"lineNumber":20,"author":{"gitId":"douglaslewpc"},"content":"            case \"event\":"},{"lineNumber":21,"author":{"gitId":"douglaslewpc"},"content":"                return \"event\";"},{"lineNumber":22,"author":{"gitId":"douglaslewpc"},"content":"            case \"deadline\":"},{"lineNumber":23,"author":{"gitId":"douglaslewpc"},"content":"                return \"deadline\";"},{"lineNumber":24,"author":{"gitId":"douglaslewpc"},"content":"            case \"todo\":"},{"lineNumber":25,"author":{"gitId":"douglaslewpc"},"content":"                return \"todo\";"},{"lineNumber":26,"author":{"gitId":"douglaslewpc"},"content":"            case \"list\":"},{"lineNumber":27,"author":{"gitId":"douglaslewpc"},"content":"                return \"list\";"},{"lineNumber":28,"author":{"gitId":"douglaslewpc"},"content":"            case \"done\":"},{"lineNumber":29,"author":{"gitId":"douglaslewpc"},"content":"                return \"done\";"},{"lineNumber":30,"author":{"gitId":"douglaslewpc"},"content":"            case \"bye\":"},{"lineNumber":31,"author":{"gitId":"douglaslewpc"},"content":"                return \"bye\";"},{"lineNumber":32,"author":{"gitId":"douglaslewpc"},"content":"            case \"delete\":"},{"lineNumber":33,"author":{"gitId":"douglaslewpc"},"content":"                return \"delete\";"},{"lineNumber":34,"author":{"gitId":"douglaslewpc"},"content":"            case \"find\":"},{"lineNumber":35,"author":{"gitId":"douglaslewpc"},"content":"                return \"find\";"},{"lineNumber":36,"author":{"gitId":"douglaslewpc"},"content":"            default:"},{"lineNumber":37,"author":{"gitId":"douglaslewpc"},"content":"                return \"invalid_user_input\";"},{"lineNumber":38,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"douglaslewpc"},"content":"        } else {"},{"lineNumber":40,"author":{"gitId":"douglaslewpc"},"content":"            return \"invalid_user_input\";"},{"lineNumber":41,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"douglaslewpc"},"content":"    /*"},{"lineNumber":44,"author":{"gitId":"douglaslewpc"},"content":"    * The processTodo method within the Parser class processes the user input into the required format for the Todo Class"},{"lineNumber":45,"author":{"gitId":"douglaslewpc"},"content":"    * @params userInput is a String[] that stores the user input"},{"lineNumber":46,"author":{"gitId":"douglaslewpc"},"content":"    * */"},{"lineNumber":47,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":48,"author":{"gitId":"douglaslewpc"},"content":"    public String processTodo(String[] userInput) {"},{"lineNumber":49,"author":{"gitId":"douglaslewpc"},"content":"        String description \u003d \"\";"},{"lineNumber":50,"author":{"gitId":"douglaslewpc"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"douglaslewpc"},"content":"            int wordsCount \u003d userInput.length;"},{"lineNumber":52,"author":{"gitId":"douglaslewpc"},"content":"            if (userInput.length \u003d\u003d 1) {"},{"lineNumber":53,"author":{"gitId":"douglaslewpc"},"content":"                throw new DukeException(\"missing_parameter\");"},{"lineNumber":54,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"douglaslewpc"},"content":"            for (String word : userInput) {"},{"lineNumber":56,"author":{"gitId":"douglaslewpc"},"content":"                wordsCount--;"},{"lineNumber":57,"author":{"gitId":"douglaslewpc"},"content":"                if (word.equals(\"todo\")) {"},{"lineNumber":58,"author":{"gitId":"douglaslewpc"},"content":"                    continue;"},{"lineNumber":59,"author":{"gitId":"douglaslewpc"},"content":"                } else if (wordsCount \u003d\u003d 0) {"},{"lineNumber":60,"author":{"gitId":"douglaslewpc"},"content":"                    description \u003d description + word;"},{"lineNumber":61,"author":{"gitId":"douglaslewpc"},"content":"                } else {"},{"lineNumber":62,"author":{"gitId":"douglaslewpc"},"content":"                    description \u003d description + word + \" \";"},{"lineNumber":63,"author":{"gitId":"douglaslewpc"},"content":"                }"},{"lineNumber":64,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"douglaslewpc"},"content":"        } catch (DukeException e) {"},{"lineNumber":66,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(border);"},{"lineNumber":67,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\"    OOPS!! The description of a todo cannot be empty.\");"},{"lineNumber":68,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(border);"},{"lineNumber":69,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"douglaslewpc"},"content":"        return description;"},{"lineNumber":71,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"douglaslewpc"},"content":"    /*"},{"lineNumber":73,"author":{"gitId":"douglaslewpc"},"content":"     * The processEvent method within the Parser class processes the user input into the required format for the Event Class"},{"lineNumber":74,"author":{"gitId":"douglaslewpc"},"content":"     * @params userInput is a String[] that stores the user input"},{"lineNumber":75,"author":{"gitId":"douglaslewpc"},"content":"     * */"},{"lineNumber":76,"author":{"gitId":"douglaslewpc"},"content":"    public String[] processEvent(String[] userInput) {"},{"lineNumber":77,"author":{"gitId":"douglaslewpc"},"content":"        String[] information \u003d new String[2];"},{"lineNumber":78,"author":{"gitId":"douglaslewpc"},"content":"        information[0] \u003d \"\";"},{"lineNumber":79,"author":{"gitId":"douglaslewpc"},"content":"        information[1] \u003d \"\";"},{"lineNumber":80,"author":{"gitId":"douglaslewpc"},"content":"        try {"},{"lineNumber":81,"author":{"gitId":"douglaslewpc"},"content":"            boolean atFlag \u003d false;"},{"lineNumber":82,"author":{"gitId":"douglaslewpc"},"content":"            int wordsCount \u003d userInput.length;"},{"lineNumber":83,"author":{"gitId":"douglaslewpc"},"content":"            if (wordsCount \u003d\u003d 1) {"},{"lineNumber":84,"author":{"gitId":"douglaslewpc"},"content":"                throw new DukeException(\"missing_parameter\");"},{"lineNumber":85,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"douglaslewpc"},"content":"            for (String word : userInput) {"},{"lineNumber":87,"author":{"gitId":"douglaslewpc"},"content":"                wordsCount--;"},{"lineNumber":88,"author":{"gitId":"douglaslewpc"},"content":"                if (word.equals(\"/at\")) {"},{"lineNumber":89,"author":{"gitId":"douglaslewpc"},"content":"                    atFlag \u003d true;"},{"lineNumber":90,"author":{"gitId":"douglaslewpc"},"content":"                    continue;"},{"lineNumber":91,"author":{"gitId":"douglaslewpc"},"content":"                }"},{"lineNumber":92,"author":{"gitId":"douglaslewpc"},"content":"                if (word.equals(\"event\")) {"},{"lineNumber":93,"author":{"gitId":"douglaslewpc"},"content":"                    continue;"},{"lineNumber":94,"author":{"gitId":"douglaslewpc"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"douglaslewpc"},"content":"                if (atFlag \u0026\u0026 (wordsCount \u003d\u003d 0)) {"},{"lineNumber":96,"author":{"gitId":"douglaslewpc"},"content":"                    information[1] \u003d information[1] + word;"},{"lineNumber":97,"author":{"gitId":"douglaslewpc"},"content":"                } else if (atFlag) {"},{"lineNumber":98,"author":{"gitId":"douglaslewpc"},"content":"                    information[1] \u003d information[1] + word + \" \";"},{"lineNumber":99,"author":{"gitId":"douglaslewpc"},"content":"                } else {"},{"lineNumber":100,"author":{"gitId":"douglaslewpc"},"content":"                    information[0] \u003d information[0] + word + \" \";"},{"lineNumber":101,"author":{"gitId":"douglaslewpc"},"content":"                }"},{"lineNumber":102,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"douglaslewpc"},"content":"        } catch (DukeException e) {"},{"lineNumber":104,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(border);"},{"lineNumber":105,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\"    OOPS!! The description of the deadline cannot be empty.\");"},{"lineNumber":106,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(border);"},{"lineNumber":107,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"douglaslewpc"},"content":"        return information;"},{"lineNumber":109,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"douglaslewpc"},"content":"    /*"},{"lineNumber":111,"author":{"gitId":"douglaslewpc"},"content":"     * The processDeadline method within the Parser class processes the user input into the required format for the Deadline Class"},{"lineNumber":112,"author":{"gitId":"douglaslewpc"},"content":"     * @params userInput is a String[] that stores the user input"},{"lineNumber":113,"author":{"gitId":"douglaslewpc"},"content":"     * */"},{"lineNumber":114,"author":{"gitId":"douglaslewpc"},"content":"    public String[] processDeadline(String[] userInput) {"},{"lineNumber":115,"author":{"gitId":"douglaslewpc"},"content":"        String[] information \u003d new String[2];"},{"lineNumber":116,"author":{"gitId":"douglaslewpc"},"content":"        information[0] \u003d \"\";"},{"lineNumber":117,"author":{"gitId":"douglaslewpc"},"content":"        information[1] \u003d \"\";"},{"lineNumber":118,"author":{"gitId":"douglaslewpc"},"content":"        try {"},{"lineNumber":119,"author":{"gitId":"douglaslewpc"},"content":"            boolean byFlag \u003d false;"},{"lineNumber":120,"author":{"gitId":"douglaslewpc"},"content":"            int wordsCount \u003d userInput.length;"},{"lineNumber":121,"author":{"gitId":"douglaslewpc"},"content":"            if (wordsCount \u003d\u003d 1) {"},{"lineNumber":122,"author":{"gitId":"douglaslewpc"},"content":"                throw new DukeException(\"missing_parameter\");"},{"lineNumber":123,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"douglaslewpc"},"content":"            for (String word : userInput) {"},{"lineNumber":125,"author":{"gitId":"douglaslewpc"},"content":"                wordsCount--;"},{"lineNumber":126,"author":{"gitId":"douglaslewpc"},"content":"                if (word.equals(\"/by\")) {"},{"lineNumber":127,"author":{"gitId":"douglaslewpc"},"content":"                    byFlag \u003d true;"},{"lineNumber":128,"author":{"gitId":"douglaslewpc"},"content":"                    continue;"},{"lineNumber":129,"author":{"gitId":"douglaslewpc"},"content":"                }"},{"lineNumber":130,"author":{"gitId":"douglaslewpc"},"content":"                if (word.equals(\"deadline\")) {"},{"lineNumber":131,"author":{"gitId":"douglaslewpc"},"content":"                    continue;"},{"lineNumber":132,"author":{"gitId":"douglaslewpc"},"content":"                }"},{"lineNumber":133,"author":{"gitId":"douglaslewpc"},"content":"                if (byFlag \u0026\u0026 (wordsCount \u003d\u003d 0)) {"},{"lineNumber":134,"author":{"gitId":"douglaslewpc"},"content":"                    information[1] \u003d information[1] + word;"},{"lineNumber":135,"author":{"gitId":"douglaslewpc"},"content":"                } else if (byFlag) {"},{"lineNumber":136,"author":{"gitId":"douglaslewpc"},"content":"                    information[1] \u003d information[1] + word + \" \";"},{"lineNumber":137,"author":{"gitId":"douglaslewpc"},"content":"                } else {"},{"lineNumber":138,"author":{"gitId":"douglaslewpc"},"content":"                    information[0] \u003d information[0] + word + \" \";"},{"lineNumber":139,"author":{"gitId":"douglaslewpc"},"content":"                }"},{"lineNumber":140,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":141,"author":{"gitId":"douglaslewpc"},"content":"        } catch (DukeException e) {"},{"lineNumber":142,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(border);"},{"lineNumber":143,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\"    OOPS!! The description of the deadline cannot be empty.\");"},{"lineNumber":144,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(border);"},{"lineNumber":145,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"douglaslewpc"},"content":"        return information;"},{"lineNumber":147,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":149,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":149}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":"* The Storage class deals with saving tasks into files and loading tasks from files."},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"* */"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":"package storage;"},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"import commands.Task;"},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"import commands.Todo;"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"import commands.Deadline;"},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"import commands.Event;"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"import exceptions.DukeException;"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"import tasklist.TaskList;"},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":"import ui.Ui;"},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":"import parser.Parser;"},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":17,"author":{"gitId":"douglaslewpc"},"content":"import java.util.ArrayList;"},{"lineNumber":18,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":19,"author":{"gitId":"douglaslewpc"},"content":"import java.io.File;"},{"lineNumber":20,"author":{"gitId":"douglaslewpc"},"content":"import java.io.FileWriter;"},{"lineNumber":21,"author":{"gitId":"douglaslewpc"},"content":"import java.io.IOException;"},{"lineNumber":22,"author":{"gitId":"douglaslewpc"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":23,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":24,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":25,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":26,"author":{"gitId":"douglaslewpc"},"content":"public class Storage {"},{"lineNumber":27,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":28,"author":{"gitId":"douglaslewpc"},"content":"    public static void loadFile(TaskList tasks) throws FileNotFoundException {"},{"lineNumber":29,"author":{"gitId":"douglaslewpc"},"content":"        File filePath \u003d new File(\"duke.txt\");"},{"lineNumber":30,"author":{"gitId":"douglaslewpc"},"content":"        if (!filePath.exists()) {"},{"lineNumber":31,"author":{"gitId":"douglaslewpc"},"content":"            throw new FileNotFoundException();"},{"lineNumber":32,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"douglaslewpc"},"content":"        Scanner s \u003d new Scanner(filePath);"},{"lineNumber":34,"author":{"gitId":"douglaslewpc"},"content":"        if (filePath.length() !\u003d 0) {"},{"lineNumber":35,"author":{"gitId":"douglaslewpc"},"content":"            while (s.hasNext()) {"},{"lineNumber":36,"author":{"gitId":"douglaslewpc"},"content":"                String currentLine \u003d s.nextLine();"},{"lineNumber":37,"author":{"gitId":"douglaslewpc"},"content":"                String[] words \u003d currentLine.split(\" \");"},{"lineNumber":38,"author":{"gitId":"douglaslewpc"},"content":"                if (words[0].equals(\"[T]\")) {"},{"lineNumber":39,"author":{"gitId":"douglaslewpc"},"content":"                    String description \u003d \"\";"},{"lineNumber":40,"author":{"gitId":"douglaslewpc"},"content":"                    int startingIndex \u003d 2;"},{"lineNumber":41,"author":{"gitId":"douglaslewpc"},"content":"                    if (words[1].equals(\"[\")) {"},{"lineNumber":42,"author":{"gitId":"douglaslewpc"},"content":"                        startingIndex \u003d 3;"},{"lineNumber":43,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":44,"author":{"gitId":"douglaslewpc"},"content":"                    for (int i \u003d startingIndex; i \u003c words.length; i++) {"},{"lineNumber":45,"author":{"gitId":"douglaslewpc"},"content":"                        description \u003d description + words[i] + \" \";"},{"lineNumber":46,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":47,"author":{"gitId":"douglaslewpc"},"content":"                    Todo todo \u003d new Todo(description);"},{"lineNumber":48,"author":{"gitId":"douglaslewpc"},"content":"                    tasks.addTask(todo);"},{"lineNumber":49,"author":{"gitId":"douglaslewpc"},"content":"                    if (words[1].equals(\"[X]\")) {"},{"lineNumber":50,"author":{"gitId":"douglaslewpc"},"content":"                        tasks.markTaskAsDone(tasks.getTaskCount());"},{"lineNumber":51,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":52,"author":{"gitId":"douglaslewpc"},"content":"                    tasks.incrementTaskCount();"},{"lineNumber":53,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":54,"author":{"gitId":"douglaslewpc"},"content":"                } else if (words[0].equals(\"[D]\")) {"},{"lineNumber":55,"author":{"gitId":"douglaslewpc"},"content":"                    String description \u003d \"\";"},{"lineNumber":56,"author":{"gitId":"douglaslewpc"},"content":"                    String by \u003d \"\";"},{"lineNumber":57,"author":{"gitId":"douglaslewpc"},"content":"                    boolean byFlag \u003d false;"},{"lineNumber":58,"author":{"gitId":"douglaslewpc"},"content":"                    int startingIndex \u003d 2;"},{"lineNumber":59,"author":{"gitId":"douglaslewpc"},"content":"                    if (words[1].equals(\"[\")) {"},{"lineNumber":60,"author":{"gitId":"douglaslewpc"},"content":"                        startingIndex \u003d 3;"},{"lineNumber":61,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":62,"author":{"gitId":"douglaslewpc"},"content":"                    for (int i \u003d startingIndex; i \u003c words.length; i++) {"},{"lineNumber":63,"author":{"gitId":"douglaslewpc"},"content":"                        if (words[i].equals(\"(by:\")) {"},{"lineNumber":64,"author":{"gitId":"douglaslewpc"},"content":"                            byFlag \u003d true;"},{"lineNumber":65,"author":{"gitId":"douglaslewpc"},"content":"                        } else if (!byFlag) {"},{"lineNumber":66,"author":{"gitId":"douglaslewpc"},"content":"                            description \u003d description + words[i] + \" \";"},{"lineNumber":67,"author":{"gitId":"douglaslewpc"},"content":"                        } else {"},{"lineNumber":68,"author":{"gitId":"douglaslewpc"},"content":"                            if (i \u003d\u003d words.length - 1) {"},{"lineNumber":69,"author":{"gitId":"douglaslewpc"},"content":"                                by \u003d by + words[i];"},{"lineNumber":70,"author":{"gitId":"douglaslewpc"},"content":"                            } else {"},{"lineNumber":71,"author":{"gitId":"douglaslewpc"},"content":"                                by \u003d by + words[i] + \" \";"},{"lineNumber":72,"author":{"gitId":"douglaslewpc"},"content":"                            }"},{"lineNumber":73,"author":{"gitId":"douglaslewpc"},"content":"                        }"},{"lineNumber":74,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":75,"author":{"gitId":"douglaslewpc"},"content":"                    by \u003d by.replace(\")\", \"\");"},{"lineNumber":76,"author":{"gitId":"douglaslewpc"},"content":"                    Deadline deadline \u003d new Deadline(description, by);"},{"lineNumber":77,"author":{"gitId":"douglaslewpc"},"content":"                    tasks.addTask(deadline);"},{"lineNumber":78,"author":{"gitId":"douglaslewpc"},"content":"                    if (words[1].equals(\"[X]\")) {"},{"lineNumber":79,"author":{"gitId":"douglaslewpc"},"content":"                        tasks.markTaskAsDone(tasks.getTaskCount());"},{"lineNumber":80,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":81,"author":{"gitId":"douglaslewpc"},"content":"                    tasks.incrementTaskCount();"},{"lineNumber":82,"author":{"gitId":"douglaslewpc"},"content":"                } else if (words[0].equals(\"[E]\")) {"},{"lineNumber":83,"author":{"gitId":"douglaslewpc"},"content":"                    String description \u003d \"\";"},{"lineNumber":84,"author":{"gitId":"douglaslewpc"},"content":"                    String at \u003d \"\";"},{"lineNumber":85,"author":{"gitId":"douglaslewpc"},"content":"                    boolean atFlag \u003d false;"},{"lineNumber":86,"author":{"gitId":"douglaslewpc"},"content":"                    int startingIndex \u003d 2;"},{"lineNumber":87,"author":{"gitId":"douglaslewpc"},"content":"                    if (words[1].equals(\"[\")) {"},{"lineNumber":88,"author":{"gitId":"douglaslewpc"},"content":"                        startingIndex \u003d 3;"},{"lineNumber":89,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":90,"author":{"gitId":"douglaslewpc"},"content":"                    for (int i \u003d startingIndex; i \u003c words.length; i++) {"},{"lineNumber":91,"author":{"gitId":"douglaslewpc"},"content":"                        if (words[i].equals(\"(at:\")) {"},{"lineNumber":92,"author":{"gitId":"douglaslewpc"},"content":"                            atFlag \u003d true;"},{"lineNumber":93,"author":{"gitId":"douglaslewpc"},"content":"                        } else if (!atFlag) {"},{"lineNumber":94,"author":{"gitId":"douglaslewpc"},"content":"                            description \u003d description + words[i] + \" \";"},{"lineNumber":95,"author":{"gitId":"douglaslewpc"},"content":"                        } else {"},{"lineNumber":96,"author":{"gitId":"douglaslewpc"},"content":"                            if (i \u003d\u003d words.length - 1) {"},{"lineNumber":97,"author":{"gitId":"douglaslewpc"},"content":"                                at \u003d at + words[i];"},{"lineNumber":98,"author":{"gitId":"douglaslewpc"},"content":"                            } else {"},{"lineNumber":99,"author":{"gitId":"douglaslewpc"},"content":"                                at \u003d at + words[i] + \" \";"},{"lineNumber":100,"author":{"gitId":"douglaslewpc"},"content":"                            }"},{"lineNumber":101,"author":{"gitId":"douglaslewpc"},"content":"                        }"},{"lineNumber":102,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":103,"author":{"gitId":"douglaslewpc"},"content":"                    at \u003d at.replace(\")\", \"\");"},{"lineNumber":104,"author":{"gitId":"douglaslewpc"},"content":"                    Event event \u003d new Event(description, at);"},{"lineNumber":105,"author":{"gitId":"douglaslewpc"},"content":"                    tasks.addTask(event);"},{"lineNumber":106,"author":{"gitId":"douglaslewpc"},"content":"                    if (words[1].equals(\"[X]\")) {"},{"lineNumber":107,"author":{"gitId":"douglaslewpc"},"content":"                        tasks.markTaskAsDone(tasks.getTaskCount());"},{"lineNumber":108,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":109,"author":{"gitId":"douglaslewpc"},"content":"                    tasks.incrementTaskCount();"},{"lineNumber":110,"author":{"gitId":"douglaslewpc"},"content":"                }"},{"lineNumber":111,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":115,"author":{"gitId":"douglaslewpc"},"content":"    public static void saveFile(TaskList tasks) throws IOException {"},{"lineNumber":116,"author":{"gitId":"douglaslewpc"},"content":"        File filePath \u003d new File(\"duke.txt\");"},{"lineNumber":117,"author":{"gitId":"douglaslewpc"},"content":"        if (!filePath.exists()) {"},{"lineNumber":118,"author":{"gitId":"douglaslewpc"},"content":"            if (filePath.createNewFile()) {"},{"lineNumber":119,"author":{"gitId":"douglaslewpc"},"content":"                throw new IOException();"},{"lineNumber":120,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":121,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"douglaslewpc"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);"},{"lineNumber":123,"author":{"gitId":"douglaslewpc"},"content":"        for (int i \u003d 0; i \u003c tasks.getTaskCount(); i++) {"},{"lineNumber":124,"author":{"gitId":"douglaslewpc"},"content":"            String task \u003d tasks.printCurrentTask(i).toString() + \"\\n\";"},{"lineNumber":125,"author":{"gitId":"douglaslewpc"},"content":"            fileWriter.write(task);"},{"lineNumber":126,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"douglaslewpc"},"content":"        fileWriter.close();"},{"lineNumber":128,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":129}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":"* The TaskListStores the task list and has operations to add/delete tasks"},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"*/"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":"package tasklist;"},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"import commands.Task;"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"import ui.Ui;"},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"public class TaskList {"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"    private Ui ui \u003d new Ui();"},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":17,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":19,"author":{"gitId":"douglaslewpc"},"content":"    private int taskCount \u003d 0;"},{"lineNumber":20,"author":{"gitId":"douglaslewpc"},"content":"    public static final String border \u003d \"    -------------------------------------------------------------------------------------------------------------------------------\";"},{"lineNumber":21,"author":{"gitId":"douglaslewpc"},"content":"    /*"},{"lineNumber":22,"author":{"gitId":"douglaslewpc"},"content":"    * The add task method within the TaskList class adds tasks from the list"},{"lineNumber":23,"author":{"gitId":"douglaslewpc"},"content":"    * @params task contains information of the task to be added to the list"},{"lineNumber":24,"author":{"gitId":"douglaslewpc"},"content":"    * */"},{"lineNumber":25,"author":{"gitId":"douglaslewpc"},"content":"    public void addTask(Task task) {"},{"lineNumber":26,"author":{"gitId":"douglaslewpc"},"content":"        tasks.add(task);"},{"lineNumber":27,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"douglaslewpc"},"content":"    /*"},{"lineNumber":29,"author":{"gitId":"douglaslewpc"},"content":"    The deleteTask method within the TaskList class deletes tasks from the list"},{"lineNumber":30,"author":{"gitId":"douglaslewpc"},"content":"    * @params taskNum specifies the task to be deleted"},{"lineNumber":31,"author":{"gitId":"douglaslewpc"},"content":"    * */"},{"lineNumber":32,"author":{"gitId":"douglaslewpc"},"content":"    public void deleteTask(int taskNum) {"},{"lineNumber":33,"author":{"gitId":"douglaslewpc"},"content":"        if (taskNum \u003c taskCount \u0026\u0026 taskNum \u003e\u003d 0) {"},{"lineNumber":34,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(border);"},{"lineNumber":35,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\"    Noted. I\u0027ve removed this task:\");"},{"lineNumber":36,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\"      \" + tasks.get(taskNum));"},{"lineNumber":37,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\" \");"},{"lineNumber":38,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(border);"},{"lineNumber":39,"author":{"gitId":"douglaslewpc"},"content":"            tasks.remove(taskNum);"},{"lineNumber":40,"author":{"gitId":"douglaslewpc"},"content":"            taskCount--;"},{"lineNumber":41,"author":{"gitId":"douglaslewpc"},"content":"        } else {"},{"lineNumber":42,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(border);"},{"lineNumber":43,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\"    Index out of range\");"},{"lineNumber":44,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\" \");"},{"lineNumber":45,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(border);"},{"lineNumber":46,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":49,"author":{"gitId":"douglaslewpc"},"content":"    public void incrementTaskCount() {"},{"lineNumber":50,"author":{"gitId":"douglaslewpc"},"content":"        taskCount++;"},{"lineNumber":51,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":53,"author":{"gitId":"douglaslewpc"},"content":"    public int getTaskCount() {"},{"lineNumber":54,"author":{"gitId":"douglaslewpc"},"content":"        return taskCount;"},{"lineNumber":55,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":57,"author":{"gitId":"douglaslewpc"},"content":"    public Task getMostRecentTaskAdded() {"},{"lineNumber":58,"author":{"gitId":"douglaslewpc"},"content":"        Task task \u003d tasks.get(taskCount);"},{"lineNumber":59,"author":{"gitId":"douglaslewpc"},"content":"        return task;"},{"lineNumber":60,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":62,"author":{"gitId":"douglaslewpc"},"content":"    public void markTaskAsDone(int taskNum) {"},{"lineNumber":63,"author":{"gitId":"douglaslewpc"},"content":"        if (taskNum \u003c taskCount \u0026\u0026 taskNum \u003e\u003d 0) {"},{"lineNumber":64,"author":{"gitId":"douglaslewpc"},"content":"            tasks.get(taskNum).markAsDone();"},{"lineNumber":65,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(border);"},{"lineNumber":66,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\"    Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":67,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\"      \" + tasks.get(taskNum));"},{"lineNumber":68,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\" \");"},{"lineNumber":69,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(border);"},{"lineNumber":70,"author":{"gitId":"douglaslewpc"},"content":"        } else {"},{"lineNumber":71,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(border);"},{"lineNumber":72,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\"    Index out of range\");"},{"lineNumber":73,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\" \");"},{"lineNumber":74,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(border);"},{"lineNumber":75,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":78,"author":{"gitId":"douglaslewpc"},"content":"    public void printList() {"},{"lineNumber":79,"author":{"gitId":"douglaslewpc"},"content":"        if (taskCount \u003e 0) {"},{"lineNumber":80,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(border);"},{"lineNumber":81,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\"    Here are the tasks in your list:\");"},{"lineNumber":82,"author":{"gitId":"douglaslewpc"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {"},{"lineNumber":83,"author":{"gitId":"douglaslewpc"},"content":"                System.out.println(\"    \" + (i + 1) + \". \" + tasks.get(i));"},{"lineNumber":84,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\" \");"},{"lineNumber":86,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(border);"},{"lineNumber":87,"author":{"gitId":"douglaslewpc"},"content":"        } else {"},{"lineNumber":88,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(border);"},{"lineNumber":89,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\"    The list is empty\");"},{"lineNumber":90,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\" \");"},{"lineNumber":91,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(border);"},{"lineNumber":92,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":95,"author":{"gitId":"douglaslewpc"},"content":"    public void find(String keyword) {"},{"lineNumber":96,"author":{"gitId":"douglaslewpc"},"content":"        int currentListNumber \u003d 1;"},{"lineNumber":97,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(border);"},{"lineNumber":98,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"    Here are the matching tasks in your list:\");"},{"lineNumber":99,"author":{"gitId":"douglaslewpc"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {"},{"lineNumber":100,"author":{"gitId":"douglaslewpc"},"content":"            if ((tasks.get(i).getTask()).contains(keyword)) {"},{"lineNumber":101,"author":{"gitId":"douglaslewpc"},"content":"                System.out.println(\"    \" + currentListNumber + \". \" + tasks.get(i));"},{"lineNumber":102,"author":{"gitId":"douglaslewpc"},"content":"                currentListNumber++;"},{"lineNumber":103,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\" \");"},{"lineNumber":106,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(border);"},{"lineNumber":107,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":109,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":110,"author":{"gitId":"douglaslewpc"},"content":"    public Task printCurrentTask(int taskNum) {"},{"lineNumber":111,"author":{"gitId":"douglaslewpc"},"content":"        return tasks.get(taskNum);"},{"lineNumber":112,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":113}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"import tasklist.TaskList;"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":"import commands.Task;"},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"public class Ui {"},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"    public static final String border \u003d \"    -------------------------------------------------------------------------------------------------------------------------------\";"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"    public void printWelcomeMessage(){"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":17,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":18,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"-------------------------------------------------------------------------------------------------------------------------------\");"},{"lineNumber":19,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":20,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":21,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\" \");"},{"lineNumber":22,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"-------------------------------------------------------------------------------------------------------------------------------\");"},{"lineNumber":23,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":25,"author":{"gitId":"douglaslewpc"},"content":"    public void printList(){"},{"lineNumber":26,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(border);"},{"lineNumber":27,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"    Here are the tasks in your list:\");"},{"lineNumber":28,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"douglaslewpc"},"content":"    public void printBorder(){"},{"lineNumber":30,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\" \");"},{"lineNumber":31,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(border);"},{"lineNumber":32,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"douglaslewpc"},"content":"    public void printByeMessage(){"},{"lineNumber":34,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(border);"},{"lineNumber":35,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");"},{"lineNumber":36,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\" \");"},{"lineNumber":37,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(border);"},{"lineNumber":38,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"douglaslewpc"},"content":"    public void printAddTaskMessage(TaskList tasks){"},{"lineNumber":40,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(border);"},{"lineNumber":41,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");"},{"lineNumber":42,"author":{"gitId":"douglaslewpc"},"content":"        int taskCount \u003d tasks.getTaskCount();"},{"lineNumber":43,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"      \" + tasks.getMostRecentTaskAdded());"},{"lineNumber":44,"author":{"gitId":"douglaslewpc"},"content":"        tasks.incrementTaskCount();"},{"lineNumber":45,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"    Now you have \" + tasks.getTaskCount() + \" tasks in the list.\");"},{"lineNumber":46,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\" \");"},{"lineNumber":47,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(border);"},{"lineNumber":48,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":50,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":50}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":"list"},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"deadline return book /by June 6th"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"todo join sports club"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"done 4"},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"todo borrow book"},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"list"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"deadline return book /by Sunday"},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"event projects meeting /at Mon 2-4pm"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"list"}],"authorContributionMap":{"douglaslewpc":12}}]
