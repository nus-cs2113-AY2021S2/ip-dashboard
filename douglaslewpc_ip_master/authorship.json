[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"douglaslewpc"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"douglaslewpc":9,"-":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"\");"},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"        boolean isOn \u003d true;"},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"        int numOfCompletedTasks \u003d 0;"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"        int numOfTasks \u003d 0;"},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"        Task[] listArray \u003d new Task[100];"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"        int n \u003d 0;"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"        while(isOn) {"},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":"            Scanner in \u003d new Scanner(System.in);"},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":"            String line \u003d in.nextLine();"},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"            String[] words \u003d line.split(\" \");"},{"lineNumber":17,"author":{"gitId":"douglaslewpc"},"content":"            if(line.equals(\"bye\")){"},{"lineNumber":18,"author":{"gitId":"douglaslewpc"},"content":"                isOn \u003d false;"},{"lineNumber":19,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":20,"author":{"gitId":"douglaslewpc"},"content":"            else if(words[0].equals(\"done\")){"},{"lineNumber":21,"author":{"gitId":"douglaslewpc"},"content":"                int taskNum \u003d Integer.parseInt(words[1])-1;"},{"lineNumber":22,"author":{"gitId":"douglaslewpc"},"content":"                listArray[taskNum].markAsDone();"},{"lineNumber":23,"author":{"gitId":"douglaslewpc"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":24,"author":{"gitId":"douglaslewpc"},"content":"                System.out.println(\"[\" + \"\\u2718\" + \"] \" + listArray[taskNum].getTask());"},{"lineNumber":25,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"douglaslewpc"},"content":"            else if(line.equals(\"list\")){"},{"lineNumber":27,"author":{"gitId":"douglaslewpc"},"content":"                System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":28,"author":{"gitId":"douglaslewpc"},"content":"                for(int i\u003d0;i\u003cn;i++){"},{"lineNumber":29,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println((i + 1) + \". [\" + listArray[i].getStatusIcon() + \"] \" + listArray[i].getTask());"},{"lineNumber":30,"author":{"gitId":"douglaslewpc"},"content":"                }"},{"lineNumber":31,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"douglaslewpc"},"content":"            else {"},{"lineNumber":33,"author":{"gitId":"douglaslewpc"},"content":"                listArray[n] \u003d new Task(line);"},{"lineNumber":34,"author":{"gitId":"douglaslewpc"},"content":"                n++;"},{"lineNumber":35,"author":{"gitId":"douglaslewpc"},"content":"                System.out.println(\"added: \" + line);"},{"lineNumber":36,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"douglaslewpc":36,"-":4}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"douglaslewpc"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":"    private String description;"},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"    private boolean isDone;"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"    public Task(String description){"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"    public void markAsDone(){"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"        isDone \u003d true;"},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"    public String getTask(){"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"        return description;"},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":"    public String getStatusIcon(){"},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"        return (isDone ? \"\\u2718\":\" \");"},{"lineNumber":17,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":19,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":19}}]
