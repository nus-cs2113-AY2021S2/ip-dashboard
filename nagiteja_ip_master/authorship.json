[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":27,"author":{"gitId":"nagiteja"},"content":"USER GUIDE"},{"lineNumber":28,"author":{"gitId":"nagiteja"},"content":"Features"},{"lineNumber":29,"author":{"gitId":"nagiteja"},"content":"1. Ability to add"},{"lineNumber":30,"author":{"gitId":"nagiteja"},"content":"2. Ability to delete"},{"lineNumber":31,"author":{"gitId":"nagiteja"},"content":"3. Ability to update the status"},{"lineNumber":32,"author":{"gitId":"nagiteja"},"content":"4. Ability to find tasks"},{"lineNumber":33,"author":{"gitId":"nagiteja"},"content":"5. Ability to save the tasks to your Hard disk."},{"lineNumber":34,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":35,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":36,"author":{"gitId":"nagiteja"},"content":"Commands you can give and their uses:"},{"lineNumber":37,"author":{"gitId":"nagiteja"},"content":"1. list"},{"lineNumber":38,"author":{"gitId":"nagiteja"},"content":"The chatbot lists down all the tasks written by you."},{"lineNumber":39,"author":{"gitId":"nagiteja"},"content":"Ex:"},{"lineNumber":40,"author":{"gitId":"nagiteja"},"content":"list"},{"lineNumber":41,"author":{"gitId":"nagiteja"},"content":"Expected Outcome:"},{"lineNumber":42,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":43,"author":{"gitId":"nagiteja"},"content":"1. [T][\"cross mark\"] buy milk from 7-11"},{"lineNumber":44,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":45,"author":{"gitId":"nagiteja"},"content":"2. [D][\"tick\"] finish maths assignment (by: Jan 16 2021, 9:00pm)"},{"lineNumber":46,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":47,"author":{"gitId":"nagiteja"},"content":"3. [E][\"cross mark\"] Attend friend\u0027s wedding  (at: Jan 24 2021, 12:00pm)"},{"lineNumber":48,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":49,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":50,"author":{"gitId":"nagiteja"},"content":"2. done [int number]"},{"lineNumber":51,"author":{"gitId":"nagiteja"},"content":"This means that the respective task in the task bot will be done and will be \"ticked\""},{"lineNumber":52,"author":{"gitId":"nagiteja"},"content":"Ex:"},{"lineNumber":53,"author":{"gitId":"nagiteja"},"content":"done 3"},{"lineNumber":54,"author":{"gitId":"nagiteja"},"content":"Expected outcome:"},{"lineNumber":55,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":56,"author":{"gitId":"nagiteja"},"content":"Nice! I\u0027ve marked this task as done: [E][\"tick\"] Attend friend\u0027s wedding  (at: Jan 24 2021, 12:00pm). Now you have 3 tasks in the list"},{"lineNumber":57,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":58,"author":{"gitId":"nagiteja"},"content":"3. delete [int number] "},{"lineNumber":59,"author":{"gitId":"nagiteja"},"content":"deletes teh respective task from the list"},{"lineNumber":60,"author":{"gitId":"nagiteja"},"content":"Ex"},{"lineNumber":61,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":62,"author":{"gitId":"nagiteja"},"content":"delete 3"},{"lineNumber":63,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":64,"author":{"gitId":"nagiteja"},"content":"Expected outcome:"},{"lineNumber":65,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":66,"author":{"gitId":"nagiteja"},"content":"Noted. Ive remoevd this task:"},{"lineNumber":67,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":68,"author":{"gitId":"nagiteja"},"content":"[E][\"tick\"] Attend friend\u0027s wedding  (at: Jan 24 2021, 12:00pm)."},{"lineNumber":69,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":70,"author":{"gitId":"nagiteja"},"content":"Now you have 2 tasks to the list"},{"lineNumber":71,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":72,"author":{"gitId":"nagiteja"},"content":"4. deadline"},{"lineNumber":73,"author":{"gitId":"nagiteja"},"content":"add a deadline task at the time and date and adds it to the lsit of tasks."},{"lineNumber":74,"author":{"gitId":"nagiteja"},"content":"Ex: deadline get get groceries  /by 22/02/2021 23:59"},{"lineNumber":75,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":76,"author":{"gitId":"nagiteja"},"content":"Expected outcome:"},{"lineNumber":77,"author":{"gitId":"nagiteja"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":78,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":79,"author":{"gitId":"nagiteja"},"content":"[D][\"cross mark\"] deadline get get groceries  /by 22/02/2021 23:59. "},{"lineNumber":80,"author":{"gitId":"nagiteja"},"content":"You have 7 tasks left to do."},{"lineNumber":81,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":82,"author":{"gitId":"nagiteja"},"content":"5. event"},{"lineNumber":83,"author":{"gitId":"nagiteja"},"content":"adds a event task at the time and date and adds it to the lsit of tasks."},{"lineNumber":84,"author":{"gitId":"nagiteja"},"content":"Ex: event go watch cinema  /at 23/02/2021 23:59"},{"lineNumber":85,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":86,"author":{"gitId":"nagiteja"},"content":"Expected outcome:"},{"lineNumber":87,"author":{"gitId":"nagiteja"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":88,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":89,"author":{"gitId":"nagiteja"},"content":"[E][\"crossmark\"] event project meeting 23/02/2021 23:59"},{"lineNumber":90,"author":{"gitId":"nagiteja"},"content":"You have 7 tasks left to do."},{"lineNumber":91,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":92,"author":{"gitId":"nagiteja"},"content":"6. todo"},{"lineNumber":93,"author":{"gitId":"nagiteja"},"content":"adds a todo task to the list of objects."},{"lineNumber":94,"author":{"gitId":"nagiteja"},"content":"Ex: todo this assignemnt "},{"lineNumber":95,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":96,"author":{"gitId":"nagiteja"},"content":"Expected outcome:"},{"lineNumber":97,"author":{"gitId":"nagiteja"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":98,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":99,"author":{"gitId":"nagiteja"},"content":"[E][\"cross amrk\"] todo this assignment"},{"lineNumber":100,"author":{"gitId":"nagiteja"},"content":"You have 5 tasks left to do."},{"lineNumber":101,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":102,"author":{"gitId":"nagiteja"},"content":"7. find "},{"lineNumber":103,"author":{"gitId":"nagiteja"},"content":"finds for the respective word from all the tasks in the list."},{"lineNumber":104,"author":{"gitId":"nagiteja"},"content":"Ex:"},{"lineNumber":105,"author":{"gitId":"nagiteja"},"content":"find Attend"},{"lineNumber":106,"author":{"gitId":"nagiteja"},"content":"Expected outcome:"},{"lineNumber":107,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":108,"author":{"gitId":"nagiteja"},"content":"[E][\"cross mark\"] Attend friend\u0027s wedding  (at: Jan 24 2021, 12:00pm)"},{"lineNumber":109,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":110,"author":{"gitId":"nagiteja"},"content":""}],"authorContributionMap":{"nagiteja":84,"-":26}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nagiteja"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"nagiteja"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"nagiteja"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"nagiteja"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"nagiteja"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"nagiteja"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"nagiteja"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"nagiteja"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"nagiteja"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"nagiteja"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"nagiteja"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"nagiteja"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"nagiteja"},"content":"# **Duke UserGuide**"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"nagiteja"},"content":"   ```"},{"lineNumber":22,"author":{"gitId":"nagiteja"},"content":"_____________________________"},{"lineNumber":23,"author":{"gitId":"nagiteja"},"content":"Hello from"},{"lineNumber":24,"author":{"gitId":"nagiteja"},"content":"____        _"},{"lineNumber":25,"author":{"gitId":"nagiteja"},"content":"|  _ \\ _   _| | _____"},{"lineNumber":26,"author":{"gitId":"nagiteja"},"content":"| | | | | | | |/ / _ \\"},{"lineNumber":27,"author":{"gitId":"nagiteja"},"content":"| |_| | |_| |   \u003c  __/"},{"lineNumber":28,"author":{"gitId":"nagiteja"},"content":"|____/ \\__,_|_|\\_\\___|"},{"lineNumber":29,"author":{"gitId":"nagiteja"},"content":"What can I do for you?"},{"lineNumber":30,"author":{"gitId":"nagiteja"},"content":"_____________________________"},{"lineNumber":31,"author":{"gitId":"nagiteja"},"content":"   ```"},{"lineNumber":32,"author":{"gitId":"nagiteja"},"content":"## `Setting up Duke`  \u003cbr /\u003e"},{"lineNumber":33,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":34,"author":{"gitId":"nagiteja"},"content":"1. Open your Terminal \u003cbr /\u003e"},{"lineNumber":35,"author":{"gitId":"nagiteja"},"content":"2. Change you directory to where the Jar file is located at. \u003cbr /\u003e"},{"lineNumber":36,"author":{"gitId":"nagiteja"},"content":"3. Type in the command **java -jar ip.jar** to execute. \u003cbr /\u003e"},{"lineNumber":37,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":38,"author":{"gitId":"nagiteja"},"content":"## `Features` \u003cbr /\u003e"},{"lineNumber":39,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":40,"author":{"gitId":"nagiteja"},"content":"1.list \u003cbr /\u003e"},{"lineNumber":41,"author":{"gitId":"nagiteja"},"content":"2.done \u003cbr /\u003e"},{"lineNumber":42,"author":{"gitId":"nagiteja"},"content":"3.delete \u003cbr /\u003e"},{"lineNumber":43,"author":{"gitId":"nagiteja"},"content":"4.deadline \u003cbr /\u003e"},{"lineNumber":44,"author":{"gitId":"nagiteja"},"content":"5.event \u003cbr /\u003e"},{"lineNumber":45,"author":{"gitId":"nagiteja"},"content":"6.todo \u003cbr /\u003e"},{"lineNumber":46,"author":{"gitId":"nagiteja"},"content":"7.find \u003cbr /\u003e"},{"lineNumber":47,"author":{"gitId":"nagiteja"},"content":"8.bye \u003cbr /\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"nagiteja"},"content":"`Commands you can give and their uses:`"},{"lineNumber":50,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":51,"author":{"gitId":"nagiteja"},"content":"### 1. `list` \u003cbr /\u003e"},{"lineNumber":52,"author":{"gitId":"nagiteja"},"content":"The chatbot lists down all the tasks written by you. \u003cbr /\u003e"},{"lineNumber":53,"author":{"gitId":"nagiteja"},"content":"Ex: \u003cbr /\u003e"},{"lineNumber":54,"author":{"gitId":"nagiteja"},"content":"list \u003cbr /\u003e"},{"lineNumber":55,"author":{"gitId":"nagiteja"},"content":"Expected Outcome: \u003cbr /\u003e"},{"lineNumber":56,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":57,"author":{"gitId":"nagiteja"},"content":"1. [T][\"cross mark\"] buy milk from 7-11 \u003cbr /\u003e"},{"lineNumber":58,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":59,"author":{"gitId":"nagiteja"},"content":"2. [D][\"tick\"] finish maths assignment (by: Jan 16 2021, 9:00pm) \u003cbr /\u003e"},{"lineNumber":60,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":61,"author":{"gitId":"nagiteja"},"content":"3. [E][\"cross mark\"] Attend friend\u0027s wedding  (at: Jan 24 2021, 12:00pm) \u003cbr /\u003e"},{"lineNumber":62,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":63,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":64,"author":{"gitId":"nagiteja"},"content":"### 2. `done` \u003cbr /\u003e"},{"lineNumber":65,"author":{"gitId":"nagiteja"},"content":"This means that the respective task in the task bot will be done and will be \"ticked\" \u003cbr /\u003e"},{"lineNumber":66,"author":{"gitId":"nagiteja"},"content":"Ex: \u003cbr /\u003e"},{"lineNumber":67,"author":{"gitId":"nagiteja"},"content":"done 3 \u003cbr /\u003e"},{"lineNumber":68,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":69,"author":{"gitId":"nagiteja"},"content":"Expected outcome: \u003cbr /\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"nagiteja"},"content":"Nice! I\u0027ve marked this task as done: [E][\"tick\"] Attend friend\u0027s wedding  (at: Jan 24 2021, 12:00pm). Now you have 3 tasks in the list \u003cbr /\u003e"},{"lineNumber":72,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":73,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":74,"author":{"gitId":"nagiteja"},"content":"### 3. `delete` \u003cbr /\u003e"},{"lineNumber":75,"author":{"gitId":"nagiteja"},"content":"deletes the respective task from the list \u003cbr /\u003e"},{"lineNumber":76,"author":{"gitId":"nagiteja"},"content":"Ex: \u003cbr /e\u003e"},{"lineNumber":77,"author":{"gitId":"nagiteja"},"content":"delete 3 \u003cbr /\u003e"},{"lineNumber":78,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":79,"author":{"gitId":"nagiteja"},"content":"Expected outcome: \u003cbr /\u003e"},{"lineNumber":80,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":81,"author":{"gitId":"nagiteja"},"content":"Noted. I\u0027ve removed this task: \u003cbr /\u003e"},{"lineNumber":82,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":83,"author":{"gitId":"nagiteja"},"content":"[E][\"tick\"] Attend friend\u0027s wedding  (at: Jan 24 2021, 12:00pm). \u003cbr /\u003e"},{"lineNumber":84,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":85,"author":{"gitId":"nagiteja"},"content":"Now you have 2 tasks on the list \u003cbr /\u003e"},{"lineNumber":86,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":87,"author":{"gitId":"nagiteja"},"content":"### 3. `deadline` \u003cbr /\u003e"},{"lineNumber":88,"author":{"gitId":"nagiteja"},"content":"add a deadline task at the time and date and adds it to the lsit of tasks. \u003cbr /\u003e"},{"lineNumber":89,"author":{"gitId":"nagiteja"},"content":"Ex: \u003cbr /\u003e"},{"lineNumber":90,"author":{"gitId":"nagiteja"},"content":"deadline get groceries  /by 22/02/2021 23:59 \u003cbr /\u003e"},{"lineNumber":91,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":92,"author":{"gitId":"nagiteja"},"content":"Expected outcome:\u003cbr /\u003e"},{"lineNumber":93,"author":{"gitId":"nagiteja"},"content":"Got it. I\u0027ve added this task: \u003cbr /\u003e"},{"lineNumber":94,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":95,"author":{"gitId":"nagiteja"},"content":"[D][\"cross mark\"] deadline get groceries by 22/02/2021 23:59. \u003cbr /\u003e"},{"lineNumber":96,"author":{"gitId":"nagiteja"},"content":"You have 7 tasks left to do. \u003cbr /\u003e"},{"lineNumber":97,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":98,"author":{"gitId":"nagiteja"},"content":"### 5. `event` \u003cbr /\u003e"},{"lineNumber":99,"author":{"gitId":"nagiteja"},"content":"adds a event task at the time and date and adds it to the lsit of tasks. \u003cbr /\u003e"},{"lineNumber":100,"author":{"gitId":"nagiteja"},"content":"Ex:  \u003cbr /\u003e"},{"lineNumber":101,"author":{"gitId":"nagiteja"},"content":"event go watch cinema  /at 23/02/2021 23:59 \u003cbr /\u003e"},{"lineNumber":102,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":103,"author":{"gitId":"nagiteja"},"content":"Expected outcome: \u003cbr /\u003e"},{"lineNumber":104,"author":{"gitId":"nagiteja"},"content":"Got it. I\u0027ve added this task: \u003cbr /\u003e"},{"lineNumber":105,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":106,"author":{"gitId":"nagiteja"},"content":"[E][\"crossmark\"] event project meeting at 23/02/2021 23:59 \u003cbr /\u003e"},{"lineNumber":107,"author":{"gitId":"nagiteja"},"content":"You have 7 tasks left to do. \u003cbr /\u003e"},{"lineNumber":108,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":109,"author":{"gitId":"nagiteja"},"content":"### 6. `todo` \u003cbr /\u003e"},{"lineNumber":110,"author":{"gitId":"nagiteja"},"content":"adds a todo task to the list of objects.\u003cbr /\u003e"},{"lineNumber":111,"author":{"gitId":"nagiteja"},"content":"Ex: \u003cbr /\u003e"},{"lineNumber":112,"author":{"gitId":"nagiteja"},"content":"todo this assignment \u003cbr /\u003e"},{"lineNumber":113,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":114,"author":{"gitId":"nagiteja"},"content":"Expected outcome: \u003cbr /\u003e"},{"lineNumber":115,"author":{"gitId":"nagiteja"},"content":"Got it. I\u0027ve added this task: \u003cbr /\u003e"},{"lineNumber":116,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":117,"author":{"gitId":"nagiteja"},"content":"[E][\"cross mark\"] todo this assignment \u003cbr /\u003e"},{"lineNumber":118,"author":{"gitId":"nagiteja"},"content":"You have 5 tasks left to do. \u003cbr /\u003e"},{"lineNumber":119,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":120,"author":{"gitId":"nagiteja"},"content":"### 7. `find` \u003cbr /\u003e"},{"lineNumber":121,"author":{"gitId":"nagiteja"},"content":"finds for the respective word from all the tasks in the list.\u003cbr /\u003e"},{"lineNumber":122,"author":{"gitId":"nagiteja"},"content":"Ex: \u003cbr /\u003e"},{"lineNumber":123,"author":{"gitId":"nagiteja"},"content":"find Attend \u003cbr /\u003e"},{"lineNumber":124,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":125,"author":{"gitId":"nagiteja"},"content":"Expected outcome: \u003cbr /\u003e"},{"lineNumber":126,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":127,"author":{"gitId":"nagiteja"},"content":"[E][\"cross mark\"] Attend friend\u0027s wedding  (at: Jan 24 2021, 12:00pm) \u003cbr /\u003e"},{"lineNumber":128,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":129,"author":{"gitId":"nagiteja"},"content":"### 8. `bye` \u003cbr /\u003e"},{"lineNumber":130,"author":{"gitId":"nagiteja"},"content":"Entering this word will exit the program and will display the good bye message. \u003cbr /\u003e"},{"lineNumber":131,"author":{"gitId":"nagiteja"},"content":"Ex: \u003cbr /\u003e"},{"lineNumber":132,"author":{"gitId":"nagiteja"},"content":"bye \u003cbr /\u003e"},{"lineNumber":133,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":134,"author":{"gitId":"nagiteja"},"content":"Expected Outcome: \u003cbr /\u003e"},{"lineNumber":135,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":136,"author":{"gitId":"nagiteja"},"content":"Bye. Hope to see you again soon! \u003cbr /\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"nagiteja":127,"-":11}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":2,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":3,"author":{"gitId":"nagiteja"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"nagiteja"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":6,"author":{"gitId":"nagiteja"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"nagiteja"},"content":" * This is the Deadline class which is used to deal with commands that start with deadline."},{"lineNumber":8,"author":{"gitId":"nagiteja"},"content":" * This also includes the time and date function."},{"lineNumber":9,"author":{"gitId":"nagiteja"},"content":" */"},{"lineNumber":10,"author":{"gitId":"nagiteja"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"nagiteja"},"content":"    LocalDateTime deadline;"},{"lineNumber":12,"author":{"gitId":"nagiteja"},"content":"    DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hhmm\");"},{"lineNumber":13,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":14,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"nagiteja"},"content":"     * Constructor used to instantiate a new deadline object."},{"lineNumber":16,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"nagiteja"},"content":"     * @param date A localdatetime object is obtained from the user\u0027s input."},{"lineNumber":18,"author":{"gitId":"nagiteja"},"content":"     * @param work This is a String variable which has the the actual description of the deadline task."},{"lineNumber":19,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":21,"author":{"gitId":"nagiteja"},"content":"    public Deadline(String work, LocalDateTime date){"},{"lineNumber":22,"author":{"gitId":"nagiteja"},"content":"        super(work, date);"},{"lineNumber":23,"author":{"gitId":"nagiteja"},"content":"        this.deadline \u003d date;"},{"lineNumber":24,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":26,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"nagiteja"},"content":"     * This method will get the actual description of the deadline task"},{"lineNumber":28,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"nagiteja"},"content":"     * @return This will return a string which has the actual description."},{"lineNumber":30,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":32,"author":{"gitId":"nagiteja"},"content":"    public String description(){"},{"lineNumber":33,"author":{"gitId":"nagiteja"},"content":"        return super.isDone()"},{"lineNumber":34,"author":{"gitId":"nagiteja"},"content":"                ? \"[D][✓]\""},{"lineNumber":35,"author":{"gitId":"nagiteja"},"content":"                : \"[D][✗]\";"},{"lineNumber":36,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":38,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"nagiteja"},"content":"     * Gets the formatted version of the date and time"},{"lineNumber":40,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"nagiteja"},"content":"     * @return A formatted String version of the date and time."},{"lineNumber":42,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":44,"author":{"gitId":"nagiteja"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitId":"nagiteja"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + deadline.format(format) + \")\";"},{"lineNumber":46,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"nagiteja"},"content":"}"}],"authorContributionMap":{"nagiteja":47}},{"path":"src/main/java/Display.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nagiteja"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"nagiteja"},"content":" * This is Display Interface. This has been passed on to UI as that is where these methods will be used."},{"lineNumber":3,"author":{"gitId":"nagiteja"},"content":" */"},{"lineNumber":4,"author":{"gitId":"nagiteja"},"content":"public interface Display {"},{"lineNumber":5,"author":{"gitId":"nagiteja"},"content":"    public void goodByeMessage();"},{"lineNumber":6,"author":{"gitId":"nagiteja"},"content":"    public void welcomeMessage();"},{"lineNumber":7,"author":{"gitId":"nagiteja"},"content":"    public void displayLine();"},{"lineNumber":8,"author":{"gitId":"nagiteja"},"content":"}"}],"authorContributionMap":{"nagiteja":8}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nagiteja"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"nagiteja"},"content":" * The main code file of the project."},{"lineNumber":3,"author":{"gitId":"nagiteja"},"content":" */"},{"lineNumber":4,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"nagiteja"},"content":"    private Storage storage;"},{"lineNumber":7,"author":{"gitId":"nagiteja"},"content":"    private UI ui;"},{"lineNumber":8,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":9,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"nagiteja"},"content":"     * Constructor that initialises two new objects"},{"lineNumber":11,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":13,"author":{"gitId":"nagiteja"},"content":"    public Duke(){"},{"lineNumber":14,"author":{"gitId":"nagiteja"},"content":"        this.storage \u003d new Storage();"},{"lineNumber":15,"author":{"gitId":"nagiteja"},"content":"        this.ui \u003d new UI(storage);"},{"lineNumber":16,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":18,"author":{"gitId":"nagiteja"},"content":"    public void run(){"},{"lineNumber":19,"author":{"gitId":"nagiteja"},"content":"        ui.welcomeMessage();"},{"lineNumber":20,"author":{"gitId":"nagiteja"},"content":"        ui.run();"},{"lineNumber":21,"author":{"gitId":"nagiteja"},"content":"        ui.goodByeMessage();"},{"lineNumber":22,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":25,"author":{"gitId":"nagiteja"},"content":"        new Duke().run();"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nagiteja":23,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nagiteja"},"content":"public class DukeException extends Exception{"},{"lineNumber":2,"author":{"gitId":"nagiteja"},"content":"    public DukeException(String message){"},{"lineNumber":3,"author":{"gitId":"nagiteja"},"content":"        super(message);"},{"lineNumber":4,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"nagiteja"},"content":"}"}],"authorContributionMap":{"nagiteja":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":2,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":3,"author":{"gitId":"nagiteja"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"nagiteja"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":6,"author":{"gitId":"nagiteja"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"nagiteja"},"content":" * This is the Event class which is used to deal with commands that start with Event."},{"lineNumber":8,"author":{"gitId":"nagiteja"},"content":" * This also includes the time and date function."},{"lineNumber":9,"author":{"gitId":"nagiteja"},"content":" */"},{"lineNumber":10,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":11,"author":{"gitId":"nagiteja"},"content":"public class Event extends Task {"},{"lineNumber":12,"author":{"gitId":"nagiteja"},"content":"    LocalDateTime date;"},{"lineNumber":13,"author":{"gitId":"nagiteja"},"content":"    DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hhmm\");"},{"lineNumber":14,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":15,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"nagiteja"},"content":"     * Constructor used to instantiate a new Event object."},{"lineNumber":17,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"nagiteja"},"content":"     * @param date A localdatetime object is obtained from the user\u0027s input."},{"lineNumber":19,"author":{"gitId":"nagiteja"},"content":"     * @param work This is a String variable which has the the actual description of the Event task."},{"lineNumber":20,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":22,"author":{"gitId":"nagiteja"},"content":"    public Event(String work, LocalDateTime date){"},{"lineNumber":23,"author":{"gitId":"nagiteja"},"content":"        super(work, date);"},{"lineNumber":24,"author":{"gitId":"nagiteja"},"content":"        this.date \u003d date;"},{"lineNumber":25,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":27,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"nagiteja"},"content":"     * Gets the formatted version of the date and time"},{"lineNumber":29,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"nagiteja"},"content":"     * @return A formatted String version of the date and time."},{"lineNumber":31,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":33,"author":{"gitId":"nagiteja"},"content":"    public String toString(){"},{"lineNumber":34,"author":{"gitId":"nagiteja"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + date.format(format) + \")\";"},{"lineNumber":35,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":37,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"nagiteja"},"content":"     * This method will get the actual description of the Event task"},{"lineNumber":39,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"nagiteja"},"content":"     * @return This will return a string which has the actual description."},{"lineNumber":41,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":43,"author":{"gitId":"nagiteja"},"content":"    public String description(){"},{"lineNumber":44,"author":{"gitId":"nagiteja"},"content":"        return super.isDone()"},{"lineNumber":45,"author":{"gitId":"nagiteja"},"content":"                ? \"[E][✓]\""},{"lineNumber":46,"author":{"gitId":"nagiteja"},"content":"                : \"[E][✗]\";"},{"lineNumber":47,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"nagiteja"},"content":"}"},{"lineNumber":49,"author":{"gitId":"nagiteja"},"content":""}],"authorContributionMap":{"nagiteja":49}},{"path":"src/main/java/ExceptionToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":2,"author":{"gitId":"nagiteja"},"content":"public class ExceptionToDo extends DukeException {"},{"lineNumber":3,"author":{"gitId":"nagiteja"},"content":"    public ExceptionToDo(){"},{"lineNumber":4,"author":{"gitId":"nagiteja"},"content":"        super(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":5,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"nagiteja"},"content":"}"}],"authorContributionMap":{"nagiteja":6}},{"path":"src/main/java/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":2,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":3,"author":{"gitId":"nagiteja"},"content":"public class InvalidDeadlineException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"nagiteja"},"content":"    public InvalidDeadlineException(){"},{"lineNumber":5,"author":{"gitId":"nagiteja"},"content":"        super(\"OOPS invalid input for event. Pls check your /at statement or time format\");"},{"lineNumber":6,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"nagiteja"},"content":"}"},{"lineNumber":8,"author":{"gitId":"nagiteja"},"content":""}],"authorContributionMap":{"nagiteja":8}},{"path":"src/main/java/InvalidDeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nagiteja"},"content":"public class InvalidDeleteException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":3,"author":{"gitId":"nagiteja"},"content":"    public InvalidDeleteException() {"},{"lineNumber":4,"author":{"gitId":"nagiteja"},"content":"        super(\"The wrong format for the delete command has been entered.\");"},{"lineNumber":5,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"nagiteja"},"content":"}"}],"authorContributionMap":{"nagiteja":6}},{"path":"src/main/java/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":2,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":3,"author":{"gitId":"nagiteja"},"content":"public class InvalidEventException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"nagiteja"},"content":"    public InvalidEventException(){"},{"lineNumber":5,"author":{"gitId":"nagiteja"},"content":"        super(\"OOPS invalid input for event. Pls check your /at statement or time format\");"},{"lineNumber":6,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"nagiteja"},"content":"}"}],"authorContributionMap":{"nagiteja":7}},{"path":"src/main/java/InvalidNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":2,"author":{"gitId":"nagiteja"},"content":"public class InvalidNumberException extends DukeException {"},{"lineNumber":3,"author":{"gitId":"nagiteja"},"content":"    public InvalidNumberException(String msg){"},{"lineNumber":4,"author":{"gitId":"nagiteja"},"content":"        super(msg);"},{"lineNumber":5,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"nagiteja"},"content":"}"}],"authorContributionMap":{"nagiteja":6}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nagiteja"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"nagiteja"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"nagiteja"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":5,"author":{"gitId":"nagiteja"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"nagiteja"},"content":" * This class,Parser is used to analyse user commands."},{"lineNumber":7,"author":{"gitId":"nagiteja"},"content":" */"},{"lineNumber":8,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":9,"author":{"gitId":"nagiteja"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":11,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"nagiteja"},"content":"     * This method just prints a line."},{"lineNumber":13,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":15,"author":{"gitId":"nagiteja"},"content":"    public static void displayLine(){"},{"lineNumber":16,"author":{"gitId":"nagiteja"},"content":"        System.out.println(\"_____________________________\");"},{"lineNumber":17,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":19,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"nagiteja"},"content":"     * Removes the requested task suggested by the user from the tasklist."},{"lineNumber":21,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"nagiteja"},"content":"     * @param request A string that contains the value of the index."},{"lineNumber":23,"author":{"gitId":"nagiteja"},"content":"     * @param list lists the tasklist object."},{"lineNumber":24,"author":{"gitId":"nagiteja"},"content":"     * @throws InvalidDeleteException will only be thrown if the delete function is not in the right format."},{"lineNumber":25,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":27,"author":{"gitId":"nagiteja"},"content":"    public static void delete(String request, TaskList list) throws InvalidDeleteException{"},{"lineNumber":28,"author":{"gitId":"nagiteja"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":30,"author":{"gitId":"nagiteja"},"content":"            int index \u003d Integer.parseInt(request);"},{"lineNumber":31,"author":{"gitId":"nagiteja"},"content":"            System.out.println(\"Noted.I\u0027ve removed this task\\n\" + list.get(index));"},{"lineNumber":32,"author":{"gitId":"nagiteja"},"content":"            list.delete(index);"},{"lineNumber":33,"author":{"gitId":"nagiteja"},"content":"            System.out.println(\"Now you have \" + list.getSize() + \" tasks in the list\");"},{"lineNumber":34,"author":{"gitId":"nagiteja"},"content":"            displayLine();"},{"lineNumber":35,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":36,"author":{"gitId":"nagiteja"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":37,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":38,"author":{"gitId":"nagiteja"},"content":"            System.out.println(\"You have not provided a valid number\");"},{"lineNumber":39,"author":{"gitId":"nagiteja"},"content":"            displayLine();"},{"lineNumber":40,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":41,"author":{"gitId":"nagiteja"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":44,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"nagiteja"},"content":"     * Adds a todo task to the tasklist array."},{"lineNumber":46,"author":{"gitId":"nagiteja"},"content":"     * @param request A string that contains the value of the index."},{"lineNumber":47,"author":{"gitId":"nagiteja"},"content":"     * @param list lists the tasklist object."},{"lineNumber":48,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":50,"author":{"gitId":"nagiteja"},"content":"    public static void addTodo(String request, TaskList list){"},{"lineNumber":51,"author":{"gitId":"nagiteja"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":53,"author":{"gitId":"nagiteja"},"content":"            ToDos todo \u003d getTodo(request);"},{"lineNumber":54,"author":{"gitId":"nagiteja"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + todo);"},{"lineNumber":55,"author":{"gitId":"nagiteja"},"content":"            list.update(todo);"},{"lineNumber":56,"author":{"gitId":"nagiteja"},"content":"            System.out.println(\"Now you have \" + list.getSize() + \" tasks in the list.\");"},{"lineNumber":57,"author":{"gitId":"nagiteja"},"content":"        } catch (ExceptionToDo ex) {"},{"lineNumber":58,"author":{"gitId":"nagiteja"},"content":"            System.out.println(\"Oops!!! I\u0027m sorry, but the description of a todo cannot be empty\");"},{"lineNumber":59,"author":{"gitId":"nagiteja"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":62,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"nagiteja"},"content":"     * Adds a deadline task to the tasklist array"},{"lineNumber":64,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"nagiteja"},"content":"     * @param word the description provided by the user."},{"lineNumber":66,"author":{"gitId":"nagiteja"},"content":"     * @param list lists the tasklist object"},{"lineNumber":67,"author":{"gitId":"nagiteja"},"content":"     * @throws InvalidDeadlineException"},{"lineNumber":68,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":70,"author":{"gitId":"nagiteja"},"content":"    public static void getDeadline(String word, TaskList list) throws InvalidDeadlineException {"},{"lineNumber":71,"author":{"gitId":"nagiteja"},"content":"        if (word.contains(\"/by\") \u0026\u0026 !word.substring(word.indexOf(\"/by\") + 3).equals(\"\")){"},{"lineNumber":72,"author":{"gitId":"nagiteja"},"content":"            word \u003d word.substring(8);"},{"lineNumber":73,"author":{"gitId":"nagiteja"},"content":"            int index \u003d word.indexOf(\"/by\");"},{"lineNumber":74,"author":{"gitId":"nagiteja"},"content":"            String str \u003d word.substring(index + 3).trim();"},{"lineNumber":75,"author":{"gitId":"nagiteja"},"content":"            String dateString \u003d str.replaceAll(\"-\", \"/\");"},{"lineNumber":76,"author":{"gitId":"nagiteja"},"content":"            String[] dateArray \u003d dateString.split(\"/\");"},{"lineNumber":77,"author":{"gitId":"nagiteja"},"content":"            if (dateArray.length \u003c 2){"},{"lineNumber":78,"author":{"gitId":"nagiteja"},"content":"                throw new InvalidDeadlineException();"},{"lineNumber":79,"author":{"gitId":"nagiteja"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"nagiteja"},"content":"            if (dateArray[0].length() \u003c 2){"},{"lineNumber":81,"author":{"gitId":"nagiteja"},"content":"                dateString \u003d \"0\" + dateString;"},{"lineNumber":82,"author":{"gitId":"nagiteja"},"content":"                dateArray[0] \u003d \"0\" + dateArray[0];"},{"lineNumber":83,"author":{"gitId":"nagiteja"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"nagiteja"},"content":"            if (dateArray[1].length() \u003c 2){"},{"lineNumber":85,"author":{"gitId":"nagiteja"},"content":"                dateString \u003d dateArray[0] + \"/0\" + dateArray[1] + \"/\" + dateArray[2];"},{"lineNumber":86,"author":{"gitId":"nagiteja"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"nagiteja"},"content":"            if (!dateString.contains(\":\")){"},{"lineNumber":88,"author":{"gitId":"nagiteja"},"content":"                String[] arr \u003d dateString.split(\" \");"},{"lineNumber":89,"author":{"gitId":"nagiteja"},"content":"                if (arr.length !\u003d 2){"},{"lineNumber":90,"author":{"gitId":"nagiteja"},"content":"                    throw new InvalidDeadlineException();"},{"lineNumber":91,"author":{"gitId":"nagiteja"},"content":"                }"},{"lineNumber":92,"author":{"gitId":"nagiteja"},"content":"                arr[1] \u003d arr[1].substring(0, 2) + \":\" + arr[1].substring(2);"},{"lineNumber":93,"author":{"gitId":"nagiteja"},"content":"                dateString \u003d arr[0] + \" \" + arr[1];"},{"lineNumber":94,"author":{"gitId":"nagiteja"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"nagiteja"},"content":"            try {"},{"lineNumber":96,"author":{"gitId":"nagiteja"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"},{"lineNumber":97,"author":{"gitId":"nagiteja"},"content":"                LocalDateTime date \u003d LocalDateTime.parse(dateString, formatter);"},{"lineNumber":98,"author":{"gitId":"nagiteja"},"content":"                Deadline deadline \u003d new Deadline(word.substring(0, index), date);"},{"lineNumber":99,"author":{"gitId":"nagiteja"},"content":"                list.update(deadline);"},{"lineNumber":100,"author":{"gitId":"nagiteja"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n \" + deadline);"},{"lineNumber":101,"author":{"gitId":"nagiteja"},"content":"                System.out.println(\"Now you have \" + list.getSize() + \" tasks in the list.\");"},{"lineNumber":102,"author":{"gitId":"nagiteja"},"content":"            } catch (DateTimeParseException e){"},{"lineNumber":103,"author":{"gitId":"nagiteja"},"content":"                System.out.println(\"Invalid date provided\");"},{"lineNumber":104,"author":{"gitId":"nagiteja"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"nagiteja"},"content":"            displayLine();"},{"lineNumber":106,"author":{"gitId":"nagiteja"},"content":"        } else {"},{"lineNumber":107,"author":{"gitId":"nagiteja"},"content":"            throw new InvalidDeadlineException();"},{"lineNumber":108,"author":{"gitId":"nagiteja"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":111,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"nagiteja"},"content":"     * Adds an event task to the tasklist array"},{"lineNumber":113,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":114,"author":{"gitId":"nagiteja"},"content":"     * @param word the description provided by the user."},{"lineNumber":115,"author":{"gitId":"nagiteja"},"content":"     * @param list lists the tasklist object."},{"lineNumber":116,"author":{"gitId":"nagiteja"},"content":"     * @throws InvalidEventException"},{"lineNumber":117,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":119,"author":{"gitId":"nagiteja"},"content":"    public static void getEvent(String word, TaskList list) throws InvalidEventException {"},{"lineNumber":120,"author":{"gitId":"nagiteja"},"content":"        if (word.contains(\"/at\") \u0026\u0026 !word.substring(word.indexOf(\"/at\") + 3).equals(\"\")){"},{"lineNumber":121,"author":{"gitId":"nagiteja"},"content":"            word \u003d word.substring(5);"},{"lineNumber":122,"author":{"gitId":"nagiteja"},"content":"            int index \u003d word.indexOf(\"/at\");"},{"lineNumber":123,"author":{"gitId":"nagiteja"},"content":"            String str \u003d word.substring(index + 3).trim();"},{"lineNumber":124,"author":{"gitId":"nagiteja"},"content":"            String dateString \u003d str.replaceAll(\"-\", \"/\");"},{"lineNumber":125,"author":{"gitId":"nagiteja"},"content":"            String[] dateArray \u003d dateString.split(\"/\");"},{"lineNumber":126,"author":{"gitId":"nagiteja"},"content":"            if (dateArray.length \u003c 2){"},{"lineNumber":127,"author":{"gitId":"nagiteja"},"content":"                throw new InvalidEventException();"},{"lineNumber":128,"author":{"gitId":"nagiteja"},"content":"            }"},{"lineNumber":129,"author":{"gitId":"nagiteja"},"content":"            if (dateArray[0].length() \u003c 2){"},{"lineNumber":130,"author":{"gitId":"nagiteja"},"content":"                dateString \u003d \"0\" + dateString;"},{"lineNumber":131,"author":{"gitId":"nagiteja"},"content":"                dateArray[0] \u003d \"0\" + dateArray[0];"},{"lineNumber":132,"author":{"gitId":"nagiteja"},"content":"            }"},{"lineNumber":133,"author":{"gitId":"nagiteja"},"content":"            if (dateArray[1].length() \u003c 2){"},{"lineNumber":134,"author":{"gitId":"nagiteja"},"content":"                dateString \u003d dateArray[0] + \"/0\" + dateArray[1] + \"/\" + dateArray[2];"},{"lineNumber":135,"author":{"gitId":"nagiteja"},"content":"            }"},{"lineNumber":136,"author":{"gitId":"nagiteja"},"content":"            if (!dateString.contains(\":\")){"},{"lineNumber":137,"author":{"gitId":"nagiteja"},"content":"                String[] arr \u003d dateString.split(\" \");"},{"lineNumber":138,"author":{"gitId":"nagiteja"},"content":"                if (arr.length !\u003d 2){"},{"lineNumber":139,"author":{"gitId":"nagiteja"},"content":"                    throw new InvalidEventException();"},{"lineNumber":140,"author":{"gitId":"nagiteja"},"content":"                }"},{"lineNumber":141,"author":{"gitId":"nagiteja"},"content":"                arr[1] \u003d arr[1].substring(0, 2) + \":\" + arr[1].substring(2);"},{"lineNumber":142,"author":{"gitId":"nagiteja"},"content":"                dateString \u003d arr[0] + \" \" + arr[1];"},{"lineNumber":143,"author":{"gitId":"nagiteja"},"content":"            }"},{"lineNumber":144,"author":{"gitId":"nagiteja"},"content":"            try {"},{"lineNumber":145,"author":{"gitId":"nagiteja"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"},{"lineNumber":146,"author":{"gitId":"nagiteja"},"content":"                LocalDateTime date \u003d LocalDateTime.parse(dateString, formatter);"},{"lineNumber":147,"author":{"gitId":"nagiteja"},"content":"                Event event \u003d  new Event(word.substring(0, index), date);"},{"lineNumber":148,"author":{"gitId":"nagiteja"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + event);"},{"lineNumber":149,"author":{"gitId":"nagiteja"},"content":"                list.update(event);"},{"lineNumber":150,"author":{"gitId":"nagiteja"},"content":"                System.out.println(\"Now you have \" + list.getSize() + \" tasks in the list.\");"},{"lineNumber":151,"author":{"gitId":"nagiteja"},"content":"            } catch (DateTimeParseException e){"},{"lineNumber":152,"author":{"gitId":"nagiteja"},"content":"                System.out.println(\"Incorrect Date format used\");"},{"lineNumber":153,"author":{"gitId":"nagiteja"},"content":"            }"},{"lineNumber":154,"author":{"gitId":"nagiteja"},"content":"            displayLine();"},{"lineNumber":155,"author":{"gitId":"nagiteja"},"content":"        } else {"},{"lineNumber":156,"author":{"gitId":"nagiteja"},"content":"            throw new InvalidEventException();"},{"lineNumber":157,"author":{"gitId":"nagiteja"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":160,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":161,"author":{"gitId":"nagiteja"},"content":"     * This method is used the find any keyword inputted by the user."},{"lineNumber":162,"author":{"gitId":"nagiteja"},"content":"     * @param input This is the keyword that will be found in the tasklist."},{"lineNumber":163,"author":{"gitId":"nagiteja"},"content":"     * @param tasks All the tasks from which the keyword will be found from."},{"lineNumber":164,"author":{"gitId":"nagiteja"},"content":"     * @throws InvalidNumberException"},{"lineNumber":165,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":166,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":167,"author":{"gitId":"nagiteja"},"content":"    public static void find(String input, TaskList tasks) throws InvalidNumberException{"},{"lineNumber":168,"author":{"gitId":"nagiteja"},"content":"        String[] requests \u003d input.split(\" \");"},{"lineNumber":169,"author":{"gitId":"nagiteja"},"content":"        if (requests.length !\u003d 2){"},{"lineNumber":170,"author":{"gitId":"nagiteja"},"content":"            throw new InvalidNumberException(\"You have inputted more than one word for find\");"},{"lineNumber":171,"author":{"gitId":"nagiteja"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"nagiteja"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++){"},{"lineNumber":173,"author":{"gitId":"nagiteja"},"content":"            if (tasks.get(i).getWork().contains(requests[1])){"},{"lineNumber":174,"author":{"gitId":"nagiteja"},"content":"                System.out.println(tasks.get(i));"},{"lineNumber":175,"author":{"gitId":"nagiteja"},"content":"            }"},{"lineNumber":176,"author":{"gitId":"nagiteja"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"nagiteja"},"content":"        displayLine();"},{"lineNumber":178,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":180,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":181,"author":{"gitId":"nagiteja"},"content":"     * This method will update a particular task to done."},{"lineNumber":182,"author":{"gitId":"nagiteja"},"content":"     * @param request A string that contains the value of the index."},{"lineNumber":183,"author":{"gitId":"nagiteja"},"content":"     * @param list lists the tasklist object."},{"lineNumber":184,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":185,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":186,"author":{"gitId":"nagiteja"},"content":"    public static void update(String request, TaskList list) {"},{"lineNumber":187,"author":{"gitId":"nagiteja"},"content":"        assert !request.equals(\"\") : \"Input is invalid\";"},{"lineNumber":188,"author":{"gitId":"nagiteja"},"content":"        try {"},{"lineNumber":189,"author":{"gitId":"nagiteja"},"content":"            int index \u003d Integer.parseInt(request);"},{"lineNumber":190,"author":{"gitId":"nagiteja"},"content":"            list.updateStatus(index);"},{"lineNumber":191,"author":{"gitId":"nagiteja"},"content":"            String str \u003d \"Nice! I\u0027ve marked this task as done: \\n \""},{"lineNumber":192,"author":{"gitId":"nagiteja"},"content":"                    + list.get(index);"},{"lineNumber":193,"author":{"gitId":"nagiteja"},"content":"            str +\u003d \". Now you have \" + list.getSize() + \" tasks in the list\";"},{"lineNumber":194,"author":{"gitId":"nagiteja"},"content":"        } catch (NumberFormatException ignored) {"},{"lineNumber":195,"author":{"gitId":"nagiteja"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":198,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":199,"author":{"gitId":"nagiteja"},"content":"     * Adds a todo object containing the descriptions provided the list of tasks"},{"lineNumber":200,"author":{"gitId":"nagiteja"},"content":"     * @param work A string object that has the right description."},{"lineNumber":201,"author":{"gitId":"nagiteja"},"content":"     * @return The String that contains the information about the todo object."},{"lineNumber":202,"author":{"gitId":"nagiteja"},"content":"     * @throws ExceptionToDo"},{"lineNumber":203,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":204,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":205,"author":{"gitId":"nagiteja"},"content":"    public static ToDos getTodo(String work) throws ExceptionToDo{"},{"lineNumber":206,"author":{"gitId":"nagiteja"},"content":"        if (work.length() \u003e 4){"},{"lineNumber":207,"author":{"gitId":"nagiteja"},"content":"            return new ToDos(work.substring(4));"},{"lineNumber":208,"author":{"gitId":"nagiteja"},"content":"        } else {"},{"lineNumber":209,"author":{"gitId":"nagiteja"},"content":"            throw new ExceptionToDo();"},{"lineNumber":210,"author":{"gitId":"nagiteja"},"content":"        }"},{"lineNumber":211,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"nagiteja"},"content":"}"}],"authorContributionMap":{"nagiteja":212}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":2,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":3,"author":{"gitId":"nagiteja"},"content":"import java.io.*;"},{"lineNumber":4,"author":{"gitId":"nagiteja"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"nagiteja"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"nagiteja"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":8,"author":{"gitId":"nagiteja"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"nagiteja"},"content":" * This is the class which we use to store the value so of the task list onto our hardisk."},{"lineNumber":10,"author":{"gitId":"nagiteja"},"content":" * This Storage object has a fixed filepath that has been hardcoded."},{"lineNumber":11,"author":{"gitId":"nagiteja"},"content":" * We will be using this file as our main source to either write into it or read from it."},{"lineNumber":12,"author":{"gitId":"nagiteja"},"content":" */"},{"lineNumber":13,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":14,"author":{"gitId":"nagiteja"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"nagiteja"},"content":"    final private String filePath \u003d \"data/duke.txt\";"},{"lineNumber":16,"author":{"gitId":"nagiteja"},"content":"    private TaskList list;"},{"lineNumber":17,"author":{"gitId":"nagiteja"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"nagiteja"},"content":"    public Storage () {"},{"lineNumber":19,"author":{"gitId":"nagiteja"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"nagiteja"},"content":"            FileReader file \u003d new FileReader(this.filePath);"},{"lineNumber":21,"author":{"gitId":"nagiteja"},"content":"            BufferedReader reader \u003d new BufferedReader(file);"},{"lineNumber":22,"author":{"gitId":"nagiteja"},"content":"            String line;"},{"lineNumber":23,"author":{"gitId":"nagiteja"},"content":"            while ((line \u003d reader.readLine()) !\u003d null){"},{"lineNumber":24,"author":{"gitId":"nagiteja"},"content":"                tasks.add(getTask(line));"},{"lineNumber":25,"author":{"gitId":"nagiteja"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"nagiteja"},"content":"            file.close();"},{"lineNumber":27,"author":{"gitId":"nagiteja"},"content":"        } catch (IOException e){"},{"lineNumber":28,"author":{"gitId":"nagiteja"},"content":"            tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"nagiteja"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":32,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"nagiteja"},"content":"     * Reads the file that was defined above and it parses the strings"},{"lineNumber":34,"author":{"gitId":"nagiteja"},"content":"     * which can then be added as tasks to the tasklist array."},{"lineNumber":35,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"nagiteja"},"content":"     * @return could either be a todo task, deadline task or even a event task."},{"lineNumber":37,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":39,"author":{"gitId":"nagiteja"},"content":"    private Task getTask(String line){"},{"lineNumber":40,"author":{"gitId":"nagiteja"},"content":"        Task task;"},{"lineNumber":41,"author":{"gitId":"nagiteja"},"content":"        char check \u003d line.charAt(1);"},{"lineNumber":42,"author":{"gitId":"nagiteja"},"content":"        switch(check){"},{"lineNumber":43,"author":{"gitId":"nagiteja"},"content":"        case \u0027T\u0027:"},{"lineNumber":44,"author":{"gitId":"nagiteja"},"content":"            task \u003d new ToDos(line.substring(6));"},{"lineNumber":45,"author":{"gitId":"nagiteja"},"content":"            break;"},{"lineNumber":46,"author":{"gitId":"nagiteja"},"content":"        case \u0027D\u0027:"},{"lineNumber":47,"author":{"gitId":"nagiteja"},"content":"            int index \u003d line.indexOf(\"|\");"},{"lineNumber":48,"author":{"gitId":"nagiteja"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"},{"lineNumber":49,"author":{"gitId":"nagiteja"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(line.substring(index + 1).trim(), formatter);"},{"lineNumber":50,"author":{"gitId":"nagiteja"},"content":"            task \u003d new Deadline(line.substring(6, index), date);"},{"lineNumber":51,"author":{"gitId":"nagiteja"},"content":"            break;"},{"lineNumber":52,"author":{"gitId":"nagiteja"},"content":"        default:"},{"lineNumber":53,"author":{"gitId":"nagiteja"},"content":"            int index1 \u003d line.indexOf(\"|\");"},{"lineNumber":54,"author":{"gitId":"nagiteja"},"content":"            DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"},{"lineNumber":55,"author":{"gitId":"nagiteja"},"content":"            LocalDateTime date1 \u003d LocalDateTime.parse(line.substring(index1 + 1).trim(), formatter1);"},{"lineNumber":56,"author":{"gitId":"nagiteja"},"content":"            task \u003d new Event(line.substring(6, index1), date1);"},{"lineNumber":57,"author":{"gitId":"nagiteja"},"content":"            break;"},{"lineNumber":58,"author":{"gitId":"nagiteja"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"nagiteja"},"content":"        if (line.charAt(4) !\u003d \u0027✗\u0027){"},{"lineNumber":60,"author":{"gitId":"nagiteja"},"content":"            task.updateStatus();"},{"lineNumber":61,"author":{"gitId":"nagiteja"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"nagiteja"},"content":"        return task;"},{"lineNumber":63,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":65,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"nagiteja"},"content":"     * This loads the elements of the task list."},{"lineNumber":67,"author":{"gitId":"nagiteja"},"content":"     * @return returns the tasklist of the elements of the list."},{"lineNumber":68,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":70,"author":{"gitId":"nagiteja"},"content":"    public TaskList load(){"},{"lineNumber":71,"author":{"gitId":"nagiteja"},"content":"        this.list \u003d new TaskList(this.tasks) ;"},{"lineNumber":72,"author":{"gitId":"nagiteja"},"content":"        return this.list;"},{"lineNumber":73,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":75,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"nagiteja"},"content":"     * This methods will save all the tasks on to the text file"},{"lineNumber":77,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":79,"author":{"gitId":"nagiteja"},"content":"    public void save(){"},{"lineNumber":80,"author":{"gitId":"nagiteja"},"content":"        try {"},{"lineNumber":81,"author":{"gitId":"nagiteja"},"content":"            String folderPath \u003d \"Data\";"},{"lineNumber":82,"author":{"gitId":"nagiteja"},"content":"            File directory \u003d new File(folderPath);"},{"lineNumber":83,"author":{"gitId":"nagiteja"},"content":"            if (!directory.isDirectory()){"},{"lineNumber":84,"author":{"gitId":"nagiteja"},"content":"                File folder \u003d new File(folderPath);"},{"lineNumber":85,"author":{"gitId":"nagiteja"},"content":"                if (!folder.mkdir()){"},{"lineNumber":86,"author":{"gitId":"nagiteja"},"content":"                    System.out.println(\"cannot make a folder\");"},{"lineNumber":87,"author":{"gitId":"nagiteja"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"nagiteja"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"nagiteja"},"content":"            File file \u003d new File(this.filePath);"},{"lineNumber":90,"author":{"gitId":"nagiteja"},"content":"            file.createNewFile();"},{"lineNumber":91,"author":{"gitId":"nagiteja"},"content":"            FileWriter writer \u003d new FileWriter(file);"},{"lineNumber":92,"author":{"gitId":"nagiteja"},"content":"            writer.write(list.save());"},{"lineNumber":93,"author":{"gitId":"nagiteja"},"content":"            writer.close();"},{"lineNumber":94,"author":{"gitId":"nagiteja"},"content":"        } catch (IOException e) {"},{"lineNumber":95,"author":{"gitId":"nagiteja"},"content":"            System.out.println(\"No File found\");"},{"lineNumber":96,"author":{"gitId":"nagiteja"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"nagiteja"},"content":"}"}],"authorContributionMap":{"nagiteja":98}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nagiteja"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"nagiteja"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":4,"author":{"gitId":"nagiteja"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"nagiteja"},"content":" * This is the Task class."},{"lineNumber":6,"author":{"gitId":"nagiteja"},"content":" * This class will create a task with a localdatetime and actual description."},{"lineNumber":7,"author":{"gitId":"nagiteja"},"content":" */"},{"lineNumber":8,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":9,"author":{"gitId":"nagiteja"},"content":"public class Task {"},{"lineNumber":10,"author":{"gitId":"nagiteja"},"content":"    private boolean done;"},{"lineNumber":11,"author":{"gitId":"nagiteja"},"content":"    private String work;"},{"lineNumber":12,"author":{"gitId":"nagiteja"},"content":"    private LocalDateTime date;"},{"lineNumber":13,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":14,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"nagiteja"},"content":"     * Constructor initializes a task with user input."},{"lineNumber":16,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"nagiteja"},"content":"     * @param work A String variable with the description provided by the user."},{"lineNumber":18,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":20,"author":{"gitId":"nagiteja"},"content":"    public Task(String work){"},{"lineNumber":21,"author":{"gitId":"nagiteja"},"content":"        this.done \u003d false;"},{"lineNumber":22,"author":{"gitId":"nagiteja"},"content":"        this.work \u003d work;"},{"lineNumber":23,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":25,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"nagiteja"},"content":"     * Constructor initializes a task with description provided by the user and localdatetime."},{"lineNumber":27,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"nagiteja"},"content":"     * @param work A String variable with the description provided by the user."},{"lineNumber":29,"author":{"gitId":"nagiteja"},"content":"     * @param date A localdatetime object contains the timing."},{"lineNumber":30,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":32,"author":{"gitId":"nagiteja"},"content":"    public Task(String work, LocalDateTime date){"},{"lineNumber":33,"author":{"gitId":"nagiteja"},"content":"        this.work \u003d work;"},{"lineNumber":34,"author":{"gitId":"nagiteja"},"content":"        this.date \u003d date;"},{"lineNumber":35,"author":{"gitId":"nagiteja"},"content":"        this.done \u003d false;"},{"lineNumber":36,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":38,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"nagiteja"},"content":"     * Gets the formatted version of the date and time"},{"lineNumber":40,"author":{"gitId":"nagiteja"},"content":"     * @return A formatted String version of the date and time."},{"lineNumber":41,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":43,"author":{"gitId":"nagiteja"},"content":"    public String getDate(){"},{"lineNumber":44,"author":{"gitId":"nagiteja"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));"},{"lineNumber":45,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":47,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"nagiteja"},"content":"     * Gets the actual description of the task"},{"lineNumber":49,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"nagiteja"},"content":"     * @return A String which has the description."},{"lineNumber":51,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":53,"author":{"gitId":"nagiteja"},"content":"    public String description(){"},{"lineNumber":54,"author":{"gitId":"nagiteja"},"content":"        return done"},{"lineNumber":55,"author":{"gitId":"nagiteja"},"content":"                ? \"[T][✓]\""},{"lineNumber":56,"author":{"gitId":"nagiteja"},"content":"                : \"[T][✗]\";"},{"lineNumber":57,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"nagiteja"},"content":"    public void updateStatus(){"},{"lineNumber":59,"author":{"gitId":"nagiteja"},"content":"        done \u003d true;"},{"lineNumber":60,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":62,"author":{"gitId":"nagiteja"},"content":"    public boolean isDone(){"},{"lineNumber":63,"author":{"gitId":"nagiteja"},"content":"        return done;"},{"lineNumber":64,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":66,"author":{"gitId":"nagiteja"},"content":"    public String getWork(){"},{"lineNumber":67,"author":{"gitId":"nagiteja"},"content":"        return work;"},{"lineNumber":68,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":70,"author":{"gitId":"nagiteja"},"content":"    public boolean istodo(){"},{"lineNumber":71,"author":{"gitId":"nagiteja"},"content":"        return false;"},{"lineNumber":72,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":74,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"nagiteja"},"content":"     * This will Override the toString method."},{"lineNumber":76,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"nagiteja"},"content":"     * @return A String variable that represents the task."},{"lineNumber":78,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":80,"author":{"gitId":"nagiteja"},"content":"    public String toString(){"},{"lineNumber":81,"author":{"gitId":"nagiteja"},"content":"        if (!this.done){"},{"lineNumber":82,"author":{"gitId":"nagiteja"},"content":"            return \"[✗]\" + this.work;"},{"lineNumber":83,"author":{"gitId":"nagiteja"},"content":"        } else {"},{"lineNumber":84,"author":{"gitId":"nagiteja"},"content":"            return \"[✓]\" + this.work;"},{"lineNumber":85,"author":{"gitId":"nagiteja"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"nagiteja"},"content":"}"}],"authorContributionMap":{"nagiteja":87}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":2,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":3,"author":{"gitId":"nagiteja"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":5,"author":{"gitId":"nagiteja"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"nagiteja"},"content":" * This is task array class and we use this class to update new tasks onto the list."},{"lineNumber":7,"author":{"gitId":"nagiteja"},"content":" */"},{"lineNumber":8,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":9,"author":{"gitId":"nagiteja"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"nagiteja"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":11,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":12,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"nagiteja"},"content":"     * Constructor initializes arraylist with a list of tasks"},{"lineNumber":14,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"nagiteja"},"content":"     * @param tasks the list of the tasks will be provided."},{"lineNumber":16,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":18,"author":{"gitId":"nagiteja"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks){"},{"lineNumber":19,"author":{"gitId":"nagiteja"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":20,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":22,"author":{"gitId":"nagiteja"},"content":"    public ArrayList\u003cTask\u003e getTasks(){"},{"lineNumber":23,"author":{"gitId":"nagiteja"},"content":"        return this.tasks;"},{"lineNumber":24,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":26,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"nagiteja"},"content":"     * This will update and add one more task to the tasklist array."},{"lineNumber":28,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"nagiteja"},"content":"     * @param task gets added into the tasklist."},{"lineNumber":30,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":32,"author":{"gitId":"nagiteja"},"content":"    public void update(Task task){"},{"lineNumber":33,"author":{"gitId":"nagiteja"},"content":"        tasks.add(task);"},{"lineNumber":34,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":36,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"nagiteja"},"content":"     * Get a task from the given index in the tasklist"},{"lineNumber":38,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"nagiteja"},"content":"     * @param i index to be pulled"},{"lineNumber":40,"author":{"gitId":"nagiteja"},"content":"     * @return Task object"},{"lineNumber":41,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":43,"author":{"gitId":"nagiteja"},"content":"    public Task get(int i){"},{"lineNumber":44,"author":{"gitId":"nagiteja"},"content":"        return tasks.get(i - 1);"},{"lineNumber":45,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":47,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"nagiteja"},"content":"     * This method will delete the particular task at the given index."},{"lineNumber":49,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"nagiteja"},"content":"     * @param i index to be deleted"},{"lineNumber":51,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":53,"author":{"gitId":"nagiteja"},"content":"    public void delete(int i){"},{"lineNumber":54,"author":{"gitId":"nagiteja"},"content":"        tasks.remove(i - 1);"},{"lineNumber":55,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":57,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"nagiteja"},"content":"     * This method will update the status of a task to done"},{"lineNumber":59,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"nagiteja"},"content":"     * @param i index to be updated to done"},{"lineNumber":61,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":63,"author":{"gitId":"nagiteja"},"content":"    public void updateStatus(int i){"},{"lineNumber":64,"author":{"gitId":"nagiteja"},"content":"        tasks.get(i - 1).updateStatus();"},{"lineNumber":65,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":67,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"nagiteja"},"content":"     * This methods will let us get the size of the tasks array."},{"lineNumber":69,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"nagiteja"},"content":"     * @return the size of the tasks array."},{"lineNumber":71,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":73,"author":{"gitId":"nagiteja"},"content":"    public int getSize(){"},{"lineNumber":74,"author":{"gitId":"nagiteja"},"content":"        return tasks.size();"},{"lineNumber":75,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":77,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"nagiteja"},"content":"     * The tasklist gets converted into a String object format and it gets saved."},{"lineNumber":79,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"nagiteja"},"content":"     * @return formatted String"},{"lineNumber":81,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":83,"author":{"gitId":"nagiteja"},"content":"    public String save(){"},{"lineNumber":84,"author":{"gitId":"nagiteja"},"content":"        StringBuilder line \u003d new StringBuilder();"},{"lineNumber":85,"author":{"gitId":"nagiteja"},"content":"        for (Task task : tasks){"},{"lineNumber":86,"author":{"gitId":"nagiteja"},"content":"            if (!task.istodo()){"},{"lineNumber":87,"author":{"gitId":"nagiteja"},"content":"                String append \u003d task.description() + task.getWork() + \"|\" + task.getDate() + \"\\n\";"},{"lineNumber":88,"author":{"gitId":"nagiteja"},"content":"                line.append(append);"},{"lineNumber":89,"author":{"gitId":"nagiteja"},"content":"                continue;"},{"lineNumber":90,"author":{"gitId":"nagiteja"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"nagiteja"},"content":"            String append \u003d task.toString() + \"\\n\";"},{"lineNumber":92,"author":{"gitId":"nagiteja"},"content":"            line.append(append);"},{"lineNumber":93,"author":{"gitId":"nagiteja"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"nagiteja"},"content":"        return line.toString();"},{"lineNumber":95,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":97,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"nagiteja"},"content":"     * This method overrides the default method."},{"lineNumber":99,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"nagiteja"},"content":"     * @return the string that has the tasklist."},{"lineNumber":101,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":103,"author":{"gitId":"nagiteja"},"content":"    public String toString(){"},{"lineNumber":104,"author":{"gitId":"nagiteja"},"content":"        StringBuilder line \u003d new StringBuilder();"},{"lineNumber":105,"author":{"gitId":"nagiteja"},"content":"        for(int i \u003d0;i\u003c tasks.size();i++){"},{"lineNumber":106,"author":{"gitId":"nagiteja"},"content":"            line.append(tasks.get(i).toString());"},{"lineNumber":107,"author":{"gitId":"nagiteja"},"content":"            line.append(\u0027\\n\u0027);"},{"lineNumber":108,"author":{"gitId":"nagiteja"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"nagiteja"},"content":"        return line.toString();"},{"lineNumber":110,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"nagiteja"},"content":"}"},{"lineNumber":112,"author":{"gitId":"nagiteja"},"content":""}],"authorContributionMap":{"nagiteja":112}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nagiteja"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"nagiteja"},"content":" * This class deals with the todo task."},{"lineNumber":3,"author":{"gitId":"nagiteja"},"content":" */"},{"lineNumber":4,"author":{"gitId":"nagiteja"},"content":"public class ToDos extends Task {"},{"lineNumber":5,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":6,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"nagiteja"},"content":"     * Constructor used to instantiate a new deadline object."},{"lineNumber":8,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"nagiteja"},"content":"     * @param work This is a String variable which has the the actual description of the todos task."},{"lineNumber":10,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":12,"author":{"gitId":"nagiteja"},"content":"    public ToDos(String work) {"},{"lineNumber":13,"author":{"gitId":"nagiteja"},"content":"        super(work);"},{"lineNumber":14,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":16,"author":{"gitId":"nagiteja"},"content":"    public String toString(){"},{"lineNumber":17,"author":{"gitId":"nagiteja"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":18,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":20,"author":{"gitId":"nagiteja"},"content":"    public boolean istodo(){"},{"lineNumber":21,"author":{"gitId":"nagiteja"},"content":"        return true;"},{"lineNumber":22,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"nagiteja"},"content":"}"}],"authorContributionMap":{"nagiteja":23}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":2,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":3,"author":{"gitId":"nagiteja"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":5,"author":{"gitId":"nagiteja"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"nagiteja"},"content":" * This class implements the Display Interface and this class basically takes in user input and writes and,"},{"lineNumber":7,"author":{"gitId":"nagiteja"},"content":" * saves it to the hard disk file\"duke.txt\"."},{"lineNumber":8,"author":{"gitId":"nagiteja"},"content":" */"},{"lineNumber":9,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":10,"author":{"gitId":"nagiteja"},"content":"public class UI implements Display {"},{"lineNumber":11,"author":{"gitId":"nagiteja"},"content":"    Scanner sc;"},{"lineNumber":12,"author":{"gitId":"nagiteja"},"content":"    Storage storage;"},{"lineNumber":13,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":14,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"nagiteja"},"content":"     * Constructor initializes a UI object."},{"lineNumber":16,"author":{"gitId":"nagiteja"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"nagiteja"},"content":"     * @param store This stores the user input."},{"lineNumber":18,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":20,"author":{"gitId":"nagiteja"},"content":"    public UI(Storage store) {"},{"lineNumber":21,"author":{"gitId":"nagiteja"},"content":"        this.storage \u003d store;"},{"lineNumber":22,"author":{"gitId":"nagiteja"},"content":"        this.sc \u003d new Scanner(System.in);"},{"lineNumber":23,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":25,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"nagiteja"},"content":"     * This methods here just displays a line."},{"lineNumber":27,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":29,"author":{"gitId":"nagiteja"},"content":"    public void displayLine(){"},{"lineNumber":30,"author":{"gitId":"nagiteja"},"content":"        System.out.println(\"_____________________________\");"},{"lineNumber":31,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":33,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"nagiteja"},"content":"     * This function displays the welcome message."},{"lineNumber":35,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":37,"author":{"gitId":"nagiteja"},"content":"    public void welcomeMessage() {"},{"lineNumber":38,"author":{"gitId":"nagiteja"},"content":"        displayLine();"},{"lineNumber":39,"author":{"gitId":"nagiteja"},"content":"        System.out.println(\"   Hello from\\n\" +"},{"lineNumber":40,"author":{"gitId":"nagiteja"},"content":"                \"    ____        _        \\n\" +"},{"lineNumber":41,"author":{"gitId":"nagiteja"},"content":"                \"   |  _ \\\\ _   _| | _____ \\n\" +"},{"lineNumber":42,"author":{"gitId":"nagiteja"},"content":"                \"   | | | | | | | |/ / _ \\\\\\n\" +"},{"lineNumber":43,"author":{"gitId":"nagiteja"},"content":"                \"   | |_| | |_| |   \u003c  __/\\n\" +"},{"lineNumber":44,"author":{"gitId":"nagiteja"},"content":"                \"   |____/ \\\\__,_|_|\\\\_\\\\___|\\nWhat can I do for you?\");"},{"lineNumber":45,"author":{"gitId":"nagiteja"},"content":"        displayLine();"},{"lineNumber":46,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":48,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"nagiteja"},"content":"     * This methods will initiate or run the code and it will only end when,"},{"lineNumber":50,"author":{"gitId":"nagiteja"},"content":"     * the user enters \"bye\""},{"lineNumber":51,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":53,"author":{"gitId":"nagiteja"},"content":"    public void run() {"},{"lineNumber":54,"author":{"gitId":"nagiteja"},"content":"        String input \u003d sc.nextLine();"},{"lineNumber":55,"author":{"gitId":"nagiteja"},"content":"        TaskList list \u003d storage.load();"},{"lineNumber":56,"author":{"gitId":"nagiteja"},"content":"        while (!input.equals(\"bye\")) {"},{"lineNumber":57,"author":{"gitId":"nagiteja"},"content":"            input \u003d input.trim().replaceAll(\"\\\\s{2,}\", \" \");"},{"lineNumber":58,"author":{"gitId":"nagiteja"},"content":"            displayLine();"},{"lineNumber":59,"author":{"gitId":"nagiteja"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":60,"author":{"gitId":"nagiteja"},"content":"                System.out.println(list);"},{"lineNumber":61,"author":{"gitId":"nagiteja"},"content":"                displayLine();"},{"lineNumber":62,"author":{"gitId":"nagiteja"},"content":"                input \u003d sc.nextLine();"},{"lineNumber":63,"author":{"gitId":"nagiteja"},"content":"                continue;"},{"lineNumber":64,"author":{"gitId":"nagiteja"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"nagiteja"},"content":"            String[] request \u003d input.split(\" \");"},{"lineNumber":66,"author":{"gitId":"nagiteja"},"content":"            switch (request[0]) {"},{"lineNumber":67,"author":{"gitId":"nagiteja"},"content":"            case \"done\":"},{"lineNumber":68,"author":{"gitId":"nagiteja"},"content":"                Parser.update(request[1], list);"},{"lineNumber":69,"author":{"gitId":"nagiteja"},"content":"                break;"},{"lineNumber":70,"author":{"gitId":"nagiteja"},"content":"            case \"todo\":"},{"lineNumber":71,"author":{"gitId":"nagiteja"},"content":"                Parser.addTodo(input, list);"},{"lineNumber":72,"author":{"gitId":"nagiteja"},"content":"                break;"},{"lineNumber":73,"author":{"gitId":"nagiteja"},"content":"            case \"deadline\":"},{"lineNumber":74,"author":{"gitId":"nagiteja"},"content":"                try {"},{"lineNumber":75,"author":{"gitId":"nagiteja"},"content":"                    Parser.getDeadline(input, list);"},{"lineNumber":76,"author":{"gitId":"nagiteja"},"content":"                } catch (InvalidDeadlineException ex) {"},{"lineNumber":77,"author":{"gitId":"nagiteja"},"content":"                    System.out.println(\"Oops, somewhere your deadline was wrong. Please check whether you used a /by tag\");"},{"lineNumber":78,"author":{"gitId":"nagiteja"},"content":"                    displayLine();"},{"lineNumber":79,"author":{"gitId":"nagiteja"},"content":"                }"},{"lineNumber":80,"author":{"gitId":"nagiteja"},"content":"                break;"},{"lineNumber":81,"author":{"gitId":"nagiteja"},"content":"            case \"event\":"},{"lineNumber":82,"author":{"gitId":"nagiteja"},"content":"                try {"},{"lineNumber":83,"author":{"gitId":"nagiteja"},"content":"                    Parser.getEvent(input, list);"},{"lineNumber":84,"author":{"gitId":"nagiteja"},"content":"                } catch (InvalidEventException ex) {"},{"lineNumber":85,"author":{"gitId":"nagiteja"},"content":"                    System.out.println(\"Oops seems like your event is invalid. Please check your /at tag\");"},{"lineNumber":86,"author":{"gitId":"nagiteja"},"content":"                    displayLine();"},{"lineNumber":87,"author":{"gitId":"nagiteja"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"nagiteja"},"content":"                break;"},{"lineNumber":89,"author":{"gitId":"nagiteja"},"content":"            case \"find\":"},{"lineNumber":90,"author":{"gitId":"nagiteja"},"content":"                try {"},{"lineNumber":91,"author":{"gitId":"nagiteja"},"content":"                    Parser.find(input, list);"},{"lineNumber":92,"author":{"gitId":"nagiteja"},"content":"                } catch (InvalidNumberException ex) {"},{"lineNumber":93,"author":{"gitId":"nagiteja"},"content":"                    System.out.println(\"More than one keyword was entered\");"},{"lineNumber":94,"author":{"gitId":"nagiteja"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"nagiteja"},"content":"                break;"},{"lineNumber":96,"author":{"gitId":"nagiteja"},"content":"            case \"delete\":"},{"lineNumber":97,"author":{"gitId":"nagiteja"},"content":"                try{"},{"lineNumber":98,"author":{"gitId":"nagiteja"},"content":"                    Parser.delete(request[1], list);"},{"lineNumber":99,"author":{"gitId":"nagiteja"},"content":"                } catch (InvalidDeleteException ex){"},{"lineNumber":100,"author":{"gitId":"nagiteja"},"content":"                    System.out.println(\"Wrong format for the delete command has been entered\");"},{"lineNumber":101,"author":{"gitId":"nagiteja"},"content":"                }"},{"lineNumber":102,"author":{"gitId":"nagiteja"},"content":"                break;"},{"lineNumber":103,"author":{"gitId":"nagiteja"},"content":"            case \"\":"},{"lineNumber":104,"author":{"gitId":"nagiteja"},"content":"                System.out.println(\"Please enter something\");"},{"lineNumber":105,"author":{"gitId":"nagiteja"},"content":"                break;"},{"lineNumber":106,"author":{"gitId":"nagiteja"},"content":"            default:"},{"lineNumber":107,"author":{"gitId":"nagiteja"},"content":"                System.out.println(\"Please enter something valid\");"},{"lineNumber":108,"author":{"gitId":"nagiteja"},"content":"                break;"},{"lineNumber":109,"author":{"gitId":"nagiteja"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"nagiteja"},"content":"            input \u003d sc.nextLine();"},{"lineNumber":111,"author":{"gitId":"nagiteja"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":114,"author":{"gitId":"nagiteja"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"nagiteja"},"content":"     * This methods will display the good bye message to the user."},{"lineNumber":116,"author":{"gitId":"nagiteja"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":118,"author":{"gitId":"nagiteja"},"content":"    public void goodByeMessage(){"},{"lineNumber":119,"author":{"gitId":"nagiteja"},"content":"        storage.save();"},{"lineNumber":120,"author":{"gitId":"nagiteja"},"content":"        displayLine();"},{"lineNumber":121,"author":{"gitId":"nagiteja"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":122,"author":{"gitId":"nagiteja"},"content":"        displayLine();"},{"lineNumber":123,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"nagiteja"},"content":"}"}],"authorContributionMap":{"nagiteja":124}},{"path":"src/main/java/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":2,"author":{"gitId":"nagiteja"},"content":""},{"lineNumber":3,"author":{"gitId":"nagiteja"},"content":"public class UnknownCommandException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"nagiteja"},"content":"    public UnknownCommandException(){"},{"lineNumber":5,"author":{"gitId":"nagiteja"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":6,"author":{"gitId":"nagiteja"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"nagiteja"},"content":"}"}],"authorContributionMap":{"nagiteja":7}}]
