[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"-":17,"SimJJ96":9}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":6,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"        String lineLowerCase;"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"        String line;"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"        TaskManager taskManager \u003d new TaskManager();"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"        System.out.println(\"Hello there! This is\\n\" + logo + \"How may I help you ?\\n\");"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"        do {"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"            line \u003d in.nextLine();"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"            lineLowerCase \u003d line.toLowerCase();"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"            int donePosition \u003d line.indexOf(\"done\");"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"            if (lineLowerCase.equals(\"bye\")) {"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"                taskManager.endTaskManager();"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"            } else if (lineLowerCase.equals(\"list\")) {"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"                taskManager.listTasks();"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"            } else if (donePosition \u003e -1) {"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"                String[] words \u003d line.split(\" \");"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"                int taskNumber \u003d Integer.parseInt(words[1]);"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"                taskManager.markAsDone(taskNumber);"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"            } else {"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"                taskManager.addTask(line);"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"        } while (!lineLowerCase.equals(\"bye\"));"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":9,"SimJJ96":28}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"    private final String description;"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"    private boolean isDone;"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"    public String getStatusIcon() {"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"    public void setAsDone() {"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"        isDone \u003d true;"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"    public String getDescription() {"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"        return description;"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"}"}],"authorContributionMap":{"SimJJ96":21}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"public class TaskManager {"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"    private final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"    private static final String BORDER \u003d \"    ____________________________________________________________\\n\";"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"    public void addTask (String description) {"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"        Task task \u003d new Task(description);"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"        tasks.add(task);"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"        System.out.print(BORDER + \"\\t\" + \"added: \" + description + \"\\n\" + BORDER);"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"    public void endTaskManager() {"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"        System.out.print(BORDER + \"\\t\" + \"Good Bye. Hope to see you again soon!\" + \"\\n\" + BORDER);"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"    public void listTasks() {"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"        System.out.print(BORDER + \"\\tHere are the task in your list:\\n\");"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"            int index \u003d i+1;"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"            System.out.print(\"\\t\" + index + \".\" + \"[\" + tasks.get(i).getStatusIcon() + \"] \" + tasks.get(i).getDescription() + \"\\n\");"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"        System.out.print(BORDER);"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"    public void markAsDone(int taskNumber) {"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"        if (taskNumber \u003e tasks.size()) {"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"            System.out.print(BORDER +\"\\t Invalid task. Please enter another task number\\n\" + BORDER);"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"            taskNumber \u003d taskNumber -1;"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"            tasks.get(taskNumber).setAsDone();"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"            System.out.print(BORDER + \"\\tNice! I\u0027ve marked this as done:\\n\");"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"            System.out.print(\"\\t [\" + tasks.get(taskNumber).getStatusIcon() + \"] \" + tasks.get(taskNumber).getDescription() + \"\\n\" + BORDER);"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"}"}],"authorContributionMap":{"SimJJ96":37}}]
