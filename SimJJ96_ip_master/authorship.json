[{"path":"src/main/java/duke/CommandManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"import duke.exception.EmptyDateException;"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import duke.exception.EmptyDescriptionException;"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"import duke.exception.EmptyOrWrongInputException;"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"import duke.task.TaskManager;"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"public class CommandManager {"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"    protected String command;"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"    protected String description;"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"    public static final String TODO_COMMAND \u003d \"todo\";"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"    public static final String DEADLINE_COMMAND \u003d \"deadline\";"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"    public static final String EVENT_COMMAND \u003d \"event\";"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"    private static final String LIST_COMMAND \u003d \"list\";"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"    private static final String DONE_COMMAND \u003d \"done\";"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"    private static final String WHITESPACE_DELIMITER \u003d \"\\\\s+\";"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"    private static final String DEADLINE_DELIMITER \u003d \"/by\";"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"    private static final String EVENT_DELIMITER \u003d \"/at\";"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"    public static final int SPLIT_SIZE \u003d 2;"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"    private static final int FIRST_HALF \u003d 0;"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"    private static final int SECOND_HALF \u003d 1;"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"    private static final int ARRAY_INDEX_FOR_DATE \u003d 1;"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"    private static final int EXTRA_INDEX_FOR_ARRAY \u003d 1;"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"    public CommandManager(String userInput) {"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"        String[] words \u003d splitUserInput(userInput, WHITESPACE_DELIMITER);"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"        this.command \u003d words[FIRST_HALF];"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"        this.description \u003d words[SECOND_HALF];"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"    public static String[] splitUserInput(String userInput, String delimiter) {"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"        String[] sentences \u003d userInput.trim().split(delimiter, SPLIT_SIZE);"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"        return sentences.length \u003d\u003d SPLIT_SIZE ? sentences : new String[] { sentences[0] , \"\" }; // else case: no description;"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"    public String getCommand () {"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"        return command;"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":"    public String getDescription() {"},{"lineNumber":48,"author":{"gitId":"SimJJ96"},"content":"        return description;"},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":51,"author":{"gitId":"SimJJ96"},"content":"    public static void checkDescriptionIsValid(String description) throws EmptyDescriptionException {"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"        if (description.isEmpty()) {"},{"lineNumber":53,"author":{"gitId":"SimJJ96"},"content":"            throw new EmptyDescriptionException();"},{"lineNumber":54,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":57,"author":{"gitId":"SimJJ96"},"content":"    public static void checkDateIsValid(String date) throws EmptyDateException {"},{"lineNumber":58,"author":{"gitId":"SimJJ96"},"content":"        if (date.isEmpty()) {"},{"lineNumber":59,"author":{"gitId":"SimJJ96"},"content":"            throw new EmptyDateException();"},{"lineNumber":60,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":63,"author":{"gitId":"SimJJ96"},"content":"    public static String[] getDescriptionAndDate(String command, String description) throws EmptyDateException {"},{"lineNumber":64,"author":{"gitId":"SimJJ96"},"content":"        String[] descriptionAndDate \u003d new String[SPLIT_SIZE];"},{"lineNumber":65,"author":{"gitId":"SimJJ96"},"content":"        switch(command) {"},{"lineNumber":66,"author":{"gitId":"SimJJ96"},"content":"        case DEADLINE_COMMAND:"},{"lineNumber":67,"author":{"gitId":"SimJJ96"},"content":"            descriptionAndDate \u003d splitUserInput(description, DEADLINE_DELIMITER);"},{"lineNumber":68,"author":{"gitId":"SimJJ96"},"content":"            break;"},{"lineNumber":69,"author":{"gitId":"SimJJ96"},"content":"        case EVENT_COMMAND:"},{"lineNumber":70,"author":{"gitId":"SimJJ96"},"content":"            descriptionAndDate \u003d splitUserInput(description, EVENT_DELIMITER);"},{"lineNumber":71,"author":{"gitId":"SimJJ96"},"content":"            break;"},{"lineNumber":72,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"SimJJ96"},"content":"        checkDateIsValid(descriptionAndDate[ARRAY_INDEX_FOR_DATE]);"},{"lineNumber":74,"author":{"gitId":"SimJJ96"},"content":"        return descriptionAndDate;"},{"lineNumber":75,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":77,"author":{"gitId":"SimJJ96"},"content":"    public static void executeCommand(String command, String description, TaskManager taskManager)"},{"lineNumber":78,"author":{"gitId":"SimJJ96"},"content":"            throws EmptyOrWrongInputException, EmptyDescriptionException, EmptyDateException {"},{"lineNumber":79,"author":{"gitId":"SimJJ96"},"content":"        switch (command) {"},{"lineNumber":80,"author":{"gitId":"SimJJ96"},"content":"        case TODO_COMMAND:"},{"lineNumber":81,"author":{"gitId":"SimJJ96"},"content":"            checkDescriptionIsValid(description);"},{"lineNumber":82,"author":{"gitId":"SimJJ96"},"content":"            taskManager.addToDo(description);"},{"lineNumber":83,"author":{"gitId":"SimJJ96"},"content":"            break;"},{"lineNumber":84,"author":{"gitId":"SimJJ96"},"content":"        case DEADLINE_COMMAND:"},{"lineNumber":85,"author":{"gitId":"SimJJ96"},"content":"            checkDescriptionIsValid(description);"},{"lineNumber":86,"author":{"gitId":"SimJJ96"},"content":"            taskManager.addDeadline(getDescriptionAndDate(command, description));"},{"lineNumber":87,"author":{"gitId":"SimJJ96"},"content":"            break;"},{"lineNumber":88,"author":{"gitId":"SimJJ96"},"content":"        case EVENT_COMMAND:"},{"lineNumber":89,"author":{"gitId":"SimJJ96"},"content":"            checkDescriptionIsValid(description);"},{"lineNumber":90,"author":{"gitId":"SimJJ96"},"content":"            taskManager.addEvent(getDescriptionAndDate(command, description));"},{"lineNumber":91,"author":{"gitId":"SimJJ96"},"content":"            break;"},{"lineNumber":92,"author":{"gitId":"SimJJ96"},"content":"        case DONE_COMMAND:"},{"lineNumber":93,"author":{"gitId":"SimJJ96"},"content":"            int taskNumber \u003d Integer.parseInt(description)-EXTRA_INDEX_FOR_ARRAY;"},{"lineNumber":94,"author":{"gitId":"SimJJ96"},"content":"            taskManager.markAsDone(taskNumber);"},{"lineNumber":95,"author":{"gitId":"SimJJ96"},"content":"            break;"},{"lineNumber":96,"author":{"gitId":"SimJJ96"},"content":"        case EXIT_COMMAND:"},{"lineNumber":97,"author":{"gitId":"SimJJ96"},"content":"            taskManager.printExitMessage();"},{"lineNumber":98,"author":{"gitId":"SimJJ96"},"content":"            System.exit(0);"},{"lineNumber":99,"author":{"gitId":"SimJJ96"},"content":"            break;"},{"lineNumber":100,"author":{"gitId":"SimJJ96"},"content":"        case LIST_COMMAND:"},{"lineNumber":101,"author":{"gitId":"SimJJ96"},"content":"            taskManager.listTasks();"},{"lineNumber":102,"author":{"gitId":"SimJJ96"},"content":"            break;"},{"lineNumber":103,"author":{"gitId":"SimJJ96"},"content":"        default:"},{"lineNumber":104,"author":{"gitId":"SimJJ96"},"content":"            throw new EmptyOrWrongInputException();"},{"lineNumber":105,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"SimJJ96"},"content":"}"}],"authorContributionMap":{"SimJJ96":107}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"import duke.exception.EmptyDateException;"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import duke.exception.EmptyDescriptionException;"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"import duke.exception.EmptyOrWrongInputException;"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"import duke.task.TaskManager;"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"    private static final String BORDER \u003d \"\\t____________________________________________________________\\n\";"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"    public static void showGreetings () {"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"        System.out.print(\"Hello there! This is Jack. Welcome to Task Tracker!\\n\");"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"    public static String getUserInput () {"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"        return SCANNER.nextLine();"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"    public static void runCommand(String command, String description, TaskManager taskManager) {"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"            CommandManager.executeCommand(command, description, taskManager);"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException errorToMarkAsDone) {"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"            System.out.print(BORDER +"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"                    \"\\t☹ OOPS!!! It seems that you have entered an invalid number.\\n\""},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"                    + BORDER);"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"        } catch (EmptyOrWrongInputException errorInvalidOrNoInput) {"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"            System.out.print(BORDER +"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"                    \"\\t☹ OOPS!!! It seems that you have entered an invalid input.\\n\""},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"                    + BORDER);"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"        } catch (EmptyDescriptionException emptyDescriptionException) {"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"            System.out.print(BORDER +"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"                    \"\\t☹ OOPS!!! It seems that you have not enter a description.\\n\""},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"                    + BORDER);"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"        } catch (EmptyDateException emptyDateException) {"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"            System.out.print(BORDER +"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"                    \"\\t☹ OOPS!!! It seems that you have not enter a date.\\n\""},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"                    + BORDER);"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"    public static void main(String[] args) {"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"        showGreetings();"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":"        boolean isRun \u003d true;"},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":"        TaskManager taskManager \u003d new TaskManager();"},{"lineNumber":48,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"        while (isRun) {"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":"            String userInput \u003d getUserInput();"},{"lineNumber":51,"author":{"gitId":"SimJJ96"},"content":"            CommandManager commandManager \u003d new CommandManager(userInput);"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"            String command \u003d commandManager.getCommand();"},{"lineNumber":53,"author":{"gitId":"SimJJ96"},"content":"            String description \u003d commandManager.getDescription();"},{"lineNumber":54,"author":{"gitId":"SimJJ96"},"content":"            runCommand(command, description, taskManager);"},{"lineNumber":55,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":3,"SimJJ96":54}},{"path":"src/main/java/duke/exception/EmptyDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"public class EmptyDateException extends Exception{"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"}"}],"authorContributionMap":{"SimJJ96":4}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"public class EmptyDescriptionException extends  Exception{"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"}"}],"authorContributionMap":{"SimJJ96":4}},{"path":"src/main/java/duke/exception/EmptyOrWrongInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"public class EmptyOrWrongInputException extends Exception{"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"}"}],"authorContributionMap":{"SimJJ96":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"    protected String by;"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"    public Deadline (String description, String by) {"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"        super(description+ \"(by:\" + by + \")\");"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"        this.taskType \u003d \"[D]\";"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"}"}],"authorContributionMap":{"SimJJ96":13}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"public class Event extends Task{"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"    protected String at;"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"    public Event (String description, String at) {"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"        super(description+ \"(at:\" + at + \")\");"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"        this.at \u003d at;"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"        this.taskType \u003d \"[E]\";"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"}"}],"authorContributionMap":{"SimJJ96":12}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"    protected final String description;"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"    protected String taskType;"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"    public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"        this.taskType \u003d \"[]\";"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"    public String getStatusIcon() {"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"        return (isDone ? \"X\" : \" \"); //return space or tick symbols"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"    public void setAsDone() {"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"        isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"    public String getDescription() {"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"        return description;"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"        return taskType + \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"}"}],"authorContributionMap":{"SimJJ96":29}},{"path":"src/main/java/duke/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"public class TaskManager {"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"    private final List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"    private static final String BORDER \u003d \"\\t____________________________________________________________\\n\";"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"    private static final int ARRAY_INDEX_FOR_DESCRIPTION \u003d 0;"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"    private static final int ARRAY_INDEX_FOR_DATE \u003d 1;"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"    public void addToDo (String description) {"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"        Task task \u003d new ToDo(description);"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"        taskList.add(task);"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"        printAddTaskMessage(task);"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"    public void addDeadline (String[] taskAndDeadline) {"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"        String description \u003d taskAndDeadline[ARRAY_INDEX_FOR_DESCRIPTION];"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"        String by \u003d taskAndDeadline[ARRAY_INDEX_FOR_DATE];"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"        Task task \u003d new Deadline(description, by);"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"        taskList.add(task);"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"        printAddTaskMessage(task);"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"    public void addEvent (String[] eventAndDate) {"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"        String taskEvent \u003d eventAndDate[ARRAY_INDEX_FOR_DESCRIPTION];"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"        String at \u003d eventAndDate[ARRAY_INDEX_FOR_DATE];"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"        Task task \u003d new Event(taskEvent, at);"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"        taskList.add(task);"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"        printAddTaskMessage(task);"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"    public void printAddTaskMessage(Task task) {"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"        System.out.print(BORDER"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"                + \"\\t Got it. I\u0027ve added this task:\\n\""},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"                + \"\\t   \" + task + \"\\n\""},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"                + \"\\t Now you have \" + taskList.size() + \" tasks in the list.\\n\""},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"                + BORDER);"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"    public void printExitMessage() {"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"        System.out.print(BORDER"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"                + \"\\t Good Bye. Hope to see you again soon!\" + \"\\n\""},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":"                + BORDER);"},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"    public void listTasks() {"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":"        System.out.print(BORDER + \"\\tHere are the task in your list:\\n\");"},{"lineNumber":51,"author":{"gitId":"SimJJ96"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); ++i) {"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"            int indexOfList \u003d i+1;"},{"lineNumber":53,"author":{"gitId":"SimJJ96"},"content":"            System.out.print(\"\\t\" + indexOfList + \".\" + taskList.get(i) + \"\\n\");"},{"lineNumber":54,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"SimJJ96"},"content":"        System.out.print(BORDER);"},{"lineNumber":56,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":58,"author":{"gitId":"SimJJ96"},"content":"    public void markAsDone(int taskNumber) {"},{"lineNumber":59,"author":{"gitId":"SimJJ96"},"content":"        taskList.get(taskNumber).setAsDone();"},{"lineNumber":60,"author":{"gitId":"SimJJ96"},"content":"        System.out.print(BORDER"},{"lineNumber":61,"author":{"gitId":"SimJJ96"},"content":"                + \"\\t Nice! I\u0027ve marked this as done:\\n\""},{"lineNumber":62,"author":{"gitId":"SimJJ96"},"content":"                + \"\\t [\" + taskList.get(taskNumber).getStatusIcon() + \"] \""},{"lineNumber":63,"author":{"gitId":"SimJJ96"},"content":"                + taskList.get(taskNumber).getDescription() + \"\\n\""},{"lineNumber":64,"author":{"gitId":"SimJJ96"},"content":"                + BORDER);"},{"lineNumber":65,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"SimJJ96"},"content":"}"}],"authorContributionMap":{"SimJJ96":66}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"    public ToDo(String description) {"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"        this.taskType \u003d \"[T]\";"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"}"}],"authorContributionMap":{"SimJJ96":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"deadline weekly CS2113 quiz /by Monday 9pm"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"event CS2113 lecture /at Friday 4 to 6 pm"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"list"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"todo read book"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"done 3"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"list"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"deadline return book /by June 6th"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"done 500"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"list"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"done"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"blah"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"blah blah"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"todo"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"deadline return book"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"event CS2113 lecture"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"bye"}],"authorContributionMap":{"SimJJ96":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\exception\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":19,"SimJJ96":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java ../src/main/java/duke/exception/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":36,"SimJJ96":2}}]
