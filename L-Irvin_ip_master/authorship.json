[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"import duke.storage.Storage;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":"import duke.task.Deadline;"},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"import duke.task.Event;"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"import duke.task.Todo;"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":"    public static void main(String[] args) throws duke.exception.DukeException {"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":"        final String LOGO \u003d \"\\n\" +"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":"                \" .----------------.  .----------------. \\n\" +"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"                \"| .--------------. || .--------------. |\\n\" +"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":"                \"| |    ______    | || |        __    | |\\n\" +"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"                \"| |  .\u0027 ____ \u0027.  | || |    _  / /    | |\\n\" +"},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"                \"| |  | (____) |  | || |   (_)/ /     | |\\n\" +"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"                \"| |  \u0027_.____. |  | || |     / / _    | |\\n\" +"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"                \"| |  | \\\\____| |  | || |    / / (_)   | |\\n\" +"},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"                \"| |   \\\\______,\u0027  | || |   /_/        | |\\n\" +"},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"                \"| |              | || |              | |\\n\" +"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"                \"| \u0027--------------\u0027 || \u0027--------------\u0027 |\\n\" +"},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"                \" \u0027----------------\u0027  \u0027----------------\u0027 \";"},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"        final String DECO_LINE \u003d \"____________________________________________________________\";"},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"        final String HELLO_MESSAGE \u003d \" Hello! I\u0027m 9%.\";"},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"        final String ASK_MESSAGE \u003d \" What can I do for you? (todo/deadline/event)\";"},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":"        final String BYE_MESSAGE \u003d \" Bye. Hope to see you again soon!\";"},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":"        final String ERROR_MESSAGE \u003d \" Sorry, I can\u0027t recognize your input.\";"},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":"        final String ADD_TASK \u003d \" Got it. I\u0027ve added this task:\";"},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":"        final String FILE \u003d \"./tasks.txt\";"},{"lineNumber":31,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":32,"author":{"gitId":"L-Irvin"},"content":"        Storage storage \u003d new Storage(FILE);"},{"lineNumber":33,"author":{"gitId":"L-Irvin"},"content":"        ArrayList\u003cTask\u003e inputs \u003d new ArrayList\u003c\u003e(storage.loadTasks());"},{"lineNumber":34,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":35,"author":{"gitId":"L-Irvin"},"content":"        System.out.println(LOGO);"},{"lineNumber":36,"author":{"gitId":"L-Irvin"},"content":"        System.out.println(DECO_LINE);"},{"lineNumber":37,"author":{"gitId":"L-Irvin"},"content":"        System.out.println(HELLO_MESSAGE);"},{"lineNumber":38,"author":{"gitId":"L-Irvin"},"content":"        System.out.println(ASK_MESSAGE);"},{"lineNumber":39,"author":{"gitId":"L-Irvin"},"content":"        System.out.println(DECO_LINE);"},{"lineNumber":40,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":41,"author":{"gitId":"L-Irvin"},"content":"        Scanner readinput \u003d new Scanner(System.in);"},{"lineNumber":42,"author":{"gitId":"L-Irvin"},"content":"        String input \u003d readinput.nextLine();"},{"lineNumber":43,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":44,"author":{"gitId":"L-Irvin"},"content":"        while (!input.equals(\"bye\")) {"},{"lineNumber":45,"author":{"gitId":"L-Irvin"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":46,"author":{"gitId":"L-Irvin"},"content":"                System.out.println(DECO_LINE);"},{"lineNumber":47,"author":{"gitId":"L-Irvin"},"content":"                for (int i \u003d 0; i \u003c inputs.size(); i++) {"},{"lineNumber":48,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(\" \" + (i + 1) + \". \" + inputs.get(i).toString());"},{"lineNumber":49,"author":{"gitId":"L-Irvin"},"content":"                }"},{"lineNumber":50,"author":{"gitId":"L-Irvin"},"content":"                System.out.println(DECO_LINE);"},{"lineNumber":51,"author":{"gitId":"L-Irvin"},"content":"            } else if (input.split(\" \")[0].equals(\"done\")) {"},{"lineNumber":52,"author":{"gitId":"L-Irvin"},"content":"                System.out.println(DECO_LINE);"},{"lineNumber":53,"author":{"gitId":"L-Irvin"},"content":"                try {"},{"lineNumber":54,"author":{"gitId":"L-Irvin"},"content":"                    int ind \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"},{"lineNumber":55,"author":{"gitId":"L-Irvin"},"content":"                    if (ind \u003c inputs.size() \u0026\u0026 ind \u003e\u003d 0) {"},{"lineNumber":56,"author":{"gitId":"L-Irvin"},"content":"                        if (inputs.get(ind).getIsDone()) {"},{"lineNumber":57,"author":{"gitId":"L-Irvin"},"content":"                            System.out.println(\" Task is already marked done!\");"},{"lineNumber":58,"author":{"gitId":"L-Irvin"},"content":"                        } else {"},{"lineNumber":59,"author":{"gitId":"L-Irvin"},"content":"                            inputs.get(ind).markAsDone();"},{"lineNumber":60,"author":{"gitId":"L-Irvin"},"content":"                            System.out.println(\" \" + inputs.get(ind).toString());"},{"lineNumber":61,"author":{"gitId":"L-Irvin"},"content":"                        }"},{"lineNumber":62,"author":{"gitId":"L-Irvin"},"content":"                    } else {"},{"lineNumber":63,"author":{"gitId":"L-Irvin"},"content":"                        System.out.println(\" Index is out of boundary!\");"},{"lineNumber":64,"author":{"gitId":"L-Irvin"},"content":"                    }"},{"lineNumber":65,"author":{"gitId":"L-Irvin"},"content":"                } catch (NumberFormatException nfe) {"},{"lineNumber":66,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(DECO_LINE);"},{"lineNumber":67,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(\" Format is wrong!\");"},{"lineNumber":68,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(DECO_LINE);"},{"lineNumber":69,"author":{"gitId":"L-Irvin"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"L-Irvin"},"content":"                System.out.println(DECO_LINE);"},{"lineNumber":71,"author":{"gitId":"L-Irvin"},"content":"            } else if (input.split(\" \")[0].equals(\"remove\")) {"},{"lineNumber":72,"author":{"gitId":"L-Irvin"},"content":"                System.out.println(DECO_LINE);"},{"lineNumber":73,"author":{"gitId":"L-Irvin"},"content":"                try {"},{"lineNumber":74,"author":{"gitId":"L-Irvin"},"content":"                    int ind \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"},{"lineNumber":75,"author":{"gitId":"L-Irvin"},"content":"                    if (ind \u003c inputs.size() \u0026\u0026 ind \u003e\u003d 0) {"},{"lineNumber":76,"author":{"gitId":"L-Irvin"},"content":"                        inputs.remove(ind);"},{"lineNumber":77,"author":{"gitId":"L-Irvin"},"content":"                        System.out.println(\" Task is removed!\");"},{"lineNumber":78,"author":{"gitId":"L-Irvin"},"content":"                    } else {"},{"lineNumber":79,"author":{"gitId":"L-Irvin"},"content":"                        System.out.println(\" Index is out of boundary!\");"},{"lineNumber":80,"author":{"gitId":"L-Irvin"},"content":"                    }"},{"lineNumber":81,"author":{"gitId":"L-Irvin"},"content":"                } catch (NumberFormatException nfe) {"},{"lineNumber":82,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(DECO_LINE);"},{"lineNumber":83,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(\" Format is wrong!\");"},{"lineNumber":84,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(DECO_LINE);"},{"lineNumber":85,"author":{"gitId":"L-Irvin"},"content":"                }"},{"lineNumber":86,"author":{"gitId":"L-Irvin"},"content":"                System.out.println(DECO_LINE);"},{"lineNumber":87,"author":{"gitId":"L-Irvin"},"content":"            } else if (input.split(\" \")[0].equals(\"todo\")) {"},{"lineNumber":88,"author":{"gitId":"L-Irvin"},"content":"                try {"},{"lineNumber":89,"author":{"gitId":"L-Irvin"},"content":"                    String task \u003d input.split(\" \", 2)[1];"},{"lineNumber":90,"author":{"gitId":"L-Irvin"},"content":"                    inputs.add(new Todo(task, false));"},{"lineNumber":91,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(DECO_LINE);"},{"lineNumber":92,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(ADD_TASK);"},{"lineNumber":93,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(\"   [T][ ] \" + task);"},{"lineNumber":94,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(\" Now you have \" + inputs.size() + \" tasks in the list.\");"},{"lineNumber":95,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(DECO_LINE);"},{"lineNumber":96,"author":{"gitId":"L-Irvin"},"content":"                } catch (Exception nfe) {"},{"lineNumber":97,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(DECO_LINE);"},{"lineNumber":98,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(\"Format is wrong! You should write \\\"todo \u003cevent\u003e\\\"\");"},{"lineNumber":99,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(DECO_LINE);"},{"lineNumber":100,"author":{"gitId":"L-Irvin"},"content":"                }"},{"lineNumber":101,"author":{"gitId":"L-Irvin"},"content":"            } else if (input.split(\" \")[0].equals(\"deadline\")) {"},{"lineNumber":102,"author":{"gitId":"L-Irvin"},"content":"                try {"},{"lineNumber":103,"author":{"gitId":"L-Irvin"},"content":"                    String task \u003d input.split(\" /by \")[0].split(\" \", 2)[1];"},{"lineNumber":104,"author":{"gitId":"L-Irvin"},"content":"                    String deadline \u003d input.split(\" /by \")[1];"},{"lineNumber":105,"author":{"gitId":"L-Irvin"},"content":"                    inputs.add(new Deadline(task, false, deadline));"},{"lineNumber":106,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(DECO_LINE);"},{"lineNumber":107,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(ADD_TASK);"},{"lineNumber":108,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(\"   [D][ ] \" + task + \" (by: \" + deadline + \")\");"},{"lineNumber":109,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(\" Now you have \" + inputs.size() + \" tasks in the list.\");"},{"lineNumber":110,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(DECO_LINE);"},{"lineNumber":111,"author":{"gitId":"L-Irvin"},"content":"                } catch (Exception nfe) {"},{"lineNumber":112,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(DECO_LINE);"},{"lineNumber":113,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(\"Format is wrong! You should write \\\"deadline \u003cevent\u003e /by \u003cdeadline\u003e\\\"\");"},{"lineNumber":114,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(DECO_LINE);"},{"lineNumber":115,"author":{"gitId":"L-Irvin"},"content":"                }"},{"lineNumber":116,"author":{"gitId":"L-Irvin"},"content":"            } else if (input.split(\" \")[0].equals(\"event\")) {"},{"lineNumber":117,"author":{"gitId":"L-Irvin"},"content":"                try {"},{"lineNumber":118,"author":{"gitId":"L-Irvin"},"content":"                    String task \u003d input.split(\" /at \")[0].split(\" \", 2)[1];"},{"lineNumber":119,"author":{"gitId":"L-Irvin"},"content":"                    String schedule \u003d input.split(\" /at \")[1];"},{"lineNumber":120,"author":{"gitId":"L-Irvin"},"content":"                    inputs.add(new Event(task, false, schedule));"},{"lineNumber":121,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(DECO_LINE);"},{"lineNumber":122,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(ADD_TASK);"},{"lineNumber":123,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(\"   [E][ ] \" + task + \" (at: \" + schedule + \")\");"},{"lineNumber":124,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(\" Now you have \" + inputs.size() + \" tasks in the list.\");"},{"lineNumber":125,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(DECO_LINE);"},{"lineNumber":126,"author":{"gitId":"L-Irvin"},"content":"                } catch (Exception nfe) {"},{"lineNumber":127,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(DECO_LINE);"},{"lineNumber":128,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(\"Format is wrong! You should write \\\"event \u003cevent\u003e /at \u003cschedule\u003e\\\"\");"},{"lineNumber":129,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(DECO_LINE);"},{"lineNumber":130,"author":{"gitId":"L-Irvin"},"content":"                }"},{"lineNumber":131,"author":{"gitId":"L-Irvin"},"content":"            } else {"},{"lineNumber":132,"author":{"gitId":"L-Irvin"},"content":"                System.out.println(DECO_LINE);"},{"lineNumber":133,"author":{"gitId":"L-Irvin"},"content":"                System.out.println(ERROR_MESSAGE);"},{"lineNumber":134,"author":{"gitId":"L-Irvin"},"content":"                System.out.println(DECO_LINE);"},{"lineNumber":135,"author":{"gitId":"L-Irvin"},"content":"            }"},{"lineNumber":136,"author":{"gitId":"L-Irvin"},"content":"            input \u003d readinput.nextLine();"},{"lineNumber":137,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":139,"author":{"gitId":"L-Irvin"},"content":"        storage.saveTasks(inputs);"},{"lineNumber":140,"author":{"gitId":"L-Irvin"},"content":"        System.out.println(DECO_LINE);"},{"lineNumber":141,"author":{"gitId":"L-Irvin"},"content":"        System.out.println(BYE_MESSAGE);"},{"lineNumber":142,"author":{"gitId":"L-Irvin"},"content":"        System.out.println(DECO_LINE);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"L-Irvin":141,"-":3}},{"path":"src/main/java/db/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"T | 0 | test"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":"D | 1 | test | 8pm"},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"E | 0 | test | 9pm"}],"authorContributionMap":{"L-Irvin":3}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":" * Throws exceptions relating to MySTARS."},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":"     * Sorry message."},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":"    private static final String SORRY \u003d \"Sorry! \";"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"     * Initializes message to throw."},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"     * @param message Exception message to show."},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"    public DukeException(String message) {"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"        super(SORRY + message);"},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":21}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":"import duke.task.Deadline;"},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"import duke.task.Event;"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":"import duke.task.Todo;"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":"import java.io.*;"},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":" * Implements file storage."},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"public class Storage {"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"    private final File data;"},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"     * Intializes a Storage object."},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"     * @param filePath The location of the storage."},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"     * @throws DukeException If directory not found."},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":"    public Storage(String filePath) throws DukeException {"},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":"            File data \u003d new File(filePath);"},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":"            if (!data.exists()) {"},{"lineNumber":31,"author":{"gitId":"L-Irvin"},"content":"                data.createNewFile();"},{"lineNumber":32,"author":{"gitId":"L-Irvin"},"content":"                assert data.exists() : \" Directory cannot be made\";"},{"lineNumber":33,"author":{"gitId":"L-Irvin"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"L-Irvin"},"content":"            this.data \u003d data;"},{"lineNumber":35,"author":{"gitId":"L-Irvin"},"content":"        } catch (IOException error) {"},{"lineNumber":36,"author":{"gitId":"L-Irvin"},"content":"            throw new DukeException(\" I cannot find the directory :(\");"},{"lineNumber":37,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":40,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"L-Irvin"},"content":"     * Generates list of tasks from save file."},{"lineNumber":42,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"L-Irvin"},"content":"     * @return List of tasks generated from save file."},{"lineNumber":44,"author":{"gitId":"L-Irvin"},"content":"     * @throws DukeException If there is file reading error."},{"lineNumber":45,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"L-Irvin"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DukeException {"},{"lineNumber":47,"author":{"gitId":"L-Irvin"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"L-Irvin"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":49,"author":{"gitId":"L-Irvin"},"content":"            Scanner sc \u003d new Scanner(data);"},{"lineNumber":50,"author":{"gitId":"L-Irvin"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":51,"author":{"gitId":"L-Irvin"},"content":"                String[] inputs \u003d sc.nextLine().split(\" \\\\| \");"},{"lineNumber":52,"author":{"gitId":"L-Irvin"},"content":"                String type \u003d inputs[0];"},{"lineNumber":53,"author":{"gitId":"L-Irvin"},"content":"                boolean isDone \u003d inputs[1].equals(\"1\");"},{"lineNumber":54,"author":{"gitId":"L-Irvin"},"content":"                String description \u003d inputs[2];"},{"lineNumber":55,"author":{"gitId":"L-Irvin"},"content":"                String time;"},{"lineNumber":56,"author":{"gitId":"L-Irvin"},"content":"                if (type.equals(\"T\")) {"},{"lineNumber":57,"author":{"gitId":"L-Irvin"},"content":"                    tasks.add(new Todo(description, isDone));"},{"lineNumber":58,"author":{"gitId":"L-Irvin"},"content":"                } else if (type.equals((\"D\"))) {"},{"lineNumber":59,"author":{"gitId":"L-Irvin"},"content":"                    time \u003d inputs[3];"},{"lineNumber":60,"author":{"gitId":"L-Irvin"},"content":"                    tasks.add(new Deadline(description, isDone, time));"},{"lineNumber":61,"author":{"gitId":"L-Irvin"},"content":"                } else if (type.equals(\"E\")) {"},{"lineNumber":62,"author":{"gitId":"L-Irvin"},"content":"                    time \u003d inputs[3];"},{"lineNumber":63,"author":{"gitId":"L-Irvin"},"content":"                    tasks.add(new Event(description, isDone, time));"},{"lineNumber":64,"author":{"gitId":"L-Irvin"},"content":"                } else {"},{"lineNumber":65,"author":{"gitId":"L-Irvin"},"content":"                    throw new DukeException(\" I cannot identify the task type :(\");"},{"lineNumber":66,"author":{"gitId":"L-Irvin"},"content":"                }"},{"lineNumber":67,"author":{"gitId":"L-Irvin"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"L-Irvin"},"content":"            return tasks;"},{"lineNumber":69,"author":{"gitId":"L-Irvin"},"content":"        } catch (FileNotFoundException error) {"},{"lineNumber":70,"author":{"gitId":"L-Irvin"},"content":"            throw new DukeException(\" I cannot find the directory.\");"},{"lineNumber":71,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":74,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"L-Irvin"},"content":"     * Saves task to hard disk."},{"lineNumber":76,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"L-Irvin"},"content":"     * @param tasks Tasks user currently have."},{"lineNumber":78,"author":{"gitId":"L-Irvin"},"content":"     * @throws DukeException If there is writing file error."},{"lineNumber":79,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"L-Irvin"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws DukeException {"},{"lineNumber":81,"author":{"gitId":"L-Irvin"},"content":"        try {"},{"lineNumber":82,"author":{"gitId":"L-Irvin"},"content":"            PrintWriter writer \u003d new PrintWriter(new FileWriter(data));"},{"lineNumber":83,"author":{"gitId":"L-Irvin"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":84,"author":{"gitId":"L-Irvin"},"content":"                writer.println(tasks.get(i).saveToHardDisk());"},{"lineNumber":85,"author":{"gitId":"L-Irvin"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"L-Irvin"},"content":"            writer.close();"},{"lineNumber":87,"author":{"gitId":"L-Irvin"},"content":"        } catch (IOException error) {"},{"lineNumber":88,"author":{"gitId":"L-Irvin"},"content":"            throw new DukeException(\" I cannot save your tasks :(\");"},{"lineNumber":89,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":91}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"public class Deadline extends duke.task.Task {"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"    protected String dueDate;"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":"    public Deadline(String description, boolean isDone, String dueDate) {"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"        super(description, isDone);"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":"        this.dueDate \u003d dueDate;"},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":"        return \"[D][\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (by: \" + dueDate + \")\";"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"     * Describes event to be saved in hard disk."},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"     * @return String that will be stored on hard disk."},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"    public String saveToHardDisk() {"},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"        return \"D\" + super.saveToHardDisk() + \" | \" + dueDate;"},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"public class Event extends duke.task.Task {"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"    protected String date;"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":"    public Event(String description, boolean isDone, String date) {"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"        super(description, isDone);"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":"        this.date \u003d date;"},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":"        return \"[E][\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (at: \" + date + \")\";"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"     * Describes event to be saved in hard disk."},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"     * @return String that will be stored on hard disk."},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"    public String saveToHardDisk() {"},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"        return \"E\" + super.saveToHardDisk() + \" | \" + date;"},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":"    public String getDescription() {"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":"        return description;"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"    public String getStatusIcon() {"},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"        return (isDone ? \"\\u2718\" : \" \"); //return tick or X symbols, tick is \\u2713"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"    public boolean getIsDone() {"},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"        return isDone;"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"    public void markAsDone() {"},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"        this.isDone \u003d true;"},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":"    public String saveToHardDisk() {"},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":"        int isDone \u003d this.isDone ? 1 : 0;"},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":"        return \" | \" + isDone + \" | \" + description;"},{"lineNumber":31,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":32}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"public class Todo extends duke.task.Task {"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":"        super(description, isDone);"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":"        return \"[T][\" + super.getStatusIcon() + \"] \" + super.getDescription();"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"     * Describes event to be saved in hard disk."},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"     * @return String that will be stored on hard disk."},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"    public String saveToHardDisk() {"},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"        return \"T\" + super.saveToHardDisk();"},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":"deadline nothing"},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":"event nothing"},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":"list"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":"done -1"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"done 5"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":"done 2"},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":"list"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":"bye"}],"authorContributionMap":{"L-Irvin":11}}]
