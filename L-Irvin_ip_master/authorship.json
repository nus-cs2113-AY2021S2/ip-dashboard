[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":"import duke.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"import duke.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":" * Implements 9% chatbot command line interface"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":"public class Duke {"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"    private static final String SEPARATOR \u003d System.getProperty(\"line.separator\");"},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"    private Storage storage;"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"    private TaskList tasks;"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"    private Ui ui;"},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"     * Initializes a Duke object"},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"     **/"},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"    public Duke() {"},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"            this.ui \u003d new Ui();"},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":"            this.storage \u003d new Storage();"},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":"            this.tasks \u003d new TaskList(storage.loadTasks());"},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":"        } catch (DukeException error) {"},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":"            ui.showLoadingError();"},{"lineNumber":31,"author":{"gitId":"L-Irvin"},"content":"            this.tasks \u003d new TaskList();"},{"lineNumber":32,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":35,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"L-Irvin"},"content":"     * Starts Duke."},{"lineNumber":37,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"L-Irvin"},"content":"     * @param args Command line argument."},{"lineNumber":39,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"L-Irvin"},"content":"    public static void main(String[] args) {"},{"lineNumber":41,"author":{"gitId":"L-Irvin"},"content":"        new Duke().run();"},{"lineNumber":42,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":44,"author":{"gitId":"L-Irvin"},"content":"    public void run() {"},{"lineNumber":45,"author":{"gitId":"L-Irvin"},"content":"        ui.getGreetings();"},{"lineNumber":46,"author":{"gitId":"L-Irvin"},"content":"        boolean isExit \u003d false;"},{"lineNumber":47,"author":{"gitId":"L-Irvin"},"content":"        while (!isExit) {"},{"lineNumber":48,"author":{"gitId":"L-Irvin"},"content":"            try {"},{"lineNumber":49,"author":{"gitId":"L-Irvin"},"content":"                String fullCommand \u003d ui.readInput();"},{"lineNumber":50,"author":{"gitId":"L-Irvin"},"content":"                ui.showLine();"},{"lineNumber":51,"author":{"gitId":"L-Irvin"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":52,"author":{"gitId":"L-Irvin"},"content":"                c.executeCommand(tasks, ui, storage);"},{"lineNumber":53,"author":{"gitId":"L-Irvin"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":54,"author":{"gitId":"L-Irvin"},"content":"            } catch (DukeException e) {"},{"lineNumber":55,"author":{"gitId":"L-Irvin"},"content":"                ui.showToUser(e.getMessage());"},{"lineNumber":56,"author":{"gitId":"L-Irvin"},"content":"            } finally {"},{"lineNumber":57,"author":{"gitId":"L-Irvin"},"content":"                ui.showLine();"},{"lineNumber":58,"author":{"gitId":"L-Irvin"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":61}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":" * Implements command objects."},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"public abstract class Command {"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"     * Executes the given command."},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"     * @param tasks   Task list the user currently have."},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"     * @param ui      Tool to interact with user."},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"     * @param storage Storage to load and save data."},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"     * @throws DukeException If there is an error."},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"    public abstract void executeCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"     * Returns an indicator if the program will terminate."},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":"     * @return Indicator of termination."},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":"    public boolean isExit() {"},{"lineNumber":31,"author":{"gitId":"L-Irvin"},"content":"        return false;"},{"lineNumber":32,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":33}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"import duke.task.Deadline;"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":" * Implements deadline command objects."},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"    private final String description;"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"    private final String due;"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"     * Initializes a DeadlineCommand object."},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"     * @param description The task description."},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"     * @param due         The task deadline time."},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"    public DeadlineCommand(String description, String due) {"},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":"        this.description \u003d description;"},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":"        this.due \u003d due;"},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":31,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"L-Irvin"},"content":"     * Executes the given command."},{"lineNumber":33,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"L-Irvin"},"content":"     * @param tasks   Task list the user currently have."},{"lineNumber":35,"author":{"gitId":"L-Irvin"},"content":"     * @param ui      Tool to interact with user."},{"lineNumber":36,"author":{"gitId":"L-Irvin"},"content":"     * @param storage Storage to load and save data."},{"lineNumber":37,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"L-Irvin"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"L-Irvin"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":40,"author":{"gitId":"L-Irvin"},"content":"        Task newTask \u003d new Deadline(description, false, due);"},{"lineNumber":41,"author":{"gitId":"L-Irvin"},"content":"        tasks.addTask(newTask, ui);"},{"lineNumber":42,"author":{"gitId":"L-Irvin"},"content":"        storage.saveTasks(tasks.getTasks());"},{"lineNumber":43,"author":{"gitId":"L-Irvin"},"content":"        ui.getResponses();"},{"lineNumber":44,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":45}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":" * Implements delete command objects."},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":"    private final int index;"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"    public DeleteCommand(int index) {"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"        this.index \u003d index;"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"     * Executes the given command."},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"     * @param tasks   Task list the user currently have."},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"     * @param ui      Tool to interact with user."},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"     * @param storage Storage to load and save data."},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":"        tasks.deleteTask(index, ui);"},{"lineNumber":31,"author":{"gitId":"L-Irvin"},"content":"        storage.saveTasks(tasks.getTasks());"},{"lineNumber":32,"author":{"gitId":"L-Irvin"},"content":"        ui.getResponses();"},{"lineNumber":33,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":34}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":" * Implements done command objects."},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"public class DoneCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":"    private final int index;"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"    public DoneCommand(int index) {"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"        this.index \u003d index;"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"     * Executes the given command."},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"     * @param tasks   Task list the user currently have."},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"     * @param ui      Tool to interact with user."},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"     * @param storage Storage to load and save data."},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":"        tasks.markAsDone(index, ui);"},{"lineNumber":31,"author":{"gitId":"L-Irvin"},"content":"        storage.saveTasks(tasks.getTasks());"},{"lineNumber":32,"author":{"gitId":"L-Irvin"},"content":"        ui.getResponses();"},{"lineNumber":33,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":34}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"import duke.task.Event;"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":" * Implements event command objects."},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"public class EventCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"    private final String description;"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"    private final String time;"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"     * Initializes an EventCommand object."},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"     * @param description The task description."},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"     * @param time        The event time."},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"    public EventCommand(String description, String time) {"},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":"        this.description \u003d description;"},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":"        this.time \u003d time;"},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":31,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"L-Irvin"},"content":"     * Executes the given command."},{"lineNumber":33,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"L-Irvin"},"content":"     * @param tasks   Task list the user currently have."},{"lineNumber":35,"author":{"gitId":"L-Irvin"},"content":"     * @param ui      Tool to interact with user."},{"lineNumber":36,"author":{"gitId":"L-Irvin"},"content":"     * @param storage Storage to load and save data."},{"lineNumber":37,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"L-Irvin"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"L-Irvin"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":40,"author":{"gitId":"L-Irvin"},"content":"        Task newTask \u003d new Event(description, false, time);"},{"lineNumber":41,"author":{"gitId":"L-Irvin"},"content":"        tasks.addTask(newTask, ui);"},{"lineNumber":42,"author":{"gitId":"L-Irvin"},"content":"        storage.saveTasks(tasks.getTasks());"},{"lineNumber":43,"author":{"gitId":"L-Irvin"},"content":"        ui.getResponses();"},{"lineNumber":44,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":45}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":" * Implements find command objects."},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"public class FindCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"    private final String keyword;"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"     * Executes the given command."},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"     * @param tasks Task list the user currently have."},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":"     * @param ui Tool to interact with user."},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":"     * @param storage Storage to load and save data."},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"L-Irvin"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":32,"author":{"gitId":"L-Irvin"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTasks(keyword);"},{"lineNumber":33,"author":{"gitId":"L-Irvin"},"content":"        if (matchingTasks.size() \u003d\u003d 0) {"},{"lineNumber":34,"author":{"gitId":"L-Irvin"},"content":"            ui.accumulateResponses(\" No tasks with matching keyword was found.\");"},{"lineNumber":35,"author":{"gitId":"L-Irvin"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"L-Irvin"},"content":"            ui.accumulateResponses(\" Here are all the matching tasks:\\n\");"},{"lineNumber":37,"author":{"gitId":"L-Irvin"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {"},{"lineNumber":38,"author":{"gitId":"L-Irvin"},"content":"                ui.accumulateResponses(\"   \" + (i + 1) + \".\" + matchingTasks.get(i) + \"\\n\");"},{"lineNumber":39,"author":{"gitId":"L-Irvin"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"L-Irvin"},"content":"        ui.getResponses();"},{"lineNumber":42,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":43}},{"path":"src/main/java/duke/command/GoodbyeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":" * Implements bye command objects."},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":"public class GoodbyeCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":"     * Executes the given command."},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"     * @param tasks   Task list the user currently have."},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"     * @param ui      Tool to interact with user."},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"     * @param storage Storage to load and save data."},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"     * @throws DukeException If failed to save tasks."},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"        storage.saveTasks(tasks.getTasks());"},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"        ui.showGoodbyeUser();"},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":"     * Returns an indicator if the program will terminate."},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"L-Irvin"},"content":"     * @return Indicator of termination."},{"lineNumber":32,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"L-Irvin"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"L-Irvin"},"content":"    public boolean isExit() {"},{"lineNumber":35,"author":{"gitId":"L-Irvin"},"content":"        return true;"},{"lineNumber":36,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":37}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":" * Implements list command objects."},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":"public class ListCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"     * Executes the given command."},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"     * @param tasks   Task list the user currently have."},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"     * @param ui      Tool to interact with user."},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"     * @param storage Storage to load and save data."},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"        tasks.listTasks(ui);"},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"        ui.getResponses();"},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":25}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":"import duke.task.Todo;"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":" * Implements to do command objects."},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":"public class TodoCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"    private final String description;"},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"    public TodoCommand(String description) {"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"        this.description \u003d description;"},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"     * Executes the given command."},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"     * @param tasks   Task list the user currently have."},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"     * @param ui      Tool to interact with user."},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":"     * @param storage Storage to load and save data."},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":31,"author":{"gitId":"L-Irvin"},"content":"        Task newTask \u003d new Todo(description, false);"},{"lineNumber":32,"author":{"gitId":"L-Irvin"},"content":"        tasks.addTask(newTask, ui);"},{"lineNumber":33,"author":{"gitId":"L-Irvin"},"content":"        storage.saveTasks(tasks.getTasks());"},{"lineNumber":34,"author":{"gitId":"L-Irvin"},"content":"        ui.getResponses();"},{"lineNumber":35,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":36}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":" * Throw exceptions related to Duke."},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"public class DukeException extends Exception {"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":"     * Sorry message."},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":"    private static final String SORRY \u003d \"Sorry! \";"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"     * Initializes message to throw."},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"     * @param message Exception message to show."},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"    public DukeException(String message) {"},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"        super(SORRY + message);"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":23}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"import duke.command.*;"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":"import duke.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":"import java.util.function.BiFunction;"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":" * Implements user input parser."},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"public class Parser {"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":"    private static final BiFunction\u003cString[], Integer, Boolean\u003e CHECK_LENGTH \u003d (s, i) -\u003e s.length \u003c\u003d i;"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"    private static String errorMessage \u003d null;"},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"    private enum Commands {"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"        BYE,"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"        LIST,"},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"        DONE,"},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"        MARK,"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"        DELETE,"},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"        REMOVE,"},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"        TODO,"},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"        DEADLINE,"},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"        EVENT,"},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":"        FIND"},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":"    };"},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":"    private static Command handleDoneOrDelete(Commands commandType, String[] separatedWords) {"},{"lineNumber":31,"author":{"gitId":"L-Irvin"},"content":"        Command command \u003d null;"},{"lineNumber":32,"author":{"gitId":"L-Irvin"},"content":"        if (CHECK_LENGTH.apply(separatedWords, 1)) {"},{"lineNumber":33,"author":{"gitId":"L-Irvin"},"content":"            errorMessage \u003d \" Task index must be specified!\";"},{"lineNumber":34,"author":{"gitId":"L-Irvin"},"content":"            return command;"},{"lineNumber":35,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"L-Irvin"},"content":"        int index \u003d Integer.parseInt(separatedWords[1]);"},{"lineNumber":37,"author":{"gitId":"L-Irvin"},"content":"        switch (commandType) {"},{"lineNumber":38,"author":{"gitId":"L-Irvin"},"content":"            case MARK:"},{"lineNumber":39,"author":{"gitId":"L-Irvin"},"content":"            case DONE:"},{"lineNumber":40,"author":{"gitId":"L-Irvin"},"content":"                command \u003d new DoneCommand(index);"},{"lineNumber":41,"author":{"gitId":"L-Irvin"},"content":"                break;"},{"lineNumber":42,"author":{"gitId":"L-Irvin"},"content":"            case REMOVE:"},{"lineNumber":43,"author":{"gitId":"L-Irvin"},"content":"            case DELETE:"},{"lineNumber":44,"author":{"gitId":"L-Irvin"},"content":"                command \u003d new DeleteCommand(index);"},{"lineNumber":45,"author":{"gitId":"L-Irvin"},"content":"                break;"},{"lineNumber":46,"author":{"gitId":"L-Irvin"},"content":"            default:"},{"lineNumber":47,"author":{"gitId":"L-Irvin"},"content":"                errorMessage \u003d \" Command type not found\";"},{"lineNumber":48,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"L-Irvin"},"content":"        return command;"},{"lineNumber":50,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":52,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"L-Irvin"},"content":"     * Executes task addition."},{"lineNumber":54,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"L-Irvin"},"content":"     * @param commandType   User chosen type of command."},{"lineNumber":56,"author":{"gitId":"L-Irvin"},"content":"     * @param input         User input."},{"lineNumber":57,"author":{"gitId":"L-Irvin"},"content":"     * @param time          Time signature attached to the task."},{"lineNumber":58,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"L-Irvin"},"content":"    private static Command handleAddTask(Commands commandType, String input, String time) {"},{"lineNumber":60,"author":{"gitId":"L-Irvin"},"content":"        StringBuilder description \u003d new StringBuilder();"},{"lineNumber":61,"author":{"gitId":"L-Irvin"},"content":"        Command command \u003d null;"},{"lineNumber":62,"author":{"gitId":"L-Irvin"},"content":"        String[] separatedWords \u003d time.equals(\"\") ? new String[]{input} : input.split(time);"},{"lineNumber":63,"author":{"gitId":"L-Irvin"},"content":"        String[] getDescription \u003d separatedWords[0].split(\" \");"},{"lineNumber":64,"author":{"gitId":"L-Irvin"},"content":"        if (CHECK_LENGTH.apply(getDescription, 1)) {"},{"lineNumber":65,"author":{"gitId":"L-Irvin"},"content":"            errorMessage \u003d \" Task description cannot be empty!\";"},{"lineNumber":66,"author":{"gitId":"L-Irvin"},"content":"            return command;"},{"lineNumber":67,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"L-Irvin"},"content":"        if (CHECK_LENGTH.apply(separatedWords, 1) \u0026\u0026 !commandType.equals(Commands.TODO)) {"},{"lineNumber":69,"author":{"gitId":"L-Irvin"},"content":"            errorMessage \u003d \" Time cannot be empty!\";"},{"lineNumber":70,"author":{"gitId":"L-Irvin"},"content":"            return command;"},{"lineNumber":71,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"L-Irvin"},"content":"        for (int i \u003d 1; i \u003c getDescription.length; i++) {"},{"lineNumber":73,"author":{"gitId":"L-Irvin"},"content":"            description.append(getDescription[i]).append(\" \");"},{"lineNumber":74,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"L-Irvin"},"content":"        switch (commandType) {"},{"lineNumber":76,"author":{"gitId":"L-Irvin"},"content":"            case TODO:"},{"lineNumber":77,"author":{"gitId":"L-Irvin"},"content":"                command \u003d new TodoCommand(description.toString().trim());"},{"lineNumber":78,"author":{"gitId":"L-Irvin"},"content":"                break;"},{"lineNumber":79,"author":{"gitId":"L-Irvin"},"content":"            case DEADLINE:"},{"lineNumber":80,"author":{"gitId":"L-Irvin"},"content":"                time \u003d separatedWords[1].trim();"},{"lineNumber":81,"author":{"gitId":"L-Irvin"},"content":"                command \u003d new DeadlineCommand(description.toString().trim(), time);"},{"lineNumber":82,"author":{"gitId":"L-Irvin"},"content":"                break;"},{"lineNumber":83,"author":{"gitId":"L-Irvin"},"content":"            case EVENT:"},{"lineNumber":84,"author":{"gitId":"L-Irvin"},"content":"                time \u003d separatedWords[1].trim();"},{"lineNumber":85,"author":{"gitId":"L-Irvin"},"content":"                command \u003d new EventCommand(description.toString().trim(), time);"},{"lineNumber":86,"author":{"gitId":"L-Irvin"},"content":"                break;"},{"lineNumber":87,"author":{"gitId":"L-Irvin"},"content":"            default:"},{"lineNumber":88,"author":{"gitId":"L-Irvin"},"content":"                errorMessage \u003d \" Command type not found\";"},{"lineNumber":89,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"L-Irvin"},"content":"        return command;"},{"lineNumber":91,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":93,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"L-Irvin"},"content":"     * Executes task searching."},{"lineNumber":95,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"L-Irvin"},"content":"     * @param separatedWords   Keyword determined by the user\u0027s input."},{"lineNumber":97,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"L-Irvin"},"content":"    private static Command handleFind(String[] separatedWords) {"},{"lineNumber":99,"author":{"gitId":"L-Irvin"},"content":"        Command command \u003d null;"},{"lineNumber":100,"author":{"gitId":"L-Irvin"},"content":"        if (CHECK_LENGTH.apply(separatedWords, 1)) {"},{"lineNumber":101,"author":{"gitId":"L-Irvin"},"content":"            errorMessage \u003d \" Keyword cannot be empty!\";"},{"lineNumber":102,"author":{"gitId":"L-Irvin"},"content":"            return command;"},{"lineNumber":103,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"L-Irvin"},"content":"        String keyword \u003d separatedWords[1];"},{"lineNumber":105,"author":{"gitId":"L-Irvin"},"content":"        command \u003d new FindCommand(keyword);"},{"lineNumber":106,"author":{"gitId":"L-Irvin"},"content":"        return command;"},{"lineNumber":107,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":109,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"L-Irvin"},"content":"     * Parses user input into command."},{"lineNumber":111,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"L-Irvin"},"content":"     * @param input User input."},{"lineNumber":113,"author":{"gitId":"L-Irvin"},"content":"     * @return Command to be executed."},{"lineNumber":114,"author":{"gitId":"L-Irvin"},"content":"     * @throws DukeException If there is parsing error."},{"lineNumber":115,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"L-Irvin"},"content":"    public static Command parse(String input) throws DukeException {"},{"lineNumber":117,"author":{"gitId":"L-Irvin"},"content":"        try {"},{"lineNumber":118,"author":{"gitId":"L-Irvin"},"content":"            String[] separatedWords \u003d input.split(\"\\\\s+\");"},{"lineNumber":119,"author":{"gitId":"L-Irvin"},"content":"            Commands commandType \u003d Commands.valueOf(separatedWords[0].toUpperCase());"},{"lineNumber":120,"author":{"gitId":"L-Irvin"},"content":"            Command command;"},{"lineNumber":121,"author":{"gitId":"L-Irvin"},"content":"            switch (commandType) {"},{"lineNumber":122,"author":{"gitId":"L-Irvin"},"content":"                case BYE:"},{"lineNumber":123,"author":{"gitId":"L-Irvin"},"content":"                    command \u003d new GoodbyeCommand();"},{"lineNumber":124,"author":{"gitId":"L-Irvin"},"content":"                    break;"},{"lineNumber":125,"author":{"gitId":"L-Irvin"},"content":"                case LIST:"},{"lineNumber":126,"author":{"gitId":"L-Irvin"},"content":"                    command \u003d new ListCommand();"},{"lineNumber":127,"author":{"gitId":"L-Irvin"},"content":"                    break;"},{"lineNumber":128,"author":{"gitId":"L-Irvin"},"content":"                case MARK:"},{"lineNumber":129,"author":{"gitId":"L-Irvin"},"content":"                case DONE:"},{"lineNumber":130,"author":{"gitId":"L-Irvin"},"content":"                case REMOVE:"},{"lineNumber":131,"author":{"gitId":"L-Irvin"},"content":"                case DELETE:"},{"lineNumber":132,"author":{"gitId":"L-Irvin"},"content":"                    command \u003d handleDoneOrDelete(commandType, separatedWords);"},{"lineNumber":133,"author":{"gitId":"L-Irvin"},"content":"                    break;"},{"lineNumber":134,"author":{"gitId":"L-Irvin"},"content":"                case TODO:"},{"lineNumber":135,"author":{"gitId":"L-Irvin"},"content":"                    command \u003d handleAddTask(commandType, input, \"\");"},{"lineNumber":136,"author":{"gitId":"L-Irvin"},"content":"                    break;"},{"lineNumber":137,"author":{"gitId":"L-Irvin"},"content":"                case DEADLINE:"},{"lineNumber":138,"author":{"gitId":"L-Irvin"},"content":"                    command \u003d handleAddTask(commandType, input, \"/by\");"},{"lineNumber":139,"author":{"gitId":"L-Irvin"},"content":"                    break;"},{"lineNumber":140,"author":{"gitId":"L-Irvin"},"content":"                case EVENT:"},{"lineNumber":141,"author":{"gitId":"L-Irvin"},"content":"                    command \u003d handleAddTask(commandType, input, \"/at\");"},{"lineNumber":142,"author":{"gitId":"L-Irvin"},"content":"                    break;"},{"lineNumber":143,"author":{"gitId":"L-Irvin"},"content":"                case FIND:"},{"lineNumber":144,"author":{"gitId":"L-Irvin"},"content":"                    command \u003d handleFind(separatedWords);"},{"lineNumber":145,"author":{"gitId":"L-Irvin"},"content":"                    break;"},{"lineNumber":146,"author":{"gitId":"L-Irvin"},"content":"                default:"},{"lineNumber":147,"author":{"gitId":"L-Irvin"},"content":"                    throw new DukeException(\" Command type not found\");"},{"lineNumber":148,"author":{"gitId":"L-Irvin"},"content":"            }"},{"lineNumber":149,"author":{"gitId":"L-Irvin"},"content":"            if (errorMessage !\u003d null) {"},{"lineNumber":150,"author":{"gitId":"L-Irvin"},"content":"                throw new DukeException(errorMessage);"},{"lineNumber":151,"author":{"gitId":"L-Irvin"},"content":"            }"},{"lineNumber":152,"author":{"gitId":"L-Irvin"},"content":"            return command;"},{"lineNumber":153,"author":{"gitId":"L-Irvin"},"content":"        } catch (NumberFormatException error) {"},{"lineNumber":154,"author":{"gitId":"L-Irvin"},"content":"            throw new DukeException(\" Task index must be an integer!\");"},{"lineNumber":155,"author":{"gitId":"L-Irvin"},"content":"        } catch (IllegalArgumentException error) {"},{"lineNumber":156,"author":{"gitId":"L-Irvin"},"content":"            throw new DukeException(\" Command not recognized\");"},{"lineNumber":157,"author":{"gitId":"L-Irvin"},"content":"        } finally {"},{"lineNumber":158,"author":{"gitId":"L-Irvin"},"content":"            errorMessage \u003d null;"},{"lineNumber":159,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":160,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":161}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":"import duke.task.Deadline;"},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"import duke.task.Event;"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":"import duke.task.Todo;"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":"import java.io.*;"},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":" * Implements file storage."},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"public class Storage {"},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"    private final File data;"},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"    private final String FILE \u003d \"./tasks.txt\";"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"     * Initializes a Storage object."},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"     * @throws DukeException If directory not found."},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":"    public Storage() throws DukeException {"},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":"            File data \u003d new File(FILE);"},{"lineNumber":31,"author":{"gitId":"L-Irvin"},"content":"            if (!data.exists()) {"},{"lineNumber":32,"author":{"gitId":"L-Irvin"},"content":"                data.createNewFile();"},{"lineNumber":33,"author":{"gitId":"L-Irvin"},"content":"                assert data.exists() : \" Directory cannot be made\";"},{"lineNumber":34,"author":{"gitId":"L-Irvin"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"L-Irvin"},"content":"            this.data \u003d data;"},{"lineNumber":36,"author":{"gitId":"L-Irvin"},"content":"        } catch (IOException error) {"},{"lineNumber":37,"author":{"gitId":"L-Irvin"},"content":"            throw new DukeException(\" I cannot find the directory\");"},{"lineNumber":38,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":41,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"L-Irvin"},"content":"     * Generates list of tasks from save file."},{"lineNumber":43,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"L-Irvin"},"content":"     * @return List of tasks generated from save file."},{"lineNumber":45,"author":{"gitId":"L-Irvin"},"content":"     * @throws DukeException If there is file reading error."},{"lineNumber":46,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"L-Irvin"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DukeException {"},{"lineNumber":48,"author":{"gitId":"L-Irvin"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"L-Irvin"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":50,"author":{"gitId":"L-Irvin"},"content":"            Scanner sc \u003d new Scanner(data);"},{"lineNumber":51,"author":{"gitId":"L-Irvin"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":52,"author":{"gitId":"L-Irvin"},"content":"                String[] inputs \u003d sc.nextLine().split(\" \\\\| \");"},{"lineNumber":53,"author":{"gitId":"L-Irvin"},"content":"                String type \u003d inputs[0];"},{"lineNumber":54,"author":{"gitId":"L-Irvin"},"content":"                boolean isDone \u003d inputs[1].equals(\"1\");"},{"lineNumber":55,"author":{"gitId":"L-Irvin"},"content":"                String description \u003d inputs[2];"},{"lineNumber":56,"author":{"gitId":"L-Irvin"},"content":"                String time;"},{"lineNumber":57,"author":{"gitId":"L-Irvin"},"content":"                if (type.equals(\"T\")) {"},{"lineNumber":58,"author":{"gitId":"L-Irvin"},"content":"                    tasks.add(new Todo(description, isDone));"},{"lineNumber":59,"author":{"gitId":"L-Irvin"},"content":"                } else if (type.equals((\"D\"))) {"},{"lineNumber":60,"author":{"gitId":"L-Irvin"},"content":"                    time \u003d inputs[3];"},{"lineNumber":61,"author":{"gitId":"L-Irvin"},"content":"                    tasks.add(new Deadline(description, isDone, time));"},{"lineNumber":62,"author":{"gitId":"L-Irvin"},"content":"                } else if (type.equals(\"E\")) {"},{"lineNumber":63,"author":{"gitId":"L-Irvin"},"content":"                    time \u003d inputs[3];"},{"lineNumber":64,"author":{"gitId":"L-Irvin"},"content":"                    tasks.add(new Event(description, isDone, time));"},{"lineNumber":65,"author":{"gitId":"L-Irvin"},"content":"                } else {"},{"lineNumber":66,"author":{"gitId":"L-Irvin"},"content":"                    throw new DukeException(\" I cannot identify the task type :(\");"},{"lineNumber":67,"author":{"gitId":"L-Irvin"},"content":"                }"},{"lineNumber":68,"author":{"gitId":"L-Irvin"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"L-Irvin"},"content":"            return tasks;"},{"lineNumber":70,"author":{"gitId":"L-Irvin"},"content":"        } catch (FileNotFoundException error) {"},{"lineNumber":71,"author":{"gitId":"L-Irvin"},"content":"            throw new DukeException(\" I cannot find the directory.\");"},{"lineNumber":72,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":75,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"L-Irvin"},"content":"     * Saves task to hard disk."},{"lineNumber":77,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"L-Irvin"},"content":"     * @param tasks Tasks user currently have."},{"lineNumber":79,"author":{"gitId":"L-Irvin"},"content":"     * @throws DukeException If there is writing file error."},{"lineNumber":80,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"L-Irvin"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws DukeException {"},{"lineNumber":82,"author":{"gitId":"L-Irvin"},"content":"        try {"},{"lineNumber":83,"author":{"gitId":"L-Irvin"},"content":"            PrintWriter writer \u003d new PrintWriter(new FileWriter(data));"},{"lineNumber":84,"author":{"gitId":"L-Irvin"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":85,"author":{"gitId":"L-Irvin"},"content":"                writer.println(tasks.get(i).saveToHardDisk());"},{"lineNumber":86,"author":{"gitId":"L-Irvin"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"L-Irvin"},"content":"            writer.close();"},{"lineNumber":88,"author":{"gitId":"L-Irvin"},"content":"        } catch (IOException error) {"},{"lineNumber":89,"author":{"gitId":"L-Irvin"},"content":"            throw new DukeException(\" I cannot save your tasks.\");"},{"lineNumber":90,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":92}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":" * Implements the Deadline class."},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"public class Deadline extends duke.task.Task {"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":"    protected String dueDate;"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":"    public Deadline(String description, boolean isDone, String dueDate) {"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":"        super(description, isDone);"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"        this.dueDate \u003d dueDate;"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"        return \"[D][\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (by: \" + dueDate + \")\";"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"     * Describes event to be saved in hard disk."},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"     * @return String that will be stored on hard disk."},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":"    public String saveToHardDisk() {"},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":"        return \"D\" + super.saveToHardDisk() + \" | \" + dueDate;"},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":30}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":" * Implements the Event class."},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"public class Event extends duke.task.Task {"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":"    protected String date;"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":"    public Event(String description, boolean isDone, String date) {"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":"        super(description, isDone);"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"        this.date \u003d date;"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"        return \"[E][\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (at: \" + date + \")\";"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"     * Describes event to be saved in hard disk."},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"     * @return String that will be stored on hard disk."},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":"    public String saveToHardDisk() {"},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":"        return \"E\" + super.saveToHardDisk() + \" | \" + date;"},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":30}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":" * Implements the Task class."},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":"    protected boolean isDone;"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"    public String getDescription() {"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"        return description;"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"    public String getStatusIcon() {"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"        return (isDone ? \"\\u2718\" : \" \"); //return tick or X symbols, tick is \\u2713"},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"    public boolean getIsDone() {"},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"        return isDone;"},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":"    public void markAsDone() {"},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":"        this.isDone \u003d true;"},{"lineNumber":31,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":33,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"L-Irvin"},"content":"     * Describes event to be saved in hard disk."},{"lineNumber":35,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"L-Irvin"},"content":"     * @return String that will be stored on hard disk."},{"lineNumber":37,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"L-Irvin"},"content":"    public String saveToHardDisk() {"},{"lineNumber":39,"author":{"gitId":"L-Irvin"},"content":"        int isDone \u003d this.isDone ? 1 : 0;"},{"lineNumber":40,"author":{"gitId":"L-Irvin"},"content":"        return \" | \" + isDone + \" | \" + description;"},{"lineNumber":41,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":42}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":" * Implements the list of tasks."},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"    private int taskCount;"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"     * Initializes an empty TaskList object."},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"    public TaskList() {"},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"        this.taskCount \u003d 0;"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"     * Initializes a TaskList object."},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":"     * @param savedTasks Tasks gathered from save file."},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":"    public TaskList(ArrayList\u003cTask\u003e savedTasks) {"},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":"        this.tasks \u003d savedTasks;"},{"lineNumber":31,"author":{"gitId":"L-Irvin"},"content":"        this.taskCount \u003d savedTasks.size();"},{"lineNumber":32,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":34,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"L-Irvin"},"content":"     * Returns user current tasks."},{"lineNumber":36,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"L-Irvin"},"content":"     * @return User current tasks."},{"lineNumber":38,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"L-Irvin"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":40,"author":{"gitId":"L-Irvin"},"content":"        return tasks;"},{"lineNumber":41,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":43,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"L-Irvin"},"content":"     * Adds task to task list."},{"lineNumber":45,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"L-Irvin"},"content":"     * @param task Task to be added."},{"lineNumber":47,"author":{"gitId":"L-Irvin"},"content":"     * @param ui   Ui to get responses."},{"lineNumber":48,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"L-Irvin"},"content":"    public void addTask(Task task, Ui ui) {"},{"lineNumber":50,"author":{"gitId":"L-Irvin"},"content":"        tasks.add(task);"},{"lineNumber":51,"author":{"gitId":"L-Irvin"},"content":"        taskCount +\u003d 1;"},{"lineNumber":52,"author":{"gitId":"L-Irvin"},"content":"        ui.accumulateResponses(\" Your task has been recorded.\","},{"lineNumber":53,"author":{"gitId":"L-Irvin"},"content":"                \"\\n   \" + task,"},{"lineNumber":54,"author":{"gitId":"L-Irvin"},"content":"                \"\\n You have \" + taskCount + \" tasks currently.\");"},{"lineNumber":55,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":57,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"L-Irvin"},"content":"     * Deletes a specific task."},{"lineNumber":59,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"L-Irvin"},"content":"     * @param index Position of the task to be deleted."},{"lineNumber":61,"author":{"gitId":"L-Irvin"},"content":"     * @param ui    Ui to get responses."},{"lineNumber":62,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"L-Irvin"},"content":"    public void deleteTask(int index, Ui ui) {"},{"lineNumber":64,"author":{"gitId":"L-Irvin"},"content":"        if (index \u003c 1 || taskCount \u003c index) {"},{"lineNumber":65,"author":{"gitId":"L-Irvin"},"content":"            ui.accumulateResponses(\" Sorry I cannot find your specified task!\");"},{"lineNumber":66,"author":{"gitId":"L-Irvin"},"content":"        } else {"},{"lineNumber":67,"author":{"gitId":"L-Irvin"},"content":"            assert taskCount \u003e\u003d index : \" Index must not be greater than task count\";"},{"lineNumber":68,"author":{"gitId":"L-Irvin"},"content":"            Task removed \u003d tasks.get(index - 1);"},{"lineNumber":69,"author":{"gitId":"L-Irvin"},"content":"            tasks.remove(index - 1);"},{"lineNumber":70,"author":{"gitId":"L-Irvin"},"content":"            taskCount -\u003d 1;"},{"lineNumber":71,"author":{"gitId":"L-Irvin"},"content":"            ui.accumulateResponses(\" Removing this task,\","},{"lineNumber":72,"author":{"gitId":"L-Irvin"},"content":"                    \"\\n   \" + removed,"},{"lineNumber":73,"author":{"gitId":"L-Irvin"},"content":"                    \"\\n You have \" + taskCount + \" tasks currently.\");"},{"lineNumber":74,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":77,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"L-Irvin"},"content":"     * Lists all tasks in task list."},{"lineNumber":79,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"L-Irvin"},"content":"     * @param ui Ui to get responses."},{"lineNumber":81,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"L-Irvin"},"content":"    public void listTasks(Ui ui) {"},{"lineNumber":83,"author":{"gitId":"L-Irvin"},"content":"        if (taskCount \u003d\u003d 0) {"},{"lineNumber":84,"author":{"gitId":"L-Irvin"},"content":"            ui.accumulateResponses(\" You\u0027ve got no tasks now. Add some to keep you busy!\");"},{"lineNumber":85,"author":{"gitId":"L-Irvin"},"content":"        } else {"},{"lineNumber":86,"author":{"gitId":"L-Irvin"},"content":"            assert taskCount \u003e 0 : \" Task list must not be empty!\";"},{"lineNumber":87,"author":{"gitId":"L-Irvin"},"content":"            ui.accumulateResponses(\" Here are all your tasks: \\n\");"},{"lineNumber":88,"author":{"gitId":"L-Irvin"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {"},{"lineNumber":89,"author":{"gitId":"L-Irvin"},"content":"                ui.accumulateResponses(\"   \" + (i + 1) + \".\" + tasks.get(i) + \"\\n\");"},{"lineNumber":90,"author":{"gitId":"L-Irvin"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":94,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"L-Irvin"},"content":"     * Marks a specific task as done."},{"lineNumber":96,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"L-Irvin"},"content":"     * @param index Position of the task to be completed."},{"lineNumber":98,"author":{"gitId":"L-Irvin"},"content":"     * @param ui    Ui to get responses."},{"lineNumber":99,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"L-Irvin"},"content":"    public void markAsDone(int index, Ui ui) {"},{"lineNumber":101,"author":{"gitId":"L-Irvin"},"content":"        if (index \u003c 1 || taskCount \u003c index) {"},{"lineNumber":102,"author":{"gitId":"L-Irvin"},"content":"            ui.accumulateResponses(\" I cannot find your specified task!\");"},{"lineNumber":103,"author":{"gitId":"L-Irvin"},"content":"        } else {"},{"lineNumber":104,"author":{"gitId":"L-Irvin"},"content":"            assert taskCount \u003e\u003d index : \" Index must not be greater than task count.\";"},{"lineNumber":105,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":106,"author":{"gitId":"L-Irvin"},"content":"            if (tasks.get(index - 1).getIsDone()) {"},{"lineNumber":107,"author":{"gitId":"L-Irvin"},"content":"                ui.accumulateResponses(\" Task is already marked as done!\");"},{"lineNumber":108,"author":{"gitId":"L-Irvin"},"content":"            } else {"},{"lineNumber":109,"author":{"gitId":"L-Irvin"},"content":"                tasks.get(index - 1).markAsDone();"},{"lineNumber":110,"author":{"gitId":"L-Irvin"},"content":"                ui.accumulateResponses(\" Great job, one task down!\","},{"lineNumber":111,"author":{"gitId":"L-Irvin"},"content":"                        \"\\n   \" + tasks.get(index - 1));"},{"lineNumber":112,"author":{"gitId":"L-Irvin"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":116,"author":{"gitId":"L-Irvin"},"content":"    private boolean checkIfKeywordExists(String keyword, Task currentTask, int wordLength) {"},{"lineNumber":117,"author":{"gitId":"L-Irvin"},"content":"        String description \u003d currentTask.getDescription();"},{"lineNumber":118,"author":{"gitId":"L-Irvin"},"content":"        for (int j \u003d 0; j \u003c\u003d description.length() - wordLength; j++) {"},{"lineNumber":119,"author":{"gitId":"L-Irvin"},"content":"            String currentSearch \u003d description.substring(j, j + wordLength);"},{"lineNumber":120,"author":{"gitId":"L-Irvin"},"content":"            if (currentSearch.equals(keyword)) {"},{"lineNumber":121,"author":{"gitId":"L-Irvin"},"content":"                return true;"},{"lineNumber":122,"author":{"gitId":"L-Irvin"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"L-Irvin"},"content":"        return false;"},{"lineNumber":125,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":127,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"L-Irvin"},"content":"     * Finds all tasks that match the keyword."},{"lineNumber":129,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"L-Irvin"},"content":"     * @param keyword Keyword to be searched."},{"lineNumber":131,"author":{"gitId":"L-Irvin"},"content":"     * @return Tasks that match the keyword."},{"lineNumber":132,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"L-Irvin"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {"},{"lineNumber":134,"author":{"gitId":"L-Irvin"},"content":"        int wordLength \u003d keyword.length();"},{"lineNumber":135,"author":{"gitId":"L-Irvin"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":136,"author":{"gitId":"L-Irvin"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {"},{"lineNumber":137,"author":{"gitId":"L-Irvin"},"content":"            Task currentTask \u003d tasks.get(i);"},{"lineNumber":138,"author":{"gitId":"L-Irvin"},"content":"            if (checkIfKeywordExists(keyword, currentTask, wordLength)) {"},{"lineNumber":139,"author":{"gitId":"L-Irvin"},"content":"                matchingTasks.add(currentTask);"},{"lineNumber":140,"author":{"gitId":"L-Irvin"},"content":"            }"},{"lineNumber":141,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"L-Irvin"},"content":"        return matchingTasks;"},{"lineNumber":143,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":144}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":" * Implements the Todo class."},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"public class Todo extends duke.task.Task {"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":"        super(description, isDone);"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":"        return \"[T][\" + super.getStatusIcon() + \"] \" + super.getDescription();"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"     * Describes event to be saved in hard disk."},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"     * @return String that will be stored on hard disk."},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"    public String saveToHardDisk() {"},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"        return \"T\" + super.saveToHardDisk();"},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":27}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":" * Implements the user interface functionalities."},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":" *"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":" * @author Leonardo Irvin Pratama"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":" */"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":"public class Ui {"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"    final String LOGO \u003d \"\\n\" +"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":"            \" .----------------.  .----------------. \\n\" +"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"            \"| .--------------. || .--------------. |\\n\" +"},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"            \"| |    ______    | || |        __    | |\\n\" +"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":"            \"| |  .\u0027 ____ \u0027.  | || |    _  / /    | |\\n\" +"},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"            \"| |  | (____) |  | || |   (_)/ /     | |\\n\" +"},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"            \"| |  \u0027_.____. |  | || |     / / _    | |\\n\" +"},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":"            \"| |  | \\\\____| |  | || |    / / (_)   | |\\n\" +"},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"            \"| |   \\\\______,\u0027  | || |   /_/        | |\\n\" +"},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"            \"| |              | || |              | |\\n\" +"},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"            \"| \u0027--------------\u0027 || \u0027--------------\u0027 |\\n\" +"},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"            \" \u0027----------------\u0027  \u0027----------------\u0027 \";"},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"    final String DECO_LINE \u003d \"____________________________________________________________\";"},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":"    final String HELLO_MESSAGE \u003d \" Hello! I\u0027m 9%.\";"},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":"    final String ASK_MESSAGE \u003d \" What can I do for you? \\n(todo/deadline/event/list/find/done/remove/bye)\";"},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":"    final String BYE_MESSAGE \u003d \" Bye. Hope to see you again soon!\";"},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":"    private ArrayList\u003cString\u003e accumulatedResponses;"},{"lineNumber":31,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":32,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"L-Irvin"},"content":"     * Creates a new Ui object."},{"lineNumber":34,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"L-Irvin"},"content":"    public Ui() {"},{"lineNumber":36,"author":{"gitId":"L-Irvin"},"content":"        this.accumulatedResponses \u003d new ArrayList\u003c\u003e();"},{"lineNumber":37,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":39,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"L-Irvin"},"content":"     * Returns welcome message."},{"lineNumber":41,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"L-Irvin"},"content":"     * @return Welcome message."},{"lineNumber":43,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"L-Irvin"},"content":"    public void getGreetings() {"},{"lineNumber":45,"author":{"gitId":"L-Irvin"},"content":"        showToUser(LOGO + \"\\n\" + DECO_LINE + \"\\n\" + HELLO_MESSAGE + \"\\n\" + ASK_MESSAGE + \"\\n\" + DECO_LINE);"},{"lineNumber":46,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":48,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"L-Irvin"},"content":"     * Returns line separator."},{"lineNumber":50,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"L-Irvin"},"content":"     * @return Line separator."},{"lineNumber":52,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"L-Irvin"},"content":"    public void showLine() {"},{"lineNumber":54,"author":{"gitId":"L-Irvin"},"content":"        showToUser(DECO_LINE);"},{"lineNumber":55,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":57,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"L-Irvin"},"content":"     * Returns goodbye message."},{"lineNumber":59,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"L-Irvin"},"content":"     * @return Goodbye message."},{"lineNumber":61,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"L-Irvin"},"content":"    public void showGoodbyeUser() {"},{"lineNumber":63,"author":{"gitId":"L-Irvin"},"content":"        showToUser(BYE_MESSAGE);"},{"lineNumber":64,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":66,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"L-Irvin"},"content":"     * Returns loading error message."},{"lineNumber":68,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"L-Irvin"},"content":"     * @return Loading error message."},{"lineNumber":70,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"L-Irvin"},"content":"    public void showLoadingError() {"},{"lineNumber":72,"author":{"gitId":"L-Irvin"},"content":"        showToUser(\" Failed to load saved data!\");"},{"lineNumber":73,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":75,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"L-Irvin"},"content":"     * Prints messages line by line."},{"lineNumber":77,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"L-Irvin"},"content":"     * @param messages Messages to be printed."},{"lineNumber":79,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"L-Irvin"},"content":"    public void printNicely(String... messages) {"},{"lineNumber":81,"author":{"gitId":"L-Irvin"},"content":"        Arrays.stream(messages).forEach(message -\u003e System.out.println(message));"},{"lineNumber":82,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":84,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"L-Irvin"},"content":"     * Reads current input from user."},{"lineNumber":86,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"L-Irvin"},"content":"     * @return String indicating current input."},{"lineNumber":88,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"L-Irvin"},"content":"    public String readInput() {"},{"lineNumber":90,"author":{"gitId":"L-Irvin"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":91,"author":{"gitId":"L-Irvin"},"content":"        return sc.nextLine();"},{"lineNumber":92,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":94,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"L-Irvin"},"content":"     * Accumulates response from various functionalities."},{"lineNumber":96,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"L-Irvin"},"content":"     * @param responses Responses to be accumulated."},{"lineNumber":98,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"L-Irvin"},"content":"    public void accumulateResponses(String... responses) {"},{"lineNumber":100,"author":{"gitId":"L-Irvin"},"content":"        Arrays.stream(responses).forEachOrdered(response -\u003e accumulatedResponses.add(response));"},{"lineNumber":101,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":103,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"L-Irvin"},"content":"     * Returns the accumulated responses and reset."},{"lineNumber":105,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"L-Irvin"},"content":"     * @return Accumulated responses."},{"lineNumber":107,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"L-Irvin"},"content":"    public void getResponses() {"},{"lineNumber":109,"author":{"gitId":"L-Irvin"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":110,"author":{"gitId":"L-Irvin"},"content":"        accumulatedResponses.stream().limit(accumulatedResponses.size() - 1)"},{"lineNumber":111,"author":{"gitId":"L-Irvin"},"content":"                .forEachOrdered(response -\u003e sb.append(response));"},{"lineNumber":112,"author":{"gitId":"L-Irvin"},"content":"        sb.append(accumulatedResponses.get(accumulatedResponses.size() - 1));"},{"lineNumber":113,"author":{"gitId":"L-Irvin"},"content":"        accumulatedResponses \u003d new ArrayList\u003c\u003e();"},{"lineNumber":114,"author":{"gitId":"L-Irvin"},"content":"        showToUser(sb.toString());"},{"lineNumber":115,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":117,"author":{"gitId":"L-Irvin"},"content":"    /**"},{"lineNumber":118,"author":{"gitId":"L-Irvin"},"content":"     * Shows message to user."},{"lineNumber":119,"author":{"gitId":"L-Irvin"},"content":"     *"},{"lineNumber":120,"author":{"gitId":"L-Irvin"},"content":"     * @param message Message to show."},{"lineNumber":121,"author":{"gitId":"L-Irvin"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"L-Irvin"},"content":"    public void showToUser(String message) {"},{"lineNumber":123,"author":{"gitId":"L-Irvin"},"content":"        for (String line : message.split(System.lineSeparator())) {"},{"lineNumber":124,"author":{"gitId":"L-Irvin"},"content":"            printNicely(line);"},{"lineNumber":125,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":127}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":"deadline nothing"},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":"event nothing"},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":"list"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":"done -1"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"done 5"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":"done 2"},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":"list"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":"bye"}],"authorContributionMap":{"L-Irvin":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"L-Irvin":1,"-":20}}]
