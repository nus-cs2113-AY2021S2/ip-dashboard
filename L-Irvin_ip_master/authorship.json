[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"L-Irvin":9,"-":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":"        ArrayList\u003cTask\u003e inputs \u003d new ArrayList\u003c\u003e();"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"        String DECO_LINE \u003d \"____________________________________________________________\";"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":"        String HELLO_MESSAGE \u003d \" Hello! I\u0027m Duke\";"},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":"        String ASK_MESSAGE \u003d \" What can I do for you?\";"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":"        String BYE_MESSAGE \u003d \" Bye. Hope to see you again soon!\";"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":"        System.out.println(DECO_LINE);"},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"        System.out.println(HELLO_MESSAGE);"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":"        System.out.println(ASK_MESSAGE);"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"        System.out.println(DECO_LINE);"},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"        System.out.println();"},{"lineNumber":18,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":19,"author":{"gitId":"L-Irvin"},"content":"        Scanner readinput \u003d new Scanner(System.in);"},{"lineNumber":20,"author":{"gitId":"L-Irvin"},"content":"        String input \u003d readinput.nextLine();"},{"lineNumber":21,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":22,"author":{"gitId":"L-Irvin"},"content":"        while (!input.equals(\"bye\")) {"},{"lineNumber":23,"author":{"gitId":"L-Irvin"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":24,"author":{"gitId":"L-Irvin"},"content":"                System.out.println(DECO_LINE);"},{"lineNumber":25,"author":{"gitId":"L-Irvin"},"content":"                for (int i \u003d 0; i \u003c inputs.size(); i++) {"},{"lineNumber":26,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(\" \" + (i + 1) + \". [\" + inputs.get(i).getStatusIcon() + \"] \" + inputs.get(i).description);"},{"lineNumber":27,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":28,"author":{"gitId":"L-Irvin"},"content":"                }"},{"lineNumber":29,"author":{"gitId":"L-Irvin"},"content":"                System.out.println(DECO_LINE);"},{"lineNumber":30,"author":{"gitId":"L-Irvin"},"content":"                System.out.println();"},{"lineNumber":31,"author":{"gitId":"L-Irvin"},"content":"            } else if (input.split(\" \")[0].equals(\"done\")) {"},{"lineNumber":32,"author":{"gitId":"L-Irvin"},"content":"                System.out.println(DECO_LINE);"},{"lineNumber":33,"author":{"gitId":"L-Irvin"},"content":"                try {"},{"lineNumber":34,"author":{"gitId":"L-Irvin"},"content":"                    int ind \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"},{"lineNumber":35,"author":{"gitId":"L-Irvin"},"content":"                    if (ind \u003c inputs.size() \u0026\u0026 ind \u003e\u003d 0) {"},{"lineNumber":36,"author":{"gitId":"L-Irvin"},"content":"                        if (inputs.get(ind).isDone) {"},{"lineNumber":37,"author":{"gitId":"L-Irvin"},"content":"                            System.out.println(\"Task is already marked done!\");"},{"lineNumber":38,"author":{"gitId":"L-Irvin"},"content":"                        } else {"},{"lineNumber":39,"author":{"gitId":"L-Irvin"},"content":"                            inputs.get(ind).markAsDone();"},{"lineNumber":40,"author":{"gitId":"L-Irvin"},"content":"                            System.out.println(\" [\" + inputs.get(ind).getStatusIcon() + \"] \" + inputs.get(ind).description);"},{"lineNumber":41,"author":{"gitId":"L-Irvin"},"content":"                        }"},{"lineNumber":42,"author":{"gitId":"L-Irvin"},"content":"                    } else {"},{"lineNumber":43,"author":{"gitId":"L-Irvin"},"content":"                        System.out.println(\"Index is out of boundary!\");"},{"lineNumber":44,"author":{"gitId":"L-Irvin"},"content":"                    }"},{"lineNumber":45,"author":{"gitId":"L-Irvin"},"content":"                } catch (NumberFormatException nfe) {"},{"lineNumber":46,"author":{"gitId":"L-Irvin"},"content":"                    System.out.println(\"Format is wrong!\");"},{"lineNumber":47,"author":{"gitId":"L-Irvin"},"content":"                }"},{"lineNumber":48,"author":{"gitId":"L-Irvin"},"content":"                System.out.println(DECO_LINE);"},{"lineNumber":49,"author":{"gitId":"L-Irvin"},"content":"            } else {"},{"lineNumber":50,"author":{"gitId":"L-Irvin"},"content":"                System.out.println(DECO_LINE);"},{"lineNumber":51,"author":{"gitId":"L-Irvin"},"content":"                System.out.println(\" added: \" + input);"},{"lineNumber":52,"author":{"gitId":"L-Irvin"},"content":"                System.out.println(DECO_LINE);"},{"lineNumber":53,"author":{"gitId":"L-Irvin"},"content":"                System.out.println();"},{"lineNumber":54,"author":{"gitId":"L-Irvin"},"content":"                inputs.add(new Task(input));"},{"lineNumber":55,"author":{"gitId":"L-Irvin"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"L-Irvin"},"content":"            input \u003d readinput.nextLine();"},{"lineNumber":57,"author":{"gitId":"L-Irvin"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":59,"author":{"gitId":"L-Irvin"},"content":"        System.out.println(DECO_LINE);"},{"lineNumber":60,"author":{"gitId":"L-Irvin"},"content":"        System.out.println(BYE_MESSAGE);"},{"lineNumber":61,"author":{"gitId":"L-Irvin"},"content":"        System.out.println(DECO_LINE);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"L-Irvin":59,"-":4}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L-Irvin"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"L-Irvin"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"L-Irvin"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":5,"author":{"gitId":"L-Irvin"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"L-Irvin"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"L-Irvin"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":10,"author":{"gitId":"L-Irvin"},"content":"    public String getStatusIcon() {"},{"lineNumber":11,"author":{"gitId":"L-Irvin"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":12,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"L-Irvin"},"content":""},{"lineNumber":14,"author":{"gitId":"L-Irvin"},"content":"    public void markAsDone() {"},{"lineNumber":15,"author":{"gitId":"L-Irvin"},"content":"        this.isDone \u003d true;"},{"lineNumber":16,"author":{"gitId":"L-Irvin"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"L-Irvin"},"content":"}"}],"authorContributionMap":{"L-Irvin":17}}]
