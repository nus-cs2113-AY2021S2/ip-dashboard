[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"1. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"wjchoi0712":2,"-":24}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"todo afds [✅]"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"todo fsac [✅]"}],"authorContributionMap":{"wjchoi0712":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.action.InvalidCommandException;"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.data.InvalidFilePathException;"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.data.SaveDataOperationException;"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.data.StorageOperationException;"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"import duke.parser.Parser;"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"import duke.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"import duke.task.TaskList;"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"import duke.ui.TextUi;"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"    private static TextUi ui;"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"    private static Storage storage;"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    private static TaskList tasks;"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"    public static void main(String[] args) {"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"        new Duke().run();"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"    private void run() {"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"            this.ui \u003d new TextUi();"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"            this.storage \u003d initializeStorage(\"data/tasks.txt\");"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"            this.tasks \u003d storage.loadData();"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"            ui.showGreetingMessage();"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"            runCommandLoopUntilExitCommand();"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"        } catch(StorageOperationException soe) {"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"            ui.showToUser(soe.getMessage());"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"    private Storage initializeStorage(String filePath) throws InvalidFilePathException {"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"        Storage storage \u003d new Storage(filePath);"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"        storage.createDirectory();"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"        storage.createFile();"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"        return storage;"},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":"    public static void runCommandLoopUntilExitCommand() throws SaveDataOperationException {"},{"lineNumber":42,"author":{"gitId":"wjchoi0712"},"content":"        boolean isExit \u003d false;"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"        while (!isExit) {"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"            try {"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"                String userInput \u003d ui.getUserCommand();"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"                Command command \u003d Parser.prepareForCommandExecution(userInput);"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":"                command.execute(tasks, ui, storage);"},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"                isExit \u003d command.isExit();"},{"lineNumber":49,"author":{"gitId":"wjchoi0712"},"content":"            } catch (InvalidCommandException ice) {"},{"lineNumber":50,"author":{"gitId":"wjchoi0712"},"content":"                ui.showToUser(ice.getMessage());"},{"lineNumber":51,"author":{"gitId":"wjchoi0712"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"wjchoi0712":51,"-":3}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.action.InvalidCommandException;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.description.DescriptionException;"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.data.SaveDataOperationException;"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"import duke.ui.TextUi;"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"public class AddCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"    public AddCommand(String userInput) throws InvalidCommandException {"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"        super(userInput);"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) throws SaveDataOperationException {"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"            tasks.addTask(commandType, userInput);"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"            ui.showAddResponse(tasks);"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"            storage.saveData(tasks);"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"        } catch (DescriptionException de) {"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"            ui.showToUser(de.getMessage());"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":25}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.action.InvalidCommandException;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import duke.ui.TextUi;"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"public class ByeCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"    public ByeCommand(String userInput) throws InvalidCommandException {"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"        super(userInput);"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage){"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"        ui.showEndingMessage();"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":17}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.action.InvalidCommandException;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.data.SaveDataOperationException;"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import duke.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"import duke.ui.TextUi;"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"public class Command {"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"    protected CommandType commandType;"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"    protected String userInput;"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"    public Command(String userInput) throws InvalidCommandException {"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"        this.userInput \u003d userInput;"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"        this.commandType \u003d Parser.scanCommandType(userInput);"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"    public CommandType getCommandType() {"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"        return commandType;"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"    public void setCommandType(CommandType commandType) {"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"        this.commandType \u003d commandType;"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"    public boolean isExit() {"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"        return commandType \u003d\u003d CommandType.BYE;"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) throws SaveDataOperationException {"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":34}},{"path":"src/main/java/duke/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public enum CommandType {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    TODO, DEADLINE, EVENT,"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    BYE, LIST, DONE, DELETE, FIND"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":6}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.action.InvalidCommandException;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.action.InvalidTaskNoException;"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.data.SaveDataOperationException;"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import duke.parser.Parser;"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"import duke.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"import duke.ui.TextUi;"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"    public DeleteCommand(String userInput) throws InvalidCommandException {"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"        super(userInput);"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) throws SaveDataOperationException {"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"            int deletedTaskNo \u003d new Parser().prepareForDelete(tasks, userInput);"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"            ui.showDeleteResponse(tasks, deletedTaskNo);"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"            tasks.deleteTask(deletedTaskNo);"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"            storage.saveData(tasks);"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"        } catch (InvalidTaskNoException e) {"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"            ui.showToUser(e.getMessage());"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":26}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.action.DoneTaskException;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.action.InvalidCommandException;"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.action.InvalidTaskNoException;"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.data.SaveDataOperationException;"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import duke.parser.Parser;"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"import duke.storage.Storage;"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"import duke.task.TaskList;"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"import duke.ui.TextUi;"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"public class DoneCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"    public DoneCommand(String userInput) throws InvalidCommandException {"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"        super(userInput);"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) throws SaveDataOperationException {"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"            int completedTaskNo \u003d new Parser().prepareForDone(tasks, userInput);"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"            tasks.completeTask(completedTaskNo);"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"            ui.showDoneResponse(tasks, completedTaskNo);"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"            storage.saveData(tasks);"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"        } catch (InvalidTaskNoException | DoneTaskException e) {"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"            ui.showToUser(e.getMessage());"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":27}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.action.InvalidCommandException;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.action.NoMatchingTaskException;"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import duke.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"import duke.ui.TextUi;"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"public class FindCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"    public FindCommand(String userInput) throws InvalidCommandException {"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"        super(userInput);"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"            TaskList matchingTasks \u003d new Parser().prepareForFind(tasks, userInput);"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"            ui.showFindResponse(matchingTasks);"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"        } catch (NoMatchingTaskException e) {"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"            ui.showToUser(e.getMessage());"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":24}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.action.EmptyListException;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.action.InvalidCommandException;"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import duke.ui.TextUi;"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"public class ListCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"    public ListCommand(String userInput) throws InvalidCommandException {"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"        super(userInput);"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"            ui.showListResponse(tasks);"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"        } catch (EmptyListException ele) {"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"            ui.showToUser(ele.getMessage());"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":23}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public abstract class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":4}},{"path":"src/main/java/duke/exception/action/DoneTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception.action;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"public class DoneTaskException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"        return \" This task has already been marked as done!\";"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":9}},{"path":"src/main/java/duke/exception/action/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception.action;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"public class EmptyListException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"        return \" Hurray! You currently have no tasks :)\";"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":10}},{"path":"src/main/java/duke/exception/action/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception.action;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"public class InvalidCommandException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"        return \" OOPS! I\u0027m sorry but I don\u0027t understand your command :(\";"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":10}},{"path":"src/main/java/duke/exception/action/InvalidTaskNoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception.action;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"public class InvalidTaskNoException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"        return \" OOPS! You must enter an \\\"integer number\\\" that is \\\"within the bound\\\" :(\";"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":9}},{"path":"src/main/java/duke/exception/action/NoMatchingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception.action;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"public class NoMatchingTaskException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"        return \" OOPS! There are no tasks which matches your keyword :(\";"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":9}},{"path":"src/main/java/duke/exception/data/InvalidFilePathException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception.data;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class InvalidFilePathException extends  StorageOperationException {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"        return \" OOPS! Error occurred while creating directory and file :(\";"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":7}},{"path":"src/main/java/duke/exception/data/LoadDataOperationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception.data;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class LoadDataOperationException extends StorageOperationException {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"        return \" OOPS! Error occurred while trying to load previous task list :(\";"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":7}},{"path":"src/main/java/duke/exception/data/SaveDataOperationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception.data;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class SaveDataOperationException extends StorageOperationException {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"        return \" OOPS! Error occurred while trying to save task list :(\";"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":7}},{"path":"src/main/java/duke/exception/data/StorageOperationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception.data;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"public class StorageOperationException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":6}},{"path":"src/main/java/duke/exception/description/DescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception.description;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"public class DescriptionException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":6}},{"path":"src/main/java/duke/exception/description/InvalidDeadlineDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception.description;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class InvalidDeadlineDescriptionException extends DescriptionException {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"        return \" OOPS! Description of Deadline task should be in \\\"deadline [description] /by [due date]\\\" format\";"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":7}},{"path":"src/main/java/duke/exception/description/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception.description;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class InvalidDescriptionException extends DescriptionException {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        return \" OOPS! DEADLINE and EVENT tasks requires both task description and task time\";"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":8}},{"path":"src/main/java/duke/exception/description/InvalidEventDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception.description;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class InvalidEventDescriptionException extends DescriptionException {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"        return \" OOPS! Description of Event task should be in \\\"event [description] /at [event date]\\\" format\";"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":7}},{"path":"src/main/java/duke/exception/description/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception.description;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class NoDescriptionException extends DescriptionException {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        return \" OOPS! Description of a task cannot be empty!\";"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":8}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.command.*;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.action.DoneTaskException;"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.action.InvalidCommandException;"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.action.InvalidTaskNoException;"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.description.InvalidDeadlineDescriptionException;"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.description.InvalidDescriptionException;"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.description.InvalidEventDescriptionException;"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.description.NoDescriptionException;"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"import duke.task.Task;"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"import duke.task.TaskList;"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"import java.time.LocalDate;"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"public class Parser {"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"    private static final String CONDITIONFORDEADLINE \u003d \"/by\";"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"    private static final String CONDITIONFOREVENT \u003d \"/at\";"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"    public static Command prepareForCommandExecution(String userInput) throws InvalidCommandException {"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"        Command command \u003d new Command(userInput);"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"        command.setCommandType(scanCommandType(userInput));"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"        switch (command.getCommandType()) {"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"        case BYE:"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new ByeCommand(userInput);"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"            break;"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"        case LIST:"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new ListCommand(userInput);"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"            break;"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"        case DONE:"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new DoneCommand(userInput);"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"            break;"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"        case DELETE:"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new DeleteCommand(userInput);"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"            break;"},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":"        case FIND:"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new FindCommand(userInput);"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":"            break;"},{"lineNumber":42,"author":{"gitId":"wjchoi0712"},"content":"        case TODO:"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"        case EVENT:"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"        case DEADLINE:"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new AddCommand(userInput);"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"            break;"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":"        default:"},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"            throw new InvalidCommandException();"},{"lineNumber":49,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"wjchoi0712"},"content":"        return command;"},{"lineNumber":51,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":53,"author":{"gitId":"wjchoi0712"},"content":"    public static CommandType scanCommandType(String userInput) throws InvalidCommandException {"},{"lineNumber":54,"author":{"gitId":"wjchoi0712"},"content":"        CommandType commandType;"},{"lineNumber":55,"author":{"gitId":"wjchoi0712"},"content":"        if (userInput.equals(\"bye\")) {"},{"lineNumber":56,"author":{"gitId":"wjchoi0712"},"content":"            commandType \u003d CommandType.BYE;"},{"lineNumber":57,"author":{"gitId":"wjchoi0712"},"content":"        } else if (userInput.equals(\"list\")) {"},{"lineNumber":58,"author":{"gitId":"wjchoi0712"},"content":"            commandType \u003d CommandType.LIST;"},{"lineNumber":59,"author":{"gitId":"wjchoi0712"},"content":"        } else if (userInput.startsWith(\"done\")) {"},{"lineNumber":60,"author":{"gitId":"wjchoi0712"},"content":"            commandType \u003d CommandType.DONE;"},{"lineNumber":61,"author":{"gitId":"wjchoi0712"},"content":"        } else if (userInput.startsWith(\"delete\")) {"},{"lineNumber":62,"author":{"gitId":"wjchoi0712"},"content":"            commandType \u003d CommandType.DELETE;"},{"lineNumber":63,"author":{"gitId":"wjchoi0712"},"content":"        } else if (userInput.startsWith(\"find\")) {"},{"lineNumber":64,"author":{"gitId":"wjchoi0712"},"content":"            commandType \u003d CommandType.FIND;"},{"lineNumber":65,"author":{"gitId":"wjchoi0712"},"content":"        } else if (userInput.startsWith(\"todo\")) {"},{"lineNumber":66,"author":{"gitId":"wjchoi0712"},"content":"            commandType \u003d CommandType.TODO;"},{"lineNumber":67,"author":{"gitId":"wjchoi0712"},"content":"        } else if (userInput.startsWith(\"deadline\")) {"},{"lineNumber":68,"author":{"gitId":"wjchoi0712"},"content":"            commandType \u003d CommandType.DEADLINE;"},{"lineNumber":69,"author":{"gitId":"wjchoi0712"},"content":"        } else if (userInput.startsWith(\"event\")) {"},{"lineNumber":70,"author":{"gitId":"wjchoi0712"},"content":"            commandType \u003d CommandType.EVENT;"},{"lineNumber":71,"author":{"gitId":"wjchoi0712"},"content":"        } else {"},{"lineNumber":72,"author":{"gitId":"wjchoi0712"},"content":"            throw new InvalidCommandException();"},{"lineNumber":73,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"wjchoi0712"},"content":"        return commandType;"},{"lineNumber":75,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":77,"author":{"gitId":"wjchoi0712"},"content":"    public boolean isWithinBound(TaskList tasks, int taskNo) {"},{"lineNumber":78,"author":{"gitId":"wjchoi0712"},"content":"        return (taskNo \u003c\u003d tasks.getTotalNoOfTasks() \u0026\u0026 taskNo \u003e 0);"},{"lineNumber":79,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":81,"author":{"gitId":"wjchoi0712"},"content":"    public int prepareForDone(TaskList tasks, String userInput) throws InvalidTaskNoException, DoneTaskException {"},{"lineNumber":82,"author":{"gitId":"wjchoi0712"},"content":"        try {"},{"lineNumber":83,"author":{"gitId":"wjchoi0712"},"content":"            int taskNo \u003d Integer.parseInt(userInput.replace(\"done \", \"\"));"},{"lineNumber":84,"author":{"gitId":"wjchoi0712"},"content":"            if (isWithinBound(tasks, taskNo)) {"},{"lineNumber":85,"author":{"gitId":"wjchoi0712"},"content":"                if (tasks.getTask(taskNo - 1).isDone()) {"},{"lineNumber":86,"author":{"gitId":"wjchoi0712"},"content":"                    throw new DoneTaskException();"},{"lineNumber":87,"author":{"gitId":"wjchoi0712"},"content":"                } else {"},{"lineNumber":88,"author":{"gitId":"wjchoi0712"},"content":"                    return taskNo;"},{"lineNumber":89,"author":{"gitId":"wjchoi0712"},"content":"                }"},{"lineNumber":90,"author":{"gitId":"wjchoi0712"},"content":"            } else {"},{"lineNumber":91,"author":{"gitId":"wjchoi0712"},"content":"                throw new InvalidTaskNoException();"},{"lineNumber":92,"author":{"gitId":"wjchoi0712"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"wjchoi0712"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":94,"author":{"gitId":"wjchoi0712"},"content":"            throw new InvalidTaskNoException();"},{"lineNumber":95,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":98,"author":{"gitId":"wjchoi0712"},"content":"    public int prepareForDelete(TaskList tasks, String userInput) throws InvalidTaskNoException {"},{"lineNumber":99,"author":{"gitId":"wjchoi0712"},"content":"        try {"},{"lineNumber":100,"author":{"gitId":"wjchoi0712"},"content":"            int taskNo \u003d Integer.parseInt(userInput.replace(\"delete \", \"\"));"},{"lineNumber":101,"author":{"gitId":"wjchoi0712"},"content":"            if (isWithinBound(tasks, taskNo)) {"},{"lineNumber":102,"author":{"gitId":"wjchoi0712"},"content":"                return taskNo;"},{"lineNumber":103,"author":{"gitId":"wjchoi0712"},"content":"            } else {"},{"lineNumber":104,"author":{"gitId":"wjchoi0712"},"content":"                throw new InvalidTaskNoException();"},{"lineNumber":105,"author":{"gitId":"wjchoi0712"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"wjchoi0712"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":107,"author":{"gitId":"wjchoi0712"},"content":"            throw new InvalidTaskNoException();"},{"lineNumber":108,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":111,"author":{"gitId":"wjchoi0712"},"content":"    public String prepareForAddTodo(String userInput) throws NoDescriptionException {"},{"lineNumber":112,"author":{"gitId":"wjchoi0712"},"content":"        try {"},{"lineNumber":113,"author":{"gitId":"wjchoi0712"},"content":"            String taskDescription \u003d userInput.substring(userInput.indexOf(\" \"));"},{"lineNumber":114,"author":{"gitId":"wjchoi0712"},"content":"            if (taskDescription.isBlank()) {"},{"lineNumber":115,"author":{"gitId":"wjchoi0712"},"content":"                throw new NoDescriptionException();"},{"lineNumber":116,"author":{"gitId":"wjchoi0712"},"content":"            } else {"},{"lineNumber":117,"author":{"gitId":"wjchoi0712"},"content":"                return taskDescription.strip();"},{"lineNumber":118,"author":{"gitId":"wjchoi0712"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"wjchoi0712"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":120,"author":{"gitId":"wjchoi0712"},"content":"            throw new NoDescriptionException();"},{"lineNumber":121,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":124,"author":{"gitId":"wjchoi0712"},"content":"    public String[] prepareForAddDeadline(String userInput) throws InvalidDescriptionException, NoDescriptionException, InvalidDeadlineDescriptionException {"},{"lineNumber":125,"author":{"gitId":"wjchoi0712"},"content":"        String taskDescription \u003d prepareForAddTodo(userInput);"},{"lineNumber":126,"author":{"gitId":"wjchoi0712"},"content":"        if (userInput.contains(CONDITIONFORDEADLINE)) {"},{"lineNumber":127,"author":{"gitId":"wjchoi0712"},"content":"            return separateDescriptionAndTime(taskDescription);"},{"lineNumber":128,"author":{"gitId":"wjchoi0712"},"content":"        } else {"},{"lineNumber":129,"author":{"gitId":"wjchoi0712"},"content":"            throw new InvalidDeadlineDescriptionException();"},{"lineNumber":130,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":133,"author":{"gitId":"wjchoi0712"},"content":"    public String[] prepareForAddEvent(String userInput) throws InvalidDescriptionException, NoDescriptionException, InvalidEventDescriptionException {"},{"lineNumber":134,"author":{"gitId":"wjchoi0712"},"content":"        String taskDescription \u003d prepareForAddTodo(userInput);"},{"lineNumber":135,"author":{"gitId":"wjchoi0712"},"content":"        if (userInput.contains(CONDITIONFOREVENT)) {"},{"lineNumber":136,"author":{"gitId":"wjchoi0712"},"content":"            return separateDescriptionAndTime(taskDescription);"},{"lineNumber":137,"author":{"gitId":"wjchoi0712"},"content":"        } else {"},{"lineNumber":138,"author":{"gitId":"wjchoi0712"},"content":"            throw new InvalidEventDescriptionException();"},{"lineNumber":139,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":142,"author":{"gitId":"wjchoi0712"},"content":"    public String[] separateDescriptionAndTime(String description) throws InvalidDescriptionException {"},{"lineNumber":143,"author":{"gitId":"wjchoi0712"},"content":"        String[] inputs \u003d new String[2];"},{"lineNumber":144,"author":{"gitId":"wjchoi0712"},"content":"        boolean isDescriptionEmpty \u003d (description.indexOf(\"/\") \u003d\u003d 0);"},{"lineNumber":145,"author":{"gitId":"wjchoi0712"},"content":"        boolean isTimeEmpty \u003d (description.indexOf(\"/\") + 4 \u003d\u003d description.length() + 1);"},{"lineNumber":146,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":147,"author":{"gitId":"wjchoi0712"},"content":"        if (!isDescriptionEmpty \u0026\u0026 !isTimeEmpty) {"},{"lineNumber":148,"author":{"gitId":"wjchoi0712"},"content":"            inputs[0] \u003d description.substring(0, description.indexOf(\"/\") - 1);"},{"lineNumber":149,"author":{"gitId":"wjchoi0712"},"content":"            String time \u003d description.substring(description.indexOf(\"/\") + 4);"},{"lineNumber":150,"author":{"gitId":"wjchoi0712"},"content":"            try {"},{"lineNumber":151,"author":{"gitId":"wjchoi0712"},"content":"                LocalDate dueDate \u003d LocalDate.parse(time);"},{"lineNumber":152,"author":{"gitId":"wjchoi0712"},"content":"                inputs[1] \u003d dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":153,"author":{"gitId":"wjchoi0712"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":154,"author":{"gitId":"wjchoi0712"},"content":"                inputs[1] \u003d time;"},{"lineNumber":155,"author":{"gitId":"wjchoi0712"},"content":"            }"},{"lineNumber":156,"author":{"gitId":"wjchoi0712"},"content":"        } else {"},{"lineNumber":157,"author":{"gitId":"wjchoi0712"},"content":"            throw new InvalidDescriptionException();"},{"lineNumber":158,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":159,"author":{"gitId":"wjchoi0712"},"content":"        return inputs;"},{"lineNumber":160,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":162,"author":{"gitId":"wjchoi0712"},"content":"    public TaskList prepareForFind(TaskList tasks, String userInput) {"},{"lineNumber":163,"author":{"gitId":"wjchoi0712"},"content":"        TaskList matchingTasks \u003d new TaskList();"},{"lineNumber":164,"author":{"gitId":"wjchoi0712"},"content":"        String keyword \u003d userInput.replace(\"find \", \"\");"},{"lineNumber":165,"author":{"gitId":"wjchoi0712"},"content":"        for (int i \u003d 0; i \u003c tasks.getTotalNoOfTasks(); i++) {"},{"lineNumber":166,"author":{"gitId":"wjchoi0712"},"content":"            Task currentTask \u003d tasks.getTask(i);"},{"lineNumber":167,"author":{"gitId":"wjchoi0712"},"content":"            if (currentTask.getDescription().contains(keyword)) {"},{"lineNumber":168,"author":{"gitId":"wjchoi0712"},"content":"                matchingTasks.addTask(currentTask);"},{"lineNumber":169,"author":{"gitId":"wjchoi0712"},"content":"            }"},{"lineNumber":170,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"wjchoi0712"},"content":"        return matchingTasks;"},{"lineNumber":172,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":173}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.data.InvalidFilePathException;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.data.LoadDataOperationException;"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.data.SaveDataOperationException;"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"import java.nio.file.Files;"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"import java.nio.file.Path;"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"import java.nio.file.Paths;"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"    protected final Path path;"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    public Storage(String filePath) {"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"        path \u003d Paths.get(filePath);"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"    public void createDirectory() throws InvalidFilePathException {"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"        if (!Files.exists(path.getParent())) {"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"            try {"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"                Files.createDirectory(path.getParent());"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"            } catch (IOException ioe) {"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"                throw new InvalidFilePathException();"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"    public void createFile() throws InvalidFilePathException {"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"        if (!Files.exists(path)) {"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"            try {"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"                Files.createFile(path);"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"            } catch (IOException ioe) {"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"                throw new InvalidFilePathException();"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"    public void saveData(TaskList tasks) throws SaveDataOperationException {"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":"        new TaskFileEncoder().encodeTaskData(tasks, path);"},{"lineNumber":42,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"    public TaskList loadData() throws LoadDataOperationException {"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"        return new TaskFileDecoder().decodeTaskData(path);"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":47}},{"path":"src/main/java/duke/storage/TaskFileDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.command.CommandType;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.action.InvalidCommandException;"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.data.LoadDataOperationException;"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.description.DescriptionException;"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import duke.parser.Parser;"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"import duke.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"import java.nio.file.Path;"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"public class TaskFileDecoder {"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"    public TaskList decodeTaskData(Path path) throws LoadDataOperationException {"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"            Scanner s \u003d new Scanner(path);"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"            while (s.hasNext()) {"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"                String data \u003d s.nextLine();"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"                CommandType commandType \u003d Parser.scanCommandType(data);"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"                String[] inputs \u003d separateTaskDescriptionAndStatus(data);"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"                tasks.addTask(commandType, inputs[0]);"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"                if (inputs[1].equals(\"\\u2705\")) {"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"                    tasks.getLastTaskInTheList().markAsDone();"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"                }"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"        } catch (IOException | InvalidCommandException | DescriptionException e) {"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"            throw new LoadDataOperationException();"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"        return tasks;"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"    public String[] separateTaskDescriptionAndStatus(String data) {"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"        String[] inputs \u003d new String[2];"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"        inputs[0] \u003d data.substring(0, data.indexOf(\u0027[\u0027) - 1);"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"        inputs[1] \u003d data.substring(data.indexOf(\u0027[\u0027) + 1, data.indexOf(\u0027]\u0027));"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"        return inputs;"},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":40}},{"path":"src/main/java/duke/storage/TaskFileEncoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.data.SaveDataOperationException;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"import java.nio.file.Path;"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"public class TaskFileEncoder {"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"    private static final String SPACING \u003d \" \";"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"    private static final String LS \u003d System.lineSeparator();"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    public void encodeTaskData(TaskList tasks, Path filePath) throws SaveDataOperationException {"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"            FileWriter fw \u003d new FileWriter(filePath.toString());"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"            for (int i \u003d 0; i \u003c tasks.getTotalNoOfTasks(); i++) {"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"                Task currentTask \u003d tasks.getTask(i);"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"                String taskType \u003d currentTask.getType();"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"                String taskStatus \u003d currentTask.getStatusIcon();"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"                String taskDescription \u003d currentTask.getDescription();"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"                fw.write(taskType + SPACING + taskDescription + SPACING + taskStatus + LS);"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"            fw.close();"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"        } catch (IOException ioe) {"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"            throw new SaveDataOperationException();"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":31}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    private String dueDate;"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    public Deadline(String description, String dueDate) {"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"        this.dueDate \u003d dueDate;"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"    public String getType() {"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"        return \"deadline\";"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"    public String getDescription() {"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"        return super.getDescription() + \" /by \" + dueDate;"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dueDate + \")\";"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    protected String eventDate;"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    public Event(String description, String eventTime) {"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"        this.eventDate \u003d eventTime;"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"    public String getType() {"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"        return \"event\";"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"    public String getDescription() {"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"        return super.getDescription() + \" /at \" + eventDate;"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + eventDate + \")\";"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"    public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"        isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"    public boolean isDone() {"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"        return isDone;"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"    public String getType() {"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"        return \"task\";"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"    public String getDescription() {"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"        return description;"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"    public void markAsDone() {"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"        isDone \u003d true;"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"    public String getStatusIcon() {"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"        return (isDone ? \"[\\u2705]\" : \"[  ]\");"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"        return getStatusIcon() + \" \" + description;"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":38}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.command.CommandType;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.description.InvalidDeadlineDescriptionException;"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.description.InvalidDescriptionException;"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.description.InvalidEventDescriptionException;"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.description.NoDescriptionException;"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"import duke.parser.Parser;"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"public class TaskList {"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    protected ArrayList\u003cTask\u003e tasks;"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"    public TaskList() {"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"        this(new ArrayList\u003cTask\u003e());"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"    public Task getTask(int index) {"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"        return tasks.get(index);"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"    public boolean isEmpty() {"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"        return tasks.size() \u003d\u003d 0;"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"    public Task getLastTaskInTheList() {"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"        return tasks.get(tasks.size() - 1);"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"    public int getTotalNoOfTasks() {"},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":"        return tasks.size();"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":42,"author":{"gitId":"wjchoi0712"},"content":"    public void addTask(CommandType commandType, String userInput) throws NoDescriptionException, InvalidDescriptionException, InvalidDeadlineDescriptionException, InvalidEventDescriptionException {"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"        String[] taskComponents;"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"        switch (commandType) {"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"        case TODO:"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"            String taskDescription \u003d new Parser().prepareForAddTodo(userInput);"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":"            tasks.add(new ToDo(taskDescription));"},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"            break;"},{"lineNumber":49,"author":{"gitId":"wjchoi0712"},"content":"        case DEADLINE:"},{"lineNumber":50,"author":{"gitId":"wjchoi0712"},"content":"            taskComponents \u003d new Parser().prepareForAddDeadline(userInput);"},{"lineNumber":51,"author":{"gitId":"wjchoi0712"},"content":"            tasks.add(new Deadline(taskComponents[0], taskComponents[1]));"},{"lineNumber":52,"author":{"gitId":"wjchoi0712"},"content":"            break;"},{"lineNumber":53,"author":{"gitId":"wjchoi0712"},"content":"        case EVENT:"},{"lineNumber":54,"author":{"gitId":"wjchoi0712"},"content":"            taskComponents \u003d new Parser().prepareForAddEvent(userInput);"},{"lineNumber":55,"author":{"gitId":"wjchoi0712"},"content":"            tasks.add(new Event(taskComponents[0], taskComponents[2]));"},{"lineNumber":56,"author":{"gitId":"wjchoi0712"},"content":"            break;"},{"lineNumber":57,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":60,"author":{"gitId":"wjchoi0712"},"content":"    public void addTask(Task newTask) {"},{"lineNumber":61,"author":{"gitId":"wjchoi0712"},"content":"        tasks.add(newTask);"},{"lineNumber":62,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":64,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":65,"author":{"gitId":"wjchoi0712"},"content":"    public void completeTask(int completedTaskNo) {"},{"lineNumber":66,"author":{"gitId":"wjchoi0712"},"content":"        tasks.get(completedTaskNo - 1).markAsDone();"},{"lineNumber":67,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":69,"author":{"gitId":"wjchoi0712"},"content":"    public void deleteTask(int deletedTaskNo) {"},{"lineNumber":70,"author":{"gitId":"wjchoi0712"},"content":"        tasks.remove(tasks.get(deletedTaskNo - 1));"},{"lineNumber":71,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":73,"author":{"gitId":"wjchoi0712"},"content":"    public String getTaskListAsString() {"},{"lineNumber":74,"author":{"gitId":"wjchoi0712"},"content":"        StringBuilder fullTaskList \u003d new StringBuilder();"},{"lineNumber":75,"author":{"gitId":"wjchoi0712"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":76,"author":{"gitId":"wjchoi0712"},"content":"            fullTaskList.append(\" \" + (i + 1) + \". \" + tasks.get(i).toString());"},{"lineNumber":77,"author":{"gitId":"wjchoi0712"},"content":"            fullTaskList.append(System.lineSeparator());"},{"lineNumber":78,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"wjchoi0712"},"content":"        return fullTaskList.deleteCharAt(fullTaskList.lastIndexOf(System.lineSeparator())).toString();"},{"lineNumber":80,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":81,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":82}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    public ToDo(String description) {"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"    public String getType() {"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"        return \"todo\";"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"    public String getDescription() {"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"        return super.getDescription();"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":22}},{"path":"src/main/java/duke/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.action.EmptyListException;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.action.NoMatchingTaskException;"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import java.io.InputStream;"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"import java.io.PrintStream;"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"public class TextUi {"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\";"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"    private static final String LINE_PREFIX \u003d \"   \";"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"    private static final String LOGO \u003d \" ____        _\\n\""},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"            + \"|  _ \\\\ _   _| | _____\\n\""},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"    private static final String MESSAGE_GREETING \u003d \" Hello! I\u0027m Duke\" + \"\\n What can I do for you?\";"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"    private static final String MESSAGE_ENDING \u003d \" Bye. Hope to see you again soon!\";"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"    private static final String MESSAGE_LISTTASK \u003d \" Here are the tasks in your list:\";"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"    private static final String MESSAGE_FINDTASK \u003d \" Here are the matching tasks in your list:\";"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"    private static final String MESSAGE_ADDTASK \u003d \" Got it. I\u0027ve added this task:\";"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"    private static final String MESSAGE_DELETETASK \u003d \" Noted. I\u0027ve removed this task:\";"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"    private static final String MESSAGE_REMAININGTASK \u003d \" Now you have %d tasks in the list.\";"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"    private static final String MESSAGE_DONETASK \u003d \"Nice! I\u0027ve marked this task as done:\";"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"    private final Scanner in;"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"    private final PrintStream out;"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"    public TextUi() {"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"        this(System.in, System.out);"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"    public TextUi(InputStream in, PrintStream out) {"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"        this.in \u003d new Scanner(in);"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"        this.out \u003d out;"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"    public void showToUser(String... message) {"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":"        out.println(DIVIDER);"},{"lineNumber":42,"author":{"gitId":"wjchoi0712"},"content":"        for (String m : message) {"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"            out.println(m);"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"        out.println(DIVIDER);"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"    public void showGreetingMessage() {"},{"lineNumber":49,"author":{"gitId":"wjchoi0712"},"content":"        showToUser(LOGO, MESSAGE_GREETING);"},{"lineNumber":50,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":52,"author":{"gitId":"wjchoi0712"},"content":"    public void showEndingMessage() {"},{"lineNumber":53,"author":{"gitId":"wjchoi0712"},"content":"        showToUser(MESSAGE_ENDING);"},{"lineNumber":54,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":56,"author":{"gitId":"wjchoi0712"},"content":"    public String getUserCommand() {"},{"lineNumber":57,"author":{"gitId":"wjchoi0712"},"content":"        return in.nextLine();"},{"lineNumber":58,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":60,"author":{"gitId":"wjchoi0712"},"content":"    public void showListResponse(TaskList tasks) throws EmptyListException {"},{"lineNumber":61,"author":{"gitId":"wjchoi0712"},"content":"        if (!tasks.isEmpty()) {"},{"lineNumber":62,"author":{"gitId":"wjchoi0712"},"content":"            showToUser(MESSAGE_LISTTASK, tasks.getTaskListAsString());"},{"lineNumber":63,"author":{"gitId":"wjchoi0712"},"content":"        } else {"},{"lineNumber":64,"author":{"gitId":"wjchoi0712"},"content":"            throw new EmptyListException();"},{"lineNumber":65,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":68,"author":{"gitId":"wjchoi0712"},"content":"    public void showFindResponse(TaskList matchingTasks) throws NoMatchingTaskException {"},{"lineNumber":69,"author":{"gitId":"wjchoi0712"},"content":"        if (!matchingTasks.isEmpty()) {"},{"lineNumber":70,"author":{"gitId":"wjchoi0712"},"content":"            showToUser(MESSAGE_FINDTASK, matchingTasks.getTaskListAsString());"},{"lineNumber":71,"author":{"gitId":"wjchoi0712"},"content":"        } else {"},{"lineNumber":72,"author":{"gitId":"wjchoi0712"},"content":"            throw new NoMatchingTaskException();"},{"lineNumber":73,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":76,"author":{"gitId":"wjchoi0712"},"content":"    public void showAddResponse(TaskList tasks) {"},{"lineNumber":77,"author":{"gitId":"wjchoi0712"},"content":"        String addedTask \u003d LINE_PREFIX + tasks.getLastTaskInTheList().toString();"},{"lineNumber":78,"author":{"gitId":"wjchoi0712"},"content":"        showToUser(MESSAGE_ADDTASK, addedTask, String.format(MESSAGE_REMAININGTASK, tasks.getTotalNoOfTasks()));"},{"lineNumber":79,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":81,"author":{"gitId":"wjchoi0712"},"content":"    public void showDoneResponse(TaskList tasks, int taskNo) {"},{"lineNumber":82,"author":{"gitId":"wjchoi0712"},"content":"        String completedTask \u003d LINE_PREFIX + tasks.getTask(taskNo - 1).toString();"},{"lineNumber":83,"author":{"gitId":"wjchoi0712"},"content":"        showToUser(MESSAGE_DONETASK, completedTask);"},{"lineNumber":84,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":86,"author":{"gitId":"wjchoi0712"},"content":"    public void showDeleteResponse(TaskList tasks, int taskNo) {"},{"lineNumber":87,"author":{"gitId":"wjchoi0712"},"content":"        String deletedTask \u003d LINE_PREFIX + tasks.getTask(taskNo - 1).toString();"},{"lineNumber":88,"author":{"gitId":"wjchoi0712"},"content":"        showToUser(MESSAGE_DELETETASK, deletedTask, String.format(MESSAGE_REMAININGTASK, tasks.getTotalNoOfTasks() - 1));"},{"lineNumber":89,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":90}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"todo play"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"todo watch video"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"deadline finish homework /by 11th NOV"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"list"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"event attend lecture /at 2pm Tues"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"list"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"deadline clean up /by not sure"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"done 1"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"done 2"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"list"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"bye"}],"authorContributionMap":{"wjchoi0712":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"wjchoi0712":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"diff ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"wjchoi0712":2,"-":32}}]
