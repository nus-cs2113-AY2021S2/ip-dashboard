[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"1. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"wjchoi0712":2,"-":24}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"[D][ ] smile (by: 3pm)"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"[D][X] hit (by: Tuesday)"}],"authorContributionMap":{"wjchoi0712":2}},{"path":"src/main/java/duke/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public enum CommandType {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    TODO, DEADLINE, EVENT,"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    BYE, LIST, DONE, DELETE"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import duke.exception.*;"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import duke.task.*;"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import java.io.*;"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"     * Message lines that will be shown to the user"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"    private static final String LINE_SEPARATOR \u003d \"____________________________________________________________\";"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"    private static final String LOGO \u003d \" ____        _\\n\""},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"            + \"|  _ \\\\ _   _| | _____\\n\""},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\\n\";"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"    private static final String MESSAGE_GREETING \u003d \" Hello! I\u0027m Duke\" + \"\\n What can I do for you?\";"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"    private static final String MESSAGE_ENDING \u003d \" Bye. Hope to see you again soon!\";"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"    private static final String MESSAGE_LISTTASK \u003d \" Here are the tasks in your list:\";"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"    private static final String MESSAGE_ADDTASK \u003d \" Got it. I\u0027ve added this task:\";"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"    private static final String MESSAGE_DELETETASK \u003d \" Noted. I\u0027ve removed this task:\";"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"    private static final String MESSAGE_REMAININGTASK \u003d \" Now you have %d tasks in the list.\";"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"    private static final String MESSAGE_DONETASK \u003d \"Nice! I\u0027ve marked this task as done:\";"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"    public static void printResponse(String response) {"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"        System.out.println(LINE_SEPARATOR);"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"        System.out.println(response);"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"        System.out.println(LINE_SEPARATOR);"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"    public static void printAddResponse(ArrayList\u003cTask\u003e tasks, int taskNo) {"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"        System.out.println(LINE_SEPARATOR);"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"        System.out.println(MESSAGE_ADDTASK);"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"        System.out.println(\"   \" + tasks.get(taskNo - 1).toString());"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"        System.out.println(String.format(MESSAGE_REMAININGTASK, tasks.size()));"},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":"        System.out.println(LINE_SEPARATOR);"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":42,"author":{"gitId":"wjchoi0712"},"content":"    public static void printDeleteResponse(ArrayList\u003cTask\u003e tasks, int taskNo) {"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"        System.out.println(LINE_SEPARATOR);"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"        System.out.println(MESSAGE_DELETETASK);"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"        System.out.println(\"   \" + tasks.get(taskNo - 1).toString());"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"        System.out.println(String.format(MESSAGE_REMAININGTASK, tasks.size() - 1));"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":"        System.out.println(LINE_SEPARATOR);"},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":50,"author":{"gitId":"wjchoi0712"},"content":"    public static void printDoneResponse(ArrayList\u003cTask\u003e tasks, int taskNo) {"},{"lineNumber":51,"author":{"gitId":"wjchoi0712"},"content":"        System.out.println(LINE_SEPARATOR);"},{"lineNumber":52,"author":{"gitId":"wjchoi0712"},"content":"        System.out.println(MESSAGE_DONETASK);"},{"lineNumber":53,"author":{"gitId":"wjchoi0712"},"content":"        System.out.println(\"   \" + tasks.get(taskNo - 1).toString());"},{"lineNumber":54,"author":{"gitId":"wjchoi0712"},"content":"        System.out.println(LINE_SEPARATOR);"},{"lineNumber":55,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":57,"author":{"gitId":"wjchoi0712"},"content":"    public static void printList(ArrayList\u003cTask\u003e tasks) throws EmptyListException {"},{"lineNumber":58,"author":{"gitId":"wjchoi0712"},"content":"        if (tasks.size() !\u003d 0) {"},{"lineNumber":59,"author":{"gitId":"wjchoi0712"},"content":"            System.out.println(LINE_SEPARATOR);"},{"lineNumber":60,"author":{"gitId":"wjchoi0712"},"content":"            System.out.println(MESSAGE_LISTTASK);"},{"lineNumber":61,"author":{"gitId":"wjchoi0712"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":62,"author":{"gitId":"wjchoi0712"},"content":"                System.out.println(\" \" + (i + 1) + \". \" + tasks.get(i).toString());"},{"lineNumber":63,"author":{"gitId":"wjchoi0712"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"wjchoi0712"},"content":"            System.out.println(LINE_SEPARATOR);"},{"lineNumber":65,"author":{"gitId":"wjchoi0712"},"content":"        } else {"},{"lineNumber":66,"author":{"gitId":"wjchoi0712"},"content":"            throw new EmptyListException();"},{"lineNumber":67,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":70,"author":{"gitId":"wjchoi0712"},"content":"    public static String getDescriptionOfTask(String userInput) {"},{"lineNumber":71,"author":{"gitId":"wjchoi0712"},"content":"        return userInput.substring(userInput.indexOf(\" \") + 1);"},{"lineNumber":72,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":74,"author":{"gitId":"wjchoi0712"},"content":"    public static String[] separateDescriptionAndTime(String description) {"},{"lineNumber":75,"author":{"gitId":"wjchoi0712"},"content":"        String[] inputs \u003d new String[2];"},{"lineNumber":76,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":77,"author":{"gitId":"wjchoi0712"},"content":"        //Get just the task description"},{"lineNumber":78,"author":{"gitId":"wjchoi0712"},"content":"        inputs[0] \u003d description.substring(0, description.indexOf(\"/\") - 1);"},{"lineNumber":79,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":80,"author":{"gitId":"wjchoi0712"},"content":"        //Get the due date"},{"lineNumber":81,"author":{"gitId":"wjchoi0712"},"content":"        inputs[1] \u003d description.substring(description.indexOf(\"/\") + 4);"},{"lineNumber":82,"author":{"gitId":"wjchoi0712"},"content":"        return inputs;"},{"lineNumber":83,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":85,"author":{"gitId":"wjchoi0712"},"content":"    public static void addTask(ArrayList\u003cTask\u003e tasks, String userInput, CommandType command) throws NoDescriptionException, InvalidDescriptionException {"},{"lineNumber":86,"author":{"gitId":"wjchoi0712"},"content":"        if (userInput.contains(\" \")) {"},{"lineNumber":87,"author":{"gitId":"wjchoi0712"},"content":"            String description \u003d getDescriptionOfTask(userInput);"},{"lineNumber":88,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":89,"author":{"gitId":"wjchoi0712"},"content":"            switch (command) {"},{"lineNumber":90,"author":{"gitId":"wjchoi0712"},"content":"            case TODO:"},{"lineNumber":91,"author":{"gitId":"wjchoi0712"},"content":"                tasks.add(new ToDo(description));"},{"lineNumber":92,"author":{"gitId":"wjchoi0712"},"content":"                break;"},{"lineNumber":93,"author":{"gitId":"wjchoi0712"},"content":"            case DEADLINE:"},{"lineNumber":94,"author":{"gitId":"wjchoi0712"},"content":"                if (description.contains(\"/by\")) {"},{"lineNumber":95,"author":{"gitId":"wjchoi0712"},"content":"                    String[] inputs \u003d separateDescriptionAndTime(description);"},{"lineNumber":96,"author":{"gitId":"wjchoi0712"},"content":"                    tasks.add(new Deadline(inputs[0], inputs[1]));"},{"lineNumber":97,"author":{"gitId":"wjchoi0712"},"content":"                } else {"},{"lineNumber":98,"author":{"gitId":"wjchoi0712"},"content":"                    throw new InvalidDescriptionException();"},{"lineNumber":99,"author":{"gitId":"wjchoi0712"},"content":"                }"},{"lineNumber":100,"author":{"gitId":"wjchoi0712"},"content":"                break;"},{"lineNumber":101,"author":{"gitId":"wjchoi0712"},"content":"            case EVENT:"},{"lineNumber":102,"author":{"gitId":"wjchoi0712"},"content":"                if (description.contains(\"/at\")) {"},{"lineNumber":103,"author":{"gitId":"wjchoi0712"},"content":"                    String[] inputs \u003d separateDescriptionAndTime(description);"},{"lineNumber":104,"author":{"gitId":"wjchoi0712"},"content":"                    tasks.add(new Event(inputs[0], inputs[1]));"},{"lineNumber":105,"author":{"gitId":"wjchoi0712"},"content":"                } else {"},{"lineNumber":106,"author":{"gitId":"wjchoi0712"},"content":"                    throw new InvalidDescriptionException();"},{"lineNumber":107,"author":{"gitId":"wjchoi0712"},"content":"                }"},{"lineNumber":108,"author":{"gitId":"wjchoi0712"},"content":"                break;"},{"lineNumber":109,"author":{"gitId":"wjchoi0712"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"wjchoi0712"},"content":"        } else {"},{"lineNumber":111,"author":{"gitId":"wjchoi0712"},"content":"            throw new NoDescriptionException();"},{"lineNumber":112,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":115,"author":{"gitId":"wjchoi0712"},"content":"    public static CommandType scanCommand(String userInput) throws InvalidCommandException {"},{"lineNumber":116,"author":{"gitId":"wjchoi0712"},"content":"        CommandType command;"},{"lineNumber":117,"author":{"gitId":"wjchoi0712"},"content":"        if (userInput.equals(\"bye\")) {"},{"lineNumber":118,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d CommandType.BYE;"},{"lineNumber":119,"author":{"gitId":"wjchoi0712"},"content":"        } else if (userInput.equals(\"list\")) {"},{"lineNumber":120,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d CommandType.LIST;"},{"lineNumber":121,"author":{"gitId":"wjchoi0712"},"content":"        } else if (userInput.startsWith(\"done\")) {"},{"lineNumber":122,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d CommandType.DONE;"},{"lineNumber":123,"author":{"gitId":"wjchoi0712"},"content":"        } else if (userInput.startsWith(\"delete\")) {"},{"lineNumber":124,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d CommandType.DELETE;"},{"lineNumber":125,"author":{"gitId":"wjchoi0712"},"content":"        } else if (userInput.startsWith(\"todo\")) {"},{"lineNumber":126,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d CommandType.TODO;"},{"lineNumber":127,"author":{"gitId":"wjchoi0712"},"content":"        } else if (userInput.startsWith(\"deadline\")) {"},{"lineNumber":128,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d CommandType.DEADLINE;"},{"lineNumber":129,"author":{"gitId":"wjchoi0712"},"content":"        } else if (userInput.startsWith(\"event\")) {"},{"lineNumber":130,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d CommandType.EVENT;"},{"lineNumber":131,"author":{"gitId":"wjchoi0712"},"content":"        } else {"},{"lineNumber":132,"author":{"gitId":"wjchoi0712"},"content":"            throw new InvalidCommandException();"},{"lineNumber":133,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"wjchoi0712"},"content":"        return command;"},{"lineNumber":135,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":137,"author":{"gitId":"wjchoi0712"},"content":"    public static void manageTasks() {"},{"lineNumber":138,"author":{"gitId":"wjchoi0712"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":139,"author":{"gitId":"wjchoi0712"},"content":"        boolean runDuke \u003d true;"},{"lineNumber":140,"author":{"gitId":"wjchoi0712"},"content":"        File f \u003d new File(\"duke.txt\");"},{"lineNumber":141,"author":{"gitId":"wjchoi0712"},"content":"        try {"},{"lineNumber":142,"author":{"gitId":"wjchoi0712"},"content":"            loadPrevData(tasks, \"duke.txt\");"},{"lineNumber":143,"author":{"gitId":"wjchoi0712"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":144,"author":{"gitId":"wjchoi0712"},"content":"            e.printStackTrace();"},{"lineNumber":145,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"wjchoi0712"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":147,"author":{"gitId":"wjchoi0712"},"content":"        while (runDuke) {"},{"lineNumber":148,"author":{"gitId":"wjchoi0712"},"content":"            String userInput \u003d in.nextLine();"},{"lineNumber":149,"author":{"gitId":"wjchoi0712"},"content":"            try {"},{"lineNumber":150,"author":{"gitId":"wjchoi0712"},"content":"                CommandType command \u003d scanCommand(userInput);"},{"lineNumber":151,"author":{"gitId":"wjchoi0712"},"content":"                switch (command) {"},{"lineNumber":152,"author":{"gitId":"wjchoi0712"},"content":"                case BYE:"},{"lineNumber":153,"author":{"gitId":"wjchoi0712"},"content":"                    runDuke \u003d false;"},{"lineNumber":154,"author":{"gitId":"wjchoi0712"},"content":"                    break;"},{"lineNumber":155,"author":{"gitId":"wjchoi0712"},"content":"                case LIST:"},{"lineNumber":156,"author":{"gitId":"wjchoi0712"},"content":"                    printList(tasks);"},{"lineNumber":157,"author":{"gitId":"wjchoi0712"},"content":"                    break;"},{"lineNumber":158,"author":{"gitId":"wjchoi0712"},"content":"                case DONE:"},{"lineNumber":159,"author":{"gitId":"wjchoi0712"},"content":"                    int completedTaskNo \u003d Integer.parseInt(userInput.replace(\"done \", \"\"));"},{"lineNumber":160,"author":{"gitId":"wjchoi0712"},"content":"                    tasks.get(completedTaskNo - 1).markAsDone();"},{"lineNumber":161,"author":{"gitId":"wjchoi0712"},"content":"                    printDoneResponse(tasks, completedTaskNo);"},{"lineNumber":162,"author":{"gitId":"wjchoi0712"},"content":"                    updateData(tasks);"},{"lineNumber":163,"author":{"gitId":"wjchoi0712"},"content":"                    break;"},{"lineNumber":164,"author":{"gitId":"wjchoi0712"},"content":"                case DELETE:"},{"lineNumber":165,"author":{"gitId":"wjchoi0712"},"content":"                    int deletedTaskNo \u003d Integer.parseInt(userInput.replace(\"delete \", \"\"));"},{"lineNumber":166,"author":{"gitId":"wjchoi0712"},"content":"                    printDeleteResponse(tasks, deletedTaskNo);"},{"lineNumber":167,"author":{"gitId":"wjchoi0712"},"content":"                    tasks.remove(tasks.get(deletedTaskNo-1));"},{"lineNumber":168,"author":{"gitId":"wjchoi0712"},"content":"                    updateData(tasks);"},{"lineNumber":169,"author":{"gitId":"wjchoi0712"},"content":"                    break;"},{"lineNumber":170,"author":{"gitId":"wjchoi0712"},"content":"                case TODO:"},{"lineNumber":171,"author":{"gitId":"wjchoi0712"},"content":"                case EVENT:"},{"lineNumber":172,"author":{"gitId":"wjchoi0712"},"content":"                case DEADLINE:"},{"lineNumber":173,"author":{"gitId":"wjchoi0712"},"content":"                    addTask(tasks, userInput, command);"},{"lineNumber":174,"author":{"gitId":"wjchoi0712"},"content":"                    printAddResponse(tasks, tasks.size());"},{"lineNumber":175,"author":{"gitId":"wjchoi0712"},"content":"                    AddTasksasTxt(tasks, tasks.size() - 1);"},{"lineNumber":176,"author":{"gitId":"wjchoi0712"},"content":"                    break;"},{"lineNumber":177,"author":{"gitId":"wjchoi0712"},"content":"                }"},{"lineNumber":178,"author":{"gitId":"wjchoi0712"},"content":"            } catch (InvalidCommandException e) {"},{"lineNumber":179,"author":{"gitId":"wjchoi0712"},"content":"                printResponse(e.getMessage());"},{"lineNumber":180,"author":{"gitId":"wjchoi0712"},"content":"            } catch (EmptyListException e) {"},{"lineNumber":181,"author":{"gitId":"wjchoi0712"},"content":"                printResponse(e.getMessage());"},{"lineNumber":182,"author":{"gitId":"wjchoi0712"},"content":"            } catch (NoDescriptionException e) {"},{"lineNumber":183,"author":{"gitId":"wjchoi0712"},"content":"                printResponse(e.getMessage());"},{"lineNumber":184,"author":{"gitId":"wjchoi0712"},"content":"            } catch (InvalidDescriptionException e) {"},{"lineNumber":185,"author":{"gitId":"wjchoi0712"},"content":"                printResponse(e.getMessage());"},{"lineNumber":186,"author":{"gitId":"wjchoi0712"},"content":"            } catch (IOException e) {"},{"lineNumber":187,"author":{"gitId":"wjchoi0712"},"content":"                e.printStackTrace();"},{"lineNumber":188,"author":{"gitId":"wjchoi0712"},"content":"            }"},{"lineNumber":189,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":192,"author":{"gitId":"wjchoi0712"},"content":"    public static void AddTasksasTxt(ArrayList\u003cTask\u003e tasks, int index) throws IOException {"},{"lineNumber":193,"author":{"gitId":"wjchoi0712"},"content":"        appendToFile(tasks.get(index).toString());"},{"lineNumber":194,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":196,"author":{"gitId":"wjchoi0712"},"content":"    public static void updateData(ArrayList\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":197,"author":{"gitId":"wjchoi0712"},"content":"        FileWriter fw \u003d new FileWriter(\"duke.txt\");"},{"lineNumber":198,"author":{"gitId":"wjchoi0712"},"content":"        fw.write(\"\");"},{"lineNumber":199,"author":{"gitId":"wjchoi0712"},"content":"        for (Task t : tasks) {"},{"lineNumber":200,"author":{"gitId":"wjchoi0712"},"content":"            appendToFile(t.toString());"},{"lineNumber":201,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":202,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":204,"author":{"gitId":"wjchoi0712"},"content":"    public static void appendToFile(String textToAppend) throws IOException {"},{"lineNumber":205,"author":{"gitId":"wjchoi0712"},"content":"        FileWriter fw \u003d new FileWriter(\"duke.txt\", true);"},{"lineNumber":206,"author":{"gitId":"wjchoi0712"},"content":"        fw.write(textToAppend + System.lineSeparator());"},{"lineNumber":207,"author":{"gitId":"wjchoi0712"},"content":"        fw.close();"},{"lineNumber":208,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":209,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":210,"author":{"gitId":"wjchoi0712"},"content":"    public static void loadPrevData(ArrayList\u003cTask\u003e tasks, String filePath) throws FileNotFoundException {"},{"lineNumber":211,"author":{"gitId":"wjchoi0712"},"content":"        File f \u003d new File(filePath);"},{"lineNumber":212,"author":{"gitId":"wjchoi0712"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":213,"author":{"gitId":"wjchoi0712"},"content":"        while (s.hasNext()) {"},{"lineNumber":214,"author":{"gitId":"wjchoi0712"},"content":"            String data \u003d s.nextLine();"},{"lineNumber":215,"author":{"gitId":"wjchoi0712"},"content":"            char taskType \u003d data.charAt(1);"},{"lineNumber":216,"author":{"gitId":"wjchoi0712"},"content":"            String description \u003d data.substring(7);"},{"lineNumber":217,"author":{"gitId":"wjchoi0712"},"content":"            String detail;"},{"lineNumber":218,"author":{"gitId":"wjchoi0712"},"content":"            String time;"},{"lineNumber":219,"author":{"gitId":"wjchoi0712"},"content":"            switch (taskType) {"},{"lineNumber":220,"author":{"gitId":"wjchoi0712"},"content":"            case \u0027T\u0027:"},{"lineNumber":221,"author":{"gitId":"wjchoi0712"},"content":"                tasks.add(new ToDo(description));"},{"lineNumber":222,"author":{"gitId":"wjchoi0712"},"content":"                break;"},{"lineNumber":223,"author":{"gitId":"wjchoi0712"},"content":"            case \u0027D\u0027:"},{"lineNumber":224,"author":{"gitId":"wjchoi0712"},"content":"                detail \u003d description.substring(0, description.indexOf(\"by:\") - 2);"},{"lineNumber":225,"author":{"gitId":"wjchoi0712"},"content":"                time \u003d description.substring(description.indexOf(\"by:\") + 4, description.length() - 1);"},{"lineNumber":226,"author":{"gitId":"wjchoi0712"},"content":"                tasks.add(new Deadline(detail, time));"},{"lineNumber":227,"author":{"gitId":"wjchoi0712"},"content":"                break;"},{"lineNumber":228,"author":{"gitId":"wjchoi0712"},"content":"            case \u0027E\u0027:"},{"lineNumber":229,"author":{"gitId":"wjchoi0712"},"content":"                detail \u003d description.substring(0, description.indexOf(\"at:\") - 2);"},{"lineNumber":230,"author":{"gitId":"wjchoi0712"},"content":"                time \u003d description.substring(description.indexOf(\"at:\") + 4, description.length() - 1);"},{"lineNumber":231,"author":{"gitId":"wjchoi0712"},"content":"                tasks.add(new Deadline(detail, time));"},{"lineNumber":232,"author":{"gitId":"wjchoi0712"},"content":"                break;"},{"lineNumber":233,"author":{"gitId":"wjchoi0712"},"content":"            }"},{"lineNumber":234,"author":{"gitId":"wjchoi0712"},"content":"            if (data.charAt(4) \u003d\u003d \u0027X\u0027) {"},{"lineNumber":235,"author":{"gitId":"wjchoi0712"},"content":"                tasks.get(tasks.size() - 1).markAsDone();"},{"lineNumber":236,"author":{"gitId":"wjchoi0712"},"content":"            }"},{"lineNumber":237,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":238,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":239,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":240,"author":{"gitId":"wjchoi0712"},"content":"    public static void main(String[] args) {"},{"lineNumber":241,"author":{"gitId":"wjchoi0712"},"content":"        printResponse(LOGO + MESSAGE_GREETING);"},{"lineNumber":242,"author":{"gitId":"wjchoi0712"},"content":"        manageTasks();"},{"lineNumber":243,"author":{"gitId":"wjchoi0712"},"content":"        printResponse(MESSAGE_ENDING);"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"wjchoi0712":242,"-":3}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public abstract class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":4}},{"path":"src/main/java/duke/exception/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class EmptyListException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        return \" OOPS! You currently have no tasks!\";"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":8}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class InvalidCommandException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        return \" OOPS! I\u0027m sorry but I don\u0027t understand your command :(\";"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":8}},{"path":"src/main/java/duke/exception/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class InvalidDescriptionException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        return \" OOPS! Description of DEADLINE and EVENT tasks require \\\"by\\\" and \\\"at\\\" respectively!\";"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":8}},{"path":"src/main/java/duke/exception/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class NoDescriptionException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        return \" OOPS! Description of a task cannot be empty!\";"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":8}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    private String by;"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"    public Deadline(String description, String dueDate) {"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"        this.by \u003d dueDate;"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":17}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    protected String at;"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"    public Event(String description, String at) {"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"        this.at \u003d at;"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":17}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"    public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"        isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"     * Marks the isDone boolean to true"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"     * */"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    public void markAsDone() {"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"        isDone \u003d true;"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"     * Returns the status icon of the task"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"     * */"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"    public String getStatusIcon() {"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"        return getStatusIcon() + \" \" + description;"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":31}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"public class ToDo extends Task {"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    public ToDo(String description) {"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"todo play"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"todo watch video"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"deadline finish homework /by 11th NOV"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"list"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"event attend lecture /at 2pm Tues"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"list"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"deadline clean up /by not sure"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"done 1"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"done 2"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"list"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"bye"}],"authorContributionMap":{"wjchoi0712":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"wjchoi0712":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"diff ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"wjchoi0712":2,"-":32}}]
