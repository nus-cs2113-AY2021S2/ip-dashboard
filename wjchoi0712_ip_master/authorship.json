[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"wjchoi0712":9,"-":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"     * Prints out the arguments with LINE_SEPARATOR surrounding it"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"     * @param message The string message to be printed out"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"     * @param tasks The list of tasks to be printed out"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"     * @return No return value."},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"    public static void printWithLine(String message, Task[] tasks) {"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"        final String LINE_SEPARATOR \u003d \"____________________________________________________________\";"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"        if (tasks \u003d\u003d null) {"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"            System.out.println(LINE_SEPARATOR + \"\\n\" + message+ \"\\n\" + LINE_SEPARATOR);"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"        } else {"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"            System.out.println(LINE_SEPARATOR);"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"            if (message !\u003d null) {"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"                System.out.println(message);"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"            }"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"            for (int i \u003d 0; i \u003c tasks.length; i++) {"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"                if (tasks[i] \u003d\u003d null) {"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"                    break;"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"                }"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"                System.out.println(\" \" + (i + 1) + \".\" + tasks[i].getStatusAndDescription());"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"            System.out.println(LINE_SEPARATOR);"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"        final String LOGO \u003d \" ____        _        \\n\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"        printWithLine(LOGO + \"\\n Hello! I\u0027m Duke\" + \"\\n What can I do for you?\", null);"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"        String userInput \u003d in.nextLine();"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":42,"author":{"gitId":"wjchoi0712"},"content":"        Task[] tasks \u003d new Task[100];"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"        int taskCounter \u003d 0;"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"        while (!userInput.equals(\"bye\")) {"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"            if (userInput.equals(\"list\")) {"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":"                printWithLine(\" Here are the tasks in your list:\", tasks);"},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"            } else if (userInput.startsWith(\"done\")) {"},{"lineNumber":49,"author":{"gitId":"wjchoi0712"},"content":"                String[] temp \u003d userInput.split(\" \");"},{"lineNumber":50,"author":{"gitId":"wjchoi0712"},"content":"                int completedTaskNo \u003d Integer.parseInt(temp[1])-1;"},{"lineNumber":51,"author":{"gitId":"wjchoi0712"},"content":"                tasks[completedTaskNo].markAsDone();"},{"lineNumber":52,"author":{"gitId":"wjchoi0712"},"content":"                printWithLine(\" Nice! I\u0027ve marked this task as done:\" + \"\\n   \""},{"lineNumber":53,"author":{"gitId":"wjchoi0712"},"content":"                        + tasks[completedTaskNo].getStatusAndDescription(), null);"},{"lineNumber":54,"author":{"gitId":"wjchoi0712"},"content":"            } else {"},{"lineNumber":55,"author":{"gitId":"wjchoi0712"},"content":"                tasks[taskCounter] \u003d new Task(userInput);"},{"lineNumber":56,"author":{"gitId":"wjchoi0712"},"content":"                printWithLine(\" added: \" + tasks[taskCounter].description, null);"},{"lineNumber":57,"author":{"gitId":"wjchoi0712"},"content":"                taskCounter++;"},{"lineNumber":58,"author":{"gitId":"wjchoi0712"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"wjchoi0712"},"content":"            userInput \u003d in.nextLine();"},{"lineNumber":60,"author":{"gitId":"wjchoi0712"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"wjchoi0712"},"content":"        printWithLine(\" Bye. Hope to see you again soon!\", null);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"wjchoi0712":55,"-":8}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"    protected String description;"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    protected boolean isDone;"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    public Task(String description) {"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"        this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"    public String getStatusIcon() {"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"    public void markAsDone() {"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"        isDone \u003d true;"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"    public String getStatusAndDescription() {"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"        return this.getStatusIcon() + \" \" + this.description;"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":""},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"}"}],"authorContributionMap":{"wjchoi0712":23}}]
