[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.EmptyInputException;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.IncompleteInputException;"},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.InvalidDateInputException;"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"import duke.task.Deadline;"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"import duke.task.Event;"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"import duke.task.Todo;"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"        String taskType;"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"        String taskName;"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"        String by \u003d \"\";"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"        String at \u003d \"\";"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"        Scanner splitInputScanner;"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":22,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"        // To do textUITesting, comment line 19"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"        System.out.println(logo);"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"        printDividingLine();"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"        // Print welcome message"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"        printWelcomeMessage();"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"        // Scan for input"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"        Scanner userInputScanner \u003d new Scanner(System.in);"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"        String userInput \u003d userInputScanner.nextLine();"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"        // Separate taskType and taskName(may contain"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"        // dates/time) if applicable"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"        userInput \u003d userInput.trim();   // removes leading and trailing spaces"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"        if(isOneWord(userInput)) {"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"            taskType \u003d userInput;"},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":"            taskName \u003d \"\";"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"        else{"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"            splitInputScanner \u003d new Scanner(userInput);"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"            // Extract task type"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"            taskType \u003d splitInputScanner.next().toLowerCase();"},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":"            // Extract task description"},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"            taskName \u003d splitInputScanner.nextLine();"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"        // Loop for user input until \"bye\" is inputted"},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"        while(!taskType.equals(\"bye\")) {"},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"            switch (taskType) {"},{"lineNumber":54,"author":{"gitId":"tzexern"},"content":"            case \"todo\":"},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":"                Task t \u003d new Todo(taskName);"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"                printDividingLine();"},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"                addTaskWithValidation(userInput, t);"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"                printDividingLine();"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"                break;"},{"lineNumber":60,"author":{"gitId":"tzexern"},"content":"            case \"deadline\":"},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":"                by \u003d extractTime(taskName);"},{"lineNumber":62,"author":{"gitId":"tzexern"},"content":"                System.out.println(\"Debug message 1: \" + by);"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"                taskName  \u003d extractTaskName(taskName);"},{"lineNumber":64,"author":{"gitId":"tzexern"},"content":"                Task d \u003d new Deadline(taskName, by);"},{"lineNumber":65,"author":{"gitId":"tzexern"},"content":"                printDividingLine();"},{"lineNumber":66,"author":{"gitId":"tzexern"},"content":"                addTaskWithValidation(userInput, d);"},{"lineNumber":67,"author":{"gitId":"tzexern"},"content":"                printDividingLine();"},{"lineNumber":68,"author":{"gitId":"tzexern"},"content":"                break;"},{"lineNumber":69,"author":{"gitId":"tzexern"},"content":"            case \"event\":"},{"lineNumber":70,"author":{"gitId":"tzexern"},"content":"                at \u003d extractTime(taskName);"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"                taskName \u003d extractTaskName(taskName);"},{"lineNumber":72,"author":{"gitId":"tzexern"},"content":"                Task e \u003d new Event(taskName, at);"},{"lineNumber":73,"author":{"gitId":"tzexern"},"content":"                printDividingLine();"},{"lineNumber":74,"author":{"gitId":"tzexern"},"content":"                addTaskWithValidation(userInput, e);"},{"lineNumber":75,"author":{"gitId":"tzexern"},"content":"                printDividingLine();"},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":"                break;"},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":"            case \"list\":"},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":"                printDividingLine();"},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"                Task.listTasks();"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"                printDividingLine();"},{"lineNumber":81,"author":{"gitId":"tzexern"},"content":"                break;"},{"lineNumber":82,"author":{"gitId":"tzexern"},"content":"            case \"done\":"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":"                printDividingLine();"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":"                Task.markAsDone(getTaskIndex(userInput));"},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"                printDividingLine();"},{"lineNumber":86,"author":{"gitId":"tzexern"},"content":"                break;"},{"lineNumber":87,"author":{"gitId":"tzexern"},"content":"            default:"},{"lineNumber":88,"author":{"gitId":"tzexern"},"content":"                printCommandErrorMessage();"},{"lineNumber":89,"author":{"gitId":"tzexern"},"content":"                break;"},{"lineNumber":90,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":92,"author":{"gitId":"tzexern"},"content":"            // Scan input again"},{"lineNumber":93,"author":{"gitId":"tzexern"},"content":"            userInput \u003d userInputScanner.nextLine();"},{"lineNumber":94,"author":{"gitId":"tzexern"},"content":"            if(isOneWord(userInput)) {"},{"lineNumber":95,"author":{"gitId":"tzexern"},"content":"                taskType \u003d userInput;"},{"lineNumber":96,"author":{"gitId":"tzexern"},"content":"                taskName \u003d \"\";"},{"lineNumber":97,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"tzexern"},"content":"            else{"},{"lineNumber":99,"author":{"gitId":"tzexern"},"content":"                splitInputScanner \u003d new Scanner(userInput);"},{"lineNumber":100,"author":{"gitId":"tzexern"},"content":"                taskType \u003d splitInputScanner.next();"},{"lineNumber":101,"author":{"gitId":"tzexern"},"content":"                taskName \u003d splitInputScanner.nextLine();"},{"lineNumber":102,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":105,"author":{"gitId":"tzexern"},"content":"        // Print Bye Message"},{"lineNumber":106,"author":{"gitId":"tzexern"},"content":"        printByeMessage();"},{"lineNumber":107,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":109,"author":{"gitId":"tzexern"},"content":"    private static void addTaskWithValidation(String userInput, Task t) {"},{"lineNumber":110,"author":{"gitId":"tzexern"},"content":"        try {"},{"lineNumber":111,"author":{"gitId":"tzexern"},"content":"            t.addTask();"},{"lineNumber":112,"author":{"gitId":"tzexern"},"content":"        } catch (EmptyInputException | IncompleteInputException e){"},{"lineNumber":113,"author":{"gitId":"tzexern"},"content":"            t.printInputErrorMessage(userInput);"},{"lineNumber":114,"author":{"gitId":"tzexern"},"content":"        } catch (InvalidDateInputException e){"},{"lineNumber":115,"author":{"gitId":"tzexern"},"content":"            t.printInvalidDateInputMessage(userInput);"},{"lineNumber":116,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":119,"author":{"gitId":"tzexern"},"content":"    private static String getTaskIndex(String userInput) {"},{"lineNumber":120,"author":{"gitId":"tzexern"},"content":"        String[] userInputSplitted;"},{"lineNumber":121,"author":{"gitId":"tzexern"},"content":"        String taskIndex;"},{"lineNumber":122,"author":{"gitId":"tzexern"},"content":"        userInputSplitted \u003d userInput.split(\" \");"},{"lineNumber":123,"author":{"gitId":"tzexern"},"content":"        taskIndex \u003d userInputSplitted[1];"},{"lineNumber":124,"author":{"gitId":"tzexern"},"content":"        return taskIndex;"},{"lineNumber":125,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":127,"author":{"gitId":"tzexern"},"content":"    private static boolean isOneWord(String userInput) {"},{"lineNumber":128,"author":{"gitId":"tzexern"},"content":"        return !userInput.contains(\" \");"},{"lineNumber":129,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":131,"author":{"gitId":"tzexern"},"content":"    private static void printCommandErrorMessage() {"},{"lineNumber":132,"author":{"gitId":"tzexern"},"content":"        printDividingLine();"},{"lineNumber":133,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Uh oh this command is not available :\u003c\");"},{"lineNumber":134,"author":{"gitId":"tzexern"},"content":"        printDividingLine();"},{"lineNumber":135,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":137,"author":{"gitId":"tzexern"},"content":"    private static void printWelcomeMessage() {"},{"lineNumber":138,"author":{"gitId":"tzexern"},"content":"        printDividingLine();"},{"lineNumber":139,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":140,"author":{"gitId":"tzexern"},"content":"        System.out.print(\"What can I do for you?\\n\");"},{"lineNumber":141,"author":{"gitId":"tzexern"},"content":"        printDividingLine();"},{"lineNumber":142,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":144,"author":{"gitId":"tzexern"},"content":"    private static void printByeMessage() {"},{"lineNumber":145,"author":{"gitId":"tzexern"},"content":"        printDividingLine();"},{"lineNumber":146,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Bye. Hope to see you again soon! :3\");"},{"lineNumber":147,"author":{"gitId":"tzexern"},"content":"        printDividingLine();"},{"lineNumber":148,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":150,"author":{"gitId":"tzexern"},"content":"    private static void printDividingLine() {"},{"lineNumber":151,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"_____________________________________________________\");"},{"lineNumber":152,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":154,"author":{"gitId":"tzexern"},"content":"    private static String extractTaskName(String s){"},{"lineNumber":155,"author":{"gitId":"tzexern"},"content":"        // If s is empty"},{"lineNumber":156,"author":{"gitId":"tzexern"},"content":"        if (isEmpty(s)){"},{"lineNumber":157,"author":{"gitId":"tzexern"},"content":"            return \"\";"},{"lineNumber":158,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":159,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":160,"author":{"gitId":"tzexern"},"content":"        String[] splitArray \u003d s.split(\"/\");"},{"lineNumber":161,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":162,"author":{"gitId":"tzexern"},"content":"        return splitArray[0];"},{"lineNumber":163,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":165,"author":{"gitId":"tzexern"},"content":"    private static String extractTime(String s){"},{"lineNumber":166,"author":{"gitId":"tzexern"},"content":"        // If s is empty"},{"lineNumber":167,"author":{"gitId":"tzexern"},"content":"        if (isEmpty(s)){"},{"lineNumber":168,"author":{"gitId":"tzexern"},"content":"            return \"\";"},{"lineNumber":169,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":170,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":171,"author":{"gitId":"tzexern"},"content":"        String[] splitArray \u003d s.split(\"/\");"},{"lineNumber":172,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":173,"author":{"gitId":"tzexern"},"content":"        // If there is no date field"},{"lineNumber":174,"author":{"gitId":"tzexern"},"content":"        if (splitArray.length \u003c 2){"},{"lineNumber":175,"author":{"gitId":"tzexern"},"content":"            return \"\";"},{"lineNumber":176,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":178,"author":{"gitId":"tzexern"},"content":"        // If s is invalid input"},{"lineNumber":179,"author":{"gitId":"tzexern"},"content":"        if (splitArray[1].split(\" \").length !\u003d 2){"},{"lineNumber":180,"author":{"gitId":"tzexern"},"content":"            return \"\";"},{"lineNumber":181,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":183,"author":{"gitId":"tzexern"},"content":"        Scanner sc \u003d new Scanner(splitArray[1]);"},{"lineNumber":184,"author":{"gitId":"tzexern"},"content":"        sc.next();              // remove \u0027by\u0027 or \u0027at\u0027"},{"lineNumber":185,"author":{"gitId":"tzexern"},"content":"        return sc.nextLine();   // extract time/date"},{"lineNumber":186,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":188,"author":{"gitId":"tzexern"},"content":"    private static boolean isEmpty(String s){"},{"lineNumber":189,"author":{"gitId":"tzexern"},"content":"        return s.equals(\"\");"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"tzexern":182,"-":9}},{"path":"src/main/java/duke/exceptions/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"public class EmptyInputException extends Exception {"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"}"}],"authorContributionMap":{"tzexern":4}},{"path":"src/main/java/duke/exceptions/IncompleteInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"public class IncompleteInputException extends Exception {"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"}"}],"authorContributionMap":{"tzexern":4}},{"path":"src/main/java/duke/exceptions/InvalidDateInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"public class InvalidDateInputException extends Exception {"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"}"}],"authorContributionMap":{"tzexern":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.EmptyInputException;"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.IncompleteInputException;"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.InvalidDateInputException;"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"public class Deadline extends Task{"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"    private static final String ALPHABET_D \u003d \"D\";"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"    private String by;"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"    private static final String JAN \u003d \"01\";"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"    private static final String FEB \u003d \"02\";"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"    private static final String MAR \u003d \"03\";"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"    private static final String APR \u003d \"04\";"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"    private static final String MAY \u003d \"05\";"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"    private static final String JUN \u003d \"06\";"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"    private static final String JUL \u003d \"07\";"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"    private static final String AUG \u003d \"08\";"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"    private static final String SEP \u003d \"09\";"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"    private static final String OCT \u003d \"10\";"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"    private static final String NOV \u003d \"11\";"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"    private static final String DEC \u003d \"12\";"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"    public Deadline(String d, String by){"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"        super(d);"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"        this.by \u003d by;"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"    public String getTaskType(){"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"        return ALPHABET_D;"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"    public void printTaskInformation(){"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"        super.printTaskInformation();"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"        this.printTime();"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"    public void printTime(){"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"        System.out.print(\" (by:\" + this.by + \")\");"},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"    public void printInputErrorMessage(String userInput) {"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"        super.printInputErrorMessage(userInput);"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"  deadline [deadline name] /by [MM-DD-YYYY]\\n\""},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":"                + \"    e.g. deadline return book /by 03-28-2021\");"},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"    public void printInvalidDateInputMessage(String userInput) {"},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"        super.printInvalidDateInputMessage(userInput);"},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"  deadline [deadline name] /by [MM-DD-YYYY]\\n\""},{"lineNumber":54,"author":{"gitId":"tzexern"},"content":"                + \"    e.g. deadline return book /by 03-28-2021\");"},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"    public void addTask() throws EmptyInputException, IncompleteInputException, InvalidDateInputException {"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"        // Check if date field is valid"},{"lineNumber":60,"author":{"gitId":"tzexern"},"content":"        if (isIncomplete(this)){"},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":"            throw new IncompleteInputException();"},{"lineNumber":62,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"        if (isInvalidDate(this)){"},{"lineNumber":64,"author":{"gitId":"tzexern"},"content":"            throw new InvalidDateInputException();"},{"lineNumber":65,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"tzexern"},"content":"        super.addTask();"},{"lineNumber":67,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":69,"author":{"gitId":"tzexern"},"content":"    private boolean isIncomplete(Deadline d){"},{"lineNumber":70,"author":{"gitId":"tzexern"},"content":"        return d.by.equals(\"\");"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":73,"author":{"gitId":"tzexern"},"content":"    private boolean isInvalidDate(Deadline d){"},{"lineNumber":74,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Debug message 2: \" + d);"},{"lineNumber":75,"author":{"gitId":"tzexern"},"content":"        String[] splitDate \u003d d.by.trim().split(\"-\");"},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":"        // Formatting is incorrect"},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":"        if (splitDate.length !\u003d 3){"},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":"            return true;"},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"        // Check if date is within valid range"},{"lineNumber":81,"author":{"gitId":"tzexern"},"content":"        String month \u003d splitDate[0];"},{"lineNumber":82,"author":{"gitId":"tzexern"},"content":"        String day \u003d splitDate[1];"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":"        String year \u003d splitDate[2];"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"        if (Integer.parseInt(month) \u003c 1 || Integer.parseInt(month) \u003e 12){"},{"lineNumber":86,"author":{"gitId":"tzexern"},"content":"            return true;"},{"lineNumber":87,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"tzexern"},"content":"        if (Integer.parseInt(year) \u003c 2021){"},{"lineNumber":89,"author":{"gitId":"tzexern"},"content":"            return true;"},{"lineNumber":90,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"tzexern"},"content":"        // Check day lower limit"},{"lineNumber":92,"author":{"gitId":"tzexern"},"content":"        if (Integer.parseInt(day) \u003c 1){"},{"lineNumber":93,"author":{"gitId":"tzexern"},"content":"            return true;"},{"lineNumber":94,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":96,"author":{"gitId":"tzexern"},"content":"        // Check day upper limit according to month"},{"lineNumber":97,"author":{"gitId":"tzexern"},"content":"        switch(month){"},{"lineNumber":98,"author":{"gitId":"tzexern"},"content":"        case FEB:"},{"lineNumber":99,"author":{"gitId":"tzexern"},"content":"            if (isLeapYear(Integer.parseInt(year))){"},{"lineNumber":100,"author":{"gitId":"tzexern"},"content":"                if (Integer.parseInt(day) \u003e 29){"},{"lineNumber":101,"author":{"gitId":"tzexern"},"content":"                    return true;"},{"lineNumber":102,"author":{"gitId":"tzexern"},"content":"                }"},{"lineNumber":103,"author":{"gitId":"tzexern"},"content":"            } else {"},{"lineNumber":104,"author":{"gitId":"tzexern"},"content":"                if (Integer.parseInt(day) \u003e 28){"},{"lineNumber":105,"author":{"gitId":"tzexern"},"content":"                    return true;"},{"lineNumber":106,"author":{"gitId":"tzexern"},"content":"                }"},{"lineNumber":107,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"tzexern"},"content":"        case JAN:"},{"lineNumber":109,"author":{"gitId":"tzexern"},"content":"        case MAR:"},{"lineNumber":110,"author":{"gitId":"tzexern"},"content":"        case MAY:"},{"lineNumber":111,"author":{"gitId":"tzexern"},"content":"        case JUL:"},{"lineNumber":112,"author":{"gitId":"tzexern"},"content":"        case AUG:"},{"lineNumber":113,"author":{"gitId":"tzexern"},"content":"        case OCT:"},{"lineNumber":114,"author":{"gitId":"tzexern"},"content":"        case DEC:"},{"lineNumber":115,"author":{"gitId":"tzexern"},"content":"            if (Integer.parseInt(day) \u003e 31){"},{"lineNumber":116,"author":{"gitId":"tzexern"},"content":"                return true;"},{"lineNumber":117,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"tzexern"},"content":"        case APR:"},{"lineNumber":119,"author":{"gitId":"tzexern"},"content":"        case JUN:"},{"lineNumber":120,"author":{"gitId":"tzexern"},"content":"        case SEP:"},{"lineNumber":121,"author":{"gitId":"tzexern"},"content":"        case NOV:"},{"lineNumber":122,"author":{"gitId":"tzexern"},"content":"            if (Integer.parseInt(day) \u003e 30){"},{"lineNumber":123,"author":{"gitId":"tzexern"},"content":"                return true;"},{"lineNumber":124,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"tzexern"},"content":"        return false;"},{"lineNumber":127,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":129,"author":{"gitId":"tzexern"},"content":"    private boolean isLeapYear(int year){"},{"lineNumber":130,"author":{"gitId":"tzexern"},"content":"        return (year % 4 \u003d\u003d 0);"},{"lineNumber":131,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"tzexern"},"content":"}"}],"authorContributionMap":{"tzexern":132}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.EmptyInputException;"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.IncompleteInputException;"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.InvalidDateInputException;"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"public class Event extends Task{"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"    private static final String ALPHABET_E \u003d \"E\";"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"    private String at;"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"    private static final String JAN \u003d \"01\";"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"    private static final String FEB \u003d \"02\";"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"    private static final String MAR \u003d \"03\";"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"    private static final String APR \u003d \"04\";"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"    private static final String MAY \u003d \"05\";"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"    private static final String JUN \u003d \"06\";"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"    private static final String JUL \u003d \"07\";"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"    private static final String AUG \u003d \"08\";"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"    private static final String SEP \u003d \"09\";"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"    private static final String OCT \u003d \"10\";"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"    private static final String NOV \u003d \"11\";"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"    private static final String DEC \u003d \"12\";"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"    public Event(String d, String at){"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"        super(d);"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"        this.at \u003d at;"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"    public String getTaskType(){"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"        return ALPHABET_E;"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"    public void printTaskInformation(){"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"        super.printTaskInformation();"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"        this.printTime();"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"    public void printTime(){"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"        System.out.print(\" (at:\" + this.at + \")\");"},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"    public void printInputErrorMessage(String userInput) {"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"        super.printInputErrorMessage(userInput);"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"  event [event name] /at [MM-DD-YYYY]\\n\""},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":"                + \"    e.g. event project meeting /at 03-28-2021\");"},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"    public void printInvalidDateInputMessage(String userInput) {"},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"        super.printInvalidDateInputMessage(userInput);"},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"  event [event name] /at [MM-DD-YYYY]\\n\""},{"lineNumber":54,"author":{"gitId":"tzexern"},"content":"                + \"    e.g. event project meeting /at 03-28-2021\");"},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"    public void addTask() throws EmptyInputException, IncompleteInputException, InvalidDateInputException {"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"        // Check if date field is valid"},{"lineNumber":60,"author":{"gitId":"tzexern"},"content":"        if (isIncomplete(this)){"},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":"            throw new IncompleteInputException();"},{"lineNumber":62,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"        if (isInvalidDate(this)){"},{"lineNumber":64,"author":{"gitId":"tzexern"},"content":"            throw new InvalidDateInputException();"},{"lineNumber":65,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"tzexern"},"content":"        super.addTask();"},{"lineNumber":67,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":69,"author":{"gitId":"tzexern"},"content":"    private boolean isIncomplete(Event e){"},{"lineNumber":70,"author":{"gitId":"tzexern"},"content":"        return e.at.equals(\"\");"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":73,"author":{"gitId":"tzexern"},"content":"    private boolean isInvalidDate(Event e){"},{"lineNumber":74,"author":{"gitId":"tzexern"},"content":"        String[] splitDate \u003d e.at.trim().split(\"-\");"},{"lineNumber":75,"author":{"gitId":"tzexern"},"content":"        // Formatting is incorrect"},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":"        if (splitDate.length !\u003d 3){"},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":"            return true;"},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"        // Check if date is within valid range"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"        String month \u003d splitDate[0];"},{"lineNumber":81,"author":{"gitId":"tzexern"},"content":"        String day \u003d splitDate[1];"},{"lineNumber":82,"author":{"gitId":"tzexern"},"content":"        String year \u003d splitDate[2];"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":"        if (Integer.parseInt(month) \u003c 1 || Integer.parseInt(month) \u003e 12){"},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"            return true;"},{"lineNumber":86,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"tzexern"},"content":"        if (Integer.parseInt(year) \u003c 2021){"},{"lineNumber":88,"author":{"gitId":"tzexern"},"content":"            return true;"},{"lineNumber":89,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"tzexern"},"content":"        // Check day lower limit"},{"lineNumber":91,"author":{"gitId":"tzexern"},"content":"        if (Integer.parseInt(day) \u003c 1){"},{"lineNumber":92,"author":{"gitId":"tzexern"},"content":"            return true;"},{"lineNumber":93,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":95,"author":{"gitId":"tzexern"},"content":"        // Check day upper limit according to month"},{"lineNumber":96,"author":{"gitId":"tzexern"},"content":"        switch(month){"},{"lineNumber":97,"author":{"gitId":"tzexern"},"content":"        case FEB:"},{"lineNumber":98,"author":{"gitId":"tzexern"},"content":"            if (isLeapYear(Integer.parseInt(year))){"},{"lineNumber":99,"author":{"gitId":"tzexern"},"content":"                if (Integer.parseInt(day) \u003e 29){"},{"lineNumber":100,"author":{"gitId":"tzexern"},"content":"                    return true;"},{"lineNumber":101,"author":{"gitId":"tzexern"},"content":"                }"},{"lineNumber":102,"author":{"gitId":"tzexern"},"content":"            } else {"},{"lineNumber":103,"author":{"gitId":"tzexern"},"content":"                if (Integer.parseInt(day) \u003e 28){"},{"lineNumber":104,"author":{"gitId":"tzexern"},"content":"                    return true;"},{"lineNumber":105,"author":{"gitId":"tzexern"},"content":"                }"},{"lineNumber":106,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"tzexern"},"content":"        case JAN:"},{"lineNumber":108,"author":{"gitId":"tzexern"},"content":"        case MAR:"},{"lineNumber":109,"author":{"gitId":"tzexern"},"content":"        case MAY:"},{"lineNumber":110,"author":{"gitId":"tzexern"},"content":"        case JUL:"},{"lineNumber":111,"author":{"gitId":"tzexern"},"content":"        case AUG:"},{"lineNumber":112,"author":{"gitId":"tzexern"},"content":"        case OCT:"},{"lineNumber":113,"author":{"gitId":"tzexern"},"content":"        case DEC:"},{"lineNumber":114,"author":{"gitId":"tzexern"},"content":"            if (Integer.parseInt(day) \u003e 31){"},{"lineNumber":115,"author":{"gitId":"tzexern"},"content":"                return true;"},{"lineNumber":116,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"tzexern"},"content":"        case APR:"},{"lineNumber":118,"author":{"gitId":"tzexern"},"content":"        case JUN:"},{"lineNumber":119,"author":{"gitId":"tzexern"},"content":"        case SEP:"},{"lineNumber":120,"author":{"gitId":"tzexern"},"content":"        case NOV:"},{"lineNumber":121,"author":{"gitId":"tzexern"},"content":"            if (Integer.parseInt(day) \u003e 30){"},{"lineNumber":122,"author":{"gitId":"tzexern"},"content":"                return true;"},{"lineNumber":123,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"tzexern"},"content":"        return false;"},{"lineNumber":126,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":128,"author":{"gitId":"tzexern"},"content":"    private boolean isLeapYear(int year){"},{"lineNumber":129,"author":{"gitId":"tzexern"},"content":"        return (year % 4 \u003d\u003d 0);"},{"lineNumber":130,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":132,"author":{"gitId":"tzexern"},"content":"}"}],"authorContributionMap":{"tzexern":132}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.EmptyInputException;"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.IncompleteInputException;"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.InvalidDateInputException;"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"public class Task {"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"    private static final int MAX_NUMBER_OF_TASKS \u003d 100;"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"    private boolean isDone;"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"    private static Task[] taskList \u003d new Task[MAX_NUMBER_OF_TASKS];"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"    private static int taskCount \u003d 0;"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"    private static String time;"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"    // duke.task.Task Constructor"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"    public Task(String description){"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"        this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"    public String getStatusIcon(){"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"        return(this.isDone ? \"x\" : \" \");"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"    public static void markAsDone(String i){"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"        int index \u003d Integer.parseInt(i);"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"        Task t \u003d taskList[index-1];"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"        t.isDone \u003d true;"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"        System.out.print(\"  \");"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"        t.printTaskInformation();"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"\");"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"    // Add duke.task.Task to taskList and increment taskCount"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"    public void addTask() throws"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"            EmptyInputException, IncompleteInputException, InvalidDateInputException {"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"        // Throw Exception if no valid task is detected"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"        if (isEmpty(this)){"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"            throw new EmptyInputException();"},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Got it, I\u0027ve added this task:\");"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"        System.out.print(\"  \");"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"        this.printTaskInformation();"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"\");"},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":"        taskList[taskCount]\u003d this;"},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"        taskCount++;"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"        printSuccessfulTaskAddition();"},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"    private void printSuccessfulTaskAddition() {"},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"        if(taskCount \u003d\u003d 1) {"},{"lineNumber":54,"author":{"gitId":"tzexern"},"content":"            System.out.println(\"Now you have \" + taskCount + \" task in the list.\");"},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"        else{"},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"            System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":"    public static void listTasks(){"},{"lineNumber":62,"author":{"gitId":"tzexern"},"content":"        int index \u003d 1;"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":64,"author":{"gitId":"tzexern"},"content":"        for(Task t : taskList){"},{"lineNumber":65,"author":{"gitId":"tzexern"},"content":"            printIndex(index);"},{"lineNumber":66,"author":{"gitId":"tzexern"},"content":"            t.printTaskInformation();"},{"lineNumber":67,"author":{"gitId":"tzexern"},"content":"            System.out.println(\"\");"},{"lineNumber":68,"author":{"gitId":"tzexern"},"content":"            index++;"},{"lineNumber":69,"author":{"gitId":"tzexern"},"content":"            if(!(taskCount \u003e index - 1)){"},{"lineNumber":70,"author":{"gitId":"tzexern"},"content":"                break;"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":75,"author":{"gitId":"tzexern"},"content":"    private static void printIndex(int index) {"},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":"        System.out.print(Integer.toString(index) + \".\");"},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"    public void printTaskInformation(){"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"        this.printTaskType();"},{"lineNumber":81,"author":{"gitId":"tzexern"},"content":"        this.printStatusIcon();"},{"lineNumber":82,"author":{"gitId":"tzexern"},"content":"        this.printTaskName();"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"    public String getTaskType(){"},{"lineNumber":86,"author":{"gitId":"tzexern"},"content":"        return \"N/A\";"},{"lineNumber":87,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":89,"author":{"gitId":"tzexern"},"content":"    private void printTaskType(){"},{"lineNumber":90,"author":{"gitId":"tzexern"},"content":"        System.out.print(\"[\" + this.getTaskType() + \"]\");"},{"lineNumber":91,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":93,"author":{"gitId":"tzexern"},"content":"    private void printStatusIcon(){"},{"lineNumber":94,"author":{"gitId":"tzexern"},"content":"        System.out.print(\"[\" + this.getStatusIcon() + \"] \");"},{"lineNumber":95,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":97,"author":{"gitId":"tzexern"},"content":"    private void printTaskName(){"},{"lineNumber":98,"author":{"gitId":"tzexern"},"content":"        System.out.print(this.description);"},{"lineNumber":99,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":101,"author":{"gitId":"tzexern"},"content":"    private boolean isEmpty(Task t){"},{"lineNumber":102,"author":{"gitId":"tzexern"},"content":"        return t.description.equals(\"\");"},{"lineNumber":103,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":105,"author":{"gitId":"tzexern"},"content":"    public void printInputErrorMessage(String userInput) {"},{"lineNumber":106,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"This command entered is incomplete: \""},{"lineNumber":107,"author":{"gitId":"tzexern"},"content":"                + userInput + \"\\n\");"},{"lineNumber":108,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Please enter the command as follows:\");"},{"lineNumber":109,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":111,"author":{"gitId":"tzexern"},"content":"    public void printInvalidDateInputMessage(String userInput) {"},{"lineNumber":112,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"The date entered is invalid: \""},{"lineNumber":113,"author":{"gitId":"tzexern"},"content":"                + userInput + \"\\n\");"},{"lineNumber":114,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Please enter the command as follows:\");"},{"lineNumber":115,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"tzexern"},"content":"}"}],"authorContributionMap":{"tzexern":116}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"public class Todo extends Task{"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"    private static final String ALPHABET_T \u003d \"T\";"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"    public Todo(String d){"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"        super(d);"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"    public String getTaskType(){"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"        return ALPHABET_T;"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"    public void printInputErrorMessage(String userInput) {"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"        super.printInputErrorMessage(userInput);"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"  todo [task name]\\n\""},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"                + \"    e.g. todo read book\");"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"}"}],"authorContributionMap":{"tzexern":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"event project meeting /at Monday 6-8pm"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"list"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"done 4"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"list"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"todo wash clothes"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"deadline group project /by April 3rd"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"list"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"bye"}],"authorContributionMap":{"tzexern":13}}]
