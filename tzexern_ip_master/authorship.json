[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"import duke.storage.Storage;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":"import duke.task.Deadline;"},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"import duke.task.Event;"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"import duke.task.Todo;"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"import duke.ui.TextUi;"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"import duke.util.Util;"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"import duke.parser.Parser;"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"    public Duke(){"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"    public void run(){"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"        String taskType;"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"        String taskName;"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"        String by \u003d \"\";"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"        String at \u003d \"\";"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"        Scanner splitInputScanner;"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"        ArrayList\u003cString\u003e parsedList;"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"        TextUi.showLogo();"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"        TextUi.showDividingLine();"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"        // Print welcome message"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"        TextUi.showDividingLine();"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"        TextUi.showWelcomeMessage();"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"        TextUi.showDividingLine();"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"        // Load up save file, create file if it\u0027s not been created"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"        Storage.loadFile();"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"        TextUi.showDividingLine();"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"        // Scan for input"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"        Scanner userInputScanner \u003d new Scanner(System.in);"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"        String userInput \u003d userInputScanner.nextLine();"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":"        parsedList \u003d Parser.parseInput(userInput);"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":"        taskType \u003d Parser.parseTaskType(parsedList);"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"        taskName \u003d Parser.parseTaskName(parsedList);"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"        processCommands(taskType, taskName, userInput);"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":"        // Print Bye Message"},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"        TextUi.showDividingLine();"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"        TextUi.showByeMessage();"},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"        TextUi.showDividingLine();"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"    private void processCommands(String taskType, String taskName, String userInput) {"},{"lineNumber":54,"author":{"gitId":"tzexern"},"content":"        Scanner userInputScanner \u003d new Scanner(System.in);"},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":"        String byTime;"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"        String atTime;"},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"        ArrayList\u003cString\u003e parsedList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"        // Loop for user input until \"bye\" is inputted"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"        while(!Util.isBye(taskType)) {"},{"lineNumber":60,"author":{"gitId":"tzexern"},"content":"            switch (taskType) {"},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":"            case \"todo\":"},{"lineNumber":62,"author":{"gitId":"tzexern"},"content":"                Task t \u003d new Todo(taskName);"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"                TextUi.showDividingLine();"},{"lineNumber":64,"author":{"gitId":"tzexern"},"content":"                Task.addTaskWithValidation(userInput, t);"},{"lineNumber":65,"author":{"gitId":"tzexern"},"content":"                TextUi.showDividingLine();"},{"lineNumber":66,"author":{"gitId":"tzexern"},"content":"                Storage.attemptSaveFile();"},{"lineNumber":67,"author":{"gitId":"tzexern"},"content":"                break;"},{"lineNumber":68,"author":{"gitId":"tzexern"},"content":"            case \"deadline\":"},{"lineNumber":69,"author":{"gitId":"tzexern"},"content":"                byTime \u003d Util.extractTime(taskName);"},{"lineNumber":70,"author":{"gitId":"tzexern"},"content":"                taskName \u003d Util.extractTaskName(taskName);"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"                Task d \u003d new Deadline(taskName, byTime);"},{"lineNumber":72,"author":{"gitId":"tzexern"},"content":"                TextUi.showDividingLine();"},{"lineNumber":73,"author":{"gitId":"tzexern"},"content":"                Task.addTaskWithValidation(userInput, d);"},{"lineNumber":74,"author":{"gitId":"tzexern"},"content":"                TextUi.showDividingLine();"},{"lineNumber":75,"author":{"gitId":"tzexern"},"content":"                Storage.attemptSaveFile();"},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":"                break;"},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":"            case \"event\":"},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":"                atTime \u003d Util.extractTime(taskName);"},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"                taskName \u003d Util.extractTaskName(taskName);"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"                Task e \u003d new Event(taskName, atTime);"},{"lineNumber":81,"author":{"gitId":"tzexern"},"content":"                TextUi.showDividingLine();"},{"lineNumber":82,"author":{"gitId":"tzexern"},"content":"                Task.addTaskWithValidation(userInput, e);"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":"                TextUi.showDividingLine();"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":"                Storage.attemptSaveFile();"},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"                break;"},{"lineNumber":86,"author":{"gitId":"tzexern"},"content":"            case \"list\":"},{"lineNumber":87,"author":{"gitId":"tzexern"},"content":"                TextUi.showDividingLine();"},{"lineNumber":88,"author":{"gitId":"tzexern"},"content":"                Task.listTasks();"},{"lineNumber":89,"author":{"gitId":"tzexern"},"content":"                TextUi.showDividingLine();"},{"lineNumber":90,"author":{"gitId":"tzexern"},"content":"                break;"},{"lineNumber":91,"author":{"gitId":"tzexern"},"content":"            case \"delete\":"},{"lineNumber":92,"author":{"gitId":"tzexern"},"content":"                TextUi.showDividingLine();"},{"lineNumber":93,"author":{"gitId":"tzexern"},"content":"                Task.deleteTask(Util.getTaskIndex(userInput));"},{"lineNumber":94,"author":{"gitId":"tzexern"},"content":"                TextUi.showDividingLine();"},{"lineNumber":95,"author":{"gitId":"tzexern"},"content":"                Storage.attemptSaveFile();"},{"lineNumber":96,"author":{"gitId":"tzexern"},"content":"                break;"},{"lineNumber":97,"author":{"gitId":"tzexern"},"content":"            case \"done\":"},{"lineNumber":98,"author":{"gitId":"tzexern"},"content":"                TextUi.showDividingLine();"},{"lineNumber":99,"author":{"gitId":"tzexern"},"content":"                Task.markAsDone(Util.getTaskIndex(userInput));"},{"lineNumber":100,"author":{"gitId":"tzexern"},"content":"                TextUi.showDividingLine();"},{"lineNumber":101,"author":{"gitId":"tzexern"},"content":"                Storage.attemptSaveFile();"},{"lineNumber":102,"author":{"gitId":"tzexern"},"content":"                break;"},{"lineNumber":103,"author":{"gitId":"tzexern"},"content":"            default:"},{"lineNumber":104,"author":{"gitId":"tzexern"},"content":"                TextUi.showDividingLine();"},{"lineNumber":105,"author":{"gitId":"tzexern"},"content":"                TextUi.showUnrecognizedCommandError();"},{"lineNumber":106,"author":{"gitId":"tzexern"},"content":"                TextUi.showDividingLine();"},{"lineNumber":107,"author":{"gitId":"tzexern"},"content":"                break;"},{"lineNumber":108,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":109,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":110,"author":{"gitId":"tzexern"},"content":"            // Scan input again"},{"lineNumber":111,"author":{"gitId":"tzexern"},"content":"            userInput \u003d userInputScanner.nextLine();"},{"lineNumber":112,"author":{"gitId":"tzexern"},"content":"            Parser.emptyList(parsedList);"},{"lineNumber":113,"author":{"gitId":"tzexern"},"content":"            parsedList \u003d Parser.parseInput(userInput);"},{"lineNumber":114,"author":{"gitId":"tzexern"},"content":"            taskType \u003d Parser.parseTaskType(parsedList);"},{"lineNumber":115,"author":{"gitId":"tzexern"},"content":"            taskName \u003d Parser.parseTaskName(parsedList);"},{"lineNumber":116,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":120,"author":{"gitId":"tzexern"},"content":"        new Duke().run();"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"tzexern":118,"-":4}},{"path":"src/main/java/duke/exceptions/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"public class EmptyInputException extends Exception {"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"}"}],"authorContributionMap":{"tzexern":4}},{"path":"src/main/java/duke/exceptions/IncompleteInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"public class IncompleteInputException extends Exception {"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"}"}],"authorContributionMap":{"tzexern":4}},{"path":"src/main/java/duke/exceptions/InvalidDateInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"public class InvalidDateInputException extends Exception {"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"}"}],"authorContributionMap":{"tzexern":4}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"import duke.util.Util;"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"import javax.lang.model.type.ArrayType;"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"    public Parser(){"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"    public static ArrayList\u003cString\u003e parseInput(String userInput){"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"        String taskType;"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"        String taskName;"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"        Scanner splitInputScanner;"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"        ArrayList\u003cString\u003e parsedList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"        // Separate taskType and taskName(may contain"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"        // dates/time) if applicable"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"        userInput \u003d userInput.trim();   // removes leading and trailing spaces"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"        if(Util.isOneWord(userInput)) {"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"            taskType \u003d userInput;"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"            taskName \u003d \"\";"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"        else{"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"            splitInputScanner \u003d new Scanner(userInput);"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"            // Extract task type"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"            taskType \u003d splitInputScanner.next().toLowerCase();"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"            // Extract task description"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"            taskName \u003d splitInputScanner.nextLine();"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"        parsedList.add(taskName);"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"        parsedList.add(taskType);"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"        return parsedList;"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"    public static String parseTaskName(ArrayList\u003cString\u003e parsedList) {"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"        return parsedList.get(0);"},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"    public static String parseTaskType(ArrayList\u003cString\u003e parsedList) {"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"        return parsedList.get(1);"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":"    public static void emptyList(ArrayList\u003cString\u003e parsedList){"},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"        for(String item : parsedList) {"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"            parsedList.remove(item);"},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"}"}],"authorContributionMap":{"tzexern":52}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"    public Storage(){"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"    // Load the save file and update ArrayList"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"    public static void loadFile(){"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"            File f \u003d new File(\"duke.txt\");"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"            if (f.createNewFile()){"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"                System.out.println(\"Save file is created: \" + f.getName());"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"            } else {"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"                try {"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"                    Storage.loadList(\"duke.txt\");"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"                } catch (FileNotFoundException e){"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"                    System.out.println(\"Save file not found.\");"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"                    e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"                }"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"                System.out.println(\"Save file loaded successfully.\");"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"            System.out.println(\"Save file creation failed.\");"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"            e.printStackTrace();"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"    // Recreate the ArrayList from save file"},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":"    public static void loadList(String filePath) throws FileNotFoundException{"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":"        File f \u003d new File(filePath);"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"        if(s.hasNext()) {"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"            s.nextLine();       // Skip the first line"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":"        while (s.hasNext()){"},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"            String listEntry \u003d s.nextLine();"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"            Scanner listEntryS \u003d new Scanner(listEntry);"},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"            String taskType \u003d listEntryS.next();"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"            String[] parser;"},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"            String taskName;"},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"            String taskStatus;"},{"lineNumber":54,"author":{"gitId":"tzexern"},"content":"            String date;"},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":"            switch (taskType){"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"            case \"T\":"},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"                parser \u003d listEntry.split(\"\\\\|\");"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"                taskName \u003d parser[2].trim();"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"                Task t \u003d new Todo(taskName);"},{"lineNumber":60,"author":{"gitId":"tzexern"},"content":"                t.addTaskToArrayList();"},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":"                taskStatus \u003d parser[1].trim();"},{"lineNumber":62,"author":{"gitId":"tzexern"},"content":"                if (taskStatus.equals(\"1\")){"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"                    t.setIsDone();"},{"lineNumber":64,"author":{"gitId":"tzexern"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"tzexern"},"content":"                break;"},{"lineNumber":66,"author":{"gitId":"tzexern"},"content":"            case \"D\":"},{"lineNumber":67,"author":{"gitId":"tzexern"},"content":"                parser \u003d listEntry.split(\"\\\\|\");"},{"lineNumber":68,"author":{"gitId":"tzexern"},"content":"                taskName \u003d parser[2].trim();"},{"lineNumber":69,"author":{"gitId":"tzexern"},"content":"                date \u003d parser[3].trim();"},{"lineNumber":70,"author":{"gitId":"tzexern"},"content":"                Task d \u003d new Deadline(taskName, date);"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"                d.addTaskToArrayList();"},{"lineNumber":72,"author":{"gitId":"tzexern"},"content":"                taskStatus \u003d parser[1].trim();"},{"lineNumber":73,"author":{"gitId":"tzexern"},"content":"                if (taskStatus.equals(\"1\")){"},{"lineNumber":74,"author":{"gitId":"tzexern"},"content":"                    d.setIsDone();"},{"lineNumber":75,"author":{"gitId":"tzexern"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":"                break;"},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":"            case \"E\":"},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":"                parser \u003d listEntry.split(\"\\\\|\");"},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"                taskName \u003d parser[2].trim();"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"                date \u003d parser[3].trim();"},{"lineNumber":81,"author":{"gitId":"tzexern"},"content":"                Task e \u003d new Event(taskName, date);"},{"lineNumber":82,"author":{"gitId":"tzexern"},"content":"                e.addTaskToArrayList();"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":"                taskStatus \u003d parser[1].trim();"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":"                if (taskStatus.equals(\"1\")){"},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"                    e.setIsDone();"},{"lineNumber":86,"author":{"gitId":"tzexern"},"content":"                }"},{"lineNumber":87,"author":{"gitId":"tzexern"},"content":"                break;"},{"lineNumber":88,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":92,"author":{"gitId":"tzexern"},"content":"    public static void attemptSaveFile() {"},{"lineNumber":93,"author":{"gitId":"tzexern"},"content":"        try {"},{"lineNumber":94,"author":{"gitId":"tzexern"},"content":"            Storage.saveFile(\"duke.txt\");"},{"lineNumber":95,"author":{"gitId":"tzexern"},"content":"        } catch (IOException e){"},{"lineNumber":96,"author":{"gitId":"tzexern"},"content":"            System.out.println(\"Fail to save file.\");"},{"lineNumber":97,"author":{"gitId":"tzexern"},"content":"            e.printStackTrace();"},{"lineNumber":98,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":101,"author":{"gitId":"tzexern"},"content":"    public static void saveFile(String filePath) throws IOException{"},{"lineNumber":102,"author":{"gitId":"tzexern"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":103,"author":{"gitId":"tzexern"},"content":"        fw.write(\"List of tasks: \" + System.lineSeparator());"},{"lineNumber":104,"author":{"gitId":"tzexern"},"content":"        for (int i \u003d 0; i \u003c Task.getTaskCount(); i++) {"},{"lineNumber":105,"author":{"gitId":"tzexern"},"content":"            fw.write(Task.getTask(i));"},{"lineNumber":106,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"tzexern"},"content":"        fw.close();"},{"lineNumber":108,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"tzexern"},"content":"}"}],"authorContributionMap":{"tzexern":109}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.EmptyInputException;"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.IncompleteInputException;"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.InvalidDateInputException;"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"public class Deadline extends Task{"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"    private static final String ALPHABET_D \u003d \"D\";"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"    private String byTime;"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"    private static final String JAN \u003d \"01\";"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"    private static final String FEB \u003d \"02\";"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"    private static final String MAR \u003d \"03\";"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"    private static final String APR \u003d \"04\";"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"    private static final String MAY \u003d \"05\";"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"    private static final String JUN \u003d \"06\";"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"    private static final String JUL \u003d \"07\";"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"    private static final String AUG \u003d \"08\";"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"    private static final String SEP \u003d \"09\";"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"    private static final String OCT \u003d \"10\";"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"    private static final String NOV \u003d \"11\";"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"    private static final String DEC \u003d \"12\";"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"    public Deadline(String d, String by){"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"        super(d);"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"        this.byTime \u003d by;"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"    public String getDate() {"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"        return this.byTime;"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"    public String getTaskType(){"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"        return ALPHABET_D;"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"    public void printTaskInformation(){"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"        super.printTaskInformation();"},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":"        this.printTime();"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"    public void printTime(){"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"        System.out.print(\" (by:\" + this.byTime + \")\");"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"    public void printInputErrorMessage(String userInput) {"},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"        super.printInputErrorMessage(userInput);"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"  deadline [deadline name] /by [MM-DD-YYYY]\\n\""},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"                + \"    e.g. deadline return book /by 03-28-2021\");"},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"    public void printInvalidDateInputMessage(String userInput) {"},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"        super.printInvalidDateInputMessage(userInput);"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"  deadline [deadline name] /by [MM-DD-YYYY]\\n\""},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"                + \"    e.g. deadline return book /by 03-28-2021\");"},{"lineNumber":60,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":62,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"    public void addTask() throws EmptyInputException, IncompleteInputException, InvalidDateInputException {"},{"lineNumber":64,"author":{"gitId":"tzexern"},"content":"        // Check if date field is valid"},{"lineNumber":65,"author":{"gitId":"tzexern"},"content":"        if (isIncomplete(this)){"},{"lineNumber":66,"author":{"gitId":"tzexern"},"content":"            throw new IncompleteInputException();"},{"lineNumber":67,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"tzexern"},"content":"        if (isInvalidDate(this)){"},{"lineNumber":69,"author":{"gitId":"tzexern"},"content":"            throw new InvalidDateInputException();"},{"lineNumber":70,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"        super.addTask();"},{"lineNumber":72,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":74,"author":{"gitId":"tzexern"},"content":"    private boolean isIncomplete(Deadline d){"},{"lineNumber":75,"author":{"gitId":"tzexern"},"content":"        return d.byTime.equals(\"\");"},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":"    private boolean isInvalidDate(Deadline d){"},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"        String[] splitDate \u003d d.byTime.trim().split(\"-\");"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"        // Formatting is incorrect"},{"lineNumber":81,"author":{"gitId":"tzexern"},"content":"        if (splitDate.length !\u003d 3){"},{"lineNumber":82,"author":{"gitId":"tzexern"},"content":"            return true;"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":"        // Check if date is within valid range"},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"        String month \u003d splitDate[0];"},{"lineNumber":86,"author":{"gitId":"tzexern"},"content":"        String day \u003d splitDate[1];"},{"lineNumber":87,"author":{"gitId":"tzexern"},"content":"        String year \u003d splitDate[2];"},{"lineNumber":88,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":89,"author":{"gitId":"tzexern"},"content":"        if (Integer.parseInt(month) \u003c 1 || Integer.parseInt(month) \u003e 12){"},{"lineNumber":90,"author":{"gitId":"tzexern"},"content":"            return true;"},{"lineNumber":91,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"tzexern"},"content":"        if (Integer.parseInt(year) \u003c 2021){"},{"lineNumber":93,"author":{"gitId":"tzexern"},"content":"            return true;"},{"lineNumber":94,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"tzexern"},"content":"        // Check day lower limit"},{"lineNumber":96,"author":{"gitId":"tzexern"},"content":"        if (Integer.parseInt(day) \u003c 1){"},{"lineNumber":97,"author":{"gitId":"tzexern"},"content":"            return true;"},{"lineNumber":98,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":100,"author":{"gitId":"tzexern"},"content":"        // Check day upper limit according to month"},{"lineNumber":101,"author":{"gitId":"tzexern"},"content":"        switch(month){"},{"lineNumber":102,"author":{"gitId":"tzexern"},"content":"        case FEB:"},{"lineNumber":103,"author":{"gitId":"tzexern"},"content":"            if (isLeapYear(Integer.parseInt(year))){"},{"lineNumber":104,"author":{"gitId":"tzexern"},"content":"                if (Integer.parseInt(day) \u003e 29){"},{"lineNumber":105,"author":{"gitId":"tzexern"},"content":"                    return true;"},{"lineNumber":106,"author":{"gitId":"tzexern"},"content":"                }"},{"lineNumber":107,"author":{"gitId":"tzexern"},"content":"            } else {"},{"lineNumber":108,"author":{"gitId":"tzexern"},"content":"                if (Integer.parseInt(day) \u003e 28){"},{"lineNumber":109,"author":{"gitId":"tzexern"},"content":"                    return true;"},{"lineNumber":110,"author":{"gitId":"tzexern"},"content":"                }"},{"lineNumber":111,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"tzexern"},"content":"        case JAN:"},{"lineNumber":113,"author":{"gitId":"tzexern"},"content":"        case MAR:"},{"lineNumber":114,"author":{"gitId":"tzexern"},"content":"        case MAY:"},{"lineNumber":115,"author":{"gitId":"tzexern"},"content":"        case JUL:"},{"lineNumber":116,"author":{"gitId":"tzexern"},"content":"        case AUG:"},{"lineNumber":117,"author":{"gitId":"tzexern"},"content":"        case OCT:"},{"lineNumber":118,"author":{"gitId":"tzexern"},"content":"        case DEC:"},{"lineNumber":119,"author":{"gitId":"tzexern"},"content":"            if (Integer.parseInt(day) \u003e 31){"},{"lineNumber":120,"author":{"gitId":"tzexern"},"content":"                return true;"},{"lineNumber":121,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"tzexern"},"content":"        case APR:"},{"lineNumber":123,"author":{"gitId":"tzexern"},"content":"        case JUN:"},{"lineNumber":124,"author":{"gitId":"tzexern"},"content":"        case SEP:"},{"lineNumber":125,"author":{"gitId":"tzexern"},"content":"        case NOV:"},{"lineNumber":126,"author":{"gitId":"tzexern"},"content":"            if (Integer.parseInt(day) \u003e 30){"},{"lineNumber":127,"author":{"gitId":"tzexern"},"content":"                return true;"},{"lineNumber":128,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":129,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"tzexern"},"content":"        return false;"},{"lineNumber":131,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":133,"author":{"gitId":"tzexern"},"content":"    private boolean isLeapYear(int year){"},{"lineNumber":134,"author":{"gitId":"tzexern"},"content":"        return (year % 4 \u003d\u003d 0);"},{"lineNumber":135,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"tzexern"},"content":"}"}],"authorContributionMap":{"tzexern":136}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.EmptyInputException;"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.IncompleteInputException;"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.InvalidDateInputException;"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"public class Event extends Task{"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"    private static final String ALPHABET_E \u003d \"E\";"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"    private String atTime;"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"    private static final String JAN \u003d \"01\";"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"    private static final String FEB \u003d \"02\";"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"    private static final String MAR \u003d \"03\";"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"    private static final String APR \u003d \"04\";"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"    private static final String MAY \u003d \"05\";"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"    private static final String JUN \u003d \"06\";"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"    private static final String JUL \u003d \"07\";"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"    private static final String AUG \u003d \"08\";"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"    private static final String SEP \u003d \"09\";"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"    private static final String OCT \u003d \"10\";"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"    private static final String NOV \u003d \"11\";"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"    private static final String DEC \u003d \"12\";"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"    public Event(String d, String at){"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"        super(d);"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"        this.atTime \u003d at;"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"    public String getDate() {"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"        return this.atTime;"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"    public String getTaskType(){"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"        return ALPHABET_E;"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"    public void printTaskInformation(){"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"        super.printTaskInformation();"},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":"        this.printTime();"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"    public void printTime(){"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"        System.out.print(\" (at:\" + this.atTime + \")\");"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"    public void printInputErrorMessage(String userInput) {"},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"        super.printInputErrorMessage(userInput);"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"  event [event name] /at [MM-DD-YYYY]\\n\""},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"                + \"    e.g. event project meeting /at 03-28-2021\");"},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"    public void printInvalidDateInputMessage(String userInput) {"},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"        super.printInvalidDateInputMessage(userInput);"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"  event [event name] /at [MM-DD-YYYY]\\n\""},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"                + \"    e.g. event project meeting /at 03-28-2021\");"},{"lineNumber":60,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":62,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"    public void addTask() throws EmptyInputException, IncompleteInputException, InvalidDateInputException {"},{"lineNumber":64,"author":{"gitId":"tzexern"},"content":"        // Check if date field is valid"},{"lineNumber":65,"author":{"gitId":"tzexern"},"content":"        if (isIncomplete(this)){"},{"lineNumber":66,"author":{"gitId":"tzexern"},"content":"            throw new IncompleteInputException();"},{"lineNumber":67,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"tzexern"},"content":"        if (isInvalidDate(this)){"},{"lineNumber":69,"author":{"gitId":"tzexern"},"content":"            throw new InvalidDateInputException();"},{"lineNumber":70,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"        super.addTask();"},{"lineNumber":72,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":74,"author":{"gitId":"tzexern"},"content":"    private boolean isIncomplete(Event e){"},{"lineNumber":75,"author":{"gitId":"tzexern"},"content":"        return e.atTime.equals(\"\");"},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":"    private boolean isInvalidDate(Event e){"},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"        String[] splitDate \u003d e.atTime.trim().split(\"-\");"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"        // Formatting is incorrect"},{"lineNumber":81,"author":{"gitId":"tzexern"},"content":"        if (splitDate.length !\u003d 3){"},{"lineNumber":82,"author":{"gitId":"tzexern"},"content":"            return true;"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":"        // Check if date is within valid range"},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"        String month \u003d splitDate[0];"},{"lineNumber":86,"author":{"gitId":"tzexern"},"content":"        String day \u003d splitDate[1];"},{"lineNumber":87,"author":{"gitId":"tzexern"},"content":"        String year \u003d splitDate[2];"},{"lineNumber":88,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":89,"author":{"gitId":"tzexern"},"content":"        if (Integer.parseInt(month) \u003c 1 || Integer.parseInt(month) \u003e 12){"},{"lineNumber":90,"author":{"gitId":"tzexern"},"content":"            return true;"},{"lineNumber":91,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"tzexern"},"content":"        if (Integer.parseInt(year) \u003c 2021){"},{"lineNumber":93,"author":{"gitId":"tzexern"},"content":"            return true;"},{"lineNumber":94,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"tzexern"},"content":"        // Check day lower limit"},{"lineNumber":96,"author":{"gitId":"tzexern"},"content":"        if (Integer.parseInt(day) \u003c 1){"},{"lineNumber":97,"author":{"gitId":"tzexern"},"content":"            return true;"},{"lineNumber":98,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":100,"author":{"gitId":"tzexern"},"content":"        // Check day upper limit according to month"},{"lineNumber":101,"author":{"gitId":"tzexern"},"content":"        switch(month){"},{"lineNumber":102,"author":{"gitId":"tzexern"},"content":"        case FEB:"},{"lineNumber":103,"author":{"gitId":"tzexern"},"content":"            if (isLeapYear(Integer.parseInt(year))){"},{"lineNumber":104,"author":{"gitId":"tzexern"},"content":"                if (Integer.parseInt(day) \u003e 29){"},{"lineNumber":105,"author":{"gitId":"tzexern"},"content":"                    return true;"},{"lineNumber":106,"author":{"gitId":"tzexern"},"content":"                }"},{"lineNumber":107,"author":{"gitId":"tzexern"},"content":"            } else {"},{"lineNumber":108,"author":{"gitId":"tzexern"},"content":"                if (Integer.parseInt(day) \u003e 28){"},{"lineNumber":109,"author":{"gitId":"tzexern"},"content":"                    return true;"},{"lineNumber":110,"author":{"gitId":"tzexern"},"content":"                }"},{"lineNumber":111,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"tzexern"},"content":"        case JAN:"},{"lineNumber":113,"author":{"gitId":"tzexern"},"content":"        case MAR:"},{"lineNumber":114,"author":{"gitId":"tzexern"},"content":"        case MAY:"},{"lineNumber":115,"author":{"gitId":"tzexern"},"content":"        case JUL:"},{"lineNumber":116,"author":{"gitId":"tzexern"},"content":"        case AUG:"},{"lineNumber":117,"author":{"gitId":"tzexern"},"content":"        case OCT:"},{"lineNumber":118,"author":{"gitId":"tzexern"},"content":"        case DEC:"},{"lineNumber":119,"author":{"gitId":"tzexern"},"content":"            if (Integer.parseInt(day) \u003e 31){"},{"lineNumber":120,"author":{"gitId":"tzexern"},"content":"                return true;"},{"lineNumber":121,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"tzexern"},"content":"        case APR:"},{"lineNumber":123,"author":{"gitId":"tzexern"},"content":"        case JUN:"},{"lineNumber":124,"author":{"gitId":"tzexern"},"content":"        case SEP:"},{"lineNumber":125,"author":{"gitId":"tzexern"},"content":"        case NOV:"},{"lineNumber":126,"author":{"gitId":"tzexern"},"content":"            if (Integer.parseInt(day) \u003e 30){"},{"lineNumber":127,"author":{"gitId":"tzexern"},"content":"                return true;"},{"lineNumber":128,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":129,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"tzexern"},"content":"        return false;"},{"lineNumber":131,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":133,"author":{"gitId":"tzexern"},"content":"    private boolean isLeapYear(int year){"},{"lineNumber":134,"author":{"gitId":"tzexern"},"content":"        return (year % 4 \u003d\u003d 0);"},{"lineNumber":135,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":137,"author":{"gitId":"tzexern"},"content":"}"}],"authorContributionMap":{"tzexern":137}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.EmptyInputException;"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.IncompleteInputException;"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"import duke.exceptions.InvalidDateInputException;"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"    private boolean isDone;"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"    private static int taskCount \u003d 0;"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"    // Task Constructor"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"    public Task(String description){"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"        this.isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"    public static void addTaskWithValidation(String userInput, Task t) {"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"            t.addTask();"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"        } catch (EmptyInputException | IncompleteInputException e){"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"            t.printInputErrorMessage(userInput);"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"        } catch (InvalidDateInputException e){"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"            t.printInvalidDateInputMessage(userInput);"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"    public String getStatusIcon(){"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"        return(this.isDone ? \"x\" : \" \");"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"    public void setIsDone(){"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"        this.isDone \u003d true;"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"    public static void markAsDone(String i){"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"        int index \u003d Integer.parseInt(i);"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"        Task t \u003d taskList.get(index-1);"},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":"        t.isDone \u003d true;"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"        System.out.print(\"  \");"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"        t.printTaskInformation();"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"\");"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"    // Add Task to taskList and increment taskCount"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"    public void addTask() throws"},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"            EmptyInputException, IncompleteInputException, InvalidDateInputException {"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"        // Throw Exception if no valid task is detected"},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"        if (isEmpty(this)){"},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"            throw new EmptyInputException();"},{"lineNumber":54,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Got it, I\u0027ve added this task:\");"},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"        System.out.print(\"  \");"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"        this.printTaskInformation();"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"\");"},{"lineNumber":60,"author":{"gitId":"tzexern"},"content":"        addTaskToArrayList();"},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":"        printTaskCount();"},{"lineNumber":62,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":64,"author":{"gitId":"tzexern"},"content":"    public static void deleteTask(String i){"},{"lineNumber":65,"author":{"gitId":"tzexern"},"content":"        int index \u003d Integer.parseInt(i);"},{"lineNumber":66,"author":{"gitId":"tzexern"},"content":"        Task t \u003d taskList.get(index-1);"},{"lineNumber":67,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":68,"author":{"gitId":"tzexern"},"content":"        System.out.print(\"  \");"},{"lineNumber":69,"author":{"gitId":"tzexern"},"content":"        t.printTaskInformation();"},{"lineNumber":70,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"\");"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"        taskList.remove(t);"},{"lineNumber":72,"author":{"gitId":"tzexern"},"content":"        taskCount--;"},{"lineNumber":73,"author":{"gitId":"tzexern"},"content":"        printTaskCount();"},{"lineNumber":74,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":"    public void addTaskToArrayList() {"},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":"        taskList.add(this);"},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"        taskCount++;"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":82,"author":{"gitId":"tzexern"},"content":"    private static void printSuccessfulTaskAddition() {"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":"        if(taskCount \u003d\u003d 1) {"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":"            System.out.println(\"Now you have \" + taskCount + \" task in the list.\");"},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"tzexern"},"content":"        else{"},{"lineNumber":87,"author":{"gitId":"tzexern"},"content":"            System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");"},{"lineNumber":88,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":91,"author":{"gitId":"tzexern"},"content":"    public static void listTasks(){"},{"lineNumber":92,"author":{"gitId":"tzexern"},"content":"        int index \u003d 1;"},{"lineNumber":93,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":94,"author":{"gitId":"tzexern"},"content":"        for(Task t : taskList){"},{"lineNumber":95,"author":{"gitId":"tzexern"},"content":"            printIndex(index);"},{"lineNumber":96,"author":{"gitId":"tzexern"},"content":"            t.printTaskInformation();"},{"lineNumber":97,"author":{"gitId":"tzexern"},"content":"            System.out.println(\"\");"},{"lineNumber":98,"author":{"gitId":"tzexern"},"content":"            index++;"},{"lineNumber":99,"author":{"gitId":"tzexern"},"content":"            if(!(taskCount \u003e index - 1)){"},{"lineNumber":100,"author":{"gitId":"tzexern"},"content":"                break;"},{"lineNumber":101,"author":{"gitId":"tzexern"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":105,"author":{"gitId":"tzexern"},"content":"    private static void printIndex(int index) {"},{"lineNumber":106,"author":{"gitId":"tzexern"},"content":"        System.out.print(Integer.toString(index) + \".\");"},{"lineNumber":107,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":109,"author":{"gitId":"tzexern"},"content":"    public void printTaskInformation(){"},{"lineNumber":110,"author":{"gitId":"tzexern"},"content":"        this.printTaskType();"},{"lineNumber":111,"author":{"gitId":"tzexern"},"content":"        this.printStatusIcon();"},{"lineNumber":112,"author":{"gitId":"tzexern"},"content":"        this.printTaskName();"},{"lineNumber":113,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":115,"author":{"gitId":"tzexern"},"content":"    public String getTaskType(){"},{"lineNumber":116,"author":{"gitId":"tzexern"},"content":"        return \"N/A\";"},{"lineNumber":117,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":119,"author":{"gitId":"tzexern"},"content":"    public static int getTaskCount(){"},{"lineNumber":120,"author":{"gitId":"tzexern"},"content":"        return taskList.size();"},{"lineNumber":121,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":123,"author":{"gitId":"tzexern"},"content":"    public String getDate(){"},{"lineNumber":124,"author":{"gitId":"tzexern"},"content":"        return \"N/A\";"},{"lineNumber":125,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":127,"author":{"gitId":"tzexern"},"content":"    public static String getTask(int i){"},{"lineNumber":128,"author":{"gitId":"tzexern"},"content":"        Task t \u003d taskList.get(i);"},{"lineNumber":129,"author":{"gitId":"tzexern"},"content":"        String taskType \u003d t.getTaskType();"},{"lineNumber":130,"author":{"gitId":"tzexern"},"content":"        String statusIcon \u003d (t.getStatusIcon().equals(\"x\") ? \"1\" : \"0\");"},{"lineNumber":131,"author":{"gitId":"tzexern"},"content":"        if (t instanceof Todo){"},{"lineNumber":132,"author":{"gitId":"tzexern"},"content":"            return taskType + \" | \" + statusIcon  + \" | \" + t.description"},{"lineNumber":133,"author":{"gitId":"tzexern"},"content":"                    + System.lineSeparator();"},{"lineNumber":134,"author":{"gitId":"tzexern"},"content":"        } else {"},{"lineNumber":135,"author":{"gitId":"tzexern"},"content":"            return taskType + \" | \" + statusIcon + \" | \" + t.description"},{"lineNumber":136,"author":{"gitId":"tzexern"},"content":"                    + \" | \" + t.getDate() + System.lineSeparator() ;"},{"lineNumber":137,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":140,"author":{"gitId":"tzexern"},"content":"    private static void printTaskCount() {"},{"lineNumber":141,"author":{"gitId":"tzexern"},"content":"        printSuccessfulTaskAddition();"},{"lineNumber":142,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":144,"author":{"gitId":"tzexern"},"content":"    private void printTaskType(){"},{"lineNumber":145,"author":{"gitId":"tzexern"},"content":"        System.out.print(\"[\" + this.getTaskType() + \"]\");"},{"lineNumber":146,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":148,"author":{"gitId":"tzexern"},"content":"    private void printStatusIcon(){"},{"lineNumber":149,"author":{"gitId":"tzexern"},"content":"        System.out.print(\"[\" + this.getStatusIcon() + \"] \");"},{"lineNumber":150,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":152,"author":{"gitId":"tzexern"},"content":"    private void printTaskName(){"},{"lineNumber":153,"author":{"gitId":"tzexern"},"content":"        System.out.print(this.description);"},{"lineNumber":154,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":156,"author":{"gitId":"tzexern"},"content":"    private boolean isEmpty(Task t){"},{"lineNumber":157,"author":{"gitId":"tzexern"},"content":"        return t.description.equals(\"\");"},{"lineNumber":158,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":160,"author":{"gitId":"tzexern"},"content":"    public void printInputErrorMessage(String userInput) {"},{"lineNumber":161,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"This command entered is incomplete: \""},{"lineNumber":162,"author":{"gitId":"tzexern"},"content":"                + userInput + \"\\n\");"},{"lineNumber":163,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Please enter the command as follows:\");"},{"lineNumber":164,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":166,"author":{"gitId":"tzexern"},"content":"    public void printInvalidDateInputMessage(String userInput) {"},{"lineNumber":167,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"The date entered is invalid: \""},{"lineNumber":168,"author":{"gitId":"tzexern"},"content":"                + userInput + \"\\n\");"},{"lineNumber":169,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Please enter the command as follows:\");"},{"lineNumber":170,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":172,"author":{"gitId":"tzexern"},"content":"}"}],"authorContributionMap":{"tzexern":172}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"public class Todo extends Task{"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"    private static final String ALPHABET_T \u003d \"T\";"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"    public Todo(String d){"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"        super(d);"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"    public String getTaskType(){"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"        return ALPHABET_T;"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"    public void printInputErrorMessage(String userInput) {"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"        super.printInputErrorMessage(userInput);"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"  todo [task name]\\n\""},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"                + \"    e.g. todo read book\");"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"}"}],"authorContributionMap":{"tzexern":21}},{"path":"src/main/java/duke/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"public class TextUi {"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"    public TextUi(){"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"    public static void showDividingLine() {"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"_____________________________________________________\");"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"    public static void showLogo(){"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"        System.out.println(logo);"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"    public static void showWelcomeMessage() {"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"        System.out.print(\"What can I do for you?\\n\");"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"    public static void showByeMessage() {"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Bye. Hope to see you again soon! :3\");"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"    public static void showUnrecognizedCommandError() {"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Uh oh this command is not available :\u003c\");"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Refer to the user guide for more help :\u003e\");"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"}"}],"authorContributionMap":{"tzexern":35}},{"path":"src/main/java/duke/util/Util.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package duke.util;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"public class Util {"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"    public static boolean isEmpty(String s){"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"        return s.equals(\"\");"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"    public static boolean isOneWord(String userInput) {"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"        return !userInput.contains(\" \");"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"    public static String extractTime(String s){"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"        // If s is empty"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"        if (isEmpty(s)){"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"            return \"\";"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"        String[] splitArray \u003d s.split(\"/\");"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"        // If there is no date field"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"        if (splitArray.length \u003c 2){"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"            return \"\";"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"        // If s is invalid input"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"        if (splitArray[1].split(\" \").length !\u003d 2){"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"            return \"\";"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"        Scanner sc \u003d new Scanner(splitArray[1]);"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"        sc.next();              // remove \u0027by\u0027 or \u0027at\u0027"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"        return sc.nextLine();   // extract time/date"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"    public static String extractTaskName(String s){"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"        // If s is empty"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"        if (isEmpty(s)){"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"            return \"\";"},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"        String[] splitArray \u003d s.split(\"/\");"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"        return splitArray[0];"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"    public static String getTaskIndex(String userInput) {"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"        String[] userInputSplitted;"},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"        String taskIndex;"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"        userInputSplitted \u003d userInput.split(\" \");"},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"        taskIndex \u003d userInputSplitted[1];"},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"        return taskIndex;"},{"lineNumber":54,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"    public static boolean isBye(String taskType) {"},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"        return taskType.equals(\"bye\");"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"}"}],"authorContributionMap":{"tzexern":59}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"event project meeting /at Monday 6-8pm"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"list"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"done 4"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"list"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"todo wash clothes"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"deadline group project /by April 3rd"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"list"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"bye"}],"authorContributionMap":{"tzexern":13}}]
