[{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"T|true|read book"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":"D|false|return book|June 6th"},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"E|false|project meeting|Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"T|true|join sports club"}],"authorContributionMap":{"Zufiqqar":4}},{"path":"src/main/java/duke/app/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.app;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.file.FileOperation;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.Deadline;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.Event;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.Todo;"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"import  java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    static final int MAX_NO_OF_TASKS \u003d 100;"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"        showWelcomeMessage();"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"        ArrayList\u003cTask\u003e userTasks \u003d new ArrayList\u003c\u003e(MAX_NO_OF_TASKS);"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"        boolean exitLoopStatus \u003d false;"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"        Scanner inputCommand \u003d new Scanner(System.in);"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"        String userInput;"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"        FileOperation.readFile(userTasks);"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"        while(true){"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"            userInput \u003d inputCommand.nextLine();"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"            String[] individualWords \u003d userInput.split(\" \", 2);"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"            switch(individualWords[0].toLowerCase()){"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"            case \"list\":"},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"                displayListOfActivities(userTasks);"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"                break;"},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"            case \"todo\":"},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":"                createTodoTask(userTasks, individualWords);"},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":"                FileOperation.writeFile(userTasks);"},{"lineNumber":35,"author":{"gitId":"Zufiqqar"},"content":"                break;"},{"lineNumber":36,"author":{"gitId":"Zufiqqar"},"content":"            case \"deadline\":"},{"lineNumber":37,"author":{"gitId":"Zufiqqar"},"content":"                createDeadlineTask(userTasks, individualWords);"},{"lineNumber":38,"author":{"gitId":"Zufiqqar"},"content":"                FileOperation.writeFile(userTasks);"},{"lineNumber":39,"author":{"gitId":"Zufiqqar"},"content":"                break;"},{"lineNumber":40,"author":{"gitId":"Zufiqqar"},"content":"            case \"event\":"},{"lineNumber":41,"author":{"gitId":"Zufiqqar"},"content":"                createEventTask(userTasks, individualWords);"},{"lineNumber":42,"author":{"gitId":"Zufiqqar"},"content":"                FileOperation.writeFile(userTasks);"},{"lineNumber":43,"author":{"gitId":"Zufiqqar"},"content":"                break;"},{"lineNumber":44,"author":{"gitId":"Zufiqqar"},"content":"            case \"done\":"},{"lineNumber":45,"author":{"gitId":"Zufiqqar"},"content":"                markActivityAsDone(userTasks, individualWords);"},{"lineNumber":46,"author":{"gitId":"Zufiqqar"},"content":"                FileOperation.writeFile(userTasks);"},{"lineNumber":47,"author":{"gitId":"Zufiqqar"},"content":"                break;"},{"lineNumber":48,"author":{"gitId":"Zufiqqar"},"content":"            case \"delete\":"},{"lineNumber":49,"author":{"gitId":"Zufiqqar"},"content":"                deleteATask(userTasks, individualWords);"},{"lineNumber":50,"author":{"gitId":"Zufiqqar"},"content":"                FileOperation.writeFile(userTasks);"},{"lineNumber":51,"author":{"gitId":"Zufiqqar"},"content":"                break;"},{"lineNumber":52,"author":{"gitId":"Zufiqqar"},"content":"            case \"bye\":"},{"lineNumber":53,"author":{"gitId":"Zufiqqar"},"content":"                exitLoopStatus \u003d terminateProgram();"},{"lineNumber":54,"author":{"gitId":"Zufiqqar"},"content":"                break;"},{"lineNumber":55,"author":{"gitId":"Zufiqqar"},"content":"            default:"},{"lineNumber":56,"author":{"gitId":"Zufiqqar"},"content":"                System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":57,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"Zufiqqar"},"content":"            if (checkLoopStatus(exitLoopStatus)) {"},{"lineNumber":59,"author":{"gitId":"Zufiqqar"},"content":"                break;"},{"lineNumber":60,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":64,"author":{"gitId":"Zufiqqar"},"content":"    private static void deleteATask(ArrayList\u003cTask\u003e userTasks, String[] individualWords) {"},{"lineNumber":65,"author":{"gitId":"Zufiqqar"},"content":"        int activityNumber;"},{"lineNumber":66,"author":{"gitId":"Zufiqqar"},"content":"        Task temporaryTask;"},{"lineNumber":67,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"Zufiqqar"},"content":"            activityNumber \u003d Integer.parseInt(individualWords[1]);"},{"lineNumber":69,"author":{"gitId":"Zufiqqar"},"content":"            temporaryTask \u003d userTasks.get(activityNumber-1);"},{"lineNumber":70,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.remove(temporaryTask);"},{"lineNumber":71,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":72,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(temporaryTask.toString());"},{"lineNumber":73,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"Now you have \" + userTasks.size() + \" tasks in the list. \");"},{"lineNumber":74,"author":{"gitId":"Zufiqqar"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":75,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"Invalid task number\");"},{"lineNumber":76,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":79,"author":{"gitId":"Zufiqqar"},"content":"    private static boolean checkLoopStatus(boolean exitLoopStatus) {"},{"lineNumber":80,"author":{"gitId":"Zufiqqar"},"content":"        if(exitLoopStatus){"},{"lineNumber":81,"author":{"gitId":"Zufiqqar"},"content":"            return true;"},{"lineNumber":82,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"Zufiqqar"},"content":"        return false;"},{"lineNumber":84,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":86,"author":{"gitId":"Zufiqqar"},"content":"    private static boolean terminateProgram() {"},{"lineNumber":87,"author":{"gitId":"Zufiqqar"},"content":"        boolean exitLoopStatus;"},{"lineNumber":88,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":89,"author":{"gitId":"Zufiqqar"},"content":"        exitLoopStatus \u003d true;"},{"lineNumber":90,"author":{"gitId":"Zufiqqar"},"content":"        return exitLoopStatus;"},{"lineNumber":91,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":93,"author":{"gitId":"Zufiqqar"},"content":"    private static void markActivityAsDone(ArrayList\u003cTask\u003e userTasks, String[] individualWords) {"},{"lineNumber":94,"author":{"gitId":"Zufiqqar"},"content":"        int activityNumber;"},{"lineNumber":95,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":96,"author":{"gitId":"Zufiqqar"},"content":"            activityNumber \u003d Integer.parseInt(individualWords[1]);"},{"lineNumber":97,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.get(activityNumber-1).setTaskStatus(true);"},{"lineNumber":98,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":99,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(userTasks.get(activityNumber-1).toString());"},{"lineNumber":100,"author":{"gitId":"Zufiqqar"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":101,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"Invalid task number\");"},{"lineNumber":102,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":105,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":106,"author":{"gitId":"Zufiqqar"},"content":"    private static void createEventTask(ArrayList\u003cTask\u003e userTasks, String[] individualWords) {"},{"lineNumber":107,"author":{"gitId":"Zufiqqar"},"content":"        String newUserTask;"},{"lineNumber":108,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":109,"author":{"gitId":"Zufiqqar"},"content":"            newUserTask \u003d individualWords[1].split(\"/at\")[0];"},{"lineNumber":110,"author":{"gitId":"Zufiqqar"},"content":"            String eventTime \u003d individualWords[1].split(\"/at\")[1];"},{"lineNumber":111,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.add(new Event(newUserTask, eventTime));"},{"lineNumber":112,"author":{"gitId":"Zufiqqar"},"content":"            showTaskCreationMessage(userTasks.get(userTasks.size()-1), userTasks.size());"},{"lineNumber":113,"author":{"gitId":"Zufiqqar"},"content":"        } catch (ArrayIndexOutOfBoundsException e){"},{"lineNumber":114,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"â˜¹ OOPS!!! The description or date of a event cannot be empty.\");"},{"lineNumber":115,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":118,"author":{"gitId":"Zufiqqar"},"content":"    private static void createDeadlineTask(ArrayList\u003cTask\u003e userTasks, String[] individualWords) {"},{"lineNumber":119,"author":{"gitId":"Zufiqqar"},"content":"        String newUserTask;"},{"lineNumber":120,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":121,"author":{"gitId":"Zufiqqar"},"content":"            newUserTask \u003d individualWords[1].split(\"/by\")[0];"},{"lineNumber":122,"author":{"gitId":"Zufiqqar"},"content":"            String date \u003d individualWords[1].split(\"/by\")[1];"},{"lineNumber":123,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.add(new Deadline(newUserTask, date));"},{"lineNumber":124,"author":{"gitId":"Zufiqqar"},"content":"            showTaskCreationMessage(userTasks.get(userTasks.size()-1), userTasks.size());"},{"lineNumber":125,"author":{"gitId":"Zufiqqar"},"content":"        } catch (ArrayIndexOutOfBoundsException e){"},{"lineNumber":126,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"â˜¹ OOPS!!! The description or date of a deadline cannot be empty.\");"},{"lineNumber":127,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":130,"author":{"gitId":"Zufiqqar"},"content":"    private static void createTodoTask(ArrayList\u003cTask\u003e userTasks, String[] individualWords) {"},{"lineNumber":131,"author":{"gitId":"Zufiqqar"},"content":"        String newUserTask;"},{"lineNumber":132,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":133,"author":{"gitId":"Zufiqqar"},"content":"            newUserTask \u003d individualWords[1];"},{"lineNumber":134,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.add(new Todo(newUserTask));"},{"lineNumber":135,"author":{"gitId":"Zufiqqar"},"content":"            showTaskCreationMessage(userTasks.get(userTasks.size()-1), userTasks.size());"},{"lineNumber":136,"author":{"gitId":"Zufiqqar"},"content":"        } catch (ArrayIndexOutOfBoundsException e){"},{"lineNumber":137,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":138,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":141,"author":{"gitId":"Zufiqqar"},"content":"    private static void displayListOfActivities(ArrayList\u003cTask\u003e userTasks) {"},{"lineNumber":142,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":143,"author":{"gitId":"Zufiqqar"},"content":"        for (int counter \u003d 0; counter \u003c userTasks.size(); counter++) {"},{"lineNumber":144,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println((counter+1) + \".\" + userTasks.get(counter).toString());"},{"lineNumber":145,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":148,"author":{"gitId":"Zufiqqar"},"content":"    private static void showWelcomeMessage() {"},{"lineNumber":149,"author":{"gitId":"Zufiqqar"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":150,"author":{"gitId":"Zufiqqar"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":151,"author":{"gitId":"Zufiqqar"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":152,"author":{"gitId":"Zufiqqar"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":153,"author":{"gitId":"Zufiqqar"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":154,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(logo);"},{"lineNumber":155,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":156,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":157,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":158,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":160,"author":{"gitId":"Zufiqqar"},"content":"    private static void showTaskCreationMessage(Task userTask, int noOfTasks) {"},{"lineNumber":161,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":162,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(userTask.toString());"},{"lineNumber":163,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Now you have \" + noOfTasks + \" tasks in the list. \");"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Zufiqqar":161,"-":4}},{"path":"src/main/java/duke/file/FileOperation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.file;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"import java.io.*;"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"import java.util.StringTokenizer;"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"public class FileOperation {"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    public static String relativeFileName \u003d \"duke.txt\";"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    public static final String SEPARATOR \u003d \"|\";"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"    public static void readFile(ArrayList\u003cTask\u003e userTasks){"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"        char taskSelection;"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"            File myObj \u003d new File(relativeFileName);"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"            if (myObj.createNewFile()) {"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"                System.out.println(\"File created: \" + myObj.getName());"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"            Scanner myReader \u003d new Scanner(myObj);"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"            while (myReader.hasNextLine()) {"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"                String data \u003d myReader.nextLine();"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"                StringTokenizer tokens \u003d new StringTokenizer(data , SEPARATOR);"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"                tokens.nextToken();"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"                taskSelection \u003d data.toLowerCase().charAt(0);"},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"                switch(taskSelection){"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027t\u0027:"},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"                    createTodoTask(userTasks, tokens);"},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":"                    break;"},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027d\u0027:"},{"lineNumber":35,"author":{"gitId":"Zufiqqar"},"content":"                    createDeadlineTask(userTasks, tokens);"},{"lineNumber":36,"author":{"gitId":"Zufiqqar"},"content":"                    break;"},{"lineNumber":37,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027e\u0027:"},{"lineNumber":38,"author":{"gitId":"Zufiqqar"},"content":"                    createEventTask(userTasks, tokens);"},{"lineNumber":39,"author":{"gitId":"Zufiqqar"},"content":"                    break;"},{"lineNumber":40,"author":{"gitId":"Zufiqqar"},"content":"                }"},{"lineNumber":41,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"Zufiqqar"},"content":"            myReader.close();"},{"lineNumber":43,"author":{"gitId":"Zufiqqar"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":44,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":45,"author":{"gitId":"Zufiqqar"},"content":"            e.printStackTrace();"},{"lineNumber":46,"author":{"gitId":"Zufiqqar"},"content":"        }catch (IOException e) {"},{"lineNumber":47,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":48,"author":{"gitId":"Zufiqqar"},"content":"            e.printStackTrace();"},{"lineNumber":49,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":52,"author":{"gitId":"Zufiqqar"},"content":"    private static void createEventTask(ArrayList\u003cTask\u003e userTasks, StringTokenizer tokens) {"},{"lineNumber":53,"author":{"gitId":"Zufiqqar"},"content":"        boolean isDone \u003d Boolean.parseBoolean(tokens.nextToken());"},{"lineNumber":54,"author":{"gitId":"Zufiqqar"},"content":"        String description \u003d tokens.nextToken();"},{"lineNumber":55,"author":{"gitId":"Zufiqqar"},"content":"        String eventLocation \u003d tokens.nextToken();"},{"lineNumber":56,"author":{"gitId":"Zufiqqar"},"content":"        userTasks.add(new Event(description, eventLocation));"},{"lineNumber":57,"author":{"gitId":"Zufiqqar"},"content":"        userTasks.get(userTasks.size()-1).setTaskStatus(isDone);"},{"lineNumber":58,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":60,"author":{"gitId":"Zufiqqar"},"content":"    private static void createDeadlineTask(ArrayList\u003cTask\u003e userTasks, StringTokenizer tokens) {"},{"lineNumber":61,"author":{"gitId":"Zufiqqar"},"content":"        boolean isDone \u003d Boolean.parseBoolean(tokens.nextToken());"},{"lineNumber":62,"author":{"gitId":"Zufiqqar"},"content":"        String description \u003d tokens.nextToken();"},{"lineNumber":63,"author":{"gitId":"Zufiqqar"},"content":"        String deadlineDate \u003d tokens.nextToken();"},{"lineNumber":64,"author":{"gitId":"Zufiqqar"},"content":"        userTasks.add(new Deadline(description, deadlineDate));"},{"lineNumber":65,"author":{"gitId":"Zufiqqar"},"content":"        userTasks.get(userTasks.size()-1).setTaskStatus(isDone);"},{"lineNumber":66,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":68,"author":{"gitId":"Zufiqqar"},"content":"    private static void createTodoTask(ArrayList\u003cTask\u003e userTasks, StringTokenizer tokens) {"},{"lineNumber":69,"author":{"gitId":"Zufiqqar"},"content":"        boolean isDone \u003d Boolean.parseBoolean(tokens.nextToken());"},{"lineNumber":70,"author":{"gitId":"Zufiqqar"},"content":"        String description \u003d tokens.nextToken();"},{"lineNumber":71,"author":{"gitId":"Zufiqqar"},"content":"        userTasks.add(new Todo(description));"},{"lineNumber":72,"author":{"gitId":"Zufiqqar"},"content":"        userTasks.get(userTasks.size()-1).setTaskStatus(isDone);"},{"lineNumber":73,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":75,"author":{"gitId":"Zufiqqar"},"content":"    public static void writeFile(ArrayList\u003cTask\u003e userTasks){"},{"lineNumber":76,"author":{"gitId":"Zufiqqar"},"content":"        String newLineToBeInserted \u003d null;"},{"lineNumber":77,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":78,"author":{"gitId":"Zufiqqar"},"content":"            FileWriter myWriter \u003d new FileWriter(relativeFileName);"},{"lineNumber":79,"author":{"gitId":"Zufiqqar"},"content":"            for(Task userTask : userTasks){"},{"lineNumber":80,"author":{"gitId":"Zufiqqar"},"content":"                switch(userTask.getTaskType()){"},{"lineNumber":81,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027t\u0027:"},{"lineNumber":82,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027T\u0027:"},{"lineNumber":83,"author":{"gitId":"Zufiqqar"},"content":"                    newLineToBeInserted \u003d convertTodoDetailsToString(userTask);"},{"lineNumber":84,"author":{"gitId":"Zufiqqar"},"content":"                    break;"},{"lineNumber":85,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027d\u0027:"},{"lineNumber":86,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027D\u0027:"},{"lineNumber":87,"author":{"gitId":"Zufiqqar"},"content":"                    newLineToBeInserted \u003d convertDeadlineDetailsToString(userTask);"},{"lineNumber":88,"author":{"gitId":"Zufiqqar"},"content":"                    break;"},{"lineNumber":89,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027e\u0027:"},{"lineNumber":90,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027E\u0027:"},{"lineNumber":91,"author":{"gitId":"Zufiqqar"},"content":"                    newLineToBeInserted \u003d convertEventDetailsToString(userTask);"},{"lineNumber":92,"author":{"gitId":"Zufiqqar"},"content":"                    break;"},{"lineNumber":93,"author":{"gitId":"Zufiqqar"},"content":"                }"},{"lineNumber":94,"author":{"gitId":"Zufiqqar"},"content":"                myWriter.write(newLineToBeInserted + \"\\n\");"},{"lineNumber":95,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"Zufiqqar"},"content":"            myWriter.close();"},{"lineNumber":97,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"Successfully updated the file.\");"},{"lineNumber":98,"author":{"gitId":"Zufiqqar"},"content":"        } catch (IOException e) {"},{"lineNumber":99,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":100,"author":{"gitId":"Zufiqqar"},"content":"            e.printStackTrace();"},{"lineNumber":101,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":104,"author":{"gitId":"Zufiqqar"},"content":"    private static String convertEventDetailsToString(Task userTask) {"},{"lineNumber":105,"author":{"gitId":"Zufiqqar"},"content":"        Event event \u003d (Event) userTask;"},{"lineNumber":106,"author":{"gitId":"Zufiqqar"},"content":"        return event.getTaskType() + \"|\" + event.getTaskStatus() + \"|\" +"},{"lineNumber":107,"author":{"gitId":"Zufiqqar"},"content":"                event.getDescription() + \"|\" + event.getEventLocation();"},{"lineNumber":108,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":110,"author":{"gitId":"Zufiqqar"},"content":"    private static String convertDeadlineDetailsToString(Task userTask) {"},{"lineNumber":111,"author":{"gitId":"Zufiqqar"},"content":"        Deadline deadline \u003d (Deadline) userTask;"},{"lineNumber":112,"author":{"gitId":"Zufiqqar"},"content":"        return deadline.getTaskType() + \"|\" + deadline.getTaskStatus() + \"|\" +"},{"lineNumber":113,"author":{"gitId":"Zufiqqar"},"content":"                deadline.getDescription() + \"|\" + deadline.getDeadlineDate();"},{"lineNumber":114,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":116,"author":{"gitId":"Zufiqqar"},"content":"    private static String convertTodoDetailsToString(Task userTask) {"},{"lineNumber":117,"author":{"gitId":"Zufiqqar"},"content":"        return userTask.getTaskType() + \"|\" + userTask.getTaskStatus() + \"|\" + "},{"lineNumber":118,"author":{"gitId":"Zufiqqar"},"content":"                userTask.getDescription();"},{"lineNumber":119,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":120}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"    protected String deadlineDate;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"    public Deadline(String description, String deadlineDate) {"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"        super(description, \u0027D\u0027);"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadlineDate + \")\";"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"    public void setDeadlineDate(String deadlineDate){"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"    public String getDeadlineDate(){"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"        return deadlineDate;"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":24}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"    protected String eventLocation;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"    public Event(String description, String eventLocation) {"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"        super(description, \u0027E\u0027);"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"        this.eventLocation \u003d eventLocation;"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + eventLocation + \")\";"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"    public void setEventLocation(String eventLocation){"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"        this.eventLocation \u003d eventLocation;"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"    public String getEventLocation(){"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"        return eventLocation;"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":24}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"    protected char taskType;"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"    public Task(String description, char taskType) {"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    public String getStatusIcon() {"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"        return \"[\" + getStatusIcon() + \"]\" + description;"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"    public void setDescription(String description){"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"        this.description \u003d description;"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"    public String getDescription(){"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"        return description;"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"    public void setTaskStatus(boolean isDone){"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":"    public boolean getTaskStatus(){"},{"lineNumber":35,"author":{"gitId":"Zufiqqar"},"content":"        return isDone;"},{"lineNumber":36,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":38,"author":{"gitId":"Zufiqqar"},"content":"    public void setTaskType(char taskType){"},{"lineNumber":39,"author":{"gitId":"Zufiqqar"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":40,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":42,"author":{"gitId":"Zufiqqar"},"content":"    public char getTaskType(){"},{"lineNumber":43,"author":{"gitId":"Zufiqqar"},"content":"        return taskType;"},{"lineNumber":44,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":46,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":46}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"        super(description, \u0027T\u0027);"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":13}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":"deadline return book/by June 6th"},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"list"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"deadline return book /by Sunday"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"list"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"done 2"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"done 8"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"list"}],"authorContributionMap":{"Zufiqqar":13}}]
