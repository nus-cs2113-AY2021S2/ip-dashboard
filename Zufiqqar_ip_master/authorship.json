[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature 1 "},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"`Users are able to print and list out all the tasks created so far on the command prompt for display`"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"### Feature 2"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"`Users are able to create 3 types of tasks. They are todo, event and deadline task. Todo task has 2 attributes that users need to specify, which are the description of the task and the completion status of the task. Whereas for event and deadline task, both of them have 3 attributes that need to be specified, which are the description of the task, the completion status of the task and also the location of the event for event task or date of the deadline task.`"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"### Feature 3"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"`Users are able mark tasks as done through the application once they completed the respective tasks.`"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"### Feature 4"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"`Users are able to delete any tasks on the application. The targeted task may have been created wrongly in the first time or is longer needed.`"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"### Feature 5"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"`Users are able to look for tasks by using the find function provided by the application. In return, the application will display all the tasks that matches the keyword input by the users.`"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"### Feature 6"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"`Users may exit the application when they no longer need to use it.`"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"### `list` - This action lists all the tasks created in the system to date."},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"Example of usage: "},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"`list`"},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"Expected outcome:"},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"```"},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":"-------------------------------"},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":"Here are the tasks in your list:"},{"lineNumber":35,"author":{"gitId":"Zufiqqar"},"content":"1.[T][✓]read book"},{"lineNumber":36,"author":{"gitId":"Zufiqqar"},"content":"-------------------------------"},{"lineNumber":37,"author":{"gitId":"Zufiqqar"},"content":"```"},{"lineNumber":38,"author":{"gitId":"Zufiqqar"},"content":"### `todo` - This action creates a todo task in the system."},{"lineNumber":39,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":40,"author":{"gitId":"Zufiqqar"},"content":"Example of usage: "},{"lineNumber":41,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":42,"author":{"gitId":"Zufiqqar"},"content":"`todo join sports club`"},{"lineNumber":43,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":44,"author":{"gitId":"Zufiqqar"},"content":"Expected outcome:"},{"lineNumber":45,"author":{"gitId":"Zufiqqar"},"content":"```"},{"lineNumber":46,"author":{"gitId":"Zufiqqar"},"content":"-------------------------------"},{"lineNumber":47,"author":{"gitId":"Zufiqqar"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":48,"author":{"gitId":"Zufiqqar"},"content":"[T][✘]join sports club"},{"lineNumber":49,"author":{"gitId":"Zufiqqar"},"content":"Now you have 4 tasks in the list."},{"lineNumber":50,"author":{"gitId":"Zufiqqar"},"content":"-------------------------------"},{"lineNumber":51,"author":{"gitId":"Zufiqqar"},"content":"```"},{"lineNumber":52,"author":{"gitId":"Zufiqqar"},"content":"### `event` - This action creates a event task in the system."},{"lineNumber":53,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":54,"author":{"gitId":"Zufiqqar"},"content":"Example of usage: "},{"lineNumber":55,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":56,"author":{"gitId":"Zufiqqar"},"content":"`event project meeting /at Aug 6th 2-4pm`"},{"lineNumber":57,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":58,"author":{"gitId":"Zufiqqar"},"content":"Expected outcome:"},{"lineNumber":59,"author":{"gitId":"Zufiqqar"},"content":"```"},{"lineNumber":60,"author":{"gitId":"Zufiqqar"},"content":"-------------------------------"},{"lineNumber":61,"author":{"gitId":"Zufiqqar"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":62,"author":{"gitId":"Zufiqqar"},"content":"[E][✘]project meeting  (at:  aug 6th 2-4pm)"},{"lineNumber":63,"author":{"gitId":"Zufiqqar"},"content":"Now you have 3 tasks in the list."},{"lineNumber":64,"author":{"gitId":"Zufiqqar"},"content":"-------------------------------"},{"lineNumber":65,"author":{"gitId":"Zufiqqar"},"content":"```"},{"lineNumber":66,"author":{"gitId":"Zufiqqar"},"content":"### `deadline` - This action creates a deadline task in the system."},{"lineNumber":67,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":68,"author":{"gitId":"Zufiqqar"},"content":"Example of usage: "},{"lineNumber":69,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":70,"author":{"gitId":"Zufiqqar"},"content":"`deadline return book/by June 6th`"},{"lineNumber":71,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":72,"author":{"gitId":"Zufiqqar"},"content":"Expected outcome:"},{"lineNumber":73,"author":{"gitId":"Zufiqqar"},"content":"```"},{"lineNumber":74,"author":{"gitId":"Zufiqqar"},"content":"-------------------------------"},{"lineNumber":75,"author":{"gitId":"Zufiqqar"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":76,"author":{"gitId":"Zufiqqar"},"content":"[D][✘]return book (by:  june 6th)"},{"lineNumber":77,"author":{"gitId":"Zufiqqar"},"content":"Now you have 4 tasks in the list."},{"lineNumber":78,"author":{"gitId":"Zufiqqar"},"content":"-------------------------------"},{"lineNumber":79,"author":{"gitId":"Zufiqqar"},"content":"```"},{"lineNumber":80,"author":{"gitId":"Zufiqqar"},"content":"### `done` - This action updates the completion status of an existing task as done in the system."},{"lineNumber":81,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":82,"author":{"gitId":"Zufiqqar"},"content":"Example of usage: "},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"Zufiqqar"},"content":"`done 2`"},{"lineNumber":85,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":86,"author":{"gitId":"Zufiqqar"},"content":"Expected outcome:"},{"lineNumber":87,"author":{"gitId":"Zufiqqar"},"content":"```"},{"lineNumber":88,"author":{"gitId":"Zufiqqar"},"content":"-------------------------------"},{"lineNumber":89,"author":{"gitId":"Zufiqqar"},"content":"Nice! I\u0027ve marked this task as done:"},{"lineNumber":90,"author":{"gitId":"Zufiqqar"},"content":"[T][✓]join sports club"},{"lineNumber":91,"author":{"gitId":"Zufiqqar"},"content":"-------------------------------"},{"lineNumber":92,"author":{"gitId":"Zufiqqar"},"content":"```"},{"lineNumber":93,"author":{"gitId":"Zufiqqar"},"content":"### `delete` - This action remove an existing task from the system."},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"Zufiqqar"},"content":"`delete 2`"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":100,"author":{"gitId":"Zufiqqar"},"content":"```"},{"lineNumber":101,"author":{"gitId":"Zufiqqar"},"content":"-------------------------------"},{"lineNumber":102,"author":{"gitId":"Zufiqqar"},"content":"Noted. I\u0027ve removed this task:"},{"lineNumber":103,"author":{"gitId":"Zufiqqar"},"content":"[T][✓]join sports club"},{"lineNumber":104,"author":{"gitId":"Zufiqqar"},"content":"Now you have 3 tasks in the list."},{"lineNumber":105,"author":{"gitId":"Zufiqqar"},"content":"-------------------------------"},{"lineNumber":106,"author":{"gitId":"Zufiqqar"},"content":"```"},{"lineNumber":107,"author":{"gitId":"Zufiqqar"},"content":"### `find` - This action find all the existing tasks in the system that matches the keyword input by the users"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"Zufiqqar"},"content":"Example of usage: "},{"lineNumber":110,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":111,"author":{"gitId":"Zufiqqar"},"content":"`find book`"},{"lineNumber":112,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":113,"author":{"gitId":"Zufiqqar"},"content":"Expected outcome:"},{"lineNumber":114,"author":{"gitId":"Zufiqqar"},"content":"```"},{"lineNumber":115,"author":{"gitId":"Zufiqqar"},"content":"-------------------------------"},{"lineNumber":116,"author":{"gitId":"Zufiqqar"},"content":"Here are the matching tasks in your list:"},{"lineNumber":117,"author":{"gitId":"Zufiqqar"},"content":"1.[T][✓]read book"},{"lineNumber":118,"author":{"gitId":"Zufiqqar"},"content":"3.[D][✘]return book (by:  june 6th)"},{"lineNumber":119,"author":{"gitId":"Zufiqqar"},"content":"-------------------------------"},{"lineNumber":120,"author":{"gitId":"Zufiqqar"},"content":"```"},{"lineNumber":121,"author":{"gitId":"Zufiqqar"},"content":"### `bye` - This action will help user terminates the program."},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"Zufiqqar"},"content":"`bye`"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":128,"author":{"gitId":"Zufiqqar"},"content":"```"},{"lineNumber":129,"author":{"gitId":"Zufiqqar"},"content":"-------------------------------"},{"lineNumber":130,"author":{"gitId":"Zufiqqar"},"content":"-------------------------------"},{"lineNumber":131,"author":{"gitId":"Zufiqqar"},"content":"```"}],"authorContributionMap":{"Zufiqqar":109,"-":22}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"T|true|read book"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":"D|false|return book|June 6th"},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"E|false|project meeting|Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"T|true|join sports club"}],"authorContributionMap":{"Zufiqqar":4}},{"path":"src/main/java/duke/app/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.app;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.commands.Command;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"import duke.file.Storage;"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"/*"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"Main Application of Duke"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"*/"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    private Storage storage;"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    private TaskList tasks;"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"    private Ui ui;"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"    Constructor of Duke"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"    Initialize Storage and Tasklist Object"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"    Load data from duke.txt into Tasklist Object"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"    public Duke(String filePath) {"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"        ui \u003d new Ui();"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"        } catch (DukeException e) {"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"            ui.showLoadingError(e.getMessage());"},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":35,"author":{"gitId":"Zufiqqar"},"content":"    Main logic of the Application"},{"lineNumber":36,"author":{"gitId":"Zufiqqar"},"content":"    Run the tasks command by users"},{"lineNumber":37,"author":{"gitId":"Zufiqqar"},"content":"    Keeps running until user enters \"bye\""},{"lineNumber":38,"author":{"gitId":"Zufiqqar"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"Zufiqqar"},"content":"    public void run() {"},{"lineNumber":40,"author":{"gitId":"Zufiqqar"},"content":"        ui.showWelcome();"},{"lineNumber":41,"author":{"gitId":"Zufiqqar"},"content":"        boolean isExit \u003d false;"},{"lineNumber":42,"author":{"gitId":"Zufiqqar"},"content":"        while (!isExit) {"},{"lineNumber":43,"author":{"gitId":"Zufiqqar"},"content":"            try {"},{"lineNumber":44,"author":{"gitId":"Zufiqqar"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":45,"author":{"gitId":"Zufiqqar"},"content":"                ui.showLine(); // show the divider line (\"_______\")"},{"lineNumber":46,"author":{"gitId":"Zufiqqar"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":47,"author":{"gitId":"Zufiqqar"},"content":"                c.execute(tasks, storage);"},{"lineNumber":48,"author":{"gitId":"Zufiqqar"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":49,"author":{"gitId":"Zufiqqar"},"content":"            } catch (DukeException e) {"},{"lineNumber":50,"author":{"gitId":"Zufiqqar"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":51,"author":{"gitId":"Zufiqqar"},"content":"            } finally {"},{"lineNumber":52,"author":{"gitId":"Zufiqqar"},"content":"                ui.showLine();"},{"lineNumber":53,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":57,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":58,"author":{"gitId":"Zufiqqar"},"content":"    Create Duke Object by passing the file to be read"},{"lineNumber":59,"author":{"gitId":"Zufiqqar"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":61,"author":{"gitId":"Zufiqqar"},"content":"        new Duke(\"duke.txt\").run();"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Zufiqqar":59,"-":4}},{"path":"src/main/java/duke/app/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.app;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"/*"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"Class Ui for handling visuals"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"*/"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"    Display welcome message when application started up"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    public void showWelcome(){"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"        this.showLine();"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(logo);"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"        this.showLine();"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"    Display error message when unable to load file"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"    public void showLoadingError(String message) {"},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(message);"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":"    Display separator line for nice visualization for users"},{"lineNumber":35,"author":{"gitId":"Zufiqqar"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Zufiqqar"},"content":"    public void showLine() {"},{"lineNumber":37,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"-------------------------------\");"},{"lineNumber":38,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":40,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":41,"author":{"gitId":"Zufiqqar"},"content":"    Get user input from command line"},{"lineNumber":42,"author":{"gitId":"Zufiqqar"},"content":"    Function returns the input string"},{"lineNumber":43,"author":{"gitId":"Zufiqqar"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"Zufiqqar"},"content":"    public String readCommand() {"},{"lineNumber":45,"author":{"gitId":"Zufiqqar"},"content":"        String userInput;"},{"lineNumber":46,"author":{"gitId":"Zufiqqar"},"content":"        Scanner inputCommand \u003d new Scanner(System.in);"},{"lineNumber":47,"author":{"gitId":"Zufiqqar"},"content":"        userInput \u003d inputCommand.nextLine();"},{"lineNumber":48,"author":{"gitId":"Zufiqqar"},"content":"        return userInput;"},{"lineNumber":49,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":51,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":52,"author":{"gitId":"Zufiqqar"},"content":"    Display the error message passed in as argument"},{"lineNumber":53,"author":{"gitId":"Zufiqqar"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"Zufiqqar"},"content":"    public void showError(String message) {"},{"lineNumber":55,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(message);"},{"lineNumber":56,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":57}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.file.Storage;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"/*"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"Subclass of Command"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"Handle add commands by users"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"*/"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"public class AddCommand extends Command{"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    Constructor AddCommand Object"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    Initialize activity, action variables"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"    public AddCommand(String activity, String action){"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"        super(activity, action);"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"    Implements execute method"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"    Three distinct commands - todo, deadline, event"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"    Each command creates distinct task"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"        switch(activity) {"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"        case \"todo\":"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"            tasks.createTodoTask(action);"},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"            storage.dump(tasks);"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"            break;"},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"        case \"deadline\":"},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":"            tasks.createDeadlineTask(action);"},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":"            storage.dump(tasks);"},{"lineNumber":35,"author":{"gitId":"Zufiqqar"},"content":"            break;"},{"lineNumber":36,"author":{"gitId":"Zufiqqar"},"content":"        case \"event\":"},{"lineNumber":37,"author":{"gitId":"Zufiqqar"},"content":"            tasks.createEventTask(action);"},{"lineNumber":38,"author":{"gitId":"Zufiqqar"},"content":"            storage.dump(tasks);"},{"lineNumber":39,"author":{"gitId":"Zufiqqar"},"content":"            break;"},{"lineNumber":40,"author":{"gitId":"Zufiqqar"},"content":"        default:"},{"lineNumber":41,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":42,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":44}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.file.Storage;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"/*"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"Abstract class Command to be inherited and implemented"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"*/"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"public abstract class Command {"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"    protected String activity;"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"    protected String action;"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    protected Boolean isExit;"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"    Constructor for Command"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"    Initialize activity, action and isExit variables"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"    public Command(String activity, String action){"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"        this.activity \u003d activity;"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"        this.action \u003d action;"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"        isExit \u003d false;"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"    Abstract method to be implemented by subclasses"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"    public abstract void execute(TaskList tasks, Storage storage) throws DukeException;"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"    Set isExit status to true when command is \"bye\""},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":"    public boolean isExit(){"},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":"        if(activity.equals(\"bye\")){"},{"lineNumber":35,"author":{"gitId":"Zufiqqar"},"content":"            isExit \u003d true;"},{"lineNumber":36,"author":{"gitId":"Zufiqqar"},"content":"        }else{"},{"lineNumber":37,"author":{"gitId":"Zufiqqar"},"content":"            isExit \u003d false;"},{"lineNumber":38,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Zufiqqar"},"content":"        return isExit;"},{"lineNumber":40,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":42,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":43,"author":{"gitId":"Zufiqqar"},"content":"    Function to set isExit to true or false based on argument value"},{"lineNumber":44,"author":{"gitId":"Zufiqqar"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"Zufiqqar"},"content":"    public void setExitCondition(Boolean status){"},{"lineNumber":46,"author":{"gitId":"Zufiqqar"},"content":"        isExit \u003d status;"},{"lineNumber":47,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":48}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.file.Storage;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"/*"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"Subclass of Command"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"Handle delete command by users"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"*/"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"public class DeleteCommand extends Command{"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    Constructor DeleteCommand Object"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    Initialize activity, action variables"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"    public DeleteCommand(String activity, String action){"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"        super(activity, action);"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"    Implements execute method"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"    Function will delete a task from the tasklist"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"        tasks.deleteATask(action);"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"        storage.dump(tasks);"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":29}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.file.Storage;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"/*"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"Subclass of Command"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"Handle done command by users"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"*/"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"public class DoneCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    Constructor DoneCommand Object"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    Initialize activity, action variables"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"    public DoneCommand(String activity, String action) {"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"        super(activity, action);"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"    Implements execute method"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"    Function will mark a task as done"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"        tasks.markActivityAsDone(action);"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"        storage.dump(tasks);"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":29}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.file.Storage;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"/*"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"Subclass of Command"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"Handle exit command by users"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"*/"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"public class ExitCommand extends Command{"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    Constructor ExitCommand Object"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    Initialize activity, action variables"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"    public ExitCommand(String activity, String action){"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"        super(activity, action);"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"    Implements execute method"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"    Function will set the exit variable condition to true"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"        super.setExitCondition(true);"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":28}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.file.Storage;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"/*"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"Subclass of Command"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"Handle exit command by users"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"*/"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"public class FindCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    Constructor FindCommand Object"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    Initialize activity, action variables"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"    public FindCommand(String activity, String action) {"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"        super(activity, action);"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"    Implements execute method"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"    Function will list all tasks that contains action string"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"        tasks.findTask(action);"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":28}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.file.Storage;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"/*"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"Subclass of Command"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"Handle list command by users"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"*/"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"public class ListCommand extends Command{"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    Constructor ListCommand Object"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    Initialize activity, action variables"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"    public ListCommand(String activity, String action){"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"        super(activity, action);"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"    Implements execute method"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"    Function will list all tasks from the tasklist"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"        tasks.displayListOfActivities();"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":28}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"/*"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"Class DukeException for handling errors"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"*/"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"    Constructor DukeException Object"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"    Initialize object with defined error message"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"        super(errorMessage);"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":15}},{"path":"src/main/java/duke/file/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.file;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.*;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"import java.io.FileWriter;"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"import java.util.StringTokenizer;"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"/*"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"Class Storage for handling file read and write operations"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"*/"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"public class Storage {"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"    protected String relativeFileName;"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"    protected ArrayList\u003cTask\u003e userTasks;"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"    protected final String SEPARATOR \u003d \"|\";"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"    Constructor for Storage Object"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"    Initialize relativeFileName, userTasks variables"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"    public Storage(String filePath) {"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"        relativeFileName \u003d filePath;"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"        userTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":"    Function that read a text file"},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":"    Initialize Task object and return it"},{"lineNumber":35,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":36,"author":{"gitId":"Zufiqqar"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException{"},{"lineNumber":37,"author":{"gitId":"Zufiqqar"},"content":"        char taskSelection;"},{"lineNumber":38,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"Zufiqqar"},"content":"            File dukeFileRead \u003d new File(relativeFileName);"},{"lineNumber":40,"author":{"gitId":"Zufiqqar"},"content":"            if (dukeFileRead.createNewFile()) {"},{"lineNumber":41,"author":{"gitId":"Zufiqqar"},"content":"                //Create file if it does not exist"},{"lineNumber":42,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"Zufiqqar"},"content":"            Scanner myReader \u003d new Scanner(dukeFileRead);"},{"lineNumber":44,"author":{"gitId":"Zufiqqar"},"content":"            while (myReader.hasNextLine()) {"},{"lineNumber":45,"author":{"gitId":"Zufiqqar"},"content":"                String data \u003d myReader.nextLine();"},{"lineNumber":46,"author":{"gitId":"Zufiqqar"},"content":"                StringTokenizer tokens \u003d new StringTokenizer(data , SEPARATOR);"},{"lineNumber":47,"author":{"gitId":"Zufiqqar"},"content":"                tokens.nextToken();"},{"lineNumber":48,"author":{"gitId":"Zufiqqar"},"content":"                taskSelection \u003d data.toLowerCase().charAt(0);"},{"lineNumber":49,"author":{"gitId":"Zufiqqar"},"content":"                switch(taskSelection){"},{"lineNumber":50,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027t\u0027:"},{"lineNumber":51,"author":{"gitId":"Zufiqqar"},"content":"                    createTodoTask(userTasks, tokens);"},{"lineNumber":52,"author":{"gitId":"Zufiqqar"},"content":"                    break;"},{"lineNumber":53,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027d\u0027:"},{"lineNumber":54,"author":{"gitId":"Zufiqqar"},"content":"                    createDeadlineTask(userTasks, tokens);"},{"lineNumber":55,"author":{"gitId":"Zufiqqar"},"content":"                    break;"},{"lineNumber":56,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027e\u0027:"},{"lineNumber":57,"author":{"gitId":"Zufiqqar"},"content":"                    createEventTask(userTasks, tokens);"},{"lineNumber":58,"author":{"gitId":"Zufiqqar"},"content":"                    break;"},{"lineNumber":59,"author":{"gitId":"Zufiqqar"},"content":"                default:"},{"lineNumber":60,"author":{"gitId":"Zufiqqar"},"content":"                    System.out.println(\"Unrecognizable task type. Skipped this particular task object creation.\");"},{"lineNumber":61,"author":{"gitId":"Zufiqqar"},"content":"                }"},{"lineNumber":62,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"Zufiqqar"},"content":"            myReader.close();"},{"lineNumber":64,"author":{"gitId":"Zufiqqar"},"content":"        }catch (FileNotFoundException e) {"},{"lineNumber":65,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"File cannot be found.\");"},{"lineNumber":66,"author":{"gitId":"Zufiqqar"},"content":"        }catch (IOException e) {"},{"lineNumber":67,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"I/O Operations got errors. Data cannot be read/\");"},{"lineNumber":68,"author":{"gitId":"Zufiqqar"},"content":"        }catch (NoSuchElementException e) {"},{"lineNumber":69,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"The file is empty.\");"},{"lineNumber":70,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"Zufiqqar"},"content":"        return userTasks;"},{"lineNumber":72,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":74,"author":{"gitId":"Zufiqqar"},"content":"    private void createEventTask(ArrayList\u003cTask\u003e userTasks, StringTokenizer tokens) {"},{"lineNumber":75,"author":{"gitId":"Zufiqqar"},"content":"        boolean isDone \u003d Boolean.parseBoolean(tokens.nextToken());"},{"lineNumber":76,"author":{"gitId":"Zufiqqar"},"content":"        String description \u003d tokens.nextToken();"},{"lineNumber":77,"author":{"gitId":"Zufiqqar"},"content":"        String eventLocation \u003d tokens.nextToken();"},{"lineNumber":78,"author":{"gitId":"Zufiqqar"},"content":"        userTasks.add(new Event(description, eventLocation));"},{"lineNumber":79,"author":{"gitId":"Zufiqqar"},"content":"        userTasks.get(userTasks.size()-1).setTaskStatus(isDone);"},{"lineNumber":80,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":82,"author":{"gitId":"Zufiqqar"},"content":"    private void createDeadlineTask(ArrayList\u003cTask\u003e userTasks, StringTokenizer tokens) {"},{"lineNumber":83,"author":{"gitId":"Zufiqqar"},"content":"        boolean isDone \u003d Boolean.parseBoolean(tokens.nextToken());"},{"lineNumber":84,"author":{"gitId":"Zufiqqar"},"content":"        String description \u003d tokens.nextToken();"},{"lineNumber":85,"author":{"gitId":"Zufiqqar"},"content":"        String deadlineDate \u003d tokens.nextToken();"},{"lineNumber":86,"author":{"gitId":"Zufiqqar"},"content":"        userTasks.add(new Deadline(description, deadlineDate));"},{"lineNumber":87,"author":{"gitId":"Zufiqqar"},"content":"        userTasks.get(userTasks.size()-1).setTaskStatus(isDone);"},{"lineNumber":88,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":90,"author":{"gitId":"Zufiqqar"},"content":"    private void createTodoTask(ArrayList\u003cTask\u003e userTasks, StringTokenizer tokens) {"},{"lineNumber":91,"author":{"gitId":"Zufiqqar"},"content":"        boolean isDone \u003d Boolean.parseBoolean(tokens.nextToken());"},{"lineNumber":92,"author":{"gitId":"Zufiqqar"},"content":"        String description \u003d tokens.nextToken();"},{"lineNumber":93,"author":{"gitId":"Zufiqqar"},"content":"        userTasks.add(new Todo(description));"},{"lineNumber":94,"author":{"gitId":"Zufiqqar"},"content":"        userTasks.get(userTasks.size()-1).setTaskStatus(isDone);"},{"lineNumber":95,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":97,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":98,"author":{"gitId":"Zufiqqar"},"content":"    Function that writes back to the text file"},{"lineNumber":99,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":100,"author":{"gitId":"Zufiqqar"},"content":"    public void dump(TaskList userCurrentTasks){"},{"lineNumber":101,"author":{"gitId":"Zufiqqar"},"content":"        String newLineToBeInserted \u003d null;"},{"lineNumber":102,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":103,"author":{"gitId":"Zufiqqar"},"content":"            FileWriter dukeFileWrite \u003d new FileWriter(relativeFileName);"},{"lineNumber":104,"author":{"gitId":"Zufiqqar"},"content":"            for(Task userTask : userCurrentTasks.getUserTasks()){"},{"lineNumber":105,"author":{"gitId":"Zufiqqar"},"content":"                switch(userTask.getTaskType()){"},{"lineNumber":106,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027t\u0027:"},{"lineNumber":107,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027T\u0027:"},{"lineNumber":108,"author":{"gitId":"Zufiqqar"},"content":"                    newLineToBeInserted \u003d convertTodoDetailsToString(userTask);"},{"lineNumber":109,"author":{"gitId":"Zufiqqar"},"content":"                    break;"},{"lineNumber":110,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027d\u0027:"},{"lineNumber":111,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027D\u0027:"},{"lineNumber":112,"author":{"gitId":"Zufiqqar"},"content":"                    newLineToBeInserted \u003d convertDeadlineDetailsToString(userTask);"},{"lineNumber":113,"author":{"gitId":"Zufiqqar"},"content":"                    break;"},{"lineNumber":114,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027e\u0027:"},{"lineNumber":115,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027E\u0027:"},{"lineNumber":116,"author":{"gitId":"Zufiqqar"},"content":"                    newLineToBeInserted \u003d convertEventDetailsToString(userTask);"},{"lineNumber":117,"author":{"gitId":"Zufiqqar"},"content":"                    break;"},{"lineNumber":118,"author":{"gitId":"Zufiqqar"},"content":"                default:"},{"lineNumber":119,"author":{"gitId":"Zufiqqar"},"content":"                    System.out.println(\"Unrecognizable task type. Please recreate the task.\");"},{"lineNumber":120,"author":{"gitId":"Zufiqqar"},"content":"                }"},{"lineNumber":121,"author":{"gitId":"Zufiqqar"},"content":"                dukeFileWrite.write(newLineToBeInserted + \"\\n\");"},{"lineNumber":122,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"Zufiqqar"},"content":"            dukeFileWrite.close();"},{"lineNumber":124,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":125,"author":{"gitId":"Zufiqqar"},"content":"        } catch (IOException e) {"},{"lineNumber":126,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"An IO Operations Error has occurred. Data is not saved.\");"},{"lineNumber":127,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":130,"author":{"gitId":"Zufiqqar"},"content":"    private String convertEventDetailsToString(Task userTask) {"},{"lineNumber":131,"author":{"gitId":"Zufiqqar"},"content":"        Event event \u003d (Event) userTask;"},{"lineNumber":132,"author":{"gitId":"Zufiqqar"},"content":"        return event.getTaskType() + \"|\" + event.getTaskStatus() + \"|\" +"},{"lineNumber":133,"author":{"gitId":"Zufiqqar"},"content":"                event.getDescription() + \"|\" + event.getEventLocation();"},{"lineNumber":134,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":136,"author":{"gitId":"Zufiqqar"},"content":"    private String convertDeadlineDetailsToString(Task userTask) {"},{"lineNumber":137,"author":{"gitId":"Zufiqqar"},"content":"        Deadline deadline \u003d (Deadline) userTask;"},{"lineNumber":138,"author":{"gitId":"Zufiqqar"},"content":"        return deadline.getTaskType() + \"|\" + deadline.getTaskStatus() + \"|\" +"},{"lineNumber":139,"author":{"gitId":"Zufiqqar"},"content":"                deadline.getDescription() + \"|\" + deadline.getDeadlineDate();"},{"lineNumber":140,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":142,"author":{"gitId":"Zufiqqar"},"content":"    private String convertTodoDetailsToString(Task userTask) {"},{"lineNumber":143,"author":{"gitId":"Zufiqqar"},"content":"        return userTask.getTaskType() + \"|\" + userTask.getTaskStatus() + \"|\" + "},{"lineNumber":144,"author":{"gitId":"Zufiqqar"},"content":"                userTask.getDescription();"},{"lineNumber":145,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":146}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.commands.*;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"/*"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"Class Parser for making sense of user input"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"*/"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"public class Parser {"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    Static Function that create a class object based on user command"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    Returns the requested Command Object"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"    public static Command parse(String fullCommand) throws DukeException {"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"        String activity \u003d null;"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"        String action \u003d null;"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"            String[] individualWords \u003d fullCommand.split(\" \", 2);"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"            activity \u003d individualWords[0].toLowerCase().strip();"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"            action \u003d individualWords[1].toLowerCase().strip();"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"            return commandCreation(activity, action);"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"            return commandCreation(activity, null);"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"    No break statement for each cases because of the return statement"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"    Else will produce syntax errors"},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":"    private static Command commandCreation(String activity, String action) throws DukeException{"},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":"        switch (activity) {"},{"lineNumber":35,"author":{"gitId":"Zufiqqar"},"content":"        case \"list\":"},{"lineNumber":36,"author":{"gitId":"Zufiqqar"},"content":"            if(action !\u003d null){"},{"lineNumber":37,"author":{"gitId":"Zufiqqar"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":38,"author":{"gitId":"Zufiqqar"},"content":"            }else{"},{"lineNumber":39,"author":{"gitId":"Zufiqqar"},"content":"                return new ListCommand(activity, null);"},{"lineNumber":40,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"Zufiqqar"},"content":"        case \"todo\":"},{"lineNumber":42,"author":{"gitId":"Zufiqqar"},"content":"        case \"deadline\":"},{"lineNumber":43,"author":{"gitId":"Zufiqqar"},"content":"        case \"event\":"},{"lineNumber":44,"author":{"gitId":"Zufiqqar"},"content":"            if(action \u003d\u003d null || action.equals(\"\")){"},{"lineNumber":45,"author":{"gitId":"Zufiqqar"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":46,"author":{"gitId":"Zufiqqar"},"content":"            }else{"},{"lineNumber":47,"author":{"gitId":"Zufiqqar"},"content":"                return new AddCommand(activity, action);"},{"lineNumber":48,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"Zufiqqar"},"content":"        case \"done\":"},{"lineNumber":50,"author":{"gitId":"Zufiqqar"},"content":"            return new DoneCommand(activity, action);"},{"lineNumber":51,"author":{"gitId":"Zufiqqar"},"content":"        case \"delete\":"},{"lineNumber":52,"author":{"gitId":"Zufiqqar"},"content":"            return new DeleteCommand(activity, action);"},{"lineNumber":53,"author":{"gitId":"Zufiqqar"},"content":"        case \"find\":"},{"lineNumber":54,"author":{"gitId":"Zufiqqar"},"content":"            return new FindCommand(activity, action);"},{"lineNumber":55,"author":{"gitId":"Zufiqqar"},"content":"        case \"bye\":"},{"lineNumber":56,"author":{"gitId":"Zufiqqar"},"content":"            if(action !\u003d null){"},{"lineNumber":57,"author":{"gitId":"Zufiqqar"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":58,"author":{"gitId":"Zufiqqar"},"content":"            }else{"},{"lineNumber":59,"author":{"gitId":"Zufiqqar"},"content":"                return new ExitCommand(activity, null);"},{"lineNumber":60,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"Zufiqqar"},"content":"        default:"},{"lineNumber":62,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":63,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":65}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"/*"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"Class Deadline for creating deadline tasks"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"*/"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"    protected String deadlineDate;"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"    Constructor for Deadline Object"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"    Initialize description, taskType,deadlineDate variables"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    public Deadline(String description, String deadlineDate) {"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"        super(description, \u0027D\u0027);"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"    Overrides toString() method from superclass"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"    Returns a string of task details"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadlineDate + \")\";"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"    Returns deadline date"},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"    public String getDeadlineDate(){"},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"        return deadlineDate;"},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"/*"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"Class Event for creating event tasks"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"*/"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"    protected String eventLocation;"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"    Constructor for Event Object"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"    Initialize description, taskType, eventLocation variables"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    public Event(String description, String eventLocation) {"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"        super(description, \u0027E\u0027);"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"        this.eventLocation \u003d eventLocation;"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"    Overrides toString() method from superclass"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"    Returns a string of task details"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + eventLocation + \")\";"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"    Returns event location"},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"    public String getEventLocation(){"},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"        return eventLocation;"},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":34}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"/*"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"Class Task for creating task objects"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"*/"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"    protected char taskType;"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"    Constructor Task Object"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    Initialize description, isDone, taskType variables"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    public Task(String description, char taskType) {"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"        this.isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"    Returns status icon of tick or X symbols"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"    public String getStatusIcon() {"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"    Overrides toString() method from superclass"},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"    Returns a string of task details"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":"    public String toString() {"},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":"        return \"[\" + getStatusIcon() + \"]\" + description;"},{"lineNumber":35,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":37,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":38,"author":{"gitId":"Zufiqqar"},"content":"    Returns description"},{"lineNumber":39,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":40,"author":{"gitId":"Zufiqqar"},"content":"    public String getDescription(){"},{"lineNumber":41,"author":{"gitId":"Zufiqqar"},"content":"        return description;"},{"lineNumber":42,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":44,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":45,"author":{"gitId":"Zufiqqar"},"content":"    Function that sets the isDone variable according to argument passed in"},{"lineNumber":46,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":47,"author":{"gitId":"Zufiqqar"},"content":"    public void setTaskStatus(boolean isDone){"},{"lineNumber":48,"author":{"gitId":"Zufiqqar"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":49,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":51,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":52,"author":{"gitId":"Zufiqqar"},"content":"    Returns isDone status"},{"lineNumber":53,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":54,"author":{"gitId":"Zufiqqar"},"content":"    public boolean getTaskStatus(){"},{"lineNumber":55,"author":{"gitId":"Zufiqqar"},"content":"        return isDone;"},{"lineNumber":56,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":58,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":59,"author":{"gitId":"Zufiqqar"},"content":"    Returns task type"},{"lineNumber":60,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":61,"author":{"gitId":"Zufiqqar"},"content":"    public char getTaskType(){"},{"lineNumber":62,"author":{"gitId":"Zufiqqar"},"content":"        return taskType;"},{"lineNumber":63,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":65,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":65}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"/*"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"Class TaskList for creating multiple task objects as a collection"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"*/"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"    protected ArrayList\u003cTask\u003e userTasks;"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    Constructor TaskList initializing multiple task objects as a collection"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"        userTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"    Constructor for TaskList Object"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"    Initialize userTasks variable from the argument passed in"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"    public TaskList(ArrayList\u003cTask\u003e userTasks) {"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"        this.userTasks \u003d userTasks;"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"    Returns all user tasks created"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"    public ArrayList\u003cTask\u003e getUserTasks(){"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"        return userTasks;"},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":35,"author":{"gitId":"Zufiqqar"},"content":"    Function that delete a task from userTasks variable"},{"lineNumber":36,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":37,"author":{"gitId":"Zufiqqar"},"content":"    public void deleteATask(String action) throws DukeException{"},{"lineNumber":38,"author":{"gitId":"Zufiqqar"},"content":"        int activityNumber;"},{"lineNumber":39,"author":{"gitId":"Zufiqqar"},"content":"        Task temporaryTask;"},{"lineNumber":40,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"Zufiqqar"},"content":"            activityNumber \u003d Integer.parseInt(action);"},{"lineNumber":42,"author":{"gitId":"Zufiqqar"},"content":"            temporaryTask \u003d userTasks.get(activityNumber-1);"},{"lineNumber":43,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.remove(temporaryTask);"},{"lineNumber":44,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":45,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(temporaryTask.toString());"},{"lineNumber":46,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"Now you have \" + userTasks.size() + \" tasks in the list. \");"},{"lineNumber":47,"author":{"gitId":"Zufiqqar"},"content":"        } catch (NumberFormatException e){"},{"lineNumber":48,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"Invalid task input\");"},{"lineNumber":49,"author":{"gitId":"Zufiqqar"},"content":"        } catch (IndexOutOfBoundsException e){"},{"lineNumber":50,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"Invalid task input\");"},{"lineNumber":51,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":54,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":55,"author":{"gitId":"Zufiqqar"},"content":"    Function that mark a task done from userTasks variable"},{"lineNumber":56,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":57,"author":{"gitId":"Zufiqqar"},"content":"    public void markActivityAsDone(String action) throws DukeException{"},{"lineNumber":58,"author":{"gitId":"Zufiqqar"},"content":"        int activityNumber;"},{"lineNumber":59,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":60,"author":{"gitId":"Zufiqqar"},"content":"            activityNumber \u003d Integer.parseInt(action);"},{"lineNumber":61,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.get(activityNumber-1).setTaskStatus(true);"},{"lineNumber":62,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":63,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(userTasks.get(activityNumber-1).toString());"},{"lineNumber":64,"author":{"gitId":"Zufiqqar"},"content":"        } catch (NumberFormatException e){"},{"lineNumber":65,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"Invalid task input\");"},{"lineNumber":66,"author":{"gitId":"Zufiqqar"},"content":"        } catch (IndexOutOfBoundsException e){"},{"lineNumber":67,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"Invalid task input\");"},{"lineNumber":68,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":71,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":72,"author":{"gitId":"Zufiqqar"},"content":"    Function that create a event task into userTasks variable"},{"lineNumber":73,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":74,"author":{"gitId":"Zufiqqar"},"content":"    public void createEventTask(String action) throws DukeException{"},{"lineNumber":75,"author":{"gitId":"Zufiqqar"},"content":"        String newUserTask;"},{"lineNumber":76,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":77,"author":{"gitId":"Zufiqqar"},"content":"            newUserTask \u003d action.split(\"/at\")[0].strip();"},{"lineNumber":78,"author":{"gitId":"Zufiqqar"},"content":"            checkDescriptionIsEmpty(newUserTask);"},{"lineNumber":79,"author":{"gitId":"Zufiqqar"},"content":"            String eventTime \u003d action.split(\"/at\")[1].strip();"},{"lineNumber":80,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.add(new Event(newUserTask, eventTime));"},{"lineNumber":81,"author":{"gitId":"Zufiqqar"},"content":"            showTaskCreationMessage(userTasks.get(userTasks.size()-1), userTasks.size());"},{"lineNumber":82,"author":{"gitId":"Zufiqqar"},"content":"        } catch (ArrayIndexOutOfBoundsException e){"},{"lineNumber":83,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"☹ OOPS!!! The description or date of a event cannot be empty.\");"},{"lineNumber":84,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":87,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":88,"author":{"gitId":"Zufiqqar"},"content":"    Function that create a deadline task into userTasks variable"},{"lineNumber":89,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":90,"author":{"gitId":"Zufiqqar"},"content":"    public void createDeadlineTask(String action) throws DukeException{"},{"lineNumber":91,"author":{"gitId":"Zufiqqar"},"content":"        String newUserTask;"},{"lineNumber":92,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":93,"author":{"gitId":"Zufiqqar"},"content":"            newUserTask \u003d action.split(\"/by\")[0].strip();"},{"lineNumber":94,"author":{"gitId":"Zufiqqar"},"content":"            checkDescriptionIsEmpty(newUserTask);"},{"lineNumber":95,"author":{"gitId":"Zufiqqar"},"content":"            String date \u003d action.split(\"/by\")[1].strip();"},{"lineNumber":96,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.add(new Deadline(newUserTask, date));"},{"lineNumber":97,"author":{"gitId":"Zufiqqar"},"content":"            showTaskCreationMessage(userTasks.get(userTasks.size()-1), userTasks.size());"},{"lineNumber":98,"author":{"gitId":"Zufiqqar"},"content":"        } catch (ArrayIndexOutOfBoundsException e){"},{"lineNumber":99,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"☹ OOPS!!! The description or date of a deadline cannot be empty.\");"},{"lineNumber":100,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":103,"author":{"gitId":"Zufiqqar"},"content":"    private void checkDescriptionIsEmpty(String description) throws DukeException{"},{"lineNumber":104,"author":{"gitId":"Zufiqqar"},"content":"        if(description.equals(\"\")){"},{"lineNumber":105,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"☹ OOPS!!! The description or date of a deadline cannot be empty.\");"},{"lineNumber":106,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":109,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":110,"author":{"gitId":"Zufiqqar"},"content":"    Function that create a todo task into userTasks variable"},{"lineNumber":111,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":112,"author":{"gitId":"Zufiqqar"},"content":"    public void createTodoTask(String action) throws DukeException{"},{"lineNumber":113,"author":{"gitId":"Zufiqqar"},"content":"        String newUserTask;"},{"lineNumber":114,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":115,"author":{"gitId":"Zufiqqar"},"content":"            newUserTask \u003d action;"},{"lineNumber":116,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.add(new Todo(newUserTask));"},{"lineNumber":117,"author":{"gitId":"Zufiqqar"},"content":"            showTaskCreationMessage(userTasks.get(userTasks.size()-1), userTasks.size());"},{"lineNumber":118,"author":{"gitId":"Zufiqqar"},"content":"        } catch (ArrayIndexOutOfBoundsException e){"},{"lineNumber":119,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":120,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":123,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":124,"author":{"gitId":"Zufiqqar"},"content":"    Function displays all tasks created so far"},{"lineNumber":125,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":126,"author":{"gitId":"Zufiqqar"},"content":"    public void displayListOfActivities() {"},{"lineNumber":127,"author":{"gitId":"Zufiqqar"},"content":"        boolean existsOneTask \u003d false;"},{"lineNumber":128,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":129,"author":{"gitId":"Zufiqqar"},"content":"        for (int counter \u003d 0; counter \u003c userTasks.size(); counter++) {"},{"lineNumber":130,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println((counter+1) + \".\" + userTasks.get(counter).toString());"},{"lineNumber":131,"author":{"gitId":"Zufiqqar"},"content":"            existsOneTask \u003d true;"},{"lineNumber":132,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"Zufiqqar"},"content":"        if(!existsOneTask){"},{"lineNumber":134,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"Sorry. There is no task existed currently. You may create one.\");"},{"lineNumber":135,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":138,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":139,"author":{"gitId":"Zufiqqar"},"content":"    Function displays all tasks that contains the keyword"},{"lineNumber":140,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":141,"author":{"gitId":"Zufiqqar"},"content":"    public void findTask(String keyword) throws DukeException{"},{"lineNumber":142,"author":{"gitId":"Zufiqqar"},"content":"        boolean existsOneMatch \u003d false;"},{"lineNumber":143,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":144,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":145,"author":{"gitId":"Zufiqqar"},"content":"            for (int counter \u003d 0; counter \u003c userTasks.size(); counter++) {"},{"lineNumber":146,"author":{"gitId":"Zufiqqar"},"content":"                if(userTasks.get(counter).getDescription().contains(keyword)) {"},{"lineNumber":147,"author":{"gitId":"Zufiqqar"},"content":"                    System.out.println((counter + 1) + \".\" + userTasks.get(counter).toString());"},{"lineNumber":148,"author":{"gitId":"Zufiqqar"},"content":"                    existsOneMatch \u003d true;"},{"lineNumber":149,"author":{"gitId":"Zufiqqar"},"content":"                }"},{"lineNumber":150,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":151,"author":{"gitId":"Zufiqqar"},"content":"            if(!existsOneMatch){"},{"lineNumber":152,"author":{"gitId":"Zufiqqar"},"content":"                System.out.println(\"Sorry. None of the tasks match with your query\");"},{"lineNumber":153,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":154,"author":{"gitId":"Zufiqqar"},"content":"        } catch (NullPointerException e){"},{"lineNumber":155,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":156,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":159,"author":{"gitId":"Zufiqqar"},"content":"    private void showTaskCreationMessage(Task userTask, int noOfTasks) {"},{"lineNumber":160,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":161,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(userTask.toString());"},{"lineNumber":162,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Now you have \" + noOfTasks + \" tasks in the list. \");"},{"lineNumber":163,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":164}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"/*"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"Class Todo for creating todo tasks"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"*/"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"    Constructor for Todo Object"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"    Initialize description, taskType variables"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"    */"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"    public Todo(String description) {"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"        super(description, \u0027T\u0027);"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"    Overrides toString() method from superclass"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"    Returns a string of task details"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":24}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":"deadline return book/by June 6th"},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"list"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"deadline return book /by Sunday"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"list"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"done 2"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"done 8"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"list"}],"authorContributionMap":{"Zufiqqar":13}}]
