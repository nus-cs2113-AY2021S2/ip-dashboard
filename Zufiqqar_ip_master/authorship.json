[{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"T|true|read book"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":"D|false|return book|June 6th"},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"E|false|project meeting|Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"T|true|join sports club"}],"authorContributionMap":{"Zufiqqar":4}},{"path":"src/main/java/duke/app/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.app;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.commands.Command;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"import duke.file.Storage;"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"    private Storage storage;"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"    private TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    private Ui ui;"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    public Duke(String filePath) {"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"        ui \u003d new Ui();"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"        } catch (DukeException e) {"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"            ui.showLoadingError();"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"    public void run() {"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"        ui.showWelcome();"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"        boolean isExit \u003d false;"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"        while (!isExit) {"},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"            try {"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"                ui.showLine(); // show the divider line (\"_______\")"},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":"                c.execute(tasks, storage);"},{"lineNumber":35,"author":{"gitId":"Zufiqqar"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":36,"author":{"gitId":"Zufiqqar"},"content":"            } catch (DukeException e) {"},{"lineNumber":37,"author":{"gitId":"Zufiqqar"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":38,"author":{"gitId":"Zufiqqar"},"content":"            } finally {"},{"lineNumber":39,"author":{"gitId":"Zufiqqar"},"content":"                ui.showLine();"},{"lineNumber":40,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":44,"author":{"gitId":"Zufiqqar"},"content":"    public static void main(String[] args) {"},{"lineNumber":45,"author":{"gitId":"Zufiqqar"},"content":"        new Duke(\"duke.txt\").run();"},{"lineNumber":46,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Zufiqqar"},"content":"}"},{"lineNumber":48,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":49,"author":{"gitId":"Zufiqqar"},"content":"    /*"},{"lineNumber":50,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":51,"author":{"gitId":"Zufiqqar"},"content":"    static final int MAX_NO_OF_TASKS \u003d 100;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":53,"author":{"gitId":"Zufiqqar"},"content":"        showWelcomeMessage();"},{"lineNumber":54,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":55,"author":{"gitId":"Zufiqqar"},"content":"        ArrayList\u003cTask\u003e userTasks \u003d new ArrayList\u003c\u003e(MAX_NO_OF_TASKS);"},{"lineNumber":56,"author":{"gitId":"Zufiqqar"},"content":"        boolean exitLoopStatus \u003d false;"},{"lineNumber":57,"author":{"gitId":"Zufiqqar"},"content":"        Scanner inputCommand \u003d new Scanner(System.in);"},{"lineNumber":58,"author":{"gitId":"Zufiqqar"},"content":"        String userInput;"},{"lineNumber":59,"author":{"gitId":"Zufiqqar"},"content":"        FileOperation.readFile(userTasks);"},{"lineNumber":60,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":61,"author":{"gitId":"Zufiqqar"},"content":"        while(true){"},{"lineNumber":62,"author":{"gitId":"Zufiqqar"},"content":"            userInput \u003d inputCommand.nextLine();"},{"lineNumber":63,"author":{"gitId":"Zufiqqar"},"content":"            String[] individualWords \u003d userInput.split(\" \", 2);"},{"lineNumber":64,"author":{"gitId":"Zufiqqar"},"content":"            switch(individualWords[0].toLowerCase()){"},{"lineNumber":65,"author":{"gitId":"Zufiqqar"},"content":"            case \"list\":"},{"lineNumber":66,"author":{"gitId":"Zufiqqar"},"content":"                displayListOfActivities(userTasks);"},{"lineNumber":67,"author":{"gitId":"Zufiqqar"},"content":"                break;"},{"lineNumber":68,"author":{"gitId":"Zufiqqar"},"content":"            case \"todo\":"},{"lineNumber":69,"author":{"gitId":"Zufiqqar"},"content":"                createTodoTask(userTasks, individualWords);"},{"lineNumber":70,"author":{"gitId":"Zufiqqar"},"content":"                FileOperation.writeFile(userTasks);"},{"lineNumber":71,"author":{"gitId":"Zufiqqar"},"content":"                break;"},{"lineNumber":72,"author":{"gitId":"Zufiqqar"},"content":"            case \"deadline\":"},{"lineNumber":73,"author":{"gitId":"Zufiqqar"},"content":"                createDeadlineTask(userTasks, individualWords);"},{"lineNumber":74,"author":{"gitId":"Zufiqqar"},"content":"                FileOperation.writeFile(userTasks);"},{"lineNumber":75,"author":{"gitId":"Zufiqqar"},"content":"                break;"},{"lineNumber":76,"author":{"gitId":"Zufiqqar"},"content":"            case \"event\":"},{"lineNumber":77,"author":{"gitId":"Zufiqqar"},"content":"                createEventTask(userTasks, individualWords);"},{"lineNumber":78,"author":{"gitId":"Zufiqqar"},"content":"                FileOperation.writeFile(userTasks);"},{"lineNumber":79,"author":{"gitId":"Zufiqqar"},"content":"                break;"},{"lineNumber":80,"author":{"gitId":"Zufiqqar"},"content":"            case \"done\":"},{"lineNumber":81,"author":{"gitId":"Zufiqqar"},"content":"                markActivityAsDone(userTasks, individualWords);"},{"lineNumber":82,"author":{"gitId":"Zufiqqar"},"content":"                FileOperation.writeFile(userTasks);"},{"lineNumber":83,"author":{"gitId":"Zufiqqar"},"content":"                break;"},{"lineNumber":84,"author":{"gitId":"Zufiqqar"},"content":"            case \"delete\":"},{"lineNumber":85,"author":{"gitId":"Zufiqqar"},"content":"                deleteATask(userTasks, individualWords);"},{"lineNumber":86,"author":{"gitId":"Zufiqqar"},"content":"                FileOperation.writeFile(userTasks);"},{"lineNumber":87,"author":{"gitId":"Zufiqqar"},"content":"                break;"},{"lineNumber":88,"author":{"gitId":"Zufiqqar"},"content":"            case \"bye\":"},{"lineNumber":89,"author":{"gitId":"Zufiqqar"},"content":"                exitLoopStatus \u003d terminateProgram();"},{"lineNumber":90,"author":{"gitId":"Zufiqqar"},"content":"                break;"},{"lineNumber":91,"author":{"gitId":"Zufiqqar"},"content":"            default:"},{"lineNumber":92,"author":{"gitId":"Zufiqqar"},"content":"                System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":93,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":94,"author":{"gitId":"Zufiqqar"},"content":"            if (checkLoopStatus(exitLoopStatus)) {"},{"lineNumber":95,"author":{"gitId":"Zufiqqar"},"content":"                break;"},{"lineNumber":96,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":100,"author":{"gitId":"Zufiqqar"},"content":"    private static void deleteATask(ArrayList\u003cTask\u003e userTasks, String[] individualWords) {"},{"lineNumber":101,"author":{"gitId":"Zufiqqar"},"content":"        int activityNumber;"},{"lineNumber":102,"author":{"gitId":"Zufiqqar"},"content":"        Task temporaryTask;"},{"lineNumber":103,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":104,"author":{"gitId":"Zufiqqar"},"content":"            activityNumber \u003d Integer.parseInt(individualWords[1]);"},{"lineNumber":105,"author":{"gitId":"Zufiqqar"},"content":"            temporaryTask \u003d userTasks.get(activityNumber-1);"},{"lineNumber":106,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.remove(temporaryTask);"},{"lineNumber":107,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":108,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(temporaryTask.toString());"},{"lineNumber":109,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"Now you have \" + userTasks.size() + \" tasks in the list. \");"},{"lineNumber":110,"author":{"gitId":"Zufiqqar"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":111,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"Invalid task number\");"},{"lineNumber":112,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":115,"author":{"gitId":"Zufiqqar"},"content":"    private static boolean checkLoopStatus(boolean exitLoopStatus) {"},{"lineNumber":116,"author":{"gitId":"Zufiqqar"},"content":"        if(exitLoopStatus){"},{"lineNumber":117,"author":{"gitId":"Zufiqqar"},"content":"            return true;"},{"lineNumber":118,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"Zufiqqar"},"content":"        return false;"},{"lineNumber":120,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":122,"author":{"gitId":"Zufiqqar"},"content":"    private static boolean terminateProgram() {"},{"lineNumber":123,"author":{"gitId":"Zufiqqar"},"content":"        boolean exitLoopStatus;"},{"lineNumber":124,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":125,"author":{"gitId":"Zufiqqar"},"content":"        exitLoopStatus \u003d true;"},{"lineNumber":126,"author":{"gitId":"Zufiqqar"},"content":"        return exitLoopStatus;"},{"lineNumber":127,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":129,"author":{"gitId":"Zufiqqar"},"content":"    private static void markActivityAsDone(ArrayList\u003cTask\u003e userTasks, String[] individualWords) {"},{"lineNumber":130,"author":{"gitId":"Zufiqqar"},"content":"        int activityNumber;"},{"lineNumber":131,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":132,"author":{"gitId":"Zufiqqar"},"content":"            activityNumber \u003d Integer.parseInt(individualWords[1]);"},{"lineNumber":133,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.get(activityNumber-1).setTaskStatus(true);"},{"lineNumber":134,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":135,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(userTasks.get(activityNumber-1).toString());"},{"lineNumber":136,"author":{"gitId":"Zufiqqar"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":137,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"Invalid task number\");"},{"lineNumber":138,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":141,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":142,"author":{"gitId":"Zufiqqar"},"content":"    private static void createEventTask(ArrayList\u003cTask\u003e userTasks, String[] individualWords) {"},{"lineNumber":143,"author":{"gitId":"Zufiqqar"},"content":"        String newUserTask;"},{"lineNumber":144,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":145,"author":{"gitId":"Zufiqqar"},"content":"            newUserTask \u003d individualWords[1].split(\"/at\")[0];"},{"lineNumber":146,"author":{"gitId":"Zufiqqar"},"content":"            String eventTime \u003d individualWords[1].split(\"/at\")[1];"},{"lineNumber":147,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.add(new Event(newUserTask, eventTime));"},{"lineNumber":148,"author":{"gitId":"Zufiqqar"},"content":"            showTaskCreationMessage(userTasks.get(userTasks.size()-1), userTasks.size());"},{"lineNumber":149,"author":{"gitId":"Zufiqqar"},"content":"        } catch (ArrayIndexOutOfBoundsException e){"},{"lineNumber":150,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"â˜¹ OOPS!!! The description or date of a event cannot be empty.\");"},{"lineNumber":151,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":154,"author":{"gitId":"Zufiqqar"},"content":"    private static void createDeadlineTask(ArrayList\u003cTask\u003e userTasks, String[] individualWords) {"},{"lineNumber":155,"author":{"gitId":"Zufiqqar"},"content":"        String newUserTask;"},{"lineNumber":156,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":157,"author":{"gitId":"Zufiqqar"},"content":"            newUserTask \u003d individualWords[1].split(\"/by\")[0];"},{"lineNumber":158,"author":{"gitId":"Zufiqqar"},"content":"            String date \u003d individualWords[1].split(\"/by\")[1];"},{"lineNumber":159,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.add(new Deadline(newUserTask, date));"},{"lineNumber":160,"author":{"gitId":"Zufiqqar"},"content":"            showTaskCreationMessage(userTasks.get(userTasks.size()-1), userTasks.size());"},{"lineNumber":161,"author":{"gitId":"Zufiqqar"},"content":"        } catch (ArrayIndexOutOfBoundsException e){"},{"lineNumber":162,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"â˜¹ OOPS!!! The description or date of a deadline cannot be empty.\");"},{"lineNumber":163,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":166,"author":{"gitId":"Zufiqqar"},"content":"    private static void createTodoTask(ArrayList\u003cTask\u003e userTasks, String[] individualWords) {"},{"lineNumber":167,"author":{"gitId":"Zufiqqar"},"content":"        String newUserTask;"},{"lineNumber":168,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":169,"author":{"gitId":"Zufiqqar"},"content":"            newUserTask \u003d individualWords[1];"},{"lineNumber":170,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.add(new Todo(newUserTask));"},{"lineNumber":171,"author":{"gitId":"Zufiqqar"},"content":"            showTaskCreationMessage(userTasks.get(userTasks.size()-1), userTasks.size());"},{"lineNumber":172,"author":{"gitId":"Zufiqqar"},"content":"        } catch (ArrayIndexOutOfBoundsException e){"},{"lineNumber":173,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":174,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":177,"author":{"gitId":"Zufiqqar"},"content":"    private static void displayListOfActivities(ArrayList\u003cTask\u003e userTasks) {"},{"lineNumber":178,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":179,"author":{"gitId":"Zufiqqar"},"content":"        for (int counter \u003d 0; counter \u003c userTasks.size(); counter++) {"},{"lineNumber":180,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println((counter+1) + \".\" + userTasks.get(counter).toString());"},{"lineNumber":181,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":184,"author":{"gitId":"Zufiqqar"},"content":"    private static void showWelcomeMessage() {"},{"lineNumber":185,"author":{"gitId":"Zufiqqar"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":186,"author":{"gitId":"Zufiqqar"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":187,"author":{"gitId":"Zufiqqar"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":188,"author":{"gitId":"Zufiqqar"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":189,"author":{"gitId":"Zufiqqar"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":190,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(logo);"},{"lineNumber":191,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":192,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":193,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":194,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":196,"author":{"gitId":"Zufiqqar"},"content":"    private static void showTaskCreationMessage(Task userTask, int noOfTasks) {"},{"lineNumber":197,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":198,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(userTask.toString());"},{"lineNumber":199,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Now you have \" + noOfTasks + \" tasks in the list. \");"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}"},{"lineNumber":202,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":203,"author":{"gitId":"Zufiqqar"},"content":"     */"}],"authorContributionMap":{"Zufiqqar":199,"-":4}},{"path":"src/main/java/duke/app/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.app;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"    public void showWelcome(){"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"        this.showLine();"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(logo);"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"        this.showLine();"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"    public void showLoadingError() {"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Unable to load the file.\");"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"    public void showLine() {"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"-------------------------------\");"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"    public String readCommand() {"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"        String userInput;"},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"        Scanner inputCommand \u003d new Scanner(System.in);"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"        userInput \u003d inputCommand.nextLine();"},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"        return userInput;"},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":35,"author":{"gitId":"Zufiqqar"},"content":"    public void showError(String message) {"},{"lineNumber":36,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(message);"},{"lineNumber":37,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":38}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.file.Storage;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"public class AddCommand extends Command{"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"    public AddCommand(String activity, String action){"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"        super(activity, action);"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"        switch(activity) {"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"        case \"todo\":"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"            tasks.createTodoTask(action);"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"            storage.dump(tasks);"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"            break;"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"        case \"deadline\":"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"            tasks.createDeadlineTask(action);"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"            storage.dump(tasks);"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"            break;"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"        case \"event\":"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"            tasks.createEventTask(action);"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"            storage.dump(tasks);"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"            break;"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"        default:"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":31}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.file.Storage;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"public abstract class Command {"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"    protected String activity;"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"    protected String action;"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"    protected Boolean isExit;"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"    public Command(String activity, String action){"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"        this.activity \u003d activity;"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"        this.action \u003d action;"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"        isExit \u003d false;"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"    public abstract void execute(TaskList tasks, Storage storage) throws DukeException;"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"    public boolean isExit(){"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"        if(activity.equals(\"bye\")){"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"            isExit \u003d true;"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"        }else{"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"            isExit \u003d false;"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"        return isExit;"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"    public void setExitCondition(Boolean status){"},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"        isExit \u003d status;"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":32}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.file.Storage;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"public class DeleteCommand extends Command{"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"    public DeleteCommand(String activity, String action){"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"        super(activity, action);"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"        tasks.deleteATask(action);"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"        storage.dump(tasks);"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":17}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.file.Storage;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"public class DoneCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"    public DoneCommand(String activity, String action) {"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"        super(activity, action);"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"        tasks.markActivityAsDone(action);"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"        storage.dump(tasks);"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":17}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.file.Storage;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"public class ExitCommand extends Command{"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"    public ExitCommand(String activity, String action){"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"        super(activity, action);"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"        super.setExitCondition(true);"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":16}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.file.Storage;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"public class ListCommand extends Command{"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"    public ListCommand(String activity, String action){"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"        super(activity, action);"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"        tasks.displayListOfActivities();"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":16}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"        super(errorMessage);"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":8}},{"path":"src/main/java/duke/file/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.file;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.task.*;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"import java.io.*;"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"import java.util.StringTokenizer;"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    protected String relativeFileName;"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    protected ArrayList\u003cTask\u003e userTasks;"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    protected final String SEPARATOR \u003d \"|\";"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"    public Storage(String filePath) {"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"        relativeFileName \u003d filePath;"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"        userTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException{"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"        char taskSelection;"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"            File myObj \u003d new File(relativeFileName);"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"            if (myObj.createNewFile()) {"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"                System.out.println(\"File created: \" + myObj.getName());"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"            Scanner myReader \u003d new Scanner(myObj);"},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"            while (myReader.hasNextLine()) {"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"                String data \u003d myReader.nextLine();"},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"                StringTokenizer tokens \u003d new StringTokenizer(data , SEPARATOR);"},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":"                tokens.nextToken();"},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":"                taskSelection \u003d data.toLowerCase().charAt(0);"},{"lineNumber":35,"author":{"gitId":"Zufiqqar"},"content":"                switch(taskSelection){"},{"lineNumber":36,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027t\u0027:"},{"lineNumber":37,"author":{"gitId":"Zufiqqar"},"content":"                    createTodoTask(userTasks, tokens);"},{"lineNumber":38,"author":{"gitId":"Zufiqqar"},"content":"                    break;"},{"lineNumber":39,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027d\u0027:"},{"lineNumber":40,"author":{"gitId":"Zufiqqar"},"content":"                    createDeadlineTask(userTasks, tokens);"},{"lineNumber":41,"author":{"gitId":"Zufiqqar"},"content":"                    break;"},{"lineNumber":42,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027e\u0027:"},{"lineNumber":43,"author":{"gitId":"Zufiqqar"},"content":"                    createEventTask(userTasks, tokens);"},{"lineNumber":44,"author":{"gitId":"Zufiqqar"},"content":"                    break;"},{"lineNumber":45,"author":{"gitId":"Zufiqqar"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"Zufiqqar"},"content":"            myReader.close();"},{"lineNumber":48,"author":{"gitId":"Zufiqqar"},"content":"        }catch (FileNotFoundException e) {"},{"lineNumber":49,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"File cannot be found.\");"},{"lineNumber":50,"author":{"gitId":"Zufiqqar"},"content":"        }catch (IOException e) {"},{"lineNumber":51,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"I/O Operations got errors\");"},{"lineNumber":52,"author":{"gitId":"Zufiqqar"},"content":"        }catch (NoSuchElementException e) {"},{"lineNumber":53,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"The file is empty.\");"},{"lineNumber":54,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"Zufiqqar"},"content":"        return userTasks;"},{"lineNumber":56,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":58,"author":{"gitId":"Zufiqqar"},"content":"    private void createEventTask(ArrayList\u003cTask\u003e userTasks, StringTokenizer tokens) {"},{"lineNumber":59,"author":{"gitId":"Zufiqqar"},"content":"        boolean isDone \u003d Boolean.parseBoolean(tokens.nextToken());"},{"lineNumber":60,"author":{"gitId":"Zufiqqar"},"content":"        String description \u003d tokens.nextToken();"},{"lineNumber":61,"author":{"gitId":"Zufiqqar"},"content":"        String eventLocation \u003d tokens.nextToken();"},{"lineNumber":62,"author":{"gitId":"Zufiqqar"},"content":"        userTasks.add(new Event(description, eventLocation));"},{"lineNumber":63,"author":{"gitId":"Zufiqqar"},"content":"        userTasks.get(userTasks.size()-1).setTaskStatus(isDone);"},{"lineNumber":64,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":66,"author":{"gitId":"Zufiqqar"},"content":"    private void createDeadlineTask(ArrayList\u003cTask\u003e userTasks, StringTokenizer tokens) {"},{"lineNumber":67,"author":{"gitId":"Zufiqqar"},"content":"        boolean isDone \u003d Boolean.parseBoolean(tokens.nextToken());"},{"lineNumber":68,"author":{"gitId":"Zufiqqar"},"content":"        String description \u003d tokens.nextToken();"},{"lineNumber":69,"author":{"gitId":"Zufiqqar"},"content":"        String deadlineDate \u003d tokens.nextToken();"},{"lineNumber":70,"author":{"gitId":"Zufiqqar"},"content":"        userTasks.add(new Deadline(description, deadlineDate));"},{"lineNumber":71,"author":{"gitId":"Zufiqqar"},"content":"        userTasks.get(userTasks.size()-1).setTaskStatus(isDone);"},{"lineNumber":72,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":74,"author":{"gitId":"Zufiqqar"},"content":"    private void createTodoTask(ArrayList\u003cTask\u003e userTasks, StringTokenizer tokens) {"},{"lineNumber":75,"author":{"gitId":"Zufiqqar"},"content":"        boolean isDone \u003d Boolean.parseBoolean(tokens.nextToken());"},{"lineNumber":76,"author":{"gitId":"Zufiqqar"},"content":"        String description \u003d tokens.nextToken();"},{"lineNumber":77,"author":{"gitId":"Zufiqqar"},"content":"        userTasks.add(new Todo(description));"},{"lineNumber":78,"author":{"gitId":"Zufiqqar"},"content":"        userTasks.get(userTasks.size()-1).setTaskStatus(isDone);"},{"lineNumber":79,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":81,"author":{"gitId":"Zufiqqar"},"content":"    public void dump(TaskList userCurrentTasks){"},{"lineNumber":82,"author":{"gitId":"Zufiqqar"},"content":"        String newLineToBeInserted \u003d null;"},{"lineNumber":83,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":84,"author":{"gitId":"Zufiqqar"},"content":"            FileWriter myWriter \u003d new FileWriter(relativeFileName);"},{"lineNumber":85,"author":{"gitId":"Zufiqqar"},"content":"            for(Task userTask : userCurrentTasks.getUserTasks()){"},{"lineNumber":86,"author":{"gitId":"Zufiqqar"},"content":"                switch(userTask.getTaskType()){"},{"lineNumber":87,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027t\u0027:"},{"lineNumber":88,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027T\u0027:"},{"lineNumber":89,"author":{"gitId":"Zufiqqar"},"content":"                    newLineToBeInserted \u003d convertTodoDetailsToString(userTask);"},{"lineNumber":90,"author":{"gitId":"Zufiqqar"},"content":"                    break;"},{"lineNumber":91,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027d\u0027:"},{"lineNumber":92,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027D\u0027:"},{"lineNumber":93,"author":{"gitId":"Zufiqqar"},"content":"                    newLineToBeInserted \u003d convertDeadlineDetailsToString(userTask);"},{"lineNumber":94,"author":{"gitId":"Zufiqqar"},"content":"                    break;"},{"lineNumber":95,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027e\u0027:"},{"lineNumber":96,"author":{"gitId":"Zufiqqar"},"content":"                case \u0027E\u0027:"},{"lineNumber":97,"author":{"gitId":"Zufiqqar"},"content":"                    newLineToBeInserted \u003d convertEventDetailsToString(userTask);"},{"lineNumber":98,"author":{"gitId":"Zufiqqar"},"content":"                    break;"},{"lineNumber":99,"author":{"gitId":"Zufiqqar"},"content":"                }"},{"lineNumber":100,"author":{"gitId":"Zufiqqar"},"content":"                myWriter.write(newLineToBeInserted + \"\\n\");"},{"lineNumber":101,"author":{"gitId":"Zufiqqar"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"Zufiqqar"},"content":"            myWriter.close();"},{"lineNumber":103,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"Successfully updated the file.\");"},{"lineNumber":104,"author":{"gitId":"Zufiqqar"},"content":"        } catch (IOException e) {"},{"lineNumber":105,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":106,"author":{"gitId":"Zufiqqar"},"content":"            e.printStackTrace();"},{"lineNumber":107,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":110,"author":{"gitId":"Zufiqqar"},"content":"    private String convertEventDetailsToString(Task userTask) {"},{"lineNumber":111,"author":{"gitId":"Zufiqqar"},"content":"        Event event \u003d (Event) userTask;"},{"lineNumber":112,"author":{"gitId":"Zufiqqar"},"content":"        return event.getTaskType() + \"|\" + event.getTaskStatus() + \"|\" +"},{"lineNumber":113,"author":{"gitId":"Zufiqqar"},"content":"                event.getDescription() + \"|\" + event.getEventLocation();"},{"lineNumber":114,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":116,"author":{"gitId":"Zufiqqar"},"content":"    private String convertDeadlineDetailsToString(Task userTask) {"},{"lineNumber":117,"author":{"gitId":"Zufiqqar"},"content":"        Deadline deadline \u003d (Deadline) userTask;"},{"lineNumber":118,"author":{"gitId":"Zufiqqar"},"content":"        return deadline.getTaskType() + \"|\" + deadline.getTaskStatus() + \"|\" +"},{"lineNumber":119,"author":{"gitId":"Zufiqqar"},"content":"                deadline.getDescription() + \"|\" + deadline.getDeadlineDate();"},{"lineNumber":120,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":122,"author":{"gitId":"Zufiqqar"},"content":"    private String convertTodoDetailsToString(Task userTask) {"},{"lineNumber":123,"author":{"gitId":"Zufiqqar"},"content":"        return userTask.getTaskType() + \"|\" + userTask.getTaskStatus() + \"|\" + "},{"lineNumber":124,"author":{"gitId":"Zufiqqar"},"content":"                userTask.getDescription();"},{"lineNumber":125,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":126}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.commands.*;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"public class Parser {"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"    public static Command parse(String fullCommand) {"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"        String activity \u003d null;"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"        String action \u003d null;"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"            String[] individualWords \u003d fullCommand.split(\" \", 2);"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"            activity \u003d individualWords[0].toLowerCase();"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"            action \u003d individualWords[1].toLowerCase();"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"            return commandCreation(activity, action);"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"            return commandCreation(activity, null);"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"    private static Command commandCreation(String activity, String action) {"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"        switch (activity) {"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"        case \"list\":"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"            return new ListCommand(activity, action);"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"        case \"todo\":"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"        case \"deadline\":"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"        case \"event\":"},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"            return new AddCommand(activity, action);"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"        case \"done\":"},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"            return new DoneCommand(activity, action);"},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":"        case \"delete\":"},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":"            return new DeleteCommand(activity, action);"},{"lineNumber":35,"author":{"gitId":"Zufiqqar"},"content":"        case \"bye\":"},{"lineNumber":36,"author":{"gitId":"Zufiqqar"},"content":"            return new ExitCommand(activity, action);"},{"lineNumber":37,"author":{"gitId":"Zufiqqar"},"content":"        default:"},{"lineNumber":38,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":39,"author":{"gitId":"Zufiqqar"},"content":"            return null;"},{"lineNumber":40,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":42}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"    protected String deadlineDate;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"    public Deadline(String description, String deadlineDate) {"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"        super(description, \u0027D\u0027);"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadlineDate + \")\";"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"    public void setDeadlineDate(String deadlineDate){"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"    public String getDeadlineDate(){"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"        return deadlineDate;"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":24}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"    protected String eventLocation;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"    public Event(String description, String eventLocation) {"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"        super(description, \u0027E\u0027);"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"        this.eventLocation \u003d eventLocation;"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + eventLocation + \")\";"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":"    public void setEventLocation(String eventLocation){"},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"        this.eventLocation \u003d eventLocation;"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":"    public String getEventLocation(){"},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"        return eventLocation;"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":24}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"    protected char taskType;"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"    public Task(String description, char taskType) {"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    public String getStatusIcon() {"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"        return \"[\" + getStatusIcon() + \"]\" + description;"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"    public void setDescription(String description){"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"        this.description \u003d description;"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"    public String getDescription(){"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"        return description;"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"    public void setTaskStatus(boolean isDone){"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":"    public boolean getTaskStatus(){"},{"lineNumber":35,"author":{"gitId":"Zufiqqar"},"content":"        return isDone;"},{"lineNumber":36,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":38,"author":{"gitId":"Zufiqqar"},"content":"    public void setTaskType(char taskType){"},{"lineNumber":39,"author":{"gitId":"Zufiqqar"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":40,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":42,"author":{"gitId":"Zufiqqar"},"content":"    public char getTaskType(){"},{"lineNumber":43,"author":{"gitId":"Zufiqqar"},"content":"        return taskType;"},{"lineNumber":44,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":46,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":46}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"    protected ArrayList\u003cTask\u003e userTasks;"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"    public TaskList() {"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"        userTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":14,"author":{"gitId":"Zufiqqar"},"content":"    public TaskList(ArrayList\u003cTask\u003e userTasks) {"},{"lineNumber":15,"author":{"gitId":"Zufiqqar"},"content":"        this.userTasks \u003d userTasks;"},{"lineNumber":16,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":18,"author":{"gitId":"Zufiqqar"},"content":"    public ArrayList\u003cTask\u003e getUserTasks(){"},{"lineNumber":19,"author":{"gitId":"Zufiqqar"},"content":"        return userTasks;"},{"lineNumber":20,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":22,"author":{"gitId":"Zufiqqar"},"content":"    public void deleteATask(String action) throws DukeException{"},{"lineNumber":23,"author":{"gitId":"Zufiqqar"},"content":"        int activityNumber;"},{"lineNumber":24,"author":{"gitId":"Zufiqqar"},"content":"        Task temporaryTask;"},{"lineNumber":25,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"Zufiqqar"},"content":"            activityNumber \u003d Integer.parseInt(action);"},{"lineNumber":27,"author":{"gitId":"Zufiqqar"},"content":"            temporaryTask \u003d userTasks.get(activityNumber-1);"},{"lineNumber":28,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.remove(temporaryTask);"},{"lineNumber":29,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":30,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(temporaryTask.toString());"},{"lineNumber":31,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"Now you have \" + userTasks.size() + \" tasks in the list. \");"},{"lineNumber":32,"author":{"gitId":"Zufiqqar"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":33,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"Invalid task number\");"},{"lineNumber":34,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":37,"author":{"gitId":"Zufiqqar"},"content":"    public void markActivityAsDone(String action) throws DukeException{"},{"lineNumber":38,"author":{"gitId":"Zufiqqar"},"content":"        int activityNumber;"},{"lineNumber":39,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"Zufiqqar"},"content":"            activityNumber \u003d Integer.parseInt(action);"},{"lineNumber":41,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.get(activityNumber-1).setTaskStatus(true);"},{"lineNumber":42,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":43,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println(userTasks.get(activityNumber-1).toString());"},{"lineNumber":44,"author":{"gitId":"Zufiqqar"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":45,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"Invalid task number\");"},{"lineNumber":46,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":49,"author":{"gitId":"Zufiqqar"},"content":"    public void createEventTask(String action) throws DukeException{"},{"lineNumber":50,"author":{"gitId":"Zufiqqar"},"content":"        String newUserTask;"},{"lineNumber":51,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"Zufiqqar"},"content":"            newUserTask \u003d action.split(\"/at\")[0];"},{"lineNumber":53,"author":{"gitId":"Zufiqqar"},"content":"            String eventTime \u003d action.split(\"/at\")[1];"},{"lineNumber":54,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.add(new Event(newUserTask, eventTime));"},{"lineNumber":55,"author":{"gitId":"Zufiqqar"},"content":"            showTaskCreationMessage(userTasks.get(userTasks.size()-1), userTasks.size());"},{"lineNumber":56,"author":{"gitId":"Zufiqqar"},"content":"        } catch (ArrayIndexOutOfBoundsException e){"},{"lineNumber":57,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description or date of a event cannot be empty.\");"},{"lineNumber":58,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":61,"author":{"gitId":"Zufiqqar"},"content":"    public void createDeadlineTask(String action) throws DukeException{"},{"lineNumber":62,"author":{"gitId":"Zufiqqar"},"content":"        String newUserTask;"},{"lineNumber":63,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"Zufiqqar"},"content":"            newUserTask \u003d action.split(\"/by\")[0];"},{"lineNumber":65,"author":{"gitId":"Zufiqqar"},"content":"            String date \u003d action.split(\"/by\")[1];"},{"lineNumber":66,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.add(new Deadline(newUserTask, date));"},{"lineNumber":67,"author":{"gitId":"Zufiqqar"},"content":"            showTaskCreationMessage(userTasks.get(userTasks.size()-1), userTasks.size());"},{"lineNumber":68,"author":{"gitId":"Zufiqqar"},"content":"        } catch (ArrayIndexOutOfBoundsException e){"},{"lineNumber":69,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description or date of a deadline cannot be empty.\");"},{"lineNumber":70,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":73,"author":{"gitId":"Zufiqqar"},"content":"    public void createTodoTask(String action) throws DukeException{"},{"lineNumber":74,"author":{"gitId":"Zufiqqar"},"content":"        String newUserTask;"},{"lineNumber":75,"author":{"gitId":"Zufiqqar"},"content":"        try {"},{"lineNumber":76,"author":{"gitId":"Zufiqqar"},"content":"            newUserTask \u003d action;"},{"lineNumber":77,"author":{"gitId":"Zufiqqar"},"content":"            userTasks.add(new Todo(newUserTask));"},{"lineNumber":78,"author":{"gitId":"Zufiqqar"},"content":"            showTaskCreationMessage(userTasks.get(userTasks.size()-1), userTasks.size());"},{"lineNumber":79,"author":{"gitId":"Zufiqqar"},"content":"        } catch (ArrayIndexOutOfBoundsException e){"},{"lineNumber":80,"author":{"gitId":"Zufiqqar"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":81,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":84,"author":{"gitId":"Zufiqqar"},"content":"    public void displayListOfActivities() {"},{"lineNumber":85,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":86,"author":{"gitId":"Zufiqqar"},"content":"        for (int counter \u003d 0; counter \u003c userTasks.size(); counter++) {"},{"lineNumber":87,"author":{"gitId":"Zufiqqar"},"content":"            System.out.println((counter+1) + \".\" + userTasks.get(counter).toString());"},{"lineNumber":88,"author":{"gitId":"Zufiqqar"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":91,"author":{"gitId":"Zufiqqar"},"content":"    private void showTaskCreationMessage(Task userTask, int noOfTasks) {"},{"lineNumber":92,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":93,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(userTask.toString());"},{"lineNumber":94,"author":{"gitId":"Zufiqqar"},"content":"        System.out.println(\"Now you have \" + noOfTasks + \" tasks in the list. \");"},{"lineNumber":95,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":96}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"        super(description, \u0027T\u0027);"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":""},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"}"}],"authorContributionMap":{"Zufiqqar":13}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zufiqqar"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"Zufiqqar"},"content":"deadline return book/by June 6th"},{"lineNumber":3,"author":{"gitId":"Zufiqqar"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"Zufiqqar"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"Zufiqqar"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"Zufiqqar"},"content":"list"},{"lineNumber":7,"author":{"gitId":"Zufiqqar"},"content":"deadline return book /by Sunday"},{"lineNumber":8,"author":{"gitId":"Zufiqqar"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":9,"author":{"gitId":"Zufiqqar"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":10,"author":{"gitId":"Zufiqqar"},"content":"list"},{"lineNumber":11,"author":{"gitId":"Zufiqqar"},"content":"done 2"},{"lineNumber":12,"author":{"gitId":"Zufiqqar"},"content":"done 8"},{"lineNumber":13,"author":{"gitId":"Zufiqqar"},"content":"list"}],"authorContributionMap":{"Zufiqqar":13}}]
