[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0699194"},"content":"public class Deadline extends Task{"},{"lineNumber":2,"author":{"gitId":"e0699194"},"content":"\tprivate String by;"},{"lineNumber":3,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":4,"author":{"gitId":"e0699194"},"content":"\tpublic Deadline(String description, String by) {"},{"lineNumber":5,"author":{"gitId":"e0699194"},"content":"\t\tsuper(description);"},{"lineNumber":6,"author":{"gitId":"e0699194"},"content":"\t\tthis.by \u003d by;"},{"lineNumber":7,"author":{"gitId":"e0699194"},"content":"\t}"},{"lineNumber":8,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":9,"author":{"gitId":"e0699194"},"content":"\tpublic String toString() {"},{"lineNumber":10,"author":{"gitId":"e0699194"},"content":"\t\treturn \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"},{"lineNumber":11,"author":{"gitId":"e0699194"},"content":"\t}"},{"lineNumber":12,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":13,"author":{"gitId":"e0699194"},"content":"\tpublic String getType(){"},{"lineNumber":14,"author":{"gitId":"e0699194"},"content":"\t\treturn \"D\";"},{"lineNumber":15,"author":{"gitId":"e0699194"},"content":"\t}"},{"lineNumber":16,"author":{"gitId":"e0699194"},"content":"\t@Override"},{"lineNumber":17,"author":{"gitId":"e0699194"},"content":"\tpublic String saveFormatString(){"},{"lineNumber":18,"author":{"gitId":"e0699194"},"content":"\t\treturn \"D | \" + super.saveFormatString() + \" | \" + this.by;"},{"lineNumber":19,"author":{"gitId":"e0699194"},"content":"\t}"},{"lineNumber":20,"author":{"gitId":"e0699194"},"content":"}"}],"authorContributionMap":{"e0699194":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0699194"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"e0699194"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"e0699194"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":13,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":14,"author":{"gitId":"e0699194"},"content":"        System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":15,"author":{"gitId":"e0699194"},"content":"        System.out.println(\"\\tHello! I\u0027m Duke\");"},{"lineNumber":16,"author":{"gitId":"e0699194"},"content":"        System.out.println(\"\\tWhat can I do for you?\");"},{"lineNumber":17,"author":{"gitId":"e0699194"},"content":"        System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":18,"author":{"gitId":"e0699194"},"content":"        taskTracker();"},{"lineNumber":19,"author":{"gitId":"e0699194"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");"},{"lineNumber":20,"author":{"gitId":"e0699194"},"content":"        System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":21,"author":{"gitId":"e0699194"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":23,"author":{"gitId":"e0699194"},"content":"    public static void taskTracker() {"},{"lineNumber":24,"author":{"gitId":"e0699194"},"content":"        ArrayList\u003cTask\u003e tasks \u003d SaveFileManager.readFromSaveFile();"},{"lineNumber":25,"author":{"gitId":"e0699194"},"content":"        int indexOfTask \u003d tasks.size();"},{"lineNumber":26,"author":{"gitId":"e0699194"},"content":"        String userInput;"},{"lineNumber":27,"author":{"gitId":"e0699194"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":28,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":29,"author":{"gitId":"e0699194"},"content":"        running:"},{"lineNumber":30,"author":{"gitId":"e0699194"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":31,"author":{"gitId":"e0699194"},"content":"            userInput \u003d sc.nextLine();"},{"lineNumber":32,"author":{"gitId":"e0699194"},"content":"            //Split user input to retrieve task type (i.e. event, deadline) and task description."},{"lineNumber":33,"author":{"gitId":"e0699194"},"content":"            String[] strings \u003d userInput.split(\" \",2);"},{"lineNumber":34,"author":{"gitId":"e0699194"},"content":"            String taskType \u003d strings[0].toLowerCase();"},{"lineNumber":35,"author":{"gitId":"e0699194"},"content":"            String taskDescription \u003d null;"},{"lineNumber":36,"author":{"gitId":"e0699194"},"content":"            switch (taskType) {"},{"lineNumber":37,"author":{"gitId":"e0699194"},"content":"            case (\"todo\"):"},{"lineNumber":38,"author":{"gitId":"e0699194"},"content":"                try{"},{"lineNumber":39,"author":{"gitId":"e0699194"},"content":"                    taskDescription \u003d strings[1];"},{"lineNumber":40,"author":{"gitId":"e0699194"},"content":"                } catch (ArrayIndexOutOfBoundsException missingInput){"},{"lineNumber":41,"author":{"gitId":"e0699194"},"content":"                    System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":42,"author":{"gitId":"e0699194"},"content":"                    break;"},{"lineNumber":43,"author":{"gitId":"e0699194"},"content":"                }"},{"lineNumber":44,"author":{"gitId":"e0699194"},"content":"                tasks.add(new Todo(taskDescription));"},{"lineNumber":45,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":46,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"\\tGot it! I\u0027ve added this task:\");"},{"lineNumber":47,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"\\t\" + tasks.get(indexOfTask).toString());"},{"lineNumber":48,"author":{"gitId":"e0699194"},"content":"                indexOfTask++;"},{"lineNumber":49,"author":{"gitId":"e0699194"},"content":"                System.out.printf(\"\\tNow you have %d tasks in the list.\\n\", indexOfTask);"},{"lineNumber":50,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":51,"author":{"gitId":"e0699194"},"content":"                break;"},{"lineNumber":52,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":53,"author":{"gitId":"e0699194"},"content":"            case (\"deadline\"):"},{"lineNumber":54,"author":{"gitId":"e0699194"},"content":"                // taskDescription now contains task description and it\u0027s deadline date and/or time"},{"lineNumber":55,"author":{"gitId":"e0699194"},"content":"                // Split task description and deadline date and/or time"},{"lineNumber":56,"author":{"gitId":"e0699194"},"content":"                try{"},{"lineNumber":57,"author":{"gitId":"e0699194"},"content":"                    taskDescription \u003d strings[1];"},{"lineNumber":58,"author":{"gitId":"e0699194"},"content":"                } catch (ArrayIndexOutOfBoundsException missingInput){"},{"lineNumber":59,"author":{"gitId":"e0699194"},"content":"                    System.out.println(\"OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":60,"author":{"gitId":"e0699194"},"content":"                    break;"},{"lineNumber":61,"author":{"gitId":"e0699194"},"content":"                }"},{"lineNumber":62,"author":{"gitId":"e0699194"},"content":"                strings \u003d taskDescription.split(\" /by \",2);"},{"lineNumber":63,"author":{"gitId":"e0699194"},"content":"                taskDescription \u003d strings[0];"},{"lineNumber":64,"author":{"gitId":"e0699194"},"content":"                String deadlineDate \u003d strings[1];"},{"lineNumber":65,"author":{"gitId":"e0699194"},"content":"                tasks.add(new Deadline(taskDescription, deadlineDate));"},{"lineNumber":66,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":67,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"\\tGot it! I\u0027ve added this task:\");"},{"lineNumber":68,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"\\t\" + tasks.get(indexOfTask).toString());"},{"lineNumber":69,"author":{"gitId":"e0699194"},"content":"                indexOfTask++;"},{"lineNumber":70,"author":{"gitId":"e0699194"},"content":"                System.out.printf(\"\\tNow you have %d tasks in the list.\\n\", indexOfTask);"},{"lineNumber":71,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":72,"author":{"gitId":"e0699194"},"content":"                break;"},{"lineNumber":73,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":74,"author":{"gitId":"e0699194"},"content":"            case (\"event\"):"},{"lineNumber":75,"author":{"gitId":"e0699194"},"content":"                // taskDescription now contains task description and it\u0027s event date and/or timeslot"},{"lineNumber":76,"author":{"gitId":"e0699194"},"content":"                // Split task description and event\u0027s date and/or timeslot"},{"lineNumber":77,"author":{"gitId":"e0699194"},"content":"                try{"},{"lineNumber":78,"author":{"gitId":"e0699194"},"content":"                    taskDescription \u003d strings[1];"},{"lineNumber":79,"author":{"gitId":"e0699194"},"content":"                } catch (ArrayIndexOutOfBoundsException missingInput){"},{"lineNumber":80,"author":{"gitId":"e0699194"},"content":"                    System.out.println(\"OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":81,"author":{"gitId":"e0699194"},"content":"                    break;"},{"lineNumber":82,"author":{"gitId":"e0699194"},"content":"                }"},{"lineNumber":83,"author":{"gitId":"e0699194"},"content":"                strings \u003d taskDescription.split(\" /at \",2);"},{"lineNumber":84,"author":{"gitId":"e0699194"},"content":"                taskDescription \u003d strings[0];"},{"lineNumber":85,"author":{"gitId":"e0699194"},"content":"                String eventDate \u003d strings[1];"},{"lineNumber":86,"author":{"gitId":"e0699194"},"content":"                tasks.add(new Event(taskDescription,eventDate));"},{"lineNumber":87,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":88,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"Got it! I\u0027ve added this task:\");"},{"lineNumber":89,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"\\t\" + tasks.get(indexOfTask).toString());"},{"lineNumber":90,"author":{"gitId":"e0699194"},"content":"                indexOfTask++;"},{"lineNumber":91,"author":{"gitId":"e0699194"},"content":"                System.out.printf(\"Now you have %d tasks in the list.\\n\", indexOfTask);"},{"lineNumber":92,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":93,"author":{"gitId":"e0699194"},"content":"                break;"},{"lineNumber":94,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":95,"author":{"gitId":"e0699194"},"content":"            case (\"list\"):"},{"lineNumber":96,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":97,"author":{"gitId":"e0699194"},"content":"                if(indexOfTask \u003e 0) {"},{"lineNumber":98,"author":{"gitId":"e0699194"},"content":"                    System.out.println(\"Here are the tasks in your tasks:\");"},{"lineNumber":99,"author":{"gitId":"e0699194"},"content":"                    for (int i \u003d 0; i \u003c indexOfTask; i++) {"},{"lineNumber":100,"author":{"gitId":"e0699194"},"content":"                        System.out.printf(\"\\t%d. %s\\n\", i + 1, tasks.get(i).toString());"},{"lineNumber":101,"author":{"gitId":"e0699194"},"content":"                    }"},{"lineNumber":102,"author":{"gitId":"e0699194"},"content":"                } else {"},{"lineNumber":103,"author":{"gitId":"e0699194"},"content":"                    System.out.println(\"You have no tasks to complete.\");"},{"lineNumber":104,"author":{"gitId":"e0699194"},"content":"                }"},{"lineNumber":105,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":106,"author":{"gitId":"e0699194"},"content":"                break;"},{"lineNumber":107,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":108,"author":{"gitId":"e0699194"},"content":"            case (\"done\"):"},{"lineNumber":109,"author":{"gitId":"e0699194"},"content":"                try{"},{"lineNumber":110,"author":{"gitId":"e0699194"},"content":"                    taskDescription \u003d strings[1];"},{"lineNumber":111,"author":{"gitId":"e0699194"},"content":"                } catch (ArrayIndexOutOfBoundsException e){"},{"lineNumber":112,"author":{"gitId":"e0699194"},"content":"                    System.out.println(\"OOPS!!! Please specify task number.\");"},{"lineNumber":113,"author":{"gitId":"e0699194"},"content":"                    break;"},{"lineNumber":114,"author":{"gitId":"e0699194"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":115,"author":{"gitId":"e0699194"},"content":"                    System.out.println(\"Task number not recognised.\");"},{"lineNumber":116,"author":{"gitId":"e0699194"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":117,"author":{"gitId":"e0699194"},"content":"                    System.out.println(\"Task number not recognised.\");"},{"lineNumber":118,"author":{"gitId":"e0699194"},"content":"                }"},{"lineNumber":119,"author":{"gitId":"e0699194"},"content":"                int indexOfTaskDone \u003d Integer.parseInt(taskDescription) - 1;"},{"lineNumber":120,"author":{"gitId":"e0699194"},"content":"                tasks.get(indexOfTaskDone).setDone();"},{"lineNumber":121,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":122,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":123,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"\\t\" + tasks.get(indexOfTaskDone).toString());"},{"lineNumber":124,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":125,"author":{"gitId":"e0699194"},"content":"                break;"},{"lineNumber":126,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":127,"author":{"gitId":"e0699194"},"content":"            case(\"delete\"):"},{"lineNumber":128,"author":{"gitId":"e0699194"},"content":"                try{"},{"lineNumber":129,"author":{"gitId":"e0699194"},"content":"                    taskDescription \u003d strings[1];"},{"lineNumber":130,"author":{"gitId":"e0699194"},"content":"                } catch (ArrayIndexOutOfBoundsException e){"},{"lineNumber":131,"author":{"gitId":"e0699194"},"content":"                    System.out.println(\"OOPS!!! Please specify task number.\");"},{"lineNumber":132,"author":{"gitId":"e0699194"},"content":"                    break;"},{"lineNumber":133,"author":{"gitId":"e0699194"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":134,"author":{"gitId":"e0699194"},"content":"                    System.out.println(\"Task number not recognised.\");"},{"lineNumber":135,"author":{"gitId":"e0699194"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":136,"author":{"gitId":"e0699194"},"content":"                    System.out.println(\"Task number not recognised.\");"},{"lineNumber":137,"author":{"gitId":"e0699194"},"content":"                }"},{"lineNumber":138,"author":{"gitId":"e0699194"},"content":"                int indexOfTaskToDelete \u003d Integer.parseInt(taskDescription) - 1;"},{"lineNumber":139,"author":{"gitId":"e0699194"},"content":"                Task taskToDelete \u003d tasks.get(indexOfTaskToDelete);"},{"lineNumber":140,"author":{"gitId":"e0699194"},"content":"                tasks.remove(indexOfTaskToDelete);"},{"lineNumber":141,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":142,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task.\");"},{"lineNumber":143,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"\\t\" + taskToDelete.toString());"},{"lineNumber":144,"author":{"gitId":"e0699194"},"content":"                indexOfTask--;"},{"lineNumber":145,"author":{"gitId":"e0699194"},"content":"                System.out.printf(\"Now you have %d tasks in the list.\\n\", indexOfTask);"},{"lineNumber":146,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":147,"author":{"gitId":"e0699194"},"content":"                break;"},{"lineNumber":148,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":149,"author":{"gitId":"e0699194"},"content":"            case (\"bye\"):"},{"lineNumber":150,"author":{"gitId":"e0699194"},"content":"                try {"},{"lineNumber":151,"author":{"gitId":"e0699194"},"content":"                    SaveFileManager.writeToSaveFile(tasks, indexOfTask);"},{"lineNumber":152,"author":{"gitId":"e0699194"},"content":"                } catch (IOException e) {"},{"lineNumber":153,"author":{"gitId":"e0699194"},"content":"                    e.printStackTrace();"},{"lineNumber":154,"author":{"gitId":"e0699194"},"content":"                }"},{"lineNumber":155,"author":{"gitId":"e0699194"},"content":"                break running;"},{"lineNumber":156,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":157,"author":{"gitId":"e0699194"},"content":"            default:"},{"lineNumber":158,"author":{"gitId":"e0699194"},"content":"                System.out.println(\"Sorry! Input not recognised, please try again.\");"},{"lineNumber":159,"author":{"gitId":"e0699194"},"content":"            }"},{"lineNumber":160,"author":{"gitId":"e0699194"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"e0699194":152,"-":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0699194"},"content":"public class Event extends Task{"},{"lineNumber":2,"author":{"gitId":"e0699194"},"content":"\tprivate String at;"},{"lineNumber":3,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":4,"author":{"gitId":"e0699194"},"content":"\tpublic Event(String description, String at) {"},{"lineNumber":5,"author":{"gitId":"e0699194"},"content":"\t\tsuper(description);"},{"lineNumber":6,"author":{"gitId":"e0699194"},"content":"\t\tthis.at \u003d at;"},{"lineNumber":7,"author":{"gitId":"e0699194"},"content":"\t}"},{"lineNumber":8,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":9,"author":{"gitId":"e0699194"},"content":"\tpublic String toString() {"},{"lineNumber":10,"author":{"gitId":"e0699194"},"content":"\t\treturn \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"},{"lineNumber":11,"author":{"gitId":"e0699194"},"content":"\t}"},{"lineNumber":12,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":13,"author":{"gitId":"e0699194"},"content":"\t@Override"},{"lineNumber":14,"author":{"gitId":"e0699194"},"content":"\tpublic String saveFormatString(){"},{"lineNumber":15,"author":{"gitId":"e0699194"},"content":"\t\treturn \"E | \" + super.saveFormatString() + \" | \" + this.at;"},{"lineNumber":16,"author":{"gitId":"e0699194"},"content":"\t}"},{"lineNumber":17,"author":{"gitId":"e0699194"},"content":"}"}],"authorContributionMap":{"e0699194":17}},{"path":"src/main/java/SaveFileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0699194"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"e0699194"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"e0699194"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"e0699194"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"e0699194"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"e0699194"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":8,"author":{"gitId":"e0699194"},"content":"public class SaveFileManager {"},{"lineNumber":9,"author":{"gitId":"e0699194"},"content":"\tprivate static final String PATH_TO_SAVE_FILE \u003d \"./data/duke.txt\";"},{"lineNumber":10,"author":{"gitId":"e0699194"},"content":"\tprivate static final String SAVE_FILE_DIRECTORY\u003d \"./data\";"},{"lineNumber":11,"author":{"gitId":"e0699194"},"content":"\tprivate static final int MAX_TASKS \u003d 100;"},{"lineNumber":12,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":13,"author":{"gitId":"e0699194"},"content":"\tpublic static ArrayList\u003cTask\u003e readFromSaveFile() {"},{"lineNumber":14,"author":{"gitId":"e0699194"},"content":"\t\tArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(MAX_TASKS);"},{"lineNumber":15,"author":{"gitId":"e0699194"},"content":"\t\tint indexOfTask \u003d 0;"},{"lineNumber":16,"author":{"gitId":"e0699194"},"content":"\t\tString taskType;"},{"lineNumber":17,"author":{"gitId":"e0699194"},"content":"\t\tint isDone;"},{"lineNumber":18,"author":{"gitId":"e0699194"},"content":"\t\tString taskDescription;"},{"lineNumber":19,"author":{"gitId":"e0699194"},"content":"\t\tString taskBy;"},{"lineNumber":20,"author":{"gitId":"e0699194"},"content":"\t\tString taskAt;"},{"lineNumber":21,"author":{"gitId":"e0699194"},"content":"\t\ttry {"},{"lineNumber":22,"author":{"gitId":"e0699194"},"content":"\t\t\tFile directory \u003d new File(SAVE_FILE_DIRECTORY);"},{"lineNumber":23,"author":{"gitId":"e0699194"},"content":"\t\t\tFile saveFile \u003d new File(PATH_TO_SAVE_FILE);"},{"lineNumber":24,"author":{"gitId":"e0699194"},"content":"\t\t\tif (!directory.exists()){"},{"lineNumber":25,"author":{"gitId":"e0699194"},"content":"\t\t\t\tdirectory.mkdirs();"},{"lineNumber":26,"author":{"gitId":"e0699194"},"content":"\t\t\t\tsaveFile.createNewFile();"},{"lineNumber":27,"author":{"gitId":"e0699194"},"content":"\t\t\t}"},{"lineNumber":28,"author":{"gitId":"e0699194"},"content":"\t\t\tScanner sc \u003d  new Scanner(saveFile);"},{"lineNumber":29,"author":{"gitId":"e0699194"},"content":"\t\t\twhile (sc.hasNext()){"},{"lineNumber":30,"author":{"gitId":"e0699194"},"content":"\t\t\t\tString savedTaskObject \u003d sc.nextLine();"},{"lineNumber":31,"author":{"gitId":"e0699194"},"content":"\t\t\t\tString[] savedTaskSplit \u003d savedTaskObject.split(\" \\\\| \",4);"},{"lineNumber":32,"author":{"gitId":"e0699194"},"content":"\t\t\t\ttaskType \u003d savedTaskSplit[0];"},{"lineNumber":33,"author":{"gitId":"e0699194"},"content":"\t\t\t\tisDone \u003d Integer.parseInt(savedTaskSplit[1]);"},{"lineNumber":34,"author":{"gitId":"e0699194"},"content":"\t\t\t\ttaskDescription \u003d savedTaskSplit[2];"},{"lineNumber":35,"author":{"gitId":"e0699194"},"content":"\t\t\t\tswitch (taskType){"},{"lineNumber":36,"author":{"gitId":"e0699194"},"content":"\t\t\t\tcase (\"T\"):"},{"lineNumber":37,"author":{"gitId":"e0699194"},"content":"\t\t\t\t\ttasks.add(new Todo(taskDescription));"},{"lineNumber":38,"author":{"gitId":"e0699194"},"content":"\t\t\t\t\tbreak;"},{"lineNumber":39,"author":{"gitId":"e0699194"},"content":"\t\t\t\tcase (\"D\"):"},{"lineNumber":40,"author":{"gitId":"e0699194"},"content":"\t\t\t\t\ttaskBy \u003d savedTaskSplit[3];"},{"lineNumber":41,"author":{"gitId":"e0699194"},"content":"\t\t\t\t\ttasks.add(new Deadline(taskDescription,taskBy));"},{"lineNumber":42,"author":{"gitId":"e0699194"},"content":"\t\t\t\t\tbreak;"},{"lineNumber":43,"author":{"gitId":"e0699194"},"content":"\t\t\t\tcase (\"E\"):"},{"lineNumber":44,"author":{"gitId":"e0699194"},"content":"\t\t\t\t\ttaskAt \u003d savedTaskSplit[3];"},{"lineNumber":45,"author":{"gitId":"e0699194"},"content":"\t\t\t\t\ttasks.add(new Event(taskDescription,taskAt));"},{"lineNumber":46,"author":{"gitId":"e0699194"},"content":"\t\t\t\t\tbreak;"},{"lineNumber":47,"author":{"gitId":"e0699194"},"content":"\t\t\t\t}"},{"lineNumber":48,"author":{"gitId":"e0699194"},"content":"\t\t\t\tif (isDone \u003d\u003d 1){"},{"lineNumber":49,"author":{"gitId":"e0699194"},"content":"\t\t\t\t\ttasks.get(indexOfTask).setDone();"},{"lineNumber":50,"author":{"gitId":"e0699194"},"content":"\t\t\t\t}"},{"lineNumber":51,"author":{"gitId":"e0699194"},"content":"\t\t\t\tindexOfTask++;"},{"lineNumber":52,"author":{"gitId":"e0699194"},"content":"\t\t\t}"},{"lineNumber":53,"author":{"gitId":"e0699194"},"content":"\t\t} catch (FileNotFoundException e) {"},{"lineNumber":54,"author":{"gitId":"e0699194"},"content":"\t\t\te.printStackTrace();"},{"lineNumber":55,"author":{"gitId":"e0699194"},"content":"\t\t} catch (IOException e) {"},{"lineNumber":56,"author":{"gitId":"e0699194"},"content":"\t\t\te.printStackTrace();"},{"lineNumber":57,"author":{"gitId":"e0699194"},"content":"\t\t}"},{"lineNumber":58,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":59,"author":{"gitId":"e0699194"},"content":"\t\treturn tasks;"},{"lineNumber":60,"author":{"gitId":"e0699194"},"content":"\t}"},{"lineNumber":61,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":62,"author":{"gitId":"e0699194"},"content":"\tpublic static void writeToSaveFile(ArrayList\u003cTask\u003e tasks, int numberOfTasks) throws IOException {"},{"lineNumber":63,"author":{"gitId":"e0699194"},"content":"\t\tFileWriter fw \u003d new FileWriter(PATH_TO_SAVE_FILE);"},{"lineNumber":64,"author":{"gitId":"e0699194"},"content":"\t\tfor (int i \u003d 0; i \u003c numberOfTasks; i++) {"},{"lineNumber":65,"author":{"gitId":"e0699194"},"content":"\t\t\tString taskToSave \u003d tasks.get(i).saveFormatString();"},{"lineNumber":66,"author":{"gitId":"e0699194"},"content":"\t\t\tfw.write(taskToSave + \"\\n\");"},{"lineNumber":67,"author":{"gitId":"e0699194"},"content":"\t\t}"},{"lineNumber":68,"author":{"gitId":"e0699194"},"content":"\t\tfw.close();"},{"lineNumber":69,"author":{"gitId":"e0699194"},"content":"\t}"},{"lineNumber":70,"author":{"gitId":"e0699194"},"content":"}"}],"authorContributionMap":{"e0699194":70}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0699194"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"e0699194"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"e0699194"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":5,"author":{"gitId":"e0699194"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"e0699194"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"e0699194"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"e0699194"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":10,"author":{"gitId":"e0699194"},"content":"    public String getDescription(){"},{"lineNumber":11,"author":{"gitId":"e0699194"},"content":"        return this.description;"},{"lineNumber":12,"author":{"gitId":"e0699194"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":14,"author":{"gitId":"e0699194"},"content":"    public String getStatusIcon() {"},{"lineNumber":15,"author":{"gitId":"e0699194"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); //return tick or X symbols"},{"lineNumber":16,"author":{"gitId":"e0699194"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":18,"author":{"gitId":"e0699194"},"content":"    public void setDone(){"},{"lineNumber":19,"author":{"gitId":"e0699194"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"e0699194"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":22,"author":{"gitId":"e0699194"},"content":"    public String toString(){"},{"lineNumber":23,"author":{"gitId":"e0699194"},"content":"        return getStatusIcon() + \" \" + getDescription();"},{"lineNumber":24,"author":{"gitId":"e0699194"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":26,"author":{"gitId":"e0699194"},"content":"    public String saveFormatString(){"},{"lineNumber":27,"author":{"gitId":"e0699194"},"content":"        String isDoneBinary \u003d null;"},{"lineNumber":28,"author":{"gitId":"e0699194"},"content":"        if(this.isDone){"},{"lineNumber":29,"author":{"gitId":"e0699194"},"content":"            isDoneBinary \u003d \"1\";"},{"lineNumber":30,"author":{"gitId":"e0699194"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"e0699194"},"content":"            isDoneBinary \u003d \"0\";"},{"lineNumber":32,"author":{"gitId":"e0699194"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"e0699194"},"content":"        return isDoneBinary + \" | \" + this.getDescription();"},{"lineNumber":34,"author":{"gitId":"e0699194"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"e0699194"},"content":"}"}],"authorContributionMap":{"e0699194":35}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0699194"},"content":"public class Todo extends Task{"},{"lineNumber":2,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":3,"author":{"gitId":"e0699194"},"content":"\tpublic Todo(String description) {"},{"lineNumber":4,"author":{"gitId":"e0699194"},"content":"\t\tsuper(description);"},{"lineNumber":5,"author":{"gitId":"e0699194"},"content":"\t}"},{"lineNumber":6,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":7,"author":{"gitId":"e0699194"},"content":"\t@Override"},{"lineNumber":8,"author":{"gitId":"e0699194"},"content":"\tpublic String toString() {"},{"lineNumber":9,"author":{"gitId":"e0699194"},"content":"\t\treturn \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"e0699194"},"content":"\t}"},{"lineNumber":11,"author":{"gitId":"e0699194"},"content":"\t@Override"},{"lineNumber":12,"author":{"gitId":"e0699194"},"content":"\tpublic String saveFormatString(){"},{"lineNumber":13,"author":{"gitId":"e0699194"},"content":"\t\treturn \"T | \" + super.saveFormatString();"},{"lineNumber":14,"author":{"gitId":"e0699194"},"content":"\t}"},{"lineNumber":15,"author":{"gitId":"e0699194"},"content":"}"}],"authorContributionMap":{"e0699194":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"e0699194"},"content":"todo Calvin Low: Answer CS2113 tutorial questions"},{"lineNumber":2,"author":{"gitId":"e0699194"},"content":"deadline weekly CS2113 quiz /by Monday 9pm"},{"lineNumber":3,"author":{"gitId":"e0699194"},"content":"list"},{"lineNumber":4,"author":{"gitId":"e0699194"},"content":"event CS2113 lecture /at Friday 4 to 6pm"},{"lineNumber":5,"author":{"gitId":"e0699194"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"e0699194"},"content":"list"},{"lineNumber":7,"author":{"gitId":"e0699194"},"content":"^Z"}],"authorContributionMap":{"e0699194":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":22,"author":{"gitId":"e0699194"},"content":""},{"lineNumber":23,"author":{"gitId":"e0699194"},"content":"cmd /k"}],"authorContributionMap":{"e0699194":2,"-":21}}]
