[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"public class Deadline extends Task{"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"    public static final String TASK_INFO_FORMAT \u003d \"[D][%s]%s (by: %s)\";"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"    private String doBefore;"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"    public Deadline(String name, boolean isDone, String doBefore){"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"        super(name, isDone);"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"        this.doBefore \u003d doBefore;"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"    public void printTaskInfo() {"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"        if(super.getTaskDone()){"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(String.format(TASK_INFO_FORMAT,\"X\",taskName,doBefore));"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"        } else {"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(String.format(TASK_INFO_FORMAT,\" \",taskName,doBefore));"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"    public void newTaskOutput(){"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"        System.out.print(LINE_SEPERATOR + \"\\n    Deadline added:\\n      \");"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"        this.printTaskInfo();"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"}"}],"authorContributionMap":{"PingruiLi":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"import Exception.DeadlineFormatException;"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import Exception.TaskFormatException;"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"import Exception.TodoFormatException;"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"import Exception.EventFormatException;"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"import Exception.TaskAlreadyDoneException;"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"    private static final String LOGO \u003d \" ____        _\\n\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____\\n\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"    private static final String LINE_SEPERATOR \u003d \"    ____________________________________________________________\";"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"        System.out.println(\"    Hello from\\n\" + LOGO);"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"        System.out.println(LINE_SEPERATOR +"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"                \"\\n    Hello! I\u0027m Duke\\n\" +"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"                \"    What can I do for you?\\n\" +"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"                LINE_SEPERATOR);"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"        String userInput \u003d sc.nextLine();"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"        while (!userInput.equals(\"bye\")) {"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"            try {"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"                if (userInput.equals(\"list\")) {"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"                    tasks.printTaskList();"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"                    userInput \u003d sc.nextLine();"},{"lineNumber":30,"author":{"gitId":"PingruiLi"},"content":"                    continue;"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"                }"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"                String[] inputParts \u003d userInput.trim().split(\"\\\\s+\",2);"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"                switch (inputParts[0]){"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"                case \"done\":"},{"lineNumber":35,"author":{"gitId":"PingruiLi"},"content":"                    tasks.setTaskDone(inputParts[1]);"},{"lineNumber":36,"author":{"gitId":"PingruiLi"},"content":"                    break;"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"                case \"todo\":"},{"lineNumber":38,"author":{"gitId":"PingruiLi"},"content":"                    if(inputParts.length \u003c 2) {"},{"lineNumber":39,"author":{"gitId":"PingruiLi"},"content":"                        throw new TodoFormatException();"},{"lineNumber":40,"author":{"gitId":"PingruiLi"},"content":"                    }"},{"lineNumber":41,"author":{"gitId":"PingruiLi"},"content":"                    ToDo newTodo \u003d new ToDo(inputParts[1],false);"},{"lineNumber":42,"author":{"gitId":"PingruiLi"},"content":"                    tasks.addTask(newTodo);"},{"lineNumber":43,"author":{"gitId":"PingruiLi"},"content":"                    break;"},{"lineNumber":44,"author":{"gitId":"PingruiLi"},"content":"                case \"deadline\":"},{"lineNumber":45,"author":{"gitId":"PingruiLi"},"content":"                    if (inputParts.length \u003c 2) {"},{"lineNumber":46,"author":{"gitId":"PingruiLi"},"content":"                        throw new DeadlineFormatException();"},{"lineNumber":47,"author":{"gitId":"PingruiLi"},"content":"                    }"},{"lineNumber":48,"author":{"gitId":"PingruiLi"},"content":"                    String[] deadlineNameDoby \u003d inputParts[1].split(\"/by\");"},{"lineNumber":49,"author":{"gitId":"PingruiLi"},"content":"                    if(deadlineNameDoby.length \u003c 2) {"},{"lineNumber":50,"author":{"gitId":"PingruiLi"},"content":"                        throw new DeadlineFormatException();"},{"lineNumber":51,"author":{"gitId":"PingruiLi"},"content":"                    }"},{"lineNumber":52,"author":{"gitId":"PingruiLi"},"content":"                    String deadlineName \u003d deadlineNameDoby[0].trim();"},{"lineNumber":53,"author":{"gitId":"PingruiLi"},"content":"                    String deadlineDoby \u003d deadlineNameDoby[1].trim();"},{"lineNumber":54,"author":{"gitId":"PingruiLi"},"content":"                    Deadline newDeadline \u003d new Deadline(deadlineName,false,deadlineDoby);"},{"lineNumber":55,"author":{"gitId":"PingruiLi"},"content":"                    tasks.addTask(newDeadline);"},{"lineNumber":56,"author":{"gitId":"PingruiLi"},"content":"                    break;"},{"lineNumber":57,"author":{"gitId":"PingruiLi"},"content":"                case \"event\":"},{"lineNumber":58,"author":{"gitId":"PingruiLi"},"content":"                    if (inputParts.length \u003c 2) {"},{"lineNumber":59,"author":{"gitId":"PingruiLi"},"content":"                        throw new EventFormatException();"},{"lineNumber":60,"author":{"gitId":"PingruiLi"},"content":"                    }"},{"lineNumber":61,"author":{"gitId":"PingruiLi"},"content":"                    String[] eventNameDoby \u003d inputParts[1].split(\"/at\");"},{"lineNumber":62,"author":{"gitId":"PingruiLi"},"content":"                    if(eventNameDoby.length \u003c 2) {"},{"lineNumber":63,"author":{"gitId":"PingruiLi"},"content":"                        throw new EventFormatException();"},{"lineNumber":64,"author":{"gitId":"PingruiLi"},"content":"                    }"},{"lineNumber":65,"author":{"gitId":"PingruiLi"},"content":"                    String eventName \u003d eventNameDoby[0].trim();"},{"lineNumber":66,"author":{"gitId":"PingruiLi"},"content":"                    String eventDoby \u003d eventNameDoby[1].trim();"},{"lineNumber":67,"author":{"gitId":"PingruiLi"},"content":"                    Event newEvent \u003d new Event(eventName,false,eventDoby);"},{"lineNumber":68,"author":{"gitId":"PingruiLi"},"content":"                    tasks.addTask(newEvent);"},{"lineNumber":69,"author":{"gitId":"PingruiLi"},"content":"                    break;"},{"lineNumber":70,"author":{"gitId":"PingruiLi"},"content":"                default:"},{"lineNumber":71,"author":{"gitId":"PingruiLi"},"content":"                    System.out.println(LINE_SEPERATOR + \"\\n    Invalid input format.\");"},{"lineNumber":72,"author":{"gitId":"PingruiLi"},"content":"                    System.out.println(\"    Input format:\\n    todo todo name\\n    deadline deadline name /by time of deadline\" +"},{"lineNumber":73,"author":{"gitId":"PingruiLi"},"content":"                            \"\\n    event event name /at time of the event\\n\" + LINE_SEPERATOR);"},{"lineNumber":74,"author":{"gitId":"PingruiLi"},"content":"                    break;"},{"lineNumber":75,"author":{"gitId":"PingruiLi"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"PingruiLi"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":77,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(LINE_SEPERATOR + \"\\n    Invalid input format.\");"},{"lineNumber":78,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(\"    Input format for done:done + event index    eg. done 1\\n\" + LINE_SEPERATOR);"},{"lineNumber":79,"author":{"gitId":"PingruiLi"},"content":"            } catch (TaskAlreadyDoneException e) {"},{"lineNumber":80,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(LINE_SEPERATOR + \"\\n    The task is done already.\\n\" + LINE_SEPERATOR);"},{"lineNumber":81,"author":{"gitId":"PingruiLi"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":82,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(LINE_SEPERATOR + \"\\n    The task index is out of bound.\\n\" + LINE_SEPERATOR);"},{"lineNumber":83,"author":{"gitId":"PingruiLi"},"content":"            } catch (TaskFormatException e) {"},{"lineNumber":84,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(LINE_SEPERATOR + \"\\n\" + e.toString() + LINE_SEPERATOR);"},{"lineNumber":85,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"PingruiLi"},"content":"            userInput \u003d sc.nextLine();"},{"lineNumber":87,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"PingruiLi"},"content":"        System.out.print(LINE_SEPERATOR +"},{"lineNumber":89,"author":{"gitId":"PingruiLi"},"content":"                \"\\n    Bye. Hope to see you again soon!\" +"},{"lineNumber":90,"author":{"gitId":"PingruiLi"},"content":"                \"\\n\" + LINE_SEPERATOR);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"PingruiLi":84,"-":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"public class Event extends Task{"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"    public static final String TASK_INFO_FORMAT \u003d \"[E][%s]%s (at: %s)\";"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"    private String duration;"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"    public Event(String name, boolean isDone, String duration){"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"        super(name, isDone);"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"        this.duration \u003d duration;"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"    public void printTaskInfo() {"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"        if(super.getTaskDone()){"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(String.format(TASK_INFO_FORMAT,\"X\",taskName,duration));"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"        } else {"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(String.format(TASK_INFO_FORMAT,\" \",taskName,duration));"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"    public void newTaskOutput(){"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"        System.out.print(LINE_SEPERATOR + \"\\n    Event added:\\n      \");"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"        this.printTaskInfo();"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"}"}],"authorContributionMap":{"PingruiLi":24}},{"path":"src/main/java/Exception/DeadlineFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package Exception;"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"public class DeadlineFormatException extends TaskFormatException {"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"    public String toString(){"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"        return new String(\"    Name of deadline should be specified after keyword deadline. \" +"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"                \"Name and the time to finish should be separated by \\\"/by\\\"\\n\" +"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"                super.toString());"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"}"}],"authorContributionMap":{"PingruiLi":10}},{"path":"src/main/java/Exception/EventFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package Exception;"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"public class EventFormatException extends TaskFormatException {"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"    public String toString(){"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"        return new String(\"    Name of event should be specified after keyword event. \" +"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"                \"Name and the time should be separated by \\\"/at\\\"\\n\" +"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"                super.toString());"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"}"}],"authorContributionMap":{"PingruiLi":10}},{"path":"src/main/java/Exception/TaskAlreadyDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package Exception;"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"public class TaskAlreadyDoneException extends RuntimeException{"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"    public TaskAlreadyDoneException(String s){"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"        super(s);"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"    public TaskAlreadyDoneException(){};"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"    public String toString(){"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"        return new String(\"The task is already marked as done\");"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"}"}],"authorContributionMap":{"PingruiLi":14}},{"path":"src/main/java/Exception/TaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package Exception;"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"public class TaskFormatException extends RuntimeException{"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"    public TaskFormatException(){};"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"    public String toString(){"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"        return new String(\"    Input format:\\n    todo todo name\\n    deadline deadline name /by time of deadline\" +"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"                \"\\n    event event name /at time of the event\\n\");"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"}"}],"authorContributionMap":{"PingruiLi":11}},{"path":"src/main/java/Exception/TodoFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package Exception;"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"public class TodoFormatException extends TaskFormatException {"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"    public String toString(){"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"        return new String(\"    Name of Todo should be specified after todo keyword\\n\" +"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"                super.toString());"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"}"}],"authorContributionMap":{"PingruiLi":9}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"    public String taskName;"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"    public boolean taskDone;"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"    public static final String TASK_INFO_FORMAT \u003d \"[ ][%s]%s\";"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"    public static final String LINE_SEPERATOR \u003d \"    ____________________________________________________________\";"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"    public Task(String name, boolean done) {"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"        taskName \u003d name;"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"        taskDone \u003d done;"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"    public String getTaskName() {"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"        return taskName;"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"    public boolean getTaskDone() {"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"        return taskDone;"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"    public void setTaskName(String name) {"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"        taskName \u003d name;"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"    public void setTaskDone(boolean done){"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"        taskDone \u003d done;"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"    public void printTaskInfo(){};"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":30,"author":{"gitId":"PingruiLi"},"content":"    public void getDoneOutput(){};"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"    public void newTaskOutput(){};"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"}"}],"authorContributionMap":{"PingruiLi":33}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"import Exception.TaskAlreadyDoneException;"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"public class TaskList {"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"    private Task[] tasks \u003d new Task[100];"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"    private int taskCount \u003d 0;"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"    public static final String LINE_SEPERATOR \u003d \"    ____________________________________________________________\";"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"    public int getTaskCount(){"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"        return taskCount;"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"    public void addTask(Task task){"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"        if(taskCount \u003d\u003d 100){"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"Duke can store 100 task at most.\");"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"        tasks[taskCount] \u003d task;"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"        taskCount++;"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"        task.newTaskOutput();"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"        System.out.println(\"    Now you have \" + taskCount + \" tasks in the list\\n\" + LINE_SEPERATOR);"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"    public void setTaskDone(int taskIndex){"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"        tasks[taskIndex].setTaskDone(true);"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"    public Task getTask(int taskIndex){"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"        return tasks[taskIndex];"},{"lineNumber":30,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"    public void printTaskList(){"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"        System.out.println(LINE_SEPERATOR + \"\\n    Here are the tasks in your list:\");"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"        for(int i\u003d0; i\u003ctaskCount; i++){"},{"lineNumber":35,"author":{"gitId":"PingruiLi"},"content":"            System.out.print(\"    \" + (i+1) + \".\");"},{"lineNumber":36,"author":{"gitId":"PingruiLi"},"content":"            tasks[i].printTaskInfo();"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"PingruiLi"},"content":"        System.out.println(LINE_SEPERATOR);"},{"lineNumber":39,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":41,"author":{"gitId":"PingruiLi"},"content":"    public int getTasIndex(String taskName){"},{"lineNumber":42,"author":{"gitId":"PingruiLi"},"content":"        for(int i\u003d0; i\u003ctaskCount; i++){"},{"lineNumber":43,"author":{"gitId":"PingruiLi"},"content":"            if(taskName.equals(tasks[i].getTaskName())){"},{"lineNumber":44,"author":{"gitId":"PingruiLi"},"content":"                return i;"},{"lineNumber":45,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"PingruiLi"},"content":"        return -1;"},{"lineNumber":48,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":50,"author":{"gitId":"PingruiLi"},"content":"    public void setTaskDone(String index) throws IndexOutOfBoundsException, NumberFormatException, TaskAlreadyDoneException {"},{"lineNumber":51,"author":{"gitId":"PingruiLi"},"content":"        int indexInt \u003d Integer.parseInt(index) - 1;"},{"lineNumber":52,"author":{"gitId":"PingruiLi"},"content":"        if(indexInt \u003e taskCount){"},{"lineNumber":53,"author":{"gitId":"PingruiLi"},"content":"            throw new IndexOutOfBoundsException();"},{"lineNumber":54,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"PingruiLi"},"content":"        if(this.getTask(indexInt).getTaskDone()){"},{"lineNumber":56,"author":{"gitId":"PingruiLi"},"content":"            throw new TaskAlreadyDoneException();"},{"lineNumber":57,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"PingruiLi"},"content":"        this.setTaskDone(indexInt);"},{"lineNumber":59,"author":{"gitId":"PingruiLi"},"content":"        System.out.print(LINE_SEPERATOR +"},{"lineNumber":60,"author":{"gitId":"PingruiLi"},"content":"                \"\\n    Nice! I\u0027ve marked this task as done:\\n        \");"},{"lineNumber":61,"author":{"gitId":"PingruiLi"},"content":"        this.getTask(indexInt).printTaskInfo();"},{"lineNumber":62,"author":{"gitId":"PingruiLi"},"content":"        System.out.println(LINE_SEPERATOR);"},{"lineNumber":63,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":65,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":66,"author":{"gitId":"PingruiLi"},"content":"}"}],"authorContributionMap":{"PingruiLi":66}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"public class ToDo extends Task{"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"    public static final String TASK_INFO_FORMAT \u003d \"[T][%s]%s\";"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"    public ToDo(String name, boolean isDone){"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"        super(name, isDone);"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"    public void printTaskInfo() {"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"        if(super.getTaskDone()){"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(String.format(TASK_INFO_FORMAT,\"X\",taskName));"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"        } else {"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(String.format(TASK_INFO_FORMAT,\" \",taskName));"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"    public void newTaskOutput(){"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"        System.out.print(LINE_SEPERATOR + \"\\n    ToDo added:\\n      \");"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"        this.printTaskInfo();"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"}"}],"authorContributionMap":{"PingruiLi":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"todo read a book"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"list"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"deadline return a book /by Sunday 10am"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"list"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"event"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"list"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"event join concert / at tomorrow"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"event tutorial /at Feb 5 10am"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"deadline do online quiz Tuesday 10pm"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"done 1"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"blah"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"list"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"todo"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"done 2"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"done 3"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"list"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"bye"}],"authorContributionMap":{"PingruiLi":18}}]
