[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"    protected String by;"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"soepaingzaw"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";"},{"lineNumber":13,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"soepaingzaw"},"content":"}"},{"lineNumber":15,"author":{"gitId":"soepaingzaw"},"content":""}],"authorContributionMap":{"soepaingzaw":15}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"    static final int LINES \u003d 85;"},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":"    static final int INPUTS \u003d 100;"},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":"    public static int index \u003d 0;"},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":"    public static String line;"},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":"    public static boolean continueInputs \u003d true;"},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"    public static Task[] tasks \u003d new Task[INPUTS];"},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":13,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":14,"author":{"gitId":"soepaingzaw"},"content":"        printWelcomeMessage();"},{"lineNumber":15,"author":{"gitId":"soepaingzaw"},"content":"        printDivider();"},{"lineNumber":16,"author":{"gitId":"soepaingzaw"},"content":"        greetUserForTask();"},{"lineNumber":17,"author":{"gitId":"soepaingzaw"},"content":"        receiveInputs();"},{"lineNumber":18,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":20,"author":{"gitId":"soepaingzaw"},"content":"    public static void printWelcomeMessage() {"},{"lineNumber":21,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":24,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":26,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":27,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":28,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"Hello from\\n\" + logo);"},{"lineNumber":29,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":30,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":32,"author":{"gitId":"soepaingzaw"},"content":"    public static void printDivider() {"},{"lineNumber":33,"author":{"gitId":"soepaingzaw"},"content":"        for (int i \u003d 0; i \u003c LINES; i++) {"},{"lineNumber":34,"author":{"gitId":"soepaingzaw"},"content":"            System.out.print(\"_\");"},{"lineNumber":35,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"\\n\");"},{"lineNumber":37,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":38,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":40,"author":{"gitId":"soepaingzaw"},"content":"    public static void greetUserForTask() {"},{"lineNumber":41,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"Hello! I\u0027m Duke\\n\");"},{"lineNumber":42,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"What can I do for you?\\n\");"},{"lineNumber":43,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":44,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":46,"author":{"gitId":"soepaingzaw"},"content":"    public static void receiveInputs() {"},{"lineNumber":47,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":48,"author":{"gitId":"soepaingzaw"},"content":"        do {"},{"lineNumber":49,"author":{"gitId":"soepaingzaw"},"content":"            printDivider();"},{"lineNumber":50,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":51,"author":{"gitId":"soepaingzaw"},"content":"            Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":52,"author":{"gitId":"soepaingzaw"},"content":"            line \u003d scan.nextLine();"},{"lineNumber":53,"author":{"gitId":"soepaingzaw"},"content":"            String[] word \u003d line.split(\" \");"},{"lineNumber":54,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":55,"author":{"gitId":"soepaingzaw"},"content":"            try {"},{"lineNumber":56,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":57,"author":{"gitId":"soepaingzaw"},"content":"                switch (word[0]) {"},{"lineNumber":58,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":59,"author":{"gitId":"soepaingzaw"},"content":"                case \"bye\":"},{"lineNumber":60,"author":{"gitId":"soepaingzaw"},"content":"                    bye();"},{"lineNumber":61,"author":{"gitId":"soepaingzaw"},"content":"                    break;"},{"lineNumber":62,"author":{"gitId":"soepaingzaw"},"content":"                case \"done\":"},{"lineNumber":63,"author":{"gitId":"soepaingzaw"},"content":"                    done();"},{"lineNumber":64,"author":{"gitId":"soepaingzaw"},"content":"                    break;"},{"lineNumber":65,"author":{"gitId":"soepaingzaw"},"content":"                case \"list\":"},{"lineNumber":66,"author":{"gitId":"soepaingzaw"},"content":"                    list();"},{"lineNumber":67,"author":{"gitId":"soepaingzaw"},"content":"                    break;"},{"lineNumber":68,"author":{"gitId":"soepaingzaw"},"content":"                case \"todo\":"},{"lineNumber":69,"author":{"gitId":"soepaingzaw"},"content":"                    todo();"},{"lineNumber":70,"author":{"gitId":"soepaingzaw"},"content":"                    break;"},{"lineNumber":71,"author":{"gitId":"soepaingzaw"},"content":"                case \"deadline\":"},{"lineNumber":72,"author":{"gitId":"soepaingzaw"},"content":"                    deadline();"},{"lineNumber":73,"author":{"gitId":"soepaingzaw"},"content":"                    break;"},{"lineNumber":74,"author":{"gitId":"soepaingzaw"},"content":"                case \"event\":"},{"lineNumber":75,"author":{"gitId":"soepaingzaw"},"content":"                    event();"},{"lineNumber":76,"author":{"gitId":"soepaingzaw"},"content":"                    break;"},{"lineNumber":77,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":78,"author":{"gitId":"soepaingzaw"},"content":"                default:"},{"lineNumber":79,"author":{"gitId":"soepaingzaw"},"content":"                    throw new DukeException();"},{"lineNumber":80,"author":{"gitId":"soepaingzaw"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":82,"author":{"gitId":"soepaingzaw"},"content":"            } catch (DukeException e) {"},{"lineNumber":83,"author":{"gitId":"soepaingzaw"},"content":"                System.out.print(e.getMessage());"},{"lineNumber":84,"author":{"gitId":"soepaingzaw"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":86,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":87,"author":{"gitId":"soepaingzaw"},"content":"        } while (continueInputs);"},{"lineNumber":88,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":89,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":91,"author":{"gitId":"soepaingzaw"},"content":"    public static void todo() throws DukeException {"},{"lineNumber":92,"author":{"gitId":"soepaingzaw"},"content":"        if (line.length() \u003d\u003d 4) {"},{"lineNumber":93,"author":{"gitId":"soepaingzaw"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\\n\");"},{"lineNumber":94,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"soepaingzaw"},"content":"        tasks[index++] \u003d new Todo(line.substring(5));"},{"lineNumber":96,"author":{"gitId":"soepaingzaw"},"content":"        addToTaskMessage();"},{"lineNumber":97,"author":{"gitId":"soepaingzaw"},"content":"        printNumberOfTask();"},{"lineNumber":98,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":100,"author":{"gitId":"soepaingzaw"},"content":"    public static void deadline() throws DukeException {"},{"lineNumber":101,"author":{"gitId":"soepaingzaw"},"content":"        int indexOfSlash \u003d line.indexOf(\u0027/\u0027);"},{"lineNumber":102,"author":{"gitId":"soepaingzaw"},"content":"        if (line.length() \u003d\u003d 8) {"},{"lineNumber":103,"author":{"gitId":"soepaingzaw"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description of a deadline cannot be empty.\\n\");"},{"lineNumber":104,"author":{"gitId":"soepaingzaw"},"content":"        } else if (!(indexOfSlash \u003e -1)) {"},{"lineNumber":105,"author":{"gitId":"soepaingzaw"},"content":"            throw new DukeException(\"â˜¹ ERROR!! Please input TASK, DAY and TIME using the following format:\\n\" +"},{"lineNumber":106,"author":{"gitId":"soepaingzaw"},"content":"                    \"deadline [TASK] /by [DAY] [TIME].\\n\");"},{"lineNumber":107,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":109,"author":{"gitId":"soepaingzaw"},"content":"        tasks[index++] \u003d new Deadline(line.substring(9, indexOfSlash), line.substring(indexOfSlash + 3));"},{"lineNumber":110,"author":{"gitId":"soepaingzaw"},"content":"        addToTaskMessage();"},{"lineNumber":111,"author":{"gitId":"soepaingzaw"},"content":"        printNumberOfTask();"},{"lineNumber":112,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":114,"author":{"gitId":"soepaingzaw"},"content":"    public static void event() throws DukeException {"},{"lineNumber":115,"author":{"gitId":"soepaingzaw"},"content":"        int indexOfSlash \u003d line.indexOf(\u0027/\u0027);"},{"lineNumber":116,"author":{"gitId":"soepaingzaw"},"content":"        if (line.length() \u003d\u003d 5) {"},{"lineNumber":117,"author":{"gitId":"soepaingzaw"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description of a event cannot be empty.\\n\");"},{"lineNumber":118,"author":{"gitId":"soepaingzaw"},"content":"        } else if (!(indexOfSlash \u003e -1)) {"},{"lineNumber":119,"author":{"gitId":"soepaingzaw"},"content":"            throw new DukeException(\"â˜¹ ERROR!! Please input TASK, DAY and TIME using the following format:\\n\" +"},{"lineNumber":120,"author":{"gitId":"soepaingzaw"},"content":"                    \"event [TASK] /at [DAY] [TIME].\\n\");"},{"lineNumber":121,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":123,"author":{"gitId":"soepaingzaw"},"content":"        tasks[index++] \u003d new Event(line.substring(6, indexOfSlash), line.substring(indexOfSlash + 3));"},{"lineNumber":124,"author":{"gitId":"soepaingzaw"},"content":"        addToTaskMessage();"},{"lineNumber":125,"author":{"gitId":"soepaingzaw"},"content":"        printNumberOfTask();"},{"lineNumber":126,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":128,"author":{"gitId":"soepaingzaw"},"content":"    public static void list() {"},{"lineNumber":129,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"Here are the tasks in your list:\\n\");"},{"lineNumber":130,"author":{"gitId":"soepaingzaw"},"content":"        for (int i \u003d 0; i \u003c index; i++) {"},{"lineNumber":131,"author":{"gitId":"soepaingzaw"},"content":"            System.out.printf(\"%d.\" + tasks[i].toString() + \"\\n\", i + 1);"},{"lineNumber":132,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":135,"author":{"gitId":"soepaingzaw"},"content":"    public static void done() {"},{"lineNumber":136,"author":{"gitId":"soepaingzaw"},"content":"        int order \u003d Integer.parseInt(line.substring(5));"},{"lineNumber":137,"author":{"gitId":"soepaingzaw"},"content":"        tasks[order - 1].markAsDone();"},{"lineNumber":138,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"Nice! I\u0027ve marked this task as done:\\n\" +"},{"lineNumber":139,"author":{"gitId":"soepaingzaw"},"content":"                tasks[order - 1].toString() + \"\\n\");"},{"lineNumber":140,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":142,"author":{"gitId":"soepaingzaw"},"content":"    public static void bye() {"},{"lineNumber":143,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"Bye. Hope to see you again soon!\\n\");"},{"lineNumber":144,"author":{"gitId":"soepaingzaw"},"content":"        continueInputs \u003d false;"},{"lineNumber":145,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":147,"author":{"gitId":"soepaingzaw"},"content":"    public static void addToTaskMessage() {"},{"lineNumber":148,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"Got it! I have added this task:\\n\" + tasks[index - 1].toString() + \"\\n\");"},{"lineNumber":149,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":151,"author":{"gitId":"soepaingzaw"},"content":"    public static void printNumberOfTask() {"},{"lineNumber":152,"author":{"gitId":"soepaingzaw"},"content":"        System.out.printf(\"Now you have %d task(s) in the list.\\n\", index);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"}"},{"lineNumber":156,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":157,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":158,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":159,"author":{"gitId":"soepaingzaw"},"content":""}],"authorContributionMap":{"soepaingzaw":150,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":"    public DukeException() {"},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"        super(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":"        super(errorMessage);"},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"}"}],"authorContributionMap":{"soepaingzaw":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"    protected String at;"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"    public Event(String description, String at) {"},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":"        this.at \u003d at;"},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"soepaingzaw"},"content":"        return \"[E]\" + super.toString() + \" (at:\" + at + \")\";"},{"lineNumber":13,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":15,"author":{"gitId":"soepaingzaw"},"content":"}"}],"authorContributionMap":{"soepaingzaw":15}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"    public Todo(String description) {"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":"}"}],"authorContributionMap":{"soepaingzaw":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"todo watch lecture video"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":"deadline do tutorial /by Thurs 9a.m."},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"event Beach Party /at Sentosa Sat 3p.m."},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":"list"},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"bye"}],"authorContributionMap":{"soepaingzaw":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"soepaingzaw":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"soepaingzaw"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"soepaingzaw":1,"-":37}}]
