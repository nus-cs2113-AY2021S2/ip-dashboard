[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"soepaingzaw"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"soepaingzaw"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"soepaingzaw"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"soepaingzaw"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"soepaingzaw":9,"-":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"    static final int ITEMS \u003d 25;"},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":"    static final int LINES \u003d 85;"},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":14,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":16,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":17,"author":{"gitId":"soepaingzaw"},"content":"        for (int i \u003d 0; i \u003c LINES; i++) {"},{"lineNumber":18,"author":{"gitId":"soepaingzaw"},"content":"            System.out.print(\"_\");"},{"lineNumber":19,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":21,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"\\n\");"},{"lineNumber":22,"author":{"gitId":"soepaingzaw"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":23,"author":{"gitId":"soepaingzaw"},"content":"        System.out.println(\"What can I  do for you?\");"},{"lineNumber":24,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":25,"author":{"gitId":"soepaingzaw"},"content":"        for (int i \u003d 0; i \u003c LINES; i++) {"},{"lineNumber":26,"author":{"gitId":"soepaingzaw"},"content":"            System.out.print(\"_\");"},{"lineNumber":27,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":29,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"\\n\");"},{"lineNumber":30,"author":{"gitId":"soepaingzaw"},"content":"        Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":31,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":32,"author":{"gitId":"soepaingzaw"},"content":"        //new String[numRowsofData]"},{"lineNumber":33,"author":{"gitId":"soepaingzaw"},"content":"        String[] tasks\u003d new String[ITEMS];"},{"lineNumber":34,"author":{"gitId":"soepaingzaw"},"content":"        String[] checks \u003d new String[ITEMS];"},{"lineNumber":35,"author":{"gitId":"soepaingzaw"},"content":"        String[] type\u003dnew String[ITEMS];"},{"lineNumber":36,"author":{"gitId":"soepaingzaw"},"content":"        String[] deadline\u003dnew String[ITEMS];"},{"lineNumber":37,"author":{"gitId":"soepaingzaw"},"content":"        String[] parts;"},{"lineNumber":38,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":39,"author":{"gitId":"soepaingzaw"},"content":"        int index\u003d0;"},{"lineNumber":40,"author":{"gitId":"soepaingzaw"},"content":"        int count;"},{"lineNumber":41,"author":{"gitId":"soepaingzaw"},"content":"        int num;"},{"lineNumber":42,"author":{"gitId":"soepaingzaw"},"content":"        int temp;"},{"lineNumber":43,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":44,"author":{"gitId":"soepaingzaw"},"content":"        while(true) {"},{"lineNumber":45,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":46,"author":{"gitId":"soepaingzaw"},"content":"            tasks[index] \u003d scan.nextLine();"},{"lineNumber":47,"author":{"gitId":"soepaingzaw"},"content":"            checks[index] \u003d \"[ ]\";"},{"lineNumber":48,"author":{"gitId":"soepaingzaw"},"content":"            parts \u003d tasks[index].split(\" \");//splits string into separate parts"},{"lineNumber":49,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":50,"author":{"gitId":"soepaingzaw"},"content":"            if(parts[0].equals(\"done\")) {"},{"lineNumber":51,"author":{"gitId":"soepaingzaw"},"content":"                temp\u003dInteger.parseInt(parts[1]) - 1;"},{"lineNumber":52,"author":{"gitId":"soepaingzaw"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":53,"author":{"gitId":"soepaingzaw"},"content":"                checks[temp] \u003d \"[âœ“]\";"},{"lineNumber":54,"author":{"gitId":"soepaingzaw"},"content":"                System.out.println(type[temp] + checks[temp] + \" \" + tasks[temp]);"},{"lineNumber":55,"author":{"gitId":"soepaingzaw"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":57,"author":{"gitId":"soepaingzaw"},"content":"            else if (tasks[index].equals(\"bye\")) {"},{"lineNumber":58,"author":{"gitId":"soepaingzaw"},"content":"                System.out.println(\"BYE! See you again!\");"},{"lineNumber":59,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":60,"author":{"gitId":"soepaingzaw"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":62,"author":{"gitId":"soepaingzaw"},"content":"            else if(tasks[index].equals(\"list\")) {"},{"lineNumber":63,"author":{"gitId":"soepaingzaw"},"content":"                count \u003d index;"},{"lineNumber":64,"author":{"gitId":"soepaingzaw"},"content":"                num \u003d 0;"},{"lineNumber":65,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":66,"author":{"gitId":"soepaingzaw"},"content":"                while (count !\u003d 0) {"},{"lineNumber":67,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":68,"author":{"gitId":"soepaingzaw"},"content":"                    System.out.println(num + 1 + \". \" +"},{"lineNumber":69,"author":{"gitId":"soepaingzaw"},"content":"                            type[num]+ checks[num] + \" \" + tasks[num]"},{"lineNumber":70,"author":{"gitId":"soepaingzaw"},"content":"                    +deadline[num]);"},{"lineNumber":71,"author":{"gitId":"soepaingzaw"},"content":"                    count--;"},{"lineNumber":72,"author":{"gitId":"soepaingzaw"},"content":"                    num++;"},{"lineNumber":73,"author":{"gitId":"soepaingzaw"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"soepaingzaw"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":76,"author":{"gitId":"soepaingzaw"},"content":"            //Below code increments index as tasks are being added"},{"lineNumber":77,"author":{"gitId":"soepaingzaw"},"content":"            else {"},{"lineNumber":78,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":79,"author":{"gitId":"soepaingzaw"},"content":"                //initialise deadline as empty space"},{"lineNumber":80,"author":{"gitId":"soepaingzaw"},"content":"                deadline[index]\u003d\" \";"},{"lineNumber":81,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":82,"author":{"gitId":"soepaingzaw"},"content":"                if(parts[0].equals(\"todo\")){"},{"lineNumber":83,"author":{"gitId":"soepaingzaw"},"content":"                    //substring to extract out string in concern"},{"lineNumber":84,"author":{"gitId":"soepaingzaw"},"content":"                    tasks[index] \u003d tasks[index].substring(5, tasks[index].length());"},{"lineNumber":85,"author":{"gitId":"soepaingzaw"},"content":"                    type[index]\u003d\"[T]\";"},{"lineNumber":86,"author":{"gitId":"soepaingzaw"},"content":"                }"},{"lineNumber":87,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":88,"author":{"gitId":"soepaingzaw"},"content":"                else if(parts[0].equals(\"deadline\")){"},{"lineNumber":89,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":90,"author":{"gitId":"soepaingzaw"},"content":"                    tasks[index] \u003d tasks[index].substring(9, tasks[index].length());"},{"lineNumber":91,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":92,"author":{"gitId":"soepaingzaw"},"content":"                    type[index]\u003d\"[D]\";"},{"lineNumber":93,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":94,"author":{"gitId":"soepaingzaw"},"content":"                    temp\u003dtasks[index].indexOf(\u0027/\u0027);"},{"lineNumber":95,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":96,"author":{"gitId":"soepaingzaw"},"content":"                    deadline[index]\u003d\"(by:\"+tasks[index].substring(temp+3,"},{"lineNumber":97,"author":{"gitId":"soepaingzaw"},"content":"                            tasks[index].length()) + \")\";"},{"lineNumber":98,"author":{"gitId":"soepaingzaw"},"content":"                    tasks[index]\u003dtasks[index].substring(0, temp);"},{"lineNumber":99,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":100,"author":{"gitId":"soepaingzaw"},"content":"                }"},{"lineNumber":101,"author":{"gitId":"soepaingzaw"},"content":"                else if(parts[0].equals(\"event\")){"},{"lineNumber":102,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":103,"author":{"gitId":"soepaingzaw"},"content":"                    tasks[index] \u003d tasks[index].substring(6, tasks[index].length());"},{"lineNumber":104,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":105,"author":{"gitId":"soepaingzaw"},"content":"                    type[index]\u003d\"[E]\";"},{"lineNumber":106,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":107,"author":{"gitId":"soepaingzaw"},"content":"                    temp\u003dtasks[index].indexOf(\u0027/\u0027);"},{"lineNumber":108,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":109,"author":{"gitId":"soepaingzaw"},"content":"                    deadline[index]\u003d\"(at:\"+tasks[index].substring(temp+3,"},{"lineNumber":110,"author":{"gitId":"soepaingzaw"},"content":"                            tasks[index].length()) + \")\";"},{"lineNumber":111,"author":{"gitId":"soepaingzaw"},"content":"                    tasks[index]\u003dtasks[index].substring(0, temp);"},{"lineNumber":112,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":113,"author":{"gitId":"soepaingzaw"},"content":"                }"},{"lineNumber":114,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":115,"author":{"gitId":"soepaingzaw"},"content":"                for (int i \u003d 0; i \u003c LINES; i++) {"},{"lineNumber":116,"author":{"gitId":"soepaingzaw"},"content":"                    System.out.print(\"_\");"},{"lineNumber":117,"author":{"gitId":"soepaingzaw"},"content":"                }"},{"lineNumber":118,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":119,"author":{"gitId":"soepaingzaw"},"content":"                System.out.print(\"\\n\");"},{"lineNumber":120,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":121,"author":{"gitId":"soepaingzaw"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n  \""},{"lineNumber":122,"author":{"gitId":"soepaingzaw"},"content":"                        + type[index] + checks[index] + \" \""},{"lineNumber":123,"author":{"gitId":"soepaingzaw"},"content":"                        + tasks[index] + \" \" + deadline[index++] +\"\\n\""},{"lineNumber":124,"author":{"gitId":"soepaingzaw"},"content":"                + \"Now you have \" + index + \" task(s) in the list\"  );"},{"lineNumber":125,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":126,"author":{"gitId":"soepaingzaw"},"content":"                for (int i \u003d 0; i \u003c LINES; i++) {"},{"lineNumber":127,"author":{"gitId":"soepaingzaw"},"content":"                    System.out.print(\"_\");"},{"lineNumber":128,"author":{"gitId":"soepaingzaw"},"content":"                }"},{"lineNumber":129,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":130,"author":{"gitId":"soepaingzaw"},"content":"                System.out.print(\"\\n\");"},{"lineNumber":131,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":132,"author":{"gitId":"soepaingzaw"},"content":"            }"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"soepaingzaw":124,"-":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"todo watch lecture video"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":"deadline do tutorial /by Thurs 9a.m."},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"event Beach Party /at Sentosa Sat 3p.m."},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":"list"},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"bye"}],"authorContributionMap":{"soepaingzaw":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"soepaingzaw":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"soepaingzaw"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"soepaingzaw":1,"-":37}}]
