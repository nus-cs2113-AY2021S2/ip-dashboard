[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"Hello! This UI app is built to help manage your tasks better!"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":" **todo** adds tasks you have to the list"},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":" "},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":" **deadline** adds tasks that are due in the future to your list"},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":" "},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":" **event** adds special occasions that are happening in the future to your list"},{"lineNumber":12,"author":{"gitId":"soepaingzaw"},"content":" "},{"lineNumber":13,"author":{"gitId":"soepaingzaw"},"content":" **list** displays all the task you have"},{"lineNumber":14,"author":{"gitId":"soepaingzaw"},"content":" "},{"lineNumber":15,"author":{"gitId":"soepaingzaw"},"content":" **done** checks off a task you completed"},{"lineNumber":16,"author":{"gitId":"soepaingzaw"},"content":" "},{"lineNumber":17,"author":{"gitId":"soepaingzaw"},"content":" **find** to find if a particular task exists in your list by typing in key words "},{"lineNumber":18,"author":{"gitId":"soepaingzaw"},"content":" "},{"lineNumber":19,"author":{"gitId":"soepaingzaw"},"content":" **delete** to remove task from your list"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"soepaingzaw"},"content":"### `todo` - type todo followed by a general task you currently have"},{"lineNumber":25,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":26,"author":{"gitId":"soepaingzaw"},"content":"This adds the \"todo\" task in your list"},{"lineNumber":27,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":28,"author":{"gitId":"soepaingzaw"},"content":"Example of usage: "},{"lineNumber":29,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":30,"author":{"gitId":"soepaingzaw"},"content":"`todo math homework`"},{"lineNumber":31,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":32,"author":{"gitId":"soepaingzaw"},"content":"Expected outcome in list:"},{"lineNumber":33,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":34,"author":{"gitId":"soepaingzaw"},"content":"`[T][✘] math homework`"},{"lineNumber":35,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":36,"author":{"gitId":"soepaingzaw"},"content":"### `deadline` - type `deadline` followed by a task then write `/by` followed by the day and time which you have to complete it"},{"lineNumber":37,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":38,"author":{"gitId":"soepaingzaw"},"content":"This adds the \"deadline\" task in your list with the day and time added"},{"lineNumber":39,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":40,"author":{"gitId":"soepaingzaw"},"content":"Example of usage: "},{"lineNumber":41,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":42,"author":{"gitId":"soepaingzaw"},"content":"`deadline form submission /by Monday 12pm`"},{"lineNumber":43,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":44,"author":{"gitId":"soepaingzaw"},"content":"Expected outcome in list:"},{"lineNumber":45,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":46,"author":{"gitId":"soepaingzaw"},"content":"`[D][✘] form submission (by: Monday 12pm)`"},{"lineNumber":47,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":48,"author":{"gitId":"soepaingzaw"},"content":"### `event` - type `event` followed by a task then write `/at` followed by the day and time period which you will be attending said event"},{"lineNumber":49,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":50,"author":{"gitId":"soepaingzaw"},"content":"This adds the \"event\" task in your list with the day and time period added"},{"lineNumber":51,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":52,"author":{"gitId":"soepaingzaw"},"content":"Example of usage: "},{"lineNumber":53,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":54,"author":{"gitId":"soepaingzaw"},"content":"`event Sean\u0027s Birthday Party /at Friday 7-11pm`"},{"lineNumber":55,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":56,"author":{"gitId":"soepaingzaw"},"content":"Expected outcome in list:"},{"lineNumber":57,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":58,"author":{"gitId":"soepaingzaw"},"content":"`[E][✘] Sean\u0027s Birthday Party (at: Friday 7-11pm)`"},{"lineNumber":59,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":60,"author":{"gitId":"soepaingzaw"},"content":"### `list` - type `list` to display all tasks, deadlines and events"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"soepaingzaw"},"content":"Example of usage: "},{"lineNumber":63,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":64,"author":{"gitId":"soepaingzaw"},"content":"`list`"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"soepaingzaw"},"content":"Expected outcome:"},{"lineNumber":67,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":68,"author":{"gitId":"soepaingzaw"},"content":"`1.[T][✘] math homework`  "},{"lineNumber":69,"author":{"gitId":"soepaingzaw"},"content":"`2.[D][✘] form submission (by: Monday 12pm)`  "},{"lineNumber":70,"author":{"gitId":"soepaingzaw"},"content":"`3.[E][✘] Sean\u0027s Birthday Party (at: Friday 7-11pm)`  "},{"lineNumber":71,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":72,"author":{"gitId":"soepaingzaw"},"content":"### `done` - type `done` followed by the numeration of the task you have completed"},{"lineNumber":73,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":74,"author":{"gitId":"soepaingzaw"},"content":"Using the example in `list`:"},{"lineNumber":75,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":76,"author":{"gitId":"soepaingzaw"},"content":"Example of usage: "},{"lineNumber":77,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":78,"author":{"gitId":"soepaingzaw"},"content":"`done 2`"},{"lineNumber":79,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":80,"author":{"gitId":"soepaingzaw"},"content":"Expected outcome:"},{"lineNumber":81,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":82,"author":{"gitId":"soepaingzaw"},"content":"`Nice! I\u0027ve marked this task as done:`  "},{"lineNumber":83,"author":{"gitId":"soepaingzaw"},"content":"`[D][✓] form submission (by: Monday 12pm)`  "},{"lineNumber":84,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":85,"author":{"gitId":"soepaingzaw"},"content":"### `find` - type `find` followed by the word you are searching for in a task"},{"lineNumber":86,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":87,"author":{"gitId":"soepaingzaw"},"content":"Using the example in `list`:"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"soepaingzaw"},"content":"`find Birthday`"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"soepaingzaw"},"content":"`1.[E][✘] Sean\u0027s Birthday Party (at: Friday 7-11pm)` "},{"lineNumber":96,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":97,"author":{"gitId":"soepaingzaw"},"content":"### `delete` - type `delete` followed by the numeration of the task you want to remove from the list"},{"lineNumber":98,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":99,"author":{"gitId":"soepaingzaw"},"content":"Using the example in `list`:"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"soepaingzaw"},"content":"`delete 1`"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"soepaingzaw"},"content":"`Noted. I\u0027ve removed this task:`  "},{"lineNumber":108,"author":{"gitId":"soepaingzaw"},"content":"`[T][✘] math homework`  "},{"lineNumber":109,"author":{"gitId":"soepaingzaw"},"content":"`Now you have 2 task(s) in the list.`     "},{"lineNumber":110,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":111,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":112,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":113,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":114,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":115,"author":{"gitId":"soepaingzaw"},"content":""}],"authorContributionMap":{"soepaingzaw":93,"-":22}},{"path":"mytasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"1.[T][✘] b"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":"2.[D][✓] c (by: 5pm)"}],"authorContributionMap":{"soepaingzaw":2}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"    protected String by;"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"soepaingzaw"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";"},{"lineNumber":13,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"soepaingzaw"},"content":"}"},{"lineNumber":15,"author":{"gitId":"soepaingzaw"},"content":""}],"authorContributionMap":{"soepaingzaw":15}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":"import java.io.FileWriter;"},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"    static final int LINES \u003d 85;"},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":"    static final int LENGTH_OF_TODO \u003d 4;"},{"lineNumber":12,"author":{"gitId":"soepaingzaw"},"content":"    static final int LENGTH_OF_DEADLINE \u003d 8;"},{"lineNumber":13,"author":{"gitId":"soepaingzaw"},"content":"    static final int LENGTH_OF_EVENT \u003d 5;"},{"lineNumber":14,"author":{"gitId":"soepaingzaw"},"content":"    static final int LENGTH_OF_DONE \u003d 4;"},{"lineNumber":15,"author":{"gitId":"soepaingzaw"},"content":"    static final int SPACES_AFTER_SLASH \u003d 3;"},{"lineNumber":16,"author":{"gitId":"soepaingzaw"},"content":"    static final int LENGTH_OF_DELETE \u003d 6;"},{"lineNumber":17,"author":{"gitId":"soepaingzaw"},"content":"    static final int LENGTH_OF_FIND \u003d 4;"},{"lineNumber":18,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":19,"author":{"gitId":"soepaingzaw"},"content":"    public static int index \u003d 0;"},{"lineNumber":20,"author":{"gitId":"soepaingzaw"},"content":"    public static String line;"},{"lineNumber":21,"author":{"gitId":"soepaingzaw"},"content":"    public static boolean continueInputs \u003d true;"},{"lineNumber":22,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":23,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":24,"author":{"gitId":"soepaingzaw"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":25,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":26,"author":{"gitId":"soepaingzaw"},"content":"    private Ui ui;"},{"lineNumber":27,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":28,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":29,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":30,"author":{"gitId":"soepaingzaw"},"content":"    public Duke(String filePath) {"},{"lineNumber":31,"author":{"gitId":"soepaingzaw"},"content":"        ui \u003d new Ui();"},{"lineNumber":32,"author":{"gitId":"soepaingzaw"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"soepaingzaw"},"content":"            loadFromFile(filePath);"},{"lineNumber":34,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":35,"author":{"gitId":"soepaingzaw"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":36,"author":{"gitId":"soepaingzaw"},"content":"            ui.showLoadingError();"},{"lineNumber":37,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":38,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":40,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":43,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":44,"author":{"gitId":"soepaingzaw"},"content":"        new Duke(\"mytasks.txt\").run();"},{"lineNumber":45,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":47,"author":{"gitId":"soepaingzaw"},"content":"    /**Prints a line divider for every command"},{"lineNumber":48,"author":{"gitId":"soepaingzaw"},"content":"     * entered by the user*/"},{"lineNumber":49,"author":{"gitId":"soepaingzaw"},"content":"    public static void printDivider() {"},{"lineNumber":50,"author":{"gitId":"soepaingzaw"},"content":"        for (int i \u003d 0; i \u003c LINES; i++) {"},{"lineNumber":51,"author":{"gitId":"soepaingzaw"},"content":"            System.out.print(\"_\");"},{"lineNumber":52,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"\\n\");"},{"lineNumber":54,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":55,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":57,"author":{"gitId":"soepaingzaw"},"content":"    /**run the code indefinitely and take in multiple inputs from the user"},{"lineNumber":58,"author":{"gitId":"soepaingzaw"},"content":"     * until \"bye\" is entered*/"},{"lineNumber":59,"author":{"gitId":"soepaingzaw"},"content":"    public static void run() {"},{"lineNumber":60,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":61,"author":{"gitId":"soepaingzaw"},"content":"        do {"},{"lineNumber":62,"author":{"gitId":"soepaingzaw"},"content":"            printDivider();"},{"lineNumber":63,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":64,"author":{"gitId":"soepaingzaw"},"content":"            Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":65,"author":{"gitId":"soepaingzaw"},"content":"            line \u003d scan.nextLine();"},{"lineNumber":66,"author":{"gitId":"soepaingzaw"},"content":"            String[] word \u003d line.split(\" \");"},{"lineNumber":67,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":68,"author":{"gitId":"soepaingzaw"},"content":"            try {"},{"lineNumber":69,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":70,"author":{"gitId":"soepaingzaw"},"content":"                switch (word[0]) {"},{"lineNumber":71,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":72,"author":{"gitId":"soepaingzaw"},"content":"                case \"bye\":"},{"lineNumber":73,"author":{"gitId":"soepaingzaw"},"content":"                    bye();"},{"lineNumber":74,"author":{"gitId":"soepaingzaw"},"content":"                    break;"},{"lineNumber":75,"author":{"gitId":"soepaingzaw"},"content":"                case \"done\":"},{"lineNumber":76,"author":{"gitId":"soepaingzaw"},"content":"                    done();"},{"lineNumber":77,"author":{"gitId":"soepaingzaw"},"content":"                    break;"},{"lineNumber":78,"author":{"gitId":"soepaingzaw"},"content":"                case \"list\":"},{"lineNumber":79,"author":{"gitId":"soepaingzaw"},"content":"                    System.out.print(\"Here are the tasks in your list:\\n\" + list());"},{"lineNumber":80,"author":{"gitId":"soepaingzaw"},"content":"                    break;"},{"lineNumber":81,"author":{"gitId":"soepaingzaw"},"content":"                case \"todo\":"},{"lineNumber":82,"author":{"gitId":"soepaingzaw"},"content":"                    todo();"},{"lineNumber":83,"author":{"gitId":"soepaingzaw"},"content":"                    break;"},{"lineNumber":84,"author":{"gitId":"soepaingzaw"},"content":"                case \"deadline\":"},{"lineNumber":85,"author":{"gitId":"soepaingzaw"},"content":"                    deadline();"},{"lineNumber":86,"author":{"gitId":"soepaingzaw"},"content":"                    break;"},{"lineNumber":87,"author":{"gitId":"soepaingzaw"},"content":"                case \"event\":"},{"lineNumber":88,"author":{"gitId":"soepaingzaw"},"content":"                    event();"},{"lineNumber":89,"author":{"gitId":"soepaingzaw"},"content":"                    break;"},{"lineNumber":90,"author":{"gitId":"soepaingzaw"},"content":"                case \"delete\":"},{"lineNumber":91,"author":{"gitId":"soepaingzaw"},"content":"                    delete();"},{"lineNumber":92,"author":{"gitId":"soepaingzaw"},"content":"                    break;"},{"lineNumber":93,"author":{"gitId":"soepaingzaw"},"content":"                case \"find\":"},{"lineNumber":94,"author":{"gitId":"soepaingzaw"},"content":"                    find();"},{"lineNumber":95,"author":{"gitId":"soepaingzaw"},"content":"                    break;"},{"lineNumber":96,"author":{"gitId":"soepaingzaw"},"content":"                default:"},{"lineNumber":97,"author":{"gitId":"soepaingzaw"},"content":"                    throw new DukeException();"},{"lineNumber":98,"author":{"gitId":"soepaingzaw"},"content":"                }"},{"lineNumber":99,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":100,"author":{"gitId":"soepaingzaw"},"content":"                writeToFile();"},{"lineNumber":101,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":102,"author":{"gitId":"soepaingzaw"},"content":"            } catch (DukeException e) {"},{"lineNumber":103,"author":{"gitId":"soepaingzaw"},"content":"                System.out.print(e.getMessage());"},{"lineNumber":104,"author":{"gitId":"soepaingzaw"},"content":"            } catch (IOException e) {"},{"lineNumber":105,"author":{"gitId":"soepaingzaw"},"content":"                System.out.print(\"File ERRORRR!!\\n\");"},{"lineNumber":106,"author":{"gitId":"soepaingzaw"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":108,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":109,"author":{"gitId":"soepaingzaw"},"content":"        } while (continueInputs);"},{"lineNumber":110,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":111,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":113,"author":{"gitId":"soepaingzaw"},"content":"    /**deadline creates a new todo object. The todo class"},{"lineNumber":114,"author":{"gitId":"soepaingzaw"},"content":"     * is the subclass of the Task class"},{"lineNumber":115,"author":{"gitId":"soepaingzaw"},"content":"     * it takes in the description of the todo"},{"lineNumber":116,"author":{"gitId":"soepaingzaw"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"soepaingzaw"},"content":"     * @throws DukeException whenever input format is invalid"},{"lineNumber":118,"author":{"gitId":"soepaingzaw"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"soepaingzaw"},"content":"    public static void todo() throws DukeException {"},{"lineNumber":120,"author":{"gitId":"soepaingzaw"},"content":"        if (line.length() \u003d\u003d LENGTH_OF_TODO) {"},{"lineNumber":121,"author":{"gitId":"soepaingzaw"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\");"},{"lineNumber":122,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":123,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"soepaingzaw"},"content":"        tasks.add(new Todo(line.substring(LENGTH_OF_TODO + 1)));"},{"lineNumber":125,"author":{"gitId":"soepaingzaw"},"content":"        addToTaskMessage();"},{"lineNumber":126,"author":{"gitId":"soepaingzaw"},"content":"        printNumberOfTask();"},{"lineNumber":127,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":129,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":130,"author":{"gitId":"soepaingzaw"},"content":"    /**deadline creates a new deadline object. The deadline class"},{"lineNumber":131,"author":{"gitId":"soepaingzaw"},"content":"     * is the subclass of the Task class"},{"lineNumber":132,"author":{"gitId":"soepaingzaw"},"content":"     * it takes in the description of the deadline as well as the"},{"lineNumber":133,"author":{"gitId":"soepaingzaw"},"content":"     * Day and time from line"},{"lineNumber":134,"author":{"gitId":"soepaingzaw"},"content":"     *"},{"lineNumber":135,"author":{"gitId":"soepaingzaw"},"content":"     * @throws DukeException whenever input format is invalid"},{"lineNumber":136,"author":{"gitId":"soepaingzaw"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"soepaingzaw"},"content":"    public static void deadline() throws DukeException {"},{"lineNumber":138,"author":{"gitId":"soepaingzaw"},"content":"        int indexOfSlash \u003d line.indexOf(\u0027/\u0027);"},{"lineNumber":139,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":140,"author":{"gitId":"soepaingzaw"},"content":"        if (line.length() \u003d\u003d LENGTH_OF_DEADLINE) {"},{"lineNumber":141,"author":{"gitId":"soepaingzaw"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\\n\");"},{"lineNumber":142,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":143,"author":{"gitId":"soepaingzaw"},"content":"        } else if (indexOfSlash \u003d\u003d -1) {"},{"lineNumber":144,"author":{"gitId":"soepaingzaw"},"content":"            throw new DukeException(\"☹ ERROR!! Please input TASK, DAY and TIME using the following format:\\n\" +"},{"lineNumber":145,"author":{"gitId":"soepaingzaw"},"content":"                    \"deadline [TASK] /by [DAY] [TIME].\\n\");"},{"lineNumber":146,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":147,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":148,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"soepaingzaw"},"content":"        tasks.add(new Deadline(line.substring(LENGTH_OF_DEADLINE + 1, indexOfSlash), line.substring(indexOfSlash + SPACES_AFTER_SLASH)));"},{"lineNumber":150,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":151,"author":{"gitId":"soepaingzaw"},"content":"        addToTaskMessage();"},{"lineNumber":152,"author":{"gitId":"soepaingzaw"},"content":"        printNumberOfTask();"},{"lineNumber":153,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":155,"author":{"gitId":"soepaingzaw"},"content":"    /**event creates a new Event object. The event class"},{"lineNumber":156,"author":{"gitId":"soepaingzaw"},"content":"     * is the subclass of the Task class"},{"lineNumber":157,"author":{"gitId":"soepaingzaw"},"content":"     * it takes in the description of the Event as well as the"},{"lineNumber":158,"author":{"gitId":"soepaingzaw"},"content":"     * Day and time period from line"},{"lineNumber":159,"author":{"gitId":"soepaingzaw"},"content":"     *"},{"lineNumber":160,"author":{"gitId":"soepaingzaw"},"content":"     * @throws DukeException whenever input format is invalid"},{"lineNumber":161,"author":{"gitId":"soepaingzaw"},"content":"     */"},{"lineNumber":162,"author":{"gitId":"soepaingzaw"},"content":"    public static void event() throws DukeException {"},{"lineNumber":163,"author":{"gitId":"soepaingzaw"},"content":"        int indexOfSlash \u003d line.indexOf(\u0027/\u0027);"},{"lineNumber":164,"author":{"gitId":"soepaingzaw"},"content":"        if (line.length() \u003d\u003d LENGTH_OF_EVENT) {"},{"lineNumber":165,"author":{"gitId":"soepaingzaw"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\\n\");"},{"lineNumber":166,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":167,"author":{"gitId":"soepaingzaw"},"content":"        } else if (indexOfSlash \u003d\u003d -1) {"},{"lineNumber":168,"author":{"gitId":"soepaingzaw"},"content":"            throw new DukeException(\"☹ ERROR!! Please input TASK, DAY and TIME using the following format:\\n\" +"},{"lineNumber":169,"author":{"gitId":"soepaingzaw"},"content":"                    \"event [TASK] /at [DAY] [TIME].\\n\");"},{"lineNumber":170,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":171,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"soepaingzaw"},"content":"        tasks.add(new Event(line.substring(LENGTH_OF_EVENT + 1, indexOfSlash), line.substring(indexOfSlash + SPACES_AFTER_SLASH)));"},{"lineNumber":173,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":174,"author":{"gitId":"soepaingzaw"},"content":"        addToTaskMessage();"},{"lineNumber":175,"author":{"gitId":"soepaingzaw"},"content":"        printNumberOfTask();"},{"lineNumber":176,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":178,"author":{"gitId":"soepaingzaw"},"content":"    public static String list() {"},{"lineNumber":179,"author":{"gitId":"soepaingzaw"},"content":"        StringBuilder listOfTasks \u003d new StringBuilder();"},{"lineNumber":180,"author":{"gitId":"soepaingzaw"},"content":"        for (int i \u003d 0; i \u003c index; i++) {"},{"lineNumber":181,"author":{"gitId":"soepaingzaw"},"content":"            listOfTasks.append(i + 1).append(\".\").append(tasks.get(i).toString()).append(\"\\n\");"},{"lineNumber":182,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":184,"author":{"gitId":"soepaingzaw"},"content":"        return listOfTasks.toString();"},{"lineNumber":185,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":187,"author":{"gitId":"soepaingzaw"},"content":"    public static void done() {"},{"lineNumber":188,"author":{"gitId":"soepaingzaw"},"content":"        int order \u003d Integer.parseInt(line.substring(LENGTH_OF_DONE + 1));"},{"lineNumber":189,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":190,"author":{"gitId":"soepaingzaw"},"content":"        tasks.get(order - 1).markAsDone();"},{"lineNumber":191,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"Nice! I\u0027ve marked this task as done:\\n\" +"},{"lineNumber":192,"author":{"gitId":"soepaingzaw"},"content":"                tasks.get(order - 1).toString() + \"\\n\");"},{"lineNumber":193,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":195,"author":{"gitId":"soepaingzaw"},"content":"    public static void bye() {"},{"lineNumber":196,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"Bye. Hope to see you again soon!\\n\");"},{"lineNumber":197,"author":{"gitId":"soepaingzaw"},"content":"        continueInputs \u003d false;"},{"lineNumber":198,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":200,"author":{"gitId":"soepaingzaw"},"content":"    public static void addToTaskMessage() {"},{"lineNumber":201,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"Got it! I have added this task:\\n\" + tasks.get(index).toString() + \"\\n\");"},{"lineNumber":202,"author":{"gitId":"soepaingzaw"},"content":"        index++;"},{"lineNumber":203,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":204,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":206,"author":{"gitId":"soepaingzaw"},"content":"    public static void printNumberOfTask() {"},{"lineNumber":207,"author":{"gitId":"soepaingzaw"},"content":"        System.out.printf(\"Now you have %d task(s) in the list.\\n\", index);"},{"lineNumber":208,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":209,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":211,"author":{"gitId":"soepaingzaw"},"content":"    /**delete and remove task from list"},{"lineNumber":212,"author":{"gitId":"soepaingzaw"},"content":"     * based on the numeration given"},{"lineNumber":213,"author":{"gitId":"soepaingzaw"},"content":"     */"},{"lineNumber":214,"author":{"gitId":"soepaingzaw"},"content":"    public static void delete() {"},{"lineNumber":215,"author":{"gitId":"soepaingzaw"},"content":"        int order \u003d Integer.parseInt(line.substring(LENGTH_OF_DELETE + 1));"},{"lineNumber":216,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"Noted. I\u0027ve removed this task:\\n\" +"},{"lineNumber":217,"author":{"gitId":"soepaingzaw"},"content":"                tasks.get(order - 1).toString() + \"\\n\");"},{"lineNumber":218,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":219,"author":{"gitId":"soepaingzaw"},"content":"        tasks.remove(order - 1);"},{"lineNumber":220,"author":{"gitId":"soepaingzaw"},"content":"        index--;"},{"lineNumber":221,"author":{"gitId":"soepaingzaw"},"content":"        printNumberOfTask();"},{"lineNumber":222,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":224,"author":{"gitId":"soepaingzaw"},"content":"    /**Performs steps to find matching words in the existing"},{"lineNumber":225,"author":{"gitId":"soepaingzaw"},"content":"     *list of tasks"},{"lineNumber":226,"author":{"gitId":"soepaingzaw"},"content":"     *"},{"lineNumber":227,"author":{"gitId":"soepaingzaw"},"content":"     * @throws DukeException if there are no matching words to be found"},{"lineNumber":228,"author":{"gitId":"soepaingzaw"},"content":"     */"},{"lineNumber":229,"author":{"gitId":"soepaingzaw"},"content":"    public static void find() throws DukeException {"},{"lineNumber":230,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":231,"author":{"gitId":"soepaingzaw"},"content":"        int numeration \u003d 0;"},{"lineNumber":232,"author":{"gitId":"soepaingzaw"},"content":"        String listOfTasks;"},{"lineNumber":233,"author":{"gitId":"soepaingzaw"},"content":"        String matchingWord \u003d line.substring(LENGTH_OF_FIND + 1);"},{"lineNumber":234,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":235,"author":{"gitId":"soepaingzaw"},"content":"        ArrayList\u003cString\u003e matchedTask \u003d new ArrayList\u003c\u003e();"},{"lineNumber":236,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":237,"author":{"gitId":"soepaingzaw"},"content":"        for (int i \u003d 0; i \u003c index; i++) {"},{"lineNumber":238,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":239,"author":{"gitId":"soepaingzaw"},"content":"            listOfTasks \u003d tasks.get(i).toString();"},{"lineNumber":240,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":241,"author":{"gitId":"soepaingzaw"},"content":"            if (listOfTasks.contains(matchingWord)) {"},{"lineNumber":242,"author":{"gitId":"soepaingzaw"},"content":"                numeration++;"},{"lineNumber":243,"author":{"gitId":"soepaingzaw"},"content":"                matchedTask.add(listOfTasks);"},{"lineNumber":244,"author":{"gitId":"soepaingzaw"},"content":"            }"},{"lineNumber":245,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":246,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":247,"author":{"gitId":"soepaingzaw"},"content":"        if (numeration \u003d\u003d 0) {"},{"lineNumber":248,"author":{"gitId":"soepaingzaw"},"content":"            throw new DukeException(\"There are no matching tasks found\\n\");"},{"lineNumber":249,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":250,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"Here are the matching tasks in your list:\\n\");"},{"lineNumber":251,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":252,"author":{"gitId":"soepaingzaw"},"content":"        for (int order \u003d 0; order \u003c numeration; order++) {"},{"lineNumber":253,"author":{"gitId":"soepaingzaw"},"content":"            System.out.printf(\"%d.\" + matchedTask.get(order) + \"\\n\", order + 1);"},{"lineNumber":254,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":255,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":256,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":257,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":258,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":259,"author":{"gitId":"soepaingzaw"},"content":"    /**Saves current state of tasks in a textfile"},{"lineNumber":260,"author":{"gitId":"soepaingzaw"},"content":"     *"},{"lineNumber":261,"author":{"gitId":"soepaingzaw"},"content":"     * @throws IOException as a safe guard"},{"lineNumber":262,"author":{"gitId":"soepaingzaw"},"content":"     */"},{"lineNumber":263,"author":{"gitId":"soepaingzaw"},"content":"    public static void writeToFile() throws IOException {"},{"lineNumber":264,"author":{"gitId":"soepaingzaw"},"content":"        FileWriter fw \u003d new FileWriter(\"mytasks.txt\");"},{"lineNumber":265,"author":{"gitId":"soepaingzaw"},"content":"        fw.write(list());"},{"lineNumber":266,"author":{"gitId":"soepaingzaw"},"content":"        fw.close();"},{"lineNumber":267,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":269,"author":{"gitId":"soepaingzaw"},"content":"    /**"},{"lineNumber":270,"author":{"gitId":"soepaingzaw"},"content":"     * The filepath argument should be a relative {@link String}."},{"lineNumber":271,"author":{"gitId":"soepaingzaw"},"content":"     * When the app is starting, this method finds the file"},{"lineNumber":272,"author":{"gitId":"soepaingzaw"},"content":"     * based on the relative filepath and compile them into a list"},{"lineNumber":273,"author":{"gitId":"soepaingzaw"},"content":"     * of tasks within program."},{"lineNumber":274,"author":{"gitId":"soepaingzaw"},"content":"     *"},{"lineNumber":275,"author":{"gitId":"soepaingzaw"},"content":"     * @param filepath a relative filepath giving the base location of the"},{"lineNumber":276,"author":{"gitId":"soepaingzaw"},"content":"     * file to be imported"},{"lineNumber":277,"author":{"gitId":"soepaingzaw"},"content":"     * @throws  FileNotFoundException If the file does not exist it throws"},{"lineNumber":278,"author":{"gitId":"soepaingzaw"},"content":"     * a warning message"},{"lineNumber":279,"author":{"gitId":"soepaingzaw"},"content":"     */"},{"lineNumber":280,"author":{"gitId":"soepaingzaw"},"content":"    public static void loadFromFile(String filepath) throws FileNotFoundException {"},{"lineNumber":281,"author":{"gitId":"soepaingzaw"},"content":"        File f \u003d new File(filepath);"},{"lineNumber":282,"author":{"gitId":"soepaingzaw"},"content":"        Scanner scan \u003d new Scanner(f);"},{"lineNumber":283,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":284,"author":{"gitId":"soepaingzaw"},"content":"        while (scan.hasNext()) {"},{"lineNumber":285,"author":{"gitId":"soepaingzaw"},"content":"            String textString \u003d scan.nextLine();"},{"lineNumber":286,"author":{"gitId":"soepaingzaw"},"content":"            char taskType \u003d textString.charAt(3);"},{"lineNumber":287,"author":{"gitId":"soepaingzaw"},"content":"            char doneOrNot \u003d textString.charAt(6);"},{"lineNumber":288,"author":{"gitId":"soepaingzaw"},"content":"            int indexOfOpenBracket \u003d textString.indexOf(\u0027(\u0027);"},{"lineNumber":289,"author":{"gitId":"soepaingzaw"},"content":"            int indexOfCloseBracket \u003d textString.indexOf(\u0027)\u0027);"},{"lineNumber":290,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":291,"author":{"gitId":"soepaingzaw"},"content":"            switch (taskType) {"},{"lineNumber":292,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":293,"author":{"gitId":"soepaingzaw"},"content":"            case \u0027T\u0027:"},{"lineNumber":294,"author":{"gitId":"soepaingzaw"},"content":"                tasks.add(new Todo(textString.substring(9)));"},{"lineNumber":295,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":296,"author":{"gitId":"soepaingzaw"},"content":"            case \u0027E\u0027:"},{"lineNumber":297,"author":{"gitId":"soepaingzaw"},"content":"                tasks.add(new Event(textString.substring(9, indexOfOpenBracket),"},{"lineNumber":298,"author":{"gitId":"soepaingzaw"},"content":"                        textString.substring(indexOfOpenBracket + 4, indexOfCloseBracket)));"},{"lineNumber":299,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":300,"author":{"gitId":"soepaingzaw"},"content":"            case \u0027D\u0027:"},{"lineNumber":301,"author":{"gitId":"soepaingzaw"},"content":"                tasks.add(new Deadline(textString.substring(9, indexOfOpenBracket),"},{"lineNumber":302,"author":{"gitId":"soepaingzaw"},"content":"                        textString.substring(indexOfOpenBracket + 4, indexOfCloseBracket)));"},{"lineNumber":303,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":304,"author":{"gitId":"soepaingzaw"},"content":"            default:"},{"lineNumber":305,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":306,"author":{"gitId":"soepaingzaw"},"content":"            }"},{"lineNumber":307,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":308,"author":{"gitId":"soepaingzaw"},"content":"            if (doneOrNot \u003d\u003d \u0027\\u2713\u0027) {"},{"lineNumber":309,"author":{"gitId":"soepaingzaw"},"content":"                tasks.get(index).markAsDone();"},{"lineNumber":310,"author":{"gitId":"soepaingzaw"},"content":"            }"},{"lineNumber":311,"author":{"gitId":"soepaingzaw"},"content":"            index++;"},{"lineNumber":312,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}"},{"lineNumber":315,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":316,"author":{"gitId":"soepaingzaw"},"content":""}],"authorContributionMap":{"soepaingzaw":312,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":"    public DukeException() {"},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":"        super(errorMessage);"},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"}"}],"authorContributionMap":{"soepaingzaw":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"    protected String at;"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"    public Event(String description, String at) {"},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":"        this.at \u003d at;"},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"soepaingzaw"},"content":"        return \"[E]\" + super.toString() + \"(at:\" + at + \")\";"},{"lineNumber":13,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":15,"author":{"gitId":"soepaingzaw"},"content":"}"}],"authorContributionMap":{"soepaingzaw":15}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"public class Parser {"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":"}"}],"authorContributionMap":{"soepaingzaw":2}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":"/*"},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":"public class Storage {"},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":"    protected String filepath;"},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"    public Storage(String filepath) {"},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":12,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":14,"author":{"gitId":"soepaingzaw"},"content":"    public Task load() {"},{"lineNumber":15,"author":{"gitId":"soepaingzaw"},"content":"        File f \u003d new File(filepath);"},{"lineNumber":16,"author":{"gitId":"soepaingzaw"},"content":"        Scanner scan \u003d new Scanner(f);"},{"lineNumber":17,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":18,"author":{"gitId":"soepaingzaw"},"content":"        while (scan.hasNext()) {"},{"lineNumber":19,"author":{"gitId":"soepaingzaw"},"content":"            String textString \u003d scan.nextLine();"},{"lineNumber":20,"author":{"gitId":"soepaingzaw"},"content":"            char taskType \u003d textString.charAt(3);"},{"lineNumber":21,"author":{"gitId":"soepaingzaw"},"content":"            char doneOrNot \u003d textString.charAt(6);"},{"lineNumber":22,"author":{"gitId":"soepaingzaw"},"content":"            int indexOfOpenBracket \u003d textString.indexOf(\u0027(\u0027);"},{"lineNumber":23,"author":{"gitId":"soepaingzaw"},"content":"            int indexOfCloseBracket \u003d textString.indexOf(\u0027)\u0027);"},{"lineNumber":24,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":25,"author":{"gitId":"soepaingzaw"},"content":"            switch (taskType) {"},{"lineNumber":26,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":27,"author":{"gitId":"soepaingzaw"},"content":"            case \u0027T\u0027:"},{"lineNumber":28,"author":{"gitId":"soepaingzaw"},"content":"                tasks.add(new Todo(textString.substring(9)));"},{"lineNumber":29,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":30,"author":{"gitId":"soepaingzaw"},"content":"            case \u0027E\u0027:"},{"lineNumber":31,"author":{"gitId":"soepaingzaw"},"content":"                tasks.add(new Event(textString.substring(9, indexOfOpenBracket),"},{"lineNumber":32,"author":{"gitId":"soepaingzaw"},"content":"                        textString.substring(indexOfOpenBracket + 4, indexOfCloseBracket)));"},{"lineNumber":33,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":34,"author":{"gitId":"soepaingzaw"},"content":"            case \u0027D\u0027:"},{"lineNumber":35,"author":{"gitId":"soepaingzaw"},"content":"                tasks.add(new Deadline(textString.substring(9, indexOfOpenBracket),"},{"lineNumber":36,"author":{"gitId":"soepaingzaw"},"content":"                        textString.substring(indexOfOpenBracket + 4, indexOfCloseBracket)));"},{"lineNumber":37,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":38,"author":{"gitId":"soepaingzaw"},"content":"            default:"},{"lineNumber":39,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":40,"author":{"gitId":"soepaingzaw"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":42,"author":{"gitId":"soepaingzaw"},"content":"            if (doneOrNot \u003d\u003d \u0027\\u2713\u0027) {"},{"lineNumber":43,"author":{"gitId":"soepaingzaw"},"content":"                tasks.get(index).markAsDone();"},{"lineNumber":44,"author":{"gitId":"soepaingzaw"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"soepaingzaw"},"content":"            index++;"},{"lineNumber":46,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":48,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"soepaingzaw"},"content":"}"},{"lineNumber":50,"author":{"gitId":"soepaingzaw"},"content":"*/"}],"authorContributionMap":{"soepaingzaw":50}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"public class TaskList  {"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"    ArrayList\u003cTask\u003e tasks;"},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":"}"}],"authorContributionMap":{"soepaingzaw":11}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"    public Todo(String description) {"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":"}"}],"authorContributionMap":{"soepaingzaw":11}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"public class Ui {"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"    public Ui() {"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":"        printWelcomeMessage();"},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"        greetUserForTask();"},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":"    public static void printWelcomeMessage() {"},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":12,"author":{"gitId":"soepaingzaw"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":13,"author":{"gitId":"soepaingzaw"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":14,"author":{"gitId":"soepaingzaw"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":15,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":16,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"Hello from\\n\" + logo);"},{"lineNumber":17,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":18,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":20,"author":{"gitId":"soepaingzaw"},"content":"    public static void greetUserForTask() {"},{"lineNumber":21,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"Hello! I\u0027m Duke\\n\");"},{"lineNumber":22,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"What can I do for you?\\n\");"},{"lineNumber":23,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":24,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":26,"author":{"gitId":"soepaingzaw"},"content":"    public static void showLoadingError() {"},{"lineNumber":27,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"Warning!!! No file found to import. Creating new file...\\n\");"},{"lineNumber":28,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"soepaingzaw"},"content":"}"}],"authorContributionMap":{"soepaingzaw":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"todo watch lecture video"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":"deadline do tutorial /by Thurs 9a.m."},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"event Beach Party /at Sentosa Sat 3p.m."},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":"list"},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"bye"}],"authorContributionMap":{"soepaingzaw":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"soepaingzaw":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"soepaingzaw"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"soepaingzaw":1,"-":37}}]
