[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"Vinci-Hu":2,"-":24}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"     * Command line output constants"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"     * */"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"    final static String DIVLINE \u003d \"\\t__________________________________________________________________\\n\";"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"    final static String GREETINGS \u003d \"\\tHello! I\u0027m Ayanga, your personal task manager.\\n\" +"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tWhat can I note down for you?\\n\" +"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tTo add a todo item, simply write \\\"todo \u003cDESCRIPTION\u003e\\\".\\n\" +"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tTo add a deadline, write \\\"deadline \u003cDESCRIPTION\u003e /by \u003cTIME\u003e\\\".\\n\" +"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tTo add an event, write \\\"event \u003cDESCRIPTION\u003e /at \u003cVENUE\u003e\\\".\\n\" +"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tSay \\\"list\\\" and I will display your tasks.\\n\" +"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tWrite \\\"done \u003cNUMBER OF TASK\u003e\\\" to let me know when you have completed a task.\\n\" +"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tWave \\\"bye\\\" to me if you don\u0027t need me for now.\\n\";"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"    final static String PARTINGS \u003d \"\\tBye. Hope you have done your work next time I see you!\\n\" +"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tAh, and also remember to take care of yourself and sleep early :)\\n\";"},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"    private static boolean isExiting \u003d false;       // control the loop in main"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":"    private static Task[] tasks \u003d new Task[100];    // list of task items"},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"    private static int taskCount \u003d 0;               // keep track of total task numbers"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"     * Deals with raw input, extracts keyword and calls respective methods."},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"     * Catches the exceptions of each method and print corresponding response."},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":"     * Throws an exception if keyword is invalid."},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"     * @param   prompt  is the raw input string"},{"lineNumber":34,"author":{"gitId":"Vinci-Hu"},"content":"     * */"},{"lineNumber":35,"author":{"gitId":"Vinci-Hu"},"content":"    public static void processPrompt(String prompt) throws DukeException {"},{"lineNumber":36,"author":{"gitId":"Vinci-Hu"},"content":"        String keyword \u003d prompt.contains(\" \") ? prompt.split(\" \")[0] : prompt;"},{"lineNumber":37,"author":{"gitId":"Vinci-Hu"},"content":"        switch (keyword) {"},{"lineNumber":38,"author":{"gitId":"Vinci-Hu"},"content":"        case \"bye\":"},{"lineNumber":39,"author":{"gitId":"Vinci-Hu"},"content":"            isExiting \u003d true;"},{"lineNumber":40,"author":{"gitId":"Vinci-Hu"},"content":"            break;"},{"lineNumber":41,"author":{"gitId":"Vinci-Hu"},"content":"        case \"list\":"},{"lineNumber":42,"author":{"gitId":"Vinci-Hu"},"content":"            try {"},{"lineNumber":43,"author":{"gitId":"Vinci-Hu"},"content":"                displayList();"},{"lineNumber":44,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (DukeException e) {"},{"lineNumber":45,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.println(DIVLINE + e.getEmptyListMessage());"},{"lineNumber":46,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.print(DIVLINE);"},{"lineNumber":47,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"Vinci-Hu"},"content":"            break;"},{"lineNumber":49,"author":{"gitId":"Vinci-Hu"},"content":"        case \"done\":"},{"lineNumber":50,"author":{"gitId":"Vinci-Hu"},"content":"            try {"},{"lineNumber":51,"author":{"gitId":"Vinci-Hu"},"content":"                int taskIndex \u003d Integer.parseInt(prompt.substring(5)) - 1;"},{"lineNumber":52,"author":{"gitId":"Vinci-Hu"},"content":"                completeTask(taskIndex);"},{"lineNumber":53,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":54,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.println(DIVLINE + \"\\t:( OOPS!!! You are not specifying a valid task number.\");"},{"lineNumber":55,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.print(DIVLINE);"},{"lineNumber":56,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (DukeException e) {"},{"lineNumber":57,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.println(DIVLINE + e.getTaskAlreadyDoneMessage());"},{"lineNumber":58,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.print(DIVLINE);"},{"lineNumber":59,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"Vinci-Hu"},"content":"            break;"},{"lineNumber":61,"author":{"gitId":"Vinci-Hu"},"content":"        case \"deadline\":"},{"lineNumber":62,"author":{"gitId":"Vinci-Hu"},"content":"            try {"},{"lineNumber":63,"author":{"gitId":"Vinci-Hu"},"content":"                addDeadlineToList(prompt.substring(8));"},{"lineNumber":64,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (DukeException e) {"},{"lineNumber":65,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.println(DIVLINE + e.getIllegalDeadlineMessage());"},{"lineNumber":66,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.print(DIVLINE);"},{"lineNumber":67,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"Vinci-Hu"},"content":"            break;"},{"lineNumber":69,"author":{"gitId":"Vinci-Hu"},"content":"        case \"event\":"},{"lineNumber":70,"author":{"gitId":"Vinci-Hu"},"content":"            try {"},{"lineNumber":71,"author":{"gitId":"Vinci-Hu"},"content":"                addEventToList(prompt.substring(5));"},{"lineNumber":72,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (DukeException e) {"},{"lineNumber":73,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.println(DIVLINE + e.getIllegalEventMessage());"},{"lineNumber":74,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.print(DIVLINE);"},{"lineNumber":75,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"Vinci-Hu"},"content":"            break;"},{"lineNumber":77,"author":{"gitId":"Vinci-Hu"},"content":"        case \"todo\":"},{"lineNumber":78,"author":{"gitId":"Vinci-Hu"},"content":"            try {"},{"lineNumber":79,"author":{"gitId":"Vinci-Hu"},"content":"                addTodoToList(prompt.substring(4));"},{"lineNumber":80,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (DukeException e) {"},{"lineNumber":81,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.println(DIVLINE + e.getIllegalTodoMessage());"},{"lineNumber":82,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.print(DIVLINE);"},{"lineNumber":83,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"Vinci-Hu"},"content":"            break;"},{"lineNumber":85,"author":{"gitId":"Vinci-Hu"},"content":"        default:"},{"lineNumber":86,"author":{"gitId":"Vinci-Hu"},"content":"            throw new DukeException(\"Illegal keyword.\");"},{"lineNumber":87,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"Vinci-Hu"},"content":"         return;"},{"lineNumber":89,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":91,"author":{"gitId":"Vinci-Hu"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"Vinci-Hu"},"content":"     * */"},{"lineNumber":93,"author":{"gitId":"Vinci-Hu"},"content":"    private static void displayList() throws DukeException {"},{"lineNumber":94,"author":{"gitId":"Vinci-Hu"},"content":"        if (taskCount \u003d\u003d 0) {"},{"lineNumber":95,"author":{"gitId":"Vinci-Hu"},"content":"            throw new DukeException(\"Empty list. Nothing to be displayed.\");"},{"lineNumber":96,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.print(DIVLINE);"},{"lineNumber":98,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");"},{"lineNumber":99,"author":{"gitId":"Vinci-Hu"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {"},{"lineNumber":100,"author":{"gitId":"Vinci-Hu"},"content":"            System.out.println(\"\\t\" + (i + 1) + \".\" + tasks[i].toString());"},{"lineNumber":101,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.print(DIVLINE);"},{"lineNumber":103,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":105,"author":{"gitId":"Vinci-Hu"},"content":"    private static void addDeadlineToList(String description) throws DukeException {"},{"lineNumber":106,"author":{"gitId":"Vinci-Hu"},"content":"        if (description.startsWith(\" \")){"},{"lineNumber":107,"author":{"gitId":"Vinci-Hu"},"content":"            String ddlDscp \u003d description.substring(1);"},{"lineNumber":108,"author":{"gitId":"Vinci-Hu"},"content":"            int splitPoint \u003d ddlDscp.indexOf(\"/by\");"},{"lineNumber":109,"author":{"gitId":"Vinci-Hu"},"content":"            if (splitPoint\u003d\u003d-1){"},{"lineNumber":110,"author":{"gitId":"Vinci-Hu"},"content":"                throw new DukeException(\"Illegal Deadline prompt detected.\");"},{"lineNumber":111,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"Vinci-Hu"},"content":"            tasks[taskCount] \u003d new Deadline(ddlDscp.substring(0, splitPoint - 1),"},{"lineNumber":113,"author":{"gitId":"Vinci-Hu"},"content":"                    ddlDscp.substring(splitPoint + 4));"},{"lineNumber":114,"author":{"gitId":"Vinci-Hu"},"content":"            printAddSuccessMessage(tasks[taskCount]);"},{"lineNumber":115,"author":{"gitId":"Vinci-Hu"},"content":"            taskCount++;"},{"lineNumber":116,"author":{"gitId":"Vinci-Hu"},"content":"        } else {"},{"lineNumber":117,"author":{"gitId":"Vinci-Hu"},"content":"            throw new DukeException(\"Illegal Deadline prompt detected.\");"},{"lineNumber":118,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":121,"author":{"gitId":"Vinci-Hu"},"content":"    private static void addEventToList(String description) throws DukeException {"},{"lineNumber":122,"author":{"gitId":"Vinci-Hu"},"content":"        if (description.startsWith(\" \")){"},{"lineNumber":123,"author":{"gitId":"Vinci-Hu"},"content":"            String evtDscp \u003d description.substring(1);"},{"lineNumber":124,"author":{"gitId":"Vinci-Hu"},"content":"            int splitPoint \u003d evtDscp.indexOf(\"/at\");"},{"lineNumber":125,"author":{"gitId":"Vinci-Hu"},"content":"            if (splitPoint\u003d\u003d-1){"},{"lineNumber":126,"author":{"gitId":"Vinci-Hu"},"content":"                throw new DukeException(\"Illegal Event prompt detected.\");"},{"lineNumber":127,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":128,"author":{"gitId":"Vinci-Hu"},"content":"            tasks[taskCount] \u003d new Event(evtDscp.substring(0, splitPoint - 1),"},{"lineNumber":129,"author":{"gitId":"Vinci-Hu"},"content":"                    evtDscp.substring(splitPoint + 4));"},{"lineNumber":130,"author":{"gitId":"Vinci-Hu"},"content":"            printAddSuccessMessage(tasks[taskCount]);"},{"lineNumber":131,"author":{"gitId":"Vinci-Hu"},"content":"            taskCount++;"},{"lineNumber":132,"author":{"gitId":"Vinci-Hu"},"content":"        } else {"},{"lineNumber":133,"author":{"gitId":"Vinci-Hu"},"content":"            throw new DukeException(\"Illegal Event prompt detected.\");"},{"lineNumber":134,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":137,"author":{"gitId":"Vinci-Hu"},"content":"    private static void addTodoToList(String description) throws DukeException {"},{"lineNumber":138,"author":{"gitId":"Vinci-Hu"},"content":"        if (description.startsWith(\" \")) {"},{"lineNumber":139,"author":{"gitId":"Vinci-Hu"},"content":"            tasks[taskCount] \u003d new Todo(description.substring(1));"},{"lineNumber":140,"author":{"gitId":"Vinci-Hu"},"content":"            printAddSuccessMessage(tasks[taskCount]);"},{"lineNumber":141,"author":{"gitId":"Vinci-Hu"},"content":"            taskCount++;"},{"lineNumber":142,"author":{"gitId":"Vinci-Hu"},"content":"        } else {"},{"lineNumber":143,"author":{"gitId":"Vinci-Hu"},"content":"            throw new DukeException(\"Illegal Todo Prompt detected.\");"},{"lineNumber":144,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":147,"author":{"gitId":"Vinci-Hu"},"content":"    private static void printAddSuccessMessage(Task task) {"},{"lineNumber":148,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.print(DIVLINE);"},{"lineNumber":149,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\\n\" +"},{"lineNumber":150,"author":{"gitId":"Vinci-Hu"},"content":"                \"\\t  \" + task.toString());"},{"lineNumber":151,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.println(\"\\tNow you have \" + (taskCount+1) + \" tasks in the list.\");"},{"lineNumber":152,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.print(DIVLINE);"},{"lineNumber":153,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":155,"author":{"gitId":"Vinci-Hu"},"content":"    private static void completeTask(int taskIndex) throws DukeException {"},{"lineNumber":156,"author":{"gitId":"Vinci-Hu"},"content":"        if (tasks[taskIndex].getIsDone()){"},{"lineNumber":157,"author":{"gitId":"Vinci-Hu"},"content":"            throw new DukeException(\"Task has already been marked done.\");"},{"lineNumber":158,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":159,"author":{"gitId":"Vinci-Hu"},"content":"        tasks[taskIndex].markAsDone();"},{"lineNumber":160,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.print(DIVLINE);"},{"lineNumber":161,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done: \\n\" +"},{"lineNumber":162,"author":{"gitId":"Vinci-Hu"},"content":"                \"\\t\" + tasks[taskIndex].toString());"},{"lineNumber":163,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.print(DIVLINE);"},{"lineNumber":164,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":167,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.print(DIVLINE + GREETINGS + DIVLINE);"},{"lineNumber":168,"author":{"gitId":"Vinci-Hu"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":169,"author":{"gitId":"Vinci-Hu"},"content":"        while (!isExiting) {"},{"lineNumber":170,"author":{"gitId":"Vinci-Hu"},"content":"            try{"},{"lineNumber":171,"author":{"gitId":"Vinci-Hu"},"content":"                String prompt \u003d in.nextLine();"},{"lineNumber":172,"author":{"gitId":"Vinci-Hu"},"content":"                processPrompt(prompt);"},{"lineNumber":173,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (DukeException e) {"},{"lineNumber":174,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.println(DIVLINE + e.getIllegalKeywordMessage());"},{"lineNumber":175,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.print(DIVLINE);"},{"lineNumber":176,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":177,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":178,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.println(DIVLINE + PARTINGS + DIVLINE);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":181,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":178,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"public class DukeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"    public DukeException(String s) {"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"    public String getEmptyListMessage(){"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"        return \"\\t:( OOPS!!! You haven\u0027t noted down anything yet.\";"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"    public String getTaskAlreadyDoneMessage(){"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"        return \"\\tThe task is already done. :)\";"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"    public String getIllegalKeywordMessage() {"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"        return \"\\t:( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\";"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"    public String getIllegalTodoMessage(){"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"        return \"\\t:( OOPS!!! The description of a todo cannot be empty.\";"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"    public String getIllegalDeadlineMessage(){"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":"        return \"\\t:( OOPS!!! You are not specifying a valid deadline with time.\";"},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"    public String getIllegalEventMessage() {"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":"        return \"\\t:( OOPS!!! You are not specifying a valid event with venue.\";"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":30}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"    protected String by;"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"        this.by \u003d by;"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":17}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"    protected String at;"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"    public Event(String description, String at) {"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"        this.at \u003d at;"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":16}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"    private static int totalTasks \u003d 0;"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"    public Task(String description) {"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"        this.description \u003d description;"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"        this.isDone \u003d false;"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"        totalTasks++;"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"    //\"\\u2713\" \u003d tick symbol, \"\\u2718\" \u003d cross symbol"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"    public String getStatusIcon() {"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"        //return X if done or space if not"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"        return (isDone ? \"\\u2718\" : \" \");"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"    public String getDescription() {"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"        return this.description;"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"    public void markAsDone() {"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":"        this.isDone \u003d true;"},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"    public boolean getIsDone(){"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"        return isDone;"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"Vinci-Hu"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"Vinci-Hu"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();"},{"lineNumber":36,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":37}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"Vinci-Hu":1,"-":20}}]
