[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"Vinci-Hu":2,"-":24}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"import duke.data.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"import duke.data.task.Event;"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"import duke.data.task.Task;"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"import duke.data.task.Todo;"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"import duke.exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"import java.util.Iterator;"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"import static duke.storage.FileManager.*;"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"     * Command line output constants"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"     * */"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"    final static String DIVLINE \u003d \"\\t__________________________________________________________________\\n\";"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"    final static String GREETINGS \u003d \"\\tHello! I\u0027m Ayanga, your personal task manager.\\n\" +"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tWhat can I note down for you?\\n\" +"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tTo add a todo item, simply write \\\"todo \u003cDESCRIPTION\u003e\\\".\\n\" +"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tTo add a deadline, write \\\"deadline \u003cDESCRIPTION\u003e /by \u003cTIME\u003e\\\".\\n\" +"},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tTo add an event, write \\\"event \u003cDESCRIPTION\u003e /at \u003cVENUE\u003e\\\".\\n\" +"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tSay \\\"list\\\" and I will display your tasks.\\n\" +"},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tWrite \\\"done \u003cNUMBER OF TASK\u003e\\\" to let me know when you have completed a task.\\n\" +"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tWave \\\"bye\\\" to me if you don\u0027t need me for now.\\n\";"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"    final static String PARTINGS \u003d \"\\tBye. Hope you have done your work next time I see you!\\n\" +"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tAh, and also remember to take care of yourself and sleep early :)\\n\";"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"    private static boolean isExiting \u003d false;       // control the loop in main"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":34,"author":{"gitId":"Vinci-Hu"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Vinci-Hu"},"content":"     * Deals with raw input, extracts keyword and calls respective methods."},{"lineNumber":36,"author":{"gitId":"Vinci-Hu"},"content":"     * Catches the exceptions of each method and print corresponding response."},{"lineNumber":37,"author":{"gitId":"Vinci-Hu"},"content":"     * Throws an exception if keyword is invalid."},{"lineNumber":38,"author":{"gitId":"Vinci-Hu"},"content":"     * @param   prompt  is the raw input string"},{"lineNumber":39,"author":{"gitId":"Vinci-Hu"},"content":"     * */"},{"lineNumber":40,"author":{"gitId":"Vinci-Hu"},"content":"    public static void processPrompt(String prompt) throws DukeException {"},{"lineNumber":41,"author":{"gitId":"Vinci-Hu"},"content":"        String keyword \u003d prompt.contains(\" \") ? prompt.split(\" \")[0] : prompt;"},{"lineNumber":42,"author":{"gitId":"Vinci-Hu"},"content":"        switch (keyword) {"},{"lineNumber":43,"author":{"gitId":"Vinci-Hu"},"content":"        case \"bye\":"},{"lineNumber":44,"author":{"gitId":"Vinci-Hu"},"content":"            isExiting \u003d true;"},{"lineNumber":45,"author":{"gitId":"Vinci-Hu"},"content":"            break;"},{"lineNumber":46,"author":{"gitId":"Vinci-Hu"},"content":"        case \"list\":"},{"lineNumber":47,"author":{"gitId":"Vinci-Hu"},"content":"            try {"},{"lineNumber":48,"author":{"gitId":"Vinci-Hu"},"content":"                displayList();"},{"lineNumber":49,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (DukeException e) {"},{"lineNumber":50,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.println(DIVLINE + e.getEmptyListMessage());"},{"lineNumber":51,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.print(DIVLINE);"},{"lineNumber":52,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"Vinci-Hu"},"content":"            break;"},{"lineNumber":54,"author":{"gitId":"Vinci-Hu"},"content":"        case \"done\":"},{"lineNumber":55,"author":{"gitId":"Vinci-Hu"},"content":"            try {"},{"lineNumber":56,"author":{"gitId":"Vinci-Hu"},"content":"                int taskIndex \u003d Integer.parseInt(prompt.substring(5)) - 1;"},{"lineNumber":57,"author":{"gitId":"Vinci-Hu"},"content":"                completeTask(taskIndex);"},{"lineNumber":58,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":59,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.println(DIVLINE + \"\\t:( OOPS!!! You are not specifying a valid task number.\");"},{"lineNumber":60,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.print(DIVLINE);"},{"lineNumber":61,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (DukeException e) {"},{"lineNumber":62,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.println(DIVLINE + e.getTaskAlreadyDoneMessage());"},{"lineNumber":63,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.print(DIVLINE);"},{"lineNumber":64,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"Vinci-Hu"},"content":"            break;"},{"lineNumber":66,"author":{"gitId":"Vinci-Hu"},"content":"        case \"deadline\":"},{"lineNumber":67,"author":{"gitId":"Vinci-Hu"},"content":"            try {"},{"lineNumber":68,"author":{"gitId":"Vinci-Hu"},"content":"                addDeadlineToList(prompt.substring(8));"},{"lineNumber":69,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (DukeException e) {"},{"lineNumber":70,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.println(DIVLINE + e.getIllegalDeadlineMessage());"},{"lineNumber":71,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.print(DIVLINE);"},{"lineNumber":72,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (IOException e) {"},{"lineNumber":73,"author":{"gitId":"Vinci-Hu"},"content":"                e.printStackTrace();"},{"lineNumber":74,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"Vinci-Hu"},"content":"            break;"},{"lineNumber":76,"author":{"gitId":"Vinci-Hu"},"content":"        case \"event\":"},{"lineNumber":77,"author":{"gitId":"Vinci-Hu"},"content":"            try {"},{"lineNumber":78,"author":{"gitId":"Vinci-Hu"},"content":"                addEventToList(prompt.substring(5));"},{"lineNumber":79,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (DukeException e) {"},{"lineNumber":80,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.println(DIVLINE + e.getIllegalEventMessage());"},{"lineNumber":81,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.print(DIVLINE);"},{"lineNumber":82,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (IOException e) {"},{"lineNumber":83,"author":{"gitId":"Vinci-Hu"},"content":"                e.printStackTrace();"},{"lineNumber":84,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"Vinci-Hu"},"content":"            break;"},{"lineNumber":86,"author":{"gitId":"Vinci-Hu"},"content":"        case \"todo\":"},{"lineNumber":87,"author":{"gitId":"Vinci-Hu"},"content":"            try {"},{"lineNumber":88,"author":{"gitId":"Vinci-Hu"},"content":"                addTodoToList(prompt.substring(4));"},{"lineNumber":89,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (DukeException e) {"},{"lineNumber":90,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.println(DIVLINE + e.getIllegalTodoMessage());"},{"lineNumber":91,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.print(DIVLINE);"},{"lineNumber":92,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (IOException e) {"},{"lineNumber":93,"author":{"gitId":"Vinci-Hu"},"content":"                e.printStackTrace();"},{"lineNumber":94,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"Vinci-Hu"},"content":"            break;"},{"lineNumber":96,"author":{"gitId":"Vinci-Hu"},"content":"        case \"delete\":"},{"lineNumber":97,"author":{"gitId":"Vinci-Hu"},"content":"            try {"},{"lineNumber":98,"author":{"gitId":"Vinci-Hu"},"content":"                int taskIndex \u003d Integer.parseInt(prompt.substring(7)) - 1;"},{"lineNumber":99,"author":{"gitId":"Vinci-Hu"},"content":"                deleteFromList(taskIndex);"},{"lineNumber":100,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":101,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.println(DIVLINE + \"\\t:( OOPS!!! You are not specifying a valid task number.\");"},{"lineNumber":102,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.print(DIVLINE);"},{"lineNumber":103,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (DukeException e) {"},{"lineNumber":104,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.println(DIVLINE + \"Target task does not exist or you have specified nothing.\");"},{"lineNumber":105,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.print(DIVLINE);"},{"lineNumber":106,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (IOException e) {"},{"lineNumber":107,"author":{"gitId":"Vinci-Hu"},"content":"                e.printStackTrace();"},{"lineNumber":108,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":109,"author":{"gitId":"Vinci-Hu"},"content":"            break;"},{"lineNumber":110,"author":{"gitId":"Vinci-Hu"},"content":"        default:"},{"lineNumber":111,"author":{"gitId":"Vinci-Hu"},"content":"            throw new DukeException(\"Illegal keyword.\");"},{"lineNumber":112,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"Vinci-Hu"},"content":"         return;"},{"lineNumber":114,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":116,"author":{"gitId":"Vinci-Hu"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"Vinci-Hu"},"content":"     * */"},{"lineNumber":118,"author":{"gitId":"Vinci-Hu"},"content":"    private static void displayList() throws DukeException {"},{"lineNumber":119,"author":{"gitId":"Vinci-Hu"},"content":"        if (taskList.isEmpty()) {"},{"lineNumber":120,"author":{"gitId":"Vinci-Hu"},"content":"            throw new DukeException(\"Empty list. Nothing to be displayed.\");"},{"lineNumber":121,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.print(DIVLINE);"},{"lineNumber":123,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");"},{"lineNumber":124,"author":{"gitId":"Vinci-Hu"},"content":"        // Create an iterator for the list"},{"lineNumber":125,"author":{"gitId":"Vinci-Hu"},"content":"        Iterator\u003cTask\u003e iter \u003d taskList.iterator();"},{"lineNumber":126,"author":{"gitId":"Vinci-Hu"},"content":"        // Displaying the values after iterating through the list"},{"lineNumber":127,"author":{"gitId":"Vinci-Hu"},"content":"        int counter \u003d 0;"},{"lineNumber":128,"author":{"gitId":"Vinci-Hu"},"content":"        while (iter.hasNext()) {"},{"lineNumber":129,"author":{"gitId":"Vinci-Hu"},"content":"            counter++;"},{"lineNumber":130,"author":{"gitId":"Vinci-Hu"},"content":"            System.out.println(\"\\t\" + counter + \".\" + iter.next().toString());"},{"lineNumber":131,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.print(DIVLINE);"},{"lineNumber":133,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":135,"author":{"gitId":"Vinci-Hu"},"content":"    private static void addDeadlineToList(String description) throws DukeException, IOException {"},{"lineNumber":136,"author":{"gitId":"Vinci-Hu"},"content":"        if (description.startsWith(\" \")){"},{"lineNumber":137,"author":{"gitId":"Vinci-Hu"},"content":"            String ddlDscp \u003d description.substring(1);"},{"lineNumber":138,"author":{"gitId":"Vinci-Hu"},"content":"            int splitPoint \u003d ddlDscp.indexOf(\"/by\");"},{"lineNumber":139,"author":{"gitId":"Vinci-Hu"},"content":"            if (splitPoint\u003d\u003d-1){"},{"lineNumber":140,"author":{"gitId":"Vinci-Hu"},"content":"                throw new DukeException(\"Illegal Deadline prompt detected.\");"},{"lineNumber":141,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"Vinci-Hu"},"content":"            Deadline newDdl \u003d new Deadline(ddlDscp.substring(0, splitPoint - 1),"},{"lineNumber":143,"author":{"gitId":"Vinci-Hu"},"content":"                    ddlDscp.substring(splitPoint + 4));"},{"lineNumber":144,"author":{"gitId":"Vinci-Hu"},"content":"            taskList.add(newDdl);"},{"lineNumber":145,"author":{"gitId":"Vinci-Hu"},"content":"            writeToFile(initializeTextToWrite());"},{"lineNumber":146,"author":{"gitId":"Vinci-Hu"},"content":"            printAddSuccessMessage(newDdl);"},{"lineNumber":147,"author":{"gitId":"Vinci-Hu"},"content":"        } else {"},{"lineNumber":148,"author":{"gitId":"Vinci-Hu"},"content":"            throw new DukeException(\"Illegal Deadline prompt detected.\");"},{"lineNumber":149,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":152,"author":{"gitId":"Vinci-Hu"},"content":"    private static void addEventToList(String description) throws DukeException, IOException {"},{"lineNumber":153,"author":{"gitId":"Vinci-Hu"},"content":"        if (description.startsWith(\" \")){"},{"lineNumber":154,"author":{"gitId":"Vinci-Hu"},"content":"            String evtDscp \u003d description.substring(1);"},{"lineNumber":155,"author":{"gitId":"Vinci-Hu"},"content":"            int splitPoint \u003d evtDscp.indexOf(\"/at\");"},{"lineNumber":156,"author":{"gitId":"Vinci-Hu"},"content":"            if (splitPoint\u003d\u003d-1){"},{"lineNumber":157,"author":{"gitId":"Vinci-Hu"},"content":"                throw new DukeException(\"Illegal Event prompt detected.\");"},{"lineNumber":158,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":159,"author":{"gitId":"Vinci-Hu"},"content":"            Event newEvt \u003d new Event(evtDscp.substring(0, splitPoint - 1),"},{"lineNumber":160,"author":{"gitId":"Vinci-Hu"},"content":"                    evtDscp.substring(splitPoint + 4));"},{"lineNumber":161,"author":{"gitId":"Vinci-Hu"},"content":"            taskList.add(newEvt);"},{"lineNumber":162,"author":{"gitId":"Vinci-Hu"},"content":"            writeToFile(initializeTextToWrite());"},{"lineNumber":163,"author":{"gitId":"Vinci-Hu"},"content":"            printAddSuccessMessage(newEvt);"},{"lineNumber":164,"author":{"gitId":"Vinci-Hu"},"content":"        } else {"},{"lineNumber":165,"author":{"gitId":"Vinci-Hu"},"content":"            throw new DukeException(\"Illegal Event prompt detected.\");"},{"lineNumber":166,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":169,"author":{"gitId":"Vinci-Hu"},"content":"    private static void addTodoToList(String description) throws DukeException, IOException {"},{"lineNumber":170,"author":{"gitId":"Vinci-Hu"},"content":"        if (description.startsWith(\" \")) {"},{"lineNumber":171,"author":{"gitId":"Vinci-Hu"},"content":"            Task newTodo \u003d new Todo(description.substring(1));"},{"lineNumber":172,"author":{"gitId":"Vinci-Hu"},"content":"            taskList.add(newTodo);"},{"lineNumber":173,"author":{"gitId":"Vinci-Hu"},"content":"            writeToFile(initializeTextToWrite());"},{"lineNumber":174,"author":{"gitId":"Vinci-Hu"},"content":"            printAddSuccessMessage(newTodo);"},{"lineNumber":175,"author":{"gitId":"Vinci-Hu"},"content":"        } else {"},{"lineNumber":176,"author":{"gitId":"Vinci-Hu"},"content":"            throw new DukeException(\"Illegal Todo Prompt detected.\");"},{"lineNumber":177,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":178,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":180,"author":{"gitId":"Vinci-Hu"},"content":"    private static void printAddSuccessMessage(Task task) {"},{"lineNumber":181,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.print(DIVLINE);"},{"lineNumber":182,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\\n\" +"},{"lineNumber":183,"author":{"gitId":"Vinci-Hu"},"content":"                \"\\t  \" + task.toString());"},{"lineNumber":184,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.println(\"\\tNow you have \" + taskList.size() + \" tasks in the list.\");"},{"lineNumber":185,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.print(DIVLINE);"},{"lineNumber":186,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":188,"author":{"gitId":"Vinci-Hu"},"content":"    private static void printDeleteSuccessMessage(Task task) {"},{"lineNumber":189,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.print(DIVLINE);"},{"lineNumber":190,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task: \\n\" +"},{"lineNumber":191,"author":{"gitId":"Vinci-Hu"},"content":"                \"\\t  \" + task.toString());"},{"lineNumber":192,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.println(\"\\tNow you have \" + taskList.size() + \" tasks in the list.\");"},{"lineNumber":193,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.print(DIVLINE);"},{"lineNumber":194,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":196,"author":{"gitId":"Vinci-Hu"},"content":"    private static void completeTask(int taskIndex) throws DukeException {"},{"lineNumber":197,"author":{"gitId":"Vinci-Hu"},"content":"        if (taskList.get(taskIndex).getIsDone()){"},{"lineNumber":198,"author":{"gitId":"Vinci-Hu"},"content":"            throw new DukeException(\"Task has already been marked done.\");"},{"lineNumber":199,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"Vinci-Hu"},"content":"        taskList.get(taskIndex).markAsDone();"},{"lineNumber":201,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.print(DIVLINE);"},{"lineNumber":202,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done: \\n\" +"},{"lineNumber":203,"author":{"gitId":"Vinci-Hu"},"content":"                \"\\t\" + taskList.get(taskIndex).toString());"},{"lineNumber":204,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.print(DIVLINE);"},{"lineNumber":205,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":207,"author":{"gitId":"Vinci-Hu"},"content":"    private static void deleteFromList(int taskIndex) throws DukeException, IOException {"},{"lineNumber":208,"author":{"gitId":"Vinci-Hu"},"content":"        if (taskIndex \u003e\u003d taskList.size()) {"},{"lineNumber":209,"author":{"gitId":"Vinci-Hu"},"content":"            throw new DukeException(\"Task does not exist\");"},{"lineNumber":210,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":211,"author":{"gitId":"Vinci-Hu"},"content":"        Task toBeDeleted \u003d taskList.get(taskIndex);"},{"lineNumber":212,"author":{"gitId":"Vinci-Hu"},"content":"        // Some manipulation here"},{"lineNumber":213,"author":{"gitId":"Vinci-Hu"},"content":"        taskList.remove(taskIndex);"},{"lineNumber":214,"author":{"gitId":"Vinci-Hu"},"content":"        writeToFile(initializeTextToWrite());"},{"lineNumber":215,"author":{"gitId":"Vinci-Hu"},"content":"        printDeleteSuccessMessage(toBeDeleted);"},{"lineNumber":216,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":218,"author":{"gitId":"Vinci-Hu"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":219,"author":{"gitId":"Vinci-Hu"},"content":"        createFileIfNotExist();"},{"lineNumber":220,"author":{"gitId":"Vinci-Hu"},"content":"        ArrayList\u003cString\u003e textInput \u003d readFile();"},{"lineNumber":221,"author":{"gitId":"Vinci-Hu"},"content":"        initializeTaskList(textInput);"},{"lineNumber":222,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.print(DIVLINE + GREETINGS + DIVLINE);"},{"lineNumber":223,"author":{"gitId":"Vinci-Hu"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":224,"author":{"gitId":"Vinci-Hu"},"content":"        while (!isExiting) {"},{"lineNumber":225,"author":{"gitId":"Vinci-Hu"},"content":"            try{"},{"lineNumber":226,"author":{"gitId":"Vinci-Hu"},"content":"                String prompt \u003d in.nextLine();"},{"lineNumber":227,"author":{"gitId":"Vinci-Hu"},"content":"                processPrompt(prompt);"},{"lineNumber":228,"author":{"gitId":"Vinci-Hu"},"content":"            } catch (DukeException e) {"},{"lineNumber":229,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.println(DIVLINE + e.getIllegalKeywordMessage());"},{"lineNumber":230,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.print(DIVLINE);"},{"lineNumber":231,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":232,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":233,"author":{"gitId":"Vinci-Hu"},"content":"        // writeToFile(initializeTextToWrite());"},{"lineNumber":234,"author":{"gitId":"Vinci-Hu"},"content":"        System.out.println(DIVLINE + PARTINGS + DIVLINE);"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":237,"author":{"gitId":"Vinci-Hu"},"content":"    private static String initializeTextToWrite() {"},{"lineNumber":238,"author":{"gitId":"Vinci-Hu"},"content":"        String text \u003d \"\";"},{"lineNumber":239,"author":{"gitId":"Vinci-Hu"},"content":"        for (int i\u003d0; i\u003ctaskList.size(); i++) {"},{"lineNumber":240,"author":{"gitId":"Vinci-Hu"},"content":"            text \u003d text + taskList.get(i).toText(i+1)+ System.lineSeparator();"},{"lineNumber":241,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":242,"author":{"gitId":"Vinci-Hu"},"content":"        return text;"},{"lineNumber":243,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":245,"author":{"gitId":"Vinci-Hu"},"content":"    private static void initializeTaskList(ArrayList\u003cString\u003e fileInput) {"},{"lineNumber":246,"author":{"gitId":"Vinci-Hu"},"content":"        for (int i\u003d0; i\u003cfileInput.size(); i++) {"},{"lineNumber":247,"author":{"gitId":"Vinci-Hu"},"content":"            //create tasklist according to file storage"},{"lineNumber":248,"author":{"gitId":"Vinci-Hu"},"content":"            String[] arr \u003d fileInput.get(i).split(\"\\\\|\");"},{"lineNumber":249,"author":{"gitId":"Vinci-Hu"},"content":"            switch (arr[0]) {"},{"lineNumber":250,"author":{"gitId":"Vinci-Hu"},"content":"                case \"T\":"},{"lineNumber":251,"author":{"gitId":"Vinci-Hu"},"content":"                    taskList.add(new Todo(arr[2]));"},{"lineNumber":252,"author":{"gitId":"Vinci-Hu"},"content":"                    break;"},{"lineNumber":253,"author":{"gitId":"Vinci-Hu"},"content":"                case \"D\":"},{"lineNumber":254,"author":{"gitId":"Vinci-Hu"},"content":"                    taskList.add(new Deadline(arr[2], arr[3]));"},{"lineNumber":255,"author":{"gitId":"Vinci-Hu"},"content":"                    break;"},{"lineNumber":256,"author":{"gitId":"Vinci-Hu"},"content":"                case \"E\":"},{"lineNumber":257,"author":{"gitId":"Vinci-Hu"},"content":"                    taskList.add(new Event(arr[2], arr[3]));"},{"lineNumber":258,"author":{"gitId":"Vinci-Hu"},"content":"                    break;"},{"lineNumber":259,"author":{"gitId":"Vinci-Hu"},"content":"                default:"},{"lineNumber":260,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":261,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":262,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":263,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":264,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":262,"-":3}},{"path":"src/main/java/duke/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke.data;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"import duke.data.task.Task;"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"import duke.exception.TaskNotFoundException;"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"import java.util.*;"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":" * Represents the entire task list. Contains the data of the task list"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"public class TaskList {"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    private ArrayList\u003cTask\u003e internalList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"     * Constructs empty task list."},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"    public TaskList(){"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"     * Constructs a task list with the given tasks."},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":"    public TaskList(Task... tasks) {"},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"        final List\u003cTask\u003e initialList \u003d Arrays.asList(tasks);"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":"        internalList.addAll(initialList);"},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"     * Constructs a list from the items in the given collection."},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"     * @param tasks a collection of persons"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"    public TaskList(Collection\u003cTask\u003e tasks){"},{"lineNumber":34,"author":{"gitId":"Vinci-Hu"},"content":"        internalList.addAll(tasks);"},{"lineNumber":35,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":37,"author":{"gitId":"Vinci-Hu"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Vinci-Hu"},"content":"     * Adds a task to the list."},{"lineNumber":39,"author":{"gitId":"Vinci-Hu"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"Vinci-Hu"},"content":"    public void add(Task toAdd) {"},{"lineNumber":41,"author":{"gitId":"Vinci-Hu"},"content":"        internalList.add(toAdd);"},{"lineNumber":42,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":44,"author":{"gitId":"Vinci-Hu"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"Vinci-Hu"},"content":"     * Removes the task object from the list."},{"lineNumber":46,"author":{"gitId":"Vinci-Hu"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Vinci-Hu"},"content":"    public void remove(Task toRemove) throws TaskNotFoundException {"},{"lineNumber":48,"author":{"gitId":"Vinci-Hu"},"content":"        final boolean taskFoundAndDeleted \u003d internalList.remove(toRemove);"},{"lineNumber":49,"author":{"gitId":"Vinci-Hu"},"content":"        if (!taskFoundAndDeleted) {"},{"lineNumber":50,"author":{"gitId":"Vinci-Hu"},"content":"            throw new TaskNotFoundException();"},{"lineNumber":51,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":54,"author":{"gitId":"Vinci-Hu"},"content":"    public ArrayList getTaskList() {"},{"lineNumber":55,"author":{"gitId":"Vinci-Hu"},"content":"        return internalList;"},{"lineNumber":56,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":57}},{"path":"src/main/java/duke/data/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke.data.task;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":" * Represents a Deadline in the task list."},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":" * Guarantees: Has a by/ field indicating the time argument"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"    protected String by;"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"        this.by \u003d by;"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"    public String toText(int number) {"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"        return \"D|\" + number + \"|\" + description + \"|\" + by;"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":25}},{"path":"src/main/java/duke/data/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke.data.task;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":" * Represents an Event in the task list."},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":" * Guarantees: Has an at/ field indicating the venue argument"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"    protected String at;"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"    public Event(String description, String at) {"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"        this.at \u003d at;"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"    public String toText(int number) {"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"        return \"E|\" + number + \"|\" + description + \"|\" + at;"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":25}},{"path":"src/main/java/duke/data/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke.data.task;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":" * Represents a task."},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":" * Has field description and status named isDone."},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"public abstract class Task {"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"    protected String description;"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"    private static int totalTasks \u003d 0;"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    public Task(String description) {"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"        this.isDone \u003d false;"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"        totalTasks++;"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"    //\"\\u2713\" \u003d tick symbol, \"\\u2718\" \u003d cross symbol"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"    public String getStatusIcon() {"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"        //return X if done or space if not"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"        return (isDone ? \"\\u2718\" : \" \");"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"    public String getDescription() {"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":"        return this.description;"},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"    public void markAsDone() {"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"        this.isDone \u003d true;"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"    public boolean getIsDone(){"},{"lineNumber":34,"author":{"gitId":"Vinci-Hu"},"content":"        return isDone;"},{"lineNumber":35,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":37,"author":{"gitId":"Vinci-Hu"},"content":"    public abstract String toText(int number);"},{"lineNumber":38,"author":{"gitId":"Vinci-Hu"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"Vinci-Hu"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"Vinci-Hu"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();"},{"lineNumber":41,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":42}},{"path":"src/main/java/duke/data/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke.data.task;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":" * Represent a to-do item in the task list."},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"    public Todo(String description) {"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"    public String toText(int number) {"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"        return \"T|\" + number + \"|\" + description;"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":21}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"public class DukeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"     * @param message should contain relevant information on the failed constraint(s)"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"    public DukeException(String message) {"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"        super(message);"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"    public String getEmptyListMessage(){"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"        return \"\\t:( OOPS!!! You haven\u0027t noted down anything yet.\";"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"    public String getTaskAlreadyDoneMessage(){"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"        return \"\\tThe task is already done. :)\";"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"    public String getIllegalKeywordMessage() {"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"        return \"\\t:( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\";"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"    public String getIllegalTodoMessage(){"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":"        return \"\\t:( OOPS!!! The description of a todo cannot be empty.\";"},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"    public String getIllegalDeadlineMessage(){"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":"        return \"\\t:( OOPS!!! You are not specifying a valid deadline with time.\";"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"    public String getIllegalEventMessage() {"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":"        return \"\\t:( OOPS!!! You are not specifying a valid event with venue.\";"},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":34}},{"path":"src/main/java/duke/exception/IllegalTaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"public class IllegalTaskFormatException extends DukeException{"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"    public IllegalTaskFormatException(String message) {"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":7}},{"path":"src/main/java/duke/exception/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"public class TaskNotFoundException extends Exception{"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"    public String getMessage(){"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"        String m \u003d \"Task is not in the current task list.\\n\";"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"        return m;"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":" * Parses user input，deals with making sense of the user command"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":7}},{"path":"src/main/java/duke/storage/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"public class FileManager {"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"    private static String home \u003d System.getProperty(\"user.dir\");"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"    private static final String directoryPath \u003d home + File.separator + \"data\";"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    private static final String filePath \u003d home + File.separator + \"data\" + File.separator + \"task_list.txt\";"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"    public static void createFileIfNotExist() {"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"            File directory \u003d new File(directoryPath);"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"            if (! directory.exists()){"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"                directory.mkdir();"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"            File myFile \u003d new File(filePath);"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"            if (myFile.createNewFile()) {"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":"                System.out.println(\"A new task list file is created!\");"},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"            } else {"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":"                return;"},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"    public static ArrayList\u003cString\u003e readFile() throws FileNotFoundException {"},{"lineNumber":34,"author":{"gitId":"Vinci-Hu"},"content":"        File f \u003d new File(filePath); // create a File for the given file path"},{"lineNumber":35,"author":{"gitId":"Vinci-Hu"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":36,"author":{"gitId":"Vinci-Hu"},"content":"        ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":37,"author":{"gitId":"Vinci-Hu"},"content":"        while (s.hasNextLine()) {"},{"lineNumber":38,"author":{"gitId":"Vinci-Hu"},"content":"            list.add(s.nextLine());"},{"lineNumber":39,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"Vinci-Hu"},"content":"        s.close();"},{"lineNumber":41,"author":{"gitId":"Vinci-Hu"},"content":"        return list;"},{"lineNumber":42,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":44,"author":{"gitId":"Vinci-Hu"},"content":"    public static void writeToFile(String textToAdd) throws IOException {"},{"lineNumber":45,"author":{"gitId":"Vinci-Hu"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":46,"author":{"gitId":"Vinci-Hu"},"content":"        fw.write(textToAdd);"},{"lineNumber":47,"author":{"gitId":"Vinci-Hu"},"content":"        fw.close();"},{"lineNumber":48,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":49}},{"path":"src/main/java/duke/storage/TaskListDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":" * Decodes the storage data file into an {@code AddressBook} object."},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"public class TaskListDecoder {"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":7}},{"path":"src/main/java/duke/storage/TaskListEncoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":" * Encodes the {@code TaskList} object into a data file for storage."},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"public class TaskListEncoder {"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":7}},{"path":"src/main/java/duke/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"import java.io.InputStream;"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"import java.io.PrintStream;"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"import java.util.Optional;"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":" * Text UI of the application."},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"public class TextUi {"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"//    /** Offset required to convert between 1-indexing and 0-indexing.  */"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"//    public static final int DISPLAYED_INDEX_OFFSET \u003d 1;"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"    /** A tab prefix added to the beginning of lines printed by Duke TaskManager */"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"    private static final String LINE_PREFIX \u003d \"\\t\";"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"    /** A platform independent line separator. */"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"    private static final String LS \u003d System.lineSeparator();"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"    private static final String DIVLINE \u003d \"__________________________________________________________________\\n\";"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"    private static final String MESSAGE_USING_STORAGE_FILE \u003d \"Using storage file : %1$s\";"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":"    private static final String MESSAGE_WELCOME \u003d \"\\tHello! I\u0027m Ayanga, your personal task manager.\\n\" +"},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tWhat can I note down for you?\\n\" +"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tTo add a todo item, simply write \\\"todo \u003cDESCRIPTION\u003e\\\".\\n\" +"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tTo add a deadline, write \\\"deadline \u003cDESCRIPTION\u003e /by \u003cTIME\u003e\\\".\\n\" +"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tTo add an event, write \\\"event \u003cDESCRIPTION\u003e /at \u003cVENUE\u003e\\\".\\n\" +"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tSay \\\"list\\\" and I will display your tasks.\\n\" +"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tWrite \\\"done \u003cNUMBER OF TASK\u003e\\\" or \\\"delete \u003cNUMBER OF TASK\u003e\\\"to mark complete or delete a task.\\n\" +"},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tWave \\\"bye\\\" to me if you don\u0027t need me for now.\\n\";"},{"lineNumber":34,"author":{"gitId":"Vinci-Hu"},"content":"    private static final String MESSAGE_GOODBYE \u003d \"\\tBye. Hope you have done your work next time I see you!\\n\" +"},{"lineNumber":35,"author":{"gitId":"Vinci-Hu"},"content":"            \"\\tAh, and also remember to take care of yourself and sleep early :)\\n\";"},{"lineNumber":36,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":37,"author":{"gitId":"Vinci-Hu"},"content":"//    /** Format of indexed list item */"},{"lineNumber":38,"author":{"gitId":"Vinci-Hu"},"content":"//    private static final String MESSAGE_INDEXED_LIST_ITEM \u003d \"\\t%1$d. %2$s\";"},{"lineNumber":39,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":40,"author":{"gitId":"Vinci-Hu"},"content":"    private final Scanner in;"},{"lineNumber":41,"author":{"gitId":"Vinci-Hu"},"content":"    private final PrintStream out;"},{"lineNumber":42,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":43,"author":{"gitId":"Vinci-Hu"},"content":"    public TextUi() {"},{"lineNumber":44,"author":{"gitId":"Vinci-Hu"},"content":"        this(System.in, System.out);"},{"lineNumber":45,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":47,"author":{"gitId":"Vinci-Hu"},"content":"    public TextUi(InputStream in, PrintStream out) {"},{"lineNumber":48,"author":{"gitId":"Vinci-Hu"},"content":"        this.in \u003d new Scanner(in);"},{"lineNumber":49,"author":{"gitId":"Vinci-Hu"},"content":"        this.out \u003d out;"},{"lineNumber":50,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":52,"author":{"gitId":"Vinci-Hu"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"Vinci-Hu"},"content":"     * Returns true if the user input line should be ignored."},{"lineNumber":54,"author":{"gitId":"Vinci-Hu"},"content":"     * Input should be ignored if it is only whitespace, or is empty."},{"lineNumber":55,"author":{"gitId":"Vinci-Hu"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"Vinci-Hu"},"content":"     * @param rawInputLine full raw user input line."},{"lineNumber":57,"author":{"gitId":"Vinci-Hu"},"content":"     * @return true if the entire user input line should be ignored."},{"lineNumber":58,"author":{"gitId":"Vinci-Hu"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"Vinci-Hu"},"content":"    private boolean shouldIgnore(String rawInputLine) {"},{"lineNumber":60,"author":{"gitId":"Vinci-Hu"},"content":"        return rawInputLine.trim().isEmpty();"},{"lineNumber":61,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":63,"author":{"gitId":"Vinci-Hu"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"Vinci-Hu"},"content":"     * Reads the text entered by the user."},{"lineNumber":65,"author":{"gitId":"Vinci-Hu"},"content":"     * Ignores empty and pure whitespace."},{"lineNumber":66,"author":{"gitId":"Vinci-Hu"},"content":"     * @return command (full line) entered by the user"},{"lineNumber":67,"author":{"gitId":"Vinci-Hu"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"Vinci-Hu"},"content":"    public String getUserCommand() {"},{"lineNumber":69,"author":{"gitId":"Vinci-Hu"},"content":"        String fullInputLine \u003d in.nextLine();"},{"lineNumber":70,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":71,"author":{"gitId":"Vinci-Hu"},"content":"        // silently consume all ignored lines"},{"lineNumber":72,"author":{"gitId":"Vinci-Hu"},"content":"        while (shouldIgnore(fullInputLine)) {"},{"lineNumber":73,"author":{"gitId":"Vinci-Hu"},"content":"            fullInputLine \u003d in.nextLine();"},{"lineNumber":74,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":76,"author":{"gitId":"Vinci-Hu"},"content":"        return fullInputLine;"},{"lineNumber":77,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":79,"author":{"gitId":"Vinci-Hu"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"Vinci-Hu"},"content":"     * Generates and prints the welcome message upon the start of the application."},{"lineNumber":81,"author":{"gitId":"Vinci-Hu"},"content":"     * @param storageFilePath path to the storage file being used."},{"lineNumber":82,"author":{"gitId":"Vinci-Hu"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"Vinci-Hu"},"content":"    public void showWelcomeMessage(String version, String storageFilePath) {"},{"lineNumber":84,"author":{"gitId":"Vinci-Hu"},"content":"        String storageFileInfo \u003d String.format(MESSAGE_USING_STORAGE_FILE, storageFilePath);"},{"lineNumber":85,"author":{"gitId":"Vinci-Hu"},"content":"        showToUser("},{"lineNumber":86,"author":{"gitId":"Vinci-Hu"},"content":"                DIVLINE,"},{"lineNumber":87,"author":{"gitId":"Vinci-Hu"},"content":"                MESSAGE_WELCOME,"},{"lineNumber":88,"author":{"gitId":"Vinci-Hu"},"content":"                storageFileInfo,"},{"lineNumber":89,"author":{"gitId":"Vinci-Hu"},"content":"                DIVLINE);"},{"lineNumber":90,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":92,"author":{"gitId":"Vinci-Hu"},"content":"    public void showGoodbyeMessage() {"},{"lineNumber":93,"author":{"gitId":"Vinci-Hu"},"content":"        showToUser("},{"lineNumber":94,"author":{"gitId":"Vinci-Hu"},"content":"                DIVLINE,"},{"lineNumber":95,"author":{"gitId":"Vinci-Hu"},"content":"                MESSAGE_GOODBYE, "},{"lineNumber":96,"author":{"gitId":"Vinci-Hu"},"content":"                DIVLINE);"},{"lineNumber":97,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":99,"author":{"gitId":"Vinci-Hu"},"content":"    /** Shows message(s) to the user */"},{"lineNumber":100,"author":{"gitId":"Vinci-Hu"},"content":"    public void showToUser(String... message) {"},{"lineNumber":101,"author":{"gitId":"Vinci-Hu"},"content":"        for (String m : message) {"},{"lineNumber":102,"author":{"gitId":"Vinci-Hu"},"content":"            out.println(LINE_PREFIX + m.replace(\"\\n\", LS));"},{"lineNumber":103,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":106,"author":{"gitId":"Vinci-Hu"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"Vinci-Hu"},"content":"     * Shows the result of a command execution to the user. Includes additional formatting to demarcate different"},{"lineNumber":108,"author":{"gitId":"Vinci-Hu"},"content":"     * command execution segments."},{"lineNumber":109,"author":{"gitId":"Vinci-Hu"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"Vinci-Hu"},"content":"//    public void showResultToUser(CommandResult result) {"},{"lineNumber":111,"author":{"gitId":"Vinci-Hu"},"content":"//        final Optional\u003cList\u003c? extends ReadOnlyPerson\u003e\u003e resultPersons \u003d result.getRelevantPersons();"},{"lineNumber":112,"author":{"gitId":"Vinci-Hu"},"content":"//        if (resultPersons.isPresent()) {"},{"lineNumber":113,"author":{"gitId":"Vinci-Hu"},"content":"//            showPersonListView(resultPersons.get());"},{"lineNumber":114,"author":{"gitId":"Vinci-Hu"},"content":"//        }"},{"lineNumber":115,"author":{"gitId":"Vinci-Hu"},"content":"//        showToUser(result.feedbackToUser, DIVLINE);"},{"lineNumber":116,"author":{"gitId":"Vinci-Hu"},"content":"//    }"},{"lineNumber":117,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":118,"author":{"gitId":"Vinci-Hu"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"Vinci-Hu"},"content":"     * Shows a list of persons to the user, formatted as an indexed list."},{"lineNumber":120,"author":{"gitId":"Vinci-Hu"},"content":"     * Private contact details are hidden."},{"lineNumber":121,"author":{"gitId":"Vinci-Hu"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"Vinci-Hu"},"content":"//    private void showPersonListView(List\u003c? extends ReadOnlyPerson\u003e persons) {"},{"lineNumber":123,"author":{"gitId":"Vinci-Hu"},"content":"//        final List\u003cString\u003e formattedPersons \u003d new ArrayList\u003c\u003e();"},{"lineNumber":124,"author":{"gitId":"Vinci-Hu"},"content":"//        for (ReadOnlyPerson person : persons) {"},{"lineNumber":125,"author":{"gitId":"Vinci-Hu"},"content":"//            formattedPersons.add(person.getAsTextHidePrivate());"},{"lineNumber":126,"author":{"gitId":"Vinci-Hu"},"content":"//        }"},{"lineNumber":127,"author":{"gitId":"Vinci-Hu"},"content":"//        showToUserAsIndexedList(formattedPersons);"},{"lineNumber":128,"author":{"gitId":"Vinci-Hu"},"content":"//    }"},{"lineNumber":129,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":130,"author":{"gitId":"Vinci-Hu"},"content":"    /** Shows a list of strings to the user, formatted as an indexed list. */"},{"lineNumber":131,"author":{"gitId":"Vinci-Hu"},"content":"//    private void showToUserAsIndexedList(List\u003cString\u003e list) {"},{"lineNumber":132,"author":{"gitId":"Vinci-Hu"},"content":"//        showToUser(getIndexedListForViewing(list));"},{"lineNumber":133,"author":{"gitId":"Vinci-Hu"},"content":"//    }"},{"lineNumber":134,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":135,"author":{"gitId":"Vinci-Hu"},"content":"    /** Formats a list of strings as a viewable indexed list. */"},{"lineNumber":136,"author":{"gitId":"Vinci-Hu"},"content":"//    private static String getIndexedListForViewing(List\u003cString\u003e listItems) {"},{"lineNumber":137,"author":{"gitId":"Vinci-Hu"},"content":"//        final StringBuilder formatted \u003d new StringBuilder();"},{"lineNumber":138,"author":{"gitId":"Vinci-Hu"},"content":"//        int displayIndex \u003d 0 + DISPLAYED_INDEX_OFFSET;"},{"lineNumber":139,"author":{"gitId":"Vinci-Hu"},"content":"//        for (String listItem : listItems) {"},{"lineNumber":140,"author":{"gitId":"Vinci-Hu"},"content":"//            formatted.append(getIndexedListItem(displayIndex, listItem)).append(\"\\n\");"},{"lineNumber":141,"author":{"gitId":"Vinci-Hu"},"content":"//            displayIndex++;"},{"lineNumber":142,"author":{"gitId":"Vinci-Hu"},"content":"//        }"},{"lineNumber":143,"author":{"gitId":"Vinci-Hu"},"content":"//        return formatted.toString();"},{"lineNumber":144,"author":{"gitId":"Vinci-Hu"},"content":"//    }"},{"lineNumber":145,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":146,"author":{"gitId":"Vinci-Hu"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"Vinci-Hu"},"content":"     * Formats a string as a viewable indexed list item."},{"lineNumber":148,"author":{"gitId":"Vinci-Hu"},"content":"     *"},{"lineNumber":149,"author":{"gitId":"Vinci-Hu"},"content":"     * @param visibleIndex visible index for this listing"},{"lineNumber":150,"author":{"gitId":"Vinci-Hu"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"Vinci-Hu"},"content":"//    private static String getIndexedListItem(int visibleIndex, String listItem) {"},{"lineNumber":152,"author":{"gitId":"Vinci-Hu"},"content":"//        return String.format(MESSAGE_INDEXED_LIST_ITEM, visibleIndex, listItem);"},{"lineNumber":153,"author":{"gitId":"Vinci-Hu"},"content":"//    }"},{"lineNumber":154,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":154}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"Vinci-Hu":1,"-":20}}]
