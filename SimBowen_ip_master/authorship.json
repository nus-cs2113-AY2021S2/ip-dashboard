[{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"import Duke.todoList.task.listTypes;"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"import Duke.todoList.todoList;"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"    public static void dukeStartup(){"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"        System.out.println(\"____________________________________________________________\\n\" +"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"                \" Hello! I\u0027m Duke\\n\" +"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"                \" What can I do for you?\\n\" +"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"                \"____________________________________________________________\\n\" );"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"    public static void dukeResponse(String output){"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"        System.out.println(\"____________________________________________________________\\n\" +"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"                output + \"\\n\" +"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"                \"____________________________________________________________\\n\");"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"    public static String command_parser(todoList list, String command){"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"        String[] tokens \u003d command.split(\" \");"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"        int itemStartIndex \u003d command.indexOf(\" \") + 1;"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"        int itemEndIndex;"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"        int dateStartIndex;"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"        String out \u003d \"\";"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"        String desc \u003d \"\";"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"        String date \u003d \"\";"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"        switch(tokens[0]){"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"        case \"list\": // If command is list, print all tasks in list"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"            out \u003d list.listItems();"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"        case \"deadline\": // If command is deadline, parse the task and by date, print confirmation"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"            itemEndIndex \u003d command.indexOf(\"/by\") - 1;"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"            dateStartIndex \u003d itemEndIndex + 5;"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"            try {"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"                desc \u003d command.substring(itemStartIndex, itemEndIndex);"},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":"                date \u003d command.substring(dateStartIndex);"},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":"            }catch(StringIndexOutOfBoundsException e) { // if task or by date was not entered, catch error"},{"lineNumber":54,"author":{"gitId":"SimBowen"},"content":"                out \u003d \"Invalid deadline task format!\""},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":"                    + \" Try the following: deadline [task] /by [date] \";"},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":"                break;"},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":"            out \u003d list.addTask(desc, listTypes.deadline, date);"},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":60,"author":{"gitId":"SimBowen"},"content":"        case \"event\": // If command is event, parse the task and at date, print confirmation"},{"lineNumber":61,"author":{"gitId":"SimBowen"},"content":"            itemEndIndex \u003d command.indexOf(\"/at\") - 1;"},{"lineNumber":62,"author":{"gitId":"SimBowen"},"content":"            dateStartIndex \u003d itemEndIndex + 5;"},{"lineNumber":63,"author":{"gitId":"SimBowen"},"content":"            try { // if task or at date was not entered, catch error"},{"lineNumber":64,"author":{"gitId":"SimBowen"},"content":"                desc \u003d command.substring(itemStartIndex, itemEndIndex);"},{"lineNumber":65,"author":{"gitId":"SimBowen"},"content":"                date \u003d command.substring(dateStartIndex);"},{"lineNumber":66,"author":{"gitId":"SimBowen"},"content":"            }catch(StringIndexOutOfBoundsException e) {"},{"lineNumber":67,"author":{"gitId":"SimBowen"},"content":"                out \u003d \"Invalid command format!\""},{"lineNumber":68,"author":{"gitId":"SimBowen"},"content":"                    + \" Try the following: event [task] /at [date] \";"},{"lineNumber":69,"author":{"gitId":"SimBowen"},"content":"                break;"},{"lineNumber":70,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"SimBowen"},"content":"            out \u003d list.addTask(desc, listTypes.event, date);"},{"lineNumber":72,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":73,"author":{"gitId":"SimBowen"},"content":"        case \"todo\": // If command is todo, parse the task, print confirmation"},{"lineNumber":74,"author":{"gitId":"SimBowen"},"content":"            desc \u003d command.substring(itemStartIndex);"},{"lineNumber":75,"author":{"gitId":"SimBowen"},"content":"            if(desc.equals(\"todo\")){ // if task was not entered, catch error"},{"lineNumber":76,"author":{"gitId":"SimBowen"},"content":"                out \u003d \"Invalid todo task!\";"},{"lineNumber":77,"author":{"gitId":"SimBowen"},"content":"                break;"},{"lineNumber":78,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"SimBowen"},"content":"            out \u003d list.addTask(desc,listTypes.todo);"},{"lineNumber":80,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":81,"author":{"gitId":"SimBowen"},"content":"        case \"done\": // If command is done, mark task as done, print confirmation"},{"lineNumber":82,"author":{"gitId":"SimBowen"},"content":"            try {"},{"lineNumber":83,"author":{"gitId":"SimBowen"},"content":"                out \u003d list.resolveTask(tokens[1]);"},{"lineNumber":84,"author":{"gitId":"SimBowen"},"content":"            }catch(ArrayIndexOutOfBoundsException e){"},{"lineNumber":85,"author":{"gitId":"SimBowen"},"content":"                out \u003d \"Invalid selection!\";"},{"lineNumber":86,"author":{"gitId":"SimBowen"},"content":"                break;"},{"lineNumber":87,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":89,"author":{"gitId":"SimBowen"},"content":"        case \"delete\": // If command is  delete, delete task entry in list, print confirmation"},{"lineNumber":90,"author":{"gitId":"SimBowen"},"content":"            try {"},{"lineNumber":91,"author":{"gitId":"SimBowen"},"content":"                out \u003d list.deleteTask(tokens[1]);"},{"lineNumber":92,"author":{"gitId":"SimBowen"},"content":"            }catch(IndexOutOfBoundsException e){ // If task number is invalid, catch error"},{"lineNumber":93,"author":{"gitId":"SimBowen"},"content":"                out \u003d \"Invalid selection!\";"},{"lineNumber":94,"author":{"gitId":"SimBowen"},"content":"                break;"},{"lineNumber":95,"author":{"gitId":"SimBowen"},"content":"            }catch(NumberFormatException e){ // If string is entered instead of task number, catch error"},{"lineNumber":96,"author":{"gitId":"SimBowen"},"content":"                out \u003d \"Please enter the number of the task!\";"},{"lineNumber":97,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":99,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":100,"author":{"gitId":"SimBowen"},"content":"        default: // If command entered is any other unrecognised command, print invalid command"},{"lineNumber":101,"author":{"gitId":"SimBowen"},"content":"            out \u003d \"Invalid task command!\";"},{"lineNumber":102,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"SimBowen"},"content":"        return out;"},{"lineNumber":104,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":106,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":107,"author":{"gitId":"SimBowen"},"content":"    public static void importParsing(todoList list, String input){ // Parses the inputted line and executes the respective commands to import the tasks through command parser"},{"lineNumber":108,"author":{"gitId":"SimBowen"},"content":"        String[] tokens \u003d input.split(\"/\");"},{"lineNumber":109,"author":{"gitId":"SimBowen"},"content":"        String command \u003d \"\";"},{"lineNumber":110,"author":{"gitId":"SimBowen"},"content":"        switch(tokens[0]){"},{"lineNumber":111,"author":{"gitId":"SimBowen"},"content":"        case \"D\":"},{"lineNumber":112,"author":{"gitId":"SimBowen"},"content":"            command \u003d \"deadline \" + tokens[2] + \" /by \" + tokens[3];"},{"lineNumber":113,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":114,"author":{"gitId":"SimBowen"},"content":"        case \"E\":"},{"lineNumber":115,"author":{"gitId":"SimBowen"},"content":"            command \u003d \"event \" + tokens[2] + \" /at \" + tokens[3];"},{"lineNumber":116,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":117,"author":{"gitId":"SimBowen"},"content":"        case \"T\":"},{"lineNumber":118,"author":{"gitId":"SimBowen"},"content":"            command \u003d \"todo \" + tokens[2];"},{"lineNumber":119,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":120,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"SimBowen"},"content":"        command_parser(list, command);"},{"lineNumber":122,"author":{"gitId":"SimBowen"},"content":"        if (tokens[1].equals(\"X\")){"},{"lineNumber":123,"author":{"gitId":"SimBowen"},"content":"            String  temp \u003d command_parser(list, \"done \" + list.tasksTotal());"},{"lineNumber":124,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":127,"author":{"gitId":"SimBowen"},"content":"    public static void importData(todoList list, File importedList) throws FileNotFoundException { // Takes the imported file and runs importParsing method while entries still exist. Imported tasks are listed once done"},{"lineNumber":128,"author":{"gitId":"SimBowen"},"content":"        Scanner s \u003d new Scanner(importedList);"},{"lineNumber":129,"author":{"gitId":"SimBowen"},"content":"        while (s.hasNext()) {"},{"lineNumber":130,"author":{"gitId":"SimBowen"},"content":"            String input \u003d s.nextLine();"},{"lineNumber":131,"author":{"gitId":"SimBowen"},"content":"            importParsing(list, input);"},{"lineNumber":132,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"SimBowen"},"content":"        System.out.println(\"Task List has been imported! Here are your tasks: \\n\""},{"lineNumber":134,"author":{"gitId":"SimBowen"},"content":"                + command_parser(list, \"list\") + \"\\n\""},{"lineNumber":135,"author":{"gitId":"SimBowen"},"content":"                + \"____________________________________________________________\\n\");"},{"lineNumber":136,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":138,"author":{"gitId":"SimBowen"},"content":"    public static void createDataFile(String path, File importedList) throws IOException { // Checks if data file exists and if not, creates the directory and file if required."},{"lineNumber":139,"author":{"gitId":"SimBowen"},"content":"        if (!importedList.exists()){"},{"lineNumber":140,"author":{"gitId":"SimBowen"},"content":"            try{"},{"lineNumber":141,"author":{"gitId":"SimBowen"},"content":"                writeToFile(\"data/duke.txt\", \"\");"},{"lineNumber":142,"author":{"gitId":"SimBowen"},"content":"            }catch(FileNotFoundException e){"},{"lineNumber":143,"author":{"gitId":"SimBowen"},"content":"                (new File(path)).mkdir();"},{"lineNumber":144,"author":{"gitId":"SimBowen"},"content":"                writeToFile(\"data/duke.txt\", \"\");"},{"lineNumber":145,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":146,"author":{"gitId":"SimBowen"},"content":"            System.out.println(\"No Task List was found!\\n\""},{"lineNumber":147,"author":{"gitId":"SimBowen"},"content":"                    + \"Task List file was created at: \" + path + \"\\n\""},{"lineNumber":148,"author":{"gitId":"SimBowen"},"content":"                    + \"____________________________________________________________\\n\");"},{"lineNumber":149,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":152,"author":{"gitId":"SimBowen"},"content":"    public static void dukeInitialisation(todoList list) throws IOException { // Tries to import data from the default path using importData if available. If not, creates data file using createDataFile"},{"lineNumber":153,"author":{"gitId":"SimBowen"},"content":"        String path \u003d System.getProperty(\"user.dir\") + \"\\\\data\";"},{"lineNumber":154,"author":{"gitId":"SimBowen"},"content":"        File importedList \u003d new File(\"data/duke.txt\");"},{"lineNumber":155,"author":{"gitId":"SimBowen"},"content":"        try{"},{"lineNumber":156,"author":{"gitId":"SimBowen"},"content":"            importData(list, importedList);"},{"lineNumber":157,"author":{"gitId":"SimBowen"},"content":"        }catch(FileNotFoundException e){"},{"lineNumber":158,"author":{"gitId":"SimBowen"},"content":"            createDataFile(path, importedList);"},{"lineNumber":159,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":160,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":162,"author":{"gitId":"SimBowen"},"content":"    public static void writeToFile(String filePath, String addText) throws IOException { // Creates file at provided path and writes provided string to file."},{"lineNumber":163,"author":{"gitId":"SimBowen"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":164,"author":{"gitId":"SimBowen"},"content":"        fw.write(addText);"},{"lineNumber":165,"author":{"gitId":"SimBowen"},"content":"        fw.close();"},{"lineNumber":166,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":168,"author":{"gitId":"SimBowen"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException { // Appends to file at provided path"},{"lineNumber":169,"author":{"gitId":"SimBowen"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"},{"lineNumber":170,"author":{"gitId":"SimBowen"},"content":"        fw.write(textToAppend);"},{"lineNumber":171,"author":{"gitId":"SimBowen"},"content":"        fw.close();"},{"lineNumber":172,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":174,"author":{"gitId":"SimBowen"},"content":"    public static void updateFile(todoList list) throws IOException{ // Updates data file with current list of tasks"},{"lineNumber":175,"author":{"gitId":"SimBowen"},"content":"        String file \u003d \"data/duke.txt\";"},{"lineNumber":176,"author":{"gitId":"SimBowen"},"content":"        writeToFile(file,\"\");"},{"lineNumber":177,"author":{"gitId":"SimBowen"},"content":"        String out \u003d list.tasksUpdate();"},{"lineNumber":178,"author":{"gitId":"SimBowen"},"content":"        try {"},{"lineNumber":179,"author":{"gitId":"SimBowen"},"content":"            appendToFile(file, out);"},{"lineNumber":180,"author":{"gitId":"SimBowen"},"content":"        } catch (IOException e) {"},{"lineNumber":181,"author":{"gitId":"SimBowen"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());"},{"lineNumber":182,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":185,"author":{"gitId":"SimBowen"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":186,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":187,"author":{"gitId":"SimBowen"},"content":"        boolean continueChat \u003d true;"},{"lineNumber":188,"author":{"gitId":"SimBowen"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":189,"author":{"gitId":"SimBowen"},"content":"        String output \u003d \"\";"},{"lineNumber":190,"author":{"gitId":"SimBowen"},"content":"        todoList list \u003d new todoList();"},{"lineNumber":191,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":192,"author":{"gitId":"SimBowen"},"content":"        dukeStartup();"},{"lineNumber":193,"author":{"gitId":"SimBowen"},"content":"        try {"},{"lineNumber":194,"author":{"gitId":"SimBowen"},"content":"            dukeInitialisation(list);"},{"lineNumber":195,"author":{"gitId":"SimBowen"},"content":"        }catch(IOException e){"},{"lineNumber":196,"author":{"gitId":"SimBowen"},"content":"            System.out.println(\"An error occurred when initialising data file! Error: \" + e.getMessage());"},{"lineNumber":197,"author":{"gitId":"SimBowen"},"content":"            System.out.println(\"Task List was not imported!\");"},{"lineNumber":198,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":199,"author":{"gitId":"SimBowen"},"content":"        while(continueChat){"},{"lineNumber":200,"author":{"gitId":"SimBowen"},"content":"            String input \u003d in.nextLine();"},{"lineNumber":201,"author":{"gitId":"SimBowen"},"content":"            if(input.equals(\"bye\")){"},{"lineNumber":202,"author":{"gitId":"SimBowen"},"content":"                output \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":203,"author":{"gitId":"SimBowen"},"content":"                continueChat \u003d false;"},{"lineNumber":204,"author":{"gitId":"SimBowen"},"content":"            }else {"},{"lineNumber":205,"author":{"gitId":"SimBowen"},"content":"                output \u003d command_parser(list,input);"},{"lineNumber":206,"author":{"gitId":"SimBowen"},"content":"                updateFile(list);"},{"lineNumber":207,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":208,"author":{"gitId":"SimBowen"},"content":"            dukeResponse(output);"},{"lineNumber":209,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"SimBowen":208,"-":3}},{"path":"src/main/java/Duke/todoList/task/improvedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package Duke.todoList.task;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"public class improvedTask extends task {"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"    protected listTypes type;"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"    protected String date;"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"    public improvedTask(String desc, listTypes type, String date){"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"        super(desc);"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"        this.type \u003d type;"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"        this.date \u003d date;"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"    public improvedTask(String desc, listTypes type){"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"        super(desc);"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"        this.type \u003d type;"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"        this.date \u003d \"\";"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"    public String displayType(){ // method to show the type of task"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"        String out \u003d \"\";"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"        switch(this.type){"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"        case todo:"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"            out \u003d \"[T]\";"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"        case deadline:"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"            out \u003d \"[D]\";"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"        case event:"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"            out \u003d \"[E]\";"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"        };"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"        return  out;"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"    public String displayDate(){ // method to show formatted date"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"        String out \u003d \"\";"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"        switch (this.type){"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"        case deadline:"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"            out \u003d String.format(\"(by: %s)\", this.date);"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"        case event:"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"            out \u003d String.format(\"(at: %s)\", this.date);"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"        case todo:"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"        };"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"        return out;"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"    public String displayDescription(){ // method to access description"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"        return description;"},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":"    public String displayResolved(){ // method to show if task is resolved"},{"lineNumber":54,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":"        if (this.resolved) {"},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":"            return \"[X]\";"},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"        } else {"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":"            return \"[ ]\";"},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":61,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":63,"author":{"gitId":"SimBowen"},"content":"    public boolean isResolved(){"},{"lineNumber":64,"author":{"gitId":"SimBowen"},"content":"        return this.resolved;"},{"lineNumber":65,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":67,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":68,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":69,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":70,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":71,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":72,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":73,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":73}},{"path":"src/main/java/Duke/todoList/task/listTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package Duke.todoList.task;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"import Duke.Duke;"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"public enum listTypes {"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"    todo,deadline,event"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":7}},{"path":"src/main/java/Duke/todoList/task/task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package Duke.todoList.task;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"import Duke.Duke;"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"public class task {"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"    protected String description;"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"    protected boolean resolved;"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"    public task(String desc){"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"        this.description \u003d desc;"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"        this.resolved \u003d false;"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"    public void resolve(){"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"        this.resolved \u003d true;"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":18}},{"path":"src/main/java/Duke/todoList/todoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package Duke.todoList;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"import Duke.todoList.task.improvedTask;"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"import Duke.todoList.task.listTypes;"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"public class todoList {"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"    private ArrayList\u003cimprovedTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"    private int totalTasks;"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"    private int leftoverTasks;"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"    public todoList(){"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"        this.totalTasks \u003d 0;"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"        this.leftoverTasks \u003d 0;"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"    public String addTask(String desc, listTypes type, String date){ // adds deadline or event type task and returns confirmation"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"        taskList.add (new improvedTask(desc, type, date));"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"        totalTasks++;"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"        leftoverTasks++;"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"        return \"Task: [\" + desc + \"] has been added.\""},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"        + \"\\nYou now have \" + this.tasksLeft() + \" task(s) left undone in the list!\";"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"    public String addTask(String desc, listTypes type){ // adds todo type task and returns confirmation"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"        taskList.add(new improvedTask(desc, type));"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"        totalTasks++;"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"        leftoverTasks++;"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"        return \"Task: [\" + desc + \"] has been added.\""},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"                + \"\\nYou now have \" + this.tasksLeft() + \" task(s) left undone in the list!\";"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"    public String listItems(){ // lists all current tasks"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"        String output \u003d \"\";"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"        if(this.totalTasks \u003d\u003d 0){"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"            return \"Great! There are no tasks to show!\";"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"        for(int i \u003d 0; i \u003c totalTasks; i++){"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"            if(i \u003c totalTasks - 1) {"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"                output +\u003d Integer.toString(i + 1)"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"                        + \". \" + taskList.get(i).displayType()"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"                        + \" \" + taskList.get(i).displayResolved()"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"                        + \" \" + taskList.get(i).displayDescription()"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"                        + \" \" + taskList.get(i).displayDate() + \"\\n\";"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"            }else{"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"                output +\u003d Integer.toString(i + 1)"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"                        + \". \" + taskList.get(i).displayType()"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"                        + \" \" + taskList.get(i).displayResolved()"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"                        + \" \" + taskList.get(i).displayDescription()"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"                        + \" \" + taskList.get(i).displayDate();"},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"SimBowen"},"content":"        return output;"},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"    public String resolveTask(String num){ // resolves task and returns confirmation if task is not resolved"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":"        Integer taskNum \u003d Integer.parseInt(num) - 1;"},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"        if (taskList.get(taskNum).isResolved()){"},{"lineNumber":60,"author":{"gitId":"SimBowen"},"content":"            return \"Task is already done!\";"},{"lineNumber":61,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"SimBowen"},"content":"        taskList.get(taskNum).resolve();"},{"lineNumber":63,"author":{"gitId":"SimBowen"},"content":"        this.leftoverTasks--;"},{"lineNumber":64,"author":{"gitId":"SimBowen"},"content":"        return \"Great! Task [\"+ taskList.get(taskNum).displayDescription() + \"] has been marked as done!\""},{"lineNumber":65,"author":{"gitId":"SimBowen"},"content":"                + \"\\nYou now have \" + this.tasksLeft() + \" task(s) left undone in the list!\";"},{"lineNumber":66,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":67,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":69,"author":{"gitId":"SimBowen"},"content":"    public int tasksLeft(){ // returns number of undone tasks"},{"lineNumber":70,"author":{"gitId":"SimBowen"},"content":"        return this.leftoverTasks;"},{"lineNumber":71,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":73,"author":{"gitId":"SimBowen"},"content":"    public int tasksTotal(){ // returns total tasks in list"},{"lineNumber":74,"author":{"gitId":"SimBowen"},"content":"        return this.totalTasks;"},{"lineNumber":75,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":77,"author":{"gitId":"SimBowen"},"content":"    public String deleteTask(String num){ // delete the specified task"},{"lineNumber":78,"author":{"gitId":"SimBowen"},"content":"        Integer taskNum \u003d Integer.parseInt(num) - 1;"},{"lineNumber":79,"author":{"gitId":"SimBowen"},"content":"        improvedTask temp \u003d taskList.get(taskNum);"},{"lineNumber":80,"author":{"gitId":"SimBowen"},"content":"        taskList.remove(temp);"},{"lineNumber":81,"author":{"gitId":"SimBowen"},"content":"        totalTasks--;"},{"lineNumber":82,"author":{"gitId":"SimBowen"},"content":"        if(!temp.isResolved()) {"},{"lineNumber":83,"author":{"gitId":"SimBowen"},"content":"            leftoverTasks--;"},{"lineNumber":84,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"SimBowen"},"content":"        String out \u003d \"Noted. I\u0027ve removed this task: \\n     \""},{"lineNumber":86,"author":{"gitId":"SimBowen"},"content":"                   + temp.displayType()"},{"lineNumber":87,"author":{"gitId":"SimBowen"},"content":"                   + \" \" + temp.displayResolved()"},{"lineNumber":88,"author":{"gitId":"SimBowen"},"content":"                   + \" \" + temp.displayDescription()"},{"lineNumber":89,"author":{"gitId":"SimBowen"},"content":"                   + \" \" + temp.displayDate() + \"\\n\""},{"lineNumber":90,"author":{"gitId":"SimBowen"},"content":"                   + \"Now you have \" + totalTasks + \" task(s) total left in the list!\";"},{"lineNumber":91,"author":{"gitId":"SimBowen"},"content":"        return out;"},{"lineNumber":92,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":94,"author":{"gitId":"SimBowen"},"content":"    public String tasksUpdate(){ // returns current lists of tasks that can be parsed by updateFile method"},{"lineNumber":95,"author":{"gitId":"SimBowen"},"content":"        String out \u003d \"\";"},{"lineNumber":96,"author":{"gitId":"SimBowen"},"content":"        for (int i \u003d 0; i \u003c totalTasks; i++){"},{"lineNumber":97,"author":{"gitId":"SimBowen"},"content":"            if (taskList.get(i).displayType().equals(\"[T]\")) {"},{"lineNumber":98,"author":{"gitId":"SimBowen"},"content":"                out +\u003d taskList.get(i).displayType().substring(1, 2) + \"/\""},{"lineNumber":99,"author":{"gitId":"SimBowen"},"content":"                        + taskList.get(i).displayResolved().substring(1, 2) + \"/\""},{"lineNumber":100,"author":{"gitId":"SimBowen"},"content":"                        + taskList.get(i).displayDescription() + \"/\\n\";"},{"lineNumber":101,"author":{"gitId":"SimBowen"},"content":"            }else{"},{"lineNumber":102,"author":{"gitId":"SimBowen"},"content":"                out +\u003d taskList.get(i).displayType().substring(1, 2) + \"/\""},{"lineNumber":103,"author":{"gitId":"SimBowen"},"content":"                        + taskList.get(i).displayResolved().substring(1, 2) + \"/\""},{"lineNumber":104,"author":{"gitId":"SimBowen"},"content":"                        + taskList.get(i).displayDescription() + \"/\""},{"lineNumber":105,"author":{"gitId":"SimBowen"},"content":"                        + taskList.get(i).displayDate().substring(5, taskList.get(i).displayDate().indexOf(\")\")) + \"\\n\";"},{"lineNumber":106,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"SimBowen"},"content":"        return out;"},{"lineNumber":109,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":110}}]
