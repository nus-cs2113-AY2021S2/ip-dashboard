[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"# User Guide for Duke TodoList Bot"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"- Add todo task: `todo`"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"- Add deadline task: `deadline`"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"- Add event task: `event`"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"- Mark task as done: `done`"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"- Delete task: `delete`"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"- List tasks: `list`"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"- Find tasks by a keyword: `find`"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"- Exit the bot: `bye`"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"- Saving the data"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"- Importing the data"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"## Add todo task: `todo`"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"Adds a task with no due date or by date to the current list"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"### Usage"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"`todo [description of task]`"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"### Expected outcome:"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"`Task: [description of task] has been added.`"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"- At least one character must be entered in the field `[description of task]`"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"## Add deadline task: `deadline`"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"Adds a task with a due date to the current list"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"### Usage"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"`deadline [description of task] /by [date due]`"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"### Expected outcome:"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"`Task: [description of task] has been added.`"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"- At least one character must be entered in the field `[description of task]`"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"- At least one character must be entered in the field `[date due]`"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"## Add event task: `event`"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"Adds a task with a by date to the current list"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"### Usage"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"`event [description of task] /at [date by]`"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":"### Expected outcome:"},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":54,"author":{"gitId":"SimBowen"},"content":"`Task: [description of task] has been added.`"},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":"- At least one character must be entered in the field `[description of task]`"},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"- At least one character must be entered in the field `[date at]`"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"## Mark task as done: `done`"},{"lineNumber":60,"author":{"gitId":"SimBowen"},"content":"Resolves the selected task as done"},{"lineNumber":61,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":62,"author":{"gitId":"SimBowen"},"content":"### Usage"},{"lineNumber":63,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":64,"author":{"gitId":"SimBowen"},"content":"`done [task number]`"},{"lineNumber":65,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":66,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":67,"author":{"gitId":"SimBowen"},"content":"### Expected outcome:"},{"lineNumber":68,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":69,"author":{"gitId":"SimBowen"},"content":"`Task has marked as done!`"},{"lineNumber":70,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":71,"author":{"gitId":"SimBowen"},"content":"- At least one character must be entered in the field `[task number]`"},{"lineNumber":72,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":73,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":74,"author":{"gitId":"SimBowen"},"content":"## Delete task: `delete`"},{"lineNumber":75,"author":{"gitId":"SimBowen"},"content":"Deletes the selected task"},{"lineNumber":76,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":77,"author":{"gitId":"SimBowen"},"content":"### Usage"},{"lineNumber":78,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":79,"author":{"gitId":"SimBowen"},"content":"`delete [task number]`"},{"lineNumber":80,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":81,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":82,"author":{"gitId":"SimBowen"},"content":"### Expected outcome:"},{"lineNumber":83,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":84,"author":{"gitId":"SimBowen"},"content":"`Task has been deleted!`"},{"lineNumber":85,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":86,"author":{"gitId":"SimBowen"},"content":"- At least one numeric character must be entered in the field `[task number]`"},{"lineNumber":87,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":88,"author":{"gitId":"SimBowen"},"content":"## List tasks: `list`"},{"lineNumber":89,"author":{"gitId":"SimBowen"},"content":"Lists all current tasks"},{"lineNumber":90,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":91,"author":{"gitId":"SimBowen"},"content":"### Usage"},{"lineNumber":92,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":93,"author":{"gitId":"SimBowen"},"content":"`list`"},{"lineNumber":94,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":95,"author":{"gitId":"SimBowen"},"content":"### Expected outcome:"},{"lineNumber":96,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":97,"author":{"gitId":"SimBowen"},"content":"`1. [T] [ ] [description of task]`"},{"lineNumber":98,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":99,"author":{"gitId":"SimBowen"},"content":"`2. [D] [ ] [description of task] (by: [date by])`"},{"lineNumber":100,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":101,"author":{"gitId":"SimBowen"},"content":"`3. [E] [ ] [description of task] (at: [date at])`"},{"lineNumber":102,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":103,"author":{"gitId":"SimBowen"},"content":"- No parameters are required"},{"lineNumber":104,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":105,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":106,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":107,"author":{"gitId":"SimBowen"},"content":"## Find tasks by a keyword: `find`"},{"lineNumber":108,"author":{"gitId":"SimBowen"},"content":"Find task entries that contain the input keyword"},{"lineNumber":109,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":110,"author":{"gitId":"SimBowen"},"content":"### Usage"},{"lineNumber":111,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":112,"author":{"gitId":"SimBowen"},"content":"`find [input keyword/sentence]`"},{"lineNumber":113,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":114,"author":{"gitId":"SimBowen"},"content":"### Expected outcome:"},{"lineNumber":115,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":116,"author":{"gitId":"SimBowen"},"content":"`The following task(s) were found:`"},{"lineNumber":117,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":118,"author":{"gitId":"SimBowen"},"content":"`1. [T] [ ] [description of task containing keyword]`"},{"lineNumber":119,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":120,"author":{"gitId":"SimBowen"},"content":"`2. [D] [ ] [description of task containing keyword] (by: [date by])`"},{"lineNumber":121,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":122,"author":{"gitId":"SimBowen"},"content":"`3. [E] [ ] [description of task containing keyword] (at: [date at])`"},{"lineNumber":123,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":124,"author":{"gitId":"SimBowen"},"content":"- At least one character must be entered in the field `[input keyword/sentence]`"},{"lineNumber":125,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":126,"author":{"gitId":"SimBowen"},"content":"## Saving the data"},{"lineNumber":127,"author":{"gitId":"SimBowen"},"content":"todoList data is saved in the hard disk automatically in the file `data/duke.txt` after any command is input. There is no need to save manually."},{"lineNumber":128,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":129,"author":{"gitId":"SimBowen"},"content":"## Importing the data"},{"lineNumber":130,"author":{"gitId":"SimBowen"},"content":"todoList data is imported from the file `data/duke.txt` and will populate the list on startup."}],"authorContributionMap":{"SimBowen":120,"-":10}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"/**Bye command class contains the command keyword for the bye command and methods to trigger the flag to end the command input loop*/"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"public class ByeCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"    public static final String MESSAGE_EXIT_ACKNOWEDGEMENT \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"    public CommandResult execute() {"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWEDGEMENT);"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"    /**isBye checks if the input command is a bye command"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"     * @param command the input command"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"    public static boolean isBye(Command command) {"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"        return command instanceof ByeCommand; // instanceof returns false if it is null"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"}"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":""}],"authorContributionMap":{"SimBowen":23}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"import duke.IncorrectFormatException;"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"import duke.TodoList;"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"/**Default command class to be overwritten by the specific user commands*/"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"public class Command {"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"    protected TodoList inputList;"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"    private int separatorIndex \u003d -1;"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"    public Command(int targetIndex) {"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"        this.separatorIndex(targetIndex);"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"    public Command() {"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"    private void separatorIndex(int targetIndex) {"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"        this.separatorIndex \u003d targetIndex;"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"    public void setData(TodoList input) {"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"        this.inputList \u003d input;"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"    /**Method containing instructions to execute when the command is called. Returns CommandResult to be read by Ui*/"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"    public CommandResult execute() throws IncorrectFormatException {"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"        throw new UnsupportedOperationException(\"This method is to be implemented by child classes\");"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"    };"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":32}},{"path":"src/main/java/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"public class CommandResult {"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"     * The feedback message to be shown to the user. Contains a description of the execution result"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"    public final String feedbackToUser;"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"    public CommandResult(String feedbackToUser) {"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"        this.feedbackToUser \u003d feedbackToUser;"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":14}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"import duke.IncorrectFormatException;"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"import duke.ImprovedTask;"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"import duke.ListTypes;"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":" * deadlineCommand class contains the command keyword for the deadline command and instructions to run when execute is called"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":" **/"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"    protected static ImprovedTask task;"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task: [%s] has been added.\";"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"    public DeadlineCommand(String desc, String date) throws IncorrectFormatException {"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"        if (desc.isEmpty() || date.isEmpty()) {"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"            throw new IncorrectFormatException(\"Deadline command format is incorrect!\");"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"        task \u003d new ImprovedTask(desc, ListTypes.deadline, date);"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"    public CommandResult execute() throws IncorrectFormatException {"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"        if (task \u003d\u003d null) {"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"            throw new IncorrectFormatException(\"Task was not entered!\");"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"        inputList.addTask(task);"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, task.displayDescription()));"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":33}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"import duke.IncorrectFormatException;"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":" * deleteCommand class contains the command keyword for the Delete command and instructions to run when execute is called"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":" **/"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"    protected static String num;"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task has been deleted!\";"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"    public DeleteCommand(String number) throws IncorrectFormatException {"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"        if (number.isEmpty()) {"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"            throw new IncorrectFormatException(\"Delete command format is incorrect!\");"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"            int temp \u003d Integer.parseInt(number);"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"            throw new IncorrectFormatException(\"Input is not a Number!\");"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"        this.num \u003d number;"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"    public CommandResult execute() {"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"        inputList.deleteTask(this.num);"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"        return new CommandResult(MESSAGE_SUCCESS);"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":33}},{"path":"src/main/java/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"import duke.IncorrectFormatException;"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"import duke.TodoList;"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":" * Command to set tasks as done based on listed number"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":" */"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"public class DoneCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"    public static final String COMMAND_WORD \u003d \"done\";"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"    protected static String num;"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task has marked as done!\";"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"    public DoneCommand(String number) throws IncorrectFormatException {"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"        if (number.isEmpty()) {"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"            throw new IncorrectFormatException(\"Done command format is incorrect!\");"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"            int temp \u003d Integer.parseInt(number);"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"            throw new IncorrectFormatException(\"Input is not a Number!\");"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"        num \u003d number;"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"    public DoneCommand(TodoList list) {"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"        inputList \u003d list;"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"        num \u003d Integer.toString(inputList.tasksTotal());"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"    public CommandResult execute() {"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"            inputList.resolveTask(num);"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"            return new CommandResult(MESSAGE_SUCCESS);"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"            return new CommandResult(\"Selected task does not exist! Error: \" + e.getMessage());"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":42}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"import duke.IncorrectFormatException;"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"import duke.ImprovedTask;"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"import duke.ListTypes;"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":" * eventCommand class contains the command keyword for the event command and instructions to run when execute is called"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":" */"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"public class EventCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"    public static final String COMMAND_WORD \u003d \"event\";"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"    protected static ImprovedTask task;"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task: [%s] has been added.\";"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"    public EventCommand(String desc, String date) throws IncorrectFormatException {"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"        if (desc.isEmpty() || date.isEmpty()) {"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"            throw new IncorrectFormatException(\"Event command format is incorrect!\");"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"        this.task \u003d new ImprovedTask(desc, ListTypes.event, date);"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"    public CommandResult execute() throws IncorrectFormatException {"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"        if (task \u003d\u003d null) {"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"            throw new IncorrectFormatException(\"Task was not entered!\");"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"        inputList.addTask(task);"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, task.displayDescription()));"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":32}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"import duke.IncorrectFormatException;"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"import duke.ImprovedTask;"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":" * Command to find task entries based on a keyword and instructions to run when execute is called*"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":" */"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"public class FindCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"    public static final String COMMAND_WORD \u003d \"find\";"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"    protected static String keyword;"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"    protected static String MESSAGE_SUCCESS \u003d \"\";"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"    public FindCommand(String input) throws IncorrectFormatException {"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"        if (input.isEmpty()) {"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"            throw new IncorrectFormatException(\"Find command format is incorrect!\");"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"        keyword \u003d input;"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"    public CommandResult execute() throws IncorrectFormatException {"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"        MESSAGE_SUCCESS \u003d \"\";"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"        ArrayList\u003cImprovedTask\u003e foundTasks \u003d inputList.findTasksWithKeyword(keyword);"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"        if (foundTasks.size() \u003d\u003d 0) {"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"            MESSAGE_SUCCESS \u003d \"No Tasks matching keyword were found!\";"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"            MESSAGE_SUCCESS +\u003d \"The following task(s) were found: \\n\";"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"            for (int i \u003d 0; i \u003c foundTasks.size(); i++) {"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"                if (i \u003c foundTasks.size() - 1) {"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"                    MESSAGE_SUCCESS +\u003d Integer.toString(i + 1)"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"                            + \". \" + foundTasks.get(i).displayType()"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"                            + \" \" + foundTasks.get(i).displayResolved()"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"                            + \" \" + foundTasks.get(i).displayDescription()"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"                            + \" \" + foundTasks.get(i).displayDate() + \"\\n\";"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"                } else {"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"                    MESSAGE_SUCCESS +\u003d Integer.toString(i + 1)"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"                            + \". \" + foundTasks.get(i).displayType()"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"                            + \" \" + foundTasks.get(i).displayResolved()"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"                            + \" \" + foundTasks.get(i).displayDescription()"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"                            + \" \" + foundTasks.get(i).displayDate();"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"                }"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"        return new CommandResult(MESSAGE_SUCCESS);"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":49}},{"path":"src/main/java/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"public class IncorrectCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"    public final String feedbackToUser;"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"    public IncorrectCommand(String feedbackToUser) {"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"        this.feedbackToUser \u003d feedbackToUser;"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"    public CommandResult execute() {"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"        return new CommandResult(feedbackToUser);"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":16}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":" * Command to list all current tasks"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":" */"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"public class ListCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"    public static final String COMMAND_WORD \u003d \"list\";"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"    private static String MESSAGE_SUCCESS \u003d \"Task: [%s] has been added.\";"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"    public CommandResult execute() {"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"        MESSAGE_SUCCESS \u003d inputList.listItems();"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"        return new CommandResult(MESSAGE_SUCCESS);"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":17}},{"path":"src/main/java/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"import duke.IncorrectFormatException;"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"    private String input;"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"     * Parses the user input and returns the respective command"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"     * @param input user input"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"    public Command parseCommand(String input) throws IncorrectFormatException {"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"        String[] tokens \u003d input.split(\" \", 2);"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"        String commandWord \u003d tokens[0];"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"        String arguments \u003d \"\";"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"        if (tokens.length \u003e 1) {"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"            try {"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"                arguments \u003d tokens[1];"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"                throw new IncorrectFormatException(\"Command format is incorrect!\");"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"        switch (commandWord) {"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"        case TodoCommand.COMMAND_WORD: // If command is todo, parse the task, print confirmation"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"            return new TodoCommand(arguments);"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"        case ListCommand.COMMAND_WORD: // If command is list, print all tasks in list"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"            return new ListCommand();"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"        case DeadlineCommand.COMMAND_WORD: // If command is deadline, parse the task and by date, print confirmation"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"            return prepareDeadlineCommand(arguments);"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"        case EventCommand.COMMAND_WORD: // If command is event, parse the task and at date, print confirmation"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"            return prepareEventCommand(arguments);"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"        case DoneCommand.COMMAND_WORD: // If command is done, mark task as done, print confirmation"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"            return new DoneCommand(arguments);"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"        case DeleteCommand.COMMAND_WORD: // If command is  delete, delete task entry in list, print confirmation"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"            return new DeleteCommand(arguments);"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"        case FindCommand.COMMAND_WORD:"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"            return new FindCommand(arguments);"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"        case ByeCommand.COMMAND_WORD:"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"            return new ByeCommand();"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"        default: // If command entered is any other unrecognised command, print invalid command"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"            return new IncorrectCommand(\"Incorrect command word was entered!\");"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"     * Parses the imported file format and returns the respective command"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"     * @param input input from imported file"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"    public Command parseImportTasks(String input) throws IncorrectFormatException {"},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":"        String[] tokens \u003d input.split(\"/\");"},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":"        String command \u003d \"\";"},{"lineNumber":54,"author":{"gitId":"SimBowen"},"content":"        switch (tokens[0]) {"},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":"        case \"D\":"},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":"            command \u003d \"deadline \" + tokens[2] + \" /by \" + tokens[3];"},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":"        case \"E\":"},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"            command \u003d \"event \" + tokens[2] + \" /at \" + tokens[3];"},{"lineNumber":60,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":61,"author":{"gitId":"SimBowen"},"content":"        case \"T\":"},{"lineNumber":62,"author":{"gitId":"SimBowen"},"content":"            command \u003d \"todo \" + tokens[2];"},{"lineNumber":63,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":64,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"SimBowen"},"content":"        return parseCommand(command);"},{"lineNumber":66,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":68,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"SimBowen"},"content":"     * Splits the description and date of the incoming deadline command"},{"lineNumber":70,"author":{"gitId":"SimBowen"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"SimBowen"},"content":"     * @param args the input\u0027s combined description and date string"},{"lineNumber":72,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"SimBowen"},"content":"    private Command prepareDeadlineCommand(String args) throws IncorrectFormatException {"},{"lineNumber":74,"author":{"gitId":"SimBowen"},"content":"        String[] parts \u003d args.split(\"/by\");"},{"lineNumber":75,"author":{"gitId":"SimBowen"},"content":"        // Validate arg string format"},{"lineNumber":76,"author":{"gitId":"SimBowen"},"content":"        if (parts.length !\u003d 2) {"},{"lineNumber":77,"author":{"gitId":"SimBowen"},"content":"            throw new IncorrectFormatException(\"Deadline command format is incorrect!\");"},{"lineNumber":78,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"SimBowen"},"content":"        return new DeadlineCommand(parts[0].trim(), parts[1].trim());"},{"lineNumber":80,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":82,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"SimBowen"},"content":"     * Splits the description and date of the incoming event command"},{"lineNumber":84,"author":{"gitId":"SimBowen"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"SimBowen"},"content":"     * @param args the input\u0027s combined description and date string"},{"lineNumber":86,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"SimBowen"},"content":"    private Command prepareEventCommand(String args) throws IncorrectFormatException {"},{"lineNumber":88,"author":{"gitId":"SimBowen"},"content":"        String[] parts \u003d args.split(\"/at\");"},{"lineNumber":89,"author":{"gitId":"SimBowen"},"content":"        // Validate arg string format"},{"lineNumber":90,"author":{"gitId":"SimBowen"},"content":"        if (parts.length !\u003d 2) {"},{"lineNumber":91,"author":{"gitId":"SimBowen"},"content":"            throw new IncorrectFormatException(\"Event command format is incorrect!\");"},{"lineNumber":92,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"SimBowen"},"content":"        return new EventCommand(parts[0].trim(), parts[1].trim());"},{"lineNumber":94,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":96,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":97,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":97}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"import duke.IncorrectFormatException;"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"import duke.ImprovedTask;"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"import duke.ListTypes;"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":" * todoCommand class contains the command keyword for the deadline command and instructions to run when execute is called"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":" **/"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"public class TodoCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"    protected static ImprovedTask task;"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task: [%s] has been added.\";"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"    public TodoCommand(String task) throws IncorrectFormatException {"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"        if (task.equals(\"\")) {"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"            throw new IncorrectFormatException(\"No task was entered!\");"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"        this.task \u003d new ImprovedTask(task, ListTypes.todo);"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"    public CommandResult execute() throws IncorrectFormatException {"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"        if (task.displayDescription() \u003d\u003d null) {"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"            throw new IncorrectFormatException(\"Task was not entered!\");"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"        inputList.addTask(task);"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, task.displayDescription()));"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":35}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"import commands.Command;"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"import commands.CommandResult;"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"import commands.Parser;"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"import commands.ByeCommand;"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"    private static TodoList inputList \u003d new TodoList();"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"     * Sets the command to act on the current list of tasks and executes the input command."},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"     * @param command the command to be executed"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"    private static CommandResult executeCommand(Command command) {"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"        command.setData(inputList);"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"        CommandResult result;"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"            result \u003d command.execute();"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"        } catch (IncorrectFormatException e) {"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"            return new CommandResult(e.getMessage());"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"        return result;"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"     * Loops until bye command is detected. Write to storage every time command is entered"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"     * @param Data the storage instance to update"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"    private static void runCommandLoopUntilExitCommand(Storage Data) {"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"        Command command \u003d null;"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"        do {"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"            Scanner in \u003d new Scanner(System.in);"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"            String userCommandText \u003d in.nextLine();"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"            try {"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"                command \u003d new Parser().parseCommand(userCommandText);"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"            } catch (IncorrectFormatException e) {"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"                ;"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"                continue;"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"            CommandResult result \u003d executeCommand(command);"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"            ui.showResult(result);"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"            Data.updateFile();"},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":"        } while (!ByeCommand.isBye(command));"},{"lineNumber":54,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"    public static void main(String[] args) throws IncorrectFormatException {"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"        ui.startupUi();"},{"lineNumber":60,"author":{"gitId":"SimBowen"},"content":"        Storage duke \u003d new Storage(inputList);"},{"lineNumber":61,"author":{"gitId":"SimBowen"},"content":"        ui.showResult(Storage.initialiseStorage());"},{"lineNumber":62,"author":{"gitId":"SimBowen"},"content":"        runCommandLoopUntilExitCommand(duke);"},{"lineNumber":63,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"SimBowen"},"content":"}"},{"lineNumber":65,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":66,"author":{"gitId":"SimBowen"},"content":""}],"authorContributionMap":{"SimBowen":66}},{"path":"src/main/java/duke/ImprovedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"package duke;"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":" * Stores the type of task, if the task is resolved, the description of the task and the date of the task if applicable"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":" */"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"public class ImprovedTask extends Task {"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"    protected ListTypes type;"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"    protected String date;"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"    public ImprovedTask(String desc, ListTypes type, String date) {"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"        super(desc);"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"        this.type \u003d type;"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"        this.date \u003d date;"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"    public ImprovedTask(String desc, ListTypes type) {"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"        super(desc);"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"        this.type \u003d type;"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"        this.date \u003d \"\";"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"     * Method displays the type of the task"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"    public String displayType() { // method to show the type of task"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"        String out \u003d \"\";"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"        switch (this.type) {"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"        case todo:"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"            out \u003d \"[T]\";"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"        case deadline:"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"            out \u003d \"[D]\";"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"        case event:"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"            out \u003d \"[E]\";"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"        ;"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"        return out;"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"     * Method displays the date of the task"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"    public String displayDate() { // method to show formatted date"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"        String out \u003d \"\";"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"        switch (this.type) {"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"        case deadline:"},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":"            out \u003d String.format(\"(by: %s)\", this.date);"},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":54,"author":{"gitId":"SimBowen"},"content":"        case event:"},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":"            out \u003d String.format(\"(at: %s)\", this.date);"},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"        case todo:"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"SimBowen"},"content":"        ;"},{"lineNumber":61,"author":{"gitId":"SimBowen"},"content":"        return out;"},{"lineNumber":62,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":64,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"SimBowen"},"content":"     * Method displays the description of the task"},{"lineNumber":66,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"SimBowen"},"content":"    public String displayDescription() { // method to access description"},{"lineNumber":68,"author":{"gitId":"SimBowen"},"content":"        return description;"},{"lineNumber":69,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":71,"author":{"gitId":"SimBowen"},"content":"    public String displayResolved() { // method to show if task is resolved"},{"lineNumber":72,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":73,"author":{"gitId":"SimBowen"},"content":"        if (this.resolved) {"},{"lineNumber":74,"author":{"gitId":"SimBowen"},"content":"            return \"[X]\";"},{"lineNumber":75,"author":{"gitId":"SimBowen"},"content":"        } else {"},{"lineNumber":76,"author":{"gitId":"SimBowen"},"content":"            return \"[ ]\";"},{"lineNumber":77,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":79,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":81,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"SimBowen"},"content":"     * Method displays the resolution status of the task"},{"lineNumber":83,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"SimBowen"},"content":"    public boolean isResolved() {"},{"lineNumber":85,"author":{"gitId":"SimBowen"},"content":"        return this.resolved;"},{"lineNumber":86,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":88,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":89,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":89}},{"path":"src/main/java/duke/IncorrectFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"public class IncorrectFormatException extends Exception {"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"    public IncorrectFormatException(String errorMessage) {"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"        super(errorMessage);"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":7}},{"path":"src/main/java/duke/ListTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"package duke;"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"public enum ListTypes {"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"    todo, deadline, event"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":7}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"import commands.*;"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"import java.nio.file.Path;"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":" * Sets up the todolist for importing and writing to data file."},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":" */"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"public class Storage {"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"    protected static String home \u003d System.getProperty(\"user.dir\");"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"    protected static Path path \u003d java.nio.file.Paths.get(home, \"data\");"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"    protected static Path dataFile \u003d java.nio.file.Paths.get(home, \"data\", \"duke.txt\");"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"    protected static final File importedList \u003d new File(path.toString());"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"    protected static TodoList inputList;"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"    public Storage() {"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"    public Storage(TodoList input) {"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"        inputList \u003d input;"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"    public static void returnPath() {"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"        String path \u003d System.getProperty(\"user.dir\") + \"\\\\\" + Storage.path;"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"        System.out.println(path);"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"    public static void setData(TodoList input) {"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"        inputList \u003d input;"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"    //Creates an empty txt file at data/duke"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"    public static String createDataFile() throws IOException {"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"        (new File(path.toString())).mkdir();"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"        writeToFile(dataFile.toString(), \"\");"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"        return \"No Data file found!\\nData file created at: \" + path;"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"     * writes the provided string to the indicated file"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"     * @param filePath indicates the file"},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":"     * @param addText  the string to write to file"},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"SimBowen"},"content":"    public static void writeToFile(String filePath, String addText) throws IOException { // Creates file at provided path and writes provided string to file."},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":"        fw.write(addText);"},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"        fw.close();"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":60,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"SimBowen"},"content":"     * Appends the provided string to the indicated file"},{"lineNumber":62,"author":{"gitId":"SimBowen"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"SimBowen"},"content":"     * @param filePath     indicates the fil"},{"lineNumber":64,"author":{"gitId":"SimBowen"},"content":"     * @param textToAppend string to write to file"},{"lineNumber":65,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"SimBowen"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException { // Appends to file at provided path"},{"lineNumber":67,"author":{"gitId":"SimBowen"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"},{"lineNumber":68,"author":{"gitId":"SimBowen"},"content":"        fw.write(textToAppend);"},{"lineNumber":69,"author":{"gitId":"SimBowen"},"content":"        fw.close();"},{"lineNumber":70,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":72,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"SimBowen"},"content":"     * rewrite the data file everytime the method is called"},{"lineNumber":74,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"SimBowen"},"content":"    public static void updateFile() { // Updates data file with current list of tasks"},{"lineNumber":76,"author":{"gitId":"SimBowen"},"content":"        String file \u003d \"data/duke.txt\";"},{"lineNumber":77,"author":{"gitId":"SimBowen"},"content":"        String out \u003d inputList.tasksUpdate();"},{"lineNumber":78,"author":{"gitId":"SimBowen"},"content":"        try {"},{"lineNumber":79,"author":{"gitId":"SimBowen"},"content":"            writeToFile(file, \"\");"},{"lineNumber":80,"author":{"gitId":"SimBowen"},"content":"            appendToFile(file, out);"},{"lineNumber":81,"author":{"gitId":"SimBowen"},"content":"        } catch (IOException e) {"},{"lineNumber":82,"author":{"gitId":"SimBowen"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());"},{"lineNumber":83,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":86,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"SimBowen"},"content":"     * sets the data file to be imported and parts the imported file into executable commands. Execute the commands to add tasks and status."},{"lineNumber":88,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"SimBowen"},"content":"    private static String runImportLoopUntilEOF() throws FileNotFoundException, IncorrectFormatException {"},{"lineNumber":90,"author":{"gitId":"SimBowen"},"content":"        Command command;"},{"lineNumber":91,"author":{"gitId":"SimBowen"},"content":"        File importedList \u003d new File(dataFile.toString());"},{"lineNumber":92,"author":{"gitId":"SimBowen"},"content":"        Scanner s \u003d new Scanner(importedList);"},{"lineNumber":93,"author":{"gitId":"SimBowen"},"content":"        try {"},{"lineNumber":94,"author":{"gitId":"SimBowen"},"content":"            do {"},{"lineNumber":95,"author":{"gitId":"SimBowen"},"content":"                String userCommandText \u003d s.nextLine();"},{"lineNumber":96,"author":{"gitId":"SimBowen"},"content":"                command \u003d new Parser().parseImportTasks(userCommandText);"},{"lineNumber":97,"author":{"gitId":"SimBowen"},"content":"                CommandResult result \u003d executeCommand(command);"},{"lineNumber":98,"author":{"gitId":"SimBowen"},"content":"                if (userCommandText.charAt(2) \u003d\u003d \u0027X\u0027) {"},{"lineNumber":99,"author":{"gitId":"SimBowen"},"content":"                    command \u003d new DoneCommand(inputList);"},{"lineNumber":100,"author":{"gitId":"SimBowen"},"content":"                    result \u003d command.execute();"},{"lineNumber":101,"author":{"gitId":"SimBowen"},"content":"                }"},{"lineNumber":102,"author":{"gitId":"SimBowen"},"content":"            } while (s.hasNext());"},{"lineNumber":103,"author":{"gitId":"SimBowen"},"content":"        } catch (NoSuchElementException ignored) {"},{"lineNumber":104,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"SimBowen"},"content":"        String MESSAGE_LIST_IMPORTED \u003d \"Task List has been imported! Here are your tasks: \\n\";"},{"lineNumber":106,"author":{"gitId":"SimBowen"},"content":"        CommandResult result \u003d executeCommand(new ListCommand());"},{"lineNumber":107,"author":{"gitId":"SimBowen"},"content":"        return MESSAGE_LIST_IMPORTED + result.feedbackToUser;"},{"lineNumber":108,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":110,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"SimBowen"},"content":"     * Executes command and returns resultant message in CommandResult form"},{"lineNumber":112,"author":{"gitId":"SimBowen"},"content":"     *"},{"lineNumber":113,"author":{"gitId":"SimBowen"},"content":"     * @param command the command to be executed"},{"lineNumber":114,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"SimBowen"},"content":"    private static CommandResult executeCommand(Command command) {"},{"lineNumber":116,"author":{"gitId":"SimBowen"},"content":"        command.setData(inputList);"},{"lineNumber":117,"author":{"gitId":"SimBowen"},"content":"        try {"},{"lineNumber":118,"author":{"gitId":"SimBowen"},"content":"            return command.execute();"},{"lineNumber":119,"author":{"gitId":"SimBowen"},"content":"        } catch (IncorrectFormatException e) {"},{"lineNumber":120,"author":{"gitId":"SimBowen"},"content":"            return new CommandResult(e.getMessage());"},{"lineNumber":121,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":124,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"SimBowen"},"content":"     * Tries to import tasks data and creates data file if not present."},{"lineNumber":126,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"SimBowen"},"content":"    public static String initialiseStorage() throws IncorrectFormatException {"},{"lineNumber":128,"author":{"gitId":"SimBowen"},"content":"        try {"},{"lineNumber":129,"author":{"gitId":"SimBowen"},"content":"            return runImportLoopUntilEOF();"},{"lineNumber":130,"author":{"gitId":"SimBowen"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":131,"author":{"gitId":"SimBowen"},"content":"            try {"},{"lineNumber":132,"author":{"gitId":"SimBowen"},"content":"                return createDataFile();"},{"lineNumber":133,"author":{"gitId":"SimBowen"},"content":"            } catch (IOException a) {"},{"lineNumber":134,"author":{"gitId":"SimBowen"},"content":"                return \"error creating data file\";"},{"lineNumber":135,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":136,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":139,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":140,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":140}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"package duke;"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"public class Task {"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"    protected String description;"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"    protected boolean resolved;"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"    public Task(String desc) {"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"        this.description \u003d desc;"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"        this.resolved \u003d false;"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"    public void resolve() {"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"        this.resolved \u003d true;"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":18}},{"path":"src/main/java/duke/TodoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"package duke;"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"public class TodoList {"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"    private ArrayList\u003cImprovedTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"    private int totalTasks;"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"    public TodoList() {"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"        this.totalTasks \u003d 0;"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"     * Method to add task entry to the list"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"     * @param newTask task entry to be added to the list"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"    public void addTask(ImprovedTask newTask) { // adds todo type task and returns confirmation"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"        taskList.add(newTask);"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"        totalTasks++;"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"     * Method to list all task entries currently in task list"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"    public String listItems() { // lists all current tasks"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"        String output \u003d \"\";"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"        if (this.totalTasks \u003d\u003d 0) {"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"            return \"Great! There are no tasks to show!\";"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"        for (int i \u003d 0; i \u003c totalTasks; i++) {"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"            if (i \u003c totalTasks - 1) {"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"                output +\u003d Integer.toString(i + 1)"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"                        + \". \" + taskList.get(i).displayType()"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"                        + \" \" + taskList.get(i).displayResolved()"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"                        + \" \" + taskList.get(i).displayDescription()"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"                        + \" \" + taskList.get(i).displayDate() + \"\\n\";"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"            } else {"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"                output +\u003d Integer.toString(i + 1)"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"                        + \". \" + taskList.get(i).displayType()"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"                        + \" \" + taskList.get(i).displayResolved()"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"                        + \" \" + taskList.get(i).displayDescription()"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"                        + \" \" + taskList.get(i).displayDate();"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"        return output;"},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":54,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":"     * Method to set task in the list as resolved"},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"     * @param num the number of the task entry to be set as resolved"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"    public void resolveTask(String num) { // resolves task and returns confirmation if task is not resolved"},{"lineNumber":60,"author":{"gitId":"SimBowen"},"content":"        int taskNum \u003d Integer.parseInt(num) - 1;"},{"lineNumber":61,"author":{"gitId":"SimBowen"},"content":"        taskList.get(taskNum).resolve();"},{"lineNumber":62,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":63,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":64,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":66,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":67,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"SimBowen"},"content":"     * Method to return total number of tasks"},{"lineNumber":69,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"SimBowen"},"content":"    public int tasksTotal() { // returns total tasks in list"},{"lineNumber":71,"author":{"gitId":"SimBowen"},"content":"        return this.totalTasks;"},{"lineNumber":72,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":74,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"SimBowen"},"content":"     * Method to delete the specified task"},{"lineNumber":76,"author":{"gitId":"SimBowen"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"SimBowen"},"content":"     * @param num the number of the task to delete"},{"lineNumber":78,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"SimBowen"},"content":"    public void deleteTask(String num) { // delete the specified task"},{"lineNumber":80,"author":{"gitId":"SimBowen"},"content":"        int taskNum \u003d Integer.parseInt(num) - 1;"},{"lineNumber":81,"author":{"gitId":"SimBowen"},"content":"        ImprovedTask temp \u003d taskList.get(taskNum);"},{"lineNumber":82,"author":{"gitId":"SimBowen"},"content":"        taskList.remove(temp);"},{"lineNumber":83,"author":{"gitId":"SimBowen"},"content":"        totalTasks--;"},{"lineNumber":84,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":86,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"SimBowen"},"content":"     * Method to get all current tasks in the task list and format it in a way that can be parsed by updateFile"},{"lineNumber":88,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"SimBowen"},"content":"    public String tasksUpdate() {"},{"lineNumber":90,"author":{"gitId":"SimBowen"},"content":"        String out \u003d \"\";"},{"lineNumber":91,"author":{"gitId":"SimBowen"},"content":"        for (int i \u003d 0; i \u003c totalTasks; i++) {"},{"lineNumber":92,"author":{"gitId":"SimBowen"},"content":"            if (taskList.get(i).displayType().equals(\"[T]\")) {"},{"lineNumber":93,"author":{"gitId":"SimBowen"},"content":"                out +\u003d taskList.get(i).displayType().charAt(1) + \"/\""},{"lineNumber":94,"author":{"gitId":"SimBowen"},"content":"                        + taskList.get(i).displayResolved().charAt(1) + \"/\""},{"lineNumber":95,"author":{"gitId":"SimBowen"},"content":"                        + taskList.get(i).displayDescription() + \"/\\n\";"},{"lineNumber":96,"author":{"gitId":"SimBowen"},"content":"            } else {"},{"lineNumber":97,"author":{"gitId":"SimBowen"},"content":"                out +\u003d taskList.get(i).displayType().charAt(1) + \"/\""},{"lineNumber":98,"author":{"gitId":"SimBowen"},"content":"                        + taskList.get(i).displayResolved().charAt(1) + \"/\""},{"lineNumber":99,"author":{"gitId":"SimBowen"},"content":"                        + taskList.get(i).displayDescription() + \"/\""},{"lineNumber":100,"author":{"gitId":"SimBowen"},"content":"                        + taskList.get(i).displayDate().substring(5, taskList.get(i).displayDate().indexOf(\")\")) + \"\\n\";"},{"lineNumber":101,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"SimBowen"},"content":"        return out;"},{"lineNumber":104,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":106,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"SimBowen"},"content":"     * Method to get all current tasks in the task list with the specified keyword and print it."},{"lineNumber":108,"author":{"gitId":"SimBowen"},"content":"     *"},{"lineNumber":109,"author":{"gitId":"SimBowen"},"content":"     * @param keyword the specified keyword"},{"lineNumber":110,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"SimBowen"},"content":"    public ArrayList\u003cImprovedTask\u003e findTasksWithKeyword(String keyword) {"},{"lineNumber":112,"author":{"gitId":"SimBowen"},"content":"        ArrayList\u003cImprovedTask\u003e tasksWithKeyword \u003d new ArrayList\u003c\u003e();"},{"lineNumber":113,"author":{"gitId":"SimBowen"},"content":"        for (ImprovedTask task : taskList) {"},{"lineNumber":114,"author":{"gitId":"SimBowen"},"content":"            if (task.description.contains(keyword)) {"},{"lineNumber":115,"author":{"gitId":"SimBowen"},"content":"                tasksWithKeyword.add(task);"},{"lineNumber":116,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"SimBowen"},"content":"        return tasksWithKeyword;"},{"lineNumber":119,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":120}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"import commands.CommandResult;"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"    private final String dividers \u003d \"____________________________________________________________\\n\" +"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"            \"%s\" + \"\\n\" +"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"            \"____________________________________________________________\\n\";"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"    public Ui() {"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"     * Method reads the output expected from the CommandResult and outputs it to console"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"     * @param output the CommandResult output from the user input command"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"    public void showResult(CommandResult output) {"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"        String toPrint \u003d String.format(dividers, output.feedbackToUser);"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"        System.out.println(toPrint);"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"     * Method reads the string input and outputs it to console"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"     * @param output the String input from other parts in the program"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"    public void showResult(String output) {"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"        String toPrint \u003d String.format(dividers, output);"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"        System.out.println(toPrint);"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"     * Method outputs the greeting sequence when program starts up"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"    public void startupUi() {"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"        String greeting \u003d \"Hello from\\n\" + logo;"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"        String welcome \u003d \" Hello! I\u0027m Duke\\n\" +"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"                \" What can I do for you?\";"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"        showResult(greeting);"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"        showResult(welcome);"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":49}}]
