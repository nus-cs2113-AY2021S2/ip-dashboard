[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"import java.nio.file.Paths;"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"    public static String command_parser(todo list, String command){"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"        String[] tokens \u003d command.split(\" \");"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"        int itemStartIndex \u003d command.indexOf(\" \") + 1;"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"        int itemEndIndex;"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"        int dateStartIndex;"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"        String out \u003d \"\";"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"        String desc \u003d \"\";"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"        String date \u003d \"\";"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"        switch(tokens[0]){"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"        case \"list\": // If command is list, print all tasks in list"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"            out \u003d list.listItems();"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"        case \"deadline\": // If command is deadline, parse the task and by date, print confirmation"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"            itemEndIndex \u003d command.indexOf(\"/by\") - 1;"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"            dateStartIndex \u003d itemEndIndex + 5;"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"            try {"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"                desc \u003d command.substring(itemStartIndex, itemEndIndex);"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"                date \u003d command.substring(dateStartIndex);"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"            }catch(StringIndexOutOfBoundsException e) { // if task or by date was not entered, catch error"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"                out \u003d \"Invalid deadline task format!\""},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"                    + \" Try the following: deadline [task] /by [date] \";"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"                break;"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"            out \u003d list.addTask(desc, listTypes.deadline, date);"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"        case \"event\": // If command is event, parse the task and at date, print confirmation"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"            itemEndIndex \u003d command.indexOf(\"/at\") - 1;"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"            dateStartIndex \u003d itemEndIndex + 5;"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"            try { // if task or at date was not entered, catch error"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"                desc \u003d command.substring(itemStartIndex, itemEndIndex);"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"                date \u003d command.substring(dateStartIndex);"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"            }catch(StringIndexOutOfBoundsException e) {"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"                out \u003d \"Invalid command format!\""},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"                    + \" Try the following: event [task] /at [date] \";"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"                break;"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"            out \u003d list.addTask(desc, listTypes.event, date);"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":"        case \"todo\": // If command is todo, parse the task, print confirmation"},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":54,"author":{"gitId":"SimBowen"},"content":"            desc \u003d command.substring(itemStartIndex);"},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":"            if(desc.equals(\"todo\")){ // if task was not entered, catch error"},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":"                out \u003d \"Invalid todo task!\";"},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"                break;"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"            out \u003d list.addTask(desc,listTypes.todo);"},{"lineNumber":60,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":61,"author":{"gitId":"SimBowen"},"content":"        case \"done\": // If command is done, mark task as done, print confirmation"},{"lineNumber":62,"author":{"gitId":"SimBowen"},"content":"            try {"},{"lineNumber":63,"author":{"gitId":"SimBowen"},"content":"                out \u003d list.resolveTask(tokens[1]);"},{"lineNumber":64,"author":{"gitId":"SimBowen"},"content":"            }catch(ArrayIndexOutOfBoundsException e){"},{"lineNumber":65,"author":{"gitId":"SimBowen"},"content":"                out \u003d \"Invalid selection!\";"},{"lineNumber":66,"author":{"gitId":"SimBowen"},"content":"                break;"},{"lineNumber":67,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":69,"author":{"gitId":"SimBowen"},"content":"        case \"delete\": // If command is  delete, delete task entry in list, print confirmation"},{"lineNumber":70,"author":{"gitId":"SimBowen"},"content":"            try {"},{"lineNumber":71,"author":{"gitId":"SimBowen"},"content":"                out \u003d list.deleteTask(tokens[1]);"},{"lineNumber":72,"author":{"gitId":"SimBowen"},"content":"            }catch(IndexOutOfBoundsException e){ // If task number is invalid, catch error"},{"lineNumber":73,"author":{"gitId":"SimBowen"},"content":"                out \u003d \"Invalid selection!\";"},{"lineNumber":74,"author":{"gitId":"SimBowen"},"content":"                break;"},{"lineNumber":75,"author":{"gitId":"SimBowen"},"content":"            }catch(NumberFormatException e){ // If string is entered instead of task number, catch error"},{"lineNumber":76,"author":{"gitId":"SimBowen"},"content":"            out \u003d \"Please enter the number of the task!\";"},{"lineNumber":77,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":79,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":80,"author":{"gitId":"SimBowen"},"content":"        default: // If command entered is any other unrecognised command, print invalid command"},{"lineNumber":81,"author":{"gitId":"SimBowen"},"content":"            out \u003d \"Invalid task command!\";"},{"lineNumber":82,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":84,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":85,"author":{"gitId":"SimBowen"},"content":"        return out;"},{"lineNumber":86,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":87,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":89,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":90,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":91,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":92,"author":{"gitId":"SimBowen"},"content":"    public static void dukeResponse(String output){"},{"lineNumber":93,"author":{"gitId":"SimBowen"},"content":"        System.out.println(\"____________________________________________________________\\n\" +"},{"lineNumber":94,"author":{"gitId":"SimBowen"},"content":"                output + \"\\n\" +"},{"lineNumber":95,"author":{"gitId":"SimBowen"},"content":"                \"____________________________________________________________\\n\");"},{"lineNumber":96,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":97,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"SimBowen"},"content":"    public static void dukeStartup(){"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":100,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":101,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":102,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":105,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":106,"author":{"gitId":"SimBowen"},"content":"        System.out.println(\"____________________________________________________________\\n\" +"},{"lineNumber":107,"author":{"gitId":"SimBowen"},"content":"                \" Hello! I\u0027m Duke\\n\" +"},{"lineNumber":108,"author":{"gitId":"SimBowen"},"content":"                \" What can I do for you?\\n\" +"},{"lineNumber":109,"author":{"gitId":"SimBowen"},"content":"                \"____________________________________________________________\\n\" );"},{"lineNumber":110,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":111,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":113,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":114,"author":{"gitId":"SimBowen"},"content":"    public static void dukeInitialisation(todo list) throws IOException {"},{"lineNumber":115,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":116,"author":{"gitId":"SimBowen"},"content":"        String path \u003d System.getProperty(\"user.dir\") + \"\\\\data\";"},{"lineNumber":117,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":118,"author":{"gitId":"SimBowen"},"content":"        File importedList \u003d new File(\"data/duke.txt\");"},{"lineNumber":119,"author":{"gitId":"SimBowen"},"content":"        try {"},{"lineNumber":120,"author":{"gitId":"SimBowen"},"content":"            if (!importedList.exists()) {"},{"lineNumber":121,"author":{"gitId":"SimBowen"},"content":"                writeToFile(\"data/duke.txt\", \"\");"},{"lineNumber":122,"author":{"gitId":"SimBowen"},"content":"                return;"},{"lineNumber":123,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"SimBowen"},"content":"        }catch(FileNotFoundException e){"},{"lineNumber":125,"author":{"gitId":"SimBowen"},"content":"            (new File(path)).mkdir();"},{"lineNumber":126,"author":{"gitId":"SimBowen"},"content":"            if (!importedList.exists()) {"},{"lineNumber":127,"author":{"gitId":"SimBowen"},"content":"                writeToFile(\"data/duke.txt\", \"\");"},{"lineNumber":128,"author":{"gitId":"SimBowen"},"content":"                return;"},{"lineNumber":129,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"SimBowen"},"content":"        Scanner s \u003d new Scanner(importedList);"},{"lineNumber":132,"author":{"gitId":"SimBowen"},"content":"        while (s.hasNext()) {"},{"lineNumber":133,"author":{"gitId":"SimBowen"},"content":"            String input \u003d s.nextLine();"},{"lineNumber":134,"author":{"gitId":"SimBowen"},"content":"            String[] tokens \u003d input.split(\"/\");"},{"lineNumber":135,"author":{"gitId":"SimBowen"},"content":"            String command \u003d \"\";"},{"lineNumber":136,"author":{"gitId":"SimBowen"},"content":"            switch(tokens[0]){"},{"lineNumber":137,"author":{"gitId":"SimBowen"},"content":"            case \"D\":"},{"lineNumber":138,"author":{"gitId":"SimBowen"},"content":"                command \u003d \"deadline \" + tokens[2] + \" /by \" + tokens[3];"},{"lineNumber":139,"author":{"gitId":"SimBowen"},"content":"                break;"},{"lineNumber":140,"author":{"gitId":"SimBowen"},"content":"            case \"E\":"},{"lineNumber":141,"author":{"gitId":"SimBowen"},"content":"                command \u003d \"event \" + tokens[2] + \" /at \" + tokens[3];"},{"lineNumber":142,"author":{"gitId":"SimBowen"},"content":"                break;"},{"lineNumber":143,"author":{"gitId":"SimBowen"},"content":"            case \"T\":"},{"lineNumber":144,"author":{"gitId":"SimBowen"},"content":"                command \u003d \"todo \" + tokens[2];"},{"lineNumber":145,"author":{"gitId":"SimBowen"},"content":"                break;"},{"lineNumber":146,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":147,"author":{"gitId":"SimBowen"},"content":"            command_parser(list, command);"},{"lineNumber":148,"author":{"gitId":"SimBowen"},"content":"            if (tokens[1].equals(\"X\")){"},{"lineNumber":149,"author":{"gitId":"SimBowen"},"content":"                String  temp \u003d command_parser(list, \"done \" + list.tasksTotal());"},{"lineNumber":150,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":151,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"SimBowen"},"content":"        System.out.println(\"Task list has been imported! Here are your tasks: \\n\""},{"lineNumber":153,"author":{"gitId":"SimBowen"},"content":"                + command_parser(list, \"list\") + \"\\n\""},{"lineNumber":154,"author":{"gitId":"SimBowen"},"content":"                + \"____________________________________________________________\\n\");"},{"lineNumber":155,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":157,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":158,"author":{"gitId":"SimBowen"},"content":"    public static void writeToFile(String filePath, String addText) throws IOException {"},{"lineNumber":159,"author":{"gitId":"SimBowen"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":160,"author":{"gitId":"SimBowen"},"content":"        fw.write(addText);"},{"lineNumber":161,"author":{"gitId":"SimBowen"},"content":"        fw.close();"},{"lineNumber":162,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":164,"author":{"gitId":"SimBowen"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException {"},{"lineNumber":165,"author":{"gitId":"SimBowen"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"},{"lineNumber":166,"author":{"gitId":"SimBowen"},"content":"        fw.write(textToAppend);"},{"lineNumber":167,"author":{"gitId":"SimBowen"},"content":"        fw.close();"},{"lineNumber":168,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":170,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":171,"author":{"gitId":"SimBowen"},"content":"    public static void updateList(todo list) throws IOException{"},{"lineNumber":172,"author":{"gitId":"SimBowen"},"content":"        String file \u003d \"data/duke.txt\";"},{"lineNumber":173,"author":{"gitId":"SimBowen"},"content":"        writeToFile(file,\"\");"},{"lineNumber":174,"author":{"gitId":"SimBowen"},"content":"        String out \u003d list.tasksUpdate();"},{"lineNumber":175,"author":{"gitId":"SimBowen"},"content":"        try {"},{"lineNumber":176,"author":{"gitId":"SimBowen"},"content":"            appendToFile(file, out);"},{"lineNumber":177,"author":{"gitId":"SimBowen"},"content":"        } catch (IOException e) {"},{"lineNumber":178,"author":{"gitId":"SimBowen"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());"},{"lineNumber":179,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":182,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":183,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":184,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":185,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":186,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":187,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":188,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":189,"author":{"gitId":"SimBowen"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":190,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":191,"author":{"gitId":"SimBowen"},"content":"        Boolean continueChat \u003d true;"},{"lineNumber":192,"author":{"gitId":"SimBowen"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":193,"author":{"gitId":"SimBowen"},"content":"        String output \u003d \"Nothing.\";"},{"lineNumber":194,"author":{"gitId":"SimBowen"},"content":"        todo todoList \u003d new todo();"},{"lineNumber":195,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":196,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":197,"author":{"gitId":"SimBowen"},"content":"        dukeStartup();"},{"lineNumber":198,"author":{"gitId":"SimBowen"},"content":"        dukeInitialisation(todoList);"},{"lineNumber":199,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":200,"author":{"gitId":"SimBowen"},"content":"        while(continueChat){"},{"lineNumber":201,"author":{"gitId":"SimBowen"},"content":"            String input \u003d in.nextLine();"},{"lineNumber":202,"author":{"gitId":"SimBowen"},"content":"            if(input.equals(\"bye\")){"},{"lineNumber":203,"author":{"gitId":"SimBowen"},"content":"                output \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":204,"author":{"gitId":"SimBowen"},"content":"                continueChat \u003d false;"},{"lineNumber":205,"author":{"gitId":"SimBowen"},"content":"            }else {"},{"lineNumber":206,"author":{"gitId":"SimBowen"},"content":"                output \u003d command_parser(todoList,input);"},{"lineNumber":207,"author":{"gitId":"SimBowen"},"content":"                updateList(todoList);"},{"lineNumber":208,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":209,"author":{"gitId":"SimBowen"},"content":"            dukeResponse(output);"},{"lineNumber":210,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":211,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":212,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":213,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":214,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"SimBowen":207,"-":9}},{"path":"src/main/java/improvedtask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"public class improvedtask extends task {"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"    private listTypes type;"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"    private String date;"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"    public improvedtask(String desc, listTypes type, String date){"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"        super(desc);"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"        this.type \u003d type;"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"        this.date \u003d date;"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"    public improvedtask(String desc, listTypes type){"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"        super(desc);"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"        this.type \u003d type;"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"        this.date \u003d \"\";"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"    public String displayType(){"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"        String out \u003d \"\";"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"        switch(this.type){"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"        case todo:"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"            out \u003d \"[T]\";"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"        case deadline:"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"            out \u003d \"[D]\";"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"        case event:"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"            out \u003d \"[E]\";"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"        };"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"        return  out;"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"    public String displayDate(){"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"        String out \u003d \"\";"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"        switch (this.type){"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"        case deadline:"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"            out \u003d String.format(\"(by: %s)\", this.date);"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"        case event:"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"            out \u003d String.format(\"(at: %s)\", this.date);"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"        case todo:"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"            break;"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"        };"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"        return out;"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"    public String displayDescription(){"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"        return description;"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"    public String displayResolved(){"},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":"        if (this.resolved) {"},{"lineNumber":54,"author":{"gitId":"SimBowen"},"content":"            return \"[X]\";"},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":"        } else {"},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":"            return \"[ ]\";"},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":61,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":62,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":63,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":64,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":65,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":66,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":67,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":67}},{"path":"src/main/java/listTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"public enum listTypes {"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"    todo,deadline,event"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":3}},{"path":"src/main/java/task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"public class task {"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"    protected boolean resolved;"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"    public task(){"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"        this.description \u003d \"\";"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"        this.resolved \u003d false;"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"    public task(String desc){"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"        this.description \u003d desc;"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"        this.resolved \u003d false;"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"    public void resolve(){"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"        this.resolved \u003d true;"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":19}},{"path":"src/main/java/todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"public class todo {"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"    private ArrayList\u003cimprovedtask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"    private int totalTasks;"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"    private int leftoverTasks;"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"    public todo(){"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"        this.totalTasks \u003d 0;"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"        this.leftoverTasks \u003d 0;"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"    public String addTask(String desc, listTypes type, String date){"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"        taskList.add (new improvedtask(desc, type, date));"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"        totalTasks++;"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"        leftoverTasks++;"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"        return \"Task: [\" + desc + \"] has been added.\""},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"        + \"\\nYou now have \" + this.tasksLeft() + \" task(s) left undone in the list!\";"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"    public String addTask(String desc, listTypes type){"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"        taskList.add(new improvedtask(desc, type));"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"        totalTasks++;"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"        leftoverTasks++;"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"        return \"Task: [\" + desc + \"] has been added.\""},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"                + \"\\nYou now have \" + this.tasksLeft() + \" task(s) left undone in the list!\";"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"    public String listItems(){"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"        String output \u003d \"\";"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"        if(this.totalTasks \u003d\u003d 0){"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"            return \"Great! There are no tasks to show!\";"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"        for(int i \u003d 0; i \u003c totalTasks; i++){"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"            if(i \u003c totalTasks - 1) {"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"                output +\u003d Integer.toString(i + 1)"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"                        + \". \" + taskList.get(i).displayType()"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"                        + \" \" + taskList.get(i).displayResolved()"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"                        + \" \" + taskList.get(i).displayDescription()"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"                        + \" \" + taskList.get(i).displayDate() + \"\\n\";"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"            }else{"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"                output +\u003d Integer.toString(i + 1)"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"                        + \". \" + taskList.get(i).displayType()"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"                        + \" \" + taskList.get(i).displayResolved()"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"                        + \" \" + taskList.get(i).displayDescription()"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"                        + \" \" + taskList.get(i).displayDate();"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":"        return output;"},{"lineNumber":54,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":"    public String resolveTask(String num){"},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"        Integer taskNum \u003d Integer.parseInt(num) - 1;"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":"        if (taskList.get(taskNum).resolved){"},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"            return \"Task is already done!\";"},{"lineNumber":60,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"SimBowen"},"content":"        taskList.get(taskNum).resolve();"},{"lineNumber":62,"author":{"gitId":"SimBowen"},"content":"        this.leftoverTasks--;"},{"lineNumber":63,"author":{"gitId":"SimBowen"},"content":"        return \"Great! Task [\"+ taskList.get(taskNum).displayDescription() + \"] has been marked as done!\""},{"lineNumber":64,"author":{"gitId":"SimBowen"},"content":"                + \"\\nYou now have \" + this.tasksLeft() + \" task(s) left undone in the list!\";"},{"lineNumber":65,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":66,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":68,"author":{"gitId":"SimBowen"},"content":"    public int tasksLeft(){"},{"lineNumber":69,"author":{"gitId":"SimBowen"},"content":"        return this.leftoverTasks;"},{"lineNumber":70,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":72,"author":{"gitId":"SimBowen"},"content":"    public String deleteTask(String num){"},{"lineNumber":73,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":74,"author":{"gitId":"SimBowen"},"content":"        Integer taskNum \u003d Integer.parseInt(num) - 1;"},{"lineNumber":75,"author":{"gitId":"SimBowen"},"content":"        improvedtask temp \u003d taskList.get(taskNum);"},{"lineNumber":76,"author":{"gitId":"SimBowen"},"content":"        taskList.remove(temp);"},{"lineNumber":77,"author":{"gitId":"SimBowen"},"content":"        totalTasks--;"},{"lineNumber":78,"author":{"gitId":"SimBowen"},"content":"        if(!temp.resolved) {"},{"lineNumber":79,"author":{"gitId":"SimBowen"},"content":"            leftoverTasks--;"},{"lineNumber":80,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"SimBowen"},"content":"        String out \u003d \"Noted. I\u0027ve removed this task: \\n     \""},{"lineNumber":82,"author":{"gitId":"SimBowen"},"content":"                   + temp.displayType()"},{"lineNumber":83,"author":{"gitId":"SimBowen"},"content":"                   + \" \" + temp.displayResolved()"},{"lineNumber":84,"author":{"gitId":"SimBowen"},"content":"                   + \" \" + temp.displayDescription()"},{"lineNumber":85,"author":{"gitId":"SimBowen"},"content":"                   + \" \" + temp.displayDate() + \"\\n\""},{"lineNumber":86,"author":{"gitId":"SimBowen"},"content":"                   + \"Now you have \" + totalTasks + \" task(s) total left in the list!\";"},{"lineNumber":87,"author":{"gitId":"SimBowen"},"content":"        return out;"},{"lineNumber":88,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":89,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":91,"author":{"gitId":"SimBowen"},"content":"    public int tasksTotal(){"},{"lineNumber":92,"author":{"gitId":"SimBowen"},"content":"        return this.totalTasks;"},{"lineNumber":93,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":95,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":96,"author":{"gitId":"SimBowen"},"content":"    public String tasksUpdate(){"},{"lineNumber":97,"author":{"gitId":"SimBowen"},"content":"        String out \u003d \"\";"},{"lineNumber":98,"author":{"gitId":"SimBowen"},"content":"        for (int i \u003d 0; i \u003c totalTasks; i++){"},{"lineNumber":99,"author":{"gitId":"SimBowen"},"content":"            if (taskList.get(i).displayType().equals(\"[T]\")) {"},{"lineNumber":100,"author":{"gitId":"SimBowen"},"content":"                out +\u003d taskList.get(i).displayType().substring(1, 2) + \"/\""},{"lineNumber":101,"author":{"gitId":"SimBowen"},"content":"                        + taskList.get(i).displayResolved().substring(1, 2) + \"/\""},{"lineNumber":102,"author":{"gitId":"SimBowen"},"content":"                        + taskList.get(i).displayDescription() + \"/\\n\";"},{"lineNumber":103,"author":{"gitId":"SimBowen"},"content":"            }else{"},{"lineNumber":104,"author":{"gitId":"SimBowen"},"content":"                out +\u003d taskList.get(i).displayType().substring(1, 2) + \"/\""},{"lineNumber":105,"author":{"gitId":"SimBowen"},"content":"                        + taskList.get(i).displayResolved().substring(1, 2) + \"/\""},{"lineNumber":106,"author":{"gitId":"SimBowen"},"content":"                        + taskList.get(i).displayDescription() + \"/\""},{"lineNumber":107,"author":{"gitId":"SimBowen"},"content":"                        + taskList.get(i).displayDate().substring(5, taskList.get(i).displayDate().indexOf(\")\")) + \"\\n\";"},{"lineNumber":108,"author":{"gitId":"SimBowen"},"content":"            }"},{"lineNumber":109,"author":{"gitId":"SimBowen"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"SimBowen"},"content":"        return out;"},{"lineNumber":111,"author":{"gitId":"SimBowen"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":113,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":114,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":115,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":116,"author":{"gitId":"SimBowen"},"content":""},{"lineNumber":117,"author":{"gitId":"SimBowen"},"content":"}"}],"authorContributionMap":{"SimBowen":117}}]
