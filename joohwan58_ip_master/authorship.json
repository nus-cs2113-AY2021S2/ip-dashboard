[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"# duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":"1. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"joohwan58":2,"-":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":"### Add different Tasks to your list"},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":"add todos, events, or deadlines"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":"### `todo` - add a todo"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"joohwan58"},"content":"`todo (name)`"},{"lineNumber":15,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":16,"author":{"gitId":"joohwan58"},"content":"Expected outcome:"},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":"`Got it. I\u0027ve added this task:"},{"lineNumber":19,"author":{"gitId":"joohwan58"},"content":"(Task name)"},{"lineNumber":20,"author":{"gitId":"joohwan58"},"content":"Now you have (number) tasks in the list`"},{"lineNumber":21,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":22,"author":{"gitId":"joohwan58"},"content":"### `event` - add an event"},{"lineNumber":23,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":24,"author":{"gitId":"joohwan58"},"content":"Example of usage:"},{"lineNumber":25,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":26,"author":{"gitId":"joohwan58"},"content":"`event (name) /at (time)`"},{"lineNumber":27,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":28,"author":{"gitId":"joohwan58"},"content":"Expected outcome:"},{"lineNumber":29,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":30,"author":{"gitId":"joohwan58"},"content":"`Got it. I\u0027ve added this task:"},{"lineNumber":31,"author":{"gitId":"joohwan58"},"content":"(Task name)"},{"lineNumber":32,"author":{"gitId":"joohwan58"},"content":"Now you have (number) tasks in the list`"},{"lineNumber":33,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":34,"author":{"gitId":"joohwan58"},"content":"### `deadline` - add a deadline"},{"lineNumber":35,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":36,"author":{"gitId":"joohwan58"},"content":"Example of usage:"},{"lineNumber":37,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":38,"author":{"gitId":"joohwan58"},"content":"`deadline (name) /by (time)`"},{"lineNumber":39,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":40,"author":{"gitId":"joohwan58"},"content":"Expected outcome:"},{"lineNumber":41,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":42,"author":{"gitId":"joohwan58"},"content":"`Got it. I\u0027ve added this task:"},{"lineNumber":43,"author":{"gitId":"joohwan58"},"content":"(Task name)"},{"lineNumber":44,"author":{"gitId":"joohwan58"},"content":"Now you have (number) tasks in the list`"},{"lineNumber":45,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":46,"author":{"gitId":"joohwan58"},"content":"### `list` - lists all tasks entered"},{"lineNumber":47,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":48,"author":{"gitId":"joohwan58"},"content":"Example of usage:"},{"lineNumber":49,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":50,"author":{"gitId":"joohwan58"},"content":"`list`"},{"lineNumber":51,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":52,"author":{"gitId":"joohwan58"},"content":"Expected outcome:"},{"lineNumber":53,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":54,"author":{"gitId":"joohwan58"},"content":"`1. (Task) "},{"lineNumber":55,"author":{"gitId":"joohwan58"},"content":"2.(task)"},{"lineNumber":56,"author":{"gitId":"joohwan58"},"content":"...`"},{"lineNumber":57,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":58,"author":{"gitId":"joohwan58"},"content":"### `done` - marks a task as complete"},{"lineNumber":59,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":60,"author":{"gitId":"joohwan58"},"content":"Example of usage:"},{"lineNumber":61,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":62,"author":{"gitId":"joohwan58"},"content":"`done (index)`"},{"lineNumber":63,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":64,"author":{"gitId":"joohwan58"},"content":"index is the position of the task in the list"},{"lineNumber":65,"author":{"gitId":"joohwan58"},"content":"as shown by the list command."},{"lineNumber":66,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":67,"author":{"gitId":"joohwan58"},"content":"Expected outcome:"},{"lineNumber":68,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":69,"author":{"gitId":"joohwan58"},"content":"`Nice! I\u0027ve marked this task as done:"},{"lineNumber":70,"author":{"gitId":"joohwan58"},"content":"(task)`"},{"lineNumber":71,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":72,"author":{"gitId":"joohwan58"},"content":"### `find` - find a task containing this word of phrase"},{"lineNumber":73,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":74,"author":{"gitId":"joohwan58"},"content":"Example of usage:"},{"lineNumber":75,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":76,"author":{"gitId":"joohwan58"},"content":"`find (string)`"},{"lineNumber":77,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":78,"author":{"gitId":"joohwan58"},"content":"Expected outcome:"},{"lineNumber":79,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":80,"author":{"gitId":"joohwan58"},"content":"`(list of tasks that match the word entered)`"},{"lineNumber":81,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":82,"author":{"gitId":"joohwan58"},"content":"### \u0027bye\u0027 - End the program"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"joohwan58"},"content":"`bye`"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"joohwan58"},"content":"`Bye. Hope to see you again soon!`"}],"authorContributionMap":{"joohwan58":74,"-":16}},{"path":"savefile.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"[T][ ] eat"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":"[T][ ] live"},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"[T][ ] aer"}],"authorContributionMap":{"joohwan58":3}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"import duke.*;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"public class Main {"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":"    public static void main(String[] args) {"},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":"        Duke.main(new String[]{});"},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":8}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.InvalidInput;"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoContent;"},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoTime;"},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":"import duke.myTasks.Deadline;"},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":"import duke.myTasks.Event;"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":"import duke.myTasks.Todo;"},{"lineNumber":9,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitId":"joohwan58"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":12,"author":{"gitId":"joohwan58"},"content":"import java.io.FileWriter;"},{"lineNumber":13,"author":{"gitId":"joohwan58"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"joohwan58"},"content":"import java.nio.file.Files;"},{"lineNumber":15,"author":{"gitId":"joohwan58"},"content":"import java.nio.file.Path;"},{"lineNumber":16,"author":{"gitId":"joohwan58"},"content":"import java.nio.file.Paths;"},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":"import java.util.Scanner;"},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":19,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":21,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":22,"author":{"gitId":"joohwan58"},"content":"    public static TaskList list \u003d new TaskList();"},{"lineNumber":23,"author":{"gitId":"joohwan58"},"content":"    public static boolean isRunning \u003d true;"},{"lineNumber":24,"author":{"gitId":"joohwan58"},"content":"    public static String filePath \u003d \"savefile.txt\";"},{"lineNumber":25,"author":{"gitId":"joohwan58"},"content":"    public static Save save \u003d new Save();"},{"lineNumber":26,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":27,"author":{"gitId":"joohwan58"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"joohwan58"},"content":"     * @param command the name if the instruction"},{"lineNumber":29,"author":{"gitId":"joohwan58"},"content":"     * @param content additional information about the instruction, may or may not be needed"},{"lineNumber":30,"author":{"gitId":"joohwan58"},"content":"     * @throws InvalidInput thrown if comman is incorrect"},{"lineNumber":31,"author":{"gitId":"joohwan58"},"content":"     * @throws NoContent thrown if name is not given when initialising a Task"},{"lineNumber":32,"author":{"gitId":"joohwan58"},"content":"     * @throws NoTime thrown if time is not given when initialising a time-dependant task."},{"lineNumber":33,"author":{"gitId":"joohwan58"},"content":"     * @throws NullPointerException thrown if the user asks for an index outside of the current range of the list"},{"lineNumber":34,"author":{"gitId":"joohwan58"},"content":"     * @throws NumberFormatException thrown if the user enters something else when the program expects a number"},{"lineNumber":35,"author":{"gitId":"joohwan58"},"content":"     * @throws ArrayIndexOutOfBoundsException thrown if the user asks for an index outside of the current range of the list"},{"lineNumber":36,"author":{"gitId":"joohwan58"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"joohwan58"},"content":"    public static void executeInstruction(String command, String content) throws InvalidInput, NoContent, NoTime, NullPointerException, NumberFormatException, ArrayIndexOutOfBoundsException{"},{"lineNumber":38,"author":{"gitId":"joohwan58"},"content":"        switch (command) {"},{"lineNumber":39,"author":{"gitId":"joohwan58"},"content":"        case \"bye\":"},{"lineNumber":40,"author":{"gitId":"joohwan58"},"content":"            isRunning \u003d false;"},{"lineNumber":41,"author":{"gitId":"joohwan58"},"content":"            save.save(list);"},{"lineNumber":42,"author":{"gitId":"joohwan58"},"content":"            break;"},{"lineNumber":43,"author":{"gitId":"joohwan58"},"content":"        case \"list\":"},{"lineNumber":44,"author":{"gitId":"joohwan58"},"content":"            list.printList();"},{"lineNumber":45,"author":{"gitId":"joohwan58"},"content":"            break;"},{"lineNumber":46,"author":{"gitId":"joohwan58"},"content":"        case \"find\":"},{"lineNumber":47,"author":{"gitId":"joohwan58"},"content":"            list.find(content);"},{"lineNumber":48,"author":{"gitId":"joohwan58"},"content":"            break;"},{"lineNumber":49,"author":{"gitId":"joohwan58"},"content":"        case \"done\":"},{"lineNumber":50,"author":{"gitId":"joohwan58"},"content":"            list.get(Integer.parseInt(content) - 1).markDone();"},{"lineNumber":51,"author":{"gitId":"joohwan58"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":52,"author":{"gitId":"joohwan58"},"content":"            System.out.println(list.get(Integer.parseInt(content) - 1).toString());"},{"lineNumber":53,"author":{"gitId":"joohwan58"},"content":"            break;"},{"lineNumber":54,"author":{"gitId":"joohwan58"},"content":"        case \"todo\":"},{"lineNumber":55,"author":{"gitId":"joohwan58"},"content":"            Todo todo \u003d new Todo(content);"},{"lineNumber":56,"author":{"gitId":"joohwan58"},"content":"            list.add(todo);"},{"lineNumber":57,"author":{"gitId":"joohwan58"},"content":"            list.printAddMessage(todo);"},{"lineNumber":58,"author":{"gitId":"joohwan58"},"content":"            break;"},{"lineNumber":59,"author":{"gitId":"joohwan58"},"content":"        case \"event\":"},{"lineNumber":60,"author":{"gitId":"joohwan58"},"content":"            Event event \u003d new Event(content);"},{"lineNumber":61,"author":{"gitId":"joohwan58"},"content":"            list.add(event);"},{"lineNumber":62,"author":{"gitId":"joohwan58"},"content":"            list.printAddMessage(event);"},{"lineNumber":63,"author":{"gitId":"joohwan58"},"content":"            break;"},{"lineNumber":64,"author":{"gitId":"joohwan58"},"content":"        case \"deadline\":"},{"lineNumber":65,"author":{"gitId":"joohwan58"},"content":"            Deadline deadline \u003d new Deadline(content);"},{"lineNumber":66,"author":{"gitId":"joohwan58"},"content":"            list.add(deadline);"},{"lineNumber":67,"author":{"gitId":"joohwan58"},"content":"            list.printAddMessage(deadline);"},{"lineNumber":68,"author":{"gitId":"joohwan58"},"content":"            break;"},{"lineNumber":69,"author":{"gitId":"joohwan58"},"content":"        default:"},{"lineNumber":70,"author":{"gitId":"joohwan58"},"content":"            throw new InvalidInput();"},{"lineNumber":71,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":74,"author":{"gitId":"joohwan58"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"joohwan58"},"content":"     * the main function handles reading user input and formatting it for"},{"lineNumber":76,"author":{"gitId":"joohwan58"},"content":"     * use by the executeInstruction method."},{"lineNumber":77,"author":{"gitId":"joohwan58"},"content":"     * Exception handling is also done in the main fucntion."},{"lineNumber":78,"author":{"gitId":"joohwan58"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"joohwan58"},"content":"    public static void main(String[] args) {"},{"lineNumber":80,"author":{"gitId":"joohwan58"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":81,"author":{"gitId":"joohwan58"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":82,"author":{"gitId":"joohwan58"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":83,"author":{"gitId":"joohwan58"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":84,"author":{"gitId":"joohwan58"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":85,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":86,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":87,"author":{"gitId":"joohwan58"},"content":"        save.checkSave();"},{"lineNumber":88,"author":{"gitId":"joohwan58"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":89,"author":{"gitId":"joohwan58"},"content":"        String input;"},{"lineNumber":90,"author":{"gitId":"joohwan58"},"content":"        do {"},{"lineNumber":91,"author":{"gitId":"joohwan58"},"content":"            input \u003d in.nextLine();"},{"lineNumber":92,"author":{"gitId":"joohwan58"},"content":"            String command;"},{"lineNumber":93,"author":{"gitId":"joohwan58"},"content":"            String content \u003d \"\";"},{"lineNumber":94,"author":{"gitId":"joohwan58"},"content":"            if (input.indexOf(\u0027 \u0027) \u003d\u003d -1) {"},{"lineNumber":95,"author":{"gitId":"joohwan58"},"content":"                command \u003d input;"},{"lineNumber":96,"author":{"gitId":"joohwan58"},"content":"            } else {"},{"lineNumber":97,"author":{"gitId":"joohwan58"},"content":"                command \u003d input.substring(0, input.indexOf(\u0027 \u0027));"},{"lineNumber":98,"author":{"gitId":"joohwan58"},"content":"                content \u003d input.substring(input.indexOf(\u0027 \u0027) + 1);"},{"lineNumber":99,"author":{"gitId":"joohwan58"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"joohwan58"},"content":"            try {"},{"lineNumber":101,"author":{"gitId":"joohwan58"},"content":"                executeInstruction(command, content);"},{"lineNumber":102,"author":{"gitId":"joohwan58"},"content":"            } catch (InvalidInput e) {"},{"lineNumber":103,"author":{"gitId":"joohwan58"},"content":"                System.out.println(\"Invalid command used\");"},{"lineNumber":104,"author":{"gitId":"joohwan58"},"content":"            } catch (NoContent | StringIndexOutOfBoundsException e) {"},{"lineNumber":105,"author":{"gitId":"joohwan58"},"content":"                System.out.println(\"Needs a name\");"},{"lineNumber":106,"author":{"gitId":"joohwan58"},"content":"            } catch (NoTime e) {"},{"lineNumber":107,"author":{"gitId":"joohwan58"},"content":"                System.out.println(\"Needs time. Add \\\"/by \u003ctime\u003e\\\" to command.\");"},{"lineNumber":108,"author":{"gitId":"joohwan58"},"content":"            } catch (NullPointerException | ArrayIndexOutOfBoundsException e) {"},{"lineNumber":109,"author":{"gitId":"joohwan58"},"content":"                System.out.println(\"You have inputted an invalid index number\");"},{"lineNumber":110,"author":{"gitId":"joohwan58"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":111,"author":{"gitId":"joohwan58"},"content":"                System.out.println(\"Specify which task to mark as done\");"},{"lineNumber":112,"author":{"gitId":"joohwan58"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"joohwan58"},"content":"        } while (isRunning);"},{"lineNumber":114,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"joohwan58":113,"-":3}},{"path":"src/main/java/duke/Save.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoContent;"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoTime;"},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":"import duke.myTasks.Deadline;"},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":"import duke.myTasks.Event;"},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":"import duke.myTasks.Todo;"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":9,"author":{"gitId":"joohwan58"},"content":"import java.io.File;"},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":11,"author":{"gitId":"joohwan58"},"content":"import java.io.FileWriter;"},{"lineNumber":12,"author":{"gitId":"joohwan58"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"joohwan58"},"content":"import java.nio.file.Files;"},{"lineNumber":14,"author":{"gitId":"joohwan58"},"content":"import java.nio.file.Path;"},{"lineNumber":15,"author":{"gitId":"joohwan58"},"content":"import java.nio.file.Paths;"},{"lineNumber":16,"author":{"gitId":"joohwan58"},"content":"import java.util.Scanner;"},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"joohwan58"},"content":" * The Save class handles reading and writing data to a text file"},{"lineNumber":20,"author":{"gitId":"joohwan58"},"content":" * for saving memory between sessions."},{"lineNumber":21,"author":{"gitId":"joohwan58"},"content":" *"},{"lineNumber":22,"author":{"gitId":"joohwan58"},"content":" * The parameter filePath is the relative path of the textfile."},{"lineNumber":23,"author":{"gitId":"joohwan58"},"content":" */"},{"lineNumber":24,"author":{"gitId":"joohwan58"},"content":"public class Save {"},{"lineNumber":25,"author":{"gitId":"joohwan58"},"content":"    public static String filePath \u003d \"savefile.txt\";"},{"lineNumber":26,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":27,"author":{"gitId":"joohwan58"},"content":"    Save(){}"},{"lineNumber":28,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":29,"author":{"gitId":"joohwan58"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"joohwan58"},"content":"     * Creates a textfile if it does not already exist."},{"lineNumber":31,"author":{"gitId":"joohwan58"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"joohwan58"},"content":"    public static void checkSave() {"},{"lineNumber":33,"author":{"gitId":"joohwan58"},"content":"        Path path \u003d Paths.get(filePath); //creates Path instance"},{"lineNumber":34,"author":{"gitId":"joohwan58"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"joohwan58"},"content":"            Path p \u003d Files.createFile(path);     //creates file at specified location"},{"lineNumber":36,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":37,"author":{"gitId":"joohwan58"},"content":"        } catch (IOException e) {"},{"lineNumber":38,"author":{"gitId":"joohwan58"},"content":"            loadSave();"},{"lineNumber":39,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":42,"author":{"gitId":"joohwan58"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"joohwan58"},"content":"     * Reads the data from the textfile."},{"lineNumber":44,"author":{"gitId":"joohwan58"},"content":"     * @return a TaskList object constructed from the data in the savefile."},{"lineNumber":45,"author":{"gitId":"joohwan58"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"joohwan58"},"content":"    public static TaskList loadSave() {"},{"lineNumber":47,"author":{"gitId":"joohwan58"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":48,"author":{"gitId":"joohwan58"},"content":"        File f \u003d new File(filePath);"},{"lineNumber":49,"author":{"gitId":"joohwan58"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"joohwan58"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":51,"author":{"gitId":"joohwan58"},"content":"            while (s.hasNext()) {"},{"lineNumber":52,"author":{"gitId":"joohwan58"},"content":"                String line \u003d s.nextLine();"},{"lineNumber":53,"author":{"gitId":"joohwan58"},"content":"                switch(line.charAt(1)) {"},{"lineNumber":54,"author":{"gitId":"joohwan58"},"content":"                case \u0027T\u0027:"},{"lineNumber":55,"author":{"gitId":"joohwan58"},"content":"                    Todo todo \u003d new Todo(line.substring(7));"},{"lineNumber":56,"author":{"gitId":"joohwan58"},"content":"                    list.add(todo);"},{"lineNumber":57,"author":{"gitId":"joohwan58"},"content":"                    break;"},{"lineNumber":58,"author":{"gitId":"joohwan58"},"content":"                case \u0027D\u0027:"},{"lineNumber":59,"author":{"gitId":"joohwan58"},"content":"                    int add \u003d line.indexOf(\u0027:\u0027) - 3;"},{"lineNumber":60,"author":{"gitId":"joohwan58"},"content":"                    Deadline deadline \u003d new Deadline(line.substring(7, add + 1) + \"/by\" + line.substring(add + 4));"},{"lineNumber":61,"author":{"gitId":"joohwan58"},"content":"                    list.add(deadline);"},{"lineNumber":62,"author":{"gitId":"joohwan58"},"content":"                    break;"},{"lineNumber":63,"author":{"gitId":"joohwan58"},"content":"                case \u0027E\u0027:"},{"lineNumber":64,"author":{"gitId":"joohwan58"},"content":"                    int add1 \u003d line.indexOf(\u0027:\u0027) - 3;"},{"lineNumber":65,"author":{"gitId":"joohwan58"},"content":"                    Event event \u003d new Event(line.substring(7, add1 + 1) + \"/at\" + line.substring(add1 + 4));"},{"lineNumber":66,"author":{"gitId":"joohwan58"},"content":"                    list.add(event);"},{"lineNumber":67,"author":{"gitId":"joohwan58"},"content":"                    break;"},{"lineNumber":68,"author":{"gitId":"joohwan58"},"content":"                default:"},{"lineNumber":69,"author":{"gitId":"joohwan58"},"content":"                    break;"},{"lineNumber":70,"author":{"gitId":"joohwan58"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"joohwan58"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"joohwan58"},"content":"        } catch (FileNotFoundException | NoContent | NoTime e) {"},{"lineNumber":73,"author":{"gitId":"joohwan58"},"content":"            System.out.println(\"error loading save\");"},{"lineNumber":74,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"joohwan58"},"content":"        return list;"},{"lineNumber":76,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":78,"author":{"gitId":"joohwan58"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"joohwan58"},"content":"     * Overwrites the current textfile with data from the current session"},{"lineNumber":80,"author":{"gitId":"joohwan58"},"content":"     * @param list the TaskList object from the current session to be encoded into the textfile"},{"lineNumber":81,"author":{"gitId":"joohwan58"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"joohwan58"},"content":"    public static void save(TaskList list) {"},{"lineNumber":83,"author":{"gitId":"joohwan58"},"content":"        try {"},{"lineNumber":84,"author":{"gitId":"joohwan58"},"content":"            FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":85,"author":{"gitId":"joohwan58"},"content":"            fw.write(\"\");//clear file"},{"lineNumber":86,"author":{"gitId":"joohwan58"},"content":"            fw.close();"},{"lineNumber":87,"author":{"gitId":"joohwan58"},"content":"            FileWriter f \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"},{"lineNumber":88,"author":{"gitId":"joohwan58"},"content":"            for (int i \u003d 0; i \u003c list.index; i++) {"},{"lineNumber":89,"author":{"gitId":"joohwan58"},"content":"                f.write(list.get(i).toString() + \"\\n\");"},{"lineNumber":90,"author":{"gitId":"joohwan58"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"joohwan58"},"content":"            f.close();"},{"lineNumber":92,"author":{"gitId":"joohwan58"},"content":"        } catch (IOException e) {"},{"lineNumber":93,"author":{"gitId":"joohwan58"},"content":"            System.out.println(\"cannot write to file\");"},{"lineNumber":94,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":96}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"import duke.myTasks.Todo;"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":" * A customised ArrayList with additional methods for Duke"},{"lineNumber":9,"author":{"gitId":"joohwan58"},"content":" */"},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"joohwan58"},"content":"    public static ArrayList\u003cTodo\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"joohwan58"},"content":"    public static int index;"},{"lineNumber":13,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":14,"author":{"gitId":"joohwan58"},"content":"    TaskList() {"},{"lineNumber":15,"author":{"gitId":"joohwan58"},"content":"        index \u003d 0;"},{"lineNumber":16,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":"    public Todo get(int i) {"},{"lineNumber":19,"author":{"gitId":"joohwan58"},"content":"        return list.get(i);"},{"lineNumber":20,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":22,"author":{"gitId":"joohwan58"},"content":"    public void add(Todo task) {"},{"lineNumber":23,"author":{"gitId":"joohwan58"},"content":"        list.add(task);"},{"lineNumber":24,"author":{"gitId":"joohwan58"},"content":"        index++;"},{"lineNumber":25,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":27,"author":{"gitId":"joohwan58"},"content":"    public void printList() {"},{"lineNumber":28,"author":{"gitId":"joohwan58"},"content":"        for (int i \u003d 0; i \u003c index; i++) {"},{"lineNumber":29,"author":{"gitId":"joohwan58"},"content":"            System.out.println((i + 1) + \". \" + list.get(i).toString());"},{"lineNumber":30,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":33,"author":{"gitId":"joohwan58"},"content":"    public void printAddMessage(Todo task) {"},{"lineNumber":34,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":35,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"  \" + task.toString());"},{"lineNumber":36,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"Now you have \" + index + \" tasks in the list.\");"},{"lineNumber":37,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":39,"author":{"gitId":"joohwan58"},"content":"    public void find(String content) {"},{"lineNumber":40,"author":{"gitId":"joohwan58"},"content":"        boolean exists \u003d false;"},{"lineNumber":41,"author":{"gitId":"joohwan58"},"content":"        for (int i \u003d 0; i \u003c index; i++) {"},{"lineNumber":42,"author":{"gitId":"joohwan58"},"content":"            if (list.get(i).name.contains(content)) {"},{"lineNumber":43,"author":{"gitId":"joohwan58"},"content":"                exists \u003d true;"},{"lineNumber":44,"author":{"gitId":"joohwan58"},"content":"                System.out.println((i+1) + \". \" + list.get(i).toString());"},{"lineNumber":45,"author":{"gitId":"joohwan58"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"joohwan58"},"content":"        if (!exists) {"},{"lineNumber":48,"author":{"gitId":"joohwan58"},"content":"            System.out.println(\"There is no task matching the search term.\");"},{"lineNumber":49,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":51}},{"path":"src/main/java/duke/myExceptions/InvalidInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke.myExceptions;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":" * If the user inputs a command that is invalid,"},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":" * this exception is thrown."},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":" */"},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":"public class InvalidInput extends Exception{"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":8}},{"path":"src/main/java/duke/myExceptions/NoContent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke.myExceptions;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":" * When instantiating a Deadline, event, or Todo, if"},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":" * a name is not provided, this exception is thrown."},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":" */"},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":"public class NoContent extends Exception{"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":8}},{"path":"src/main/java/duke/myExceptions/NoTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke.myExceptions;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":" * When instantiating a Deadline or event, if a"},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":" * time is not provided, this exception is thrown."},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":" */"},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":"public class NoTime extends Exception{"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":8}},{"path":"src/main/java/duke/myTasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke.myTasks;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoContent;"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoTime;"},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":" * Event class extended with a diffrent toString method()"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":" */"},{"lineNumber":9,"author":{"gitId":"joohwan58"},"content":"public class Deadline extends Event{"},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":11,"author":{"gitId":"joohwan58"},"content":"    public Deadline(String content) throws NoContent, NoTime {"},{"lineNumber":12,"author":{"gitId":"joohwan58"},"content":"        super(content);"},{"lineNumber":13,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":15,"author":{"gitId":"joohwan58"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"joohwan58"},"content":"        return \"[D][\" + this.getStatusIcon() + \"] \" + name + \"(by: \" + time + \")\";"},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":18}},{"path":"src/main/java/duke/myTasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke.myTasks;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoContent;"},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoTime;"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":" * Todo class extended with time parameter"},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":" */"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":"public class Event extends Todo{"},{"lineNumber":9,"author":{"gitId":"joohwan58"},"content":"    protected String time;"},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":11,"author":{"gitId":"joohwan58"},"content":"    public Event(String content) throws NoContent, NoTime{"},{"lineNumber":12,"author":{"gitId":"joohwan58"},"content":"        if (content.equals(\"\")) {"},{"lineNumber":13,"author":{"gitId":"joohwan58"},"content":"            throw new NoContent();"},{"lineNumber":14,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"joohwan58"},"content":"        if (!content.contains(\"/\")) {"},{"lineNumber":16,"author":{"gitId":"joohwan58"},"content":"            throw new NoTime();"},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":"        String name \u003d content.substring(0, content.indexOf(\u0027/\u0027) - 1);"},{"lineNumber":19,"author":{"gitId":"joohwan58"},"content":"        String time \u003d content.substring(content.indexOf(\u0027/\u0027) + 4);"},{"lineNumber":20,"author":{"gitId":"joohwan58"},"content":"        this.name \u003d name;"},{"lineNumber":21,"author":{"gitId":"joohwan58"},"content":"        this.time \u003d time;"},{"lineNumber":22,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":24,"author":{"gitId":"joohwan58"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"joohwan58"},"content":"        return \"[E][\" + this.getStatusIcon() + \"] \" + name + \"(at: \" + time + \")\";"},{"lineNumber":26,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":27}},{"path":"src/main/java/duke/myTasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke.myTasks;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoContent;"},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":" * The base class for tasks."},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":" *"},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":" */"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":"public class Todo {"},{"lineNumber":9,"author":{"gitId":"joohwan58"},"content":"    public String name;"},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":"    protected boolean isDone;"},{"lineNumber":11,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":12,"author":{"gitId":"joohwan58"},"content":"    public Todo(String name) throws NoContent{"},{"lineNumber":13,"author":{"gitId":"joohwan58"},"content":"        if (name.equals(\"\")) {"},{"lineNumber":14,"author":{"gitId":"joohwan58"},"content":"            throw new NoContent();"},{"lineNumber":15,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"joohwan58"},"content":"        this.name \u003d name;"},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":"        isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":20,"author":{"gitId":"joohwan58"},"content":"    Todo(){"},{"lineNumber":21,"author":{"gitId":"joohwan58"},"content":"        this.name \u003d \"\";"},{"lineNumber":22,"author":{"gitId":"joohwan58"},"content":"        isDone \u003d false;"},{"lineNumber":23,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":25,"author":{"gitId":"joohwan58"},"content":"    public void markDone() {"},{"lineNumber":26,"author":{"gitId":"joohwan58"},"content":"        isDone \u003d true;"},{"lineNumber":27,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":29,"author":{"gitId":"joohwan58"},"content":"    public String getStatusIcon() {"},{"lineNumber":30,"author":{"gitId":"joohwan58"},"content":"        return (isDone ? \"\\u2718\" : \" \");"},{"lineNumber":31,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":33,"author":{"gitId":"joohwan58"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"joohwan58"},"content":"     * @return String representation of the class for use by the list.printList() method and the Save class"},{"lineNumber":35,"author":{"gitId":"joohwan58"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"joohwan58"},"content":"    public String toString() {"},{"lineNumber":37,"author":{"gitId":"joohwan58"},"content":"        return \"[T][\" + this.getStatusIcon() + \"] \" + name;"},{"lineNumber":38,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":39}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"joohwan58":1,"-":20}}]
