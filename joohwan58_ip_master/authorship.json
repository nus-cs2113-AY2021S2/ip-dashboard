[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"joohwan58"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":11,"author":{"gitId":"joohwan58"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"joohwan58"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"joohwan58"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"joohwan58"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"joohwan58":9,"-":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":"    public static Task[] list \u003d new Task[100];"},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":"    public static int index \u003d 0;"},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":"    public static void addToList(String input) {"},{"lineNumber":9,"author":{"gitId":"joohwan58"},"content":"        Task newTask \u003d new Task(input);"},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":"        list[index] \u003d newTask;"},{"lineNumber":11,"author":{"gitId":"joohwan58"},"content":"        index++;"},{"lineNumber":12,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":14,"author":{"gitId":"joohwan58"},"content":"    public static void printList() {"},{"lineNumber":15,"author":{"gitId":"joohwan58"},"content":"        for (int i \u003d 0; i \u003c index; i++) {"},{"lineNumber":16,"author":{"gitId":"joohwan58"},"content":"            System.out.println(String.valueOf(i + 1) + \". \" + list[i].representAsString());"},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":22,"author":{"gitId":"-"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":27,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":28,"author":{"gitId":"joohwan58"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":29,"author":{"gitId":"joohwan58"},"content":"        String input;"},{"lineNumber":30,"author":{"gitId":"joohwan58"},"content":"        boolean running \u003d true;"},{"lineNumber":31,"author":{"gitId":"joohwan58"},"content":"        do {"},{"lineNumber":32,"author":{"gitId":"joohwan58"},"content":"            input \u003d in.nextLine();"},{"lineNumber":33,"author":{"gitId":"joohwan58"},"content":"            if (input.compareTo(\"bye\") \u003d\u003d 0) {"},{"lineNumber":34,"author":{"gitId":"joohwan58"},"content":"                running \u003d false;"},{"lineNumber":35,"author":{"gitId":"joohwan58"},"content":"            } else if (input.compareTo(\"list\") \u003d\u003d 0) {"},{"lineNumber":36,"author":{"gitId":"joohwan58"},"content":"                printList();"},{"lineNumber":37,"author":{"gitId":"joohwan58"},"content":"            } else {"},{"lineNumber":38,"author":{"gitId":"joohwan58"},"content":"                String[] separated \u003d input.split(\" \");"},{"lineNumber":39,"author":{"gitId":"joohwan58"},"content":"                if (separated[0].compareTo(\"done\") \u003d\u003d 0) {"},{"lineNumber":40,"author":{"gitId":"joohwan58"},"content":"                    list[Integer.parseInt(separated[1]) - 1].markDone();"},{"lineNumber":41,"author":{"gitId":"joohwan58"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":42,"author":{"gitId":"joohwan58"},"content":"                    System.out.println(list[Integer.parseInt(separated[1]) - 1].representAsString().replace(\"\\u2713\", \"\\u2718\"));"},{"lineNumber":43,"author":{"gitId":"joohwan58"},"content":"                } else {"},{"lineNumber":44,"author":{"gitId":"joohwan58"},"content":"                    addToList(input);"},{"lineNumber":45,"author":{"gitId":"joohwan58"},"content":"                    System.out.println(\"Added: \" + input);"},{"lineNumber":46,"author":{"gitId":"joohwan58"},"content":"                }"},{"lineNumber":47,"author":{"gitId":"joohwan58"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":49,"author":{"gitId":"joohwan58"},"content":"        } while (running);"},{"lineNumber":50,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"joohwan58":42,"-":10}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":"    private String name;"},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"    private boolean isDone;"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":"    Task(String name) {"},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":"        this.name \u003d name;"},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":"        isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":"    public void markDone() {"},{"lineNumber":11,"author":{"gitId":"joohwan58"},"content":"        isDone \u003d true;"},{"lineNumber":12,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":14,"author":{"gitId":"joohwan58"},"content":"    public String getStatusIcon() {"},{"lineNumber":15,"author":{"gitId":"joohwan58"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":16,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":"    public String representAsString() {"},{"lineNumber":19,"author":{"gitId":"joohwan58"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + name;"},{"lineNumber":20,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":21}}]
