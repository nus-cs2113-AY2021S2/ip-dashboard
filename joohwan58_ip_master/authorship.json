[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"# duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":"1. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"joohwan58":2,"-":24}},{"path":"savefile.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"[T][ ] eat"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":"[D][ ] sleep(by: 10pm)"},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"[E][ ] tutorial(at: 10am)"}],"authorContributionMap":{"joohwan58":3}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"import duke.*;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"public class Main {"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":"    public static void main(String[] args) {"},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":"        Duke.main(new String[]{});"},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":8}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.InvalidInput;"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoContent;"},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoTime;"},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":"import duke.myTasks.Deadline;"},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":"import duke.myTasks.Event;"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":"import duke.myTasks.Todo;"},{"lineNumber":9,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitId":"joohwan58"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":12,"author":{"gitId":"joohwan58"},"content":"import java.io.FileWriter;"},{"lineNumber":13,"author":{"gitId":"joohwan58"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"joohwan58"},"content":"import java.nio.file.Files;"},{"lineNumber":15,"author":{"gitId":"joohwan58"},"content":"import java.nio.file.Path;"},{"lineNumber":16,"author":{"gitId":"joohwan58"},"content":"import java.nio.file.Paths;"},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":"import java.util.ArrayList;"},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":"import java.util.Scanner;"},{"lineNumber":19,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":20,"author":{"gitId":"joohwan58"},"content":"//built JAR file"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":22,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":23,"author":{"gitId":"joohwan58"},"content":"    public static ArrayList\u003cTodo\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"joohwan58"},"content":"    public static int index \u003d 0;"},{"lineNumber":25,"author":{"gitId":"joohwan58"},"content":"    public static boolean isRunning \u003d true;"},{"lineNumber":26,"author":{"gitId":"joohwan58"},"content":"    public static String filePath \u003d \"savefile.txt\";"},{"lineNumber":27,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":28,"author":{"gitId":"joohwan58"},"content":"    public static void addToList(Todo task) {"},{"lineNumber":29,"author":{"gitId":"joohwan58"},"content":"        list.add(task);"},{"lineNumber":30,"author":{"gitId":"joohwan58"},"content":"        index++;"},{"lineNumber":31,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":33,"author":{"gitId":"joohwan58"},"content":"    public static void printList() {"},{"lineNumber":34,"author":{"gitId":"joohwan58"},"content":"        for (int i \u003d 0; i \u003c index; i++) {"},{"lineNumber":35,"author":{"gitId":"joohwan58"},"content":"            System.out.println((i + 1) + \". \" + list.get(i).toString());"},{"lineNumber":36,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":39,"author":{"gitId":"joohwan58"},"content":"    public static void printAddMessage(Todo task) {"},{"lineNumber":40,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":41,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"  \" + task.toString());"},{"lineNumber":42,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"Now you have \" + index + \" tasks in the list.\");"},{"lineNumber":43,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":45,"author":{"gitId":"joohwan58"},"content":"    public static void executeInstruction(String command, String content) throws InvalidInput, NoContent, NoTime, NullPointerException, NumberFormatException, ArrayIndexOutOfBoundsException{"},{"lineNumber":46,"author":{"gitId":"joohwan58"},"content":"        switch (command) {"},{"lineNumber":47,"author":{"gitId":"joohwan58"},"content":"        case \"bye\":"},{"lineNumber":48,"author":{"gitId":"joohwan58"},"content":"            isRunning \u003d false;"},{"lineNumber":49,"author":{"gitId":"joohwan58"},"content":"            save();"},{"lineNumber":50,"author":{"gitId":"joohwan58"},"content":"            break;"},{"lineNumber":51,"author":{"gitId":"joohwan58"},"content":"        case \"list\":"},{"lineNumber":52,"author":{"gitId":"joohwan58"},"content":"            printList();"},{"lineNumber":53,"author":{"gitId":"joohwan58"},"content":"            break;"},{"lineNumber":54,"author":{"gitId":"joohwan58"},"content":"        case \"done\":"},{"lineNumber":55,"author":{"gitId":"joohwan58"},"content":"            list.get(Integer.parseInt(content) - 1).markDone();"},{"lineNumber":56,"author":{"gitId":"joohwan58"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":57,"author":{"gitId":"joohwan58"},"content":"            System.out.println(list.get(Integer.parseInt(content) - 1).toString());"},{"lineNumber":58,"author":{"gitId":"joohwan58"},"content":"            break;"},{"lineNumber":59,"author":{"gitId":"joohwan58"},"content":"        case \"todo\":"},{"lineNumber":60,"author":{"gitId":"joohwan58"},"content":"            Todo todo \u003d new Todo(content);"},{"lineNumber":61,"author":{"gitId":"joohwan58"},"content":"            addToList(todo);"},{"lineNumber":62,"author":{"gitId":"joohwan58"},"content":"            printAddMessage(todo);"},{"lineNumber":63,"author":{"gitId":"joohwan58"},"content":"            break;"},{"lineNumber":64,"author":{"gitId":"joohwan58"},"content":"        case \"event\":"},{"lineNumber":65,"author":{"gitId":"joohwan58"},"content":"            Event event \u003d new Event(content);"},{"lineNumber":66,"author":{"gitId":"joohwan58"},"content":"            addToList(event);"},{"lineNumber":67,"author":{"gitId":"joohwan58"},"content":"            printAddMessage(event);"},{"lineNumber":68,"author":{"gitId":"joohwan58"},"content":"            break;"},{"lineNumber":69,"author":{"gitId":"joohwan58"},"content":"        case \"deadline\":"},{"lineNumber":70,"author":{"gitId":"joohwan58"},"content":"            Deadline deadline \u003d new Deadline(content);"},{"lineNumber":71,"author":{"gitId":"joohwan58"},"content":"            addToList(deadline);"},{"lineNumber":72,"author":{"gitId":"joohwan58"},"content":"            printAddMessage(deadline);"},{"lineNumber":73,"author":{"gitId":"joohwan58"},"content":"            break;"},{"lineNumber":74,"author":{"gitId":"joohwan58"},"content":"        default:"},{"lineNumber":75,"author":{"gitId":"joohwan58"},"content":"            throw new InvalidInput();"},{"lineNumber":76,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":79,"author":{"gitId":"joohwan58"},"content":"    public static void checkSave() {"},{"lineNumber":80,"author":{"gitId":"joohwan58"},"content":"        Path path \u003d Paths.get(filePath); //creates Path instance"},{"lineNumber":81,"author":{"gitId":"joohwan58"},"content":"        try {"},{"lineNumber":82,"author":{"gitId":"joohwan58"},"content":"            Path p \u003d Files.createFile(path);     //creates file at specified location"},{"lineNumber":83,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":84,"author":{"gitId":"joohwan58"},"content":"        } catch (IOException e) {"},{"lineNumber":85,"author":{"gitId":"joohwan58"},"content":"            loadSave();"},{"lineNumber":86,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":89,"author":{"gitId":"joohwan58"},"content":"    public static void loadSave() {"},{"lineNumber":90,"author":{"gitId":"joohwan58"},"content":"        File f \u003d new File(filePath);"},{"lineNumber":91,"author":{"gitId":"joohwan58"},"content":"        try {Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":92,"author":{"gitId":"joohwan58"},"content":"            while (s.hasNext()) {"},{"lineNumber":93,"author":{"gitId":"joohwan58"},"content":"                String line \u003d s.nextLine();"},{"lineNumber":94,"author":{"gitId":"joohwan58"},"content":"                switch(line.charAt(1)) {"},{"lineNumber":95,"author":{"gitId":"joohwan58"},"content":"                case \u0027T\u0027:"},{"lineNumber":96,"author":{"gitId":"joohwan58"},"content":"                    Todo todo \u003d new Todo(line.substring(7));"},{"lineNumber":97,"author":{"gitId":"joohwan58"},"content":"                    addToList(todo);"},{"lineNumber":98,"author":{"gitId":"joohwan58"},"content":"                    break;"},{"lineNumber":99,"author":{"gitId":"joohwan58"},"content":"                case \u0027D\u0027:"},{"lineNumber":100,"author":{"gitId":"joohwan58"},"content":"                    int add \u003d line.indexOf(\u0027:\u0027) - 3;"},{"lineNumber":101,"author":{"gitId":"joohwan58"},"content":"                    Deadline deadline \u003d new Deadline(line.substring(7, add + 1) + \"/by\" + line.substring(add + 4));"},{"lineNumber":102,"author":{"gitId":"joohwan58"},"content":"                    addToList(deadline);"},{"lineNumber":103,"author":{"gitId":"joohwan58"},"content":"                    break;"},{"lineNumber":104,"author":{"gitId":"joohwan58"},"content":"                case \u0027E\u0027:"},{"lineNumber":105,"author":{"gitId":"joohwan58"},"content":"                    int add1 \u003d line.indexOf(\u0027:\u0027) - 3;"},{"lineNumber":106,"author":{"gitId":"joohwan58"},"content":"                    Event event \u003d new Event(line.substring(7, add1 + 1) + \"/at\" + line.substring(add1 + 4));"},{"lineNumber":107,"author":{"gitId":"joohwan58"},"content":"                    addToList(event);"},{"lineNumber":108,"author":{"gitId":"joohwan58"},"content":"                    break;"},{"lineNumber":109,"author":{"gitId":"joohwan58"},"content":"                default:"},{"lineNumber":110,"author":{"gitId":"joohwan58"},"content":"                    break;"},{"lineNumber":111,"author":{"gitId":"joohwan58"},"content":"                }"},{"lineNumber":112,"author":{"gitId":"joohwan58"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"joohwan58"},"content":"        } catch (FileNotFoundException | NoContent | NoTime e) {"},{"lineNumber":114,"author":{"gitId":"joohwan58"},"content":"            System.out.println(\"error loading save\");"},{"lineNumber":115,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":118,"author":{"gitId":"joohwan58"},"content":"    public static void save() {"},{"lineNumber":119,"author":{"gitId":"joohwan58"},"content":"        try {"},{"lineNumber":120,"author":{"gitId":"joohwan58"},"content":"            FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":121,"author":{"gitId":"joohwan58"},"content":"            fw.write(\"\");//clear file"},{"lineNumber":122,"author":{"gitId":"joohwan58"},"content":"            fw.close();"},{"lineNumber":123,"author":{"gitId":"joohwan58"},"content":"            FileWriter f \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"},{"lineNumber":124,"author":{"gitId":"joohwan58"},"content":"            for (int i \u003d 0; i \u003c index; i++) {"},{"lineNumber":125,"author":{"gitId":"joohwan58"},"content":"                f.write(list.get(i).toString() + \"\\n\");"},{"lineNumber":126,"author":{"gitId":"joohwan58"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"joohwan58"},"content":"            f.close();"},{"lineNumber":128,"author":{"gitId":"joohwan58"},"content":"        } catch (IOException e) {"},{"lineNumber":129,"author":{"gitId":"joohwan58"},"content":"            System.out.println(\"cannot write to file\");"},{"lineNumber":130,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":133,"author":{"gitId":"joohwan58"},"content":"    public static void main(String[] args) {"},{"lineNumber":134,"author":{"gitId":"joohwan58"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":135,"author":{"gitId":"joohwan58"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":136,"author":{"gitId":"joohwan58"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":137,"author":{"gitId":"joohwan58"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":138,"author":{"gitId":"joohwan58"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":139,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":140,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":141,"author":{"gitId":"joohwan58"},"content":"        checkSave();"},{"lineNumber":142,"author":{"gitId":"joohwan58"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":143,"author":{"gitId":"joohwan58"},"content":"        String input;"},{"lineNumber":144,"author":{"gitId":"joohwan58"},"content":"        do {"},{"lineNumber":145,"author":{"gitId":"joohwan58"},"content":"            input \u003d in.nextLine();"},{"lineNumber":146,"author":{"gitId":"joohwan58"},"content":"            String command;"},{"lineNumber":147,"author":{"gitId":"joohwan58"},"content":"            String content \u003d \"\";"},{"lineNumber":148,"author":{"gitId":"joohwan58"},"content":"            if (input.indexOf(\u0027 \u0027) \u003d\u003d -1) {"},{"lineNumber":149,"author":{"gitId":"joohwan58"},"content":"                command \u003d input;"},{"lineNumber":150,"author":{"gitId":"joohwan58"},"content":"            } else {"},{"lineNumber":151,"author":{"gitId":"joohwan58"},"content":"                command \u003d input.substring(0, input.indexOf(\u0027 \u0027));"},{"lineNumber":152,"author":{"gitId":"joohwan58"},"content":"                content \u003d input.substring(input.indexOf(\u0027 \u0027) + 1);"},{"lineNumber":153,"author":{"gitId":"joohwan58"},"content":"            }"},{"lineNumber":154,"author":{"gitId":"joohwan58"},"content":"            try {"},{"lineNumber":155,"author":{"gitId":"joohwan58"},"content":"                executeInstruction(command, content);"},{"lineNumber":156,"author":{"gitId":"joohwan58"},"content":"            } catch (InvalidInput e) {"},{"lineNumber":157,"author":{"gitId":"joohwan58"},"content":"                System.out.println(\"Invalid command used\");"},{"lineNumber":158,"author":{"gitId":"joohwan58"},"content":"            } catch (NoContent | StringIndexOutOfBoundsException e) {"},{"lineNumber":159,"author":{"gitId":"joohwan58"},"content":"                System.out.println(\"Needs a name\");"},{"lineNumber":160,"author":{"gitId":"joohwan58"},"content":"            } catch (NoTime e) {"},{"lineNumber":161,"author":{"gitId":"joohwan58"},"content":"                System.out.println(\"Needs time. Add \\\"/by \u003ctime\u003e\\\" to command.\");"},{"lineNumber":162,"author":{"gitId":"joohwan58"},"content":"            } catch (NullPointerException | IndexOutOfBoundsException e) {"},{"lineNumber":163,"author":{"gitId":"joohwan58"},"content":"                System.out.println(\"You have inputted an invalid index number\");"},{"lineNumber":164,"author":{"gitId":"joohwan58"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":165,"author":{"gitId":"joohwan58"},"content":"                System.out.println(\"Specify which task to mark as done\");"},{"lineNumber":166,"author":{"gitId":"joohwan58"},"content":"            }"},{"lineNumber":167,"author":{"gitId":"joohwan58"},"content":"        } while (isRunning);"},{"lineNumber":168,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"joohwan58":167,"-":3}},{"path":"src/main/java/duke/myExceptions/InvalidInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke.myExceptions;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"public class InvalidInput extends Exception{"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":4}},{"path":"src/main/java/duke/myExceptions/NoContent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke.myExceptions;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"public class NoContent extends Exception{"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":4}},{"path":"src/main/java/duke/myExceptions/NoTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke.myExceptions;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"public class NoTime extends Exception{"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":4}},{"path":"src/main/java/duke/myTasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke.myTasks;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoContent;"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoTime;"},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":"public class Deadline extends Event{"},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":"    public Deadline(String content) throws NoContent, NoTime {"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":"        super(content);"},{"lineNumber":9,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":11,"author":{"gitId":"joohwan58"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"joohwan58"},"content":"        return \"[D][\" + this.getStatusIcon() + \"] \" + name + \"(by: \" + time + \")\";"},{"lineNumber":13,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":14}},{"path":"src/main/java/duke/myTasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke.myTasks;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoContent;"},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoTime;"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":"public class Event extends Todo{"},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":"    protected String time;"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":9,"author":{"gitId":"joohwan58"},"content":"    public Event(String content) throws NoContent, NoTime{"},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":"        if (content.equals(\"\")) {"},{"lineNumber":11,"author":{"gitId":"joohwan58"},"content":"            throw new NoContent();"},{"lineNumber":12,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"joohwan58"},"content":"        if (!content.contains(\"/\")) {"},{"lineNumber":14,"author":{"gitId":"joohwan58"},"content":"            throw new NoTime();"},{"lineNumber":15,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"joohwan58"},"content":"        String name \u003d content.substring(0, content.indexOf(\u0027/\u0027) - 1);"},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":"        String time \u003d content.substring(content.indexOf(\u0027/\u0027) + 4);"},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":"        this.name \u003d name;"},{"lineNumber":19,"author":{"gitId":"joohwan58"},"content":"        this.time \u003d time;"},{"lineNumber":20,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":22,"author":{"gitId":"joohwan58"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"joohwan58"},"content":"        return \"[E][\" + this.getStatusIcon() + \"] \" + name + \"(at: \" + time + \")\";"},{"lineNumber":24,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":25}},{"path":"src/main/java/duke/myTasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke.myTasks;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoContent;"},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":"public class Todo {"},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":"    protected String name;"},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":"    public Todo(String name) throws NoContent{"},{"lineNumber":9,"author":{"gitId":"joohwan58"},"content":"        if (name.equals(\"\")) {"},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":"            throw new NoContent();"},{"lineNumber":11,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":12,"author":{"gitId":"joohwan58"},"content":"        this.name \u003d name;"},{"lineNumber":13,"author":{"gitId":"joohwan58"},"content":"        isDone \u003d false;"},{"lineNumber":14,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":16,"author":{"gitId":"joohwan58"},"content":"    Todo(){"},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":"        this.name \u003d \"\";"},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":"        isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":21,"author":{"gitId":"joohwan58"},"content":"    public void markDone() {"},{"lineNumber":22,"author":{"gitId":"joohwan58"},"content":"        isDone \u003d true;"},{"lineNumber":23,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":25,"author":{"gitId":"joohwan58"},"content":"    public String getStatusIcon() {"},{"lineNumber":26,"author":{"gitId":"joohwan58"},"content":"        return (isDone ? \"\\u2718\" : \" \");"},{"lineNumber":27,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":29,"author":{"gitId":"joohwan58"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"joohwan58"},"content":"        return \"[T][\" + this.getStatusIcon() + \"] \" + name;"},{"lineNumber":31,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":32}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"joohwan58":1,"-":20}}]
