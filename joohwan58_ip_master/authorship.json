[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"# duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":"1. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"joohwan58":2,"-":24}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"import duke.*;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"public class Main {"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":"    public static void main(String[] args) {"},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":"        Duke.main(new String[]{});"},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":8}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.*;"},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"import duke.myTasks.*;"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":9,"author":{"gitId":"joohwan58"},"content":"    public static Todo[] list \u003d new Todo[100];"},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":"    public static int index \u003d 0;"},{"lineNumber":11,"author":{"gitId":"joohwan58"},"content":"    public static boolean isRunning \u003d true;"},{"lineNumber":12,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":13,"author":{"gitId":"joohwan58"},"content":"    public static void addToList(Todo task) {"},{"lineNumber":14,"author":{"gitId":"joohwan58"},"content":"        list[index] \u003d task;"},{"lineNumber":15,"author":{"gitId":"joohwan58"},"content":"        index++;"},{"lineNumber":16,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":"    public static void printList() {"},{"lineNumber":19,"author":{"gitId":"joohwan58"},"content":"        for (int i \u003d 0; i \u003c index; i++) {"},{"lineNumber":20,"author":{"gitId":"joohwan58"},"content":"            System.out.println((i + 1) + \". \" + list[i].toString());"},{"lineNumber":21,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":24,"author":{"gitId":"joohwan58"},"content":"    public static void printAddMessage(Todo task) {"},{"lineNumber":25,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":26,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"  \" + task.toString());"},{"lineNumber":27,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"Now you have \" + index + \" tasks in the list.\");"},{"lineNumber":28,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":30,"author":{"gitId":"joohwan58"},"content":"    public static void executeInstruction(String command, String content) throws InvalidInput, NoContent, NoTime, NullPointerException, NumberFormatException, ArrayIndexOutOfBoundsException{"},{"lineNumber":31,"author":{"gitId":"joohwan58"},"content":"        switch (command) {"},{"lineNumber":32,"author":{"gitId":"joohwan58"},"content":"        case \"bye\":"},{"lineNumber":33,"author":{"gitId":"joohwan58"},"content":"            isRunning \u003d false;"},{"lineNumber":34,"author":{"gitId":"joohwan58"},"content":"            break;"},{"lineNumber":35,"author":{"gitId":"joohwan58"},"content":"        case \"list\":"},{"lineNumber":36,"author":{"gitId":"joohwan58"},"content":"            printList();"},{"lineNumber":37,"author":{"gitId":"joohwan58"},"content":"            break;"},{"lineNumber":38,"author":{"gitId":"joohwan58"},"content":"        case \"done\":"},{"lineNumber":39,"author":{"gitId":"joohwan58"},"content":"            list[Integer.parseInt(content) - 1].markDone();"},{"lineNumber":40,"author":{"gitId":"joohwan58"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":41,"author":{"gitId":"joohwan58"},"content":"            System.out.println(list[Integer.parseInt(content) - 1].toString());"},{"lineNumber":42,"author":{"gitId":"joohwan58"},"content":"            break;"},{"lineNumber":43,"author":{"gitId":"joohwan58"},"content":"        case \"todo\":"},{"lineNumber":44,"author":{"gitId":"joohwan58"},"content":"            Todo todo \u003d new Todo(content);"},{"lineNumber":45,"author":{"gitId":"joohwan58"},"content":"            addToList(todo);"},{"lineNumber":46,"author":{"gitId":"joohwan58"},"content":"            printAddMessage(todo);"},{"lineNumber":47,"author":{"gitId":"joohwan58"},"content":"            break;"},{"lineNumber":48,"author":{"gitId":"joohwan58"},"content":"        case \"event\":"},{"lineNumber":49,"author":{"gitId":"joohwan58"},"content":"            Event event \u003d new Event(content);"},{"lineNumber":50,"author":{"gitId":"joohwan58"},"content":"            addToList(event);"},{"lineNumber":51,"author":{"gitId":"joohwan58"},"content":"            printAddMessage(event);"},{"lineNumber":52,"author":{"gitId":"joohwan58"},"content":"            break;"},{"lineNumber":53,"author":{"gitId":"joohwan58"},"content":"        case \"deadline\":"},{"lineNumber":54,"author":{"gitId":"joohwan58"},"content":"            Deadline deadline \u003d new Deadline(content);"},{"lineNumber":55,"author":{"gitId":"joohwan58"},"content":"            addToList(deadline);"},{"lineNumber":56,"author":{"gitId":"joohwan58"},"content":"            printAddMessage(deadline);"},{"lineNumber":57,"author":{"gitId":"joohwan58"},"content":"            break;"},{"lineNumber":58,"author":{"gitId":"joohwan58"},"content":"        default:"},{"lineNumber":59,"author":{"gitId":"joohwan58"},"content":"            throw new InvalidInput();"},{"lineNumber":60,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":63,"author":{"gitId":"joohwan58"},"content":"    public static void main(String[] args) {"},{"lineNumber":64,"author":{"gitId":"joohwan58"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":65,"author":{"gitId":"joohwan58"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":66,"author":{"gitId":"joohwan58"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":67,"author":{"gitId":"joohwan58"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":68,"author":{"gitId":"joohwan58"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":69,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":70,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":71,"author":{"gitId":"joohwan58"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":72,"author":{"gitId":"joohwan58"},"content":"        String input;"},{"lineNumber":73,"author":{"gitId":"joohwan58"},"content":"        do {"},{"lineNumber":74,"author":{"gitId":"joohwan58"},"content":"            input \u003d in.nextLine();"},{"lineNumber":75,"author":{"gitId":"joohwan58"},"content":"            String command;"},{"lineNumber":76,"author":{"gitId":"joohwan58"},"content":"            String content \u003d \"\";"},{"lineNumber":77,"author":{"gitId":"joohwan58"},"content":"            if (input.indexOf(\u0027 \u0027) \u003d\u003d -1) {"},{"lineNumber":78,"author":{"gitId":"joohwan58"},"content":"                command \u003d input;"},{"lineNumber":79,"author":{"gitId":"joohwan58"},"content":"            } else {"},{"lineNumber":80,"author":{"gitId":"joohwan58"},"content":"                command \u003d input.substring(0, input.indexOf(\u0027 \u0027));"},{"lineNumber":81,"author":{"gitId":"joohwan58"},"content":"                content \u003d input.substring(input.indexOf(\u0027 \u0027) + 1);"},{"lineNumber":82,"author":{"gitId":"joohwan58"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"joohwan58"},"content":"            try {"},{"lineNumber":84,"author":{"gitId":"joohwan58"},"content":"                executeInstruction(command, content);"},{"lineNumber":85,"author":{"gitId":"joohwan58"},"content":"            } catch (InvalidInput e) {"},{"lineNumber":86,"author":{"gitId":"joohwan58"},"content":"                System.out.println(\"Invalid command used\");"},{"lineNumber":87,"author":{"gitId":"joohwan58"},"content":"            } catch (NoContent | StringIndexOutOfBoundsException e) {"},{"lineNumber":88,"author":{"gitId":"joohwan58"},"content":"                System.out.println(\"Needs a name\");"},{"lineNumber":89,"author":{"gitId":"joohwan58"},"content":"            } catch (NoTime e) {"},{"lineNumber":90,"author":{"gitId":"joohwan58"},"content":"                System.out.println(\"Needs time. Add \\\"/by \u003ctime\u003e\\\" to command.\");"},{"lineNumber":91,"author":{"gitId":"joohwan58"},"content":"            } catch (NullPointerException | ArrayIndexOutOfBoundsException e) {"},{"lineNumber":92,"author":{"gitId":"joohwan58"},"content":"                System.out.println(\"You have inputted an invalid index number\");"},{"lineNumber":93,"author":{"gitId":"joohwan58"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":94,"author":{"gitId":"joohwan58"},"content":"                System.out.println(\"Specify which task to mark as done\");"},{"lineNumber":95,"author":{"gitId":"joohwan58"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"joohwan58"},"content":"        } while (isRunning);"},{"lineNumber":97,"author":{"gitId":"joohwan58"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"joohwan58":96,"-":3}},{"path":"src/main/java/duke/myExceptions/InvalidInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke.myExceptions;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"public class InvalidInput extends Exception{"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":4}},{"path":"src/main/java/duke/myExceptions/NoContent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke.myExceptions;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"public class NoContent extends Exception{"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":4}},{"path":"src/main/java/duke/myExceptions/NoTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke.myExceptions;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"public class NoTime extends Exception{"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":4}},{"path":"src/main/java/duke/myTasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke.myTasks;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoContent;"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoTime;"},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":"public class Deadline extends Event{"},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":"    public Deadline(String content) throws NoContent, NoTime {"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":"        super(content);"},{"lineNumber":9,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":11,"author":{"gitId":"joohwan58"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"joohwan58"},"content":"        return \"[D][\" + this.getStatusIcon() + \"] \" + name + \"(by: \" + time + \")\";"},{"lineNumber":13,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":14}},{"path":"src/main/java/duke/myTasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke.myTasks;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoContent;"},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoTime;"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":"public class Event extends Todo{"},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":"    protected String time;"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":9,"author":{"gitId":"joohwan58"},"content":"    public Event(String content) throws NoContent, NoTime{"},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":"        if (content.equals(\"\")) {"},{"lineNumber":11,"author":{"gitId":"joohwan58"},"content":"            throw new NoContent();"},{"lineNumber":12,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"joohwan58"},"content":"        if (!content.contains(\"/\")) {"},{"lineNumber":14,"author":{"gitId":"joohwan58"},"content":"            throw new NoTime();"},{"lineNumber":15,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"joohwan58"},"content":"        String name \u003d content.substring(0, content.indexOf(\u0027/\u0027) - 1);"},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":"        String time \u003d content.substring(content.indexOf(\u0027/\u0027) + 4);"},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":"        this.name \u003d name;"},{"lineNumber":19,"author":{"gitId":"joohwan58"},"content":"        this.time \u003d time;"},{"lineNumber":20,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":22,"author":{"gitId":"joohwan58"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"joohwan58"},"content":"        return \"[E][\" + this.getStatusIcon() + \"] \" + name + \"(at: \" + time + \")\";"},{"lineNumber":24,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":25}},{"path":"src/main/java/duke/myTasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"package duke.myTasks;"},{"lineNumber":2,"author":{"gitId":"joohwan58"},"content":"import duke.myExceptions.NoContent;"},{"lineNumber":3,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":"public class Todo {"},{"lineNumber":5,"author":{"gitId":"joohwan58"},"content":"    protected String name;"},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":"    public Todo(String name) throws NoContent{"},{"lineNumber":9,"author":{"gitId":"joohwan58"},"content":"        if (name.equals(\"\")) {"},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":"            throw new NoContent();"},{"lineNumber":11,"author":{"gitId":"joohwan58"},"content":"        }"},{"lineNumber":12,"author":{"gitId":"joohwan58"},"content":"        this.name \u003d name;"},{"lineNumber":13,"author":{"gitId":"joohwan58"},"content":"        isDone \u003d false;"},{"lineNumber":14,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":16,"author":{"gitId":"joohwan58"},"content":"    Todo(){"},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":"        this.name \u003d \"\";"},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":"        isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":21,"author":{"gitId":"joohwan58"},"content":"    public void markDone() {"},{"lineNumber":22,"author":{"gitId":"joohwan58"},"content":"        isDone \u003d true;"},{"lineNumber":23,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":25,"author":{"gitId":"joohwan58"},"content":"    public String getStatusIcon() {"},{"lineNumber":26,"author":{"gitId":"joohwan58"},"content":"        return (isDone ? \"\\u2718\" : \" \");"},{"lineNumber":27,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"joohwan58"},"content":""},{"lineNumber":29,"author":{"gitId":"joohwan58"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"joohwan58"},"content":"        return \"[T][\" + this.getStatusIcon() + \"] \" + name;"},{"lineNumber":31,"author":{"gitId":"joohwan58"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"joohwan58"},"content":"}"}],"authorContributionMap":{"joohwan58":32}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"joohwan58":1,"-":20}}]
