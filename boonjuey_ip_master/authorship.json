[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"boonjuey"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"boonjuey"},"content":"1. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"boonjuey":2,"-":24}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"boonjuey"},"content":"1|todo|task1||"},{"lineNumber":2,"author":{"gitId":"boonjuey"},"content":"0|deadline|task2|/by|2020-12-05"},{"lineNumber":3,"author":{"gitId":"boonjuey"},"content":"1|deadline|games|/by|2021-10-21"}],"authorContributionMap":{"boonjuey":3}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonjuey"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":3,"author":{"gitId":"boonjuey"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":5,"author":{"gitId":"boonjuey"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"boonjuey"},"content":"    protected LocalDate byDate;"},{"lineNumber":7,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":8,"author":{"gitId":"boonjuey"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":9,"author":{"gitId":"boonjuey"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"boonjuey"},"content":"        this.byDate \u003d LocalDate.parse(by);"},{"lineNumber":11,"author":{"gitId":"boonjuey"},"content":"        this.separator \u003d \"/by\";"},{"lineNumber":12,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":14,"author":{"gitId":"boonjuey"},"content":"    public String getBy() {"},{"lineNumber":15,"author":{"gitId":"boonjuey"},"content":"        return this.byDate.toString();"},{"lineNumber":16,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":18,"author":{"gitId":"boonjuey"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"boonjuey"},"content":"    public String getType() {"},{"lineNumber":20,"author":{"gitId":"boonjuey"},"content":"        return \"deadline\";"},{"lineNumber":21,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":23,"author":{"gitId":"boonjuey"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"boonjuey"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"boonjuey"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byDate + \")\";"},{"lineNumber":26,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"boonjuey"},"content":"}"}],"authorContributionMap":{"boonjuey":27}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonjuey"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":3,"author":{"gitId":"boonjuey"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"boonjuey"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"boonjuey"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitId":"boonjuey"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"boonjuey"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"boonjuey"},"content":"import java.util.Arrays;"},{"lineNumber":9,"author":{"gitId":"boonjuey"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"boonjuey"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitId":"boonjuey"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":12,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":15,"author":{"gitId":"boonjuey"},"content":"    public static Storage storage \u003d new Storage();"},{"lineNumber":16,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":17,"author":{"gitId":"boonjuey"},"content":"    public static void main(String[] args) {"},{"lineNumber":18,"author":{"gitId":"boonjuey"},"content":"        Messages.welcomeMessage();"},{"lineNumber":19,"author":{"gitId":"boonjuey"},"content":"        Ui.runProgram(storage);"},{"lineNumber":20,"author":{"gitId":"boonjuey"},"content":"        Messages.goodbyeMessage();"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"boonjuey":19,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonjuey"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":3,"author":{"gitId":"boonjuey"},"content":"public class DukeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":5,"author":{"gitId":"boonjuey"},"content":"}"}],"authorContributionMap":{"boonjuey":5}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonjuey"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":3,"author":{"gitId":"boonjuey"},"content":"public class Event extends Task{"},{"lineNumber":4,"author":{"gitId":"boonjuey"},"content":"    protected String atDate;"},{"lineNumber":5,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":6,"author":{"gitId":"boonjuey"},"content":"    public Event(String description, String at) {"},{"lineNumber":7,"author":{"gitId":"boonjuey"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"boonjuey"},"content":"        this.atDate \u003d at;"},{"lineNumber":9,"author":{"gitId":"boonjuey"},"content":"        this.separator \u003d \"/at\";"},{"lineNumber":10,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":12,"author":{"gitId":"boonjuey"},"content":"    public String getSeparatorType() {"},{"lineNumber":13,"author":{"gitId":"boonjuey"},"content":"        return \"at\";"},{"lineNumber":14,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":16,"author":{"gitId":"boonjuey"},"content":"    public String getAt() {"},{"lineNumber":17,"author":{"gitId":"boonjuey"},"content":"        return this.atDate.toString();"},{"lineNumber":18,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":20,"author":{"gitId":"boonjuey"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"boonjuey"},"content":"    public String getType() {"},{"lineNumber":22,"author":{"gitId":"boonjuey"},"content":"        return \"event\";"},{"lineNumber":23,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":25,"author":{"gitId":"boonjuey"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"boonjuey"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"boonjuey"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + atDate + \")\";"},{"lineNumber":28,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"boonjuey"},"content":"}"}],"authorContributionMap":{"boonjuey":29}},{"path":"src/main/java/duke/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonjuey"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":3,"author":{"gitId":"boonjuey"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":5,"author":{"gitId":"boonjuey"},"content":"public class Messages {"},{"lineNumber":6,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":7,"author":{"gitId":"boonjuey"},"content":"    protected static String LINE \u003d \"____________________________________________________________\";"},{"lineNumber":8,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":9,"author":{"gitId":"boonjuey"},"content":"    public static void welcomeMessage(){"},{"lineNumber":10,"author":{"gitId":"boonjuey"},"content":"        String logo \u003d \" _                          \\n\""},{"lineNumber":11,"author":{"gitId":"boonjuey"},"content":"                + \"| |                         \\n\""},{"lineNumber":12,"author":{"gitId":"boonjuey"},"content":"                + \"| |     _   _   ___   _ __  \\n\""},{"lineNumber":13,"author":{"gitId":"boonjuey"},"content":"                + \"| |    | | | | / _ \\\\ | \u0027_ \\\\ \\n\""},{"lineNumber":14,"author":{"gitId":"boonjuey"},"content":"                + \"| |____| |_| || (_) || | | |\\n\""},{"lineNumber":15,"author":{"gitId":"boonjuey"},"content":"                + \"\\\\_____/ \\\\__, | \\\\___/ |_| |_|\\n\""},{"lineNumber":16,"author":{"gitId":"boonjuey"},"content":"                + \"         __/ |              \\n\""},{"lineNumber":17,"author":{"gitId":"boonjuey"},"content":"                + \"        |___/              \\n\";"},{"lineNumber":18,"author":{"gitId":"boonjuey"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":19,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":20,"author":{"gitId":"boonjuey"},"content":"        System.out.println();"},{"lineNumber":21,"author":{"gitId":"boonjuey"},"content":"        System.out.println(LINE);"},{"lineNumber":22,"author":{"gitId":"boonjuey"},"content":"        System.out.println(\"Hello! I\u0027m Lyon\");"},{"lineNumber":23,"author":{"gitId":"boonjuey"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":24,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":26,"author":{"gitId":"boonjuey"},"content":"    public static void badUserInputMessage(){"},{"lineNumber":27,"author":{"gitId":"boonjuey"},"content":"        System.out.println(LINE);"},{"lineNumber":28,"author":{"gitId":"boonjuey"},"content":"        System.out.println(\"I\u0027m sorry, your input does not comply with the available features I have.\");"},{"lineNumber":29,"author":{"gitId":"boonjuey"},"content":"        System.out.println(\"Kindly try again!\");"},{"lineNumber":30,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":32,"author":{"gitId":"boonjuey"},"content":"    public static void markTaskDoneMessage(ArrayList\u003cTask\u003e tasks, int index){"},{"lineNumber":33,"author":{"gitId":"boonjuey"},"content":"        System.out.println(LINE);"},{"lineNumber":34,"author":{"gitId":"boonjuey"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":35,"author":{"gitId":"boonjuey"},"content":"        System.out.println(tasks.get(index).toString());"},{"lineNumber":36,"author":{"gitId":"boonjuey"},"content":"        System.out.println(LINE);"},{"lineNumber":37,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":39,"author":{"gitId":"boonjuey"},"content":"    public static void deleteTaskMessage(ArrayList\u003cTask\u003e tasks, int index){"},{"lineNumber":40,"author":{"gitId":"boonjuey"},"content":"        System.out.println(LINE);"},{"lineNumber":41,"author":{"gitId":"boonjuey"},"content":"        System.out.println(\"Noted! I have removed this task:\");"},{"lineNumber":42,"author":{"gitId":"boonjuey"},"content":"        System.out.println(tasks.get(index).toString());"},{"lineNumber":43,"author":{"gitId":"boonjuey"},"content":"        System.out.println(LINE);"},{"lineNumber":44,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":46,"author":{"gitId":"boonjuey"},"content":"    public static void newItemMessage(ArrayList\u003cTask\u003e tasks, Task newItem){"},{"lineNumber":47,"author":{"gitId":"boonjuey"},"content":"        System.out.println(LINE);"},{"lineNumber":48,"author":{"gitId":"boonjuey"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":49,"author":{"gitId":"boonjuey"},"content":"        System.out.println(newItem.toString());"},{"lineNumber":50,"author":{"gitId":"boonjuey"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":51,"author":{"gitId":"boonjuey"},"content":"        System.out.println(LINE);"},{"lineNumber":52,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":54,"author":{"gitId":"boonjuey"},"content":"    public static void goodbyeMessage(){"},{"lineNumber":55,"author":{"gitId":"boonjuey"},"content":"        System.out.println(LINE);"},{"lineNumber":56,"author":{"gitId":"boonjuey"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":57,"author":{"gitId":"boonjuey"},"content":"        System.out.println(LINE);"},{"lineNumber":58,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":60,"author":{"gitId":"boonjuey"},"content":"    public static void noFindResults(String term){"},{"lineNumber":61,"author":{"gitId":"boonjuey"},"content":"        System.out.println(LINE);"},{"lineNumber":62,"author":{"gitId":"boonjuey"},"content":"        System.out.println(\"No results found for search term: \" + term);"},{"lineNumber":63,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"boonjuey"},"content":"}"}],"authorContributionMap":{"boonjuey":64}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonjuey"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":3,"author":{"gitId":"boonjuey"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":5,"author":{"gitId":"boonjuey"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"boonjuey"},"content":"    public static boolean checkForSubstring(String[] input, String substring){"},{"lineNumber":7,"author":{"gitId":"boonjuey"},"content":"        for(String string : input){"},{"lineNumber":8,"author":{"gitId":"boonjuey"},"content":"            if(string.equals(substring)){"},{"lineNumber":9,"author":{"gitId":"boonjuey"},"content":"                return true;"},{"lineNumber":10,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":11,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":12,"author":{"gitId":"boonjuey"},"content":"        return false;"},{"lineNumber":13,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":15,"author":{"gitId":"boonjuey"},"content":"    public static int indexOfSubstring(String[] input, String substring){"},{"lineNumber":16,"author":{"gitId":"boonjuey"},"content":"        int index \u003d 0;"},{"lineNumber":17,"author":{"gitId":"boonjuey"},"content":"        for(String string : input){"},{"lineNumber":18,"author":{"gitId":"boonjuey"},"content":"            if(string.equals(substring)){"},{"lineNumber":19,"author":{"gitId":"boonjuey"},"content":"                return index;"},{"lineNumber":20,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":21,"author":{"gitId":"boonjuey"},"content":"            index++;"},{"lineNumber":22,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"boonjuey"},"content":"        return -1;"},{"lineNumber":24,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":26,"author":{"gitId":"boonjuey"},"content":"    public static boolean checkIfInteger(String s) {"},{"lineNumber":27,"author":{"gitId":"boonjuey"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"boonjuey"},"content":"            Integer.parseInt(s);"},{"lineNumber":29,"author":{"gitId":"boonjuey"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":30,"author":{"gitId":"boonjuey"},"content":"            return false;"},{"lineNumber":31,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"boonjuey"},"content":"        return true;"},{"lineNumber":33,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":35,"author":{"gitId":"boonjuey"},"content":"    public static boolean isSpecialCharacterPresent(String s){"},{"lineNumber":36,"author":{"gitId":"boonjuey"},"content":"        if(s.contains(\"|\")){"},{"lineNumber":37,"author":{"gitId":"boonjuey"},"content":"            System.out.println(\"Your input cannot contain the special character \u0027|\u0027\");"},{"lineNumber":38,"author":{"gitId":"boonjuey"},"content":"            return true;"},{"lineNumber":39,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"boonjuey"},"content":"        return false;"},{"lineNumber":41,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":43,"author":{"gitId":"boonjuey"},"content":"    public static boolean checkValidLocalDate(String s){"},{"lineNumber":44,"author":{"gitId":"boonjuey"},"content":"        try{"},{"lineNumber":45,"author":{"gitId":"boonjuey"},"content":"            LocalDate date \u003d LocalDate.parse(s);"},{"lineNumber":46,"author":{"gitId":"boonjuey"},"content":"            return true;"},{"lineNumber":47,"author":{"gitId":"boonjuey"},"content":"        } catch (Exception e){"},{"lineNumber":48,"author":{"gitId":"boonjuey"},"content":"            return false;"},{"lineNumber":49,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"boonjuey"},"content":"}"}],"authorContributionMap":{"boonjuey":51}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonjuey"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":3,"author":{"gitId":"boonjuey"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"boonjuey"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"boonjuey"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"boonjuey"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"boonjuey"},"content":"import java.nio.file.Files;"},{"lineNumber":8,"author":{"gitId":"boonjuey"},"content":"import java.nio.file.Path;"},{"lineNumber":9,"author":{"gitId":"boonjuey"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"boonjuey"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitId":"boonjuey"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":13,"author":{"gitId":"boonjuey"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"boonjuey"},"content":"    private Path dataDirectory;"},{"lineNumber":15,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":16,"author":{"gitId":"boonjuey"},"content":"    private Path dataFileDirectory;"},{"lineNumber":17,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":18,"author":{"gitId":"boonjuey"},"content":"    public Storage(){"},{"lineNumber":19,"author":{"gitId":"boonjuey"},"content":"        this.dataDirectory \u003d Path.of(System.getProperty(\"user.dir\") + \"\\\\data\");"},{"lineNumber":20,"author":{"gitId":"boonjuey"},"content":"        this.dataFileDirectory \u003d Path.of(System.getProperty(\"user.dir\") + \"\\\\data\" + \"\\\\duke.txt\");"},{"lineNumber":21,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":23,"author":{"gitId":"boonjuey"},"content":"    public void writeToDisk(ArrayList\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":24,"author":{"gitId":"boonjuey"},"content":"        //Each time I want to write to the Disk, I clear away the entire contents of the data file and write everything"},{"lineNumber":25,"author":{"gitId":"boonjuey"},"content":"        //Done by deleting the file and creating it again"},{"lineNumber":26,"author":{"gitId":"boonjuey"},"content":"        File clear \u003d new File(String.valueOf(this.dataFileDirectory));"},{"lineNumber":27,"author":{"gitId":"boonjuey"},"content":"        clear.delete();"},{"lineNumber":28,"author":{"gitId":"boonjuey"},"content":"        createNewFile();"},{"lineNumber":29,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":30,"author":{"gitId":"boonjuey"},"content":"        //To write to the new file, I will append 1 task from the ArrayList at a time"},{"lineNumber":31,"author":{"gitId":"boonjuey"},"content":"        FileWriter fw \u003d new FileWriter(String.valueOf(this.dataFileDirectory), true);"},{"lineNumber":32,"author":{"gitId":"boonjuey"},"content":"        for(Task task : tasks){"},{"lineNumber":33,"author":{"gitId":"boonjuey"},"content":"            String temp \u003d \"\";"},{"lineNumber":34,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":35,"author":{"gitId":"boonjuey"},"content":"            if(task.getDoneStatus()){"},{"lineNumber":36,"author":{"gitId":"boonjuey"},"content":"                temp +\u003d \"1|\";"},{"lineNumber":37,"author":{"gitId":"boonjuey"},"content":"            } else {"},{"lineNumber":38,"author":{"gitId":"boonjuey"},"content":"                temp +\u003d \"0|\";"},{"lineNumber":39,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"boonjuey"},"content":"            temp +\u003d task.getType() + \"|\" + task.getDescription() + \"|\" + task.getSeparator() + \"|\";"},{"lineNumber":41,"author":{"gitId":"boonjuey"},"content":"            if(task instanceof Event) {"},{"lineNumber":42,"author":{"gitId":"boonjuey"},"content":"                temp +\u003d ((Event) task).getAt();"},{"lineNumber":43,"author":{"gitId":"boonjuey"},"content":"            } else if(task instanceof Deadline){"},{"lineNumber":44,"author":{"gitId":"boonjuey"},"content":"                temp +\u003d ((Deadline) task).getBy();"},{"lineNumber":45,"author":{"gitId":"boonjuey"},"content":"            } else {"},{"lineNumber":46,"author":{"gitId":"boonjuey"},"content":"                temp +\u003d \"\";"},{"lineNumber":47,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"boonjuey"},"content":"            temp +\u003d \"\\n\";"},{"lineNumber":49,"author":{"gitId":"boonjuey"},"content":"            fw.write(temp);"},{"lineNumber":50,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"boonjuey"},"content":"        fw.close();"},{"lineNumber":52,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":54,"author":{"gitId":"boonjuey"},"content":"    public void wrapWriteToDisk(ArrayList\u003cTask\u003e tasks){"},{"lineNumber":55,"author":{"gitId":"boonjuey"},"content":"        try{"},{"lineNumber":56,"author":{"gitId":"boonjuey"},"content":"            writeToDisk(tasks);"},{"lineNumber":57,"author":{"gitId":"boonjuey"},"content":"        } catch (IOException e) {"},{"lineNumber":58,"author":{"gitId":"boonjuey"},"content":"            System.out.println(\"Issues with writing to .txt file\");"},{"lineNumber":59,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":62,"author":{"gitId":"boonjuey"},"content":"    public void loadDataFromDisk(TaskList taskList) throws FileNotFoundException {"},{"lineNumber":63,"author":{"gitId":"boonjuey"},"content":"        File dataFile \u003d new File(String.valueOf(dataFileDirectory));"},{"lineNumber":64,"author":{"gitId":"boonjuey"},"content":"        Scanner s \u003d new Scanner(dataFile);"},{"lineNumber":65,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":66,"author":{"gitId":"boonjuey"},"content":"        while(s.hasNext()){"},{"lineNumber":67,"author":{"gitId":"boonjuey"},"content":"            //format I am using is, to use index 0 to store the status."},{"lineNumber":68,"author":{"gitId":"boonjuey"},"content":"            //E.g:"},{"lineNumber":69,"author":{"gitId":"boonjuey"},"content":"            //1|event|memes   r|/at|   next Friday"},{"lineNumber":70,"author":{"gitId":"boonjuey"},"content":"            String temp \u003d s.nextLine();"},{"lineNumber":71,"author":{"gitId":"boonjuey"},"content":"            String[] command \u003d temp.split(\"\\\\|\");"},{"lineNumber":72,"author":{"gitId":"boonjuey"},"content":"            Task tempTask \u003d taskList.populateArrayList(Arrays.copyOfRange(command,1, command.length), taskList.getTasks());"},{"lineNumber":73,"author":{"gitId":"boonjuey"},"content":"            if (command[0].equals(\"1\")){"},{"lineNumber":74,"author":{"gitId":"boonjuey"},"content":"                tempTask.setAsDone();"},{"lineNumber":75,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"boonjuey"},"content":"        s.close();"},{"lineNumber":78,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":80,"author":{"gitId":"boonjuey"},"content":"    public void createNewFile() {"},{"lineNumber":81,"author":{"gitId":"boonjuey"},"content":"        try{"},{"lineNumber":82,"author":{"gitId":"boonjuey"},"content":"            // If directory does not exist, then create the directory"},{"lineNumber":83,"author":{"gitId":"boonjuey"},"content":"            // If directory exists already, just does nothing"},{"lineNumber":84,"author":{"gitId":"boonjuey"},"content":"            checkForDirectory();"},{"lineNumber":85,"author":{"gitId":"boonjuey"},"content":"        } catch (IOException e) {"},{"lineNumber":86,"author":{"gitId":"boonjuey"},"content":"            System.out.println(\"A serious error has occurred\");"},{"lineNumber":87,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":89,"author":{"gitId":"boonjuey"},"content":"        try{"},{"lineNumber":90,"author":{"gitId":"boonjuey"},"content":"            // If file does not exist, then create the file"},{"lineNumber":91,"author":{"gitId":"boonjuey"},"content":"            checkForFile();"},{"lineNumber":92,"author":{"gitId":"boonjuey"},"content":"        } catch (IOException e) {"},{"lineNumber":93,"author":{"gitId":"boonjuey"},"content":"            System.out.println(\"A serious error has occurred\");"},{"lineNumber":94,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":97,"author":{"gitId":"boonjuey"},"content":"    public void checkForFile() throws IOException {"},{"lineNumber":98,"author":{"gitId":"boonjuey"},"content":"        if(!Files.exists(this.dataFileDirectory)){"},{"lineNumber":99,"author":{"gitId":"boonjuey"},"content":"            File newFile \u003d new File(String.valueOf(this.dataFileDirectory));"},{"lineNumber":100,"author":{"gitId":"boonjuey"},"content":"            newFile.createNewFile();"},{"lineNumber":101,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":104,"author":{"gitId":"boonjuey"},"content":"    public void checkForDirectory() throws IOException {"},{"lineNumber":105,"author":{"gitId":"boonjuey"},"content":"        if(!Files.exists(this.dataDirectory)){"},{"lineNumber":106,"author":{"gitId":"boonjuey"},"content":"            Files.createDirectory(this.dataDirectory);"},{"lineNumber":107,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"boonjuey"},"content":"}"}],"authorContributionMap":{"boonjuey":109}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonjuey"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":3,"author":{"gitId":"boonjuey"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"boonjuey"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"boonjuey"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"boonjuey"},"content":"    protected String separator \u003d \"\";"},{"lineNumber":7,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":8,"author":{"gitId":"boonjuey"},"content":"    public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"boonjuey"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"boonjuey"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":13,"author":{"gitId":"boonjuey"},"content":"    public String getType() {"},{"lineNumber":14,"author":{"gitId":"boonjuey"},"content":"        return \"task\";"},{"lineNumber":15,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":17,"author":{"gitId":"boonjuey"},"content":"    public String getDescription() {"},{"lineNumber":18,"author":{"gitId":"boonjuey"},"content":"        return this.description;"},{"lineNumber":19,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":21,"author":{"gitId":"boonjuey"},"content":"    public String getStatusIcon() {"},{"lineNumber":22,"author":{"gitId":"boonjuey"},"content":"        //return space or X symbols"},{"lineNumber":23,"author":{"gitId":"boonjuey"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":24,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":26,"author":{"gitId":"boonjuey"},"content":"    public boolean getDoneStatus() {"},{"lineNumber":27,"author":{"gitId":"boonjuey"},"content":"        return this.isDone;"},{"lineNumber":28,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":30,"author":{"gitId":"boonjuey"},"content":"    public String getSeparator() {"},{"lineNumber":31,"author":{"gitId":"boonjuey"},"content":"        return this.separator;"},{"lineNumber":32,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":34,"author":{"gitId":"boonjuey"},"content":"    public void setAsDone(){"},{"lineNumber":35,"author":{"gitId":"boonjuey"},"content":"        this.isDone \u003d true;"},{"lineNumber":36,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":38,"author":{"gitId":"boonjuey"},"content":"    public String toString(){"},{"lineNumber":39,"author":{"gitId":"boonjuey"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;"},{"lineNumber":40,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":42,"author":{"gitId":"boonjuey"},"content":"}"}],"authorContributionMap":{"boonjuey":42}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonjuey"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":3,"author":{"gitId":"boonjuey"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"boonjuey"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":6,"author":{"gitId":"boonjuey"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"boonjuey"},"content":"    protected ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":8,"author":{"gitId":"boonjuey"},"content":"    protected Storage storage \u003d new Storage();"},{"lineNumber":9,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":10,"author":{"gitId":"boonjuey"},"content":"    public TaskList(){"},{"lineNumber":11,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":12,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":14,"author":{"gitId":"boonjuey"},"content":"    public Task populateArrayList(String[] command, ArrayList\u003cTask\u003e tasks){"},{"lineNumber":15,"author":{"gitId":"boonjuey"},"content":"        Task newItem \u003d null;"},{"lineNumber":16,"author":{"gitId":"boonjuey"},"content":"        switch(command[0]){"},{"lineNumber":17,"author":{"gitId":"boonjuey"},"content":"        case \"list\":"},{"lineNumber":18,"author":{"gitId":"boonjuey"},"content":"            try{"},{"lineNumber":19,"author":{"gitId":"boonjuey"},"content":"                listCommand(command, tasks);"},{"lineNumber":20,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":21,"author":{"gitId":"boonjuey"},"content":"            catch (DukeException e){"},{"lineNumber":22,"author":{"gitId":"boonjuey"},"content":"                System.out.println(\"The list command can only contain 1 word.\");"},{"lineNumber":23,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"boonjuey"},"content":"            catch (Exception e){"},{"lineNumber":25,"author":{"gitId":"boonjuey"},"content":"                Messages.badUserInputMessage();"},{"lineNumber":26,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"boonjuey"},"content":"            break;"},{"lineNumber":28,"author":{"gitId":"boonjuey"},"content":"        case \"done\":"},{"lineNumber":29,"author":{"gitId":"boonjuey"},"content":"            try{"},{"lineNumber":30,"author":{"gitId":"boonjuey"},"content":"                doneCommand(command, tasks);"},{"lineNumber":31,"author":{"gitId":"boonjuey"},"content":"                storage.wrapWriteToDisk(tasks);"},{"lineNumber":32,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"boonjuey"},"content":"            catch (DukeException e){"},{"lineNumber":34,"author":{"gitId":"boonjuey"},"content":"                System.out.println(\"The done command consists of the word done, and an integer.\");"},{"lineNumber":35,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"boonjuey"},"content":"            catch (Exception e){"},{"lineNumber":37,"author":{"gitId":"boonjuey"},"content":"                Messages.badUserInputMessage();"},{"lineNumber":38,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"boonjuey"},"content":"            break;"},{"lineNumber":40,"author":{"gitId":"boonjuey"},"content":"        case \"todo\":"},{"lineNumber":41,"author":{"gitId":"boonjuey"},"content":"            try{"},{"lineNumber":42,"author":{"gitId":"boonjuey"},"content":"                newItem \u003d todoCommand(command, tasks);"},{"lineNumber":43,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"boonjuey"},"content":"            catch (DukeException e){"},{"lineNumber":45,"author":{"gitId":"boonjuey"},"content":"                System.out.println(\"The description of a todo cannot be empty!\");"},{"lineNumber":46,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"boonjuey"},"content":"            catch (Exception e){"},{"lineNumber":48,"author":{"gitId":"boonjuey"},"content":"                Messages.badUserInputMessage();"},{"lineNumber":49,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"boonjuey"},"content":"            break;"},{"lineNumber":51,"author":{"gitId":"boonjuey"},"content":"        case \"event\":"},{"lineNumber":52,"author":{"gitId":"boonjuey"},"content":"            try{"},{"lineNumber":53,"author":{"gitId":"boonjuey"},"content":"                newItem \u003d eventCommand(command, tasks);"},{"lineNumber":54,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"boonjuey"},"content":"            catch (DukeException e){"},{"lineNumber":56,"author":{"gitId":"boonjuey"},"content":"                System.out.println(\"Your input should contain /at separated by spaces, \" +"},{"lineNumber":57,"author":{"gitId":"boonjuey"},"content":"                        \"followed by the event time.\");"},{"lineNumber":58,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"boonjuey"},"content":"            catch(Exception e){"},{"lineNumber":60,"author":{"gitId":"boonjuey"},"content":"                Messages.badUserInputMessage();"},{"lineNumber":61,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"boonjuey"},"content":"            break;"},{"lineNumber":63,"author":{"gitId":"boonjuey"},"content":"        case \"deadline\":"},{"lineNumber":64,"author":{"gitId":"boonjuey"},"content":"            try{"},{"lineNumber":65,"author":{"gitId":"boonjuey"},"content":"                newItem \u003d deadlineCommand(command, tasks);"},{"lineNumber":66,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"boonjuey"},"content":"            catch(DukeException e){"},{"lineNumber":68,"author":{"gitId":"boonjuey"},"content":"                System.out.println(\"Your input should contain /by separated by spaces, \" +"},{"lineNumber":69,"author":{"gitId":"boonjuey"},"content":"                        \"followed by the deadline.\");"},{"lineNumber":70,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"boonjuey"},"content":"            catch (Exception e){"},{"lineNumber":72,"author":{"gitId":"boonjuey"},"content":"                Messages.badUserInputMessage();"},{"lineNumber":73,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"boonjuey"},"content":"            break;"},{"lineNumber":75,"author":{"gitId":"boonjuey"},"content":"        case \"bye\":"},{"lineNumber":76,"author":{"gitId":"boonjuey"},"content":"            if(command.length\u003e1){"},{"lineNumber":77,"author":{"gitId":"boonjuey"},"content":"                System.out.println(\"I have no such feature!\");"},{"lineNumber":78,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"boonjuey"},"content":"            break;"},{"lineNumber":80,"author":{"gitId":"boonjuey"},"content":"        case \"delete\":"},{"lineNumber":81,"author":{"gitId":"boonjuey"},"content":"            try{"},{"lineNumber":82,"author":{"gitId":"boonjuey"},"content":"                deleteCommand(command, tasks);"},{"lineNumber":83,"author":{"gitId":"boonjuey"},"content":"                storage.wrapWriteToDisk(tasks);"},{"lineNumber":84,"author":{"gitId":"boonjuey"},"content":"            } catch (DukeException e) {"},{"lineNumber":85,"author":{"gitId":"boonjuey"},"content":"                System.out.println(\"The delete command consists of the word delete, and an integer.\");"},{"lineNumber":86,"author":{"gitId":"boonjuey"},"content":"            } catch (Exception e) {"},{"lineNumber":87,"author":{"gitId":"boonjuey"},"content":"                Messages.badUserInputMessage();"},{"lineNumber":88,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"boonjuey"},"content":"            break;"},{"lineNumber":90,"author":{"gitId":"boonjuey"},"content":"        case \"find\":"},{"lineNumber":91,"author":{"gitId":"boonjuey"},"content":"            findCommand(command, tasks);"},{"lineNumber":92,"author":{"gitId":"boonjuey"},"content":"            break;"},{"lineNumber":93,"author":{"gitId":"boonjuey"},"content":"        default:"},{"lineNumber":94,"author":{"gitId":"boonjuey"},"content":"            System.out.println(\"I have no such feature!\");"},{"lineNumber":95,"author":{"gitId":"boonjuey"},"content":"            break;"},{"lineNumber":96,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"boonjuey"},"content":"        return newItem;"},{"lineNumber":98,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":100,"author":{"gitId":"boonjuey"},"content":"    public void findCommand(String[] command, ArrayList\u003cTask\u003e tasks){"},{"lineNumber":101,"author":{"gitId":"boonjuey"},"content":"        if(command.length \u003d\u003d 1){"},{"lineNumber":102,"author":{"gitId":"boonjuey"},"content":"            System.out.println(\"Kindly enter a term to search for!\");"},{"lineNumber":103,"author":{"gitId":"boonjuey"},"content":"        } else {"},{"lineNumber":104,"author":{"gitId":"boonjuey"},"content":"            String searchTerm \u003d String.join(\" \", Arrays.copyOfRange(command, 1, command.length));"},{"lineNumber":105,"author":{"gitId":"boonjuey"},"content":"            String searchString;"},{"lineNumber":106,"author":{"gitId":"boonjuey"},"content":"            int count \u003d 0;"},{"lineNumber":107,"author":{"gitId":"boonjuey"},"content":"            int index \u003d 1;"},{"lineNumber":108,"author":{"gitId":"boonjuey"},"content":"            for (Task task : tasks) {"},{"lineNumber":109,"author":{"gitId":"boonjuey"},"content":"                searchString \u003d task.getDescription();"},{"lineNumber":110,"author":{"gitId":"boonjuey"},"content":"                searchString +\u003d \" \";"},{"lineNumber":111,"author":{"gitId":"boonjuey"},"content":"                if (task instanceof Deadline) {"},{"lineNumber":112,"author":{"gitId":"boonjuey"},"content":"                    searchString +\u003d ((Deadline) task).getBy();"},{"lineNumber":113,"author":{"gitId":"boonjuey"},"content":"                } else if (task instanceof Event) {"},{"lineNumber":114,"author":{"gitId":"boonjuey"},"content":"                    searchString +\u003d ((Event) task).getAt();"},{"lineNumber":115,"author":{"gitId":"boonjuey"},"content":"                }"},{"lineNumber":116,"author":{"gitId":"boonjuey"},"content":"                if(searchString.contains(searchTerm)){"},{"lineNumber":117,"author":{"gitId":"boonjuey"},"content":"                    System.out.println(index + \".\" + task.toString());"},{"lineNumber":118,"author":{"gitId":"boonjuey"},"content":"                    count +\u003d 1;"},{"lineNumber":119,"author":{"gitId":"boonjuey"},"content":"                }"},{"lineNumber":120,"author":{"gitId":"boonjuey"},"content":"                index +\u003d 1;"},{"lineNumber":121,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"boonjuey"},"content":"            if(count \u003d\u003d 0){"},{"lineNumber":123,"author":{"gitId":"boonjuey"},"content":"                Messages.noFindResults(searchTerm);"},{"lineNumber":124,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":128,"author":{"gitId":"boonjuey"},"content":"    public void listCommand(String[] command, ArrayList\u003cTask\u003e tasks) throws DukeException{"},{"lineNumber":129,"author":{"gitId":"boonjuey"},"content":"        if(command.length \u003d\u003d 1){"},{"lineNumber":130,"author":{"gitId":"boonjuey"},"content":"            int index \u003d 1;"},{"lineNumber":131,"author":{"gitId":"boonjuey"},"content":"            System.out.println(Messages.LINE);"},{"lineNumber":132,"author":{"gitId":"boonjuey"},"content":"            for (Task task : tasks) {"},{"lineNumber":133,"author":{"gitId":"boonjuey"},"content":"                System.out.println(index + \".\" + task.toString());"},{"lineNumber":134,"author":{"gitId":"boonjuey"},"content":"                index +\u003d 1;"},{"lineNumber":135,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":136,"author":{"gitId":"boonjuey"},"content":"            System.out.println(Messages.LINE);"},{"lineNumber":137,"author":{"gitId":"boonjuey"},"content":"        } else {"},{"lineNumber":138,"author":{"gitId":"boonjuey"},"content":"            throw new DukeException();"},{"lineNumber":139,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":142,"author":{"gitId":"boonjuey"},"content":"    public void doneCommand(String[] command, ArrayList\u003cTask\u003e tasks) throws DukeException{"},{"lineNumber":143,"author":{"gitId":"boonjuey"},"content":"        if(command.length \u003d\u003d 2 \u0026\u0026 Parser.checkIfInteger(command[1])){"},{"lineNumber":144,"author":{"gitId":"boonjuey"},"content":"            int index \u003d Integer.parseInt(command[1]) - 1;"},{"lineNumber":145,"author":{"gitId":"boonjuey"},"content":"            if (0 \u003c\u003d index \u0026\u0026 index \u003c tasks.size()) {"},{"lineNumber":146,"author":{"gitId":"boonjuey"},"content":"                // If the given value to set as done is an existing index"},{"lineNumber":147,"author":{"gitId":"boonjuey"},"content":"                tasks.get(index).setAsDone();"},{"lineNumber":148,"author":{"gitId":"boonjuey"},"content":"                Messages.markTaskDoneMessage(tasks, index);"},{"lineNumber":149,"author":{"gitId":"boonjuey"},"content":"            } else {"},{"lineNumber":150,"author":{"gitId":"boonjuey"},"content":"                System.out.println(\"The input index that you have selected to indicate as done, \"+"},{"lineNumber":151,"author":{"gitId":"boonjuey"},"content":"                        \"is out of the range of existing indexes!\");"},{"lineNumber":152,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":153,"author":{"gitId":"boonjuey"},"content":"        } else {"},{"lineNumber":154,"author":{"gitId":"boonjuey"},"content":"            throw new DukeException();"},{"lineNumber":155,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":158,"author":{"gitId":"boonjuey"},"content":"    public void deleteCommand(String[] command, ArrayList\u003cTask\u003e tasks) throws DukeException{"},{"lineNumber":159,"author":{"gitId":"boonjuey"},"content":"        if(command.length \u003d\u003d 2 \u0026\u0026 Parser.checkIfInteger(command[1])){"},{"lineNumber":160,"author":{"gitId":"boonjuey"},"content":"            int index \u003d Integer.parseInt(command[1]) - 1;"},{"lineNumber":161,"author":{"gitId":"boonjuey"},"content":"            if (0 \u003c\u003d index \u0026\u0026 index \u003c tasks.size()) {"},{"lineNumber":162,"author":{"gitId":"boonjuey"},"content":"                // If the given value to delete is an existing index, allow deletion"},{"lineNumber":163,"author":{"gitId":"boonjuey"},"content":"                Messages.deleteTaskMessage(tasks, index);"},{"lineNumber":164,"author":{"gitId":"boonjuey"},"content":"                tasks.remove(index);"},{"lineNumber":165,"author":{"gitId":"boonjuey"},"content":"            } else {"},{"lineNumber":166,"author":{"gitId":"boonjuey"},"content":"                System.out.println(\"The input index that you have selected to delete, \"+"},{"lineNumber":167,"author":{"gitId":"boonjuey"},"content":"                        \"is out of the range of existing indexes!\");"},{"lineNumber":168,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":169,"author":{"gitId":"boonjuey"},"content":"        } else {"},{"lineNumber":170,"author":{"gitId":"boonjuey"},"content":"            throw new DukeException();"},{"lineNumber":171,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":174,"author":{"gitId":"boonjuey"},"content":"    public Task todoCommand(String[] command, ArrayList\u003cTask\u003e tasks) throws DukeException{"},{"lineNumber":175,"author":{"gitId":"boonjuey"},"content":"        if(command.length \u003e 1) {"},{"lineNumber":176,"author":{"gitId":"boonjuey"},"content":"            Task newItem \u003d new Todo(String.join(\" \", Arrays.copyOfRange(command, 1, command.length)));"},{"lineNumber":177,"author":{"gitId":"boonjuey"},"content":"            tasks.add(newItem);"},{"lineNumber":178,"author":{"gitId":"boonjuey"},"content":"            return newItem;"},{"lineNumber":179,"author":{"gitId":"boonjuey"},"content":"        } else {"},{"lineNumber":180,"author":{"gitId":"boonjuey"},"content":"            throw new DukeException();"},{"lineNumber":181,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":184,"author":{"gitId":"boonjuey"},"content":"    public Task eventCommand(String[] command, ArrayList\u003cTask\u003e tasks) throws DukeException{"},{"lineNumber":185,"author":{"gitId":"boonjuey"},"content":"        if(Parser.checkForSubstring(command, \"/at\")){"},{"lineNumber":186,"author":{"gitId":"boonjuey"},"content":"            int separatorIndex \u003d Parser.indexOfSubstring(command, \"/at\");"},{"lineNumber":187,"author":{"gitId":"boonjuey"},"content":"            String description \u003d String.join(\" \", Arrays.copyOfRange(command,"},{"lineNumber":188,"author":{"gitId":"boonjuey"},"content":"                    1, separatorIndex));"},{"lineNumber":189,"author":{"gitId":"boonjuey"},"content":"            String at \u003d String.join(\" \",Arrays.copyOfRange(command,"},{"lineNumber":190,"author":{"gitId":"boonjuey"},"content":"                    separatorIndex + 1, command.length));"},{"lineNumber":191,"author":{"gitId":"boonjuey"},"content":"            if(Parser.checkValidLocalDate(at)){"},{"lineNumber":192,"author":{"gitId":"boonjuey"},"content":"                Task newItem \u003d new Deadline(description, at);"},{"lineNumber":193,"author":{"gitId":"boonjuey"},"content":"                tasks.add(newItem);"},{"lineNumber":194,"author":{"gitId":"boonjuey"},"content":"                return newItem;"},{"lineNumber":195,"author":{"gitId":"boonjuey"},"content":"            } else{"},{"lineNumber":196,"author":{"gitId":"boonjuey"},"content":"                System.out.println(\"Dates are to be entered in the following format: yyyy-mm-dd\");"},{"lineNumber":197,"author":{"gitId":"boonjuey"},"content":"                return null;"},{"lineNumber":198,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":199,"author":{"gitId":"boonjuey"},"content":"        } else{"},{"lineNumber":200,"author":{"gitId":"boonjuey"},"content":"            throw new DukeException();"},{"lineNumber":201,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":202,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":204,"author":{"gitId":"boonjuey"},"content":"    public Task deadlineCommand(String[] command, ArrayList\u003cTask\u003e tasks) throws DukeException{"},{"lineNumber":205,"author":{"gitId":"boonjuey"},"content":"        if(Parser.checkForSubstring(command, \"/by\")){"},{"lineNumber":206,"author":{"gitId":"boonjuey"},"content":"            int separatorIndex \u003d Parser.indexOfSubstring(command, \"/by\");"},{"lineNumber":207,"author":{"gitId":"boonjuey"},"content":"            String description \u003d String.join(\" \", Arrays.copyOfRange(command,"},{"lineNumber":208,"author":{"gitId":"boonjuey"},"content":"                    1, separatorIndex));"},{"lineNumber":209,"author":{"gitId":"boonjuey"},"content":"            String by \u003d String.join(\" \",Arrays.copyOfRange(command,"},{"lineNumber":210,"author":{"gitId":"boonjuey"},"content":"                    separatorIndex + 1, command.length));"},{"lineNumber":211,"author":{"gitId":"boonjuey"},"content":"            if(Parser.checkValidLocalDate(by)){"},{"lineNumber":212,"author":{"gitId":"boonjuey"},"content":"                Task newItem \u003d new Deadline(description, by);"},{"lineNumber":213,"author":{"gitId":"boonjuey"},"content":"                tasks.add(newItem);"},{"lineNumber":214,"author":{"gitId":"boonjuey"},"content":"                return newItem;"},{"lineNumber":215,"author":{"gitId":"boonjuey"},"content":"            } else{"},{"lineNumber":216,"author":{"gitId":"boonjuey"},"content":"                System.out.println(\"Dates are to be entered in the following format: yyyy-mm-dd\");"},{"lineNumber":217,"author":{"gitId":"boonjuey"},"content":"                return null;"},{"lineNumber":218,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":219,"author":{"gitId":"boonjuey"},"content":"        } else{"},{"lineNumber":220,"author":{"gitId":"boonjuey"},"content":"            throw new DukeException();"},{"lineNumber":221,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":222,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":224,"author":{"gitId":"boonjuey"},"content":"    public ArrayList\u003cTask\u003e getTasks(){"},{"lineNumber":225,"author":{"gitId":"boonjuey"},"content":"        return this.tasks;"},{"lineNumber":226,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":227,"author":{"gitId":"boonjuey"},"content":"}"}],"authorContributionMap":{"boonjuey":227}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonjuey"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":3,"author":{"gitId":"boonjuey"},"content":"public class Todo extends Task{"},{"lineNumber":4,"author":{"gitId":"boonjuey"},"content":"    public Todo(String description) {"},{"lineNumber":5,"author":{"gitId":"boonjuey"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":8,"author":{"gitId":"boonjuey"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"boonjuey"},"content":"    public String getType() {"},{"lineNumber":10,"author":{"gitId":"boonjuey"},"content":"        return \"todo\";"},{"lineNumber":11,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":13,"author":{"gitId":"boonjuey"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"boonjuey"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"boonjuey"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":16,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"boonjuey"},"content":"}"}],"authorContributionMap":{"boonjuey":17}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonjuey"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":3,"author":{"gitId":"boonjuey"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"boonjuey"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":6,"author":{"gitId":"boonjuey"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"boonjuey"},"content":"    public Ui(){"},{"lineNumber":8,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":9,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":11,"author":{"gitId":"boonjuey"},"content":"    public static void runProgram(Storage storage) {"},{"lineNumber":12,"author":{"gitId":"boonjuey"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"boonjuey"},"content":"        String userInput;"},{"lineNumber":14,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":15,"author":{"gitId":"boonjuey"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":16,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":17,"author":{"gitId":"boonjuey"},"content":"        // Check if there is such a file. Otherwise, create a new file."},{"lineNumber":18,"author":{"gitId":"boonjuey"},"content":"        try{"},{"lineNumber":19,"author":{"gitId":"boonjuey"},"content":"            storage.loadDataFromDisk(taskList);"},{"lineNumber":20,"author":{"gitId":"boonjuey"},"content":"        } catch (FileNotFoundException e){"},{"lineNumber":21,"author":{"gitId":"boonjuey"},"content":"            storage.createNewFile();"},{"lineNumber":22,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":24,"author":{"gitId":"boonjuey"},"content":"        do {"},{"lineNumber":25,"author":{"gitId":"boonjuey"},"content":"            userInput \u003d in.nextLine();"},{"lineNumber":26,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":27,"author":{"gitId":"boonjuey"},"content":"            String[] command \u003d userInput.split(\" \");"},{"lineNumber":28,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":29,"author":{"gitId":"boonjuey"},"content":"            if(Parser.isSpecialCharacterPresent(userInput)){"},{"lineNumber":30,"author":{"gitId":"boonjuey"},"content":"                continue;"},{"lineNumber":31,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":33,"author":{"gitId":"boonjuey"},"content":"            Task newItem \u003d taskList.populateArrayList(command, taskList.getTasks());"},{"lineNumber":34,"author":{"gitId":"boonjuey"},"content":"            if(newItem !\u003d null){"},{"lineNumber":35,"author":{"gitId":"boonjuey"},"content":"                Messages.newItemMessage(taskList.getTasks(), newItem);"},{"lineNumber":36,"author":{"gitId":"boonjuey"},"content":"                storage.wrapWriteToDisk(taskList.getTasks());"},{"lineNumber":37,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"boonjuey"},"content":"        } while (!userInput.equals(\"bye\"));"},{"lineNumber":39,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"boonjuey"},"content":"}"}],"authorContributionMap":{"boonjuey":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"boonjuey"},"content":"todo task 1"},{"lineNumber":2,"author":{"gitId":"boonjuey"},"content":"todo task 1"},{"lineNumber":3,"author":{"gitId":"boonjuey"},"content":"todo task 2.0"},{"lineNumber":4,"author":{"gitId":"boonjuey"},"content":"todo"},{"lineNumber":5,"author":{"gitId":"boonjuey"},"content":"list"},{"lineNumber":6,"author":{"gitId":"boonjuey"},"content":"aofijaspfijaf"},{"lineNumber":7,"author":{"gitId":"boonjuey"},"content":"deadline asoidjapf"},{"lineNumber":8,"author":{"gitId":"boonjuey"},"content":"deadline aosfsfj /by asodijsdi"},{"lineNumber":9,"author":{"gitId":"boonjuey"},"content":"deadline         /by "},{"lineNumber":10,"author":{"gitId":"boonjuey"},"content":"deadline /by"},{"lineNumber":11,"author":{"gitId":"boonjuey"},"content":"list"},{"lineNumber":12,"author":{"gitId":"boonjuey"},"content":"event saofjasos"},{"lineNumber":13,"author":{"gitId":"boonjuey"},"content":"event apsfkpsof /at asofjaspif"},{"lineNumber":14,"author":{"gitId":"boonjuey"},"content":"event /at"},{"lineNumber":15,"author":{"gitId":"boonjuey"},"content":"list"},{"lineNumber":16,"author":{"gitId":"boonjuey"},"content":"done 1"},{"lineNumber":17,"author":{"gitId":"boonjuey"},"content":"done 1.214"},{"lineNumber":18,"author":{"gitId":"boonjuey"},"content":"done done"},{"lineNumber":19,"author":{"gitId":"boonjuey"},"content":"done"},{"lineNumber":20,"author":{"gitId":"boonjuey"},"content":"done 1.0"},{"lineNumber":21,"author":{"gitId":"boonjuey"},"content":"delete 3"},{"lineNumber":22,"author":{"gitId":"boonjuey"},"content":"delete 4.0"},{"lineNumber":23,"author":{"gitId":"boonjuey"},"content":"list"},{"lineNumber":24,"author":{"gitId":"boonjuey"},"content":"byebye"},{"lineNumber":25,"author":{"gitId":"boonjuey"},"content":"bye bye"},{"lineNumber":26,"author":{"gitId":"boonjuey"},"content":"bye"}],"authorContributionMap":{"boonjuey":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"boonjuey"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"boonjuey":1,"-":20}}]
