[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"boonjuey"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"boonjuey"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":11,"author":{"gitId":"boonjuey"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"boonjuey"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"boonjuey"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"boonjuey"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"boonjuey"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"boonjuey":9,"-":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonjuey"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"boonjuey"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"boonjuey"},"content":"    public static boolean isInteger(String s) {"},{"lineNumber":6,"author":{"gitId":"boonjuey"},"content":"        try {"},{"lineNumber":7,"author":{"gitId":"boonjuey"},"content":"            Integer.parseInt(s);"},{"lineNumber":8,"author":{"gitId":"boonjuey"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":9,"author":{"gitId":"boonjuey"},"content":"            return false;"},{"lineNumber":10,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":11,"author":{"gitId":"boonjuey"},"content":"        return true;"},{"lineNumber":12,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":15,"author":{"gitId":"boonjuey"},"content":"        String logo \u003d \" _                          \\n\""},{"lineNumber":16,"author":{"gitId":"boonjuey"},"content":"                + \"| |                         \\n\""},{"lineNumber":17,"author":{"gitId":"boonjuey"},"content":"                + \"| |     _   _   ___   _ __  \\n\""},{"lineNumber":18,"author":{"gitId":"boonjuey"},"content":"                + \"| |    | | | | / _ \\\\ | \u0027_ \\\\ \\n\""},{"lineNumber":19,"author":{"gitId":"boonjuey"},"content":"                + \"| |____| |_| || (_) || | | |\\n\""},{"lineNumber":20,"author":{"gitId":"boonjuey"},"content":"                + \"\\\\_____/ \\\\__, | \\\\___/ |_| |_|\\n\""},{"lineNumber":21,"author":{"gitId":"boonjuey"},"content":"                + \"         __/ |              \\n\""},{"lineNumber":22,"author":{"gitId":"boonjuey"},"content":"                + \"        |___/              \\n\";"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":24,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":25,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":26,"author":{"gitId":"boonjuey"},"content":"        System.out.println();"},{"lineNumber":27,"author":{"gitId":"boonjuey"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":28,"author":{"gitId":"boonjuey"},"content":"        System.out.println(\"Hello! I\u0027m Lyon\");"},{"lineNumber":29,"author":{"gitId":"boonjuey"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":30,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":31,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":32,"author":{"gitId":"boonjuey"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":33,"author":{"gitId":"boonjuey"},"content":"        String userInput;"},{"lineNumber":34,"author":{"gitId":"boonjuey"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":35,"author":{"gitId":"boonjuey"},"content":"        int index;"},{"lineNumber":36,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":37,"author":{"gitId":"boonjuey"},"content":"        userInput \u003d in.nextLine();"},{"lineNumber":38,"author":{"gitId":"boonjuey"},"content":"        while (!userInput.equals(\"bye\")) {"},{"lineNumber":39,"author":{"gitId":"boonjuey"},"content":"            String[] command \u003d userInput.split(\" \");"},{"lineNumber":40,"author":{"gitId":"boonjuey"},"content":"            if (command[0].equals(\"list\") \u0026\u0026 command.length \u003d\u003d 1) {"},{"lineNumber":41,"author":{"gitId":"boonjuey"},"content":"                index \u003d 1;"},{"lineNumber":42,"author":{"gitId":"boonjuey"},"content":"                System.out.println(\"____________________________________________________________\");"},{"lineNumber":43,"author":{"gitId":"boonjuey"},"content":"                for (Task task : taskList) {"},{"lineNumber":44,"author":{"gitId":"boonjuey"},"content":"                    System.out.println(index + \".\" + \"[\" + task.getStatusIcon() + \"] \" + task.description);"},{"lineNumber":45,"author":{"gitId":"boonjuey"},"content":"                    index +\u003d 1;"},{"lineNumber":46,"author":{"gitId":"boonjuey"},"content":"                }"},{"lineNumber":47,"author":{"gitId":"boonjuey"},"content":"                System.out.println(\"____________________________________________________________\");"},{"lineNumber":48,"author":{"gitId":"boonjuey"},"content":"            } else if (command[0].equals(\"done\")) {"},{"lineNumber":49,"author":{"gitId":"boonjuey"},"content":"                //If the first/only word is done, do the following check:"},{"lineNumber":50,"author":{"gitId":"boonjuey"},"content":"                if (command.length \u003d\u003d 2 \u0026\u0026 isInteger(command[1])) {"},{"lineNumber":51,"author":{"gitId":"boonjuey"},"content":"                    //if the length is exactly 2 and the second value after the space is an integer, valid command"},{"lineNumber":52,"author":{"gitId":"boonjuey"},"content":"                    if (0 \u003c Integer.parseInt(command[1]) \u0026\u0026 Integer.parseInt(command[1]) \u003c\u003d taskList.size()) {"},{"lineNumber":53,"author":{"gitId":"boonjuey"},"content":"                        //if the given value to set as done is an existing index"},{"lineNumber":54,"author":{"gitId":"boonjuey"},"content":"                        taskList.get(Integer.parseInt(command[1]) - 1).setAsDone();"},{"lineNumber":55,"author":{"gitId":"boonjuey"},"content":"                        System.out.println(\"____________________________________________________________\");"},{"lineNumber":56,"author":{"gitId":"boonjuey"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":57,"author":{"gitId":"boonjuey"},"content":"                        System.out.println(\"[\" + taskList.get(Integer.parseInt(command[1]) - 1).getStatusIcon() + \"] \""},{"lineNumber":58,"author":{"gitId":"boonjuey"},"content":"                                + taskList.get(Integer.parseInt(command[1]) - 1).description);"},{"lineNumber":59,"author":{"gitId":"boonjuey"},"content":"                        System.out.println(\"____________________________________________________________\");"},{"lineNumber":60,"author":{"gitId":"boonjuey"},"content":"                        //TODO"},{"lineNumber":61,"author":{"gitId":"boonjuey"},"content":"                        // Currently a task can be marked as done repeatedly."},{"lineNumber":62,"author":{"gitId":"boonjuey"},"content":"                        // This does not cause any errors, but may be required to fix"},{"lineNumber":63,"author":{"gitId":"boonjuey"},"content":"                    } else {"},{"lineNumber":64,"author":{"gitId":"boonjuey"},"content":"                        //if the given value does not match to a range that makes sense"},{"lineNumber":65,"author":{"gitId":"boonjuey"},"content":"                        System.out.println(\"____________________________________________________________\");"},{"lineNumber":66,"author":{"gitId":"boonjuey"},"content":"                        System.out.println(\"The index in the task list that you have selected to indicate as done,\" +"},{"lineNumber":67,"author":{"gitId":"boonjuey"},"content":"                                \"does not exist!\");"},{"lineNumber":68,"author":{"gitId":"boonjuey"},"content":"                        System.out.println(\"____________________________________________________________\");"},{"lineNumber":69,"author":{"gitId":"boonjuey"},"content":"                    }"},{"lineNumber":70,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":71,"author":{"gitId":"boonjuey"},"content":"                } else {"},{"lineNumber":72,"author":{"gitId":"boonjuey"},"content":"                    // for the situation where the user keys in \"done\", \"done 3.21512\" or \"done done\" or something"},{"lineNumber":73,"author":{"gitId":"boonjuey"},"content":"                    // along these lines"},{"lineNumber":74,"author":{"gitId":"boonjuey"},"content":"                    //TODO"},{"lineNumber":75,"author":{"gitId":"boonjuey"},"content":"                    // perhaps can prompt a different message"},{"lineNumber":76,"author":{"gitId":"boonjuey"},"content":"                    System.out.println(\"____________________________________________________________\");"},{"lineNumber":77,"author":{"gitId":"boonjuey"},"content":"                    taskList.add(new Task(userInput));"},{"lineNumber":78,"author":{"gitId":"boonjuey"},"content":"                    System.out.println(\"added: \" + userInput);"},{"lineNumber":79,"author":{"gitId":"boonjuey"},"content":"                    System.out.println(\"____________________________________________________________\");"},{"lineNumber":80,"author":{"gitId":"boonjuey"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"boonjuey"},"content":"            } else {"},{"lineNumber":82,"author":{"gitId":"boonjuey"},"content":"                System.out.println(\"____________________________________________________________\");"},{"lineNumber":83,"author":{"gitId":"boonjuey"},"content":"                taskList.add(new Task(userInput));"},{"lineNumber":84,"author":{"gitId":"boonjuey"},"content":"                System.out.println(\"added: \" + userInput);"},{"lineNumber":85,"author":{"gitId":"boonjuey"},"content":"                System.out.println(\"____________________________________________________________\");"},{"lineNumber":86,"author":{"gitId":"boonjuey"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"boonjuey"},"content":"            userInput \u003d in.nextLine();"},{"lineNumber":88,"author":{"gitId":"boonjuey"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"boonjuey"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":90,"author":{"gitId":"boonjuey"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":91,"author":{"gitId":"boonjuey"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"boonjuey":88,"-":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boonjuey"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"boonjuey"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"boonjuey"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"boonjuey"},"content":"    //can create static variable to get number of tasks (the range for indexes for the \"done\" command in main)"},{"lineNumber":5,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":6,"author":{"gitId":"boonjuey"},"content":"    public Task(String description){"},{"lineNumber":7,"author":{"gitId":"boonjuey"},"content":"        this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"boonjuey"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":11,"author":{"gitId":"boonjuey"},"content":"    public String getStatusIcon(){"},{"lineNumber":12,"author":{"gitId":"boonjuey"},"content":"        //return tick or X symbols"},{"lineNumber":13,"author":{"gitId":"boonjuey"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":14,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"boonjuey"},"content":""},{"lineNumber":16,"author":{"gitId":"boonjuey"},"content":"    public void setAsDone(){"},{"lineNumber":17,"author":{"gitId":"boonjuey"},"content":"        this.isDone \u003d true;"},{"lineNumber":18,"author":{"gitId":"boonjuey"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"boonjuey"},"content":"}"}],"authorContributionMap":{"boonjuey":19}}]
