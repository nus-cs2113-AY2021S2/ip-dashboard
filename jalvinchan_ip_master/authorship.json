[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jalvinchan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":3,"author":{"gitId":"jalvinchan"},"content":"import duke.data.DataManager;"},{"lineNumber":4,"author":{"gitId":"jalvinchan"},"content":"import duke.task.TaskManager;"},{"lineNumber":5,"author":{"gitId":"jalvinchan"},"content":"import duke.user_interface.UserInterface;"},{"lineNumber":6,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":9,"author":{"gitId":"jalvinchan"},"content":"    private static final String dataFilePath \u003d \"data/data.txt\";"},{"lineNumber":10,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":11,"author":{"gitId":"jalvinchan"},"content":"    private static final UserInterface ui \u003d new UserInterface();"},{"lineNumber":12,"author":{"gitId":"jalvinchan"},"content":"    private static final TaskManager taskManager \u003d new TaskManager();"},{"lineNumber":13,"author":{"gitId":"jalvinchan"},"content":"    private static final DataManager dataManager \u003d new DataManager(dataFilePath);"},{"lineNumber":14,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":17,"author":{"gitId":"jalvinchan"},"content":"        ui.showWelcomeMessage();"},{"lineNumber":18,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":19,"author":{"gitId":"jalvinchan"},"content":"        taskManager.setData(dataManager.loadData());"},{"lineNumber":20,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":21,"author":{"gitId":"jalvinchan"},"content":"        while (true) {"},{"lineNumber":22,"author":{"gitId":"jalvinchan"},"content":"            String input \u003d ui.getUserInput();"},{"lineNumber":23,"author":{"gitId":"jalvinchan"},"content":"            String feedback \u003d executeCommand(input);"},{"lineNumber":24,"author":{"gitId":"jalvinchan"},"content":"            dataManager.saveData(taskManager.getData());"},{"lineNumber":25,"author":{"gitId":"jalvinchan"},"content":"            ui.printFeedback(feedback);"},{"lineNumber":26,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":29,"author":{"gitId":"jalvinchan"},"content":"    private static String executeCommand(String input) {"},{"lineNumber":30,"author":{"gitId":"jalvinchan"},"content":"        String[] parsedInput \u003d parseInput(input);"},{"lineNumber":31,"author":{"gitId":"jalvinchan"},"content":"        String command \u003d parsedInput[0].toLowerCase();"},{"lineNumber":32,"author":{"gitId":"jalvinchan"},"content":"        String feedback \u003d null;"},{"lineNumber":33,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":34,"author":{"gitId":"jalvinchan"},"content":"        switch (command) {"},{"lineNumber":35,"author":{"gitId":"jalvinchan"},"content":"        case \"bye\":"},{"lineNumber":36,"author":{"gitId":"jalvinchan"},"content":"            ui.showExitMessage();"},{"lineNumber":37,"author":{"gitId":"jalvinchan"},"content":"            System.exit(0);"},{"lineNumber":38,"author":{"gitId":"jalvinchan"},"content":"            break;"},{"lineNumber":39,"author":{"gitId":"jalvinchan"},"content":"        case \"list\":"},{"lineNumber":40,"author":{"gitId":"jalvinchan"},"content":"            feedback \u003d taskManager.listTask();"},{"lineNumber":41,"author":{"gitId":"jalvinchan"},"content":"            break;"},{"lineNumber":42,"author":{"gitId":"jalvinchan"},"content":"        case \"done\":"},{"lineNumber":43,"author":{"gitId":"jalvinchan"},"content":"            try {"},{"lineNumber":44,"author":{"gitId":"jalvinchan"},"content":"                int taskNumber \u003d Integer.parseInt(parsedInput[1]) - 1;"},{"lineNumber":45,"author":{"gitId":"jalvinchan"},"content":"                feedback \u003d taskManager.doneTask(taskNumber);"},{"lineNumber":46,"author":{"gitId":"jalvinchan"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":47,"author":{"gitId":"jalvinchan"},"content":"                feedback \u003d \"OOPS!!! Task number has to be a number\";"},{"lineNumber":48,"author":{"gitId":"jalvinchan"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"jalvinchan"},"content":"            break;"},{"lineNumber":50,"author":{"gitId":"jalvinchan"},"content":"        case \"delete\":"},{"lineNumber":51,"author":{"gitId":"jalvinchan"},"content":"            try {"},{"lineNumber":52,"author":{"gitId":"jalvinchan"},"content":"                int taskNumber \u003d Integer.parseInt(parsedInput[1]) - 1;"},{"lineNumber":53,"author":{"gitId":"jalvinchan"},"content":"                feedback \u003d taskManager.deleteTask(taskNumber);"},{"lineNumber":54,"author":{"gitId":"jalvinchan"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":55,"author":{"gitId":"jalvinchan"},"content":"                feedback \u003d \"OOPS!!! Task number has to be a number\";"},{"lineNumber":56,"author":{"gitId":"jalvinchan"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"jalvinchan"},"content":"            break;"},{"lineNumber":58,"author":{"gitId":"jalvinchan"},"content":"        default:"},{"lineNumber":59,"author":{"gitId":"jalvinchan"},"content":"            feedback \u003d taskManager.addTask(command, parsedInput[1]);"},{"lineNumber":60,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":62,"author":{"gitId":"jalvinchan"},"content":"        return feedback;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":65,"author":{"gitId":"jalvinchan"},"content":"    public static String[] parseInput(String input) {"},{"lineNumber":66,"author":{"gitId":"jalvinchan"},"content":"        String[] split \u003d input.split(\" \", 2);"},{"lineNumber":67,"author":{"gitId":"jalvinchan"},"content":"        if (split.length \u003d\u003d 2) {"},{"lineNumber":68,"author":{"gitId":"jalvinchan"},"content":"            return split;"},{"lineNumber":69,"author":{"gitId":"jalvinchan"},"content":"        } else {"},{"lineNumber":70,"author":{"gitId":"jalvinchan"},"content":"            return new String[]{split[0], \"\"};"},{"lineNumber":71,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jalvinchan":69,"-":4}},{"path":"src/main/java/duke/data/DataManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jalvinchan"},"content":"package duke.data;"},{"lineNumber":2,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":3,"author":{"gitId":"jalvinchan"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"jalvinchan"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"jalvinchan"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"jalvinchan"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":8,"author":{"gitId":"jalvinchan"},"content":"public class DataManager {"},{"lineNumber":9,"author":{"gitId":"jalvinchan"},"content":"    private final String filePath;"},{"lineNumber":10,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":11,"author":{"gitId":"jalvinchan"},"content":"    public DataManager(String filePath) {"},{"lineNumber":12,"author":{"gitId":"jalvinchan"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":13,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":15,"author":{"gitId":"jalvinchan"},"content":"    public void saveData(String data) {"},{"lineNumber":16,"author":{"gitId":"jalvinchan"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"jalvinchan"},"content":"            FileWriter writer \u003d new FileWriter(filePath);"},{"lineNumber":18,"author":{"gitId":"jalvinchan"},"content":"            writer.write(data);"},{"lineNumber":19,"author":{"gitId":"jalvinchan"},"content":"            writer.close();"},{"lineNumber":20,"author":{"gitId":"jalvinchan"},"content":"        } catch (IOException e) {"},{"lineNumber":21,"author":{"gitId":"jalvinchan"},"content":"            System.out.println(\"Error writing to file: \" + filePath);"},{"lineNumber":22,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":25,"author":{"gitId":"jalvinchan"},"content":"    public Scanner loadData() {"},{"lineNumber":26,"author":{"gitId":"jalvinchan"},"content":"        Scanner scanner \u003d null;"},{"lineNumber":27,"author":{"gitId":"jalvinchan"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"jalvinchan"},"content":"            File file \u003d new File(filePath);"},{"lineNumber":29,"author":{"gitId":"jalvinchan"},"content":"            file.getParentFile().mkdirs();"},{"lineNumber":30,"author":{"gitId":"jalvinchan"},"content":"            if (!file.exists()) {"},{"lineNumber":31,"author":{"gitId":"jalvinchan"},"content":"                file.createNewFile();"},{"lineNumber":32,"author":{"gitId":"jalvinchan"},"content":"            }else{"},{"lineNumber":33,"author":{"gitId":"jalvinchan"},"content":"                System.out.println(\"loading existing data...\");"},{"lineNumber":34,"author":{"gitId":"jalvinchan"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"jalvinchan"},"content":"            scanner \u003d new Scanner(file);"},{"lineNumber":36,"author":{"gitId":"jalvinchan"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"jalvinchan"},"content":"            System.out.println(\"Problems creating file: \" + filePath);"},{"lineNumber":38,"author":{"gitId":"jalvinchan"},"content":"            System.out.println(\"History will not be saved in \" + filePath);"},{"lineNumber":39,"author":{"gitId":"jalvinchan"},"content":"            System.exit(1);"},{"lineNumber":40,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":42,"author":{"gitId":"jalvinchan"},"content":"        return scanner;"},{"lineNumber":43,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"jalvinchan"},"content":"}"}],"authorContributionMap":{"jalvinchan":44}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jalvinchan"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":3,"author":{"gitId":"jalvinchan"},"content":"public class EmptyDescriptionException extends Exception {"},{"lineNumber":4,"author":{"gitId":"jalvinchan"},"content":"}"}],"authorContributionMap":{"jalvinchan":4}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jalvinchan"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":3,"author":{"gitId":"jalvinchan"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":4,"author":{"gitId":"jalvinchan"},"content":"}"}],"authorContributionMap":{"jalvinchan":4}},{"path":"src/main/java/duke/exception/LoadDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jalvinchan"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":3,"author":{"gitId":"jalvinchan"},"content":"public class LoadDataException extends Exception {"},{"lineNumber":4,"author":{"gitId":"jalvinchan"},"content":"}"}],"authorContributionMap":{"jalvinchan":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jalvinchan"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":3,"author":{"gitId":"jalvinchan"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"jalvinchan"},"content":"    private final String date;"},{"lineNumber":5,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":6,"author":{"gitId":"jalvinchan"},"content":"    public Deadline(String taskName, String date) {"},{"lineNumber":7,"author":{"gitId":"jalvinchan"},"content":"        super(taskName);"},{"lineNumber":8,"author":{"gitId":"jalvinchan"},"content":"        this.date \u003d date;"},{"lineNumber":9,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":11,"author":{"gitId":"jalvinchan"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"jalvinchan"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"jalvinchan"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), date);"},{"lineNumber":14,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":16,"author":{"gitId":"jalvinchan"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"jalvinchan"},"content":"    public String getData() {"},{"lineNumber":18,"author":{"gitId":"jalvinchan"},"content":"        return String.format(\"%c;%d;%s;%s\", getTaskChar(), (isDone ? 1 : 0), taskName, date);"},{"lineNumber":19,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":21,"author":{"gitId":"jalvinchan"},"content":"    public static char getTaskChar() {"},{"lineNumber":22,"author":{"gitId":"jalvinchan"},"content":"        return \u0027D\u0027;"},{"lineNumber":23,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jalvinchan"},"content":"}"}],"authorContributionMap":{"jalvinchan":24}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jalvinchan"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":3,"author":{"gitId":"jalvinchan"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"jalvinchan"},"content":"    private final String date;"},{"lineNumber":5,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":6,"author":{"gitId":"jalvinchan"},"content":"    public Event(String taskName, String date) {"},{"lineNumber":7,"author":{"gitId":"jalvinchan"},"content":"        super(taskName);"},{"lineNumber":8,"author":{"gitId":"jalvinchan"},"content":"        this.date \u003d date;"},{"lineNumber":9,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":11,"author":{"gitId":"jalvinchan"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"jalvinchan"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"jalvinchan"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), date);"},{"lineNumber":14,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":16,"author":{"gitId":"jalvinchan"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"jalvinchan"},"content":"    public String getData() {"},{"lineNumber":18,"author":{"gitId":"jalvinchan"},"content":"        return String.format(\"%c;%d;%s;%s\", getTaskChar(), (isDone?1:0), taskName, date);"},{"lineNumber":19,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":21,"author":{"gitId":"jalvinchan"},"content":"    public static char getTaskChar() {"},{"lineNumber":22,"author":{"gitId":"jalvinchan"},"content":"        return \u0027E\u0027;"},{"lineNumber":23,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jalvinchan"},"content":"}"}],"authorContributionMap":{"jalvinchan":24}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jalvinchan"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":3,"author":{"gitId":"jalvinchan"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"jalvinchan"},"content":"    protected String taskName;"},{"lineNumber":5,"author":{"gitId":"jalvinchan"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":7,"author":{"gitId":"jalvinchan"},"content":"    public Task(String taskName) {"},{"lineNumber":8,"author":{"gitId":"jalvinchan"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":9,"author":{"gitId":"jalvinchan"},"content":"        isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":12,"author":{"gitId":"jalvinchan"},"content":"    public void setAsDone() {"},{"lineNumber":13,"author":{"gitId":"jalvinchan"},"content":"        isDone \u003d true;"},{"lineNumber":14,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":16,"author":{"gitId":"jalvinchan"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"jalvinchan"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"jalvinchan"},"content":"        char doneChar;"},{"lineNumber":19,"author":{"gitId":"jalvinchan"},"content":"        if (isDone) {"},{"lineNumber":20,"author":{"gitId":"jalvinchan"},"content":"            doneChar \u003d \u0027X\u0027;"},{"lineNumber":21,"author":{"gitId":"jalvinchan"},"content":"        } else {"},{"lineNumber":22,"author":{"gitId":"jalvinchan"},"content":"            doneChar \u003d \u0027 \u0027;"},{"lineNumber":23,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"jalvinchan"},"content":"        return String.format(\"[%c] %s\", doneChar, taskName);"},{"lineNumber":25,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":27,"author":{"gitId":"jalvinchan"},"content":"    public abstract String getData();"},{"lineNumber":28,"author":{"gitId":"jalvinchan"},"content":"}"}],"authorContributionMap":{"jalvinchan":28}},{"path":"src/main/java/duke/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jalvinchan"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":3,"author":{"gitId":"jalvinchan"},"content":"import duke.exception.EmptyDescriptionException;"},{"lineNumber":4,"author":{"gitId":"jalvinchan"},"content":"import duke.exception.InvalidCommandException;"},{"lineNumber":5,"author":{"gitId":"jalvinchan"},"content":"import duke.exception.LoadDataException;"},{"lineNumber":6,"author":{"gitId":"jalvinchan"},"content":"import duke.task.Deadline;"},{"lineNumber":7,"author":{"gitId":"jalvinchan"},"content":"import duke.task.Event;"},{"lineNumber":8,"author":{"gitId":"jalvinchan"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"jalvinchan"},"content":"import duke.task.Todo;"},{"lineNumber":10,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":11,"author":{"gitId":"jalvinchan"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"jalvinchan"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":14,"author":{"gitId":"jalvinchan"},"content":"public class TaskManager {"},{"lineNumber":15,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":16,"author":{"gitId":"jalvinchan"},"content":"    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":18,"author":{"gitId":"jalvinchan"},"content":"    public String getData() {"},{"lineNumber":19,"author":{"gitId":"jalvinchan"},"content":"        StringBuilder data \u003d new StringBuilder();"},{"lineNumber":20,"author":{"gitId":"jalvinchan"},"content":"        for (Task task : tasks) {"},{"lineNumber":21,"author":{"gitId":"jalvinchan"},"content":"            data.append(task.getData()).append(System.lineSeparator());"},{"lineNumber":22,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"jalvinchan"},"content":"        return data.toString();"},{"lineNumber":24,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":26,"author":{"gitId":"jalvinchan"},"content":"    public String listTask() {"},{"lineNumber":27,"author":{"gitId":"jalvinchan"},"content":"        StringBuilder feedback \u003d new StringBuilder();"},{"lineNumber":28,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":29,"author":{"gitId":"jalvinchan"},"content":"        feedback.append(\"Here are the tasks in your list:\").append(System.lineSeparator());"},{"lineNumber":30,"author":{"gitId":"jalvinchan"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; ++i) {"},{"lineNumber":31,"author":{"gitId":"jalvinchan"},"content":"            feedback.append(String.format(\"%d: %s\", (i + 1), tasks.get(i))).append(System.lineSeparator());"},{"lineNumber":32,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"jalvinchan"},"content":"        if (tasks.size() \u003e 0) {"},{"lineNumber":34,"author":{"gitId":"jalvinchan"},"content":"            feedback.append(String.format(\"%d: %s\", (tasks.size()), tasks.get(tasks.size() - 1)));"},{"lineNumber":35,"author":{"gitId":"jalvinchan"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"jalvinchan"},"content":"            feedback.append(\"Your task list is empty... ):\");"},{"lineNumber":37,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":39,"author":{"gitId":"jalvinchan"},"content":"        return feedback.toString();"},{"lineNumber":40,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":42,"author":{"gitId":"jalvinchan"},"content":"    public String addTask(String taskType, String description) {"},{"lineNumber":43,"author":{"gitId":"jalvinchan"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"jalvinchan"},"content":"            checkValidInput(taskType, description);"},{"lineNumber":45,"author":{"gitId":"jalvinchan"},"content":"        } catch (InvalidCommandException e) {"},{"lineNumber":46,"author":{"gitId":"jalvinchan"},"content":"            return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\";"},{"lineNumber":47,"author":{"gitId":"jalvinchan"},"content":"        } catch (EmptyDescriptionException e) {"},{"lineNumber":48,"author":{"gitId":"jalvinchan"},"content":"            return \"OOPS!!! The description of a \" + taskType + \" cannot be empty.\";"},{"lineNumber":49,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":51,"author":{"gitId":"jalvinchan"},"content":"        switch (taskType) {"},{"lineNumber":52,"author":{"gitId":"jalvinchan"},"content":"        case \"todo\":"},{"lineNumber":53,"author":{"gitId":"jalvinchan"},"content":"        case \"t\":"},{"lineNumber":54,"author":{"gitId":"jalvinchan"},"content":"            tasks.add(new Todo(description));"},{"lineNumber":55,"author":{"gitId":"jalvinchan"},"content":"            break;"},{"lineNumber":56,"author":{"gitId":"jalvinchan"},"content":"        case \"deadline\":"},{"lineNumber":57,"author":{"gitId":"jalvinchan"},"content":"        case \"d\": {"},{"lineNumber":58,"author":{"gitId":"jalvinchan"},"content":"            String[] nameAndDate \u003d parseDescription(description, \" /by \");"},{"lineNumber":59,"author":{"gitId":"jalvinchan"},"content":"            tasks.add(new Deadline(nameAndDate[0], nameAndDate[1]));"},{"lineNumber":60,"author":{"gitId":"jalvinchan"},"content":"            break;"},{"lineNumber":61,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"jalvinchan"},"content":"        case \"event\":"},{"lineNumber":63,"author":{"gitId":"jalvinchan"},"content":"        case \"e\": {"},{"lineNumber":64,"author":{"gitId":"jalvinchan"},"content":"            String[] nameAndDate \u003d parseDescription(description, \" /at \");"},{"lineNumber":65,"author":{"gitId":"jalvinchan"},"content":"            tasks.add(new Event(nameAndDate[0], nameAndDate[1]));"},{"lineNumber":66,"author":{"gitId":"jalvinchan"},"content":"            break;"},{"lineNumber":67,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":70,"author":{"gitId":"jalvinchan"},"content":"        return \"Got it. I\u0027ve added this task:\" + System.lineSeparator()"},{"lineNumber":71,"author":{"gitId":"jalvinchan"},"content":"                + tasks.get(tasks.size() - 1) + System.lineSeparator()"},{"lineNumber":72,"author":{"gitId":"jalvinchan"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":73,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":75,"author":{"gitId":"jalvinchan"},"content":"    private boolean isValidTaskType(String taskType) {"},{"lineNumber":76,"author":{"gitId":"jalvinchan"},"content":"        return taskType.equals(\"todo\") || taskType.equals(\"deadline\") || taskType.equals(\"event\") ||"},{"lineNumber":77,"author":{"gitId":"jalvinchan"},"content":"                taskType.equals(\"t\") || taskType.equals(\"d\") || taskType.equals(\"e\");"},{"lineNumber":78,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":80,"author":{"gitId":"jalvinchan"},"content":"    private void checkValidInput(String taskType, String description) throws InvalidCommandException, EmptyDescriptionException {"},{"lineNumber":81,"author":{"gitId":"jalvinchan"},"content":"        if (!isValidTaskType(taskType)) {"},{"lineNumber":82,"author":{"gitId":"jalvinchan"},"content":"            throw new InvalidCommandException();"},{"lineNumber":83,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"jalvinchan"},"content":"        if (description.isEmpty()) {"},{"lineNumber":85,"author":{"gitId":"jalvinchan"},"content":"            throw new EmptyDescriptionException();"},{"lineNumber":86,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":89,"author":{"gitId":"jalvinchan"},"content":"    private String[] parseDescription(String description, String regex) {"},{"lineNumber":90,"author":{"gitId":"jalvinchan"},"content":"        final String[] split \u003d description.split(regex);"},{"lineNumber":91,"author":{"gitId":"jalvinchan"},"content":"        if (split.length \u003d\u003d 2) {"},{"lineNumber":92,"author":{"gitId":"jalvinchan"},"content":"            return split;"},{"lineNumber":93,"author":{"gitId":"jalvinchan"},"content":"        } else {"},{"lineNumber":94,"author":{"gitId":"jalvinchan"},"content":"            return new String[]{split[0], \"\"};"},{"lineNumber":95,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":98,"author":{"gitId":"jalvinchan"},"content":"    public String doneTask(int taskNum) {"},{"lineNumber":99,"author":{"gitId":"jalvinchan"},"content":"        try {"},{"lineNumber":100,"author":{"gitId":"jalvinchan"},"content":"            tasks.get(taskNum).setAsDone();"},{"lineNumber":101,"author":{"gitId":"jalvinchan"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":102,"author":{"gitId":"jalvinchan"},"content":"            return \"OOPS!!! Invalid task number. Try 1-\" + tasks.size();"},{"lineNumber":103,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"jalvinchan"},"content":"        return \"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator()"},{"lineNumber":105,"author":{"gitId":"jalvinchan"},"content":"                + tasks.get(taskNum);"},{"lineNumber":106,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":108,"author":{"gitId":"jalvinchan"},"content":"    public String deleteTask(int taskNumber) {"},{"lineNumber":109,"author":{"gitId":"jalvinchan"},"content":"        String task \u003d tasks.get(taskNumber).toString();"},{"lineNumber":110,"author":{"gitId":"jalvinchan"},"content":"        try {"},{"lineNumber":111,"author":{"gitId":"jalvinchan"},"content":"            tasks.remove(taskNumber);"},{"lineNumber":112,"author":{"gitId":"jalvinchan"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":113,"author":{"gitId":"jalvinchan"},"content":"            return \"OOPS!!! Invalid task number. Try 1-\" + tasks.size();"},{"lineNumber":114,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"jalvinchan"},"content":"        return \"Noted. I\u0027ve removed this task:\" + System.lineSeparator() +"},{"lineNumber":116,"author":{"gitId":"jalvinchan"},"content":"                task + System.lineSeparator() +"},{"lineNumber":117,"author":{"gitId":"jalvinchan"},"content":"                \"Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":118,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":120,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":121,"author":{"gitId":"jalvinchan"},"content":"    public void setData(Scanner scanner) {"},{"lineNumber":122,"author":{"gitId":"jalvinchan"},"content":"        if(!scanner.hasNext()){"},{"lineNumber":123,"author":{"gitId":"jalvinchan"},"content":"            return;"},{"lineNumber":124,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":126,"author":{"gitId":"jalvinchan"},"content":"        try {"},{"lineNumber":127,"author":{"gitId":"jalvinchan"},"content":"            while (scanner.hasNext()) {"},{"lineNumber":128,"author":{"gitId":"jalvinchan"},"content":"                String line \u003d scanner.nextLine();"},{"lineNumber":129,"author":{"gitId":"jalvinchan"},"content":"                String[] parsedLine \u003d line.split(\";\", 3);"},{"lineNumber":130,"author":{"gitId":"jalvinchan"},"content":"                char taskType \u003d parsedLine[0].charAt(0);"},{"lineNumber":131,"author":{"gitId":"jalvinchan"},"content":"                boolean taskIsDone \u003d parsedLine[1].equals(\"1\");"},{"lineNumber":132,"author":{"gitId":"jalvinchan"},"content":"                String taskDescription \u003d parsedLine[2];"},{"lineNumber":133,"author":{"gitId":"jalvinchan"},"content":"                switch (taskType) {"},{"lineNumber":134,"author":{"gitId":"jalvinchan"},"content":"                case \u0027T\u0027:"},{"lineNumber":135,"author":{"gitId":"jalvinchan"},"content":"                    tasks.add(new Todo(taskDescription));"},{"lineNumber":136,"author":{"gitId":"jalvinchan"},"content":"                    break;"},{"lineNumber":137,"author":{"gitId":"jalvinchan"},"content":"                case \u0027D\u0027: {"},{"lineNumber":138,"author":{"gitId":"jalvinchan"},"content":"                    String[] nameAndDate \u003d taskDescription.split(\";\", 2);"},{"lineNumber":139,"author":{"gitId":"jalvinchan"},"content":"                    tasks.add(new Deadline(nameAndDate[0], nameAndDate[1]));"},{"lineNumber":140,"author":{"gitId":"jalvinchan"},"content":"                    break;"},{"lineNumber":141,"author":{"gitId":"jalvinchan"},"content":"                }"},{"lineNumber":142,"author":{"gitId":"jalvinchan"},"content":"                case \u0027E\u0027: {"},{"lineNumber":143,"author":{"gitId":"jalvinchan"},"content":"                    String[] nameAndDate \u003d taskDescription.split(\";\", 2);"},{"lineNumber":144,"author":{"gitId":"jalvinchan"},"content":"                    tasks.add(new Event(nameAndDate[0], nameAndDate[1]));"},{"lineNumber":145,"author":{"gitId":"jalvinchan"},"content":"                    break;"},{"lineNumber":146,"author":{"gitId":"jalvinchan"},"content":"                }"},{"lineNumber":147,"author":{"gitId":"jalvinchan"},"content":"                default:"},{"lineNumber":148,"author":{"gitId":"jalvinchan"},"content":"                    throw new LoadDataException();"},{"lineNumber":149,"author":{"gitId":"jalvinchan"},"content":"                }"},{"lineNumber":150,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":151,"author":{"gitId":"jalvinchan"},"content":"                if(taskIsDone){"},{"lineNumber":152,"author":{"gitId":"jalvinchan"},"content":"                    doneTask(tasks.size());"},{"lineNumber":153,"author":{"gitId":"jalvinchan"},"content":"                }"},{"lineNumber":154,"author":{"gitId":"jalvinchan"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"jalvinchan"},"content":"            System.out.println(\"Data loaded sucessfully...\");"},{"lineNumber":156,"author":{"gitId":"jalvinchan"},"content":"        } catch (Exception e) {"},{"lineNumber":157,"author":{"gitId":"jalvinchan"},"content":"            tasks.clear();"},{"lineNumber":158,"author":{"gitId":"jalvinchan"},"content":"            System.out.println(\"Error loading old data...\");"},{"lineNumber":159,"author":{"gitId":"jalvinchan"},"content":"            System.out.println(\"Data will be overridden...\");"},{"lineNumber":160,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":163,"author":{"gitId":"jalvinchan"},"content":"}"}],"authorContributionMap":{"jalvinchan":163}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jalvinchan"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":3,"author":{"gitId":"jalvinchan"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":5,"author":{"gitId":"jalvinchan"},"content":"    public Todo(String taskName) {"},{"lineNumber":6,"author":{"gitId":"jalvinchan"},"content":"        super(taskName);"},{"lineNumber":7,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":9,"author":{"gitId":"jalvinchan"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"jalvinchan"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"jalvinchan"},"content":"        return String.format(\"[T]%s\", super.toString());"},{"lineNumber":12,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":14,"author":{"gitId":"jalvinchan"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"jalvinchan"},"content":"    public String getData() {"},{"lineNumber":16,"author":{"gitId":"jalvinchan"},"content":"        return String.format(\"%c;%d;%s\", getTaskChar(), (isDone?1:0), taskName);"},{"lineNumber":17,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":19,"author":{"gitId":"jalvinchan"},"content":"    public static char getTaskChar() {"},{"lineNumber":20,"author":{"gitId":"jalvinchan"},"content":"        return \u0027T\u0027;"},{"lineNumber":21,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jalvinchan"},"content":"}"}],"authorContributionMap":{"jalvinchan":22}},{"path":"src/main/java/duke/user_interface/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jalvinchan"},"content":"package duke.user_interface;"},{"lineNumber":2,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":3,"author":{"gitId":"jalvinchan"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":5,"author":{"gitId":"jalvinchan"},"content":"public class UserInterface {"},{"lineNumber":6,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":7,"author":{"gitId":"jalvinchan"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\";"},{"lineNumber":8,"author":{"gitId":"jalvinchan"},"content":"    private static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":9,"author":{"gitId":"jalvinchan"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\""},{"lineNumber":10,"author":{"gitId":"jalvinchan"},"content":"                                    + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":11,"author":{"gitId":"jalvinchan"},"content":"                                    + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":12,"author":{"gitId":"jalvinchan"},"content":"                                    + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":13,"author":{"gitId":"jalvinchan"},"content":"                                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":14,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":15,"author":{"gitId":"jalvinchan"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":16,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":17,"author":{"gitId":"jalvinchan"},"content":"    public void showWelcomeMessage() {"},{"lineNumber":18,"author":{"gitId":"jalvinchan"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);"},{"lineNumber":19,"author":{"gitId":"jalvinchan"},"content":"        printDivider();"},{"lineNumber":20,"author":{"gitId":"jalvinchan"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":21,"author":{"gitId":"jalvinchan"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":22,"author":{"gitId":"jalvinchan"},"content":"        printDivider();"},{"lineNumber":23,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":25,"author":{"gitId":"jalvinchan"},"content":"    public String getUserInput() {"},{"lineNumber":26,"author":{"gitId":"jalvinchan"},"content":"        String input;"},{"lineNumber":27,"author":{"gitId":"jalvinchan"},"content":"        do {"},{"lineNumber":28,"author":{"gitId":"jalvinchan"},"content":"            input \u003d scanner.nextLine();"},{"lineNumber":29,"author":{"gitId":"jalvinchan"},"content":"        } while (input.trim().isEmpty());"},{"lineNumber":30,"author":{"gitId":"jalvinchan"},"content":"        printDivider();"},{"lineNumber":31,"author":{"gitId":"jalvinchan"},"content":"        return input;"},{"lineNumber":32,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":34,"author":{"gitId":"jalvinchan"},"content":"    private void printDivider() {"},{"lineNumber":35,"author":{"gitId":"jalvinchan"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":36,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":38,"author":{"gitId":"jalvinchan"},"content":"    public void showExitMessage() {"},{"lineNumber":39,"author":{"gitId":"jalvinchan"},"content":"        System.out.println(EXIT_MESSAGE);"},{"lineNumber":40,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"jalvinchan"},"content":""},{"lineNumber":42,"author":{"gitId":"jalvinchan"},"content":"    public void printFeedback(String feedback) {"},{"lineNumber":43,"author":{"gitId":"jalvinchan"},"content":"        if (feedback !\u003d null) {"},{"lineNumber":44,"author":{"gitId":"jalvinchan"},"content":"            System.out.println(feedback);"},{"lineNumber":45,"author":{"gitId":"jalvinchan"},"content":"            printDivider();"},{"lineNumber":46,"author":{"gitId":"jalvinchan"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"jalvinchan"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jalvinchan"},"content":"}"}],"authorContributionMap":{"jalvinchan":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jalvinchan"},"content":"list"},{"lineNumber":2,"author":{"gitId":"jalvinchan"},"content":"todo borrow book"},{"lineNumber":3,"author":{"gitId":"jalvinchan"},"content":"list"},{"lineNumber":4,"author":{"gitId":"jalvinchan"},"content":"ToDo read book"},{"lineNumber":5,"author":{"gitId":"jalvinchan"},"content":"deadline return book /by June 6th"},{"lineNumber":6,"author":{"gitId":"jalvinchan"},"content":"deadline assignment"},{"lineNumber":7,"author":{"gitId":"jalvinchan"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":8,"author":{"gitId":"jalvinchan"},"content":"list"},{"lineNumber":9,"author":{"gitId":"jalvinchan"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"jalvinchan"},"content":"list"},{"lineNumber":11,"author":{"gitId":"jalvinchan"},"content":"delete 2"},{"lineNumber":12,"author":{"gitId":"jalvinchan"},"content":"list"},{"lineNumber":13,"author":{"gitId":"jalvinchan"},"content":"someRandomCommand"},{"lineNumber":14,"author":{"gitId":"jalvinchan"},"content":"some random command"},{"lineNumber":15,"author":{"gitId":"jalvinchan"},"content":"todo"},{"lineNumber":16,"author":{"gitId":"jalvinchan"},"content":"bye"}],"authorContributionMap":{"jalvinchan":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"jalvinchan"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\Exception\\*.java ..\\src\\main\\java\\duke\\Task\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"jalvinchan"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"jalvinchan":2,"-":19}}]
