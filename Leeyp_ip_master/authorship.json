[{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"public enum Command {"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"    BYE, LIST, DONE, TODO, EVENT, DEADLINE, INVALID, DELETE"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"}"}],"authorContributionMap":{"Leeyp":5}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"    protected String by;"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"}"}],"authorContributionMap":{"Leeyp":16}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"    public static final int DONE_START \u003d 5;"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"    public static final int TODO_START \u003d 5;"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"    public static final int EVENT_START \u003d 6;"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"    public static final int DEADLINE_START \u003d 9;"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"    public static final int DELETE_START \u003d 7;"},{"lineNumber":17,"author":{"gitId":"Leeyp"},"content":"    public static final int NEW_TASK_INDEX \u003d 6;"},{"lineNumber":18,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":19,"author":{"gitId":"Leeyp"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"Leeyp"},"content":"    public static int maxTaskIndex \u003d 0;"},{"lineNumber":21,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":22,"author":{"gitId":"Leeyp"},"content":"    public static Scanner in \u003d new Scanner(System.in);"},{"lineNumber":23,"author":{"gitId":"Leeyp"},"content":"    public static String input;"},{"lineNumber":24,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":25,"author":{"gitId":"Leeyp"},"content":"    public static String filepath \u003d \"data.txt\";"},{"lineNumber":26,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":28,"author":{"gitId":"Leeyp"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"Leeyp"},"content":"            loadData(filepath);"},{"lineNumber":30,"author":{"gitId":"Leeyp"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"Leeyp"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());"},{"lineNumber":32,"author":{"gitId":"Leeyp"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":34,"author":{"gitId":"Leeyp"},"content":"        welcomeMessage();"},{"lineNumber":35,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":36,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":37,"author":{"gitId":"Leeyp"},"content":"        input \u003d getInput(in);"},{"lineNumber":38,"author":{"gitId":"Leeyp"},"content":"        Command command;"},{"lineNumber":39,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":40,"author":{"gitId":"Leeyp"},"content":"        while (!isBye()) {"},{"lineNumber":41,"author":{"gitId":"Leeyp"},"content":"            if (isList()) {"},{"lineNumber":42,"author":{"gitId":"Leeyp"},"content":"                command \u003d Command.LIST;"},{"lineNumber":43,"author":{"gitId":"Leeyp"},"content":"            } else if (isDone()) {"},{"lineNumber":44,"author":{"gitId":"Leeyp"},"content":"                command \u003d Command.DONE;"},{"lineNumber":45,"author":{"gitId":"Leeyp"},"content":"            } else if (isTodo()) {"},{"lineNumber":46,"author":{"gitId":"Leeyp"},"content":"                command \u003d Command.TODO;"},{"lineNumber":47,"author":{"gitId":"Leeyp"},"content":"            } else if (isEvent()) {"},{"lineNumber":48,"author":{"gitId":"Leeyp"},"content":"                command \u003d Command.EVENT;"},{"lineNumber":49,"author":{"gitId":"Leeyp"},"content":"            } else if (isDelete()) {"},{"lineNumber":50,"author":{"gitId":"Leeyp"},"content":"                command \u003d Command.DELETE;"},{"lineNumber":51,"author":{"gitId":"Leeyp"},"content":"            } else if (isDeadline()) {"},{"lineNumber":52,"author":{"gitId":"Leeyp"},"content":"                command \u003d Command.DEADLINE;"},{"lineNumber":53,"author":{"gitId":"Leeyp"},"content":"            } else {"},{"lineNumber":54,"author":{"gitId":"Leeyp"},"content":"                command \u003d Command.INVALID;"},{"lineNumber":55,"author":{"gitId":"Leeyp"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":57,"author":{"gitId":"Leeyp"},"content":"            try {"},{"lineNumber":58,"author":{"gitId":"Leeyp"},"content":"                executeCommand(input, command);"},{"lineNumber":59,"author":{"gitId":"Leeyp"},"content":"            } catch (InvalidCommandException e) {"},{"lineNumber":60,"author":{"gitId":"Leeyp"},"content":"                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":61,"author":{"gitId":"Leeyp"},"content":"            } catch (EmptyInputException e) {"},{"lineNumber":62,"author":{"gitId":"Leeyp"},"content":"                System.out.println(\"OOPS!!! The description of a new task cannot be empty.\");"},{"lineNumber":63,"author":{"gitId":"Leeyp"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":64,"author":{"gitId":"Leeyp"},"content":"                System.out.println(\"OOPS!!! You need to add time for new Event or Deadline with \u0027/at\u0027 or \u0027/by\u0027!!\");"},{"lineNumber":65,"author":{"gitId":"Leeyp"},"content":"            } catch (InvalidEventTimeException e) {"},{"lineNumber":66,"author":{"gitId":"Leeyp"},"content":"                System.out.println(\"OOPS!!! You need to add time for new Event with keyword \u0027/at\u0027!!\");"},{"lineNumber":67,"author":{"gitId":"Leeyp"},"content":"            } catch (InvalidDeadlineTimeException e) {"},{"lineNumber":68,"author":{"gitId":"Leeyp"},"content":"                System.out.println(\"OOPS!!! You need to add time for new Deadline with keyword \u0027/by\u0027!!\");"},{"lineNumber":69,"author":{"gitId":"Leeyp"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":70,"author":{"gitId":"Leeyp"},"content":"                System.out.println(\"OOPS!!! I don\u0027t recognise the number to process Task Index to be done or deleted!!\");"},{"lineNumber":71,"author":{"gitId":"Leeyp"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":72,"author":{"gitId":"Leeyp"},"content":"                System.out.println(\"OOPS!!! You need to add valid Task Index to be done or deleted!!\");"},{"lineNumber":73,"author":{"gitId":"Leeyp"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":75,"author":{"gitId":"Leeyp"},"content":"            saveData();"},{"lineNumber":76,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":77,"author":{"gitId":"Leeyp"},"content":"            System.out.println();"},{"lineNumber":78,"author":{"gitId":"Leeyp"},"content":"            input \u003d getInput(in);"},{"lineNumber":79,"author":{"gitId":"Leeyp"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":81,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":82,"author":{"gitId":"Leeyp"},"content":"        exitMessage();"},{"lineNumber":83,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":84,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":86,"author":{"gitId":"Leeyp"},"content":"    public static void executeCommand(String input, Command c) throws InvalidCommandException, EmptyInputException, InvalidEventTimeException, InvalidDeadlineTimeException {"},{"lineNumber":87,"author":{"gitId":"Leeyp"},"content":"        switch (c) {"},{"lineNumber":88,"author":{"gitId":"Leeyp"},"content":"        case LIST:"},{"lineNumber":89,"author":{"gitId":"Leeyp"},"content":"            listBeginMessage();"},{"lineNumber":90,"author":{"gitId":"Leeyp"},"content":"            enumerateTasks();"},{"lineNumber":91,"author":{"gitId":"Leeyp"},"content":"            break;"},{"lineNumber":92,"author":{"gitId":"Leeyp"},"content":"        case DONE:"},{"lineNumber":93,"author":{"gitId":"Leeyp"},"content":"            markTaskAsDone(input);"},{"lineNumber":94,"author":{"gitId":"Leeyp"},"content":"            break;"},{"lineNumber":95,"author":{"gitId":"Leeyp"},"content":"        case DELETE:"},{"lineNumber":96,"author":{"gitId":"Leeyp"},"content":"            deleteTask(input);"},{"lineNumber":97,"author":{"gitId":"Leeyp"},"content":"            decrementTasks();"},{"lineNumber":98,"author":{"gitId":"Leeyp"},"content":"            break;"},{"lineNumber":99,"author":{"gitId":"Leeyp"},"content":"        case TODO:"},{"lineNumber":100,"author":{"gitId":"Leeyp"},"content":"            verifyValidInput(input, c);"},{"lineNumber":101,"author":{"gitId":"Leeyp"},"content":"            addNewTodo(input);"},{"lineNumber":102,"author":{"gitId":"Leeyp"},"content":"            confirmNewTask();"},{"lineNumber":103,"author":{"gitId":"Leeyp"},"content":"            incrementTasks();"},{"lineNumber":104,"author":{"gitId":"Leeyp"},"content":"            break;"},{"lineNumber":105,"author":{"gitId":"Leeyp"},"content":"        case EVENT:"},{"lineNumber":106,"author":{"gitId":"Leeyp"},"content":"            verifyValidInput(input, c);"},{"lineNumber":107,"author":{"gitId":"Leeyp"},"content":"            addNewEvent(input);"},{"lineNumber":108,"author":{"gitId":"Leeyp"},"content":"            confirmNewTask();"},{"lineNumber":109,"author":{"gitId":"Leeyp"},"content":"            incrementTasks();"},{"lineNumber":110,"author":{"gitId":"Leeyp"},"content":"            break;"},{"lineNumber":111,"author":{"gitId":"Leeyp"},"content":"        case DEADLINE:"},{"lineNumber":112,"author":{"gitId":"Leeyp"},"content":"            verifyValidInput(input, c);"},{"lineNumber":113,"author":{"gitId":"Leeyp"},"content":"            addNewDeadline(input);"},{"lineNumber":114,"author":{"gitId":"Leeyp"},"content":"            confirmNewTask();"},{"lineNumber":115,"author":{"gitId":"Leeyp"},"content":"            incrementTasks();"},{"lineNumber":116,"author":{"gitId":"Leeyp"},"content":"            break;"},{"lineNumber":117,"author":{"gitId":"Leeyp"},"content":"        case INVALID:"},{"lineNumber":118,"author":{"gitId":"Leeyp"},"content":"            throw new InvalidCommandException();"},{"lineNumber":119,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":120,"author":{"gitId":"Leeyp"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":123,"author":{"gitId":"Leeyp"},"content":"    private static void loadData(String filepath) throws IOException {"},{"lineNumber":124,"author":{"gitId":"Leeyp"},"content":"        File f \u003d new File(filepath);"},{"lineNumber":125,"author":{"gitId":"Leeyp"},"content":"        if (f.createNewFile()) {"},{"lineNumber":126,"author":{"gitId":"Leeyp"},"content":"            System.out.println(\"Welcome to Duke. Is this your first time using Duke on this machine?\");"},{"lineNumber":127,"author":{"gitId":"Leeyp"},"content":"        } else {"},{"lineNumber":128,"author":{"gitId":"Leeyp"},"content":"            System.out.println(\"Your previous Task list from Duke has been loaded! :-)\");"},{"lineNumber":129,"author":{"gitId":"Leeyp"},"content":"            processFileContents(filepath);"},{"lineNumber":130,"author":{"gitId":"Leeyp"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":133,"author":{"gitId":"Leeyp"},"content":"    private static void saveData() {"},{"lineNumber":134,"author":{"gitId":"Leeyp"},"content":"        try {"},{"lineNumber":135,"author":{"gitId":"Leeyp"},"content":"            String data \u003d getAllTaskListData();"},{"lineNumber":136,"author":{"gitId":"Leeyp"},"content":"            writeToFile(filepath, data);"},{"lineNumber":137,"author":{"gitId":"Leeyp"},"content":"        } catch (IOException e) {"},{"lineNumber":138,"author":{"gitId":"Leeyp"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());"},{"lineNumber":139,"author":{"gitId":"Leeyp"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":140,"author":{"gitId":"Leeyp"},"content":"            System.out.println(\"No items to add to file\");"},{"lineNumber":141,"author":{"gitId":"Leeyp"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":144,"author":{"gitId":"Leeyp"},"content":"    private static void processFileContents(String filePath) throws FileNotFoundException {"},{"lineNumber":145,"author":{"gitId":"Leeyp"},"content":"        File f \u003d new File(filePath); // create a File for the given file path"},{"lineNumber":146,"author":{"gitId":"Leeyp"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":147,"author":{"gitId":"Leeyp"},"content":"        while (s.hasNext()) {"},{"lineNumber":148,"author":{"gitId":"Leeyp"},"content":"            String line \u003d s.nextLine();"},{"lineNumber":149,"author":{"gitId":"Leeyp"},"content":"            processFileInputLines(line);"},{"lineNumber":150,"author":{"gitId":"Leeyp"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":153,"author":{"gitId":"Leeyp"},"content":"    private static void processFileInputLines(String fileLine) {"},{"lineNumber":154,"author":{"gitId":"Leeyp"},"content":"        char taskType \u003d getTaskType(fileLine);"},{"lineNumber":155,"author":{"gitId":"Leeyp"},"content":"        char isDone \u003d getDone(fileLine);"},{"lineNumber":156,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":157,"author":{"gitId":"Leeyp"},"content":"        incrementTasks();"},{"lineNumber":158,"author":{"gitId":"Leeyp"},"content":"        addNewTaskFromFile(fileLine, taskType);"},{"lineNumber":159,"author":{"gitId":"Leeyp"},"content":"        markCompletedTaskFromFile(isDone);"},{"lineNumber":160,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":161,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":163,"author":{"gitId":"Leeyp"},"content":"    private static void markCompletedTaskFromFile(char isDone) {"},{"lineNumber":164,"author":{"gitId":"Leeyp"},"content":"        if (isDone \u003d\u003d \u0027Y\u0027) {"},{"lineNumber":165,"author":{"gitId":"Leeyp"},"content":"            tasks.get(maxTaskIndex-1).markAsDone();"},{"lineNumber":166,"author":{"gitId":"Leeyp"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":169,"author":{"gitId":"Leeyp"},"content":"    private static void addNewTaskFromFile(String fileLine, char taskType) {"},{"lineNumber":170,"author":{"gitId":"Leeyp"},"content":"        String description;"},{"lineNumber":171,"author":{"gitId":"Leeyp"},"content":"        switch (taskType) {"},{"lineNumber":172,"author":{"gitId":"Leeyp"},"content":"        case (\u0027T\u0027):"},{"lineNumber":173,"author":{"gitId":"Leeyp"},"content":"            addNewTodo(\"todo\" + fileLine.substring(NEW_TASK_INDEX));"},{"lineNumber":174,"author":{"gitId":"Leeyp"},"content":"            break;"},{"lineNumber":175,"author":{"gitId":"Leeyp"},"content":"        case (\u0027D\u0027):"},{"lineNumber":176,"author":{"gitId":"Leeyp"},"content":"            int deadlineIndex \u003d fileLine.indexOf(\"(by:\");"},{"lineNumber":177,"author":{"gitId":"Leeyp"},"content":"            description \u003d fileLine.substring(NEW_TASK_INDEX, deadlineIndex);"},{"lineNumber":178,"author":{"gitId":"Leeyp"},"content":"            String deadline \u003d getTimeFromFile(fileLine, deadlineIndex);"},{"lineNumber":179,"author":{"gitId":"Leeyp"},"content":"            addNewDeadline(\"deadline\" + description + \"/by\" + deadline);"},{"lineNumber":180,"author":{"gitId":"Leeyp"},"content":"            break;"},{"lineNumber":181,"author":{"gitId":"Leeyp"},"content":"        case (\u0027E\u0027):"},{"lineNumber":182,"author":{"gitId":"Leeyp"},"content":"            int eventIndex \u003d fileLine.indexOf(\"(at:\");"},{"lineNumber":183,"author":{"gitId":"Leeyp"},"content":"            description \u003d fileLine.substring(NEW_TASK_INDEX, eventIndex);"},{"lineNumber":184,"author":{"gitId":"Leeyp"},"content":"            String event \u003d getTimeFromFile(fileLine, eventIndex);"},{"lineNumber":185,"author":{"gitId":"Leeyp"},"content":"            addNewEvent(\"event\" + description + \"/at\" + event);"},{"lineNumber":186,"author":{"gitId":"Leeyp"},"content":"            break;"},{"lineNumber":187,"author":{"gitId":"Leeyp"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":190,"author":{"gitId":"Leeyp"},"content":"    private static String getTimeFromFile(String fileLine, int timeIndex) {"},{"lineNumber":191,"author":{"gitId":"Leeyp"},"content":"        return fileLine.substring(timeIndex + 4, fileLine.length() - 1);"},{"lineNumber":192,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":194,"author":{"gitId":"Leeyp"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {"},{"lineNumber":195,"author":{"gitId":"Leeyp"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":196,"author":{"gitId":"Leeyp"},"content":"        fw.write(textToAdd);"},{"lineNumber":197,"author":{"gitId":"Leeyp"},"content":"        fw.close();"},{"lineNumber":198,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":200,"author":{"gitId":"Leeyp"},"content":"    private static String getAllTaskListData() {"},{"lineNumber":201,"author":{"gitId":"Leeyp"},"content":"        String data \u003d \"\";"},{"lineNumber":202,"author":{"gitId":"Leeyp"},"content":"        for (int i \u003d 0; i \u003c maxTaskIndex; i++) {"},{"lineNumber":203,"author":{"gitId":"Leeyp"},"content":"            data \u003d data + (tasks.get(i).toString()) + \"\\n\";"},{"lineNumber":204,"author":{"gitId":"Leeyp"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"Leeyp"},"content":"        return data;"},{"lineNumber":206,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":208,"author":{"gitId":"Leeyp"},"content":"    private static void enumerateTasks() {"},{"lineNumber":209,"author":{"gitId":"Leeyp"},"content":"        int currentTaskIndex;"},{"lineNumber":210,"author":{"gitId":"Leeyp"},"content":"        for (int i \u003d 0; i \u003c maxTaskIndex; i++) {"},{"lineNumber":211,"author":{"gitId":"Leeyp"},"content":"            currentTaskIndex \u003d i + 1;"},{"lineNumber":212,"author":{"gitId":"Leeyp"},"content":"            System.out.println(currentTaskIndex + \".\" + tasks.get(i).toString());"},{"lineNumber":213,"author":{"gitId":"Leeyp"},"content":"        }"},{"lineNumber":214,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":215,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":216,"author":{"gitId":"Leeyp"},"content":"    private static void listBeginMessage() {"},{"lineNumber":217,"author":{"gitId":"Leeyp"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":218,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":220,"author":{"gitId":"Leeyp"},"content":"    private static void deleteTask(String input) {"},{"lineNumber":221,"author":{"gitId":"Leeyp"},"content":"        int taskNumberToDelete \u003d (Integer.parseInt(input.substring(DELETE_START).strip()) - 1);"},{"lineNumber":222,"author":{"gitId":"Leeyp"},"content":"        deletedTaskMessage(taskNumberToDelete);"},{"lineNumber":223,"author":{"gitId":"Leeyp"},"content":"        tasks.remove(taskNumberToDelete);"},{"lineNumber":224,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":225,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":226,"author":{"gitId":"Leeyp"},"content":"    private static void deletedTaskMessage(int deletedTaskIndex) {"},{"lineNumber":227,"author":{"gitId":"Leeyp"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":228,"author":{"gitId":"Leeyp"},"content":"        System.out.println(tasks.get(deletedTaskIndex));"},{"lineNumber":229,"author":{"gitId":"Leeyp"},"content":"        System.out.println(\"Now you have \" + (maxTaskIndex - 1) + \" tasks in the list.\" + \"\\n\");"},{"lineNumber":230,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":232,"author":{"gitId":"Leeyp"},"content":"    private static void verifyValidInput(String input, Command c) throws EmptyInputException, InvalidEventTimeException, InvalidDeadlineTimeException {"},{"lineNumber":233,"author":{"gitId":"Leeyp"},"content":"        if (isEmptyInput(input, c)) {"},{"lineNumber":234,"author":{"gitId":"Leeyp"},"content":"            throw new EmptyInputException();"},{"lineNumber":235,"author":{"gitId":"Leeyp"},"content":"        }"},{"lineNumber":236,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":237,"author":{"gitId":"Leeyp"},"content":"        switch (c) {"},{"lineNumber":238,"author":{"gitId":"Leeyp"},"content":"        case EVENT:"},{"lineNumber":239,"author":{"gitId":"Leeyp"},"content":"            if (validEventTime(input)) {"},{"lineNumber":240,"author":{"gitId":"Leeyp"},"content":"                break;"},{"lineNumber":241,"author":{"gitId":"Leeyp"},"content":"            } else {"},{"lineNumber":242,"author":{"gitId":"Leeyp"},"content":"                throw new InvalidEventTimeException();"},{"lineNumber":243,"author":{"gitId":"Leeyp"},"content":"            }"},{"lineNumber":244,"author":{"gitId":"Leeyp"},"content":"        case DEADLINE:"},{"lineNumber":245,"author":{"gitId":"Leeyp"},"content":"            if (validDeadlineTime(input)) {"},{"lineNumber":246,"author":{"gitId":"Leeyp"},"content":"                break;"},{"lineNumber":247,"author":{"gitId":"Leeyp"},"content":"            } else {"},{"lineNumber":248,"author":{"gitId":"Leeyp"},"content":"                throw new InvalidDeadlineTimeException();"},{"lineNumber":249,"author":{"gitId":"Leeyp"},"content":"            }"},{"lineNumber":250,"author":{"gitId":"Leeyp"},"content":"        }"},{"lineNumber":251,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":252,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":253,"author":{"gitId":"Leeyp"},"content":"    private static boolean validDeadlineTime(String input) {"},{"lineNumber":254,"author":{"gitId":"Leeyp"},"content":"        return input.substring(getTimePosition(input), getTimePosition(input) + 3).equals(\"/by\");"},{"lineNumber":255,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":256,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":257,"author":{"gitId":"Leeyp"},"content":"    private static boolean validEventTime(String input) {"},{"lineNumber":258,"author":{"gitId":"Leeyp"},"content":"        return (input.substring(getTimePosition(input), getTimePosition(input) + 3).equals(\"/at\"));"},{"lineNumber":259,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":261,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":262,"author":{"gitId":"Leeyp"},"content":"    private static boolean isEmptyInput(String input, Command c) {"},{"lineNumber":263,"author":{"gitId":"Leeyp"},"content":"        return switch (c) {"},{"lineNumber":264,"author":{"gitId":"Leeyp"},"content":"            case TODO -\u003e (input.substring(TODO_START).strip().equals(\"\"));"},{"lineNumber":265,"author":{"gitId":"Leeyp"},"content":"            case EVENT -\u003e input.substring(EVENT_START, getTimePosition(input)).strip().equals(\"\");"},{"lineNumber":266,"author":{"gitId":"Leeyp"},"content":"            case DEADLINE -\u003e (input.substring(DEADLINE_START, getTimePosition(input)).strip().equals(\"\"));"},{"lineNumber":267,"author":{"gitId":"Leeyp"},"content":"            default -\u003e false;"},{"lineNumber":268,"author":{"gitId":"Leeyp"},"content":"        };"},{"lineNumber":269,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":270,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":271,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":272,"author":{"gitId":"Leeyp"},"content":"    private static char getTaskType(String fileLine) {"},{"lineNumber":273,"author":{"gitId":"Leeyp"},"content":"        return fileLine.charAt(1);"},{"lineNumber":274,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":275,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":276,"author":{"gitId":"Leeyp"},"content":"    private static char getDone(String fileLine) {"},{"lineNumber":277,"author":{"gitId":"Leeyp"},"content":"        return fileLine.charAt(4);"},{"lineNumber":278,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":279,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":280,"author":{"gitId":"Leeyp"},"content":"    private static void markTaskAsDone(String input) {"},{"lineNumber":281,"author":{"gitId":"Leeyp"},"content":"        int completedTaskIndex \u003d getCompletedTaskIndex(input);"},{"lineNumber":282,"author":{"gitId":"Leeyp"},"content":"        tasks.get(completedTaskIndex).markAsDone();"},{"lineNumber":283,"author":{"gitId":"Leeyp"},"content":"        completedTaskMessage(completedTaskIndex);"},{"lineNumber":284,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":285,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":286,"author":{"gitId":"Leeyp"},"content":"    private static void addNewDeadline(String input) {"},{"lineNumber":287,"author":{"gitId":"Leeyp"},"content":"        tasks.add(new Deadline(input.substring(DEADLINE_START, getTimePosition(input)), getTime(input)));"},{"lineNumber":288,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":289,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":290,"author":{"gitId":"Leeyp"},"content":"    private static void addNewEvent(String input) {"},{"lineNumber":291,"author":{"gitId":"Leeyp"},"content":"        tasks.add(new Event(input.substring(EVENT_START, getTimePosition(input)), getTime(input)));"},{"lineNumber":292,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":293,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":294,"author":{"gitId":"Leeyp"},"content":"    private static void addNewTodo(String input) {"},{"lineNumber":295,"author":{"gitId":"Leeyp"},"content":"        tasks.add(new ToDo(input.substring(TODO_START)));"},{"lineNumber":296,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":297,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":298,"author":{"gitId":"Leeyp"},"content":"    private static int getTimePosition(String input) {"},{"lineNumber":299,"author":{"gitId":"Leeyp"},"content":"        return input.indexOf(\u0027/\u0027);"},{"lineNumber":300,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":301,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":302,"author":{"gitId":"Leeyp"},"content":"    private static String getTime(String input) {"},{"lineNumber":303,"author":{"gitId":"Leeyp"},"content":"        int timePosition \u003d getTimePosition(input);"},{"lineNumber":304,"author":{"gitId":"Leeyp"},"content":"        return input.substring(timePosition + 3);"},{"lineNumber":305,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":306,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":307,"author":{"gitId":"Leeyp"},"content":"    private static int getCompletedTaskIndex(String input) {"},{"lineNumber":308,"author":{"gitId":"Leeyp"},"content":"        return (Integer.parseInt(input.substring(DONE_START)) - 1);"},{"lineNumber":309,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":310,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":311,"author":{"gitId":"Leeyp"},"content":"    private static void completedTaskMessage(int completedTaskIndex) {"},{"lineNumber":312,"author":{"gitId":"Leeyp"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":313,"author":{"gitId":"Leeyp"},"content":"        System.out.println(\"[\" + tasks.get(completedTaskIndex).getStatusIcon() + \"] \" + tasks.get(completedTaskIndex).getDescription() + \"\\n\");"},{"lineNumber":314,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":315,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":316,"author":{"gitId":"Leeyp"},"content":"    private static void confirmNewTask() {"},{"lineNumber":317,"author":{"gitId":"Leeyp"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":318,"author":{"gitId":"Leeyp"},"content":"        System.out.println(tasks.get(maxTaskIndex));"},{"lineNumber":319,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":320,"author":{"gitId":"Leeyp"},"content":"        int numTasks \u003d getNumTasks();"},{"lineNumber":321,"author":{"gitId":"Leeyp"},"content":"        System.out.println(\"Now you have \" + numTasks + \" tasks in the list.\");"},{"lineNumber":322,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":323,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":324,"author":{"gitId":"Leeyp"},"content":"    private static int getNumTasks() {"},{"lineNumber":325,"author":{"gitId":"Leeyp"},"content":"        return maxTaskIndex + 1;"},{"lineNumber":326,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":327,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":328,"author":{"gitId":"Leeyp"},"content":"    private static void incrementTasks() {"},{"lineNumber":329,"author":{"gitId":"Leeyp"},"content":"        maxTaskIndex++;"},{"lineNumber":330,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":331,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":332,"author":{"gitId":"Leeyp"},"content":"    private static void decrementTasks() {"},{"lineNumber":333,"author":{"gitId":"Leeyp"},"content":"        maxTaskIndex--;"},{"lineNumber":334,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":335,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":336,"author":{"gitId":"Leeyp"},"content":"    private static boolean isBye() {"},{"lineNumber":337,"author":{"gitId":"Leeyp"},"content":"        return input.equals(\"bye\");"},{"lineNumber":338,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":339,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":340,"author":{"gitId":"Leeyp"},"content":"    private static boolean isDeadline() {"},{"lineNumber":341,"author":{"gitId":"Leeyp"},"content":"        return input.length() \u003e 8 \u0026\u0026 input.substring(0, 8).equals(\"deadline\");"},{"lineNumber":342,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":343,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":344,"author":{"gitId":"Leeyp"},"content":"    private static boolean isEvent() {"},{"lineNumber":345,"author":{"gitId":"Leeyp"},"content":"        return input.length() \u003e 5 \u0026\u0026 input.substring(0, 5).equals(\"event\");"},{"lineNumber":346,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":347,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":348,"author":{"gitId":"Leeyp"},"content":"    private static boolean isTodo() {"},{"lineNumber":349,"author":{"gitId":"Leeyp"},"content":"        return input.length() \u003e 4 \u0026\u0026 input.substring(0, 4).equals(\"todo\");"},{"lineNumber":350,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":351,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":352,"author":{"gitId":"Leeyp"},"content":"    private static boolean isList() {"},{"lineNumber":353,"author":{"gitId":"Leeyp"},"content":"        return input.equals(\"list\");"},{"lineNumber":354,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":355,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":356,"author":{"gitId":"Leeyp"},"content":"    private static boolean isDelete() {"},{"lineNumber":357,"author":{"gitId":"Leeyp"},"content":"        return input.length() \u003e 6 \u0026\u0026 input.substring(0, 6).equals(\"delete\");"},{"lineNumber":358,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":359,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":360,"author":{"gitId":"Leeyp"},"content":"    private static boolean isDone() {"},{"lineNumber":361,"author":{"gitId":"Leeyp"},"content":"        return input.length() \u003e 4 \u0026\u0026 input.substring(0, 4).equals(\"done\");"},{"lineNumber":362,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":363,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":364,"author":{"gitId":"Leeyp"},"content":"    private static String getInput(Scanner in) {"},{"lineNumber":365,"author":{"gitId":"Leeyp"},"content":"        String input;"},{"lineNumber":366,"author":{"gitId":"Leeyp"},"content":"        input \u003d in.nextLine();"},{"lineNumber":367,"author":{"gitId":"Leeyp"},"content":"        return input;"},{"lineNumber":368,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":369,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":370,"author":{"gitId":"Leeyp"},"content":"    private static void welcomeMessage() {"},{"lineNumber":371,"author":{"gitId":"Leeyp"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":372,"author":{"gitId":"Leeyp"},"content":"        System.out.println(\"What can I do for you?\\n\");"},{"lineNumber":373,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":374,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":375,"author":{"gitId":"Leeyp"},"content":"    private static void exitMessage() {"},{"lineNumber":376,"author":{"gitId":"Leeyp"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\");"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":378,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":379,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Leeyp":375,"-":4}},{"path":"src/main/java/duke/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"public class EmptyInputException extends Exception{"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"}"}],"authorContributionMap":{"Leeyp":4}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"public class Event extends Task{"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"    public Event(String description, String at) {"},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"        this.at \u003d at;"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"        return \"[E]\" + super.toString() + \"(at:\" + at + \")\";"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"}"}],"authorContributionMap":{"Leeyp":15}},{"path":"src/main/java/duke/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"public class InvalidCommandException extends Exception{"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"}"}],"authorContributionMap":{"Leeyp":4}},{"path":"src/main/java/duke/InvalidDeadlineTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"public class InvalidDeadlineTimeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"}"}],"authorContributionMap":{"Leeyp":4}},{"path":"src/main/java/duke/InvalidEventTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"public class InvalidEventTimeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"}"}],"authorContributionMap":{"Leeyp":4}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"        return (isDone ? \"Y\" : \"N\"); //return Y or N symbols"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"    public String getDescription() {"},{"lineNumber":17,"author":{"gitId":"Leeyp"},"content":"        return description;"},{"lineNumber":18,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":20,"author":{"gitId":"Leeyp"},"content":"    public void markAsDone() {"},{"lineNumber":21,"author":{"gitId":"Leeyp"},"content":"        isDone \u003d true;"},{"lineNumber":22,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":24,"author":{"gitId":"Leeyp"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"Leeyp"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \" + description);"},{"lineNumber":26,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Leeyp"},"content":"}"}],"authorContributionMap":{"Leeyp":27}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"public class ToDo extends Task{"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"    public ToDo(String description) {"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"}"}],"authorContributionMap":{"Leeyp":13}}]
