[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"FarmZH98"},"content":"## Introduction"},{"lineNumber":4,"author":{"gitId":"FarmZH98"},"content":"This is project Duke, a program which helps you manage your tasks using Command Line Interface (CLI) which is simple to use and efficient."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":7,"author":{"gitId":"FarmZH98"},"content":"1. [Adding a todo task](#1-todo---adds-a-todo-task)"},{"lineNumber":8,"author":{"gitId":"FarmZH98"},"content":"2. [Adding an event](#2-event---adds-an-event)"},{"lineNumber":9,"author":{"gitId":"FarmZH98"},"content":"3. [Adding a deadline](#3-deadline---adds-a-deadline)"},{"lineNumber":10,"author":{"gitId":"FarmZH98"},"content":"4. [List out existing tasks](#4-list---list-out-all-existing-tasks)"},{"lineNumber":11,"author":{"gitId":"FarmZH98"},"content":"5. [Mark task as done](#5-done---mark-a-specific-task-as-done)"},{"lineNumber":12,"author":{"gitId":"FarmZH98"},"content":"6. [Delete task](#6-delete---deletes-a-specific-task-from-the-list-of-tasks)"},{"lineNumber":13,"author":{"gitId":"FarmZH98"},"content":"7. [Find tasks](#7-find---searches-for-all-tasks-with-the-specified-keyword)"},{"lineNumber":14,"author":{"gitId":"FarmZH98"},"content":"8. [Close program](#8-bye---terminates-the-program)"},{"lineNumber":15,"author":{"gitId":"FarmZH98"},"content":"9. [Task storage](#9-task-storage)"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"FarmZH98"},"content":"### 1. `todo` - Adds a Todo task"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"FarmZH98"},"content":"Adds a todo task to the list of tasks."},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"FarmZH98"},"content":"Format: `todo \u003ctask description\u003e`"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"FarmZH98"},"content":"Example of usage: `todo homework`"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"FarmZH98"},"content":"Expected Outcome: "},{"lineNumber":26,"author":{"gitId":"FarmZH98"},"content":"```"},{"lineNumber":27,"author":{"gitId":"FarmZH98"},"content":"**********************************************************"},{"lineNumber":28,"author":{"gitId":"FarmZH98"},"content":"[T][ ] homework"},{"lineNumber":29,"author":{"gitId":"FarmZH98"},"content":"Now you have 1 tasks in the list."},{"lineNumber":30,"author":{"gitId":"FarmZH98"},"content":"**********************************************************"},{"lineNumber":31,"author":{"gitId":"FarmZH98"},"content":"```"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"FarmZH98"},"content":"### 2. `event` - Adds an event"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"FarmZH98"},"content":"Adds an event to the list of tasks."},{"lineNumber":36,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":37,"author":{"gitId":"FarmZH98"},"content":"Format: `event \u003ctask description\u003e /at \u003ctime\u003e`"},{"lineNumber":38,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":39,"author":{"gitId":"FarmZH98"},"content":"Example of usage: `event sister\u0027s wedding /at 10/3/2021 3pm`"},{"lineNumber":40,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":41,"author":{"gitId":"FarmZH98"},"content":"Expected Outcome: "},{"lineNumber":42,"author":{"gitId":"FarmZH98"},"content":"```"},{"lineNumber":43,"author":{"gitId":"FarmZH98"},"content":"**********************************************************"},{"lineNumber":44,"author":{"gitId":"FarmZH98"},"content":"[E][ ] sister\u0027s wedding (at: 10/3/2021 3pm)"},{"lineNumber":45,"author":{"gitId":"FarmZH98"},"content":"Now you have 2 tasks in the list."},{"lineNumber":46,"author":{"gitId":"FarmZH98"},"content":"**********************************************************"},{"lineNumber":47,"author":{"gitId":"FarmZH98"},"content":"```"},{"lineNumber":48,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":49,"author":{"gitId":"FarmZH98"},"content":"### 3. `deadline` - Adds a deadline"},{"lineNumber":50,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":51,"author":{"gitId":"FarmZH98"},"content":"Adds a deadline to the list of tasks."},{"lineNumber":52,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":53,"author":{"gitId":"FarmZH98"},"content":"Format: `deadline \u003ctask description\u003e /by \u003ctime\u003e`"},{"lineNumber":54,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":55,"author":{"gitId":"FarmZH98"},"content":"Example of usage: `deadline cs2113 iP /by 5/3/2021`"},{"lineNumber":56,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":57,"author":{"gitId":"FarmZH98"},"content":"Expected Outcome: "},{"lineNumber":58,"author":{"gitId":"FarmZH98"},"content":"```"},{"lineNumber":59,"author":{"gitId":"FarmZH98"},"content":"**********************************************************"},{"lineNumber":60,"author":{"gitId":"FarmZH98"},"content":"[D][ ] cs2113 iP (by: 5/3/2021)"},{"lineNumber":61,"author":{"gitId":"FarmZH98"},"content":"Now you have 3 tasks in the list."},{"lineNumber":62,"author":{"gitId":"FarmZH98"},"content":"**********************************************************"},{"lineNumber":63,"author":{"gitId":"FarmZH98"},"content":"```"},{"lineNumber":64,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":65,"author":{"gitId":"FarmZH98"},"content":"### 4. `list` - List out all existing tasks"},{"lineNumber":66,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":67,"author":{"gitId":"FarmZH98"},"content":"List out all existing tasks in the task list regardless if they are done or not."},{"lineNumber":68,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":69,"author":{"gitId":"FarmZH98"},"content":"Format: `list`"},{"lineNumber":70,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":71,"author":{"gitId":"FarmZH98"},"content":"Example of usage: `list`"},{"lineNumber":72,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":73,"author":{"gitId":"FarmZH98"},"content":"Expected Outcome:"},{"lineNumber":74,"author":{"gitId":"FarmZH98"},"content":"```"},{"lineNumber":75,"author":{"gitId":"FarmZH98"},"content":"************************************************************"},{"lineNumber":76,"author":{"gitId":"FarmZH98"},"content":"Here are the tasks in your list:"},{"lineNumber":77,"author":{"gitId":"FarmZH98"},"content":"1. [T][ ] homework"},{"lineNumber":78,"author":{"gitId":"FarmZH98"},"content":"2. [E][ ] sister\u0027s wedding (at: 10/3/2021 3pm)"},{"lineNumber":79,"author":{"gitId":"FarmZH98"},"content":"3. [D][ ] cs2113 iP (by: 5/3/2021)"},{"lineNumber":80,"author":{"gitId":"FarmZH98"},"content":"************************************************************"},{"lineNumber":81,"author":{"gitId":"FarmZH98"},"content":"```"},{"lineNumber":82,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":83,"author":{"gitId":"FarmZH98"},"content":"### 5. `done` - mark a specific task as done"},{"lineNumber":84,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":85,"author":{"gitId":"FarmZH98"},"content":"mark a specific task with its index number in the task list as done."},{"lineNumber":86,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":87,"author":{"gitId":"FarmZH98"},"content":"Format: `done \u003cindex\u003e`"},{"lineNumber":88,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":89,"author":{"gitId":"FarmZH98"},"content":"Example of usage: `done 1`"},{"lineNumber":90,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":91,"author":{"gitId":"FarmZH98"},"content":"Expected Outcome: "},{"lineNumber":92,"author":{"gitId":"FarmZH98"},"content":"```"},{"lineNumber":93,"author":{"gitId":"FarmZH98"},"content":"**********************************************************"},{"lineNumber":94,"author":{"gitId":"FarmZH98"},"content":"Awesome! I have marked this task as done: "},{"lineNumber":95,"author":{"gitId":"FarmZH98"},"content":"[T][âœ“] homework"},{"lineNumber":96,"author":{"gitId":"FarmZH98"},"content":"**********************************************************"},{"lineNumber":97,"author":{"gitId":"FarmZH98"},"content":"```"},{"lineNumber":98,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":99,"author":{"gitId":"FarmZH98"},"content":"### 6. `delete` - deletes a specific task from the list of tasks"},{"lineNumber":100,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":101,"author":{"gitId":"FarmZH98"},"content":"delete a specific task using its index number in the task list."},{"lineNumber":102,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":103,"author":{"gitId":"FarmZH98"},"content":"Format: `delete \u003cindex\u003e`"},{"lineNumber":104,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":105,"author":{"gitId":"FarmZH98"},"content":"Example of usage: `delete 2`"},{"lineNumber":106,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":107,"author":{"gitId":"FarmZH98"},"content":"Expected Outcome: "},{"lineNumber":108,"author":{"gitId":"FarmZH98"},"content":"```"},{"lineNumber":109,"author":{"gitId":"FarmZH98"},"content":"************************************************************"},{"lineNumber":110,"author":{"gitId":"FarmZH98"},"content":"Noted. I\u0027ve removed this task:"},{"lineNumber":111,"author":{"gitId":"FarmZH98"},"content":"[E][ ] sister\u0027s wedding (at: 10/3/2021 3pm)"},{"lineNumber":112,"author":{"gitId":"FarmZH98"},"content":"Now you have 2 tasks in the list."},{"lineNumber":113,"author":{"gitId":"FarmZH98"},"content":"************************************************************"},{"lineNumber":114,"author":{"gitId":"FarmZH98"},"content":"```"},{"lineNumber":115,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":116,"author":{"gitId":"FarmZH98"},"content":"### 7. `find` - searches for all tasks with the specified keyword"},{"lineNumber":117,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":118,"author":{"gitId":"FarmZH98"},"content":"searches for all the tasks which contains the keyword input by user."},{"lineNumber":119,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":120,"author":{"gitId":"FarmZH98"},"content":"Format: `find \u003ckeyword\u003e`"},{"lineNumber":121,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":122,"author":{"gitId":"FarmZH98"},"content":"Example of usage: `find homework`"},{"lineNumber":123,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":124,"author":{"gitId":"FarmZH98"},"content":"Expected Outcome: "},{"lineNumber":125,"author":{"gitId":"FarmZH98"},"content":"```"},{"lineNumber":126,"author":{"gitId":"FarmZH98"},"content":"************************************************************"},{"lineNumber":127,"author":{"gitId":"FarmZH98"},"content":"Here are the matching tasks in your list:"},{"lineNumber":128,"author":{"gitId":"FarmZH98"},"content":"1. [T][âœ“] homework"},{"lineNumber":129,"author":{"gitId":"FarmZH98"},"content":"************************************************************"},{"lineNumber":130,"author":{"gitId":"FarmZH98"},"content":"```"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"FarmZH98"},"content":"### 8. `bye` - terminates the program"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"FarmZH98"},"content":"Shuts down the program."},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"FarmZH98"},"content":"Format: `bye`"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"FarmZH98"},"content":"Example of usage: `bye`"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"FarmZH98"},"content":"Expected Outcome:"},{"lineNumber":141,"author":{"gitId":"FarmZH98"},"content":"```"},{"lineNumber":142,"author":{"gitId":"FarmZH98"},"content":"############################################################"},{"lineNumber":143,"author":{"gitId":"FarmZH98"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":144,"author":{"gitId":"FarmZH98"},"content":"############################################################"},{"lineNumber":145,"author":{"gitId":"FarmZH98"},"content":"```"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"FarmZH98"},"content":"### 9. `Task Storage`"},{"lineNumber":148,"author":{"gitId":"FarmZH98"},"content":"#### 9.1 Save list of tasks into a file"},{"lineNumber":149,"author":{"gitId":"FarmZH98"},"content":"For every run of input, Duke will attempt to save what is in the task lists into the *tasks.txt* file automatically. No input is needed."},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"FarmZH98"},"content":"####9.2 Load list of tasks from a file"},{"lineNumber":152,"author":{"gitId":"FarmZH98"},"content":"When Duke is started by the user, the list of tasks will be loaded from *tasks.txt* automatically. If it is the first time the user is using, a file called *tasks.txt* will be created instead."},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"FarmZH98"},"content":"##Notes"},{"lineNumber":155,"author":{"gitId":"FarmZH98"},"content":"####1. All commands are case-sensitive and should be typed in lower cases."},{"lineNumber":156,"author":{"gitId":"FarmZH98"},"content":"####2. The date or time of deadlines and events do not need to follow a specific format."},{"lineNumber":157,"author":{"gitId":"FarmZH98"},"content":"####3. If commands are entered are invalid or in an invalid format, Duke will ignore the input and prompt user to enter again."}],"authorContributionMap":{"FarmZH98":138,"-":19}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FarmZH98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":3,"author":{"gitId":"FarmZH98"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":5,"author":{"gitId":"FarmZH98"},"content":"    public Deadline(String description, String time) {"},{"lineNumber":6,"author":{"gitId":"FarmZH98"},"content":"        super(description, time);"},{"lineNumber":7,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":9,"author":{"gitId":"FarmZH98"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"FarmZH98"},"content":"    public String getAlphabet() {"},{"lineNumber":11,"author":{"gitId":"FarmZH98"},"content":"        return \"D\";"},{"lineNumber":12,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":14,"author":{"gitId":"FarmZH98"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"FarmZH98"},"content":"        return this.description + \" (by: \" + this.time + \")\";"},{"lineNumber":16,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"FarmZH98"},"content":"}"}],"authorContributionMap":{"FarmZH98":17}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FarmZH98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":3,"author":{"gitId":"FarmZH98"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":5,"author":{"gitId":"FarmZH98"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":7,"author":{"gitId":"FarmZH98"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"FarmZH98"},"content":"        welcomeMessage();"},{"lineNumber":9,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":10,"author":{"gitId":"FarmZH98"},"content":"        Storage.downloadTask();"},{"lineNumber":11,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":12,"author":{"gitId":"FarmZH98"},"content":"        runProgram();"},{"lineNumber":13,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":14,"author":{"gitId":"FarmZH98"},"content":"        exitMessage();"},{"lineNumber":15,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":17,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":18,"author":{"gitId":"FarmZH98"},"content":"    private static void runProgram() {"},{"lineNumber":19,"author":{"gitId":"FarmZH98"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":20,"author":{"gitId":"FarmZH98"},"content":"        String commandInput \u003d in.nextLine();"},{"lineNumber":21,"author":{"gitId":"FarmZH98"},"content":"        String parsedCommand \u003d Parser.parse(commandInput);"},{"lineNumber":22,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":23,"author":{"gitId":"FarmZH98"},"content":"        while (!parsedCommand.equals(\"bye\")) {"},{"lineNumber":24,"author":{"gitId":"FarmZH98"},"content":"            switch (parsedCommand) {"},{"lineNumber":25,"author":{"gitId":"FarmZH98"},"content":"            case \"list\":"},{"lineNumber":26,"author":{"gitId":"FarmZH98"},"content":"                TaskList.printTasks();"},{"lineNumber":27,"author":{"gitId":"FarmZH98"},"content":"                break;"},{"lineNumber":28,"author":{"gitId":"FarmZH98"},"content":"            case \"done\":"},{"lineNumber":29,"author":{"gitId":"FarmZH98"},"content":"                processDoneCommand(commandInput);"},{"lineNumber":30,"author":{"gitId":"FarmZH98"},"content":"                break;"},{"lineNumber":31,"author":{"gitId":"FarmZH98"},"content":"            case \"todo\":"},{"lineNumber":32,"author":{"gitId":"FarmZH98"},"content":"                addTodo(commandInput);"},{"lineNumber":33,"author":{"gitId":"FarmZH98"},"content":"                break;"},{"lineNumber":34,"author":{"gitId":"FarmZH98"},"content":"            case \"event\":"},{"lineNumber":35,"author":{"gitId":"FarmZH98"},"content":"                addEvent(commandInput);"},{"lineNumber":36,"author":{"gitId":"FarmZH98"},"content":"                break;"},{"lineNumber":37,"author":{"gitId":"FarmZH98"},"content":"            case \"deadline\":"},{"lineNumber":38,"author":{"gitId":"FarmZH98"},"content":"                addDeadline(commandInput);"},{"lineNumber":39,"author":{"gitId":"FarmZH98"},"content":"                break;"},{"lineNumber":40,"author":{"gitId":"FarmZH98"},"content":"            case \"delete\":"},{"lineNumber":41,"author":{"gitId":"FarmZH98"},"content":"                processDeleteCommand(commandInput);"},{"lineNumber":42,"author":{"gitId":"FarmZH98"},"content":"                break;"},{"lineNumber":43,"author":{"gitId":"FarmZH98"},"content":"            case \"find\":"},{"lineNumber":44,"author":{"gitId":"FarmZH98"},"content":"                processFindCommand(commandInput);"},{"lineNumber":45,"author":{"gitId":"FarmZH98"},"content":"                break;"},{"lineNumber":46,"author":{"gitId":"FarmZH98"},"content":"            default:"},{"lineNumber":47,"author":{"gitId":"FarmZH98"},"content":"                System.out.println(\"Invalid command entered, please try again.\");"},{"lineNumber":48,"author":{"gitId":"FarmZH98"},"content":"                break;"},{"lineNumber":49,"author":{"gitId":"FarmZH98"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"FarmZH98"},"content":"            Storage.uploadTasks();"},{"lineNumber":51,"author":{"gitId":"FarmZH98"},"content":"            commandInput \u003d in.nextLine();"},{"lineNumber":52,"author":{"gitId":"FarmZH98"},"content":"            parsedCommand \u003d Parser.parse(commandInput);"},{"lineNumber":53,"author":{"gitId":"FarmZH98"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":56,"author":{"gitId":"FarmZH98"},"content":"    private static void processFindCommand(String commandInput) {"},{"lineNumber":57,"author":{"gitId":"FarmZH98"},"content":"        String keyWord \u003d commandInput.substring(5);"},{"lineNumber":58,"author":{"gitId":"FarmZH98"},"content":"        TaskList.printKeywordTasks(keyWord);"},{"lineNumber":59,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":61,"author":{"gitId":"FarmZH98"},"content":"    private static void processDeleteCommand(String commandInput) {"},{"lineNumber":62,"author":{"gitId":"FarmZH98"},"content":"        try {"},{"lineNumber":63,"author":{"gitId":"FarmZH98"},"content":"            int taskNumber \u003d Integer.parseInt(commandInput.substring(7, 8));"},{"lineNumber":64,"author":{"gitId":"FarmZH98"},"content":"            TaskList.delete(taskNumber);"},{"lineNumber":65,"author":{"gitId":"FarmZH98"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":66,"author":{"gitId":"FarmZH98"},"content":"            System.out.println(\"â˜¹ OOPS!!! No task number detected, please try again.\");"},{"lineNumber":67,"author":{"gitId":"FarmZH98"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":68,"author":{"gitId":"FarmZH98"},"content":"            System.out.println(\"â˜¹ OOPS!!! Invalid number, please try again.\");"},{"lineNumber":69,"author":{"gitId":"FarmZH98"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":72,"author":{"gitId":"FarmZH98"},"content":"    private static void addDeadline(String commandInput) {"},{"lineNumber":73,"author":{"gitId":"FarmZH98"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"FarmZH98"},"content":"            int timeIndex \u003d commandInput.indexOf(\"/by\");"},{"lineNumber":75,"author":{"gitId":"FarmZH98"},"content":"            TaskList.add(new Deadline(commandInput.substring(9, timeIndex - 1), commandInput.substring(timeIndex + 4)));"},{"lineNumber":76,"author":{"gitId":"FarmZH98"},"content":"            int taskNumber \u003d TaskList.getTaskCount();"},{"lineNumber":77,"author":{"gitId":"FarmZH98"},"content":"            TaskList.getTask(taskNumber).printDescription();"},{"lineNumber":78,"author":{"gitId":"FarmZH98"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":79,"author":{"gitId":"FarmZH98"},"content":"            System.out.println(\"â˜¹ OOPS!!! The description is invalid, please try again.\");"},{"lineNumber":80,"author":{"gitId":"FarmZH98"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":83,"author":{"gitId":"FarmZH98"},"content":"    private static void addEvent(String commandInput) {"},{"lineNumber":84,"author":{"gitId":"FarmZH98"},"content":"        try {"},{"lineNumber":85,"author":{"gitId":"FarmZH98"},"content":"            int timeIndex \u003d commandInput.indexOf(\"/at\");"},{"lineNumber":86,"author":{"gitId":"FarmZH98"},"content":"            TaskList.add(new Event(commandInput.substring(6, timeIndex - 1), commandInput.substring(timeIndex + 4)));"},{"lineNumber":87,"author":{"gitId":"FarmZH98"},"content":"            int taskNumber \u003d TaskList.getTaskCount();"},{"lineNumber":88,"author":{"gitId":"FarmZH98"},"content":"            TaskList.getTask(taskNumber).printDescription();"},{"lineNumber":89,"author":{"gitId":"FarmZH98"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":90,"author":{"gitId":"FarmZH98"},"content":"            System.out.println(\"â˜¹ OOPS!!! The description is invalid, please try again.\");"},{"lineNumber":91,"author":{"gitId":"FarmZH98"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":94,"author":{"gitId":"FarmZH98"},"content":"    private static void addTodo(String commandInput) {"},{"lineNumber":95,"author":{"gitId":"FarmZH98"},"content":"        try {"},{"lineNumber":96,"author":{"gitId":"FarmZH98"},"content":"            TaskList.add(new Todo(commandInput.substring(5)));"},{"lineNumber":97,"author":{"gitId":"FarmZH98"},"content":"            int taskNumber \u003d TaskList.getTaskCount();"},{"lineNumber":98,"author":{"gitId":"FarmZH98"},"content":"            TaskList.getTask(taskNumber).printDescription();"},{"lineNumber":99,"author":{"gitId":"FarmZH98"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":100,"author":{"gitId":"FarmZH98"},"content":"            System.out.println(\"â˜¹ OOPS!!! The description is empty, please try again.\");"},{"lineNumber":101,"author":{"gitId":"FarmZH98"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":104,"author":{"gitId":"FarmZH98"},"content":"    private static void processDoneCommand(String commandInput) {"},{"lineNumber":105,"author":{"gitId":"FarmZH98"},"content":"        try {"},{"lineNumber":106,"author":{"gitId":"FarmZH98"},"content":"            int taskNumber \u003d Integer.parseInt(commandInput.substring(5, 6));"},{"lineNumber":107,"author":{"gitId":"FarmZH98"},"content":"            TaskList.getTask(taskNumber).setDone();"},{"lineNumber":108,"author":{"gitId":"FarmZH98"},"content":"            TaskList.getTask(taskNumber).printDoneTask();"},{"lineNumber":109,"author":{"gitId":"FarmZH98"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":110,"author":{"gitId":"FarmZH98"},"content":"            System.out.println(\"â˜¹ OOPS!!! No task number detected, please try again.\");"},{"lineNumber":111,"author":{"gitId":"FarmZH98"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":112,"author":{"gitId":"FarmZH98"},"content":"            System.out.println(\"â˜¹ OOPS!!! Invalid number, please try again.\");"},{"lineNumber":113,"author":{"gitId":"FarmZH98"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":116,"author":{"gitId":"FarmZH98"},"content":"    private static void exitMessage() {"},{"lineNumber":117,"author":{"gitId":"FarmZH98"},"content":"        Ui.printExitMessage();"},{"lineNumber":118,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":120,"author":{"gitId":"FarmZH98"},"content":"    private static void welcomeMessage() {"},{"lineNumber":121,"author":{"gitId":"FarmZH98"},"content":"        Ui.printLogo();"},{"lineNumber":122,"author":{"gitId":"FarmZH98"},"content":"        Ui.printStartMessage();"},{"lineNumber":123,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":125,"author":{"gitId":"FarmZH98"},"content":"}"}],"authorContributionMap":{"FarmZH98":125}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FarmZH98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":3,"author":{"gitId":"FarmZH98"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":5,"author":{"gitId":"FarmZH98"},"content":"    public Event(String description, String time) {"},{"lineNumber":6,"author":{"gitId":"FarmZH98"},"content":"        super(description, time);"},{"lineNumber":7,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":9,"author":{"gitId":"FarmZH98"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"FarmZH98"},"content":"    public String getAlphabet() {"},{"lineNumber":11,"author":{"gitId":"FarmZH98"},"content":"        return \"E\";"},{"lineNumber":12,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":14,"author":{"gitId":"FarmZH98"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"FarmZH98"},"content":"        return this.description + \" (at: \" + this.time + \")\";"},{"lineNumber":16,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"FarmZH98"},"content":"}"}],"authorContributionMap":{"FarmZH98":17}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FarmZH98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":3,"author":{"gitId":"FarmZH98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"FarmZH98"},"content":" * A class that deals with the parsing of string when loading tasks from saved file"},{"lineNumber":5,"author":{"gitId":"FarmZH98"},"content":" */"},{"lineNumber":6,"author":{"gitId":"FarmZH98"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":8,"author":{"gitId":"FarmZH98"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"FarmZH98"},"content":"     * Parses the input from user to identify the command that was intended"},{"lineNumber":10,"author":{"gitId":"FarmZH98"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"FarmZH98"},"content":"     * @param input Input from user"},{"lineNumber":12,"author":{"gitId":"FarmZH98"},"content":"     * @return either the first word if the input has more than 1 word,"},{"lineNumber":13,"author":{"gitId":"FarmZH98"},"content":"     * or just return the only word if the input is only 1 word"},{"lineNumber":14,"author":{"gitId":"FarmZH98"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"FarmZH98"},"content":"    public static String parse(String input) {"},{"lineNumber":16,"author":{"gitId":"FarmZH98"},"content":"        input \u003d input.trim();"},{"lineNumber":17,"author":{"gitId":"FarmZH98"},"content":"        if (!input.contains(\" \")) { //one word"},{"lineNumber":18,"author":{"gitId":"FarmZH98"},"content":"            return input;"},{"lineNumber":19,"author":{"gitId":"FarmZH98"},"content":"        } else { //multiple words"},{"lineNumber":20,"author":{"gitId":"FarmZH98"},"content":"            int i \u003d input.indexOf(\u0027 \u0027);"},{"lineNumber":21,"author":{"gitId":"FarmZH98"},"content":"            return input.substring(0, i);"},{"lineNumber":22,"author":{"gitId":"FarmZH98"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"FarmZH98"},"content":"}"}],"authorContributionMap":{"FarmZH98":24}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FarmZH98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":3,"author":{"gitId":"FarmZH98"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"FarmZH98"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"FarmZH98"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"FarmZH98"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":8,"author":{"gitId":"FarmZH98"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"FarmZH98"},"content":" * Represents a storage that deals with the saving and loading"},{"lineNumber":10,"author":{"gitId":"FarmZH98"},"content":" * of all tasks in the computer"},{"lineNumber":11,"author":{"gitId":"FarmZH98"},"content":" */"},{"lineNumber":12,"author":{"gitId":"FarmZH98"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":14,"author":{"gitId":"FarmZH98"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"FarmZH98"},"content":"     * Checks if there is an existing previously saved file and call"},{"lineNumber":16,"author":{"gitId":"FarmZH98"},"content":"     * the private method \u003ccode\u003einitializeExistingTasks\u003c/code\u003e to load the tasks"},{"lineNumber":17,"author":{"gitId":"FarmZH98"},"content":"     * \u003cp\u003e"},{"lineNumber":18,"author":{"gitId":"FarmZH98"},"content":"     * If there is no existing saved file, a new file is created."},{"lineNumber":19,"author":{"gitId":"FarmZH98"},"content":"     * \u003cp\u003e"},{"lineNumber":20,"author":{"gitId":"FarmZH98"},"content":"     * If the file creation failed, the exception thrown will be captured"},{"lineNumber":21,"author":{"gitId":"FarmZH98"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"FarmZH98"},"content":"    public static void downloadTask() {"},{"lineNumber":23,"author":{"gitId":"FarmZH98"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"FarmZH98"},"content":"            File dataDir \u003d new File(\"data\");"},{"lineNumber":25,"author":{"gitId":"FarmZH98"},"content":"            dataDir.mkdir();"},{"lineNumber":26,"author":{"gitId":"FarmZH98"},"content":"            File dataFile \u003d new File(\"data/tasks.txt\");"},{"lineNumber":27,"author":{"gitId":"FarmZH98"},"content":"            if (!dataFile.createNewFile()) {"},{"lineNumber":28,"author":{"gitId":"FarmZH98"},"content":"                initializeExistingTasks(dataFile);"},{"lineNumber":29,"author":{"gitId":"FarmZH98"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"FarmZH98"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"FarmZH98"},"content":"            System.out.println(\"File creation failed.\");"},{"lineNumber":32,"author":{"gitId":"FarmZH98"},"content":"            e.printStackTrace();"},{"lineNumber":33,"author":{"gitId":"FarmZH98"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":35,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":37,"author":{"gitId":"FarmZH98"},"content":"    private static void initializeExistingTasks(File dataFile) throws java.io.IOException {"},{"lineNumber":38,"author":{"gitId":"FarmZH98"},"content":"        Scanner s \u003d new Scanner(dataFile);"},{"lineNumber":39,"author":{"gitId":"FarmZH98"},"content":"        Task t \u003d null;"},{"lineNumber":40,"author":{"gitId":"FarmZH98"},"content":"        while (s.hasNext()) {"},{"lineNumber":41,"author":{"gitId":"FarmZH98"},"content":"            String commandInput \u003d s.nextLine();"},{"lineNumber":42,"author":{"gitId":"FarmZH98"},"content":"            if (commandInput.startsWith(\"T\")) {"},{"lineNumber":43,"author":{"gitId":"FarmZH98"},"content":"                String description \u003d commandInput.substring(8);"},{"lineNumber":44,"author":{"gitId":"FarmZH98"},"content":"                t \u003d new Todo(description);"},{"lineNumber":45,"author":{"gitId":"FarmZH98"},"content":"                TaskList.add(t);"},{"lineNumber":46,"author":{"gitId":"FarmZH98"},"content":"            } else if (commandInput.startsWith(\"D\")) {"},{"lineNumber":47,"author":{"gitId":"FarmZH98"},"content":"                int timeIndex \u003d commandInput.lastIndexOf(\"| \");"},{"lineNumber":48,"author":{"gitId":"FarmZH98"},"content":"                String description \u003d commandInput.substring(8, timeIndex - 1);"},{"lineNumber":49,"author":{"gitId":"FarmZH98"},"content":"                t \u003d new Deadline(description, commandInput.substring(timeIndex + 2));"},{"lineNumber":50,"author":{"gitId":"FarmZH98"},"content":"                TaskList.add(t);"},{"lineNumber":51,"author":{"gitId":"FarmZH98"},"content":"            } else if (commandInput.startsWith(\"E\")) {"},{"lineNumber":52,"author":{"gitId":"FarmZH98"},"content":"                int timeIndex \u003d commandInput.lastIndexOf(\"| \");"},{"lineNumber":53,"author":{"gitId":"FarmZH98"},"content":"                String description \u003d commandInput.substring(8, timeIndex - 1);"},{"lineNumber":54,"author":{"gitId":"FarmZH98"},"content":"                t \u003d new Event(description, commandInput.substring(timeIndex + 2));"},{"lineNumber":55,"author":{"gitId":"FarmZH98"},"content":"                TaskList.add(t);"},{"lineNumber":56,"author":{"gitId":"FarmZH98"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"FarmZH98"},"content":"            if (commandInput.charAt(4) \u003d\u003d \u00271\u0027) {"},{"lineNumber":58,"author":{"gitId":"FarmZH98"},"content":"                t.setDone();"},{"lineNumber":59,"author":{"gitId":"FarmZH98"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"FarmZH98"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":63,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":64,"author":{"gitId":"FarmZH98"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"FarmZH98"},"content":"     * Calls the private method \u003ccode\u003eprocessUploadTasks\u003c/code\u003e"},{"lineNumber":66,"author":{"gitId":"FarmZH98"},"content":"     * to save the file"},{"lineNumber":67,"author":{"gitId":"FarmZH98"},"content":"     * \u003cp\u003e"},{"lineNumber":68,"author":{"gitId":"FarmZH98"},"content":"     * If the file saving process failed, the exception thrown"},{"lineNumber":69,"author":{"gitId":"FarmZH98"},"content":"     * will be captured"},{"lineNumber":70,"author":{"gitId":"FarmZH98"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"FarmZH98"},"content":"    public static void uploadTasks() {"},{"lineNumber":72,"author":{"gitId":"FarmZH98"},"content":"        try {"},{"lineNumber":73,"author":{"gitId":"FarmZH98"},"content":"            processUploadTasks();"},{"lineNumber":74,"author":{"gitId":"FarmZH98"},"content":"        } catch (IOException e) {"},{"lineNumber":75,"author":{"gitId":"FarmZH98"},"content":"            System.out.println(\"Failed to save file.\");"},{"lineNumber":76,"author":{"gitId":"FarmZH98"},"content":"            e.printStackTrace();"},{"lineNumber":77,"author":{"gitId":"FarmZH98"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":79,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":81,"author":{"gitId":"FarmZH98"},"content":"    private static void processUploadTasks() throws IOException {"},{"lineNumber":82,"author":{"gitId":"FarmZH98"},"content":"        FileWriter fw \u003d new FileWriter(\"data/tasks.txt\");"},{"lineNumber":83,"author":{"gitId":"FarmZH98"},"content":"        for (int i \u003d 0; i \u003c TaskList.getTaskCount(); ++i) {"},{"lineNumber":84,"author":{"gitId":"FarmZH98"},"content":"            Task t \u003d TaskList.getTask(i + 1);"},{"lineNumber":85,"author":{"gitId":"FarmZH98"},"content":"            int taskStatus \u003d 0;"},{"lineNumber":86,"author":{"gitId":"FarmZH98"},"content":"            if (t.isDone) {"},{"lineNumber":87,"author":{"gitId":"FarmZH98"},"content":"                taskStatus \u003d 1;"},{"lineNumber":88,"author":{"gitId":"FarmZH98"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"FarmZH98"},"content":"            if (t.getAlphabet().equals(\"T\")) {"},{"lineNumber":90,"author":{"gitId":"FarmZH98"},"content":"                fw.write(\"T | \" + taskStatus + \" | \" + t.description + System.lineSeparator());"},{"lineNumber":91,"author":{"gitId":"FarmZH98"},"content":"            } else {"},{"lineNumber":92,"author":{"gitId":"FarmZH98"},"content":"                fw.write(t.getAlphabet() + \" | \" + taskStatus + \" | \" +"},{"lineNumber":93,"author":{"gitId":"FarmZH98"},"content":"                        t.description + \" | \" + t.time + System.lineSeparator());"},{"lineNumber":94,"author":{"gitId":"FarmZH98"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"FarmZH98"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"FarmZH98"},"content":"        fw.close();"},{"lineNumber":97,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"FarmZH98"},"content":"}"}],"authorContributionMap":{"FarmZH98":98}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FarmZH98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":3,"author":{"gitId":"FarmZH98"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"FarmZH98"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"FarmZH98"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"FarmZH98"},"content":"    protected String time;"},{"lineNumber":7,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":8,"author":{"gitId":"FarmZH98"},"content":"    public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"FarmZH98"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"FarmZH98"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"FarmZH98"},"content":"        this.time \u003d \"\";"},{"lineNumber":12,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":14,"author":{"gitId":"FarmZH98"},"content":"    public Task(String description, String time) {"},{"lineNumber":15,"author":{"gitId":"FarmZH98"},"content":"        this.description \u003d description;"},{"lineNumber":16,"author":{"gitId":"FarmZH98"},"content":"        this.isDone \u003d false;"},{"lineNumber":17,"author":{"gitId":"FarmZH98"},"content":"        this.time \u003d time;"},{"lineNumber":18,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":20,"author":{"gitId":"FarmZH98"},"content":"    public String getStatusIcon() {"},{"lineNumber":21,"author":{"gitId":"FarmZH98"},"content":"        return (isDone ? \"\\u2713\" : \" \"); //return tick or X symbols âœ˜"},{"lineNumber":22,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":24,"author":{"gitId":"FarmZH98"},"content":"    public String getAlphabet() {"},{"lineNumber":25,"author":{"gitId":"FarmZH98"},"content":"        return \"T\";"},{"lineNumber":26,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":28,"author":{"gitId":"FarmZH98"},"content":"    public void setDone() {"},{"lineNumber":29,"author":{"gitId":"FarmZH98"},"content":"        this.isDone \u003d true;"},{"lineNumber":30,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":32,"author":{"gitId":"FarmZH98"},"content":"    public void printDescription() {"},{"lineNumber":33,"author":{"gitId":"FarmZH98"},"content":"        System.out.println(\"**********************************************************\");"},{"lineNumber":34,"author":{"gitId":"FarmZH98"},"content":"        System.out.println(\"[\" + this.getAlphabet() + \"]\" + \"[\" + getStatusIcon() + \"] \" + this.toString());"},{"lineNumber":35,"author":{"gitId":"FarmZH98"},"content":"        System.out.println(\"Now you have \" + TaskList.getTaskCount() + \" tasks in the list.\");"},{"lineNumber":36,"author":{"gitId":"FarmZH98"},"content":"        System.out.println(\"**********************************************************\");"},{"lineNumber":37,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":39,"author":{"gitId":"FarmZH98"},"content":"    public void printDoneTask() {"},{"lineNumber":40,"author":{"gitId":"FarmZH98"},"content":"        System.out.println(\"**********************************************************\");"},{"lineNumber":41,"author":{"gitId":"FarmZH98"},"content":"        System.out.println(\"Awesome! I have marked this task as done: \");"},{"lineNumber":42,"author":{"gitId":"FarmZH98"},"content":"        System.out.println(\"[\" + this.getAlphabet() + \"]\" + \"[\" + getStatusIcon() + \"] \" + this.toString());"},{"lineNumber":43,"author":{"gitId":"FarmZH98"},"content":"        System.out.println(\"**********************************************************\");"},{"lineNumber":44,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"FarmZH98"},"content":"}"}],"authorContributionMap":{"FarmZH98":45}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FarmZH98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":3,"author":{"gitId":"FarmZH98"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":5,"author":{"gitId":"FarmZH98"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"FarmZH98"},"content":" * Represents a task manager where all the tasks are stored in"},{"lineNumber":7,"author":{"gitId":"FarmZH98"},"content":" * this class"},{"lineNumber":8,"author":{"gitId":"FarmZH98"},"content":" * \u003cp\u003e"},{"lineNumber":9,"author":{"gitId":"FarmZH98"},"content":" * User can add, delete, print tasks etc here"},{"lineNumber":10,"author":{"gitId":"FarmZH98"},"content":" */"},{"lineNumber":11,"author":{"gitId":"FarmZH98"},"content":"public class TaskList {"},{"lineNumber":12,"author":{"gitId":"FarmZH98"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"FarmZH98"},"content":"    private static int taskCount \u003d 0;"},{"lineNumber":14,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":15,"author":{"gitId":"FarmZH98"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"FarmZH98"},"content":"     * Adds tasks(todo, event or deadline) to an ArrayList called taskList"},{"lineNumber":17,"author":{"gitId":"FarmZH98"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"FarmZH98"},"content":"     * @param task Task to be added"},{"lineNumber":19,"author":{"gitId":"FarmZH98"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"FarmZH98"},"content":"    public static void add(Task task) {"},{"lineNumber":21,"author":{"gitId":"FarmZH98"},"content":"        taskList.add(task);"},{"lineNumber":22,"author":{"gitId":"FarmZH98"},"content":"        taskCount++;"},{"lineNumber":23,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":25,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":26,"author":{"gitId":"FarmZH98"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"FarmZH98"},"content":"     * Delete and print out the specific task in taskList"},{"lineNumber":28,"author":{"gitId":"FarmZH98"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"FarmZH98"},"content":"     * @param taskIndex index of the specific task to be deleted"},{"lineNumber":30,"author":{"gitId":"FarmZH98"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"FarmZH98"},"content":"    public static void delete(int taskIndex) {"},{"lineNumber":32,"author":{"gitId":"FarmZH98"},"content":"        Task t \u003d taskList.get(taskIndex - 1);"},{"lineNumber":33,"author":{"gitId":"FarmZH98"},"content":"        taskList.remove(taskIndex - 1);"},{"lineNumber":34,"author":{"gitId":"FarmZH98"},"content":"        taskCount--;"},{"lineNumber":35,"author":{"gitId":"FarmZH98"},"content":"        Ui.printDivider();"},{"lineNumber":36,"author":{"gitId":"FarmZH98"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":37,"author":{"gitId":"FarmZH98"},"content":"        System.out.print(\"[\" + t.getAlphabet() + \"]\");"},{"lineNumber":38,"author":{"gitId":"FarmZH98"},"content":"        System.out.println(\"[\" + t.getStatusIcon() + \"] \" + t.toString());"},{"lineNumber":39,"author":{"gitId":"FarmZH98"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");"},{"lineNumber":40,"author":{"gitId":"FarmZH98"},"content":"        Ui.printDivider();"},{"lineNumber":41,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":43,"author":{"gitId":"FarmZH98"},"content":"    public static int getTaskCount() {"},{"lineNumber":44,"author":{"gitId":"FarmZH98"},"content":"        return taskCount;"},{"lineNumber":45,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":47,"author":{"gitId":"FarmZH98"},"content":"    public static Task getTask(int taskIndex) {"},{"lineNumber":48,"author":{"gitId":"FarmZH98"},"content":"        return taskList.get(taskIndex - 1);"},{"lineNumber":49,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":51,"author":{"gitId":"FarmZH98"},"content":"    //prints tasks when user typed \"list\""},{"lineNumber":52,"author":{"gitId":"FarmZH98"},"content":"    public static void printTasks() {"},{"lineNumber":53,"author":{"gitId":"FarmZH98"},"content":"        Ui.printDivider();"},{"lineNumber":54,"author":{"gitId":"FarmZH98"},"content":"        if (taskCount \u003d\u003d 0) {"},{"lineNumber":55,"author":{"gitId":"FarmZH98"},"content":"            System.out.println(\"You do not have any tasks at the moment! :)\");"},{"lineNumber":56,"author":{"gitId":"FarmZH98"},"content":"        } else {"},{"lineNumber":57,"author":{"gitId":"FarmZH98"},"content":"            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":58,"author":{"gitId":"FarmZH98"},"content":"            for (int i \u003d 0; i \u003c taskCount; ++i) {"},{"lineNumber":59,"author":{"gitId":"FarmZH98"},"content":"                System.out.print(i + 1 + \". [\" + taskList.get(i).getAlphabet() + \"]\");"},{"lineNumber":60,"author":{"gitId":"FarmZH98"},"content":"                System.out.println(\"[\" + taskList.get(i).getStatusIcon() + \"] \" + taskList.get(i).toString());"},{"lineNumber":61,"author":{"gitId":"FarmZH98"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"FarmZH98"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"FarmZH98"},"content":"        Ui.printDivider();"},{"lineNumber":64,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":66,"author":{"gitId":"FarmZH98"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"FarmZH98"},"content":"     * Prints all tasks in taskList that contains a specific keyword"},{"lineNumber":68,"author":{"gitId":"FarmZH98"},"content":"     * in its description"},{"lineNumber":69,"author":{"gitId":"FarmZH98"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"FarmZH98"},"content":"     * @param keyword Keyword to be searched in all the tasks in taskList"},{"lineNumber":71,"author":{"gitId":"FarmZH98"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"FarmZH98"},"content":"    public static void printKeywordTasks(String keyword) {"},{"lineNumber":73,"author":{"gitId":"FarmZH98"},"content":"        ArrayList\u003cTask\u003e keywordTaskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":74,"author":{"gitId":"FarmZH98"},"content":"        for (Task t : taskList) {"},{"lineNumber":75,"author":{"gitId":"FarmZH98"},"content":"            if (t.description.toLowerCase().contains(keyword.toLowerCase())) {"},{"lineNumber":76,"author":{"gitId":"FarmZH98"},"content":"                keywordTaskList.add(t);"},{"lineNumber":77,"author":{"gitId":"FarmZH98"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"FarmZH98"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":80,"author":{"gitId":"FarmZH98"},"content":"        if (keywordTaskList.isEmpty()) {"},{"lineNumber":81,"author":{"gitId":"FarmZH98"},"content":"            Ui.printDivider();"},{"lineNumber":82,"author":{"gitId":"FarmZH98"},"content":"            System.out.println(\"There are no matching tasks in your list.\");"},{"lineNumber":83,"author":{"gitId":"FarmZH98"},"content":"            Ui.printDivider();"},{"lineNumber":84,"author":{"gitId":"FarmZH98"},"content":"            return;"},{"lineNumber":85,"author":{"gitId":"FarmZH98"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":87,"author":{"gitId":"FarmZH98"},"content":"        int i \u003d 0;"},{"lineNumber":88,"author":{"gitId":"FarmZH98"},"content":"        Ui.printDivider();"},{"lineNumber":89,"author":{"gitId":"FarmZH98"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":90,"author":{"gitId":"FarmZH98"},"content":"        for (Task t : keywordTaskList) {"},{"lineNumber":91,"author":{"gitId":"FarmZH98"},"content":"            System.out.print(i + 1 + \". [\" + t.getAlphabet() + \"]\");"},{"lineNumber":92,"author":{"gitId":"FarmZH98"},"content":"            System.out.println(\"[\" + t.getStatusIcon() + \"] \" + t.toString());"},{"lineNumber":93,"author":{"gitId":"FarmZH98"},"content":"            i++;"},{"lineNumber":94,"author":{"gitId":"FarmZH98"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"FarmZH98"},"content":"        Ui.printDivider();"},{"lineNumber":96,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":98,"author":{"gitId":"FarmZH98"},"content":"}"}],"authorContributionMap":{"FarmZH98":98}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FarmZH98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":3,"author":{"gitId":"FarmZH98"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":5,"author":{"gitId":"FarmZH98"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"FarmZH98"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":9,"author":{"gitId":"FarmZH98"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"FarmZH98"},"content":"    public String getAlphabet() {"},{"lineNumber":11,"author":{"gitId":"FarmZH98"},"content":"        return \"T\";"},{"lineNumber":12,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":14,"author":{"gitId":"FarmZH98"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"FarmZH98"},"content":"        return this.description;"},{"lineNumber":16,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"FarmZH98"},"content":"}"}],"authorContributionMap":{"FarmZH98":17}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FarmZH98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":3,"author":{"gitId":"FarmZH98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"FarmZH98"},"content":" * Represents the user interface that interacts with the user"},{"lineNumber":5,"author":{"gitId":"FarmZH98"},"content":" */"},{"lineNumber":6,"author":{"gitId":"FarmZH98"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"FarmZH98"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"FarmZH98"},"content":"     * Print a welcome message when the program is launched"},{"lineNumber":9,"author":{"gitId":"FarmZH98"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"FarmZH98"},"content":"    public static void printStartMessage() {"},{"lineNumber":11,"author":{"gitId":"FarmZH98"},"content":"        String STARTMESSAGE \u003d \"____________________________________________________________\\n\""},{"lineNumber":12,"author":{"gitId":"FarmZH98"},"content":"                + \"Hello! I\u0027m Duke.Duke\\n\""},{"lineNumber":13,"author":{"gitId":"FarmZH98"},"content":"                + \"What can I do for you?\\n\""},{"lineNumber":14,"author":{"gitId":"FarmZH98"},"content":"                + \"____________________________________________________________\\n\";"},{"lineNumber":15,"author":{"gitId":"FarmZH98"},"content":"        System.out.println(STARTMESSAGE);"},{"lineNumber":16,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":18,"author":{"gitId":"FarmZH98"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"FarmZH98"},"content":"     * Prints the logo of this program"},{"lineNumber":20,"author":{"gitId":"FarmZH98"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"FarmZH98"},"content":"    public static void printLogo() {"},{"lineNumber":22,"author":{"gitId":"FarmZH98"},"content":"        String LOGO \u003d \" ____        _        \\n\""},{"lineNumber":23,"author":{"gitId":"FarmZH98"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":24,"author":{"gitId":"FarmZH98"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":25,"author":{"gitId":"FarmZH98"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":26,"author":{"gitId":"FarmZH98"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":27,"author":{"gitId":"FarmZH98"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);"},{"lineNumber":28,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":29,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":31,"author":{"gitId":"FarmZH98"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"FarmZH98"},"content":"     * Prints an exit message when user enters \"bye\""},{"lineNumber":33,"author":{"gitId":"FarmZH98"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"FarmZH98"},"content":"    public static void printExitMessage() {"},{"lineNumber":35,"author":{"gitId":"FarmZH98"},"content":"        String ENDMESSAGE \u003d \"############################################################\\n\""},{"lineNumber":36,"author":{"gitId":"FarmZH98"},"content":"                + \"Bye. Hope to see you again soon!\\n\""},{"lineNumber":37,"author":{"gitId":"FarmZH98"},"content":"                + \"############################################################\\n\";"},{"lineNumber":38,"author":{"gitId":"FarmZH98"},"content":"        System.out.println(ENDMESSAGE);"},{"lineNumber":39,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":41,"author":{"gitId":"FarmZH98"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"FarmZH98"},"content":"     * Prints multiple \"*\" which acts as a divider line"},{"lineNumber":43,"author":{"gitId":"FarmZH98"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"FarmZH98"},"content":"    public static void printDivider() {"},{"lineNumber":45,"author":{"gitId":"FarmZH98"},"content":"        System.out.println(\"************************************************************\");"},{"lineNumber":46,"author":{"gitId":"FarmZH98"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"FarmZH98"},"content":""},{"lineNumber":48,"author":{"gitId":"FarmZH98"},"content":"}"}],"authorContributionMap":{"FarmZH98":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"FarmZH98"},"content":"todo fyp report"},{"lineNumber":2,"author":{"gitId":"FarmZH98"},"content":"todo FIN tutorial"},{"lineNumber":3,"author":{"gitId":"FarmZH98"},"content":"event CL meeting at 2/2"},{"lineNumber":4,"author":{"gitId":"FarmZH98"},"content":"deadline iP by Wednesday"},{"lineNumber":5,"author":{"gitId":"FarmZH98"},"content":"list"},{"lineNumber":6,"author":{"gitId":"FarmZH98"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"FarmZH98"},"content":"done 4"},{"lineNumber":8,"author":{"gitId":"FarmZH98"},"content":"list"},{"lineNumber":9,"author":{"gitId":"FarmZH98"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"FarmZH98"},"content":"bye"}],"authorContributionMap":{"FarmZH98":10}}]
