[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brynagoh"},"content":"import duke.exception.DukeException;"},{"lineNumber":2,"author":{"gitId":"brynagoh"},"content":"import duke.exception.TaskType;"},{"lineNumber":3,"author":{"gitId":"brynagoh"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"brynagoh"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"brynagoh"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"brynagoh"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":8,"author":{"gitId":"brynagoh"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"brynagoh"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":10,"author":{"gitId":"brynagoh"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"brynagoh"},"content":"import java.io.FileWriter;"},{"lineNumber":12,"author":{"gitId":"brynagoh"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"brynagoh"},"content":"import java.nio.file.Files;"},{"lineNumber":14,"author":{"gitId":"brynagoh"},"content":"import java.nio.file.Paths;"},{"lineNumber":15,"author":{"gitId":"brynagoh"},"content":"import java.util.Collections;"},{"lineNumber":16,"author":{"gitId":"brynagoh"},"content":"import java.util.Scanner;"},{"lineNumber":17,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":19,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":20,"author":{"gitId":"brynagoh"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"brynagoh"},"content":"    private static Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":22,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":23,"author":{"gitId":"brynagoh"},"content":"    public static void listTasks() {"},{"lineNumber":24,"author":{"gitId":"brynagoh"},"content":"        if (Task.taskCount \u003d\u003d 0) {"},{"lineNumber":25,"author":{"gitId":"brynagoh"},"content":"            System.out.println(\"No tasks yet!\");"},{"lineNumber":26,"author":{"gitId":"brynagoh"},"content":"        } else {"},{"lineNumber":27,"author":{"gitId":"brynagoh"},"content":"            for (int i \u003d 0; i \u003c Task.taskCount; i++) {"},{"lineNumber":28,"author":{"gitId":"brynagoh"},"content":"                System.out.printf(\"%d.%s\\n\", i+1, tasks.get(i).toString());"},{"lineNumber":29,"author":{"gitId":"brynagoh"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"brynagoh"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":33,"author":{"gitId":"brynagoh"},"content":"    public static ArrayList\u003cInteger\u003e cleanInput(String input, String keyword) {"},{"lineNumber":34,"author":{"gitId":"brynagoh"},"content":"        String[] inputArray \u003d input.split(\" \");"},{"lineNumber":35,"author":{"gitId":"brynagoh"},"content":"        ArrayList\u003cInteger\u003e indexes \u003d new ArrayList\u003c\u003e();"},{"lineNumber":36,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":37,"author":{"gitId":"brynagoh"},"content":"        //completedIndex holds the index of valid integer(s) in inputArray (indicating index in tasklist)"},{"lineNumber":38,"author":{"gitId":"brynagoh"},"content":"        int completedIndex;"},{"lineNumber":39,"author":{"gitId":"brynagoh"},"content":"        for (String word: inputArray) {"},{"lineNumber":40,"author":{"gitId":"brynagoh"},"content":"            if (word.equals(keyword)) {"},{"lineNumber":41,"author":{"gitId":"brynagoh"},"content":"                continue;"},{"lineNumber":42,"author":{"gitId":"brynagoh"},"content":"            } else {"},{"lineNumber":43,"author":{"gitId":"brynagoh"},"content":"                completedIndex \u003d Integer.parseInt(word);"},{"lineNumber":44,"author":{"gitId":"brynagoh"},"content":"                //ensure that the index given is valid"},{"lineNumber":45,"author":{"gitId":"brynagoh"},"content":"                if (completedIndex \u003e 0 \u0026\u0026 completedIndex \u003c\u003d Task.taskCount){"},{"lineNumber":46,"author":{"gitId":"brynagoh"},"content":"//                    tasks.get(completedIndex - 1).markAsDone();"},{"lineNumber":47,"author":{"gitId":"brynagoh"},"content":"                    indexes.add(completedIndex-1);"},{"lineNumber":48,"author":{"gitId":"brynagoh"},"content":"                } else {"},{"lineNumber":49,"author":{"gitId":"brynagoh"},"content":"                    System.out.printf(\"Task %d does not exist! Enter \u0027list\u0027 to view tasklist :)\\n\", completedIndex);"},{"lineNumber":50,"author":{"gitId":"brynagoh"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"brynagoh"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"brynagoh"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":54,"author":{"gitId":"brynagoh"},"content":"        return indexes;"},{"lineNumber":55,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":57,"author":{"gitId":"brynagoh"},"content":"    public static void markTasksAsDone(ArrayList\u003cInteger\u003e indexes) {"},{"lineNumber":58,"author":{"gitId":"brynagoh"},"content":"        for (Integer index : indexes) {"},{"lineNumber":59,"author":{"gitId":"brynagoh"},"content":"            tasks.get(index).markAsDone();"},{"lineNumber":60,"author":{"gitId":"brynagoh"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":63,"author":{"gitId":"brynagoh"},"content":"    public static void printNumTasks() {"},{"lineNumber":64,"author":{"gitId":"brynagoh"},"content":"        System.out.println(\"You now have \" + Task.taskCount + \" tasks in your tasklist.\");"},{"lineNumber":65,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":67,"author":{"gitId":"brynagoh"},"content":"    public static void deleteTasks(ArrayList\u003cInteger\u003e indexes) {"},{"lineNumber":68,"author":{"gitId":"brynagoh"},"content":"        for (Integer index : indexes) {"},{"lineNumber":69,"author":{"gitId":"brynagoh"},"content":"            System.out.println(\"Okay, I\u0027ve deleted this task:\");"},{"lineNumber":70,"author":{"gitId":"brynagoh"},"content":"            System.out.println(tasks.get(index).toString());"},{"lineNumber":71,"author":{"gitId":"brynagoh"},"content":"            Task.taskCount -\u003d 1;"},{"lineNumber":72,"author":{"gitId":"brynagoh"},"content":"            tasks.remove(index.intValue());"},{"lineNumber":73,"author":{"gitId":"brynagoh"},"content":"            printNumTasks();"},{"lineNumber":74,"author":{"gitId":"brynagoh"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":77,"author":{"gitId":"brynagoh"},"content":"    //details extracted: task description, (task deadline/timeslot) depending on taskType"},{"lineNumber":78,"author":{"gitId":"brynagoh"},"content":"    public static String[] extractDetailsFromInput(String input, String keyword) {"},{"lineNumber":79,"author":{"gitId":"brynagoh"},"content":"        String[] inputArray \u003d new String[2];"},{"lineNumber":80,"author":{"gitId":"brynagoh"},"content":"        String inputWithoutKeyword \u003d input.substring(keyword.length());"},{"lineNumber":81,"author":{"gitId":"brynagoh"},"content":"        int numDetails \u003d 0;"},{"lineNumber":82,"author":{"gitId":"brynagoh"},"content":"        switch(keyword) {"},{"lineNumber":83,"author":{"gitId":"brynagoh"},"content":"        case \"deadline\":"},{"lineNumber":84,"author":{"gitId":"brynagoh"},"content":"            inputArray \u003d inputWithoutKeyword.split(\"/by\");"},{"lineNumber":85,"author":{"gitId":"brynagoh"},"content":"            numDetails +\u003d 2;"},{"lineNumber":86,"author":{"gitId":"brynagoh"},"content":"            break;"},{"lineNumber":87,"author":{"gitId":"brynagoh"},"content":"        case \"event\":"},{"lineNumber":88,"author":{"gitId":"brynagoh"},"content":"            inputArray \u003d inputWithoutKeyword.split(\"/at\");"},{"lineNumber":89,"author":{"gitId":"brynagoh"},"content":"            numDetails +\u003d 2;"},{"lineNumber":90,"author":{"gitId":"brynagoh"},"content":"            break;"},{"lineNumber":91,"author":{"gitId":"brynagoh"},"content":"        case \"todo\":"},{"lineNumber":92,"author":{"gitId":"brynagoh"},"content":"            inputArray[0] \u003d inputWithoutKeyword;"},{"lineNumber":93,"author":{"gitId":"brynagoh"},"content":"            numDetails++;"},{"lineNumber":94,"author":{"gitId":"brynagoh"},"content":"            break;"},{"lineNumber":95,"author":{"gitId":"brynagoh"},"content":"        default:"},{"lineNumber":96,"author":{"gitId":"brynagoh"},"content":"            break;"},{"lineNumber":97,"author":{"gitId":"brynagoh"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":99,"author":{"gitId":"brynagoh"},"content":"        for (int i \u003d 0; i \u003c numDetails; i++) {"},{"lineNumber":100,"author":{"gitId":"brynagoh"},"content":"            inputArray[i] \u003d inputArray[i].strip();"},{"lineNumber":101,"author":{"gitId":"brynagoh"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"brynagoh"},"content":"        return inputArray;"},{"lineNumber":103,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":105,"author":{"gitId":"brynagoh"},"content":"    public static void addTask(String input) throws DukeException {"},{"lineNumber":106,"author":{"gitId":"brynagoh"},"content":"        String[] inputArray;"},{"lineNumber":107,"author":{"gitId":"brynagoh"},"content":"        if (input.startsWith(\"deadline\")) {"},{"lineNumber":108,"author":{"gitId":"brynagoh"},"content":"            try {"},{"lineNumber":109,"author":{"gitId":"brynagoh"},"content":"                inputArray \u003d extractDetailsFromInput(input, \"deadline\");"},{"lineNumber":110,"author":{"gitId":"brynagoh"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":111,"author":{"gitId":"brynagoh"},"content":"                throw new DukeException(TaskType.DEADLINE);"},{"lineNumber":112,"author":{"gitId":"brynagoh"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"brynagoh"},"content":"            tasks.add(Task.taskCount, new Deadline(inputArray[0], inputArray[1]));"},{"lineNumber":114,"author":{"gitId":"brynagoh"},"content":"        } else if (input.startsWith(\"event\")) {"},{"lineNumber":115,"author":{"gitId":"brynagoh"},"content":"            try {"},{"lineNumber":116,"author":{"gitId":"brynagoh"},"content":"                inputArray \u003d extractDetailsFromInput(input, \"event\");"},{"lineNumber":117,"author":{"gitId":"brynagoh"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":118,"author":{"gitId":"brynagoh"},"content":"                throw new DukeException(TaskType.EVENT);"},{"lineNumber":119,"author":{"gitId":"brynagoh"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"brynagoh"},"content":"            tasks.add(Task.taskCount, new Event(inputArray[0], inputArray[1]));"},{"lineNumber":121,"author":{"gitId":"brynagoh"},"content":"        } else if (input.startsWith(\"todo\")){"},{"lineNumber":122,"author":{"gitId":"brynagoh"},"content":"            try {"},{"lineNumber":123,"author":{"gitId":"brynagoh"},"content":"                inputArray \u003d extractDetailsFromInput(input, \"todo\");"},{"lineNumber":124,"author":{"gitId":"brynagoh"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":125,"author":{"gitId":"brynagoh"},"content":"                throw new DukeException(TaskType.TODO);"},{"lineNumber":126,"author":{"gitId":"brynagoh"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"brynagoh"},"content":"            tasks.add(Task.taskCount, new Todo(inputArray[0]));"},{"lineNumber":128,"author":{"gitId":"brynagoh"},"content":"        } else {"},{"lineNumber":129,"author":{"gitId":"brynagoh"},"content":"            throw new DukeException(TaskType.INVALID);"},{"lineNumber":130,"author":{"gitId":"brynagoh"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":132,"author":{"gitId":"brynagoh"},"content":"        System.out.println(\"I have added this task:\" );"},{"lineNumber":133,"author":{"gitId":"brynagoh"},"content":"        System.out.println(tasks.get(Task.taskCount-1).toString());"},{"lineNumber":134,"author":{"gitId":"brynagoh"},"content":"        printNumTasks();"},{"lineNumber":135,"author":{"gitId":"brynagoh"},"content":"        writeTasklistToFile();"},{"lineNumber":136,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":138,"author":{"gitId":"brynagoh"},"content":"    private static void loadTasklist() {"},{"lineNumber":139,"author":{"gitId":"brynagoh"},"content":"        try {"},{"lineNumber":140,"author":{"gitId":"brynagoh"},"content":"            String filePath \u003d \"data/duke.txt\";"},{"lineNumber":141,"author":{"gitId":"brynagoh"},"content":"            // check if the directory and file exists"},{"lineNumber":142,"author":{"gitId":"brynagoh"},"content":"            if (Files.exists(Paths.get(\"data/duke.txt\"))) {"},{"lineNumber":143,"author":{"gitId":"brynagoh"},"content":"                File f \u003d new File(filePath);"},{"lineNumber":144,"author":{"gitId":"brynagoh"},"content":"                Scanner scanner \u003d new Scanner(f);"},{"lineNumber":145,"author":{"gitId":"brynagoh"},"content":"                while (scanner.hasNext()) {"},{"lineNumber":146,"author":{"gitId":"brynagoh"},"content":"                    String taskString \u003d scanner.nextLine();"},{"lineNumber":147,"author":{"gitId":"brynagoh"},"content":"                    if (taskString.startsWith(\"[E]\")) {"},{"lineNumber":148,"author":{"gitId":"brynagoh"},"content":"                        String description \u003d taskString.substring(7, taskString.indexOf(\u0027(\u0027)-1);"},{"lineNumber":149,"author":{"gitId":"brynagoh"},"content":"                        String timing \u003d taskString.substring(taskString.indexOf(\u0027(\u0027) + 5, taskString.indexOf(\u0027)\u0027));"},{"lineNumber":150,"author":{"gitId":"brynagoh"},"content":"                        tasks.add(Task.taskCount, new Event(description, timing));"},{"lineNumber":151,"author":{"gitId":"brynagoh"},"content":"                    } else if (taskString.startsWith(\"[D]\")) {"},{"lineNumber":152,"author":{"gitId":"brynagoh"},"content":"                        String description \u003d taskString.substring(7, taskString.indexOf(\u0027(\u0027)-1);"},{"lineNumber":153,"author":{"gitId":"brynagoh"},"content":"                        String timing \u003d taskString.substring(taskString.indexOf(\u0027(\u0027) + 5, taskString.indexOf(\u0027)\u0027));"},{"lineNumber":154,"author":{"gitId":"brynagoh"},"content":"                        tasks.add(Task.taskCount, new Deadline(description, timing));"},{"lineNumber":155,"author":{"gitId":"brynagoh"},"content":"                    } else if (taskString.startsWith(\"[T]\")) {"},{"lineNumber":156,"author":{"gitId":"brynagoh"},"content":"                        String description \u003d taskString.substring(7);"},{"lineNumber":157,"author":{"gitId":"brynagoh"},"content":"                        tasks.add(Task.taskCount, new Todo(description));"},{"lineNumber":158,"author":{"gitId":"brynagoh"},"content":"                    }"},{"lineNumber":159,"author":{"gitId":"brynagoh"},"content":"                    if (taskString.contains(\"[X]\")) {"},{"lineNumber":160,"author":{"gitId":"brynagoh"},"content":"                        tasks.get(Task.taskCount - 1).markAsDone();"},{"lineNumber":161,"author":{"gitId":"brynagoh"},"content":"                    }"},{"lineNumber":162,"author":{"gitId":"brynagoh"},"content":"                }"},{"lineNumber":163,"author":{"gitId":"brynagoh"},"content":"            }"},{"lineNumber":164,"author":{"gitId":"brynagoh"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":165,"author":{"gitId":"brynagoh"},"content":"            System.out.println(\"Tasklist file not found! :(\");"},{"lineNumber":166,"author":{"gitId":"brynagoh"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":169,"author":{"gitId":"brynagoh"},"content":"    private static void writeTasklistToFile() {"},{"lineNumber":170,"author":{"gitId":"brynagoh"},"content":"        try {"},{"lineNumber":171,"author":{"gitId":"brynagoh"},"content":"            String filePath \u003d \"data/duke.txt\";"},{"lineNumber":172,"author":{"gitId":"brynagoh"},"content":"            // check if the directory and file exists"},{"lineNumber":173,"author":{"gitId":"brynagoh"},"content":"            if (Files.notExists(Paths.get(\"data/\"))) {"},{"lineNumber":174,"author":{"gitId":"brynagoh"},"content":"                Files.createDirectory(Paths.get(\"data/\"));"},{"lineNumber":175,"author":{"gitId":"brynagoh"},"content":"            } else if (Files.notExists(Paths.get(\"data/duke.txt\"))) {"},{"lineNumber":176,"author":{"gitId":"brynagoh"},"content":"                Files.createFile(Paths.get(\"data/duke.txt\"));"},{"lineNumber":177,"author":{"gitId":"brynagoh"},"content":"            }"},{"lineNumber":178,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":179,"author":{"gitId":"brynagoh"},"content":"            FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":180,"author":{"gitId":"brynagoh"},"content":"            for (Task task : tasks) {"},{"lineNumber":181,"author":{"gitId":"brynagoh"},"content":"                fw.write(task.toString() + System.lineSeparator());"},{"lineNumber":182,"author":{"gitId":"brynagoh"},"content":"            }"},{"lineNumber":183,"author":{"gitId":"brynagoh"},"content":"            fw.close();"},{"lineNumber":184,"author":{"gitId":"brynagoh"},"content":"        } catch (IOException e) {"},{"lineNumber":185,"author":{"gitId":"brynagoh"},"content":"            System.out.println(\"Exception occurred when writing tasklist to file! :(\");"},{"lineNumber":186,"author":{"gitId":"brynagoh"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":190,"author":{"gitId":"brynagoh"},"content":"        loadTasklist();"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":195,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":196,"author":{"gitId":"brynagoh"},"content":"        System.out.println(\"Hello! I am\\n\" + logo);"},{"lineNumber":197,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":198,"author":{"gitId":"brynagoh"},"content":"        System.out.println(\"What can I do for you today?\");"},{"lineNumber":199,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":200,"author":{"gitId":"brynagoh"},"content":"        String input \u003d scanner.nextLine();"},{"lineNumber":201,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":202,"author":{"gitId":"brynagoh"},"content":"        while (!input.equals(\"bye\")) {"},{"lineNumber":203,"author":{"gitId":"brynagoh"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":204,"author":{"gitId":"brynagoh"},"content":"                listTasks();"},{"lineNumber":205,"author":{"gitId":"brynagoh"},"content":"            } else if (input.startsWith(\"done\")) {"},{"lineNumber":206,"author":{"gitId":"brynagoh"},"content":"                //this keeps track of indexes that user calls for actions on"},{"lineNumber":207,"author":{"gitId":"brynagoh"},"content":"                ArrayList\u003cInteger\u003e indexes \u003d new ArrayList\u003c\u003e();"},{"lineNumber":208,"author":{"gitId":"brynagoh"},"content":"                indexes \u003d cleanInput(input, \"done\");"},{"lineNumber":209,"author":{"gitId":"brynagoh"},"content":"                markTasksAsDone(indexes);"},{"lineNumber":210,"author":{"gitId":"brynagoh"},"content":"                writeTasklistToFile();"},{"lineNumber":211,"author":{"gitId":"brynagoh"},"content":"            } else if (input.startsWith(\"delete\")) {"},{"lineNumber":212,"author":{"gitId":"brynagoh"},"content":"                //this keeps track of indexes that user calls for actions on"},{"lineNumber":213,"author":{"gitId":"brynagoh"},"content":"                ArrayList\u003cInteger\u003e indexes \u003d new ArrayList\u003c\u003e();"},{"lineNumber":214,"author":{"gitId":"brynagoh"},"content":"                indexes \u003d cleanInput(input, \"delete\");"},{"lineNumber":215,"author":{"gitId":"brynagoh"},"content":"                //sort indexes in descending order so deletion will not affect index"},{"lineNumber":216,"author":{"gitId":"brynagoh"},"content":"                Collections.sort(indexes, Collections.reverseOrder());"},{"lineNumber":217,"author":{"gitId":"brynagoh"},"content":"                deleteTasks(indexes);"},{"lineNumber":218,"author":{"gitId":"brynagoh"},"content":"                writeTasklistToFile();"},{"lineNumber":219,"author":{"gitId":"brynagoh"},"content":"            } else {"},{"lineNumber":220,"author":{"gitId":"brynagoh"},"content":"                try {"},{"lineNumber":221,"author":{"gitId":"brynagoh"},"content":"                    addTask(input);"},{"lineNumber":222,"author":{"gitId":"brynagoh"},"content":"                } catch (DukeException e) {"},{"lineNumber":223,"author":{"gitId":"brynagoh"},"content":"                    TaskType taskType \u003d e.getTaskType();"},{"lineNumber":224,"author":{"gitId":"brynagoh"},"content":"                    switch (taskType) {"},{"lineNumber":225,"author":{"gitId":"brynagoh"},"content":"                    case DEADLINE:"},{"lineNumber":226,"author":{"gitId":"brynagoh"},"content":"                        System.out.println(\"Please input deadline tasks in the correct format. (e.g deadline \u003ctask description\u003e /by \u003cdeadline\u003e)\");"},{"lineNumber":227,"author":{"gitId":"brynagoh"},"content":"                        break;"},{"lineNumber":228,"author":{"gitId":"brynagoh"},"content":"                    case EVENT:"},{"lineNumber":229,"author":{"gitId":"brynagoh"},"content":"                        System.out.println(\"Please input event tasks in the correct format. (e.g. event \u003ctask description\u003e /at \u003ctiming\u003e)\");"},{"lineNumber":230,"author":{"gitId":"brynagoh"},"content":"                        break;"},{"lineNumber":231,"author":{"gitId":"brynagoh"},"content":"                    case TODO:"},{"lineNumber":232,"author":{"gitId":"brynagoh"},"content":"                        System.out.println(\"Please input todo tasks in the correct format. (e.g. todo \u003ctask description\u003e)\");"},{"lineNumber":233,"author":{"gitId":"brynagoh"},"content":"                        break;"},{"lineNumber":234,"author":{"gitId":"brynagoh"},"content":"                    case INVALID:"},{"lineNumber":235,"author":{"gitId":"brynagoh"},"content":"                    default:"},{"lineNumber":236,"author":{"gitId":"brynagoh"},"content":"                        System.out.println(\"Please input a valid command! (e.g. deadline..., done..., list)\");"},{"lineNumber":237,"author":{"gitId":"brynagoh"},"content":"                    }"},{"lineNumber":238,"author":{"gitId":"brynagoh"},"content":"                }"},{"lineNumber":239,"author":{"gitId":"brynagoh"},"content":"            }"},{"lineNumber":240,"author":{"gitId":"brynagoh"},"content":"            input \u003d scanner.nextLine();"},{"lineNumber":241,"author":{"gitId":"brynagoh"},"content":"        }"},{"lineNumber":242,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":243,"author":{"gitId":"brynagoh"},"content":"        System.out.println(\"Goodbye. See you again soon :)\");"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"brynagoh":236,"-":9}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brynagoh"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brynagoh"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"brynagoh"},"content":"    private TaskType taskType;"},{"lineNumber":5,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":6,"author":{"gitId":"brynagoh"},"content":"    public DukeException(TaskType taskType) {"},{"lineNumber":7,"author":{"gitId":"brynagoh"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":8,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":10,"author":{"gitId":"brynagoh"},"content":"    public TaskType getTaskType() {"},{"lineNumber":11,"author":{"gitId":"brynagoh"},"content":"        return this.taskType;"},{"lineNumber":12,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"brynagoh"},"content":"}"}],"authorContributionMap":{"brynagoh":13}},{"path":"src/main/java/duke/exception/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brynagoh"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brynagoh"},"content":"public enum TaskType {"},{"lineNumber":4,"author":{"gitId":"brynagoh"},"content":"    DEADLINE, EVENT, TODO, INVALID"},{"lineNumber":5,"author":{"gitId":"brynagoh"},"content":"}"}],"authorContributionMap":{"brynagoh":5}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brynagoh"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brynagoh"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":5,"author":{"gitId":"brynagoh"},"content":"    private String description;"},{"lineNumber":6,"author":{"gitId":"brynagoh"},"content":"    private String by;"},{"lineNumber":7,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":8,"author":{"gitId":"brynagoh"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":9,"author":{"gitId":"brynagoh"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"brynagoh"},"content":"        this.by \u003d by;"},{"lineNumber":11,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":13,"author":{"gitId":"brynagoh"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"brynagoh"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"brynagoh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"},{"lineNumber":16,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"brynagoh"},"content":"}"}],"authorContributionMap":{"brynagoh":17}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brynagoh"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brynagoh"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":5,"author":{"gitId":"brynagoh"},"content":"    private String description;"},{"lineNumber":6,"author":{"gitId":"brynagoh"},"content":"    private String timeSlot;"},{"lineNumber":7,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":8,"author":{"gitId":"brynagoh"},"content":"    public Event(String description, String timeSlot) {"},{"lineNumber":9,"author":{"gitId":"brynagoh"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"brynagoh"},"content":"        this.timeSlot \u003d timeSlot;"},{"lineNumber":11,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":13,"author":{"gitId":"brynagoh"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"brynagoh"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"brynagoh"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.timeSlot + \")\";"},{"lineNumber":16,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"brynagoh"},"content":"}"}],"authorContributionMap":{"brynagoh":17}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brynagoh"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brynagoh"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"brynagoh"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"brynagoh"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":7,"author":{"gitId":"brynagoh"},"content":"    public static int taskCount \u003d 0;"},{"lineNumber":8,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":9,"author":{"gitId":"brynagoh"},"content":"    public Task(String description) {"},{"lineNumber":10,"author":{"gitId":"brynagoh"},"content":"        this.description \u003d description;"},{"lineNumber":11,"author":{"gitId":"brynagoh"},"content":"        this.isDone \u003d false;"},{"lineNumber":12,"author":{"gitId":"brynagoh"},"content":"        taskCount++;"},{"lineNumber":13,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":15,"author":{"gitId":"brynagoh"},"content":"    public String getStatusIcon() {"},{"lineNumber":16,"author":{"gitId":"brynagoh"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":17,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":19,"author":{"gitId":"brynagoh"},"content":"    public String getDescription() {"},{"lineNumber":20,"author":{"gitId":"brynagoh"},"content":"        return this.description;"},{"lineNumber":21,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":23,"author":{"gitId":"brynagoh"},"content":"    public void markAsDone(){"},{"lineNumber":24,"author":{"gitId":"brynagoh"},"content":"        if (!this.isDone) {"},{"lineNumber":25,"author":{"gitId":"brynagoh"},"content":"            this.isDone \u003d true;"},{"lineNumber":26,"author":{"gitId":"brynagoh"},"content":"            System.out.println(\"Great! I\u0027ve marked this task as done:\");"},{"lineNumber":27,"author":{"gitId":"brynagoh"},"content":"            System.out.println(this.toString());"},{"lineNumber":28,"author":{"gitId":"brynagoh"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"brynagoh"},"content":"            System.out.println(\"You already completed this task previously!\");"},{"lineNumber":30,"author":{"gitId":"brynagoh"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":33,"author":{"gitId":"brynagoh"},"content":"    public String toString(){"},{"lineNumber":34,"author":{"gitId":"brynagoh"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"},{"lineNumber":35,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"brynagoh"},"content":"}"}],"authorContributionMap":{"brynagoh":36}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brynagoh"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brynagoh"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":5,"author":{"gitId":"brynagoh"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"brynagoh"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":9,"author":{"gitId":"brynagoh"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"brynagoh"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"brynagoh"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":12,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"brynagoh"},"content":"}"}],"authorContributionMap":{"brynagoh":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brynagoh"},"content":"list"},{"lineNumber":2,"author":{"gitId":"brynagoh"},"content":"todo borrow book"},{"lineNumber":3,"author":{"gitId":"brynagoh"},"content":"list"},{"lineNumber":4,"author":{"gitId":"brynagoh"},"content":"deadline return book /by Sunday"},{"lineNumber":5,"author":{"gitId":"brynagoh"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":6,"author":{"gitId":"brynagoh"},"content":"list"},{"lineNumber":7,"author":{"gitId":"brynagoh"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"brynagoh"},"content":"list"},{"lineNumber":9,"author":{"gitId":"brynagoh"},"content":"done 6"},{"lineNumber":10,"author":{"gitId":"brynagoh"},"content":"delete 6"},{"lineNumber":11,"author":{"gitId":"brynagoh"},"content":"delete 3"},{"lineNumber":12,"author":{"gitId":"brynagoh"},"content":"list"},{"lineNumber":13,"author":{"gitId":"brynagoh"},"content":"bye"}],"authorContributionMap":{"brynagoh":13}}]
