[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"brynagoh"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"brynagoh"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":11,"author":{"gitId":"brynagoh"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"brynagoh"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"brynagoh"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"brynagoh"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"brynagoh"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"brynagoh":9,"-":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brynagoh"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":11,"author":{"gitId":"brynagoh"},"content":"        System.out.println(\"Hello! I am\\n\" + logo);"},{"lineNumber":12,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":13,"author":{"gitId":"brynagoh"},"content":"        System.out.println(\"What can I do for you today?\");"},{"lineNumber":14,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":15,"author":{"gitId":"brynagoh"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":16,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":17,"author":{"gitId":"brynagoh"},"content":"        Task[] tasks \u003d new Task[100];"},{"lineNumber":18,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":19,"author":{"gitId":"brynagoh"},"content":"        String input \u003d sc.nextLine();"},{"lineNumber":20,"author":{"gitId":"brynagoh"},"content":"        while (!input.equals(\"bye\")) {"},{"lineNumber":21,"author":{"gitId":"brynagoh"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":22,"author":{"gitId":"brynagoh"},"content":"                if (Task.totalTasks \u003d\u003d 0) {"},{"lineNumber":23,"author":{"gitId":"brynagoh"},"content":"                    System.out.println(\"No tasks yet!\");"},{"lineNumber":24,"author":{"gitId":"brynagoh"},"content":"                } else {"},{"lineNumber":25,"author":{"gitId":"brynagoh"},"content":"                    for (int i \u003d 0; i \u003c Task.totalTasks; i++) {"},{"lineNumber":26,"author":{"gitId":"brynagoh"},"content":"                        System.out.printf(\"%d.[%s] %s\\n\", i+1, tasks[i].getStatusIcon(), tasks[i].getDescription());"},{"lineNumber":27,"author":{"gitId":"brynagoh"},"content":"                    }"},{"lineNumber":28,"author":{"gitId":"brynagoh"},"content":"                }"},{"lineNumber":29,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":30,"author":{"gitId":"brynagoh"},"content":"            } else if (input.contains(\"done\")) {"},{"lineNumber":31,"author":{"gitId":"brynagoh"},"content":"                String[] inputArray \u003d input.split(\" \");"},{"lineNumber":32,"author":{"gitId":"brynagoh"},"content":"                for (String word: inputArray) {"},{"lineNumber":33,"author":{"gitId":"brynagoh"},"content":"                    if (word.equals(\"done\")) {"},{"lineNumber":34,"author":{"gitId":"brynagoh"},"content":"                        continue;"},{"lineNumber":35,"author":{"gitId":"brynagoh"},"content":"                    } else {"},{"lineNumber":36,"author":{"gitId":"brynagoh"},"content":"                        int completedIndex \u003d Integer.parseInt(word);"},{"lineNumber":37,"author":{"gitId":"brynagoh"},"content":"                        //ensure that the index given is valid"},{"lineNumber":38,"author":{"gitId":"brynagoh"},"content":"                        if (completedIndex \u003e 0 \u0026\u0026 completedIndex \u003c\u003d Task.totalTasks){"},{"lineNumber":39,"author":{"gitId":"brynagoh"},"content":"                            tasks[completedIndex - 1].markAsDone();"},{"lineNumber":40,"author":{"gitId":"brynagoh"},"content":"                        } else {"},{"lineNumber":41,"author":{"gitId":"brynagoh"},"content":"                            System.out.printf(\"Task %d does not exist! Enter \u0027list\u0027 to view tasklist :)\\n\", completedIndex);"},{"lineNumber":42,"author":{"gitId":"brynagoh"},"content":"                        }"},{"lineNumber":43,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":44,"author":{"gitId":"brynagoh"},"content":"                    }"},{"lineNumber":45,"author":{"gitId":"brynagoh"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":47,"author":{"gitId":"brynagoh"},"content":"            } else {"},{"lineNumber":48,"author":{"gitId":"brynagoh"},"content":"                tasks[Task.totalTasks] \u003d new Task(input);"},{"lineNumber":49,"author":{"gitId":"brynagoh"},"content":"                System.out.println(\"added: \"+ input);"},{"lineNumber":50,"author":{"gitId":"brynagoh"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"brynagoh"},"content":"            input \u003d sc.nextLine();"},{"lineNumber":52,"author":{"gitId":"brynagoh"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":54,"author":{"gitId":"brynagoh"},"content":"        System.out.println(\"GoodbyeÔºÅSee you again soon :)\");"},{"lineNumber":55,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"brynagoh":48,"-":9}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brynagoh"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"brynagoh"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"brynagoh"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":5,"author":{"gitId":"brynagoh"},"content":"    public static int totalTasks \u003d 0;"},{"lineNumber":6,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":7,"author":{"gitId":"brynagoh"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"brynagoh"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"brynagoh"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"brynagoh"},"content":"        totalTasks++;"},{"lineNumber":11,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":13,"author":{"gitId":"brynagoh"},"content":"    public String getStatusIcon() {"},{"lineNumber":14,"author":{"gitId":"brynagoh"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":15,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":17,"author":{"gitId":"brynagoh"},"content":"    public String getDescription() {"},{"lineNumber":18,"author":{"gitId":"brynagoh"},"content":"        return this.description;"},{"lineNumber":19,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":21,"author":{"gitId":"brynagoh"},"content":"    public void markAsDone(){"},{"lineNumber":22,"author":{"gitId":"brynagoh"},"content":"        if (!this.isDone) {"},{"lineNumber":23,"author":{"gitId":"brynagoh"},"content":"            this.isDone \u003d true;"},{"lineNumber":24,"author":{"gitId":"brynagoh"},"content":"            System.out.println(\"Great! I\u0027ve marked this task as done: \");"},{"lineNumber":25,"author":{"gitId":"brynagoh"},"content":"            System.out.printf(\"[%s] %s\\n\", this.getStatusIcon(), this.description);"},{"lineNumber":26,"author":{"gitId":"brynagoh"},"content":"        } else {"},{"lineNumber":27,"author":{"gitId":"brynagoh"},"content":"            System.out.println(\"You already completed this task previously!\");"},{"lineNumber":28,"author":{"gitId":"brynagoh"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"brynagoh"},"content":""},{"lineNumber":30,"author":{"gitId":"brynagoh"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"brynagoh"},"content":"}"}],"authorContributionMap":{"brynagoh":31}}]
