{"authorDailyContributionsMap":{"seangoats":[{"date":"2021-01-21","commitResults":[{"hash":"ea51a735141bc9120773740dac3ad03565a837ca","messageTitle":"Add Increment Level 0 - ip (Greet)","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":0}}}]},{"date":"2021-01-23","commitResults":[{"hash":"9419866d87138e73d339d88bc0d667f33d043008","messageTitle":"Add Increment Level-1","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":1}}},{"hash":"d40912ea4939be2135c63a4c8e65a14a52a2cd83","messageTitle":"Add Increment Level-2","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":5}}},{"hash":"8a24e2ea10804b0dfb7d082e5e4dfd74c43c2456","messageTitle":"Add Increment Level-3","messageBody":"Create a new Task class to track the tasks, refactor some of the methods in the main run method to separate methods so that code is cleaner.\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":7}}}]},{"date":"2021-01-24","commitResults":[{"hash":"4ab56d988ddcba1a31cee8e49ff07ad2263c5651","messageTitle":"Add Increment A-CodingStandard","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}}]},{"date":"2021-02-02","commitResults":[{"hash":"b3ee85372110d82271976ef9fb9eed0c008f5b5f","messageTitle":"Add Increment Level-4","messageBody":"Create 3 new subclasses, Event, DeadLine and Todo inheriting from the Task superclass.\nRefactor the addNewTask method by introducing new methods to process the input to create the required Task subclass based on the input.\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":83,"deletions":5}}},{"hash":"56a5c3910d477f3ba32aa14901caa660e081c62f","messageTitle":"Add Increment A-CodeQuality","messageBody":"Refactor by moving methods from the main Duke class to 2 other new classes, DukeController and UI.\nMethods that handle printing to the console are moved to the UI class,while methods that handle the logic based on user input is moved to the DukeController class.\nAdditionally introduced constants in DukeController, UI and Task classes for increased clarity.\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":135,"deletions":111}}}]},{"date":"2021-02-09","commitResults":[{"hash":"56559cffc514cf8a3f070d49e83efa55267ce869","messageTitle":"Add Increment Level-5 This commit adds two new classes to handle exceptions, EmptyTodoException to handle cases where the ToDo description is empty and also UnknownCommandException when the command is not recognised by Duke. try and catch blocks are added to handle the exceptions.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":12}}},{"hash":"f90830f7a6aa5e733b0ab70fa1acbc3b0a8b8fa5","messageTitle":"Add Increment A-Packages","messageBody":"Refactor the files into 3 different packages, task contains the Task class and its subclasses, exception contains the Exception classes and duke contains the main classes\nfor running the program.\n","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":0}}}]},{"date":"2021-02-16","commitResults":[{"hash":"2c72f7cebddded1bc702cb130f24d2681fe1acd1","messageTitle":"Add Increment A-Collections Refactor use of Arrays to ArrayList and update methods respectively.","messageBody":"","tags":["A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":7}}},{"hash":"6e7da1e1a6fb9a4d21f3e32db1c80489d22df55c","messageTitle":"Add Increment Level-6 Introduce new method to delete a task from the list. Refactor code to make use of new method.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":0}}}]},{"date":"2021-02-17","commitResults":[{"hash":"f774b19fa53bad1a2f859edf3b11c0d5abe9a28f","messageTitle":"Add Increment Level-7 Allows for saving of the program data. New Writer and Reader classes are added to read and write to a text file where the data is saved. Refactor code in Duke and DukeController classes to make use of new Writer and Reader classes. Refactor code in Task classes for use in Writer and Reader classes.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":164,"deletions":0}}}]},{"date":"2021-02-24","commitResults":[{"hash":"803b275e9711e523bb344e4c273744311f3859b8","messageTitle":"Refactor code and add exceptions","messageBody":"Removed magic strings in run command, add exceptions for cases where all kinds of tasks are empty\n","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":23}}},{"hash":"bdeac84569bbf8fa4b69944c35f26b20799ac938","messageTitle":"Refactor Code and Add new Exception","messageBody":"Remove magic strings in DukeController and Create a new InvalidCommandException\n","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":10}}}]},{"date":"2021-02-25","commitResults":[{"hash":"a92e508e1e74341bd8c151c8cc355fee408c7ccc","messageTitle":"Add Increment A-MoreOOP Refactor the classes into 8 different packages for more MoreOOP","messageBody":"command: contains classes that perform the commands/operations on the TaskList\nconstant: contains all the magic Constants\nduke: contains the main class which is the entry point of the program\nexception: contains the exception classes\nparser: contains classes that parse the input to give the right command\nstorage: contains the classes that perform reading and writing to text storage file\ntask: contains the Task and subclasses and TaskList\nui: contains Printer to print output\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":236,"deletions":158}}}]},{"date":"2021-02-26","commitResults":[{"hash":"88638e8c8ec57d7bd4e43500a373eb99ffc1646e","messageTitle":"Add Increment Level-9","messageBody":"Create a find command by introducing new FindTask class in the command package,\ncreate new methods in Printer to help in printing output for find comamnd,\ncreate new constants for use in FindTask and CommandParser\n","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":0}}},{"hash":"a4f8027e39783bce310657362d3a621d73efd4bd","messageTitle":"Remove uneccessary parameters and imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":5}}},{"hash":"811edee2f7f248b216de8d3602e0ab17841ac959","messageTitle":"Add checked exception for case where index is out of bounds for done command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":3}}},{"hash":"0b68e216fbc2d8a0568b1317cf52b42837e0346f","messageTitle":"Add Increment A-JavaDoc Add JavaDoc comments to all the classes and methods.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":238,"deletions":10}}}]},{"date":"2021-02-28","commitResults":[{"hash":"0a99e3a005f04af0108b4a2b34dc7fa6034c4db8","messageTitle":"Refactor code to more OOP and handle some exceptions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":18}}}]}]},"authorFileTypeContributionMap":{"seangoats":{"java":918,"md":0,"fxml":0,"sh":0,"bat":0,"gradle":0,"txt":0}},"authorContributionVariance":{"seangoats":7766.4897},"authorDisplayNameMap":{"seangoats":"CS2113-W10-3 GOH ..SEAN"}}
