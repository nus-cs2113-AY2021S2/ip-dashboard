[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Emkay16"},"content":"# Duke"},{"lineNumber":2,"author":{"gitId":"Emkay16"},"content":"Duke is a personal assistant chatbot that helps keep track of tasks, deadlines and events via a _Command Line "},{"lineNumber":3,"author":{"gitId":"Emkay16"},"content":"Interface_ (CLI)."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"Emkay16"},"content":"## User Guide"},{"lineNumber":6,"author":{"gitId":"Emkay16"},"content":"* [Getting started with Duke](#getting-started-with-duke)"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  "},{"lineNumber":8,"author":{"gitId":"Emkay16"},"content":"* [Features](#features)"},{"lineNumber":9,"author":{"gitId":"Emkay16"},"content":"   * [Viewing help: `help`](#viewing-help-help)"},{"lineNumber":10,"author":{"gitId":"Emkay16"},"content":"   * [Adding a to do: `todo`](#adding-a-to-do-todo)"},{"lineNumber":11,"author":{"gitId":"Emkay16"},"content":"   * [Adding a deadline: `deadline`](#adding-a-deadline-deadline)"},{"lineNumber":12,"author":{"gitId":"Emkay16"},"content":"   * [Adding an event: `event`](#adding-an-event-event)"},{"lineNumber":13,"author":{"gitId":"Emkay16"},"content":"   * [Viewing all tasks: `list`](#viewing-all-tasks-list)"},{"lineNumber":14,"author":{"gitId":"Emkay16"},"content":"   * [Checking a task off as done: `done`](#checking-a-task-off-as-done-done)"},{"lineNumber":15,"author":{"gitId":"Emkay16"},"content":"   * [Undoing a checked task: `undo`](#undoing-a-checked-task-undo)"},{"lineNumber":16,"author":{"gitId":"Emkay16"},"content":"   * [Removing a task: `delete`](#removing-a-task-delete)"},{"lineNumber":17,"author":{"gitId":"Emkay16"},"content":"   * [Finding tasks by description: `find`](#finding-tasks-by-description-find)"},{"lineNumber":18,"author":{"gitId":"Emkay16"},"content":"   * [Exiting Duke: `bye`](#exiting-duke-bye)"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   "},{"lineNumber":20,"author":{"gitId":"Emkay16"},"content":"* [Saving the data](#saving-the-data)"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"Emkay16"},"content":"* [Transferring save data](#transferring-save-data)"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"Emkay16"},"content":"* [Command summary](#command-summary)"},{"lineNumber":25,"author":{"gitId":"Emkay16"},"content":"   "},{"lineNumber":26,"author":{"gitId":"Emkay16"},"content":"---"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"Emkay16"},"content":"### Getting started with Duke"},{"lineNumber":29,"author":{"gitId":"Emkay16"},"content":"1. Ensure you have `Java 11` installed."},{"lineNumber":30,"author":{"gitId":"Emkay16"},"content":"   * If you do not have the correct version of Java installed, `Java 11` "},{"lineNumber":31,"author":{"gitId":"Emkay16"},"content":"     can be installed from [here](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html)."},{"lineNumber":32,"author":{"gitId":"Emkay16"},"content":"2. Download the latest `ip.jar` from [here](https://github.com/Emkay16/ip/releases)."},{"lineNumber":33,"author":{"gitId":"Emkay16"},"content":"3. Move `ip.jar` to any folder of choice."},{"lineNumber":34,"author":{"gitId":"Emkay16"},"content":"4. Navigate to the folder using your terminal of choice and start Duke up via this command:"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":36,"author":{"gitId":"Emkay16"},"content":"   java -jar ip.jar"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":38,"author":{"gitId":"Emkay16"},"content":"5. You are now ready to interact with Duke. Type a command "},{"lineNumber":39,"author":{"gitId":"Emkay16"},"content":"   (e.g. typing `help` will list all commands and how to use them) to execute it."},{"lineNumber":40,"author":{"gitId":"Emkay16"},"content":"   "},{"lineNumber":41,"author":{"gitId":"Emkay16"},"content":"6. Refer to the [Features](#features) below for commands that Duke recognises. "},{"lineNumber":42,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":43,"author":{"gitId":"Emkay16"},"content":"---"},{"lineNumber":44,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":45,"author":{"gitId":"Emkay16"},"content":"### Features"},{"lineNumber":46,"author":{"gitId":"Emkay16"},"content":"\u003e Command format:"},{"lineNumber":47,"author":{"gitId":"Emkay16"},"content":"\u003e  * Words in angle brackets are required arguments\\"},{"lineNumber":48,"author":{"gitId":"Emkay16"},"content":"\u003e  e.g. in `todo \u003cDESCRIPTION\u003e`, `\u003cDESCRIPTION\u003e` is an argument which can be used as `todo Install Java 11`"},{"lineNumber":49,"author":{"gitId":"Emkay16"},"content":"\u003e  * Commands can be typed in upper or lower case, or even a mix of both.\\"},{"lineNumber":50,"author":{"gitId":"Emkay16"},"content":"\u003e  Be aware that string arguments are saved as is."},{"lineNumber":51,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":52,"author":{"gitId":"Emkay16"},"content":"#### Viewing help: `help`"},{"lineNumber":53,"author":{"gitId":"Emkay16"},"content":"Prints all currently implemented commands, along with how to use them.\\"},{"lineNumber":54,"author":{"gitId":"Emkay16"},"content":"Usage: `help`"},{"lineNumber":55,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":56,"author":{"gitId":"Emkay16"},"content":"#### Adding a to do: `todo`"},{"lineNumber":57,"author":{"gitId":"Emkay16"},"content":"Adds a to do to the current lists of tasks.\\"},{"lineNumber":58,"author":{"gitId":"Emkay16"},"content":"Usage: `todo \u003cDESCRIPTION\u003e`\\"},{"lineNumber":59,"author":{"gitId":"Emkay16"},"content":"Example: `todo Complete CS2113T java exercises`"},{"lineNumber":60,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":61,"author":{"gitId":"Emkay16"},"content":"#### Adding a deadline: `deadline`"},{"lineNumber":62,"author":{"gitId":"Emkay16"},"content":"Adds a deadline to the current lists of tasks.\\"},{"lineNumber":63,"author":{"gitId":"Emkay16"},"content":"Usage: `deadline \u003cDESCRIPTION\u003e /by \u003cDATE\u003e`\\"},{"lineNumber":64,"author":{"gitId":"Emkay16"},"content":"Example: `deadline Submit final version of Duke /by 2021-3-5`, `deadline submit quiz /by today 6pm`"},{"lineNumber":65,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":66,"author":{"gitId":"Emkay16"},"content":"#### Adding an event: `event`"},{"lineNumber":67,"author":{"gitId":"Emkay16"},"content":"Adds an event to the current lists of tasks.\\"},{"lineNumber":68,"author":{"gitId":"Emkay16"},"content":"Usage: `event \u003cDESCRIPTION\u003e /at \u003cDATE\u003e`\\"},{"lineNumber":69,"author":{"gitId":"Emkay16"},"content":"Example: `event CS2113T Finals /at 2021-4-29`, `dinner with beanpod /at later tonight`"},{"lineNumber":70,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":71,"author":{"gitId":"Emkay16"},"content":"#### Viewing all tasks: `list`"},{"lineNumber":72,"author":{"gitId":"Emkay16"},"content":"Prints the list containing all tasks, along with the type and status of the task.\\"},{"lineNumber":73,"author":{"gitId":"Emkay16"},"content":"Usage: `list`"},{"lineNumber":74,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":75,"author":{"gitId":"Emkay16"},"content":"#### Checking a task off as done: `done`"},{"lineNumber":76,"author":{"gitId":"Emkay16"},"content":"Checks off the indicated task as done.\\"},{"lineNumber":77,"author":{"gitId":"Emkay16"},"content":"Usage: `done \u003cTASK_NUMBER\u003e`\\"},{"lineNumber":78,"author":{"gitId":"Emkay16"},"content":"Example: `done 3`"},{"lineNumber":79,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":80,"author":{"gitId":"Emkay16"},"content":"#### Undoing a checked task: `undo`"},{"lineNumber":81,"author":{"gitId":"Emkay16"},"content":"Unchecks the indicated task that was previously checked off as done.\\"},{"lineNumber":82,"author":{"gitId":"Emkay16"},"content":"Usage: `undo \u003cTASK_NUMBER\u003e`\\"},{"lineNumber":83,"author":{"gitId":"Emkay16"},"content":"Example: `undo 3`"},{"lineNumber":84,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":85,"author":{"gitId":"Emkay16"},"content":"#### Removing a task: `delete`"},{"lineNumber":86,"author":{"gitId":"Emkay16"},"content":"Removes the indicated task.\\"},{"lineNumber":87,"author":{"gitId":"Emkay16"},"content":"Usage: `delete \u003cTASK_NUMBER\u003e`\\"},{"lineNumber":88,"author":{"gitId":"Emkay16"},"content":"Example: `delete 5`"},{"lineNumber":89,"author":{"gitId":"Emkay16"},"content":"\u003e ! Note that deleting a task will cause the task numbers of tasks after it to change"},{"lineNumber":90,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":91,"author":{"gitId":"Emkay16"},"content":"#### Finding tasks by description: `find`"},{"lineNumber":92,"author":{"gitId":"Emkay16"},"content":"Finds and lists tasks that contain the keyword(s) in the description.\\"},{"lineNumber":93,"author":{"gitId":"Emkay16"},"content":"Usage: `find \u003cKEYWORD(S)\u003e`\\"},{"lineNumber":94,"author":{"gitId":"Emkay16"},"content":"Example: `find CS2113T`, `find CS2113T ip`"},{"lineNumber":95,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":96,"author":{"gitId":"Emkay16"},"content":"#### Exiting Duke: `bye`"},{"lineNumber":97,"author":{"gitId":"Emkay16"},"content":"Exits Duke\\"},{"lineNumber":98,"author":{"gitId":"Emkay16"},"content":"Usage: `bye`"},{"lineNumber":99,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":100,"author":{"gitId":"Emkay16"},"content":"---"},{"lineNumber":101,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":102,"author":{"gitId":"Emkay16"},"content":"### Saving the data"},{"lineNumber":103,"author":{"gitId":"Emkay16"},"content":"Task data is saved automatically in `data.txt` after every command that modifies the task list.\\"},{"lineNumber":104,"author":{"gitId":"Emkay16"},"content":"There is no need for manual saving."},{"lineNumber":105,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":106,"author":{"gitId":"Emkay16"},"content":"---"},{"lineNumber":107,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":108,"author":{"gitId":"Emkay16"},"content":"### Transferring save data"},{"lineNumber":109,"author":{"gitId":"Emkay16"},"content":"When transferring data to another device, just place `data.txt` in the same directory as `ip.jar`."},{"lineNumber":110,"author":{"gitId":"Emkay16"},"content":"\u003e ! Please do not modify `data.txt` directly"},{"lineNumber":111,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":112,"author":{"gitId":"Emkay16"},"content":"---"},{"lineNumber":113,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":114,"author":{"gitId":"Emkay16"},"content":"### Command summary"},{"lineNumber":115,"author":{"gitId":"Emkay16"},"content":"Listed below are all currently implemented commands in alphabetical order.\\"},{"lineNumber":116,"author":{"gitId":"Emkay16"},"content":"Click on the commands to navigate to specific feature details."},{"lineNumber":117,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":118,"author":{"gitId":"Emkay16"},"content":"| Command                                    | Usage                               |"},{"lineNumber":119,"author":{"gitId":"Emkay16"},"content":"|--------------------------------------------|-------------------------------------|"},{"lineNumber":120,"author":{"gitId":"Emkay16"},"content":"| [bye](#exiting-duke-bye)                   | `bye`                               |"},{"lineNumber":121,"author":{"gitId":"Emkay16"},"content":"| [deadline](#adding-a-deadline-deadline)    | `deadline \u003cDESCRIPTION\u003e /by \u003cDATE\u003e` |"},{"lineNumber":122,"author":{"gitId":"Emkay16"},"content":"| [delete](#removing-a-task-delete)          | `delete \u003cTASK_NUMBER\u003e`              |"},{"lineNumber":123,"author":{"gitId":"Emkay16"},"content":"| [done](#checking-a-task-off-as-done-done)  | `done \u003cTASK_NUMBER\u003e`                |"},{"lineNumber":124,"author":{"gitId":"Emkay16"},"content":"| [event](#adding-an-event-event)            | `event \u003cDESCRIPTION\u003e /at \u003cDATE\u003e`    |"},{"lineNumber":125,"author":{"gitId":"Emkay16"},"content":"| [find](#finding-tasks-by-description-find) | `find \u003cKEYWORD(S)\u003e`                 |"},{"lineNumber":126,"author":{"gitId":"Emkay16"},"content":"| [help](#viewing-help-help)                 | `help`                              |"},{"lineNumber":127,"author":{"gitId":"Emkay16"},"content":"| [list](#viewing-all-tasks-list)            | `list`                              |"},{"lineNumber":128,"author":{"gitId":"Emkay16"},"content":"| [todo](#adding-a-to-do-todo)               | `todo \u003cDESCRIPTION\u003e`                |"},{"lineNumber":129,"author":{"gitId":"Emkay16"},"content":"| [undo](#undoing-a-checked-task-undo)       | `undo \u003cTASK_NUMBER\u003e`                |"}],"authorContributionMap":{"Emkay16":121,"-":8}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Emkay16"},"content":"# Duke"},{"lineNumber":2,"author":{"gitId":"Emkay16"},"content":"Duke is a personal assistant chatbot that helps keep track of tasks, deadlines and events via a _Command Line"},{"lineNumber":3,"author":{"gitId":"Emkay16"},"content":"Interface_ (CLI)."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"Emkay16"},"content":"## User Guide"},{"lineNumber":6,"author":{"gitId":"Emkay16"},"content":"* [Getting started with Duke](#getting-started-with-duke)"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"Emkay16"},"content":"* [Features](#features)"},{"lineNumber":9,"author":{"gitId":"Emkay16"},"content":"    * [Viewing help: `help`](#viewing-help-help)"},{"lineNumber":10,"author":{"gitId":"Emkay16"},"content":"    * [Adding a to do: `todo`](#adding-a-to-do-todo)"},{"lineNumber":11,"author":{"gitId":"Emkay16"},"content":"    * [Adding a deadline: `deadline`](#adding-a-deadline-deadline)"},{"lineNumber":12,"author":{"gitId":"Emkay16"},"content":"    * [Adding an event: `event`](#adding-an-event-event)"},{"lineNumber":13,"author":{"gitId":"Emkay16"},"content":"    * [Viewing all tasks: `list`](#viewing-all-tasks-list)"},{"lineNumber":14,"author":{"gitId":"Emkay16"},"content":"    * [Checking a task off as done: `done`](#checking-a-task-off-as-done-done)"},{"lineNumber":15,"author":{"gitId":"Emkay16"},"content":"    * [Undoing a checked task: `undo`](#undoing-a-checked-task-undo)"},{"lineNumber":16,"author":{"gitId":"Emkay16"},"content":"    * [Removing a task: `delete`](#removing-a-task-delete)"},{"lineNumber":17,"author":{"gitId":"Emkay16"},"content":"    * [Finding tasks by description: `find`](#finding-tasks-by-description-find)"},{"lineNumber":18,"author":{"gitId":"Emkay16"},"content":"    * [Exiting Duke: `bye`](#exiting-duke-bye)"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"Emkay16"},"content":"* [Saving the data](#saving-the-data)"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"Emkay16"},"content":"* [Transferring save data](#transferring-save-data)"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"Emkay16"},"content":"* [Command summary](#command-summary)"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"Emkay16"},"content":"---"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"Emkay16"},"content":"### Getting started with Duke"},{"lineNumber":29,"author":{"gitId":"Emkay16"},"content":"1. Ensure you have `Java 11` installed."},{"lineNumber":30,"author":{"gitId":"Emkay16"},"content":"    * If you do not have the correct version of Java installed, `Java 11`"},{"lineNumber":31,"author":{"gitId":"Emkay16"},"content":"      can be installed from [here](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html)."},{"lineNumber":32,"author":{"gitId":"Emkay16"},"content":"2. Download the latest `ip.jar` from [here](https://github.com/Emkay16/ip/releases)."},{"lineNumber":33,"author":{"gitId":"Emkay16"},"content":"3. Move `ip.jar` to any folder of choice."},{"lineNumber":34,"author":{"gitId":"Emkay16"},"content":"4. Navigate to the folder using your terminal of choice and start Duke up via this command:"},{"lineNumber":35,"author":{"gitId":"Emkay16"},"content":"   ```"},{"lineNumber":36,"author":{"gitId":"Emkay16"},"content":"   java -jar ip.jar"},{"lineNumber":37,"author":{"gitId":"Emkay16"},"content":"   ```"},{"lineNumber":38,"author":{"gitId":"Emkay16"},"content":"5. You are now ready to interact with Duke. Type a command"},{"lineNumber":39,"author":{"gitId":"Emkay16"},"content":"   (e.g. typing `help` will list all commands and how to use them) to execute it."},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"Emkay16"},"content":"6. Refer to the [Features](#features) below for commands that Duke recognises."},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"Emkay16"},"content":"---"},{"lineNumber":44,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":45,"author":{"gitId":"Emkay16"},"content":"### Features"},{"lineNumber":46,"author":{"gitId":"Emkay16"},"content":"\u003e Command format:"},{"lineNumber":47,"author":{"gitId":"Emkay16"},"content":"\u003e  * Words in angle brackets are required arguments\\"},{"lineNumber":48,"author":{"gitId":"Emkay16"},"content":"     \u003e  e.g. in `todo \u003cDESCRIPTION\u003e`, `\u003cDESCRIPTION\u003e` is an argument which can be used as `todo Install Java 11`"},{"lineNumber":49,"author":{"gitId":"Emkay16"},"content":"\u003e  * Commands can be typed in upper or lower case, or even a mix of both.\\"},{"lineNumber":50,"author":{"gitId":"Emkay16"},"content":"     \u003e  Be aware that string arguments are saved as is."},{"lineNumber":51,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":52,"author":{"gitId":"Emkay16"},"content":"#### Viewing help: `help`"},{"lineNumber":53,"author":{"gitId":"Emkay16"},"content":"Prints all currently implemented commands, along with how to use them.\\"},{"lineNumber":54,"author":{"gitId":"Emkay16"},"content":"Usage: `help`"},{"lineNumber":55,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":56,"author":{"gitId":"Emkay16"},"content":"#### Adding a to do: `todo`"},{"lineNumber":57,"author":{"gitId":"Emkay16"},"content":"Adds a to do to the current lists of tasks.\\"},{"lineNumber":58,"author":{"gitId":"Emkay16"},"content":"Usage: `todo \u003cDESCRIPTION\u003e`\\"},{"lineNumber":59,"author":{"gitId":"Emkay16"},"content":"Example: `todo Complete CS2113T java exercises`"},{"lineNumber":60,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":61,"author":{"gitId":"Emkay16"},"content":"#### Adding a deadline: `deadline`"},{"lineNumber":62,"author":{"gitId":"Emkay16"},"content":"Adds a deadline to the current lists of tasks.\\"},{"lineNumber":63,"author":{"gitId":"Emkay16"},"content":"Usage: `deadline \u003cDESCRIPTION\u003e /by \u003cDATE\u003e`\\"},{"lineNumber":64,"author":{"gitId":"Emkay16"},"content":"Example: `deadline Submit final version of Duke /by 2021-3-5`, `deadline submit quiz /by today 6pm`"},{"lineNumber":65,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":66,"author":{"gitId":"Emkay16"},"content":"#### Adding an event: `event`"},{"lineNumber":67,"author":{"gitId":"Emkay16"},"content":"Adds an event to the current lists of tasks.\\"},{"lineNumber":68,"author":{"gitId":"Emkay16"},"content":"Usage: `event \u003cDESCRIPTION\u003e /at \u003cDATE\u003e`\\"},{"lineNumber":69,"author":{"gitId":"Emkay16"},"content":"Example: `event CS2113T Finals /at 2021-4-29`, `dinner with beanpod /at later tonight`"},{"lineNumber":70,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":71,"author":{"gitId":"Emkay16"},"content":"#### Viewing all tasks: `list`"},{"lineNumber":72,"author":{"gitId":"Emkay16"},"content":"Prints the list containing all tasks, along with the type and status of the task.\\"},{"lineNumber":73,"author":{"gitId":"Emkay16"},"content":"Usage: `list`"},{"lineNumber":74,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":75,"author":{"gitId":"Emkay16"},"content":"#### Checking a task off as done: `done`"},{"lineNumber":76,"author":{"gitId":"Emkay16"},"content":"Checks off the indicated task as done.\\"},{"lineNumber":77,"author":{"gitId":"Emkay16"},"content":"Usage: `done \u003cTASK_NUMBER\u003e`\\"},{"lineNumber":78,"author":{"gitId":"Emkay16"},"content":"Example: `done 3`"},{"lineNumber":79,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":80,"author":{"gitId":"Emkay16"},"content":"#### Undoing a checked task: `undo`"},{"lineNumber":81,"author":{"gitId":"Emkay16"},"content":"Unchecks the indicated task that was previously checked off as done.\\"},{"lineNumber":82,"author":{"gitId":"Emkay16"},"content":"Usage: `undo \u003cTASK_NUMBER\u003e`\\"},{"lineNumber":83,"author":{"gitId":"Emkay16"},"content":"Example: `undo 3`"},{"lineNumber":84,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":85,"author":{"gitId":"Emkay16"},"content":"#### Removing a task: `delete`"},{"lineNumber":86,"author":{"gitId":"Emkay16"},"content":"Removes the indicated task.\\"},{"lineNumber":87,"author":{"gitId":"Emkay16"},"content":"Usage: `delete \u003cTASK_NUMBER\u003e`\\"},{"lineNumber":88,"author":{"gitId":"Emkay16"},"content":"Example: `delete 5`"},{"lineNumber":89,"author":{"gitId":"Emkay16"},"content":"\u003e ! Note that deleting a task will cause the task numbers of tasks after it to change"},{"lineNumber":90,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":91,"author":{"gitId":"Emkay16"},"content":"#### Finding tasks by description: `find`"},{"lineNumber":92,"author":{"gitId":"Emkay16"},"content":"Finds and lists tasks that contain the keyword(s) in the description.\\"},{"lineNumber":93,"author":{"gitId":"Emkay16"},"content":"Usage: `find \u003cKEYWORD(S)\u003e`\\"},{"lineNumber":94,"author":{"gitId":"Emkay16"},"content":"Example: `find CS2113T`, `find CS2113T ip`"},{"lineNumber":95,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":96,"author":{"gitId":"Emkay16"},"content":"#### Exiting Duke: `bye`"},{"lineNumber":97,"author":{"gitId":"Emkay16"},"content":"Exits Duke\\"},{"lineNumber":98,"author":{"gitId":"Emkay16"},"content":"Usage: `bye`"},{"lineNumber":99,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":100,"author":{"gitId":"Emkay16"},"content":"---"},{"lineNumber":101,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":102,"author":{"gitId":"Emkay16"},"content":"### Saving the data"},{"lineNumber":103,"author":{"gitId":"Emkay16"},"content":"Task data is saved automatically in `data.txt` after every command that modifies the task list.\\"},{"lineNumber":104,"author":{"gitId":"Emkay16"},"content":"There is no need for manual saving."},{"lineNumber":105,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":106,"author":{"gitId":"Emkay16"},"content":"---"},{"lineNumber":107,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":108,"author":{"gitId":"Emkay16"},"content":"### Transferring save data"},{"lineNumber":109,"author":{"gitId":"Emkay16"},"content":"When transferring data to another device, just place `data.txt` in the same directory as `ip.jar`."},{"lineNumber":110,"author":{"gitId":"Emkay16"},"content":"\u003e ! Please do not modify `data.txt` directly"},{"lineNumber":111,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":112,"author":{"gitId":"Emkay16"},"content":"---"},{"lineNumber":113,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":114,"author":{"gitId":"Emkay16"},"content":"### Command summary"},{"lineNumber":115,"author":{"gitId":"Emkay16"},"content":"Listed below are all currently implemented commands in alphabetical order.\\"},{"lineNumber":116,"author":{"gitId":"Emkay16"},"content":"Click on the commands to navigate to specific feature details."},{"lineNumber":117,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":118,"author":{"gitId":"Emkay16"},"content":"| Command                                    | Usage                               |"},{"lineNumber":119,"author":{"gitId":"Emkay16"},"content":"|--------------------------------------------|-------------------------------------|"},{"lineNumber":120,"author":{"gitId":"Emkay16"},"content":"| [bye](#exiting-duke-bye)                   | `bye`                               |"},{"lineNumber":121,"author":{"gitId":"Emkay16"},"content":"| [deadline](#adding-a-deadline-deadline)    | `deadline \u003cDESCRIPTION\u003e /by \u003cDATE\u003e` |"},{"lineNumber":122,"author":{"gitId":"Emkay16"},"content":"| [delete](#removing-a-task-delete)          | `delete \u003cTASK_NUMBER\u003e`              |"},{"lineNumber":123,"author":{"gitId":"Emkay16"},"content":"| [done](#checking-a-task-off-as-done-done)  | `done \u003cTASK_NUMBER\u003e`                |"},{"lineNumber":124,"author":{"gitId":"Emkay16"},"content":"| [event](#adding-an-event-event)            | `event \u003cDESCRIPTION\u003e /at \u003cDATE\u003e`    |"},{"lineNumber":125,"author":{"gitId":"Emkay16"},"content":"| [find](#finding-tasks-by-description-find) | `find \u003cKEYWORD(S)\u003e`                 |"},{"lineNumber":126,"author":{"gitId":"Emkay16"},"content":"| [help](#viewing-help-help)                 | `help`                              |"},{"lineNumber":127,"author":{"gitId":"Emkay16"},"content":"| [list](#viewing-all-tasks-list)            | `list`                              |"},{"lineNumber":128,"author":{"gitId":"Emkay16"},"content":"| [todo](#adding-a-to-do-todo)               | `todo \u003cDESCRIPTION\u003e`                |"},{"lineNumber":129,"author":{"gitId":"Emkay16"},"content":"| [undo](#undoing-a-checked-task-undo)       | `undo \u003cTASK_NUMBER\u003e`                |"}],"authorContributionMap":{"Emkay16":120,"-":9}},{"path":"src/main/java/duke/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emkay16"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":3,"author":{"gitId":"Emkay16"},"content":"public class Constants {"},{"lineNumber":4,"author":{"gitId":"Emkay16"},"content":"    public static final String LINE \u003d \"_____________________________________________________\\n\";"},{"lineNumber":5,"author":{"gitId":"Emkay16"},"content":"    public static final String LOGO \u003d \" ____        _        \\n\""},{"lineNumber":6,"author":{"gitId":"Emkay16"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":7,"author":{"gitId":"Emkay16"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":8,"author":{"gitId":"Emkay16"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":9,"author":{"gitId":"Emkay16"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":10,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":11,"author":{"gitId":"Emkay16"},"content":"    public static final String WELCOME_MESSAGE \u003d \"Hello from\\n\" + LOGO"},{"lineNumber":12,"author":{"gitId":"Emkay16"},"content":"            + \"What can I do for you today?\\n\""},{"lineNumber":13,"author":{"gitId":"Emkay16"},"content":"            + \"Type \u0027help\u0027 for list of commands and usage\";"},{"lineNumber":14,"author":{"gitId":"Emkay16"},"content":"    public static final String BYE_MESSAGE \u003d \"Goodbye! Hope to see you around soon!\";"},{"lineNumber":15,"author":{"gitId":"Emkay16"},"content":"    public static final String UNDONE_TASKS_REMAINING_MESSAGE \u003d \"There are %d undone task(s) on the list\";"},{"lineNumber":16,"author":{"gitId":"Emkay16"},"content":"    public static final String EMPTY_LIST_MESSAGE \u003d \"There are no tasks in the list\";"},{"lineNumber":17,"author":{"gitId":"Emkay16"},"content":"    public static final String ADD_MESSAGE \u003d \"\\\"%s\\\" added to list\";"},{"lineNumber":18,"author":{"gitId":"Emkay16"},"content":"    public static final String NO_DESCRIPTION_MESSAGE \u003d \"The description cannot be empty!\";"},{"lineNumber":19,"author":{"gitId":"Emkay16"},"content":"    public static final String DEADLINE_DUE_DATE_MESSAGE \u003d \"Please complete by: %s\";"},{"lineNumber":20,"author":{"gitId":"Emkay16"},"content":"    public static final String NO_DEADLINE_MESSAGE \u003d \"Please indicate a deadline after \\\"/by\\\"\";"},{"lineNumber":21,"author":{"gitId":"Emkay16"},"content":"    public static final String EVENT_TIME_MESSAGE \u003d \"It occurs at: %s\";"},{"lineNumber":22,"author":{"gitId":"Emkay16"},"content":"    public static final String NO_TIME_MESSAGE \u003d \"Please indicate the event time after \\\"/at\\\"\";"},{"lineNumber":23,"author":{"gitId":"Emkay16"},"content":"    public static final String TASK_CHECKED_MESSAGE \u003d \"Task %d checked off!\\n    %s %s\";"},{"lineNumber":24,"author":{"gitId":"Emkay16"},"content":"    public static final String TASK_ALREADY_CHECKED_MESSAGE \u003d \"Task %d: \\\"%s\\\" is already checked off\";"},{"lineNumber":25,"author":{"gitId":"Emkay16"},"content":"    public static final String ALL_TASKS_CHECKED_MESSAGE \u003d \"All remaining tasks have been checked off!\";"},{"lineNumber":26,"author":{"gitId":"Emkay16"},"content":"    public static final String TASK_UNCHECKED_MESSAGE \u003d \"Task %d is no longer checked off\\n    %s %s\";"},{"lineNumber":27,"author":{"gitId":"Emkay16"},"content":"    public static final String TASK_NOT_CHECKED_MESSAGE \u003d \"Task %d: \\\"%s\\\" is not checked\";"},{"lineNumber":28,"author":{"gitId":"Emkay16"},"content":"    public static final String TASK_DOES_NOT_EXIST_MESSAGE \u003d \"Task %d does not exist!\";"},{"lineNumber":29,"author":{"gitId":"Emkay16"},"content":"    public static final String TASK_DELETED_MESSAGE \u003d \"Task %d:%s has been removed\";"},{"lineNumber":30,"author":{"gitId":"Emkay16"},"content":"    public static final String TASKS_CONTAINING_KEYWORD_MESSAGE \u003d \"%d tasks containing keyword \\\"%s\\\" found:\";"},{"lineNumber":31,"author":{"gitId":"Emkay16"},"content":"    public static final String INVALID_ARGUMENT_MESSAGE \u003d \"Invalid argument!\";"},{"lineNumber":32,"author":{"gitId":"Emkay16"},"content":"    public static final String INVALID_COMMAND_MESSAGE \u003d \"I am sorry, I do not recognise that command\\n\""},{"lineNumber":33,"author":{"gitId":"Emkay16"},"content":"            + \"Please try again\";"},{"lineNumber":34,"author":{"gitId":"Emkay16"},"content":"    public static final String GENERIC_ERROR_MESSAGE \u003d \"Something went wrong!\";"},{"lineNumber":35,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":36,"author":{"gitId":"Emkay16"},"content":"    public static final String TODO_INFO \u003d \"Add to do:\\n\""},{"lineNumber":37,"author":{"gitId":"Emkay16"},"content":"            + \"     Command prefix: todo\\n\""},{"lineNumber":38,"author":{"gitId":"Emkay16"},"content":"            + \"     Argument(s): description\\n\""},{"lineNumber":39,"author":{"gitId":"Emkay16"},"content":"            + \"     Usage: todo \u003cdescription\u003e\\n\""},{"lineNumber":40,"author":{"gitId":"Emkay16"},"content":"            + \"     Example: todo CS2113T lecture 5 quiz\\n\";"},{"lineNumber":41,"author":{"gitId":"Emkay16"},"content":"    public static final String EVENT_INFO \u003d \"Add event:\\n\""},{"lineNumber":42,"author":{"gitId":"Emkay16"},"content":"            + \"     Command prefix:  event\\n\""},{"lineNumber":43,"author":{"gitId":"Emkay16"},"content":"            + \"     Argument(s): description, date\\n\""},{"lineNumber":44,"author":{"gitId":"Emkay16"},"content":"            + \"     Usage: event \u003cdescription\u003e /at \u003cdate\u003e\\n\""},{"lineNumber":45,"author":{"gitId":"Emkay16"},"content":"            + \"     Example: event CS2113T finals /at 29/4 1pm\\n\";"},{"lineNumber":46,"author":{"gitId":"Emkay16"},"content":"    public static final String DEADLINE_INFO \u003d \"Add deadline:\\n\""},{"lineNumber":47,"author":{"gitId":"Emkay16"},"content":"            + \"     Command prefix: deadline\\n\""},{"lineNumber":48,"author":{"gitId":"Emkay16"},"content":"            + \"     Argument(s): description, due date\\n\""},{"lineNumber":49,"author":{"gitId":"Emkay16"},"content":"            + \"     Usage: deadline \u003cdescription\u003e /by \u003cdue date\u003e\\n\""},{"lineNumber":50,"author":{"gitId":"Emkay16"},"content":"            + \"     Example: deadline release v2.0 jar /by 5/3 2359\\n\";"},{"lineNumber":51,"author":{"gitId":"Emkay16"},"content":"    public static final String LIST_INFO \u003d \"Show list of tasks:\\n\""},{"lineNumber":52,"author":{"gitId":"Emkay16"},"content":"            + \"     Command: list\\n\""},{"lineNumber":53,"author":{"gitId":"Emkay16"},"content":"            + \"     Usage: list\\n\";"},{"lineNumber":54,"author":{"gitId":"Emkay16"},"content":"    public static final String DONE_INFO \u003d \"Check off completed task:\\n\""},{"lineNumber":55,"author":{"gitId":"Emkay16"},"content":"            + \"     Command prefix: done\\n\""},{"lineNumber":56,"author":{"gitId":"Emkay16"},"content":"            + \"     Argument(s): task index (as seen from list)\\n\""},{"lineNumber":57,"author":{"gitId":"Emkay16"},"content":"            + \"     Usage: done \u003ctask index\u003e\\n\""},{"lineNumber":58,"author":{"gitId":"Emkay16"},"content":"            + \"     Example: done 3\\n\";"},{"lineNumber":59,"author":{"gitId":"Emkay16"},"content":"    public static final String UNDO_INFO \u003d \"Uncheck task: \\n\""},{"lineNumber":60,"author":{"gitId":"Emkay16"},"content":"            + \"     Command prefix: undo\\n\""},{"lineNumber":61,"author":{"gitId":"Emkay16"},"content":"            + \"     Argument(s): task index (as seen from list)\\n\""},{"lineNumber":62,"author":{"gitId":"Emkay16"},"content":"            + \"     Usage: undo \u003ctask index\u003e\\n\""},{"lineNumber":63,"author":{"gitId":"Emkay16"},"content":"            + \"     Example: undo 3\\n\";"},{"lineNumber":64,"author":{"gitId":"Emkay16"},"content":"    public static final String DELETE_INFO \u003d \"Remove task:\\n\""},{"lineNumber":65,"author":{"gitId":"Emkay16"},"content":"            + \"! Note that deleting a task will cause the indices of tasks after it to change !\\n\""},{"lineNumber":66,"author":{"gitId":"Emkay16"},"content":"            + \"     Command prefix: delete\\n\""},{"lineNumber":67,"author":{"gitId":"Emkay16"},"content":"            + \"     Argument(s): task index (as seen from list)\\n\""},{"lineNumber":68,"author":{"gitId":"Emkay16"},"content":"            + \"     Usage: delete \u003ctask index\u003e\\n\""},{"lineNumber":69,"author":{"gitId":"Emkay16"},"content":"            + \"     Example: delete 3\\n\";"},{"lineNumber":70,"author":{"gitId":"Emkay16"},"content":"    public static final String FIND_INFO \u003d \"Find tasks which contain the keyword in the description:\\n\""},{"lineNumber":71,"author":{"gitId":"Emkay16"},"content":"            + \"     Command prefix: find\\n\""},{"lineNumber":72,"author":{"gitId":"Emkay16"},"content":"            + \"     Argument(s): keyword(s)\\n\""},{"lineNumber":73,"author":{"gitId":"Emkay16"},"content":"            + \"     Usage: find \u003ckeyword(s)\u003e\\n\""},{"lineNumber":74,"author":{"gitId":"Emkay16"},"content":"            + \"     Example: find read\\n\";"},{"lineNumber":75,"author":{"gitId":"Emkay16"},"content":"    public static final String BYE_INFO \u003d \"Exit Duke:\\n\""},{"lineNumber":76,"author":{"gitId":"Emkay16"},"content":"            + \"     Command: bye\\n\""},{"lineNumber":77,"author":{"gitId":"Emkay16"},"content":"            + \"     Usage: bye\";"},{"lineNumber":78,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":79,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":80,"author":{"gitId":"Emkay16"},"content":"    public static final String FILENAME \u003d \"data.txt\";"},{"lineNumber":81,"author":{"gitId":"Emkay16"},"content":"}"}],"authorContributionMap":{"Emkay16":81}},{"path":"src/main/java/duke/DataStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emkay16"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":3,"author":{"gitId":"Emkay16"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"Emkay16"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"Emkay16"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"Emkay16"},"content":"import duke.task.ToDo;"},{"lineNumber":7,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":8,"author":{"gitId":"Emkay16"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"Emkay16"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"Emkay16"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"Emkay16"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"Emkay16"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":14,"author":{"gitId":"Emkay16"},"content":"public class DataStorage {"},{"lineNumber":15,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":16,"author":{"gitId":"Emkay16"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Emkay16"},"content":"     * Reads data.txt line by line and passes each line of save data"},{"lineNumber":18,"author":{"gitId":"Emkay16"},"content":"     * as a string to loadData()"},{"lineNumber":19,"author":{"gitId":"Emkay16"},"content":"     * Creates a new file named data.txt if it does not exist"},{"lineNumber":20,"author":{"gitId":"Emkay16"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"Emkay16"},"content":"     * @param list Empty ArrayList to be passed to loadData()"},{"lineNumber":22,"author":{"gitId":"Emkay16"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Emkay16"},"content":"    public static void readFile(ArrayList\u003cTask\u003e list) {"},{"lineNumber":24,"author":{"gitId":"Emkay16"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"Emkay16"},"content":"            File saveData \u003d new File(Constants.FILENAME);"},{"lineNumber":26,"author":{"gitId":"Emkay16"},"content":"            if(saveData.createNewFile()) { //file is created"},{"lineNumber":27,"author":{"gitId":"Emkay16"},"content":"                System.out.println(\"data.txt created\");"},{"lineNumber":28,"author":{"gitId":"Emkay16"},"content":"            } else { //file already exists"},{"lineNumber":29,"author":{"gitId":"Emkay16"},"content":"                Scanner reader \u003d new Scanner(saveData);"},{"lineNumber":30,"author":{"gitId":"Emkay16"},"content":"                while (reader.hasNextLine()) {"},{"lineNumber":31,"author":{"gitId":"Emkay16"},"content":"                    String line \u003d reader.nextLine();"},{"lineNumber":32,"author":{"gitId":"Emkay16"},"content":"                    loadData(list, line);"},{"lineNumber":33,"author":{"gitId":"Emkay16"},"content":"                }"},{"lineNumber":34,"author":{"gitId":"Emkay16"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"Emkay16"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"Emkay16"},"content":"            System.out.print(Constants.LINE + Constants.GENERIC_ERROR_MESSAGE + Constants.LINE);"},{"lineNumber":37,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":40,"author":{"gitId":"Emkay16"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"Emkay16"},"content":"     * Reads the line of sava data and adds tasks accordingly to the ArrayList containing tasks"},{"lineNumber":42,"author":{"gitId":"Emkay16"},"content":"     * If the description returned by dataParser() is null, the"},{"lineNumber":43,"author":{"gitId":"Emkay16"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"Emkay16"},"content":"     * @param list Arraylist which tasks are to be added as they are parsed"},{"lineNumber":45,"author":{"gitId":"Emkay16"},"content":"     * @param line line of save data"},{"lineNumber":46,"author":{"gitId":"Emkay16"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Emkay16"},"content":"    private static void loadData(ArrayList\u003cTask\u003e list, String line) {"},{"lineNumber":48,"author":{"gitId":"Emkay16"},"content":"        Object[] parsedData \u003d Parser.dataParser(line);"},{"lineNumber":49,"author":{"gitId":"Emkay16"},"content":"        if (parsedData[0] !\u003d null ) {"},{"lineNumber":50,"author":{"gitId":"Emkay16"},"content":"            String desc \u003d (String) parsedData[0];"},{"lineNumber":51,"author":{"gitId":"Emkay16"},"content":"            boolean isDone \u003d (boolean) parsedData[1];"},{"lineNumber":52,"author":{"gitId":"Emkay16"},"content":"            String date \u003d (String) parsedData[2];"},{"lineNumber":53,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":54,"author":{"gitId":"Emkay16"},"content":"            switch (line.charAt(1)) {"},{"lineNumber":55,"author":{"gitId":"Emkay16"},"content":"            case \u0027T\u0027:"},{"lineNumber":56,"author":{"gitId":"Emkay16"},"content":"                list.add(new ToDo(desc, isDone));"},{"lineNumber":57,"author":{"gitId":"Emkay16"},"content":"                break;"},{"lineNumber":58,"author":{"gitId":"Emkay16"},"content":"            case \u0027D\u0027:"},{"lineNumber":59,"author":{"gitId":"Emkay16"},"content":"                list.add(new Deadline(desc, isDone, date));"},{"lineNumber":60,"author":{"gitId":"Emkay16"},"content":"                break;"},{"lineNumber":61,"author":{"gitId":"Emkay16"},"content":"            case \u0027E\u0027:"},{"lineNumber":62,"author":{"gitId":"Emkay16"},"content":"                list.add(new Event(desc, isDone, date));"},{"lineNumber":63,"author":{"gitId":"Emkay16"},"content":"                break;"},{"lineNumber":64,"author":{"gitId":"Emkay16"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":68,"author":{"gitId":"Emkay16"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"Emkay16"},"content":"     * Writes save data to data.txt"},{"lineNumber":70,"author":{"gitId":"Emkay16"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"Emkay16"},"content":"     * @param list ArrayList containing tasks"},{"lineNumber":72,"author":{"gitId":"Emkay16"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"Emkay16"},"content":"    public static void writeSaveData(ArrayList\u003cTask\u003e list) {"},{"lineNumber":74,"author":{"gitId":"Emkay16"},"content":"        try {"},{"lineNumber":75,"author":{"gitId":"Emkay16"},"content":"            FileWriter fw \u003d new FileWriter(Constants.FILENAME);"},{"lineNumber":76,"author":{"gitId":"Emkay16"},"content":"            fw.write(composeOutput(list.get(0)) + System.lineSeparator());"},{"lineNumber":77,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":78,"author":{"gitId":"Emkay16"},"content":"            for (int i \u003d 1; i\u003c list.size(); i++) {"},{"lineNumber":79,"author":{"gitId":"Emkay16"},"content":"                fw.append(composeOutput(list.get(i))).append(System.lineSeparator());"},{"lineNumber":80,"author":{"gitId":"Emkay16"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"Emkay16"},"content":"            fw.close();"},{"lineNumber":82,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":83,"author":{"gitId":"Emkay16"},"content":"        } catch (IOException e) {"},{"lineNumber":84,"author":{"gitId":"Emkay16"},"content":"            System.out.print(Constants.LINE + Constants.GENERIC_ERROR_MESSAGE + Constants.LINE);"},{"lineNumber":85,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":88,"author":{"gitId":"Emkay16"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"Emkay16"},"content":"     * Composes a line of save data for the task passed"},{"lineNumber":90,"author":{"gitId":"Emkay16"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"Emkay16"},"content":"     * @param data Task to be saved"},{"lineNumber":92,"author":{"gitId":"Emkay16"},"content":"     * @return String of save data to be written into data.txt"},{"lineNumber":93,"author":{"gitId":"Emkay16"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"Emkay16"},"content":"    private static String composeOutput(Task data) {"},{"lineNumber":95,"author":{"gitId":"Emkay16"},"content":"        boolean isDone \u003d data.getStatus();"},{"lineNumber":96,"author":{"gitId":"Emkay16"},"content":"        StringBuilder output \u003d new StringBuilder();"},{"lineNumber":97,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":98,"author":{"gitId":"Emkay16"},"content":"        if(!isDone) {"},{"lineNumber":99,"author":{"gitId":"Emkay16"},"content":"            output.append(\"0\");"},{"lineNumber":100,"author":{"gitId":"Emkay16"},"content":"        } else {"},{"lineNumber":101,"author":{"gitId":"Emkay16"},"content":"            output.append(\"1\");"},{"lineNumber":102,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":104,"author":{"gitId":"Emkay16"},"content":"        switch(data.toString().charAt(2)){"},{"lineNumber":105,"author":{"gitId":"Emkay16"},"content":"        case \u0027T\u0027:"},{"lineNumber":106,"author":{"gitId":"Emkay16"},"content":"            output.append(\u0027T\u0027);"},{"lineNumber":107,"author":{"gitId":"Emkay16"},"content":"            output.append(data.getDesc());"},{"lineNumber":108,"author":{"gitId":"Emkay16"},"content":"            break;"},{"lineNumber":109,"author":{"gitId":"Emkay16"},"content":"        case \u0027D\u0027:"},{"lineNumber":110,"author":{"gitId":"Emkay16"},"content":"            output.append(\u0027D\u0027);"},{"lineNumber":111,"author":{"gitId":"Emkay16"},"content":"            output.append(data.getDesc());"},{"lineNumber":112,"author":{"gitId":"Emkay16"},"content":"            output.append(\u0027|\u0027);"},{"lineNumber":113,"author":{"gitId":"Emkay16"},"content":"            output.append(data.getDate());"},{"lineNumber":114,"author":{"gitId":"Emkay16"},"content":"            break;"},{"lineNumber":115,"author":{"gitId":"Emkay16"},"content":"        case \u0027E\u0027:"},{"lineNumber":116,"author":{"gitId":"Emkay16"},"content":"            output.append(\u0027E\u0027);"},{"lineNumber":117,"author":{"gitId":"Emkay16"},"content":"            output.append(data.getDesc());"},{"lineNumber":118,"author":{"gitId":"Emkay16"},"content":"            output.append(\u0027|\u0027);"},{"lineNumber":119,"author":{"gitId":"Emkay16"},"content":"            output.append(data.getDate());"},{"lineNumber":120,"author":{"gitId":"Emkay16"},"content":"            break;"},{"lineNumber":121,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"Emkay16"},"content":"        return output.toString();"},{"lineNumber":123,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"Emkay16"},"content":"}"}],"authorContributionMap":{"Emkay16":124}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emkay16"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":3,"author":{"gitId":"Emkay16"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":5,"author":{"gitId":"Emkay16"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"Emkay16"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":8,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":11,"author":{"gitId":"Emkay16"},"content":"    public static void main(String[] args) {"},{"lineNumber":12,"author":{"gitId":"Emkay16"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"Emkay16"},"content":"        DataStorage.readFile(list);"},{"lineNumber":14,"author":{"gitId":"Emkay16"},"content":"        Ui.printWelcomeMessage();"},{"lineNumber":15,"author":{"gitId":"Emkay16"},"content":"        interact(list);"},{"lineNumber":16,"author":{"gitId":"Emkay16"},"content":"        DataStorage.writeSaveData(list);"},{"lineNumber":17,"author":{"gitId":"Emkay16"},"content":"        Ui.printByeMessage();"},{"lineNumber":18,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":20,"author":{"gitId":"Emkay16"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Emkay16"},"content":"     * Reads user input and executes commands accordingly"},{"lineNumber":22,"author":{"gitId":"Emkay16"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"Emkay16"},"content":"     * @param list ArrayList containing all tasks"},{"lineNumber":24,"author":{"gitId":"Emkay16"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Emkay16"},"content":"    public static void interact(ArrayList\u003cTask\u003e list) {"},{"lineNumber":26,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":27,"author":{"gitId":"Emkay16"},"content":"        Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":28,"author":{"gitId":"Emkay16"},"content":"        String input \u003d scan.nextLine();"},{"lineNumber":29,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":30,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":31,"author":{"gitId":"Emkay16"},"content":"        String[] parsedInput \u003d Parser.inputParser(input);"},{"lineNumber":32,"author":{"gitId":"Emkay16"},"content":"        String command \u003d parsedInput[0];"},{"lineNumber":33,"author":{"gitId":"Emkay16"},"content":"        String arguments \u003d parsedInput[1];"},{"lineNumber":34,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":35,"author":{"gitId":"Emkay16"},"content":"        while (!command.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":36,"author":{"gitId":"Emkay16"},"content":"            switch (command.toLowerCase()) {"},{"lineNumber":37,"author":{"gitId":"Emkay16"},"content":"            case \"help\":"},{"lineNumber":38,"author":{"gitId":"Emkay16"},"content":"                Ui.printHelpMessage();"},{"lineNumber":39,"author":{"gitId":"Emkay16"},"content":"                break;"},{"lineNumber":40,"author":{"gitId":"Emkay16"},"content":"            case \"list\":"},{"lineNumber":41,"author":{"gitId":"Emkay16"},"content":"                TaskList.printList(list);"},{"lineNumber":42,"author":{"gitId":"Emkay16"},"content":"                break;"},{"lineNumber":43,"author":{"gitId":"Emkay16"},"content":"            case \"todo\":"},{"lineNumber":44,"author":{"gitId":"Emkay16"},"content":"                TaskList.addToDo(arguments, list);"},{"lineNumber":45,"author":{"gitId":"Emkay16"},"content":"                DataStorage.writeSaveData(list);"},{"lineNumber":46,"author":{"gitId":"Emkay16"},"content":"                break;"},{"lineNumber":47,"author":{"gitId":"Emkay16"},"content":"            case \"deadline\":"},{"lineNumber":48,"author":{"gitId":"Emkay16"},"content":"                TaskList.addDeadline(arguments, list);"},{"lineNumber":49,"author":{"gitId":"Emkay16"},"content":"                DataStorage.writeSaveData(list);"},{"lineNumber":50,"author":{"gitId":"Emkay16"},"content":"                break;"},{"lineNumber":51,"author":{"gitId":"Emkay16"},"content":"            case \"event\":"},{"lineNumber":52,"author":{"gitId":"Emkay16"},"content":"                TaskList.addEvent(arguments, list);"},{"lineNumber":53,"author":{"gitId":"Emkay16"},"content":"                DataStorage.writeSaveData(list);"},{"lineNumber":54,"author":{"gitId":"Emkay16"},"content":"                break;"},{"lineNumber":55,"author":{"gitId":"Emkay16"},"content":"            case \"done\":"},{"lineNumber":56,"author":{"gitId":"Emkay16"},"content":"                TaskList.markAsDone(list, arguments);"},{"lineNumber":57,"author":{"gitId":"Emkay16"},"content":"                DataStorage.writeSaveData(list);"},{"lineNumber":58,"author":{"gitId":"Emkay16"},"content":"                break;"},{"lineNumber":59,"author":{"gitId":"Emkay16"},"content":"            case \"undo\":"},{"lineNumber":60,"author":{"gitId":"Emkay16"},"content":"                TaskList.undoMarkAsDone(list, arguments);"},{"lineNumber":61,"author":{"gitId":"Emkay16"},"content":"                DataStorage.writeSaveData(list);"},{"lineNumber":62,"author":{"gitId":"Emkay16"},"content":"                break;"},{"lineNumber":63,"author":{"gitId":"Emkay16"},"content":"            case \"delete\":"},{"lineNumber":64,"author":{"gitId":"Emkay16"},"content":"                TaskList.delete(list, arguments);"},{"lineNumber":65,"author":{"gitId":"Emkay16"},"content":"                DataStorage.writeSaveData(list);"},{"lineNumber":66,"author":{"gitId":"Emkay16"},"content":"                break;"},{"lineNumber":67,"author":{"gitId":"Emkay16"},"content":"            case \"find\":"},{"lineNumber":68,"author":{"gitId":"Emkay16"},"content":"                TaskList.find(list, arguments);"},{"lineNumber":69,"author":{"gitId":"Emkay16"},"content":"                break;"},{"lineNumber":70,"author":{"gitId":"Emkay16"},"content":"            default:"},{"lineNumber":71,"author":{"gitId":"Emkay16"},"content":"                Ui.printInvalidCommandMessage();"},{"lineNumber":72,"author":{"gitId":"Emkay16"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"Emkay16"},"content":"            input \u003d scan.nextLine();"},{"lineNumber":74,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":75,"author":{"gitId":"Emkay16"},"content":"            parsedInput \u003d Parser.inputParser(input);"},{"lineNumber":76,"author":{"gitId":"Emkay16"},"content":"            command \u003d parsedInput[0];"},{"lineNumber":77,"author":{"gitId":"Emkay16"},"content":"            arguments \u003d parsedInput[1];"},{"lineNumber":78,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Emkay16":78,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emkay16"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":3,"author":{"gitId":"Emkay16"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Emkay16"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":6,"author":{"gitId":"Emkay16"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":8,"author":{"gitId":"Emkay16"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"Emkay16"},"content":"     * Parses the user input into the command and arguments"},{"lineNumber":10,"author":{"gitId":"Emkay16"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"Emkay16"},"content":"     * @param input User input with both command and arguments"},{"lineNumber":12,"author":{"gitId":"Emkay16"},"content":"     * @return String array containing 2 items: command and arguments"},{"lineNumber":13,"author":{"gitId":"Emkay16"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"Emkay16"},"content":"    public static String[] inputParser(String input) {"},{"lineNumber":15,"author":{"gitId":"Emkay16"},"content":"        String command;"},{"lineNumber":16,"author":{"gitId":"Emkay16"},"content":"        String arguments;"},{"lineNumber":17,"author":{"gitId":"Emkay16"},"content":"        if (input.contains(\" \")) {"},{"lineNumber":18,"author":{"gitId":"Emkay16"},"content":"            command \u003d input.substring(0, input.indexOf(\" \"));"},{"lineNumber":19,"author":{"gitId":"Emkay16"},"content":"            arguments \u003d input.substring(input.indexOf(\" \") + 1);"},{"lineNumber":20,"author":{"gitId":"Emkay16"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"Emkay16"},"content":"            command \u003d input;"},{"lineNumber":22,"author":{"gitId":"Emkay16"},"content":"            arguments \u003d null;"},{"lineNumber":23,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"Emkay16"},"content":"        return new String[]{command, arguments};"},{"lineNumber":25,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":27,"author":{"gitId":"Emkay16"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"Emkay16"},"content":"     * Parses save data from data.txt"},{"lineNumber":29,"author":{"gitId":"Emkay16"},"content":"     * If the save data is invalid, return description and date as null"},{"lineNumber":30,"author":{"gitId":"Emkay16"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"Emkay16"},"content":"     * @param data A line of save data"},{"lineNumber":32,"author":{"gitId":"Emkay16"},"content":"     * @return Array containing task description, boolean indicating if the task is done and a date (null if no date)"},{"lineNumber":33,"author":{"gitId":"Emkay16"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"Emkay16"},"content":"    public static Object[] dataParser(String data) {"},{"lineNumber":35,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":36,"author":{"gitId":"Emkay16"},"content":"        String desc;"},{"lineNumber":37,"author":{"gitId":"Emkay16"},"content":"        boolean isDone \u003d true;"},{"lineNumber":38,"author":{"gitId":"Emkay16"},"content":"        String date;"},{"lineNumber":39,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":40,"author":{"gitId":"Emkay16"},"content":"        if (data.charAt(0) \u003d\u003d \u00270\u0027) {"},{"lineNumber":41,"author":{"gitId":"Emkay16"},"content":"            isDone \u003d false;"},{"lineNumber":42,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":44,"author":{"gitId":"Emkay16"},"content":"        int indexOfSeparator;"},{"lineNumber":45,"author":{"gitId":"Emkay16"},"content":"        switch (data.charAt(1)) {"},{"lineNumber":46,"author":{"gitId":"Emkay16"},"content":"        case \u0027T\u0027:"},{"lineNumber":47,"author":{"gitId":"Emkay16"},"content":"            desc \u003d data.substring(2);"},{"lineNumber":48,"author":{"gitId":"Emkay16"},"content":"            date \u003d null;"},{"lineNumber":49,"author":{"gitId":"Emkay16"},"content":"            break;"},{"lineNumber":50,"author":{"gitId":"Emkay16"},"content":"        case \u0027D\u0027:"},{"lineNumber":51,"author":{"gitId":"Emkay16"},"content":"        case \u0027E\u0027:"},{"lineNumber":52,"author":{"gitId":"Emkay16"},"content":"            indexOfSeparator \u003d data.indexOf(\u0027|\u0027);"},{"lineNumber":53,"author":{"gitId":"Emkay16"},"content":"            desc \u003d data.substring(2, indexOfSeparator);"},{"lineNumber":54,"author":{"gitId":"Emkay16"},"content":"            date \u003d data.substring(indexOfSeparator + 1);"},{"lineNumber":55,"author":{"gitId":"Emkay16"},"content":"            break;"},{"lineNumber":56,"author":{"gitId":"Emkay16"},"content":"        default:"},{"lineNumber":57,"author":{"gitId":"Emkay16"},"content":"            desc \u003d null;"},{"lineNumber":58,"author":{"gitId":"Emkay16"},"content":"            date \u003d null;"},{"lineNumber":59,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":61,"author":{"gitId":"Emkay16"},"content":"        return new Object[]{desc, isDone, date};"},{"lineNumber":62,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":64,"author":{"gitId":"Emkay16"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"Emkay16"},"content":"     * Parses arguments for tasks with descriptions and dates"},{"lineNumber":66,"author":{"gitId":"Emkay16"},"content":"     * i.e. Deadlines and Events"},{"lineNumber":67,"author":{"gitId":"Emkay16"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"Emkay16"},"content":"     * @param data String to be parsed"},{"lineNumber":69,"author":{"gitId":"Emkay16"},"content":"     * @param delimiter Delimiter used for splitting data"},{"lineNumber":70,"author":{"gitId":"Emkay16"},"content":"     * @return String array containing task description and date"},{"lineNumber":71,"author":{"gitId":"Emkay16"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"Emkay16"},"content":"    public static String[] descDateParser(String data, String delimiter) {"},{"lineNumber":73,"author":{"gitId":"Emkay16"},"content":"        String desc \u003d data.substring(0, data.toLowerCase().indexOf(delimiter) - 1);"},{"lineNumber":74,"author":{"gitId":"Emkay16"},"content":"        String date;"},{"lineNumber":75,"author":{"gitId":"Emkay16"},"content":"        try {"},{"lineNumber":76,"author":{"gitId":"Emkay16"},"content":"            date \u003d convertDate(data.substring(data.toLowerCase().indexOf(delimiter) + 4));"},{"lineNumber":77,"author":{"gitId":"Emkay16"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":78,"author":{"gitId":"Emkay16"},"content":"            date \u003d null;"},{"lineNumber":79,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":81,"author":{"gitId":"Emkay16"},"content":"        return new String[]{desc, date};"},{"lineNumber":82,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":84,"author":{"gitId":"Emkay16"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"Emkay16"},"content":"     * Converts user input date to java.time.localDate format if possible"},{"lineNumber":86,"author":{"gitId":"Emkay16"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"Emkay16"},"content":"     * @param date User input"},{"lineNumber":88,"author":{"gitId":"Emkay16"},"content":"     * @return LocalDate format of user input date if possible. User input if not possible."},{"lineNumber":89,"author":{"gitId":"Emkay16"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"Emkay16"},"content":"    private static String convertDate(String date) {"},{"lineNumber":91,"author":{"gitId":"Emkay16"},"content":"        try {"},{"lineNumber":92,"author":{"gitId":"Emkay16"},"content":"            LocalDate parsedDate \u003d LocalDate.parse(date);"},{"lineNumber":93,"author":{"gitId":"Emkay16"},"content":"            return String.valueOf(parsedDate.getDayOfMonth()) +"},{"lineNumber":94,"author":{"gitId":"Emkay16"},"content":"                    \u0027 \u0027 + parsedDate.getMonth() +"},{"lineNumber":95,"author":{"gitId":"Emkay16"},"content":"                    \u0027 \u0027 + parsedDate.getYear();"},{"lineNumber":96,"author":{"gitId":"Emkay16"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":97,"author":{"gitId":"Emkay16"},"content":"            return date;"},{"lineNumber":98,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":100,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"Emkay16"},"content":"}"}],"authorContributionMap":{"Emkay16":101}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emkay16"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":3,"author":{"gitId":"Emkay16"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"Emkay16"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"Emkay16"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"Emkay16"},"content":"import duke.task.ToDo;"},{"lineNumber":7,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":8,"author":{"gitId":"Emkay16"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"Emkay16"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"Emkay16"},"content":"import java.util.stream.Collectors;"},{"lineNumber":11,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":12,"author":{"gitId":"Emkay16"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":14,"author":{"gitId":"Emkay16"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Emkay16"},"content":"     * Prints all tasks in the list"},{"lineNumber":16,"author":{"gitId":"Emkay16"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Emkay16"},"content":"     * @param list ArrayList containing all tasks"},{"lineNumber":18,"author":{"gitId":"Emkay16"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Emkay16"},"content":"    public static void printList(ArrayList\u003cTask\u003e list) {"},{"lineNumber":20,"author":{"gitId":"Emkay16"},"content":"        if(list.size() \u003d\u003d 0) {"},{"lineNumber":21,"author":{"gitId":"Emkay16"},"content":"            Ui.printEmptyListMessage();"},{"lineNumber":22,"author":{"gitId":"Emkay16"},"content":"        } else {"},{"lineNumber":23,"author":{"gitId":"Emkay16"},"content":"            ArrayList\u003cString\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"Emkay16"},"content":"            StringBuilder task \u003d new StringBuilder();"},{"lineNumber":25,"author":{"gitId":"Emkay16"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":26,"author":{"gitId":"Emkay16"},"content":"                if (i \u003c 9) {"},{"lineNumber":27,"author":{"gitId":"Emkay16"},"content":"                    task.append(\" \");"},{"lineNumber":28,"author":{"gitId":"Emkay16"},"content":"                }"},{"lineNumber":29,"author":{"gitId":"Emkay16"},"content":"                task.append(i+1).append(list.get(i).toString());"},{"lineNumber":30,"author":{"gitId":"Emkay16"},"content":"                taskList.add(task.toString());"},{"lineNumber":31,"author":{"gitId":"Emkay16"},"content":"                task.setLength(0);"},{"lineNumber":32,"author":{"gitId":"Emkay16"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"Emkay16"},"content":"            taskList.add(String.format(Constants.UNDONE_TASKS_REMAINING_MESSAGE, Task.getTasksRemaining()));"},{"lineNumber":34,"author":{"gitId":"Emkay16"},"content":"            Ui.dukePrinter(taskList);"},{"lineNumber":35,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":38,"author":{"gitId":"Emkay16"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Emkay16"},"content":"     * Adds a new To Do to the list of tasks"},{"lineNumber":40,"author":{"gitId":"Emkay16"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"Emkay16"},"content":"     * @param input String containing the description of the To Do"},{"lineNumber":42,"author":{"gitId":"Emkay16"},"content":"     * @param list Arraylist containing all tasks"},{"lineNumber":43,"author":{"gitId":"Emkay16"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"Emkay16"},"content":"    public static void addToDo(String input, ArrayList\u003cTask\u003e list) {"},{"lineNumber":45,"author":{"gitId":"Emkay16"},"content":"        if(input \u003d\u003d null) {"},{"lineNumber":46,"author":{"gitId":"Emkay16"},"content":"            Ui.printInvalidArgumentMessage(Constants.NO_DESCRIPTION_MESSAGE);"},{"lineNumber":47,"author":{"gitId":"Emkay16"},"content":"        } else {"},{"lineNumber":48,"author":{"gitId":"Emkay16"},"content":"            list.add(new ToDo(input));"},{"lineNumber":49,"author":{"gitId":"Emkay16"},"content":"            Ui.printToDoAdded(input);"},{"lineNumber":50,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":53,"author":{"gitId":"Emkay16"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"Emkay16"},"content":"     * Adds a new Deadline to the list of tasks"},{"lineNumber":55,"author":{"gitId":"Emkay16"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"Emkay16"},"content":"     * @param input String containing the description amd dueDate of the Deadline"},{"lineNumber":57,"author":{"gitId":"Emkay16"},"content":"     * @param list ArrayList containing all tasks"},{"lineNumber":58,"author":{"gitId":"Emkay16"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"Emkay16"},"content":"    public static void addDeadline(String input, ArrayList\u003cTask\u003e list) {"},{"lineNumber":60,"author":{"gitId":"Emkay16"},"content":"        if (input \u003d\u003d null) {"},{"lineNumber":61,"author":{"gitId":"Emkay16"},"content":"            Ui.printInvalidArgumentMessage(Constants.NO_DESCRIPTION_MESSAGE);"},{"lineNumber":62,"author":{"gitId":"Emkay16"},"content":"        } else if(input.toLowerCase().contains(\"/by\")) {"},{"lineNumber":63,"author":{"gitId":"Emkay16"},"content":"            try {"},{"lineNumber":64,"author":{"gitId":"Emkay16"},"content":"                String[] parsedInput \u003d Parser.descDateParser(input, \"/by\");"},{"lineNumber":65,"author":{"gitId":"Emkay16"},"content":"                String desc \u003d parsedInput[0];"},{"lineNumber":66,"author":{"gitId":"Emkay16"},"content":"                String dueDate \u003d parsedInput[1];"},{"lineNumber":67,"author":{"gitId":"Emkay16"},"content":"                if (dueDate !\u003d null) {"},{"lineNumber":68,"author":{"gitId":"Emkay16"},"content":"                    list.add(new Deadline(desc, dueDate));"},{"lineNumber":69,"author":{"gitId":"Emkay16"},"content":"                    Ui.printDeadlineAdded(desc, dueDate);"},{"lineNumber":70,"author":{"gitId":"Emkay16"},"content":"                } else {"},{"lineNumber":71,"author":{"gitId":"Emkay16"},"content":"                    Ui.printInvalidArgumentMessage(Constants.NO_DEADLINE_MESSAGE);"},{"lineNumber":72,"author":{"gitId":"Emkay16"},"content":"                }"},{"lineNumber":73,"author":{"gitId":"Emkay16"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":74,"author":{"gitId":"Emkay16"},"content":"                Ui.printInvalidArgumentMessage(Constants.NO_DESCRIPTION_MESSAGE);"},{"lineNumber":75,"author":{"gitId":"Emkay16"},"content":"            } catch (Exception e) {"},{"lineNumber":76,"author":{"gitId":"Emkay16"},"content":"                Ui.printGenericErrorMessage();"},{"lineNumber":77,"author":{"gitId":"Emkay16"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"Emkay16"},"content":"        } else {"},{"lineNumber":79,"author":{"gitId":"Emkay16"},"content":"            Ui.printInvalidArgumentMessage(Constants.NO_DEADLINE_MESSAGE);"},{"lineNumber":80,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":83,"author":{"gitId":"Emkay16"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"Emkay16"},"content":"     * Adds a new Event to the list of tasks"},{"lineNumber":85,"author":{"gitId":"Emkay16"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"Emkay16"},"content":"     * @param input String containing the description and date of the Event"},{"lineNumber":87,"author":{"gitId":"Emkay16"},"content":"     * @param list ArrayList containing all tasks"},{"lineNumber":88,"author":{"gitId":"Emkay16"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"Emkay16"},"content":"    public static void addEvent(String input, ArrayList\u003cTask\u003e list) {"},{"lineNumber":90,"author":{"gitId":"Emkay16"},"content":"        if (input \u003d\u003d null) {"},{"lineNumber":91,"author":{"gitId":"Emkay16"},"content":"            Ui.printInvalidArgumentMessage(Constants.NO_DESCRIPTION_MESSAGE);"},{"lineNumber":92,"author":{"gitId":"Emkay16"},"content":"        } else if(input.toLowerCase().contains(\"/at\")) {"},{"lineNumber":93,"author":{"gitId":"Emkay16"},"content":"            try {"},{"lineNumber":94,"author":{"gitId":"Emkay16"},"content":"                String[] parsedInput \u003d Parser.descDateParser(input, \"/at\");"},{"lineNumber":95,"author":{"gitId":"Emkay16"},"content":"                String desc \u003d parsedInput[0];"},{"lineNumber":96,"author":{"gitId":"Emkay16"},"content":"                String date \u003d parsedInput[1];"},{"lineNumber":97,"author":{"gitId":"Emkay16"},"content":"                if (date !\u003d null) {"},{"lineNumber":98,"author":{"gitId":"Emkay16"},"content":"                    list.add(new Event(desc, date));"},{"lineNumber":99,"author":{"gitId":"Emkay16"},"content":"                    Ui.printEventAdded(desc, date);"},{"lineNumber":100,"author":{"gitId":"Emkay16"},"content":"                } else {"},{"lineNumber":101,"author":{"gitId":"Emkay16"},"content":"                    Ui.printInvalidArgumentMessage(Constants.NO_TIME_MESSAGE);"},{"lineNumber":102,"author":{"gitId":"Emkay16"},"content":"                }"},{"lineNumber":103,"author":{"gitId":"Emkay16"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":104,"author":{"gitId":"Emkay16"},"content":"                Ui.printInvalidArgumentMessage(Constants.NO_DESCRIPTION_MESSAGE);"},{"lineNumber":105,"author":{"gitId":"Emkay16"},"content":"            } catch (Exception e) {"},{"lineNumber":106,"author":{"gitId":"Emkay16"},"content":"                Ui.printGenericErrorMessage();"},{"lineNumber":107,"author":{"gitId":"Emkay16"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"Emkay16"},"content":"        } else {"},{"lineNumber":109,"author":{"gitId":"Emkay16"},"content":"            Ui.printInvalidArgumentMessage(Constants.NO_TIME_MESSAGE);"},{"lineNumber":110,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":113,"author":{"gitId":"Emkay16"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"Emkay16"},"content":"     * Checks a task off as done"},{"lineNumber":115,"author":{"gitId":"Emkay16"},"content":"     *"},{"lineNumber":116,"author":{"gitId":"Emkay16"},"content":"     * @param list ArrayList containing all tasks"},{"lineNumber":117,"author":{"gitId":"Emkay16"},"content":"     * @param argument Task number of task to be checked off"},{"lineNumber":118,"author":{"gitId":"Emkay16"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"Emkay16"},"content":"    public static void markAsDone(ArrayList\u003cTask\u003e list, String argument) {"},{"lineNumber":120,"author":{"gitId":"Emkay16"},"content":"        try {"},{"lineNumber":121,"author":{"gitId":"Emkay16"},"content":"            int taskNo \u003d Integer.parseInt(argument);"},{"lineNumber":122,"author":{"gitId":"Emkay16"},"content":"            if (taskNo \u003c\u003d list.size() + 1 \u0026\u0026 taskNo \u003e 0) { //no. is valid"},{"lineNumber":123,"author":{"gitId":"Emkay16"},"content":"                if (list.get(taskNo - 1).getStatus()) {"},{"lineNumber":124,"author":{"gitId":"Emkay16"},"content":"                    Ui.printTaskAlreadyCheckedMessage(taskNo, list.get(taskNo - 1).getDesc());"},{"lineNumber":125,"author":{"gitId":"Emkay16"},"content":"                } else {"},{"lineNumber":126,"author":{"gitId":"Emkay16"},"content":"                    list.get(taskNo - 1).check();"},{"lineNumber":127,"author":{"gitId":"Emkay16"},"content":"                    Ui.printTaskChecked(taskNo, list.get(taskNo - 1).getStatusSymbol(),"},{"lineNumber":128,"author":{"gitId":"Emkay16"},"content":"                            list.get(taskNo - 1).getDesc(), Task.getTasksRemaining());"},{"lineNumber":129,"author":{"gitId":"Emkay16"},"content":"                }"},{"lineNumber":130,"author":{"gitId":"Emkay16"},"content":"            } else {"},{"lineNumber":131,"author":{"gitId":"Emkay16"},"content":"                Ui.printInvalidArgumentMessage(String.format(Constants.TASK_DOES_NOT_EXIST_MESSAGE, taskNo));"},{"lineNumber":132,"author":{"gitId":"Emkay16"},"content":"            }"},{"lineNumber":133,"author":{"gitId":"Emkay16"},"content":"        } catch (Exception e) {"},{"lineNumber":134,"author":{"gitId":"Emkay16"},"content":"            Ui.printGenericErrorMessage();"},{"lineNumber":135,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":138,"author":{"gitId":"Emkay16"},"content":"    /**"},{"lineNumber":139,"author":{"gitId":"Emkay16"},"content":"     * Unchecks a previously checked task"},{"lineNumber":140,"author":{"gitId":"Emkay16"},"content":"     *"},{"lineNumber":141,"author":{"gitId":"Emkay16"},"content":"     * @param list ArrayList containing all tasks"},{"lineNumber":142,"author":{"gitId":"Emkay16"},"content":"     * @param input Task number of task to be unchecked"},{"lineNumber":143,"author":{"gitId":"Emkay16"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"Emkay16"},"content":"    public static void undoMarkAsDone(ArrayList\u003cTask\u003e list, String input) {"},{"lineNumber":145,"author":{"gitId":"Emkay16"},"content":"        try {"},{"lineNumber":146,"author":{"gitId":"Emkay16"},"content":"            int taskNo \u003d Integer.parseInt(input);"},{"lineNumber":147,"author":{"gitId":"Emkay16"},"content":"            if (taskNo \u003c\u003d list.size() + 1 \u0026\u0026 taskNo \u003e 0) { //no. is valid"},{"lineNumber":148,"author":{"gitId":"Emkay16"},"content":"                if (!list.get(taskNo - 1).getStatus()) {"},{"lineNumber":149,"author":{"gitId":"Emkay16"},"content":"                    Ui.printTaskNotCheckedMessage(taskNo, list.get(taskNo - 1).getDesc());"},{"lineNumber":150,"author":{"gitId":"Emkay16"},"content":"                } else {"},{"lineNumber":151,"author":{"gitId":"Emkay16"},"content":"                    list.get(taskNo - 1).uncheck();"},{"lineNumber":152,"author":{"gitId":"Emkay16"},"content":"                    Ui.printTaskUnchecked(taskNo, list.get(taskNo - 1).getStatusSymbol(),"},{"lineNumber":153,"author":{"gitId":"Emkay16"},"content":"                            list.get(taskNo - 1).getDesc());"},{"lineNumber":154,"author":{"gitId":"Emkay16"},"content":"                }"},{"lineNumber":155,"author":{"gitId":"Emkay16"},"content":"            } else {"},{"lineNumber":156,"author":{"gitId":"Emkay16"},"content":"                Ui.printInvalidArgumentMessage(String.format(Constants.TASK_DOES_NOT_EXIST_MESSAGE, taskNo));"},{"lineNumber":157,"author":{"gitId":"Emkay16"},"content":"            }"},{"lineNumber":158,"author":{"gitId":"Emkay16"},"content":"        } catch (Exception e) {"},{"lineNumber":159,"author":{"gitId":"Emkay16"},"content":"            Ui.printGenericErrorMessage();"},{"lineNumber":160,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":163,"author":{"gitId":"Emkay16"},"content":"    /**"},{"lineNumber":164,"author":{"gitId":"Emkay16"},"content":"     * Deletes a task"},{"lineNumber":165,"author":{"gitId":"Emkay16"},"content":"     * @param list ArrayList containing all tasks"},{"lineNumber":166,"author":{"gitId":"Emkay16"},"content":"     * @param input Task number of task to be deleted"},{"lineNumber":167,"author":{"gitId":"Emkay16"},"content":"     */"},{"lineNumber":168,"author":{"gitId":"Emkay16"},"content":"    public static void delete(ArrayList\u003cTask\u003e list, String input) {"},{"lineNumber":169,"author":{"gitId":"Emkay16"},"content":"        try {"},{"lineNumber":170,"author":{"gitId":"Emkay16"},"content":"            int taskNo \u003d Integer.parseInt(input);"},{"lineNumber":171,"author":{"gitId":"Emkay16"},"content":"            if (taskNo \u003c\u003d list.size() + 1 \u0026\u0026 taskNo \u003e 0) {"},{"lineNumber":172,"author":{"gitId":"Emkay16"},"content":"                Ui.printTaskDeleted(taskNo, list.get(taskNo - 1).toString());"},{"lineNumber":173,"author":{"gitId":"Emkay16"},"content":"                list.get(taskNo - 1).remove();"},{"lineNumber":174,"author":{"gitId":"Emkay16"},"content":"                list.remove(taskNo - 1);"},{"lineNumber":175,"author":{"gitId":"Emkay16"},"content":"            } else {"},{"lineNumber":176,"author":{"gitId":"Emkay16"},"content":"                Ui.printInvalidArgumentMessage(String.format(Constants.TASK_DOES_NOT_EXIST_MESSAGE, taskNo));"},{"lineNumber":177,"author":{"gitId":"Emkay16"},"content":"            }"},{"lineNumber":178,"author":{"gitId":"Emkay16"},"content":"        } catch (Exception e) {"},{"lineNumber":179,"author":{"gitId":"Emkay16"},"content":"            Ui.printGenericErrorMessage();"},{"lineNumber":180,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":183,"author":{"gitId":"Emkay16"},"content":"    /**"},{"lineNumber":184,"author":{"gitId":"Emkay16"},"content":"     * Searches through tasks to find tasks with descriptions matching keyword(s) provided"},{"lineNumber":185,"author":{"gitId":"Emkay16"},"content":"     * then prints a list of all matching tasks"},{"lineNumber":186,"author":{"gitId":"Emkay16"},"content":"     *"},{"lineNumber":187,"author":{"gitId":"Emkay16"},"content":"     * @param list ArrayList containing all tasks"},{"lineNumber":188,"author":{"gitId":"Emkay16"},"content":"     * @param keyword Keyword(s) used for searching"},{"lineNumber":189,"author":{"gitId":"Emkay16"},"content":"     */"},{"lineNumber":190,"author":{"gitId":"Emkay16"},"content":"    public static void find(ArrayList\u003cTask\u003e list, String keyword) {"},{"lineNumber":191,"author":{"gitId":"Emkay16"},"content":"        List\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":192,"author":{"gitId":"Emkay16"},"content":"        filteredList \u003d list.stream().filter(str -\u003e str.contains(keyword)).collect(Collectors.toList());"},{"lineNumber":193,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":194,"author":{"gitId":"Emkay16"},"content":"        ArrayList\u003cString\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":195,"author":{"gitId":"Emkay16"},"content":"        taskList.add(String.format(Constants.TASKS_CONTAINING_KEYWORD_MESSAGE, filteredList.size(), keyword));"},{"lineNumber":196,"author":{"gitId":"Emkay16"},"content":"        StringBuilder task \u003d new StringBuilder();"},{"lineNumber":197,"author":{"gitId":"Emkay16"},"content":"        for (int i \u003d 0; i \u003c filteredList.size(); i++) {"},{"lineNumber":198,"author":{"gitId":"Emkay16"},"content":"            if (i \u003c 9) {"},{"lineNumber":199,"author":{"gitId":"Emkay16"},"content":"                task.append(\" \");"},{"lineNumber":200,"author":{"gitId":"Emkay16"},"content":"            }"},{"lineNumber":201,"author":{"gitId":"Emkay16"},"content":"            task.append(i+1).append(filteredList.get(i).toString());"},{"lineNumber":202,"author":{"gitId":"Emkay16"},"content":"            taskList.add(task.toString());"},{"lineNumber":203,"author":{"gitId":"Emkay16"},"content":"            task.setLength(0);"},{"lineNumber":204,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"Emkay16"},"content":"        Ui.dukePrinter(taskList);"},{"lineNumber":206,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"Emkay16"},"content":"}"}],"authorContributionMap":{"Emkay16":207}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emkay16"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":3,"author":{"gitId":"Emkay16"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":5,"author":{"gitId":"Emkay16"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"Emkay16"},"content":"    private static ArrayList\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();"},{"lineNumber":7,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":8,"author":{"gitId":"Emkay16"},"content":"    private static void dukePrinter() {"},{"lineNumber":9,"author":{"gitId":"Emkay16"},"content":"        System.out.print(Constants.LINE);"},{"lineNumber":10,"author":{"gitId":"Emkay16"},"content":"        for (String message : Ui.messages) {"},{"lineNumber":11,"author":{"gitId":"Emkay16"},"content":"            System.out.print(message);"},{"lineNumber":12,"author":{"gitId":"Emkay16"},"content":"            System.out.print(System.lineSeparator());"},{"lineNumber":13,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"Emkay16"},"content":"        System.out.print(Constants.LINE);"},{"lineNumber":15,"author":{"gitId":"Emkay16"},"content":"        Ui.messages.clear();"},{"lineNumber":16,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":18,"author":{"gitId":"Emkay16"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"Emkay16"},"content":"     * Prints each string in the ArrayList as a new line, in between 2 dashed lines"},{"lineNumber":20,"author":{"gitId":"Emkay16"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"Emkay16"},"content":"     * @param messages Arraylist containing messages that are to be printed"},{"lineNumber":22,"author":{"gitId":"Emkay16"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Emkay16"},"content":"    public static void dukePrinter(ArrayList\u003cString\u003e messages) {"},{"lineNumber":24,"author":{"gitId":"Emkay16"},"content":"        System.out.print(Constants.LINE);"},{"lineNumber":25,"author":{"gitId":"Emkay16"},"content":"        for (String message: messages) {"},{"lineNumber":26,"author":{"gitId":"Emkay16"},"content":"            System.out.print(message);"},{"lineNumber":27,"author":{"gitId":"Emkay16"},"content":"            System.out.print(System.lineSeparator());"},{"lineNumber":28,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"Emkay16"},"content":"        System.out.print(Constants.LINE);"},{"lineNumber":30,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":32,"author":{"gitId":"Emkay16"},"content":"    public static void printToDoAdded(String description) {"},{"lineNumber":33,"author":{"gitId":"Emkay16"},"content":"        messages.add(String.format(Constants.ADD_MESSAGE, description));"},{"lineNumber":34,"author":{"gitId":"Emkay16"},"content":"        dukePrinter();"},{"lineNumber":35,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":37,"author":{"gitId":"Emkay16"},"content":"    public static void printDeadlineAdded(String description, String dueDate) {"},{"lineNumber":38,"author":{"gitId":"Emkay16"},"content":"        messages.add(String.format(Constants.ADD_MESSAGE, description));"},{"lineNumber":39,"author":{"gitId":"Emkay16"},"content":"        messages.add(String.format(Constants.DEADLINE_DUE_DATE_MESSAGE, dueDate));"},{"lineNumber":40,"author":{"gitId":"Emkay16"},"content":"        dukePrinter();"},{"lineNumber":41,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":43,"author":{"gitId":"Emkay16"},"content":"    public static void printEventAdded(String description, String time) {"},{"lineNumber":44,"author":{"gitId":"Emkay16"},"content":"        messages.add(String.format(Constants.ADD_MESSAGE, description));"},{"lineNumber":45,"author":{"gitId":"Emkay16"},"content":"        messages.add(String.format(Constants.EVENT_TIME_MESSAGE, time));"},{"lineNumber":46,"author":{"gitId":"Emkay16"},"content":"        dukePrinter();"},{"lineNumber":47,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":49,"author":{"gitId":"Emkay16"},"content":"    public static void printTaskChecked(int taskNo, String statusSymbol, String description, int tasksRemaining) {"},{"lineNumber":50,"author":{"gitId":"Emkay16"},"content":"        messages.add(String.format(Constants.TASK_CHECKED_MESSAGE, taskNo, statusSymbol, description));"},{"lineNumber":51,"author":{"gitId":"Emkay16"},"content":"        if (tasksRemaining \u003d\u003d 0) {"},{"lineNumber":52,"author":{"gitId":"Emkay16"},"content":"            messages.add(Constants.ALL_TASKS_CHECKED_MESSAGE);"},{"lineNumber":53,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"Emkay16"},"content":"        dukePrinter();"},{"lineNumber":55,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":57,"author":{"gitId":"Emkay16"},"content":"    public static void printTaskUnchecked(int taskNo, String statusSymbol, String description) {"},{"lineNumber":58,"author":{"gitId":"Emkay16"},"content":"        messages.add(String.format(Constants.TASK_UNCHECKED_MESSAGE, taskNo, statusSymbol, description));"},{"lineNumber":59,"author":{"gitId":"Emkay16"},"content":"        dukePrinter();"},{"lineNumber":60,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":62,"author":{"gitId":"Emkay16"},"content":"    public static void printTaskDeleted(int taskNo, String description) {"},{"lineNumber":63,"author":{"gitId":"Emkay16"},"content":"        messages.add(String.format(Constants.TASK_DELETED_MESSAGE, taskNo, description));"},{"lineNumber":64,"author":{"gitId":"Emkay16"},"content":"        dukePrinter();"},{"lineNumber":65,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":67,"author":{"gitId":"Emkay16"},"content":"    public static void printWelcomeMessage() {"},{"lineNumber":68,"author":{"gitId":"Emkay16"},"content":"        messages.add(Constants.WELCOME_MESSAGE);"},{"lineNumber":69,"author":{"gitId":"Emkay16"},"content":"        dukePrinter();"},{"lineNumber":70,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":72,"author":{"gitId":"Emkay16"},"content":"    public static void printHelpMessage() {"},{"lineNumber":73,"author":{"gitId":"Emkay16"},"content":"        messages.add(Constants.TODO_INFO);"},{"lineNumber":74,"author":{"gitId":"Emkay16"},"content":"        messages.add(Constants.EVENT_INFO);"},{"lineNumber":75,"author":{"gitId":"Emkay16"},"content":"        messages.add(Constants.DEADLINE_INFO);"},{"lineNumber":76,"author":{"gitId":"Emkay16"},"content":"        messages.add(Constants.EVENT_INFO);"},{"lineNumber":77,"author":{"gitId":"Emkay16"},"content":"        messages.add(Constants.LIST_INFO);"},{"lineNumber":78,"author":{"gitId":"Emkay16"},"content":"        messages.add(Constants.DONE_INFO);"},{"lineNumber":79,"author":{"gitId":"Emkay16"},"content":"        messages.add(Constants.UNDO_INFO);"},{"lineNumber":80,"author":{"gitId":"Emkay16"},"content":"        messages.add(Constants.DELETE_INFO);"},{"lineNumber":81,"author":{"gitId":"Emkay16"},"content":"        messages.add(Constants.FIND_INFO);"},{"lineNumber":82,"author":{"gitId":"Emkay16"},"content":"        messages.add(Constants.BYE_INFO);"},{"lineNumber":83,"author":{"gitId":"Emkay16"},"content":"        dukePrinter();"},{"lineNumber":84,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":86,"author":{"gitId":"Emkay16"},"content":"    public static void printEmptyListMessage() {"},{"lineNumber":87,"author":{"gitId":"Emkay16"},"content":"        messages.add(Constants.EMPTY_LIST_MESSAGE);"},{"lineNumber":88,"author":{"gitId":"Emkay16"},"content":"        dukePrinter();"},{"lineNumber":89,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":91,"author":{"gitId":"Emkay16"},"content":"    public static void printTaskAlreadyCheckedMessage(int taskNo, String desc) {"},{"lineNumber":92,"author":{"gitId":"Emkay16"},"content":"        messages.add(String.format(Constants.TASK_ALREADY_CHECKED_MESSAGE, taskNo, desc));"},{"lineNumber":93,"author":{"gitId":"Emkay16"},"content":"        dukePrinter();"},{"lineNumber":94,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":96,"author":{"gitId":"Emkay16"},"content":"    public static void printTaskNotCheckedMessage(int taskNo, String desc) {"},{"lineNumber":97,"author":{"gitId":"Emkay16"},"content":"        messages.add(String.format(Constants.TASK_NOT_CHECKED_MESSAGE, taskNo, desc));"},{"lineNumber":98,"author":{"gitId":"Emkay16"},"content":"        dukePrinter();"},{"lineNumber":99,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"Emkay16"},"content":"    public static void printInvalidCommandMessage() {"},{"lineNumber":101,"author":{"gitId":"Emkay16"},"content":"        messages.add(Constants.INVALID_COMMAND_MESSAGE);"},{"lineNumber":102,"author":{"gitId":"Emkay16"},"content":"        dukePrinter();"},{"lineNumber":103,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":105,"author":{"gitId":"Emkay16"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"Emkay16"},"content":"     * Prints an invalid argument message along with the reason"},{"lineNumber":107,"author":{"gitId":"Emkay16"},"content":"     *"},{"lineNumber":108,"author":{"gitId":"Emkay16"},"content":"     * @param reason Reason the argument is invalid"},{"lineNumber":109,"author":{"gitId":"Emkay16"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"Emkay16"},"content":"    public static void printInvalidArgumentMessage(String reason) {"},{"lineNumber":111,"author":{"gitId":"Emkay16"},"content":"        messages.add(Constants.INVALID_ARGUMENT_MESSAGE);"},{"lineNumber":112,"author":{"gitId":"Emkay16"},"content":"        if (reason !\u003d null) {"},{"lineNumber":113,"author":{"gitId":"Emkay16"},"content":"            messages.add(\"Reason: \" + reason);"},{"lineNumber":114,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"Emkay16"},"content":"        dukePrinter();"},{"lineNumber":116,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":118,"author":{"gitId":"Emkay16"},"content":"    public static void printGenericErrorMessage() {"},{"lineNumber":119,"author":{"gitId":"Emkay16"},"content":"        messages.add(Constants.GENERIC_ERROR_MESSAGE);"},{"lineNumber":120,"author":{"gitId":"Emkay16"},"content":"        dukePrinter();"},{"lineNumber":121,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":123,"author":{"gitId":"Emkay16"},"content":"    public static void printByeMessage() {"},{"lineNumber":124,"author":{"gitId":"Emkay16"},"content":"        messages.add(Constants.BYE_MESSAGE);"},{"lineNumber":125,"author":{"gitId":"Emkay16"},"content":"        dukePrinter();"},{"lineNumber":126,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"Emkay16"},"content":"}"}],"authorContributionMap":{"Emkay16":127}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emkay16"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":3,"author":{"gitId":"Emkay16"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"Emkay16"},"content":"    protected String date;"},{"lineNumber":5,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":6,"author":{"gitId":"Emkay16"},"content":"    public Deadline(String desc, String dueDate) {"},{"lineNumber":7,"author":{"gitId":"Emkay16"},"content":"        super(desc);"},{"lineNumber":8,"author":{"gitId":"Emkay16"},"content":"        this.date \u003d dueDate;"},{"lineNumber":9,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":11,"author":{"gitId":"Emkay16"},"content":"    public Deadline(String desc, boolean isDone, String dueDate) {"},{"lineNumber":12,"author":{"gitId":"Emkay16"},"content":"        super(desc, isDone);"},{"lineNumber":13,"author":{"gitId":"Emkay16"},"content":"        this.date \u003d dueDate;"},{"lineNumber":14,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":16,"author":{"gitId":"Emkay16"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"Emkay16"},"content":"    public String getDate() {"},{"lineNumber":18,"author":{"gitId":"Emkay16"},"content":"        return date;"},{"lineNumber":19,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":21,"author":{"gitId":"Emkay16"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"Emkay16"},"content":"        return \" [D]\" + super.toString() + \" (by: \" + date + \")\";"},{"lineNumber":23,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Emkay16"},"content":"}"}],"authorContributionMap":{"Emkay16":24}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emkay16"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":3,"author":{"gitId":"Emkay16"},"content":"public class Event extends Task{"},{"lineNumber":4,"author":{"gitId":"Emkay16"},"content":"    private String date;"},{"lineNumber":5,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":6,"author":{"gitId":"Emkay16"},"content":"    public Event(String desc, String date) {"},{"lineNumber":7,"author":{"gitId":"Emkay16"},"content":"        super(desc);"},{"lineNumber":8,"author":{"gitId":"Emkay16"},"content":"        this.date \u003d date;"},{"lineNumber":9,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":11,"author":{"gitId":"Emkay16"},"content":"    public Event(String desc, boolean isDone, String date) {"},{"lineNumber":12,"author":{"gitId":"Emkay16"},"content":"        super(desc, isDone);"},{"lineNumber":13,"author":{"gitId":"Emkay16"},"content":"        this.date \u003d date;"},{"lineNumber":14,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":16,"author":{"gitId":"Emkay16"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"Emkay16"},"content":"    public String getDate() {"},{"lineNumber":18,"author":{"gitId":"Emkay16"},"content":"        return date;"},{"lineNumber":19,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":21,"author":{"gitId":"Emkay16"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"Emkay16"},"content":"        return \" [E]\" + super.toString() + \" (at: \" + date + \")\";"},{"lineNumber":23,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Emkay16"},"content":"}"}],"authorContributionMap":{"Emkay16":24}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emkay16"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":3,"author":{"gitId":"Emkay16"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"Emkay16"},"content":"    private String desc;"},{"lineNumber":5,"author":{"gitId":"Emkay16"},"content":"    private boolean isDone;"},{"lineNumber":6,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":7,"author":{"gitId":"Emkay16"},"content":"    private static int tasksRemaining \u003d 0;"},{"lineNumber":8,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":9,"author":{"gitId":"Emkay16"},"content":"    public Task(String desc) {"},{"lineNumber":10,"author":{"gitId":"Emkay16"},"content":"        this.desc \u003d desc;"},{"lineNumber":11,"author":{"gitId":"Emkay16"},"content":"        this.isDone \u003d false;"},{"lineNumber":12,"author":{"gitId":"Emkay16"},"content":"        tasksRemaining++;"},{"lineNumber":13,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":15,"author":{"gitId":"Emkay16"},"content":"    public Task(String desc, boolean isDone) {"},{"lineNumber":16,"author":{"gitId":"Emkay16"},"content":"        this.desc \u003d desc;"},{"lineNumber":17,"author":{"gitId":"Emkay16"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":18,"author":{"gitId":"Emkay16"},"content":"        if (!isDone) {"},{"lineNumber":19,"author":{"gitId":"Emkay16"},"content":"            tasksRemaining++;"},{"lineNumber":20,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":23,"author":{"gitId":"Emkay16"},"content":"    public String getDesc() {"},{"lineNumber":24,"author":{"gitId":"Emkay16"},"content":"        return desc;"},{"lineNumber":25,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":27,"author":{"gitId":"Emkay16"},"content":"    public boolean getStatus() {"},{"lineNumber":28,"author":{"gitId":"Emkay16"},"content":"        return isDone;"},{"lineNumber":29,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":31,"author":{"gitId":"Emkay16"},"content":"    public String getDate() {"},{"lineNumber":32,"author":{"gitId":"Emkay16"},"content":"        return null;"},{"lineNumber":33,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":35,"author":{"gitId":"Emkay16"},"content":"    public String getStatusSymbol() {"},{"lineNumber":36,"author":{"gitId":"Emkay16"},"content":"        return (isDone ? \" [X] \" : \" [ ] \");"},{"lineNumber":37,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":39,"author":{"gitId":"Emkay16"},"content":"    public static int getTasksRemaining() {"},{"lineNumber":40,"author":{"gitId":"Emkay16"},"content":"        return tasksRemaining;"},{"lineNumber":41,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":43,"author":{"gitId":"Emkay16"},"content":"    public void check() {"},{"lineNumber":44,"author":{"gitId":"Emkay16"},"content":"        if (!isDone) {"},{"lineNumber":45,"author":{"gitId":"Emkay16"},"content":"            isDone \u003d true;"},{"lineNumber":46,"author":{"gitId":"Emkay16"},"content":"            tasksRemaining--;"},{"lineNumber":47,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":50,"author":{"gitId":"Emkay16"},"content":"    public void uncheck() {"},{"lineNumber":51,"author":{"gitId":"Emkay16"},"content":"        if (isDone) {"},{"lineNumber":52,"author":{"gitId":"Emkay16"},"content":"            isDone \u003d false;"},{"lineNumber":53,"author":{"gitId":"Emkay16"},"content":"            tasksRemaining++;"},{"lineNumber":54,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":57,"author":{"gitId":"Emkay16"},"content":"    public boolean contains(String keyword) {"},{"lineNumber":58,"author":{"gitId":"Emkay16"},"content":"        if (desc.indexOf(keyword) !\u003d -1) {"},{"lineNumber":59,"author":{"gitId":"Emkay16"},"content":"            return true;"},{"lineNumber":60,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"Emkay16"},"content":"        return false;"},{"lineNumber":62,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":64,"author":{"gitId":"Emkay16"},"content":"    public void remove() {"},{"lineNumber":65,"author":{"gitId":"Emkay16"},"content":"        if (!isDone) {"},{"lineNumber":66,"author":{"gitId":"Emkay16"},"content":"            tasksRemaining--;"},{"lineNumber":67,"author":{"gitId":"Emkay16"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":70,"author":{"gitId":"Emkay16"},"content":"    public String toString() {"},{"lineNumber":71,"author":{"gitId":"Emkay16"},"content":"        return getStatusSymbol() + getDesc();"},{"lineNumber":72,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"Emkay16"},"content":"}"}],"authorContributionMap":{"Emkay16":73}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emkay16"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":3,"author":{"gitId":"Emkay16"},"content":"public class ToDo extends Task{"},{"lineNumber":4,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":5,"author":{"gitId":"Emkay16"},"content":"    public ToDo(String desc) {"},{"lineNumber":6,"author":{"gitId":"Emkay16"},"content":"        super(desc);"},{"lineNumber":7,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":9,"author":{"gitId":"Emkay16"},"content":"    public ToDo(String desc, boolean isDone) {"},{"lineNumber":10,"author":{"gitId":"Emkay16"},"content":"        super(desc, isDone);"},{"lineNumber":11,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Emkay16"},"content":""},{"lineNumber":13,"author":{"gitId":"Emkay16"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"Emkay16"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"Emkay16"},"content":"        return \" [T]\" + super.toString();"},{"lineNumber":16,"author":{"gitId":"Emkay16"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Emkay16"},"content":"}"}],"authorContributionMap":{"Emkay16":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Emkay16"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"Emkay16"},"content":"deadline Week 5 exercises /by 11 Feb"},{"lineNumber":3,"author":{"gitId":"Emkay16"},"content":"event Valentine\u0027s day /at 14 Feb"},{"lineNumber":4,"author":{"gitId":"Emkay16"},"content":"list"},{"lineNumber":5,"author":{"gitId":"Emkay16"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"Emkay16"},"content":"list"},{"lineNumber":7,"author":{"gitId":"Emkay16"},"content":"done r"},{"lineNumber":8,"author":{"gitId":"Emkay16"},"content":"undo 1"},{"lineNumber":9,"author":{"gitId":"Emkay16"},"content":"list"},{"lineNumber":10,"author":{"gitId":"Emkay16"},"content":"bye"}],"authorContributionMap":{"Emkay16":10}}]
