[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiongkaihan"},"content":"import task.Task;"},{"lineNumber":2,"author":{"gitId":"hiongkaihan"},"content":"import task.Todo;"},{"lineNumber":3,"author":{"gitId":"hiongkaihan"},"content":"import task.Deadline;"},{"lineNumber":4,"author":{"gitId":"hiongkaihan"},"content":"import task.Event;"},{"lineNumber":5,"author":{"gitId":"hiongkaihan"},"content":"import exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"hiongkaihan"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":10,"author":{"gitId":"hiongkaihan"},"content":"    static final int COMMAND_TODO \u003d 0;"},{"lineNumber":11,"author":{"gitId":"hiongkaihan"},"content":"    static final int COMMAND_DEADLINE \u003d 1;"},{"lineNumber":12,"author":{"gitId":"hiongkaihan"},"content":"    static final int COMMAND_EVENT \u003d 2;"},{"lineNumber":13,"author":{"gitId":"hiongkaihan"},"content":"    static final String DIVIDER_LINE \u003d \"____________________________________________________________\";"},{"lineNumber":14,"author":{"gitId":"hiongkaihan"},"content":"    static final String INVALID_NUMBER \u003d \"OOPS!!! Invalid task number \u003d/\\n\" + DIVIDER_LINE;"},{"lineNumber":15,"author":{"gitId":"hiongkaihan"},"content":"    static final String UNKNOWN_COMMAND \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means \u003d/\\n\" + DIVIDER_LINE;"},{"lineNumber":16,"author":{"gitId":"hiongkaihan"},"content":"    static final String INVALID_TODO \u003d \"OOPS!!! Invalid todo description\\n\" + DIVIDER_LINE;"},{"lineNumber":17,"author":{"gitId":"hiongkaihan"},"content":"    static final String INVALID_DEADLINE \u003d \"OOPS!!! Invalid deadline description\\n\" + DIVIDER_LINE;"},{"lineNumber":18,"author":{"gitId":"hiongkaihan"},"content":"    static final String INVALID_EVENT \u003d \"OOPS!!! Invalid event description\\n\" + DIVIDER_LINE;"},{"lineNumber":19,"author":{"gitId":"hiongkaihan"},"content":"    static final String LIST_EMPTY \u003d \"The list is currently empty!\\n\" + DIVIDER_LINE;"},{"lineNumber":20,"author":{"gitId":"hiongkaihan"},"content":"    static final String LIST_FULL \u003d \"The list is currently full!\\n\" + DIVIDER_LINE;"},{"lineNumber":21,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":22,"author":{"gitId":"hiongkaihan"},"content":"    // Prints horizontal line"},{"lineNumber":23,"author":{"gitId":"hiongkaihan"},"content":"    public static void printDividerLine() {"},{"lineNumber":24,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(DIVIDER_LINE);"},{"lineNumber":25,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"hiongkaihan"},"content":"    // Prints hello message"},{"lineNumber":27,"author":{"gitId":"hiongkaihan"},"content":"    public static void printHello() {"},{"lineNumber":28,"author":{"gitId":"hiongkaihan"},"content":"        printDividerLine();"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":31,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":32,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":34,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"Hello! I\u0027m Duke!\\n\" + logo);"},{"lineNumber":35,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"What can I do for you?\\n\" + \"List of commands: todo, deadline, event, done, bye\");"},{"lineNumber":36,"author":{"gitId":"hiongkaihan"},"content":"        printDividerLine();"},{"lineNumber":37,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"hiongkaihan"},"content":"    // Prints bye message"},{"lineNumber":39,"author":{"gitId":"hiongkaihan"},"content":"    public static void printBye() {"},{"lineNumber":40,"author":{"gitId":"hiongkaihan"},"content":"        printDividerLine();"},{"lineNumber":41,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":42,"author":{"gitId":"hiongkaihan"},"content":"        printDividerLine();"},{"lineNumber":43,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"hiongkaihan"},"content":"    // Prints list of tasks"},{"lineNumber":45,"author":{"gitId":"hiongkaihan"},"content":"    public static void printList(Task[] tasks, int count) throws DukeException {"},{"lineNumber":46,"author":{"gitId":"hiongkaihan"},"content":"        printDividerLine();"},{"lineNumber":47,"author":{"gitId":"hiongkaihan"},"content":"        if (count \u003d\u003d 0) {"},{"lineNumber":48,"author":{"gitId":"hiongkaihan"},"content":"            throw new DukeException();"},{"lineNumber":49,"author":{"gitId":"hiongkaihan"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":51,"author":{"gitId":"hiongkaihan"},"content":"        for (int i \u003d 0; i \u003c count; i++) {"},{"lineNumber":52,"author":{"gitId":"hiongkaihan"},"content":"            System.out.print(i + 1 + \".\");"},{"lineNumber":53,"author":{"gitId":"hiongkaihan"},"content":"            tasks[i].printTask();"},{"lineNumber":54,"author":{"gitId":"hiongkaihan"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"hiongkaihan"},"content":"        printDividerLine();"},{"lineNumber":56,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"hiongkaihan"},"content":"    // Adds task to list"},{"lineNumber":58,"author":{"gitId":"hiongkaihan"},"content":"    public static int addTask(Task[] tasks, int taskCount, String userInput, int command) throws DukeException {"},{"lineNumber":59,"author":{"gitId":"hiongkaihan"},"content":"        String description;"},{"lineNumber":60,"author":{"gitId":"hiongkaihan"},"content":"        String date;"},{"lineNumber":61,"author":{"gitId":"hiongkaihan"},"content":"        int indexOfSlash \u003d userInput.indexOf(\"/\");"},{"lineNumber":62,"author":{"gitId":"hiongkaihan"},"content":"        int stringLength \u003d userInput.length();"},{"lineNumber":63,"author":{"gitId":"hiongkaihan"},"content":"        int indexOfSpace \u003d userInput.indexOf(\" \");"},{"lineNumber":64,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":65,"author":{"gitId":"hiongkaihan"},"content":"        printDividerLine();"},{"lineNumber":66,"author":{"gitId":"hiongkaihan"},"content":"        if (taskCount \u003d\u003d 100) {"},{"lineNumber":67,"author":{"gitId":"hiongkaihan"},"content":"            System.out.println(LIST_FULL);"},{"lineNumber":68,"author":{"gitId":"hiongkaihan"},"content":"            throw new DukeException();"},{"lineNumber":69,"author":{"gitId":"hiongkaihan"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"hiongkaihan"},"content":"        switch (command) {"},{"lineNumber":71,"author":{"gitId":"hiongkaihan"},"content":"        case COMMAND_TODO:"},{"lineNumber":72,"author":{"gitId":"hiongkaihan"},"content":"            if (stringLength \u003c 6 || indexOfSpace !\u003d 4) {"},{"lineNumber":73,"author":{"gitId":"hiongkaihan"},"content":"                System.out.println(INVALID_TODO);"},{"lineNumber":74,"author":{"gitId":"hiongkaihan"},"content":"                throw new DukeException();"},{"lineNumber":75,"author":{"gitId":"hiongkaihan"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"hiongkaihan"},"content":"            description \u003d userInput.substring(5);"},{"lineNumber":77,"author":{"gitId":"hiongkaihan"},"content":"            tasks[taskCount] \u003d new Todo(description);"},{"lineNumber":78,"author":{"gitId":"hiongkaihan"},"content":"            break;"},{"lineNumber":79,"author":{"gitId":"hiongkaihan"},"content":"        case COMMAND_DEADLINE:"},{"lineNumber":80,"author":{"gitId":"hiongkaihan"},"content":"            if (stringLength \u003c 10 || indexOfSpace !\u003d 8 || indexOfSlash \u003d\u003d -1) {"},{"lineNumber":81,"author":{"gitId":"hiongkaihan"},"content":"                System.out.println(INVALID_DEADLINE);"},{"lineNumber":82,"author":{"gitId":"hiongkaihan"},"content":"                throw new DukeException();"},{"lineNumber":83,"author":{"gitId":"hiongkaihan"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"hiongkaihan"},"content":"            description \u003d userInput.substring(9, indexOfSlash);"},{"lineNumber":85,"author":{"gitId":"hiongkaihan"},"content":"            date \u003d userInput.substring(indexOfSlash + 3);"},{"lineNumber":86,"author":{"gitId":"hiongkaihan"},"content":"            tasks[taskCount] \u003d new Deadline(description, date);"},{"lineNumber":87,"author":{"gitId":"hiongkaihan"},"content":"            break;"},{"lineNumber":88,"author":{"gitId":"hiongkaihan"},"content":"        case COMMAND_EVENT:"},{"lineNumber":89,"author":{"gitId":"hiongkaihan"},"content":"            if (stringLength \u003c 7 || indexOfSpace !\u003d 5 || indexOfSlash \u003d\u003d -1) {"},{"lineNumber":90,"author":{"gitId":"hiongkaihan"},"content":"                System.out.println(INVALID_EVENT);"},{"lineNumber":91,"author":{"gitId":"hiongkaihan"},"content":"                throw new DukeException();"},{"lineNumber":92,"author":{"gitId":"hiongkaihan"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"hiongkaihan"},"content":"            description \u003d userInput.substring(6, indexOfSlash);"},{"lineNumber":94,"author":{"gitId":"hiongkaihan"},"content":"            date \u003d userInput.substring(indexOfSlash + 3);"},{"lineNumber":95,"author":{"gitId":"hiongkaihan"},"content":"            tasks[taskCount] \u003d new Event(description, date);"},{"lineNumber":96,"author":{"gitId":"hiongkaihan"},"content":"            break;"},{"lineNumber":97,"author":{"gitId":"hiongkaihan"},"content":"        default:"},{"lineNumber":98,"author":{"gitId":"hiongkaihan"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":100,"author":{"gitId":"hiongkaihan"},"content":"        System.out.print(\"Got it. I\u0027ve added this task:\\n  \");"},{"lineNumber":101,"author":{"gitId":"hiongkaihan"},"content":"        tasks[taskCount++].printTask();"},{"lineNumber":102,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");"},{"lineNumber":103,"author":{"gitId":"hiongkaihan"},"content":"        printDividerLine();"},{"lineNumber":104,"author":{"gitId":"hiongkaihan"},"content":"        return taskCount;"},{"lineNumber":105,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"hiongkaihan"},"content":"    // Marks task as done"},{"lineNumber":107,"author":{"gitId":"hiongkaihan"},"content":"    public static void markTask(Task[] tasks, int count, String userInput) throws DukeException {"},{"lineNumber":108,"author":{"gitId":"hiongkaihan"},"content":"        String number \u003d userInput.substring(5);"},{"lineNumber":109,"author":{"gitId":"hiongkaihan"},"content":"        int taskNumber \u003d Integer.parseInt(number) - 1;"},{"lineNumber":110,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":111,"author":{"gitId":"hiongkaihan"},"content":"        if (taskNumber \u003c count \u0026\u0026 taskNumber \u003e\u003d 0) {"},{"lineNumber":112,"author":{"gitId":"hiongkaihan"},"content":"            tasks[taskNumber].markAsDone();"},{"lineNumber":113,"author":{"gitId":"hiongkaihan"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":114,"author":{"gitId":"hiongkaihan"},"content":"            tasks[taskNumber].printTask();"},{"lineNumber":115,"author":{"gitId":"hiongkaihan"},"content":"            printDividerLine();"},{"lineNumber":116,"author":{"gitId":"hiongkaihan"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"hiongkaihan"},"content":"        else {"},{"lineNumber":118,"author":{"gitId":"hiongkaihan"},"content":"            throw new DukeException();"},{"lineNumber":119,"author":{"gitId":"hiongkaihan"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":122,"author":{"gitId":"hiongkaihan"},"content":"    public static void main(String[] args) {"},{"lineNumber":123,"author":{"gitId":"hiongkaihan"},"content":"        String userInput;"},{"lineNumber":124,"author":{"gitId":"hiongkaihan"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":125,"author":{"gitId":"hiongkaihan"},"content":"        Task[] tasks \u003d new Task[100];"},{"lineNumber":126,"author":{"gitId":"hiongkaihan"},"content":"        int taskCount \u003d 0;"},{"lineNumber":127,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":128,"author":{"gitId":"hiongkaihan"},"content":"        printHello();"},{"lineNumber":129,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":130,"author":{"gitId":"hiongkaihan"},"content":"        while(true) {"},{"lineNumber":131,"author":{"gitId":"hiongkaihan"},"content":"            userInput \u003d in.nextLine();"},{"lineNumber":132,"author":{"gitId":"hiongkaihan"},"content":"            if (userInput.equals(\"bye\")) {"},{"lineNumber":133,"author":{"gitId":"hiongkaihan"},"content":"                printBye();"},{"lineNumber":134,"author":{"gitId":"hiongkaihan"},"content":"                break;"},{"lineNumber":135,"author":{"gitId":"hiongkaihan"},"content":"            } else if (userInput.equals(\"list\")) {"},{"lineNumber":136,"author":{"gitId":"hiongkaihan"},"content":"                try {"},{"lineNumber":137,"author":{"gitId":"hiongkaihan"},"content":"                    printList(tasks, taskCount);"},{"lineNumber":138,"author":{"gitId":"hiongkaihan"},"content":"                } catch (DukeException e) {"},{"lineNumber":139,"author":{"gitId":"hiongkaihan"},"content":"                    System.out.println(LIST_EMPTY);"},{"lineNumber":140,"author":{"gitId":"hiongkaihan"},"content":"                }"},{"lineNumber":141,"author":{"gitId":"hiongkaihan"},"content":"            } else if (userInput.startsWith(\"done\")) {"},{"lineNumber":142,"author":{"gitId":"hiongkaihan"},"content":"                try {"},{"lineNumber":143,"author":{"gitId":"hiongkaihan"},"content":"                    markTask(tasks, taskCount, userInput);"},{"lineNumber":144,"author":{"gitId":"hiongkaihan"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":145,"author":{"gitId":"hiongkaihan"},"content":"                    System.out.println(INVALID_NUMBER);"},{"lineNumber":146,"author":{"gitId":"hiongkaihan"},"content":"                } catch (DukeException e) {"},{"lineNumber":147,"author":{"gitId":"hiongkaihan"},"content":"                    System.out.println(INVALID_NUMBER);"},{"lineNumber":148,"author":{"gitId":"hiongkaihan"},"content":"                }"},{"lineNumber":149,"author":{"gitId":"hiongkaihan"},"content":"            } else if (userInput.startsWith(\"todo\")) {"},{"lineNumber":150,"author":{"gitId":"hiongkaihan"},"content":"                try {"},{"lineNumber":151,"author":{"gitId":"hiongkaihan"},"content":"                    taskCount \u003d addTask(tasks, taskCount, userInput, COMMAND_TODO);"},{"lineNumber":152,"author":{"gitId":"hiongkaihan"},"content":"                } catch (DukeException e) {"},{"lineNumber":153,"author":{"gitId":"hiongkaihan"},"content":"                }"},{"lineNumber":154,"author":{"gitId":"hiongkaihan"},"content":"            } else if (userInput.startsWith(\"deadline\")) {"},{"lineNumber":155,"author":{"gitId":"hiongkaihan"},"content":"                try {"},{"lineNumber":156,"author":{"gitId":"hiongkaihan"},"content":"                    taskCount \u003d addTask(tasks, taskCount, userInput, COMMAND_DEADLINE);"},{"lineNumber":157,"author":{"gitId":"hiongkaihan"},"content":"                } catch (DukeException e) {"},{"lineNumber":158,"author":{"gitId":"hiongkaihan"},"content":"                }"},{"lineNumber":159,"author":{"gitId":"hiongkaihan"},"content":"                catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":160,"author":{"gitId":"hiongkaihan"},"content":"                    System.out.println(INVALID_DEADLINE);"},{"lineNumber":161,"author":{"gitId":"hiongkaihan"},"content":"                }"},{"lineNumber":162,"author":{"gitId":"hiongkaihan"},"content":"            } else if (userInput.startsWith(\"event\")) {"},{"lineNumber":163,"author":{"gitId":"hiongkaihan"},"content":"                try {"},{"lineNumber":164,"author":{"gitId":"hiongkaihan"},"content":"                    taskCount \u003d addTask(tasks, taskCount, userInput, COMMAND_EVENT);"},{"lineNumber":165,"author":{"gitId":"hiongkaihan"},"content":"                } catch (DukeException e) {"},{"lineNumber":166,"author":{"gitId":"hiongkaihan"},"content":"                } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":167,"author":{"gitId":"hiongkaihan"},"content":"                    System.out.println(INVALID_EVENT);"},{"lineNumber":168,"author":{"gitId":"hiongkaihan"},"content":"                }"},{"lineNumber":169,"author":{"gitId":"hiongkaihan"},"content":"            } else {"},{"lineNumber":170,"author":{"gitId":"hiongkaihan"},"content":"                System.out.println(UNKNOWN_COMMAND);"},{"lineNumber":171,"author":{"gitId":"hiongkaihan"},"content":"            }"},{"lineNumber":172,"author":{"gitId":"hiongkaihan"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":8,"hiongkaihan":166}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiongkaihan"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":3,"author":{"gitId":"hiongkaihan"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"hiongkaihan"},"content":"}"}],"authorContributionMap":{"hiongkaihan":4}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiongkaihan"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":3,"author":{"gitId":"hiongkaihan"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":5,"author":{"gitId":"hiongkaihan"},"content":"    protected String deadlineDate;"},{"lineNumber":6,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":7,"author":{"gitId":"hiongkaihan"},"content":"    public Deadline(String description, String deadlineDate) {"},{"lineNumber":8,"author":{"gitId":"hiongkaihan"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"hiongkaihan"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":10,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"hiongkaihan"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"hiongkaihan"},"content":"    public void printTask() {"},{"lineNumber":13,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"[D][\" + getStatusIcon() + \"] \" + description + \"(by:\" + deadlineDate +\")\");"},{"lineNumber":14,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"hiongkaihan"},"content":"}"}],"authorContributionMap":{"hiongkaihan":15}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiongkaihan"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":3,"author":{"gitId":"hiongkaihan"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":5,"author":{"gitId":"hiongkaihan"},"content":"    protected String eventDate;"},{"lineNumber":6,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":7,"author":{"gitId":"hiongkaihan"},"content":"    public Event(String description, String eventDate) {"},{"lineNumber":8,"author":{"gitId":"hiongkaihan"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"hiongkaihan"},"content":"        this.eventDate \u003d eventDate;"},{"lineNumber":10,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"hiongkaihan"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"hiongkaihan"},"content":"    public void printTask() {"},{"lineNumber":13,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"[E][\" + getStatusIcon() + \"] \" + description + \"(at:\" + eventDate +\")\");"},{"lineNumber":14,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"hiongkaihan"},"content":"}"}],"authorContributionMap":{"hiongkaihan":15}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiongkaihan"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":3,"author":{"gitId":"hiongkaihan"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":5,"author":{"gitId":"hiongkaihan"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"hiongkaihan"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":8,"author":{"gitId":"hiongkaihan"},"content":"    public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"hiongkaihan"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"hiongkaihan"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"hiongkaihan"},"content":"    // Returns status icon"},{"lineNumber":13,"author":{"gitId":"hiongkaihan"},"content":"    public String getStatusIcon() {"},{"lineNumber":14,"author":{"gitId":"hiongkaihan"},"content":"        return (isDone ? \"\\u2713\" : \" \"); //return tick or X symbols"},{"lineNumber":15,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"hiongkaihan"},"content":"    // Marks task as done"},{"lineNumber":17,"author":{"gitId":"hiongkaihan"},"content":"    public void markAsDone() {"},{"lineNumber":18,"author":{"gitId":"hiongkaihan"},"content":"        this.isDone \u003d true;"},{"lineNumber":19,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"hiongkaihan"},"content":"    // Prints task"},{"lineNumber":21,"author":{"gitId":"hiongkaihan"},"content":"    public void printTask() {"},{"lineNumber":22,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"[ ][\" + getStatusIcon() + \"] \" + description);"},{"lineNumber":23,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"hiongkaihan"},"content":"}"}],"authorContributionMap":{"hiongkaihan":24}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiongkaihan"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":3,"author":{"gitId":"hiongkaihan"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":5,"author":{"gitId":"hiongkaihan"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"hiongkaihan"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"hiongkaihan"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"hiongkaihan"},"content":"    public void printTask() {"},{"lineNumber":10,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"[T][\" + getStatusIcon() + \"] \" + description);"},{"lineNumber":11,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"hiongkaihan"},"content":"}"}],"authorContributionMap":{"hiongkaihan":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hiongkaihan"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"hiongkaihan"},"content":"list"},{"lineNumber":3,"author":{"gitId":"hiongkaihan"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"hiongkaihan"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"hiongkaihan"},"content":"bye"}],"authorContributionMap":{"hiongkaihan":5}}]
