[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"hiongkaihan"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"hiongkaihan"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":11,"author":{"gitId":"hiongkaihan"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"hiongkaihan"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"hiongkaihan"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"hiongkaihan"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"hiongkaihan"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"-":17,"hiongkaihan":9}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiongkaihan"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":3,"author":{"gitId":"hiongkaihan"},"content":"    protected String deadlineDate;"},{"lineNumber":4,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":5,"author":{"gitId":"hiongkaihan"},"content":"    public Deadline(String description, String deadlineDate) {"},{"lineNumber":6,"author":{"gitId":"hiongkaihan"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"hiongkaihan"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":8,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"hiongkaihan"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"hiongkaihan"},"content":"    public void printTask() {"},{"lineNumber":11,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"[D][\" + getStatusIcon() + \"] \" + description + \"(by:\" + deadlineDate +\")\");"},{"lineNumber":12,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"hiongkaihan"},"content":"}"}],"authorContributionMap":{"hiongkaihan":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiongkaihan"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":5,"author":{"gitId":"hiongkaihan"},"content":"    static final int COMMAND_DEFAULT \u003d 0;"},{"lineNumber":6,"author":{"gitId":"hiongkaihan"},"content":"    static final int COMMAND_TODO \u003d 1;"},{"lineNumber":7,"author":{"gitId":"hiongkaihan"},"content":"    static final int COMMAND_DEADLINE \u003d 2;"},{"lineNumber":8,"author":{"gitId":"hiongkaihan"},"content":"    static final int COMMAND_EVENT \u003d 3;"},{"lineNumber":9,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":10,"author":{"gitId":"hiongkaihan"},"content":"    // Prints horizontal line"},{"lineNumber":11,"author":{"gitId":"hiongkaihan"},"content":"    public static void printDividerLine() {"},{"lineNumber":12,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":13,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"hiongkaihan"},"content":"    // Prints hello message"},{"lineNumber":15,"author":{"gitId":"hiongkaihan"},"content":"    public static void printHello() {"},{"lineNumber":16,"author":{"gitId":"hiongkaihan"},"content":"        printDividerLine();"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":22,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + logo);"},{"lineNumber":23,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"What can I do for you?\\n\" + \"List of commands: todo, deadline, event, done, bye\");"},{"lineNumber":24,"author":{"gitId":"hiongkaihan"},"content":"        printDividerLine();"},{"lineNumber":25,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"hiongkaihan"},"content":"    // Prints bye message"},{"lineNumber":27,"author":{"gitId":"hiongkaihan"},"content":"    public static void printBye() {"},{"lineNumber":28,"author":{"gitId":"hiongkaihan"},"content":"        printDividerLine();"},{"lineNumber":29,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":30,"author":{"gitId":"hiongkaihan"},"content":"        printDividerLine();"},{"lineNumber":31,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"hiongkaihan"},"content":"    // Prints list of tasks"},{"lineNumber":33,"author":{"gitId":"hiongkaihan"},"content":"    public static void printList(Task[] tasks, int count) {"},{"lineNumber":34,"author":{"gitId":"hiongkaihan"},"content":"        printDividerLine();"},{"lineNumber":35,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":36,"author":{"gitId":"hiongkaihan"},"content":"        for (int i \u003d 0; i \u003c count; i++) {"},{"lineNumber":37,"author":{"gitId":"hiongkaihan"},"content":"            System.out.print(i + 1 + \".\");"},{"lineNumber":38,"author":{"gitId":"hiongkaihan"},"content":"            tasks[i].printTask();"},{"lineNumber":39,"author":{"gitId":"hiongkaihan"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"hiongkaihan"},"content":"        printDividerLine();"},{"lineNumber":41,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"hiongkaihan"},"content":"    // Adds task to list"},{"lineNumber":43,"author":{"gitId":"hiongkaihan"},"content":"    public static int addTask(Task[] tasks, int taskCount, String userInput, int command) {"},{"lineNumber":44,"author":{"gitId":"hiongkaihan"},"content":"        String description;"},{"lineNumber":45,"author":{"gitId":"hiongkaihan"},"content":"        String date;"},{"lineNumber":46,"author":{"gitId":"hiongkaihan"},"content":"        int indexOfSlash \u003d userInput.indexOf(\"/\");"},{"lineNumber":47,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":48,"author":{"gitId":"hiongkaihan"},"content":"        printDividerLine();"},{"lineNumber":49,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":50,"author":{"gitId":"hiongkaihan"},"content":"        switch (command) {"},{"lineNumber":51,"author":{"gitId":"hiongkaihan"},"content":"        case COMMAND_TODO:"},{"lineNumber":52,"author":{"gitId":"hiongkaihan"},"content":"            description \u003d userInput.substring(5);"},{"lineNumber":53,"author":{"gitId":"hiongkaihan"},"content":"            tasks[taskCount] \u003d new Todo(description);"},{"lineNumber":54,"author":{"gitId":"hiongkaihan"},"content":"            break;"},{"lineNumber":55,"author":{"gitId":"hiongkaihan"},"content":"        case COMMAND_DEADLINE:"},{"lineNumber":56,"author":{"gitId":"hiongkaihan"},"content":"            description \u003d userInput.substring(9, indexOfSlash);"},{"lineNumber":57,"author":{"gitId":"hiongkaihan"},"content":"            date \u003d userInput.substring(indexOfSlash + 3);"},{"lineNumber":58,"author":{"gitId":"hiongkaihan"},"content":"            tasks[taskCount] \u003d new Deadline(description, date);"},{"lineNumber":59,"author":{"gitId":"hiongkaihan"},"content":"            break;"},{"lineNumber":60,"author":{"gitId":"hiongkaihan"},"content":"        case COMMAND_EVENT:"},{"lineNumber":61,"author":{"gitId":"hiongkaihan"},"content":"            description \u003d userInput.substring(6, indexOfSlash);"},{"lineNumber":62,"author":{"gitId":"hiongkaihan"},"content":"            date \u003d userInput.substring(indexOfSlash + 3);"},{"lineNumber":63,"author":{"gitId":"hiongkaihan"},"content":"            tasks[taskCount] \u003d new Event(description, date);"},{"lineNumber":64,"author":{"gitId":"hiongkaihan"},"content":"            break;"},{"lineNumber":65,"author":{"gitId":"hiongkaihan"},"content":"        default:"},{"lineNumber":66,"author":{"gitId":"hiongkaihan"},"content":"            tasks[taskCount] \u003d new Task(userInput);"},{"lineNumber":67,"author":{"gitId":"hiongkaihan"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":69,"author":{"gitId":"hiongkaihan"},"content":"        System.out.print(\"Got it. I\u0027ve added this task:\\n  \");"},{"lineNumber":70,"author":{"gitId":"hiongkaihan"},"content":"        tasks[taskCount++].printTask();"},{"lineNumber":71,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");"},{"lineNumber":72,"author":{"gitId":"hiongkaihan"},"content":"        printDividerLine();"},{"lineNumber":73,"author":{"gitId":"hiongkaihan"},"content":"        return taskCount;"},{"lineNumber":74,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"hiongkaihan"},"content":"    // Marks task as done"},{"lineNumber":76,"author":{"gitId":"hiongkaihan"},"content":"    public static void markTask(Task[] tasks, int count, String userInput) {"},{"lineNumber":77,"author":{"gitId":"hiongkaihan"},"content":"        int length \u003d userInput.length();"},{"lineNumber":78,"author":{"gitId":"hiongkaihan"},"content":"        String number \u003d userInput.substring(5);"},{"lineNumber":79,"author":{"gitId":"hiongkaihan"},"content":"        int taskNumber \u003d Integer.parseInt(number) - 1;"},{"lineNumber":80,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":81,"author":{"gitId":"hiongkaihan"},"content":"        printDividerLine();"},{"lineNumber":82,"author":{"gitId":"hiongkaihan"},"content":"        // Check if input is valid"},{"lineNumber":83,"author":{"gitId":"hiongkaihan"},"content":"        if (length \u003c\u003d 5) {"},{"lineNumber":84,"author":{"gitId":"hiongkaihan"},"content":"            return;"},{"lineNumber":85,"author":{"gitId":"hiongkaihan"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"hiongkaihan"},"content":"        if (taskNumber \u003c count \u0026\u0026 taskNumber \u003e\u003d 0) {"},{"lineNumber":87,"author":{"gitId":"hiongkaihan"},"content":"            tasks[taskNumber].markAsDone();"},{"lineNumber":88,"author":{"gitId":"hiongkaihan"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":89,"author":{"gitId":"hiongkaihan"},"content":"            tasks[taskNumber].printTask();"},{"lineNumber":90,"author":{"gitId":"hiongkaihan"},"content":"            printDividerLine();"},{"lineNumber":91,"author":{"gitId":"hiongkaihan"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":94,"author":{"gitId":"hiongkaihan"},"content":"    public static void main(String[] args) {"},{"lineNumber":95,"author":{"gitId":"hiongkaihan"},"content":"        String userInput;"},{"lineNumber":96,"author":{"gitId":"hiongkaihan"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":97,"author":{"gitId":"hiongkaihan"},"content":"        Task[] tasks \u003d new Task[100];"},{"lineNumber":98,"author":{"gitId":"hiongkaihan"},"content":"        int taskCount \u003d 0;"},{"lineNumber":99,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":100,"author":{"gitId":"hiongkaihan"},"content":"        printHello();"},{"lineNumber":101,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":102,"author":{"gitId":"hiongkaihan"},"content":"        while(true) {"},{"lineNumber":103,"author":{"gitId":"hiongkaihan"},"content":"            userInput \u003d in.nextLine();"},{"lineNumber":104,"author":{"gitId":"hiongkaihan"},"content":"            if (userInput.equals(\"bye\")) {"},{"lineNumber":105,"author":{"gitId":"hiongkaihan"},"content":"                printBye();"},{"lineNumber":106,"author":{"gitId":"hiongkaihan"},"content":"                break;"},{"lineNumber":107,"author":{"gitId":"hiongkaihan"},"content":"            } else if (userInput.equals(\"list\")) {"},{"lineNumber":108,"author":{"gitId":"hiongkaihan"},"content":"                printList(tasks, taskCount);"},{"lineNumber":109,"author":{"gitId":"hiongkaihan"},"content":"            } else if (userInput.startsWith(\"done\")) {"},{"lineNumber":110,"author":{"gitId":"hiongkaihan"},"content":"                markTask(tasks, taskCount, userInput);"},{"lineNumber":111,"author":{"gitId":"hiongkaihan"},"content":"            } else if (userInput.startsWith(\"todo\")) {"},{"lineNumber":112,"author":{"gitId":"hiongkaihan"},"content":"                taskCount \u003d addTask(tasks, taskCount, userInput, COMMAND_TODO);"},{"lineNumber":113,"author":{"gitId":"hiongkaihan"},"content":"            } else if (userInput.startsWith(\"deadline\")) {"},{"lineNumber":114,"author":{"gitId":"hiongkaihan"},"content":"                taskCount \u003d addTask(tasks, taskCount, userInput, COMMAND_DEADLINE);"},{"lineNumber":115,"author":{"gitId":"hiongkaihan"},"content":"            } else if (userInput.startsWith(\"event\")) {"},{"lineNumber":116,"author":{"gitId":"hiongkaihan"},"content":"                taskCount \u003d addTask(tasks, taskCount, userInput, COMMAND_EVENT);"},{"lineNumber":117,"author":{"gitId":"hiongkaihan"},"content":"            } else {"},{"lineNumber":118,"author":{"gitId":"hiongkaihan"},"content":"                taskCount \u003d addTask(tasks, taskCount, userInput, COMMAND_DEFAULT);"},{"lineNumber":119,"author":{"gitId":"hiongkaihan"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"hiongkaihan"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":8,"hiongkaihan":114}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiongkaihan"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":3,"author":{"gitId":"hiongkaihan"},"content":"    protected String eventDate;"},{"lineNumber":4,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":5,"author":{"gitId":"hiongkaihan"},"content":"    public Event(String description, String eventDate) {"},{"lineNumber":6,"author":{"gitId":"hiongkaihan"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"hiongkaihan"},"content":"        this.eventDate \u003d eventDate;"},{"lineNumber":8,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"hiongkaihan"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"hiongkaihan"},"content":"    public void printTask() {"},{"lineNumber":11,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"[E][\" + getStatusIcon() + \"] \" + description + \"(at:\" + eventDate +\")\");"},{"lineNumber":12,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"hiongkaihan"},"content":"}"}],"authorContributionMap":{"hiongkaihan":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiongkaihan"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":3,"author":{"gitId":"hiongkaihan"},"content":"    protected String description;"},{"lineNumber":4,"author":{"gitId":"hiongkaihan"},"content":"    protected boolean isDone;"},{"lineNumber":5,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":6,"author":{"gitId":"hiongkaihan"},"content":"    public Task(String description) {"},{"lineNumber":7,"author":{"gitId":"hiongkaihan"},"content":"        this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"hiongkaihan"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"hiongkaihan"},"content":"    // Returns status icon"},{"lineNumber":11,"author":{"gitId":"hiongkaihan"},"content":"    public String getStatusIcon() {"},{"lineNumber":12,"author":{"gitId":"hiongkaihan"},"content":"        return (isDone ? \"\\u2713\" : \" \"); //return tick or X symbols"},{"lineNumber":13,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"hiongkaihan"},"content":"    // Marks task as done"},{"lineNumber":15,"author":{"gitId":"hiongkaihan"},"content":"    public void markAsDone() {"},{"lineNumber":16,"author":{"gitId":"hiongkaihan"},"content":"        this.isDone \u003d true;"},{"lineNumber":17,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"hiongkaihan"},"content":"    // Prints task"},{"lineNumber":19,"author":{"gitId":"hiongkaihan"},"content":"    public void printTask() {"},{"lineNumber":20,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"[ ][\" + getStatusIcon() + \"] \" + description);"},{"lineNumber":21,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"hiongkaihan"},"content":"}"}],"authorContributionMap":{"hiongkaihan":22}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiongkaihan"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":3,"author":{"gitId":"hiongkaihan"},"content":"    public Todo(String description) {"},{"lineNumber":4,"author":{"gitId":"hiongkaihan"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"hiongkaihan"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"hiongkaihan"},"content":"    public void printTask() {"},{"lineNumber":8,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"[T][\" + getStatusIcon() + \"] \" + description);"},{"lineNumber":9,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"hiongkaihan"},"content":"}"}],"authorContributionMap":{"hiongkaihan":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hiongkaihan"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"hiongkaihan"},"content":"list"},{"lineNumber":3,"author":{"gitId":"hiongkaihan"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"hiongkaihan"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"hiongkaihan"},"content":"bye"}],"authorContributionMap":{"hiongkaihan":5}}]
