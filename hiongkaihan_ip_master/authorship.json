[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"hiongkaihan"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"hiongkaihan"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":11,"author":{"gitId":"hiongkaihan"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"hiongkaihan"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"hiongkaihan"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"hiongkaihan"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"hiongkaihan"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"-":17,"hiongkaihan":9}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiongkaihan"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"hiongkaihan"},"content":"    // Prints horizontal line"},{"lineNumber":5,"author":{"gitId":"hiongkaihan"},"content":"    public static void printLine() {"},{"lineNumber":6,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":7,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"hiongkaihan"},"content":"    // Prints horizontal line with an extra new line"},{"lineNumber":9,"author":{"gitId":"hiongkaihan"},"content":"    public static void printLineWithNewLine() {"},{"lineNumber":10,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"____________________________________________________________\\n\");"},{"lineNumber":11,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"hiongkaihan"},"content":"    // Prints logo"},{"lineNumber":13,"author":{"gitId":"hiongkaihan"},"content":"    public static void printLogo() {"},{"lineNumber":14,"author":{"gitId":"hiongkaihan"},"content":"        printLine();"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":21,"author":{"gitId":"hiongkaihan"},"content":"        printLineWithNewLine();"},{"lineNumber":22,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"hiongkaihan"},"content":"    // Prints hello message"},{"lineNumber":24,"author":{"gitId":"hiongkaihan"},"content":"    public static void printHello() {"},{"lineNumber":25,"author":{"gitId":"hiongkaihan"},"content":"        printLine();"},{"lineNumber":26,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":27,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":28,"author":{"gitId":"hiongkaihan"},"content":"        printLineWithNewLine();"},{"lineNumber":29,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"hiongkaihan"},"content":"    // Prints bye message"},{"lineNumber":31,"author":{"gitId":"hiongkaihan"},"content":"    public static void printBye() {"},{"lineNumber":32,"author":{"gitId":"hiongkaihan"},"content":"        printLine();"},{"lineNumber":33,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":34,"author":{"gitId":"hiongkaihan"},"content":"        printLineWithNewLine();"},{"lineNumber":35,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"hiongkaihan"},"content":"    // Prints list of tasks"},{"lineNumber":37,"author":{"gitId":"hiongkaihan"},"content":"    public static void printList(Task[] tasks, int count) {"},{"lineNumber":38,"author":{"gitId":"hiongkaihan"},"content":"        printLine();"},{"lineNumber":39,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":40,"author":{"gitId":"hiongkaihan"},"content":"        for (int i \u003d 0; i \u003c count; i++) {"},{"lineNumber":41,"author":{"gitId":"hiongkaihan"},"content":"            System.out.println(i + 1 + \".\" + \"[\" + tasks[i].getStatusIcon() + \"] \"+ tasks[i].description);"},{"lineNumber":42,"author":{"gitId":"hiongkaihan"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"hiongkaihan"},"content":"        printLineWithNewLine();"},{"lineNumber":44,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"hiongkaihan"},"content":"    // Adds task to list"},{"lineNumber":46,"author":{"gitId":"hiongkaihan"},"content":"    public static void addTask(Task[] tasks, int count, String line) {"},{"lineNumber":47,"author":{"gitId":"hiongkaihan"},"content":"        printLine();"},{"lineNumber":48,"author":{"gitId":"hiongkaihan"},"content":"        tasks[count] \u003d new Task(line);"},{"lineNumber":49,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"added: \" + line);"},{"lineNumber":50,"author":{"gitId":"hiongkaihan"},"content":"        printLineWithNewLine();"},{"lineNumber":51,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"hiongkaihan"},"content":"    // Marks task as done"},{"lineNumber":53,"author":{"gitId":"hiongkaihan"},"content":"    public static void markTask(Task[] tasks, int count, String line) {"},{"lineNumber":54,"author":{"gitId":"hiongkaihan"},"content":"        printLine();"},{"lineNumber":55,"author":{"gitId":"hiongkaihan"},"content":"        int length \u003d line.length();"},{"lineNumber":56,"author":{"gitId":"hiongkaihan"},"content":"        // Check if input is valid"},{"lineNumber":57,"author":{"gitId":"hiongkaihan"},"content":"        if (length \u003c\u003d 5) {"},{"lineNumber":58,"author":{"gitId":"hiongkaihan"},"content":"            return;"},{"lineNumber":59,"author":{"gitId":"hiongkaihan"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"hiongkaihan"},"content":"        String digits \u003d line.substring(5);"},{"lineNumber":61,"author":{"gitId":"hiongkaihan"},"content":"        int number \u003d Integer.parseInt(digits) - 1;"},{"lineNumber":62,"author":{"gitId":"hiongkaihan"},"content":"        // Check if number is valid"},{"lineNumber":63,"author":{"gitId":"hiongkaihan"},"content":"        if (number \u003e\u003d count || number \u003c 0) {"},{"lineNumber":64,"author":{"gitId":"hiongkaihan"},"content":"            return;"},{"lineNumber":65,"author":{"gitId":"hiongkaihan"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"hiongkaihan"},"content":"        tasks[number].markAsDone();"},{"lineNumber":67,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":68,"author":{"gitId":"hiongkaihan"},"content":"        System.out.println(\"  [\" + tasks[number].getStatusIcon() + \"] \"+ tasks[number].description);"},{"lineNumber":69,"author":{"gitId":"hiongkaihan"},"content":"        printLineWithNewLine();"},{"lineNumber":70,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":72,"author":{"gitId":"hiongkaihan"},"content":"    public static void main(String[] args) {"},{"lineNumber":73,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":74,"author":{"gitId":"hiongkaihan"},"content":"        printLogo();"},{"lineNumber":75,"author":{"gitId":"hiongkaihan"},"content":"        printHello();"},{"lineNumber":76,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":77,"author":{"gitId":"hiongkaihan"},"content":"        String line;"},{"lineNumber":78,"author":{"gitId":"hiongkaihan"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":79,"author":{"gitId":"hiongkaihan"},"content":"        int count \u003d 0;"},{"lineNumber":80,"author":{"gitId":"hiongkaihan"},"content":"        Task[] tasks \u003d new Task[100];"},{"lineNumber":81,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":82,"author":{"gitId":"hiongkaihan"},"content":"        while(true) {"},{"lineNumber":83,"author":{"gitId":"hiongkaihan"},"content":"            line \u003d in.nextLine();"},{"lineNumber":84,"author":{"gitId":"hiongkaihan"},"content":"            if (line.equals(\"bye\")) {"},{"lineNumber":85,"author":{"gitId":"hiongkaihan"},"content":"                printBye();"},{"lineNumber":86,"author":{"gitId":"hiongkaihan"},"content":"                break;"},{"lineNumber":87,"author":{"gitId":"hiongkaihan"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"hiongkaihan"},"content":"            else if (line.equals(\"list\")) {"},{"lineNumber":89,"author":{"gitId":"hiongkaihan"},"content":"                printList(tasks, count);"},{"lineNumber":90,"author":{"gitId":"hiongkaihan"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"hiongkaihan"},"content":"            else if (line.startsWith(\"done\")) {"},{"lineNumber":92,"author":{"gitId":"hiongkaihan"},"content":"                markTask(tasks, count, line);"},{"lineNumber":93,"author":{"gitId":"hiongkaihan"},"content":"            } else {"},{"lineNumber":94,"author":{"gitId":"hiongkaihan"},"content":"                addTask(tasks, count, line);"},{"lineNumber":95,"author":{"gitId":"hiongkaihan"},"content":"                count++;"},{"lineNumber":96,"author":{"gitId":"hiongkaihan"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"hiongkaihan"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":9,"hiongkaihan":90}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiongkaihan"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"hiongkaihan"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"hiongkaihan"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"hiongkaihan"},"content":""},{"lineNumber":5,"author":{"gitId":"hiongkaihan"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"hiongkaihan"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"hiongkaihan"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"hiongkaihan"},"content":"    // Returns status icon"},{"lineNumber":10,"author":{"gitId":"hiongkaihan"},"content":"    public String getStatusIcon() {"},{"lineNumber":11,"author":{"gitId":"hiongkaihan"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":12,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"hiongkaihan"},"content":"    // Marks task as done"},{"lineNumber":14,"author":{"gitId":"hiongkaihan"},"content":"    public void markAsDone() {"},{"lineNumber":15,"author":{"gitId":"hiongkaihan"},"content":"        this.isDone \u003d true;"},{"lineNumber":16,"author":{"gitId":"hiongkaihan"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"hiongkaihan"},"content":"}"}],"authorContributionMap":{"hiongkaihan":17}}]
