[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"Duke is a todo-list for managing all of your tasks using the Command Line Interface (CLI)."},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"* [Quick Start](#quick-start)"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"* [Features](#features)"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    + [1. help](#1-help)"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    + [2. todo](#2-todo)"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    + [3. deadline](#3-deadline)"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    + [4. event](#4-event)"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    + [5. list](#5-list)"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    + [6. delete](#6-delete)"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    + [7. done](#7-done)"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    + [8. find](#8-find)"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    + [9. bye](#9-bye)"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"* [Command Summary](#command-summary)"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"## Quick Start"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"1. Ensure that you have java *11* installed in your computer"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"2. Download duke.jar and place it in a convenient folder"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"3. Navigate to the folder in command prompt and run it with \u0027java -Dfile.encoding\u003dUTF-8 -jar duke.jar\u0027"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"4. Type \u0027help\u0027 to see the list of commands for Duke"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"Duke can help you with the following:"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"* `help`: Provides a list of commands and how to use them"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"* `todo`: Adds a basic todo to your list"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"* `deadline`: Adds a deadline to your list"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"* `event`: Adds an event to your list"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"* `list`: Shows the list of all your current tasks"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"* `delete`: Deletes a task in your list"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"* `done`: Marks a task in your list as done"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"* `find`: Finds a task in your list according to keywords"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"* `bye`: Ends the application"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"### 1. `help`"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"Prints out a list of all available commands and their formats"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"#### Usage"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"Format: `help`"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"### 2. `todo`"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"Add a todo to the list of tasks "},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"#### Usage"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"Format: `todo [task description]`"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"### 3. `deadline`"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"Add a deadline to the list of tasks"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"#### Usage"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"Format: `deadline [deadline description] /by [time]`"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"### 4. `event`"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"Add an event to the list of tasks"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"#### Usage"},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"Format: `event [event description] /at [time]`"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":"### 5. `list`"},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"Prints out the list of all the tasks"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":"#### Usage"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"Format: `list`"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"### 6. `delete`"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":"Deletes an existing task, removing it from the list of tasks"},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":71,"author":{"gitId":"Chiamjiaen"},"content":"#### Usage"},{"lineNumber":72,"author":{"gitId":"Chiamjiaen"},"content":"Format: `delete [task number]`"},{"lineNumber":73,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":74,"author":{"gitId":"Chiamjiaen"},"content":"### 7. `done`"},{"lineNumber":75,"author":{"gitId":"Chiamjiaen"},"content":"Marks an existing task in the list as done"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"Chiamjiaen"},"content":"#### Usage"},{"lineNumber":78,"author":{"gitId":"Chiamjiaen"},"content":"Format: `done [task number]`"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"Chiamjiaen"},"content":"### 8. `find`"},{"lineNumber":81,"author":{"gitId":"Chiamjiaen"},"content":"Prints out existing tasks in the list that contain keywords and phrases inputted by the user"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"Chiamjiaen"},"content":"#### Usage"},{"lineNumber":84,"author":{"gitId":"Chiamjiaen"},"content":"Format: `find [keyword or phrase]`"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"Chiamjiaen"},"content":"### 9. `bye`"},{"lineNumber":87,"author":{"gitId":"Chiamjiaen"},"content":"Exits the application"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"Chiamjiaen"},"content":"#### Usage"},{"lineNumber":90,"author":{"gitId":"Chiamjiaen"},"content":"Format: `bye`"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"Chiamjiaen"},"content":"## Command Summary"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"Chiamjiaen"},"content":" Command | Format | Example"},{"lineNumber":95,"author":{"gitId":"Chiamjiaen"},"content":"------- | ---------- | ------------"},{"lineNumber":96,"author":{"gitId":"Chiamjiaen"},"content":" help | `help` | -"},{"lineNumber":97,"author":{"gitId":"Chiamjiaen"},"content":" todo | `todo [task description]` | `todo do chores`"},{"lineNumber":98,"author":{"gitId":"Chiamjiaen"},"content":" deadline | `deadline [deadline description] /by [time]` | `deadline finish IP /by Thursday 2359`"},{"lineNumber":99,"author":{"gitId":"Chiamjiaen"},"content":" event | `event [event description] /at [time]` | `event Hackathon /at March 4th`"},{"lineNumber":100,"author":{"gitId":"Chiamjiaen"},"content":" list | `list` | -"},{"lineNumber":101,"author":{"gitId":"Chiamjiaen"},"content":" delete | `delete [task number]` | `delete 1`"},{"lineNumber":102,"author":{"gitId":"Chiamjiaen"},"content":" done | `done [task number]` | `done 1`"},{"lineNumber":103,"author":{"gitId":"Chiamjiaen"},"content":" find | `find [keyword or phrase]` | `find do chores`"},{"lineNumber":104,"author":{"gitId":"Chiamjiaen"},"content":" bye | `bye` | -"}],"authorContributionMap":{"Chiamjiaen":93,"-":11}},{"path":"src/main/java/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":" * Contains methods for adding a deadline"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"public class AddDeadlineCommand extends Command{"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    private String messageToBeProcessed;"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"     * Constructs a command for adding a deadline"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"     * @param messageToBeProcessed user input"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    public AddDeadlineCommand(String messageToBeProcessed) {"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        this.messageToBeProcessed \u003d messageToBeProcessed;"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"     * Call the addDeadline method"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"     * @param tasks instantiation of ArrayList of Tasks"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"     * @param ui Ui instantiation"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"     * @param storage Storage instantiation"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        tasks.addDeadline(tasks, ui, storage, messageToBeProcessed);"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"     * Command does not exit the loop"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"     * @return whether to exit the loop"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"        return false;"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":37}},{"path":"src/main/java/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":" * Contains methods for adding a event"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"public class AddEventCommand extends Command{"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    private String messageToBeProcessed;"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"     * Constructs a command for adding an event"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"     * @param messageToBeProcessed user input"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    public AddEventCommand(String messageToBeProcessed) {"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        this.messageToBeProcessed \u003d messageToBeProcessed;"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"     * Call the addEvent method"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"     * @param tasks instantiation of ArrayList of Tasks"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"     * @param ui Ui instantiation"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"     * @param storage Storage instantiation"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        tasks.addEvent(tasks, ui, storage, messageToBeProcessed);"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"     * Command does not exit the loop"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"     * @return whether to exit the loop"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"        return false;"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":37}},{"path":"src/main/java/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":" * Contains methods for adding a task"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"public class AddTodoCommand extends Command{"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    private String messageToBeProcessed;"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"     * Constructs a command for adding a task"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"     * @param messageToBeProcessed user input"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    public AddTodoCommand(String messageToBeProcessed) {"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        this.messageToBeProcessed \u003d messageToBeProcessed;"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"     * Call the addTasks method"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"     * @param tasks instantiation of ArrayList of Tasks"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"     * @param ui Ui instantiation"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"     * @param storage Storage instantiation"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        tasks.addTask(tasks, ui, storage, messageToBeProcessed);"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"     * Command does not exit the loop"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"     * @return whether to exit the loop"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"        return false;"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":37}},{"path":"src/main/java/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":" * Contains methods for changing the exit status"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"public class ByeCommand extends Command{"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"     * Constructs a blank instantiation of command that does not take inputs"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    public ByeCommand() {"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"     * Blank initiation of a command class"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"     * @param tasks instantiation of ArrayList of Tasks"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"     * @param ui Ui instantiation"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"     * @param storage Storage instantiation"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"     * Command exits the loop"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"     * @return whether to exit the loop"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"        return true;"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":32}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":" * Contains basic information for a command structure"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"public abstract class Command {"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"     * Constructs an empty instantiation of this class"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    public Command() {"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"     * Format for constructing a command"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"     * @param tasks instantiation of ArrayList of Tasks"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"     * @param ui Ui instantiation"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"     * @param storage Storage instantiation"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"     * Format for method to exiting the loop"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"     * @return whether to exit the loop"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    public abstract boolean isExit();"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":27}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":" * Representation for a deadline"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"public class Deadline extends Task{"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    protected String by;"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"     * Instantiates a deadline"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"     * @param description deadline description"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"     * @param by time the deadline is due."},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"        this.by \u003d by;"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"     * Returns a formatted deadline for user to view"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"     * @return formatted deadline string"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"        return \"[D]\" + super.getDescription() + \" (by: \" + by + \")\";"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"     * Returns a formatted deadline for saving"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"     * @return formatted deadline string"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"    public String toSaveFormat() { return (super.toSaveFormat() + \" | \" + by); }"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":36}},{"path":"src/main/java/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":" * Contains methods for deleting a task"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"public class DeleteTaskCommand extends Command{"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    private int indexToBeProcessed;"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"     * Constructs a command for deleting a task"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"     * @param indexToBeProcessed user input"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    public DeleteTaskCommand(int indexToBeProcessed) {"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        this.indexToBeProcessed \u003d indexToBeProcessed;"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"     * Calls the deleteTask method"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"     * @param tasks instantiation of ArrayList of Tasks"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"     * @param ui Ui instantiation"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"     * @param storage Storage instantiation"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        tasks.deleteTask(tasks, ui, storage, indexToBeProcessed);"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"     * Command does not exit the loop"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"     * @return whether to exit the loop"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"        return false;"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":37}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":" * Runs the Duke program"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    private Storage storage;"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    private TaskList tasks;"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    private Ui ui;"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    static final String FILE_PATH \u003d \"data/saveTaskList.txt\";"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"     * Instantiates an instance for running duke"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"     * @param filePath location of file relative to program"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    public Duke(String filePath) {"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"        ui \u003d new Ui();"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (DukeException e) {"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"            ui.showLoadingError();"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"            //creates new task list if failure to load from folder."},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"     * Logic for the main loop that processes information"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"    public void run() {"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"        ui.showWelcome();"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"        boolean isExit \u003d false;"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"        while (!isExit) {"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"            try {"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"                ui.showLine(); // show the divider line (\"_______\")"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"                c.execute(tasks, ui, storage);"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"                if (isExit) {"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"                    ui.showGoodbye();"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"                }"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"                ui.showLine();"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"            } catch (NullPointerException e) {"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"                //Command C can return as null if an error is triggered in parser"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"                //Null Pointer Exception may hence occur, the catch statement is to ensure it does not exit the loop."},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"        storage.store(tasks);"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"     * Calls for the running of a new Duke instance"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"     * @param args Runtime arguments are unused"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"        new Duke(FILE_PATH).run();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":""}],"authorContributionMap":{"Chiamjiaen":57,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":" * Contains errors that duke may encounter during runtime"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"public class DukeException extends Exception{"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    protected String error;"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"     * Instantiates this exception"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"     * @param error error type"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    public DukeException(String error){"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"        this.error \u003d error;"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"     * Shows the error encountered by the user"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"     * @param input error type"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"    public void getError(String input) {"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"        switch (error) {"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"            case \"done\":"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"                System.out.println(\"OOPS! I need the command to be in the right format! \\n\" +"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Try \\\"done [(integer) task number]\\\" \\n\" +"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Please make sure you do not include any brackets [ or ] in your input! \\n\" +"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Also make sure that the task number is actually accounted for in the list! \");"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"                break;"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"            case \"todo\":"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"                System.out.println(\"OOPS! I need the command to be in the right format! \\n\" +"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Try \\\"todo [description]\\\" \\n\" +"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Please make sure you do not include any brackets [ or ] in your input!\");"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"                break;"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"            case \"deadline\":"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"                System.out.println(\"OOPS! I need the command to be in the right format! \\n\" +"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Try \\\"deadline [description] /by [time]\\\" \\n\" +"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Please make sure you do not include any brackets [ or ] in your input!\");"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"                break;"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"            case \"event\":"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"                System.out.println(\"OOPS! I need the command to be in the right format! \\n\" +"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Try \\\"event [description] /at [time]\\\" \\n\" +"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Please make sure you do not include any brackets [ or ] in your input!\");"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"                break;"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"            case \"delete\":"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"                System.out.println(\"OOPS! I need the command to be in the right format! \\n\" +"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Try \\\"delete [(integer) task number]\\\" \\n\" +"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Please make sure you do not include any brackets [ or ] in your input! \\n\" +"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Also make sure that the task number is actually accounted for in the list! \");"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"                break;"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"            case \"loadFile\":"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"                System.out.println(\"OOPS! The file format is wrong! It may have been corrupted! \\n\" +"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Please delete the file \\\"data/saveTaskList.txt\\\" to try making another file! \");"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"            default:"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"                System.out.println(\"OOPS! Your command may not be valid! \\n\" +"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Please check the list of available commands using \\\"help\\\"\");"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"                break;"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":60}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":" * Representation for an event"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"public class Event extends Task{"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"    protected String at;"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"     * Instantiates an event"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"     * @param description event description"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"     * @param at time the event is on."},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    public Event(String description, String at) {"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"        this.at \u003d at;"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"     * Returns a formatted event for user to view"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"     * @return formatted event string"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        return \"[E]\" + super.getDescription() + \" (at: \" + at + \")\";"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"     * Returns a formatted event for saving"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"     * @return formatted event string"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"    public String toSaveFormat() { return (super.toSaveFormat() + \" | \" + at); }"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":35}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":" * Contains methods for finding a task"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"public class FindCommand extends Command{"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    private String messageToBeProcessed;"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"     * Constructs a command for finding a task"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"     * @param messageToBeProcessed user input"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    public FindCommand(String messageToBeProcessed) {"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        this.messageToBeProcessed \u003d messageToBeProcessed;"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"     * Calls the findTasks method"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"     * @param tasks instantiation of ArrayList of Tasks"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"     * @param ui Ui instantiation"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"     * @param storage Storage instantiation"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        tasks.findTasks(messageToBeProcessed);"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"     * Command does not exit the loop"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"     * @return whether to exit the loop"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"        return false;"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":37}},{"path":"src/main/java/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"public class List {"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"    private ArrayList\u003cTask\u003e TaskList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    public void addTaskFromSave(String inputTask) {"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"        Task userTask \u003d new Task(inputTask.trim());"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"        TaskList.add(userTask);"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    public void addDeadlineFromSave(String description, String date) {"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        Deadline deadline \u003d new Deadline(description.trim(), date.trim());"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"        TaskList.add(deadline);"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    public void addEventFromSave(String desciptiion, String date) {"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"        Event event \u003d new Event(desciptiion.trim(), date.trim());"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"        TaskList.add(event);"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"    public void addTask(String inputTask) {"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"        Task userTask \u003d new Task(inputTask);"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"        TaskList.add(userTask);"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        taskAddedMessage(userTask);"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"    public void addDeadline(String inputDeadline) {"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"        String[] deadlineTokens \u003d inputDeadline.split(\"/by\", 2);"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"        Deadline deadline \u003d new Deadline(deadlineTokens[0].trim(), deadlineTokens[1].trim());"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"        TaskList.add(deadline);"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"        taskAddedMessage(deadline);"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"    public void addEvent(String inputEvent) {"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"        String[] eventTokens \u003d inputEvent.split(\"/at\", 2);"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"        Event event \u003d new Event(eventTokens[0].trim(), eventTokens[1].trim());"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"        TaskList.add(event);"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"        taskAddedMessage(event);"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"    public void printList() {"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"        if (TaskList.size() \u003d\u003d 0) {"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"whoops nothing to see here\");"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"            return;"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Here are the tasks in your list: \");"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"        for (int i \u003d 0; i \u003c TaskList.size(); i++) {"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println( i+1 + \". \" + TaskList.get(i).toString());"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"    public void markDone(int index) {"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"        TaskList.get(index-1).markAsDone();"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(TaskList.get(index-1).toString());"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"    public void deleteTask(int index) {"},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"        Task toBeDeleted \u003d TaskList.get(index-1);"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":"        TaskList.remove(index-1);"},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(toBeDeleted.toString());"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Now you have \" + TaskList.size() + \" tasks in the list\");"},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"    public void markDoneFromSave(int index) {"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"        TaskList.get(index-1).markAsDone();"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":71,"author":{"gitId":"Chiamjiaen"},"content":"    private void taskAddedMessage(Task inputTask) {"},{"lineNumber":72,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + inputTask.toString());"},{"lineNumber":73,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Now you have \" + TaskList.size() + \" tasks in the list\");"},{"lineNumber":74,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":76,"author":{"gitId":"Chiamjiaen"},"content":"    public String taskType(int index) {"},{"lineNumber":77,"author":{"gitId":"Chiamjiaen"},"content":"        String[] taskView \u003d TaskList.get(index).toString().split(\"]\");"},{"lineNumber":78,"author":{"gitId":"Chiamjiaen"},"content":"        String simpletype \u003d taskView[0];"},{"lineNumber":79,"author":{"gitId":"Chiamjiaen"},"content":"        String isDone \u003d taskView[1];"},{"lineNumber":80,"author":{"gitId":"Chiamjiaen"},"content":"        String formattedDesc \u003d taskView[2];"},{"lineNumber":81,"author":{"gitId":"Chiamjiaen"},"content":"        String[] taskFormat \u003d new String[3];"},{"lineNumber":82,"author":{"gitId":"Chiamjiaen"},"content":"        if (simpletype.contains(\"E\")) {"},{"lineNumber":83,"author":{"gitId":"Chiamjiaen"},"content":"            taskFormat[0] \u003d \"event\";"},{"lineNumber":84,"author":{"gitId":"Chiamjiaen"},"content":"        } else if (simpletype.contains(\"D\")) {"},{"lineNumber":85,"author":{"gitId":"Chiamjiaen"},"content":"            taskFormat[0] \u003d \"deadline\";"},{"lineNumber":86,"author":{"gitId":"Chiamjiaen"},"content":"        } else if (simpletype.contains(\"T\")) {"},{"lineNumber":87,"author":{"gitId":"Chiamjiaen"},"content":"            taskFormat[0] \u003d \"todo\";"},{"lineNumber":88,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"Chiamjiaen"},"content":"        if (isDone.contains(\"\\u2713\")) {"},{"lineNumber":90,"author":{"gitId":"Chiamjiaen"},"content":"            taskFormat[1] \u003d \"1\";"},{"lineNumber":91,"author":{"gitId":"Chiamjiaen"},"content":"        } else {"},{"lineNumber":92,"author":{"gitId":"Chiamjiaen"},"content":"            taskFormat[1] \u003d \"0\";"},{"lineNumber":93,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"Chiamjiaen"},"content":"        if (taskFormat[0].equals(\"todo\")) {"},{"lineNumber":95,"author":{"gitId":"Chiamjiaen"},"content":"            taskFormat[2] \u003d formattedDesc;"},{"lineNumber":96,"author":{"gitId":"Chiamjiaen"},"content":"        } else if (taskFormat[0].equals(\"deadline\") || taskFormat[0].equals(\"event\")) {"},{"lineNumber":97,"author":{"gitId":"Chiamjiaen"},"content":"            taskFormat[2] \u003d TaskList.get(index).toSaveFormat();"},{"lineNumber":98,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"Chiamjiaen"},"content":"        return (taskFormat[0] + \" | \" + taskFormat[1] + \" | \" + taskFormat[2]);"},{"lineNumber":100,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":101}},{"path":"src/main/java/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":" * Contains methods for listing tasks"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"public class ListTasksCommand extends Command{"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"     * Constructs a blank instantiation of command that does not take inputs"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    public ListTasksCommand() {"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"     * Calls the printList method"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"     * @param tasks instantiation of ArrayList of Tasks"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"     * @param ui Ui instantiation"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"     * @param storage Storage instantiation"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"        tasks.printList();"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"     * Command does not exit the loop"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"     * @return whether to exit the loop"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"        return false;"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":33}},{"path":"src/main/java/MarkAsDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":" * Contains methods for marking tasks as done"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"public class MarkAsDoneCommand extends Command{"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    private int indexToBeProcessed;"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"     * Constructs a command for marking a task as done"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"     * @param indexToBeProcessed user input"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    public MarkAsDoneCommand(int indexToBeProcessed) {"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        this.indexToBeProcessed \u003d indexToBeProcessed;"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"     * Calls the markDone method"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"     * @param tasks instantiation of ArrayList of Tasks"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"     * @param ui Ui instantiation"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"     * @param storage Storage instantiation"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        tasks.markDone(tasks, ui, storage, indexToBeProcessed);"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"     * Command does not exit the loop"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"     * @return whether to exit the loop"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"        return false;"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":37}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":" * Public class \"Parser\" parses the user input to be used in other functions"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"     * Checks the number of tokens and throws an exception based on the command"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"     * @param numberOfTokens number of tokens in the string"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"     * @param command interpreted command from the user to be used in error finding"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"     * @throws DukeException exception based on command"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    public static void lengthCheck(int numberOfTokens, String command) throws DukeException {"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"        if (numberOfTokens \u003c 2) {"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"            throw new DukeException(command);"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"     * Interprets the user\u0027s input and creates a command following the interpretation."},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"     * @param fullCommand users input"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"     * @return Command"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"    public static Command parse(String fullCommand) {"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"        // breaks the string into two sections."},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"        String[] stringTokens \u003d fullCommand.trim().split(\" \", 2);"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"        int numberOfTokens \u003d stringTokens.length;"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"        String command \u003d stringTokens[0];"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"        Command c \u003d null;"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"            switch (command) {"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"                case \"list\":"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"                    c \u003d new ListTasksCommand();"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"                    break;"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"                case \"done\":"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"                    lengthCheck(numberOfTokens, command);"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"                    c \u003d new MarkAsDoneCommand(Integer.parseInt(stringTokens[1].trim()));"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"                    break;"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"                case \"todo\":"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"                    lengthCheck(numberOfTokens, command);"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"                    c \u003d new AddTodoCommand(stringTokens[1].trim());"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"                    break;"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"                case \"event\":"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"                    lengthCheck(numberOfTokens, command);"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"                    c \u003d new AddEventCommand(stringTokens[1].trim());"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"                    break;"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"                case \"deadline\":"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"                    lengthCheck(numberOfTokens, command);"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"                    c \u003d new AddDeadlineCommand(stringTokens[1].trim());"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"                    break;"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"                case \"delete\":"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"                    lengthCheck(numberOfTokens, command);"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"                    c \u003d new DeleteTaskCommand(Integer.parseInt(stringTokens[1].trim()));"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"                    break;"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"                case \"find\":"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"                    lengthCheck(numberOfTokens, command);"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"                    c \u003d new FindCommand(stringTokens[1].trim());"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"                    break;"},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"                case \"help\":"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":"                    c \u003d new ShowHelpCommand();"},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":"                    break;"},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"                case \"bye\":"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":"                    c \u003d new ByeCommand();"},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":"                    break;"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"                default:"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"                    Ui.unrecognizedCommandMessage();"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"                    break;"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":71,"author":{"gitId":"Chiamjiaen"},"content":"            Ui.invalidFormatMessage();"},{"lineNumber":72,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (DukeException e) {"},{"lineNumber":73,"author":{"gitId":"Chiamjiaen"},"content":"            e.getError(command);"},{"lineNumber":74,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"Chiamjiaen"},"content":"        return c;"},{"lineNumber":76,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"Chiamjiaen"},"content":"}"},{"lineNumber":78,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":79,"author":{"gitId":"Chiamjiaen"},"content":""}],"authorContributionMap":{"Chiamjiaen":79}},{"path":"src/main/java/ShowHelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":" * Contains method for showing help message"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"public class ShowHelpCommand extends Command{"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"     * Constructs a blank instantiation of command that does not take inputs"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    public ShowHelpCommand() {"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"     * Calls the showHelp method"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"     * @param tasks instantiation of ArrayList of Tasks"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"     * @param ui Ui instantiation"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"     * @param storage Storage instantiation"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"        ui.showHelp();"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"     * Command does not exit the loop"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"     * @return whether to exit the loop"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"        return false;"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":33}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"import java.io.FileWriter;"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":" * Contains methods for loading and saving files"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"public class Storage {"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    static File saveFile;"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    static String filePath;"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"     * Instantiates a storage handler by taking in the filepath"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"     * @param filePath the filepath where the file will be created"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"    public Storage(String filePath) {"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"        saveFile \u003d new File(filePath);"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"        Storage.filePath \u003d filePath;"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"     * Checks if the file exists and initializes one if there is not."},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"    public void fileInit() {"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"            //makes file directory if it doesnt exist in the system."},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"            if (!(saveFile.exists())) {"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"                saveFile.getParentFile().mkdirs();"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"                saveFile.createNewFile();"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (IOException e) {"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! I can\u0027t create the directory or file!\");"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"     * Loads the saved list of tasks from save location"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"     * @return Populated task arraylist"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"     * @throws DukeException if there is an error in loading"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"        fileInit();"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"            // initializing file scanner to scan the file"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"            Scanner fileScanner \u003d new Scanner(saveFile);"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"            while (fileScanner.hasNext()) {"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"                String currentScan \u003d fileScanner.nextLine();"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"                //splits the string into sections for storing in the ArrayList"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"                String[] taskSave \u003d currentScan.trim().split(\" \\\\| \");"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"                switch (taskSave[0].trim()) {"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"                    case \"todo\":"},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"                        if (taskSave.length !\u003d 3) {"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":"                            throw new DukeException(\"loadFile\");"},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":"                        }"},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"                        Task tempTask \u003d new Task(taskSave[2]);"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":"                        tempTask.setIsDone(taskSave[1].trim());"},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":"                        tasks.add(tempTask);"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"                        break;"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"                    case \"deadline\":"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"                        if (taskSave.length !\u003d 4) {"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":"                            throw new DukeException(\"loadFile\");"},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":"                        }"},{"lineNumber":71,"author":{"gitId":"Chiamjiaen"},"content":"                        Deadline tempDeadline \u003d new Deadline(taskSave[2], taskSave[3]);"},{"lineNumber":72,"author":{"gitId":"Chiamjiaen"},"content":"                        tempDeadline.setIsDone(taskSave[1].trim());"},{"lineNumber":73,"author":{"gitId":"Chiamjiaen"},"content":"                        tasks.add(tempDeadline);"},{"lineNumber":74,"author":{"gitId":"Chiamjiaen"},"content":"                        break;"},{"lineNumber":75,"author":{"gitId":"Chiamjiaen"},"content":"                    case \"event\":"},{"lineNumber":76,"author":{"gitId":"Chiamjiaen"},"content":"                        if (taskSave.length !\u003d 4) {"},{"lineNumber":77,"author":{"gitId":"Chiamjiaen"},"content":"                            throw new DukeException(\"loadFile\");"},{"lineNumber":78,"author":{"gitId":"Chiamjiaen"},"content":"                        }"},{"lineNumber":79,"author":{"gitId":"Chiamjiaen"},"content":"                        Event tempEvent \u003d new Event(taskSave[2], taskSave[3]);"},{"lineNumber":80,"author":{"gitId":"Chiamjiaen"},"content":"                        tempEvent.setIsDone(taskSave[1].trim());"},{"lineNumber":81,"author":{"gitId":"Chiamjiaen"},"content":"                        tasks.add(tempEvent);"},{"lineNumber":82,"author":{"gitId":"Chiamjiaen"},"content":"                        break;"},{"lineNumber":83,"author":{"gitId":"Chiamjiaen"},"content":"                }"},{"lineNumber":84,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":86,"author":{"gitId":"Chiamjiaen"},"content":"            throw new DukeException(\"OOPS! I can\u0027t read the save file!\");"},{"lineNumber":87,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (DukeException e) {"},{"lineNumber":88,"author":{"gitId":"Chiamjiaen"},"content":"            e.getError(\"loadFile\");"},{"lineNumber":89,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"Chiamjiaen"},"content":"        return tasks;"},{"lineNumber":91,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":93,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"Chiamjiaen"},"content":"     * Saves all tasks to text file"},{"lineNumber":95,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"Chiamjiaen"},"content":"     * @param saveInput current files to be stored"},{"lineNumber":97,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"Chiamjiaen"},"content":"    public void store(TaskList saveInput) {"},{"lineNumber":99,"author":{"gitId":"Chiamjiaen"},"content":"        fileInit();"},{"lineNumber":100,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":101,"author":{"gitId":"Chiamjiaen"},"content":"            //creates a new file writer to write to text file"},{"lineNumber":102,"author":{"gitId":"Chiamjiaen"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);"},{"lineNumber":103,"author":{"gitId":"Chiamjiaen"},"content":"            for (int i \u003d 0; i \u003c saveInput.getSize(); i++) {"},{"lineNumber":104,"author":{"gitId":"Chiamjiaen"},"content":"                fileWriter.write(saveInput.toSaveFile(i) + \"\\n\");"},{"lineNumber":105,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"Chiamjiaen"},"content":"            fileWriter.close();"},{"lineNumber":107,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (java.io.IOException e) {"},{"lineNumber":108,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"☹ OOPS!!! The file can\u0027t be saved :-(\");"},{"lineNumber":109,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":111}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":" * Superclass for the other task types"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"     * Constructs an instantiation of a task"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"     * @param description description for a task"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    public Task (String description) {"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"        this.isDone \u003d false;"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"     * Returns a formatted string for a task"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"     * @return formatted task string"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        return (\"[T][\" + getStatusIcon() + \"] \" + description);"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"     * Returns the description for a task"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"     * @return task description"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"    public String getDescription() {"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"        return (\"[\" + getStatusIcon() + \"] \" + description);"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"     * Returns the completion status of a task"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"     * @return Tick or Cross symbol"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"    public String getStatusIcon() {"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"     * Marks a task as done"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"    public void markAsDone() {"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"        isDone \u003d true;"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"     * Sets the completion status of a task from save"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"     * @param isDone whether a task is done"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"    public void setIsDone(String isDone) {"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"        this.isDone \u003d isDone.equals(\"1\");"},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"     * returns formatted description for saving"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":"     * @return description of task"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"    public String toSaveFormat() {"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"        return (description);"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":70}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":" * Holds the task list and functions for modification of list and tasks."},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"     * Instantiates a TaskList to take the values from storage load"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"     * @param load tasks from storage load"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    public TaskList(ArrayList\u003cTask\u003e load) {"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"        this.tasks \u003d load;"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"     * Instantiates a new TaskList"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"    public TaskList() {"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"     * Adds a task to the list"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"     * @param tasks TaskList instantiation"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"     * @param ui Ui instantiation"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"     * @param storage Storage instantiation"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"     * @param inputTask user parsed string input"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"    public void addTask(TaskList tasks, Ui ui, Storage storage, String inputTask) {"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"        Task userTask \u003d new Task(inputTask);"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"        this.tasks.add(userTask);"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"        Ui.taskAddedMessage(userTask, tasks.getSize());"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"     * Adds a deadline to the list"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"     * @param tasks TaskList instantiation"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"     * @param ui Ui instantiation"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"     * @param storage Storage instantiation"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"     * @param inputDeadline user parsed string input"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"    public void addDeadline(TaskList tasks, Ui ui, Storage storage, String inputDeadline) {"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"        //splits the string into description and time"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"        String[] deadlineTokens \u003d inputDeadline.split(\"/by\", 2);"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"            // if the tokens to not match the required amount, throw error"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"            if (deadlineTokens.length \u003d\u003d 1) {"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"                throw new DukeException(\"deadline\");"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"            Deadline deadline \u003d new Deadline(deadlineTokens[0].trim(), deadlineTokens[1].trim());"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"            this.tasks.add(deadline);"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"            Ui.taskAddedMessage(deadline, tasks.getSize());"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (DukeException e) {"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"            e.getError(\"deadline\");"},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":"     * Adds an event to the list"},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"     * @param tasks TaskList instantiation"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"     * @param ui Ui instantiation"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"     * @param storage Storage instantiation"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":"     * @param inputEvent user parsed string input"},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"Chiamjiaen"},"content":"    public void addEvent(TaskList tasks, Ui ui, Storage storage, String inputEvent) {"},{"lineNumber":72,"author":{"gitId":"Chiamjiaen"},"content":"        //splits the string into description and time"},{"lineNumber":73,"author":{"gitId":"Chiamjiaen"},"content":"        String[] eventTokens \u003d inputEvent.split(\"/at\", 2);"},{"lineNumber":74,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":75,"author":{"gitId":"Chiamjiaen"},"content":"            // if the tokens to not match the required amount, throw error"},{"lineNumber":76,"author":{"gitId":"Chiamjiaen"},"content":"            if (eventTokens.length \u003d\u003d 1) {"},{"lineNumber":77,"author":{"gitId":"Chiamjiaen"},"content":"                throw new DukeException(\"event\");"},{"lineNumber":78,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"Chiamjiaen"},"content":"            Event event \u003d new Event(eventTokens[0].trim(), eventTokens[1].trim());"},{"lineNumber":80,"author":{"gitId":"Chiamjiaen"},"content":"            this.tasks.add(event);"},{"lineNumber":81,"author":{"gitId":"Chiamjiaen"},"content":"            Ui.taskAddedMessage(event, tasks.getSize());"},{"lineNumber":82,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (DukeException e) {"},{"lineNumber":83,"author":{"gitId":"Chiamjiaen"},"content":"            e.getError(\"event\");"},{"lineNumber":84,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":87,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"Chiamjiaen"},"content":"     * prints the contents of the list"},{"lineNumber":89,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"Chiamjiaen"},"content":"    public void printList() {"},{"lineNumber":91,"author":{"gitId":"Chiamjiaen"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":92,"author":{"gitId":"Chiamjiaen"},"content":"            Ui.emptyListMessage();"},{"lineNumber":93,"author":{"gitId":"Chiamjiaen"},"content":"        } else {"},{"lineNumber":94,"author":{"gitId":"Chiamjiaen"},"content":"            Ui.notEmptyListMessage();"},{"lineNumber":95,"author":{"gitId":"Chiamjiaen"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":96,"author":{"gitId":"Chiamjiaen"},"content":"                Ui.printListItems(i, tasks.get(i).toString());"},{"lineNumber":97,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":101,"author":{"gitId":"Chiamjiaen"},"content":"    public void findTasks(String stringToFind) {"},{"lineNumber":102,"author":{"gitId":"Chiamjiaen"},"content":"        boolean tasksFound \u003d false;"},{"lineNumber":103,"author":{"gitId":"Chiamjiaen"},"content":"        Ui.foundListMessage();"},{"lineNumber":104,"author":{"gitId":"Chiamjiaen"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":105,"author":{"gitId":"Chiamjiaen"},"content":"            String description \u003d TaskList.tasks.get(i).getDescription();"},{"lineNumber":106,"author":{"gitId":"Chiamjiaen"},"content":"            if (description.contains(stringToFind)) {"},{"lineNumber":107,"author":{"gitId":"Chiamjiaen"},"content":"                Ui.foundTasks(i+1, TaskList.tasks.get(i).toString());"},{"lineNumber":108,"author":{"gitId":"Chiamjiaen"},"content":"                tasksFound \u003d true;"},{"lineNumber":109,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"Chiamjiaen"},"content":"        if (!tasksFound) {"},{"lineNumber":112,"author":{"gitId":"Chiamjiaen"},"content":"            Ui.noMatchingTasks();"},{"lineNumber":113,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":116,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"Chiamjiaen"},"content":"     * Marks a task as done"},{"lineNumber":118,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"Chiamjiaen"},"content":"     * @param tasks TaskList instantiation"},{"lineNumber":120,"author":{"gitId":"Chiamjiaen"},"content":"     * @param ui Ui instantiation"},{"lineNumber":121,"author":{"gitId":"Chiamjiaen"},"content":"     * @param storage Storage instantiation"},{"lineNumber":122,"author":{"gitId":"Chiamjiaen"},"content":"     * @param index user parsed integer input"},{"lineNumber":123,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":124,"author":{"gitId":"Chiamjiaen"},"content":"    public void markDone(TaskList tasks, Ui ui, Storage storage, int index) {"},{"lineNumber":125,"author":{"gitId":"Chiamjiaen"},"content":"        // location of the task will be at -1 since array is 0 based index"},{"lineNumber":126,"author":{"gitId":"Chiamjiaen"},"content":"        int taskNumber \u003d index-1;"},{"lineNumber":127,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":128,"author":{"gitId":"Chiamjiaen"},"content":"            // checks if the task exists"},{"lineNumber":129,"author":{"gitId":"Chiamjiaen"},"content":"            if (index \u003c\u003d 0 || index \u003e tasks.getSize()) {"},{"lineNumber":130,"author":{"gitId":"Chiamjiaen"},"content":"                throw new DukeException(\"done\");"},{"lineNumber":131,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":132,"author":{"gitId":"Chiamjiaen"},"content":"            this.tasks.get(taskNumber).markAsDone();"},{"lineNumber":133,"author":{"gitId":"Chiamjiaen"},"content":"            Ui.markAsDoneMessage(this.tasks.get(taskNumber).toString());"},{"lineNumber":134,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (DukeException e) {"},{"lineNumber":135,"author":{"gitId":"Chiamjiaen"},"content":"            e.getError(\"done\");"},{"lineNumber":136,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":139,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"Chiamjiaen"},"content":"     * Deletes a task"},{"lineNumber":141,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":142,"author":{"gitId":"Chiamjiaen"},"content":"     * @param tasks TaskList instantiation"},{"lineNumber":143,"author":{"gitId":"Chiamjiaen"},"content":"     * @param ui Ui instantiation"},{"lineNumber":144,"author":{"gitId":"Chiamjiaen"},"content":"     * @param storage Storage instantiation"},{"lineNumber":145,"author":{"gitId":"Chiamjiaen"},"content":"     * @param index user parsed integer input"},{"lineNumber":146,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":147,"author":{"gitId":"Chiamjiaen"},"content":"    public void deleteTask(TaskList tasks, Ui ui, Storage storage, int index) {"},{"lineNumber":148,"author":{"gitId":"Chiamjiaen"},"content":"        // location of the task will be at -1 since array is 0 based index"},{"lineNumber":149,"author":{"gitId":"Chiamjiaen"},"content":"        int taskNumber \u003d index-1;"},{"lineNumber":150,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":151,"author":{"gitId":"Chiamjiaen"},"content":"            // checks if the task exists"},{"lineNumber":152,"author":{"gitId":"Chiamjiaen"},"content":"            if (index \u003c\u003d 0 || index \u003e tasks.getSize()) {"},{"lineNumber":153,"author":{"gitId":"Chiamjiaen"},"content":"                throw new DukeException(\"delete\");"},{"lineNumber":154,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"Chiamjiaen"},"content":"            Task toBeDeleted \u003d this.tasks.get(taskNumber);"},{"lineNumber":156,"author":{"gitId":"Chiamjiaen"},"content":"            this.tasks.remove(taskNumber);"},{"lineNumber":157,"author":{"gitId":"Chiamjiaen"},"content":"            Ui.deleteTaskMessage(toBeDeleted.toString(), index);"},{"lineNumber":158,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (DukeException e) {"},{"lineNumber":159,"author":{"gitId":"Chiamjiaen"},"content":"            e.getError(\"delete\");"},{"lineNumber":160,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":163,"author":{"gitId":"Chiamjiaen"},"content":"    public int getSize() {"},{"lineNumber":164,"author":{"gitId":"Chiamjiaen"},"content":"        return tasks.size();"},{"lineNumber":165,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":167,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":168,"author":{"gitId":"Chiamjiaen"},"content":"     * Takes the header for each task and returns the task type"},{"lineNumber":169,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":170,"author":{"gitId":"Chiamjiaen"},"content":"     * @param simpleType the header for each task"},{"lineNumber":171,"author":{"gitId":"Chiamjiaen"},"content":"     * @return type of task"},{"lineNumber":172,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":173,"author":{"gitId":"Chiamjiaen"},"content":"    public String formatType(String simpleType){"},{"lineNumber":174,"author":{"gitId":"Chiamjiaen"},"content":"        String taskType \u003d null;"},{"lineNumber":175,"author":{"gitId":"Chiamjiaen"},"content":"        if (simpleType.contains(\"E\")) {"},{"lineNumber":176,"author":{"gitId":"Chiamjiaen"},"content":"            taskType \u003d \"event\";"},{"lineNumber":177,"author":{"gitId":"Chiamjiaen"},"content":"        } else if (simpleType.contains(\"D\")) {"},{"lineNumber":178,"author":{"gitId":"Chiamjiaen"},"content":"            taskType \u003d \"deadline\";"},{"lineNumber":179,"author":{"gitId":"Chiamjiaen"},"content":"        } else if (simpleType.contains(\"T\")) {"},{"lineNumber":180,"author":{"gitId":"Chiamjiaen"},"content":"            taskType \u003d \"todo\";"},{"lineNumber":181,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"Chiamjiaen"},"content":"        return taskType;"},{"lineNumber":183,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":185,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":186,"author":{"gitId":"Chiamjiaen"},"content":"     * formats the task done to save file requirements"},{"lineNumber":187,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":188,"author":{"gitId":"Chiamjiaen"},"content":"     * @param isDone the status of whether the task is done"},{"lineNumber":189,"author":{"gitId":"Chiamjiaen"},"content":"     * @return desired true/false format for saving"},{"lineNumber":190,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":191,"author":{"gitId":"Chiamjiaen"},"content":"    public String formatIsDone(String isDone) {"},{"lineNumber":192,"author":{"gitId":"Chiamjiaen"},"content":"        return (isDone.contains(\"\\u2713\") ? \"1\" : \"0\");"},{"lineNumber":193,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":195,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":196,"author":{"gitId":"Chiamjiaen"},"content":"     * returns the description formatted for saving"},{"lineNumber":197,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":198,"author":{"gitId":"Chiamjiaen"},"content":"     * @param index the index of the task in the list"},{"lineNumber":199,"author":{"gitId":"Chiamjiaen"},"content":"     * @return the formatted description and time"},{"lineNumber":200,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":201,"author":{"gitId":"Chiamjiaen"},"content":"    public String formatDescription(int index) {"},{"lineNumber":202,"author":{"gitId":"Chiamjiaen"},"content":"        return (tasks.get(index).toSaveFormat());"},{"lineNumber":203,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":205,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":206,"author":{"gitId":"Chiamjiaen"},"content":"     * formats the tasks in the task list for saving purposes"},{"lineNumber":207,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":208,"author":{"gitId":"Chiamjiaen"},"content":"     * @param index of the current task being saved"},{"lineNumber":209,"author":{"gitId":"Chiamjiaen"},"content":"     * @return formatted tasks for saving"},{"lineNumber":210,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":211,"author":{"gitId":"Chiamjiaen"},"content":"    public String toSaveFile(int index) {"},{"lineNumber":212,"author":{"gitId":"Chiamjiaen"},"content":"        //gets the string from tasks and splits it into tokens"},{"lineNumber":213,"author":{"gitId":"Chiamjiaen"},"content":"        String[] taskView \u003d tasks.get(index).toString().split(\"]\");"},{"lineNumber":214,"author":{"gitId":"Chiamjiaen"},"content":"        //first token is the type of task ie, todo, deadline, event"},{"lineNumber":215,"author":{"gitId":"Chiamjiaen"},"content":"        String simpleType \u003d taskView[0];"},{"lineNumber":216,"author":{"gitId":"Chiamjiaen"},"content":"        //second token is whether the task is done"},{"lineNumber":217,"author":{"gitId":"Chiamjiaen"},"content":"        String isDone \u003d taskView[1];"},{"lineNumber":218,"author":{"gitId":"Chiamjiaen"},"content":"        String[] taskFormat \u003d new String[3];"},{"lineNumber":219,"author":{"gitId":"Chiamjiaen"},"content":"        //processing each section of the string to be returned"},{"lineNumber":220,"author":{"gitId":"Chiamjiaen"},"content":"        taskFormat[0] \u003d formatType(simpleType);"},{"lineNumber":221,"author":{"gitId":"Chiamjiaen"},"content":"        taskFormat[1] \u003d formatIsDone(isDone);"},{"lineNumber":222,"author":{"gitId":"Chiamjiaen"},"content":"        taskFormat[2] \u003d formatDescription(index);"},{"lineNumber":223,"author":{"gitId":"Chiamjiaen"},"content":"        return (taskFormat[0] + \" | \" + taskFormat[1] + \" | \" + taskFormat[2]);"},{"lineNumber":224,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":225,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":225}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":" * Contains all the methods for user interaction"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    static Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    static String LINEBREAK \u003d \"____________________________________________________________\\n\";"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    static String LOGO \u003d \"Hello from\\n\""},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"            + \" ____        _        \\n\""},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    static String GREETING \u003d  \" Hello! I\u0027m Duke\\n\""},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"            + \" What can I do for you?\\n\";"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    static String GOODBYE \u003d \"Bye, Hope to see you again soon!\\n\";"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    static String TYPEHELP \u003d \"Type \\\"help\\\" to see the list of commands!\\n\";"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"     * Prints a message for when the command is unrecognized"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    public static void unrecognizedCommandMessage() {"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"OOPS! I cant recognize that command! \" + TYPEHELP);"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"     * Prints a message for when the command is improperly formatted"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"    public static void invalidFormatMessage() {"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"OOPS! Please check to see if your command is properly formatted! \" + TYPEHELP);"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"     * Prints a message for when the task has been successfully added"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"     * @param inputTask task to be added"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"     * @param listSize current size of the task list"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"    public static void taskAddedMessage(Task inputTask, int listSize) {"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + inputTask.toString());"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Now you have \" + listSize + \" tasks in the list\");"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"     * Prints a message for when the list is empty"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"    public static void emptyListMessage() {"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"OOPS! Looks like you have nothing in your list!\");"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"     * Prints a message for when the list is not empty"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"    public static void notEmptyListMessage() {"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Here are the tasks in your list!\");"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":"     * Prints an item in the list"},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"     * @param i current index of item being printed"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":"     * @param toString the task to be printed"},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"    public static void printListItems(int i, String toString) {"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(i + 1 + \". \" + toString);"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"Chiamjiaen"},"content":"     * Prints a message for when a task is marked done"},{"lineNumber":72,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"Chiamjiaen"},"content":"     * @param toString task that has been marked as done"},{"lineNumber":74,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"Chiamjiaen"},"content":"    public static void markAsDoneMessage(String toString) {"},{"lineNumber":76,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + toString);"},{"lineNumber":77,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":79,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"Chiamjiaen"},"content":"     * Prints a message for when a task has been deleted"},{"lineNumber":81,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"Chiamjiaen"},"content":"     * @param toString deleted task"},{"lineNumber":83,"author":{"gitId":"Chiamjiaen"},"content":"     * @param index current size of the task list"},{"lineNumber":84,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"Chiamjiaen"},"content":"    public static void deleteTaskMessage(String toString, int index) {"},{"lineNumber":86,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + toString);"},{"lineNumber":87,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Now you have \" + index + \" tasks in the list\");"},{"lineNumber":88,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":90,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"Chiamjiaen"},"content":"     * Prints list of commands for duke"},{"lineNumber":92,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"Chiamjiaen"},"content":"    public void showHelp() {"},{"lineNumber":94,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Here are the list of available commands: \");"},{"lineNumber":95,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"help\\\": Brings up this menu!\");"},{"lineNumber":96,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"todo [action]\\\": adds a todo to the list!\");"},{"lineNumber":97,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"deadline [action] /by [time]\\\": adds a deadline to the list!\");"},{"lineNumber":98,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"event [action] /at [time]\\\": adds an event to the list!\");"},{"lineNumber":99,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"list\\\": Brings up the list of all the items you stored!\");"},{"lineNumber":100,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"delete [index in list]\\\": deletes an items from the list!\");"},{"lineNumber":101,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"done [index in list]\\\": marks a task in your list as done!\");"},{"lineNumber":102,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"find [keyword to find]\\\": finds a keyword or phrase in your list!\");"},{"lineNumber":103,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"bye\\\": exits duke\");"},{"lineNumber":104,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Duke ONLY saves when you EXIT the program!\");"},{"lineNumber":105,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":107,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"Chiamjiaen"},"content":"     * Prints message for when there is loading errors"},{"lineNumber":109,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"Chiamjiaen"},"content":"    public void showLoadingError() {"},{"lineNumber":111,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"OOPS! There was an error loading the file!\");"},{"lineNumber":112,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":114,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"Chiamjiaen"},"content":"     * Prints a welcome message"},{"lineNumber":116,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"Chiamjiaen"},"content":"    public void showWelcome() {"},{"lineNumber":118,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(LOGO);"},{"lineNumber":119,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(LINEBREAK + GREETING + LINEBREAK);"},{"lineNumber":120,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":122,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"Chiamjiaen"},"content":"     * Prints a goodbye message"},{"lineNumber":124,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"Chiamjiaen"},"content":"    public void showGoodbye() {"},{"lineNumber":126,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(GOODBYE);"},{"lineNumber":127,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":129,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"Chiamjiaen"},"content":"     * Reads in the user command from the command line interface"},{"lineNumber":131,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":132,"author":{"gitId":"Chiamjiaen"},"content":"     * @return user input string"},{"lineNumber":133,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"Chiamjiaen"},"content":"    public String readCommand() {"},{"lineNumber":135,"author":{"gitId":"Chiamjiaen"},"content":"        String input \u003d scanner.nextLine().trim();"},{"lineNumber":136,"author":{"gitId":"Chiamjiaen"},"content":"        return input;"},{"lineNumber":137,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":139,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"Chiamjiaen"},"content":"     * Prints a line in the output"},{"lineNumber":141,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"Chiamjiaen"},"content":"    public void showLine() {"},{"lineNumber":143,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.print(LINEBREAK);"},{"lineNumber":144,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":146,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"Chiamjiaen"},"content":"     * Prints a message for items found in the list"},{"lineNumber":148,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"Chiamjiaen"},"content":"    public static void foundListMessage() {"},{"lineNumber":150,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":151,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":153,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":154,"author":{"gitId":"Chiamjiaen"},"content":"     * Prints out individual tasks that have been found"},{"lineNumber":155,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":156,"author":{"gitId":"Chiamjiaen"},"content":"     * @param i index of current task printed"},{"lineNumber":157,"author":{"gitId":"Chiamjiaen"},"content":"     * @param toString current task being printed"},{"lineNumber":158,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"Chiamjiaen"},"content":"    public static void foundTasks(int i, String toString) {"},{"lineNumber":160,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(i + \".\" + toString);"},{"lineNumber":161,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":163,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":164,"author":{"gitId":"Chiamjiaen"},"content":"     * Prints a message for if no items are found"},{"lineNumber":165,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":166,"author":{"gitId":"Chiamjiaen"},"content":"    public static void noMatchingTasks() {"},{"lineNumber":167,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"OOPS! Looks like there are no matching tasks!\");"},{"lineNumber":168,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":169}}]
