[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"# Bob project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"1. After that, locate the `src/main/java/Bob.java` file, right-click it, and choose `Run Bob.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"sarzorwyn":2,"-":24}},{"path":"src/main/java/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"import Task.Deadline;"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"import Task.Event;"},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":"import Task.Todo;"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.FileAlreadyExistsException;"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.Files;"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.Path;"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.Paths;"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"public class Bob {"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"    public static final String LINE_STRING \u003d \"____________________________________________________________\\n\";"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"    public static final String DATA_DELIMITER \u003d \" @_@ \";"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"    public static final String DATA_DIRECTORY \u003d \"data\";"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"    public static final String SAVE_FILE_NAME \u003d \"duke.txt\";"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"    public static final String DIRECTORY_HOME \u003d System.getProperty(\"user.home\");"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"    public static TaskList taskList \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"    public static void main(String[] args) {"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"        welcomeMessage();"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"        loadFile();"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"        scanInput();"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"        goodbyeMessage();"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"    private static void welcomeMessage() {"},{"lineNumber":30,"author":{"gitId":"sarzorwyn"},"content":"        String welcome \u003d LINE_STRING +"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"                \" Hello! I\u0027m Bob 😀\\n\" +"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"                \" If you need anything hit me up fam 😌\\n\" +"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"                LINE_STRING;"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"        System.out.print(welcome);"},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"    private static void loadFile() {"},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":"        createDataDirectory();"},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"        openFile();"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":42,"author":{"gitId":"sarzorwyn"},"content":"    private static void createDataDirectory() {"},{"lineNumber":43,"author":{"gitId":"sarzorwyn"},"content":"        Path path \u003d Paths.get(DIRECTORY_HOME, \"data\");"},{"lineNumber":44,"author":{"gitId":"sarzorwyn"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"sarzorwyn"},"content":"            Files.createDirectory(path);"},{"lineNumber":46,"author":{"gitId":"sarzorwyn"},"content":"        } catch (IOException e) {"},{"lineNumber":47,"author":{"gitId":"sarzorwyn"},"content":"            // printIOException(); TODO: figure out why IO Exception is triggered here"},{"lineNumber":48,"author":{"gitId":"sarzorwyn"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":51,"author":{"gitId":"sarzorwyn"},"content":"    private static void openFile() {"},{"lineNumber":52,"author":{"gitId":"sarzorwyn"},"content":"        Path path \u003d Paths.get(DIRECTORY_HOME, DATA_DIRECTORY, SAVE_FILE_NAME);"},{"lineNumber":53,"author":{"gitId":"sarzorwyn"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"sarzorwyn"},"content":"            Files.createFile(path);"},{"lineNumber":55,"author":{"gitId":"sarzorwyn"},"content":"        } catch (FileAlreadyExistsException  e) {"},{"lineNumber":56,"author":{"gitId":"sarzorwyn"},"content":"            loadDataFile(path);"},{"lineNumber":57,"author":{"gitId":"sarzorwyn"},"content":"        } catch (IOException e) {"},{"lineNumber":58,"author":{"gitId":"sarzorwyn"},"content":"            printIOException();"},{"lineNumber":59,"author":{"gitId":"sarzorwyn"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":62,"author":{"gitId":"sarzorwyn"},"content":"    private static void loadDataFile(Path path) {"},{"lineNumber":63,"author":{"gitId":"sarzorwyn"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"sarzorwyn"},"content":"            List\u003cString\u003e taskStrings \u003d Files.readAllLines(path);"},{"lineNumber":65,"author":{"gitId":"sarzorwyn"},"content":"            for (String taskString: taskStrings) {"},{"lineNumber":66,"author":{"gitId":"sarzorwyn"},"content":"                loadTask(taskString);"},{"lineNumber":67,"author":{"gitId":"sarzorwyn"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"sarzorwyn"},"content":"        } catch (IOException e) {"},{"lineNumber":69,"author":{"gitId":"sarzorwyn"},"content":"            printIOException();"},{"lineNumber":70,"author":{"gitId":"sarzorwyn"},"content":"        } catch (NoSuchMethodException e) {"},{"lineNumber":71,"author":{"gitId":"sarzorwyn"},"content":"            printNoSuchMethod();"},{"lineNumber":72,"author":{"gitId":"sarzorwyn"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":73,"author":{"gitId":"sarzorwyn"},"content":"            printNumberFormatException();"},{"lineNumber":74,"author":{"gitId":"sarzorwyn"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":77,"author":{"gitId":"sarzorwyn"},"content":"    private static void loadTask(String taskString) throws NoSuchMethodException, NumberFormatException{"},{"lineNumber":78,"author":{"gitId":"sarzorwyn"},"content":"        String[] taskStringArray \u003d taskString.split(DATA_DELIMITER);"},{"lineNumber":79,"author":{"gitId":"sarzorwyn"},"content":"        Command command \u003d getCommandType(taskStringArray[0]);"},{"lineNumber":80,"author":{"gitId":"sarzorwyn"},"content":"        boolean isDone \u003d Integer.parseInt(taskStringArray[1]) \u003d\u003d 1;"},{"lineNumber":81,"author":{"gitId":"sarzorwyn"},"content":"        String label \u003d taskStringArray[2];"},{"lineNumber":82,"author":{"gitId":"sarzorwyn"},"content":"        String time \u003d taskStringArray[3];"},{"lineNumber":83,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":84,"author":{"gitId":"sarzorwyn"},"content":"        switch (command) {"},{"lineNumber":85,"author":{"gitId":"sarzorwyn"},"content":"        case TODO:"},{"lineNumber":86,"author":{"gitId":"sarzorwyn"},"content":"            taskList.addToList(new Todo(label),false);"},{"lineNumber":87,"author":{"gitId":"sarzorwyn"},"content":"            break;"},{"lineNumber":88,"author":{"gitId":"sarzorwyn"},"content":"        case DEADLINE:"},{"lineNumber":89,"author":{"gitId":"sarzorwyn"},"content":"            taskList.addToList(new Deadline(label, time),false);"},{"lineNumber":90,"author":{"gitId":"sarzorwyn"},"content":"            break;"},{"lineNumber":91,"author":{"gitId":"sarzorwyn"},"content":"        case EVENT:"},{"lineNumber":92,"author":{"gitId":"sarzorwyn"},"content":"            taskList.addToList(new Event(label, time),false);"},{"lineNumber":93,"author":{"gitId":"sarzorwyn"},"content":"            break;"},{"lineNumber":94,"author":{"gitId":"sarzorwyn"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":96,"author":{"gitId":"sarzorwyn"},"content":"        if (isDone) {"},{"lineNumber":97,"author":{"gitId":"sarzorwyn"},"content":"            taskList.completeTask(taskList.getSize(), false);"},{"lineNumber":98,"author":{"gitId":"sarzorwyn"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":101,"author":{"gitId":"sarzorwyn"},"content":"    private static void saveData() {"},{"lineNumber":102,"author":{"gitId":"sarzorwyn"},"content":"        Path path \u003d Paths.get(DIRECTORY_HOME, DATA_DIRECTORY, SAVE_FILE_NAME);"},{"lineNumber":103,"author":{"gitId":"sarzorwyn"},"content":"        try {"},{"lineNumber":104,"author":{"gitId":"sarzorwyn"},"content":"            Files.deleteIfExists(path);"},{"lineNumber":105,"author":{"gitId":"sarzorwyn"},"content":"            Files.createFile(path);"},{"lineNumber":106,"author":{"gitId":"sarzorwyn"},"content":"            List\u003cString\u003e taskStrings \u003d taskList.saveTaskList();"},{"lineNumber":107,"author":{"gitId":"sarzorwyn"},"content":"            Files.write(path, taskStrings);"},{"lineNumber":108,"author":{"gitId":"sarzorwyn"},"content":"        } catch (IOException e) {"},{"lineNumber":109,"author":{"gitId":"sarzorwyn"},"content":"            printIOException();"},{"lineNumber":110,"author":{"gitId":"sarzorwyn"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":113,"author":{"gitId":"sarzorwyn"},"content":"    private static void scanInput() {"},{"lineNumber":114,"author":{"gitId":"sarzorwyn"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":115,"author":{"gitId":"sarzorwyn"},"content":"        scanLoop(in);"},{"lineNumber":116,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":118,"author":{"gitId":"sarzorwyn"},"content":"    private static void goodbyeMessage() {"},{"lineNumber":119,"author":{"gitId":"sarzorwyn"},"content":"        String goodbye \u003d LINE_STRING + \" Chao 👌\\n\" + LINE_STRING;"},{"lineNumber":120,"author":{"gitId":"sarzorwyn"},"content":"        System.out.print(goodbye);"},{"lineNumber":121,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":123,"author":{"gitId":"sarzorwyn"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"sarzorwyn"},"content":"     * Scanner loop until bye command"},{"lineNumber":125,"author":{"gitId":"sarzorwyn"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"sarzorwyn"},"content":"    private static void scanLoop(Scanner in) {"},{"lineNumber":127,"author":{"gitId":"sarzorwyn"},"content":"        boolean isScanning \u003d true;"},{"lineNumber":128,"author":{"gitId":"sarzorwyn"},"content":"        String inputString;"},{"lineNumber":129,"author":{"gitId":"sarzorwyn"},"content":"        Command commandType \u003d null;"},{"lineNumber":130,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":131,"author":{"gitId":"sarzorwyn"},"content":"        while (isScanning) {"},{"lineNumber":132,"author":{"gitId":"sarzorwyn"},"content":"            try {"},{"lineNumber":133,"author":{"gitId":"sarzorwyn"},"content":"                inputString \u003d in.nextLine();"},{"lineNumber":134,"author":{"gitId":"sarzorwyn"},"content":"                commandType \u003d getCommandType(inputString);"},{"lineNumber":135,"author":{"gitId":"sarzorwyn"},"content":"                isScanning \u003d scanSwitch(inputString, commandType);"},{"lineNumber":136,"author":{"gitId":"sarzorwyn"},"content":"                saveData();"},{"lineNumber":137,"author":{"gitId":"sarzorwyn"},"content":"            } catch (java.util.InputMismatchException e) {"},{"lineNumber":138,"author":{"gitId":"sarzorwyn"},"content":"                printInputMismatch();"},{"lineNumber":139,"author":{"gitId":"sarzorwyn"},"content":"            } catch (NoSuchMethodException  e) {"},{"lineNumber":140,"author":{"gitId":"sarzorwyn"},"content":"                printNoSuchMethod();"},{"lineNumber":141,"author":{"gitId":"sarzorwyn"},"content":"            } catch (NoCommandLabelException e) {"},{"lineNumber":142,"author":{"gitId":"sarzorwyn"},"content":"                printNoCommandLabel(commandType);"},{"lineNumber":143,"author":{"gitId":"sarzorwyn"},"content":"            } catch (NoCommandFormatException e) {"},{"lineNumber":144,"author":{"gitId":"sarzorwyn"},"content":"                printNoCommandFormat(commandType);"},{"lineNumber":145,"author":{"gitId":"sarzorwyn"},"content":"            }"},{"lineNumber":146,"author":{"gitId":"sarzorwyn"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":149,"author":{"gitId":"sarzorwyn"},"content":"    private static void printNumberFormatException() {"},{"lineNumber":150,"author":{"gitId":"sarzorwyn"},"content":"        String exceptionMessage \u003d LINE_STRING +"},{"lineNumber":151,"author":{"gitId":"sarzorwyn"},"content":"                \" 😥 Number format exception encountered! Input may be corrupted\\n\" +"},{"lineNumber":152,"author":{"gitId":"sarzorwyn"},"content":"                LINE_STRING;"},{"lineNumber":153,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(exceptionMessage);"},{"lineNumber":154,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":156,"author":{"gitId":"sarzorwyn"},"content":"    private static void printIOException() {"},{"lineNumber":157,"author":{"gitId":"sarzorwyn"},"content":"        String exceptionMessage \u003d LINE_STRING +"},{"lineNumber":158,"author":{"gitId":"sarzorwyn"},"content":"                \" 😥 IO issue encountered! Unable to read file\\n\" +"},{"lineNumber":159,"author":{"gitId":"sarzorwyn"},"content":"                LINE_STRING;"},{"lineNumber":160,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(exceptionMessage);"},{"lineNumber":161,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":163,"author":{"gitId":"sarzorwyn"},"content":"    private static void printInputMismatch() {"},{"lineNumber":164,"author":{"gitId":"sarzorwyn"},"content":"        String exceptionMessage \u003d LINE_STRING +"},{"lineNumber":165,"author":{"gitId":"sarzorwyn"},"content":"                \" 😥 There is some issue with getting you input\\n\" +"},{"lineNumber":166,"author":{"gitId":"sarzorwyn"},"content":"                LINE_STRING;"},{"lineNumber":167,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(exceptionMessage);"},{"lineNumber":168,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":170,"author":{"gitId":"sarzorwyn"},"content":"    private static void printNoSuchMethod() {"},{"lineNumber":171,"author":{"gitId":"sarzorwyn"},"content":"        String exceptionMessage \u003d LINE_STRING +"},{"lineNumber":172,"author":{"gitId":"sarzorwyn"},"content":"                \" 😥 I don\u0027t quite get what the command means\\n\" +"},{"lineNumber":173,"author":{"gitId":"sarzorwyn"},"content":"                LINE_STRING;"},{"lineNumber":174,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(exceptionMessage);"},{"lineNumber":175,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":177,"author":{"gitId":"sarzorwyn"},"content":"    private static void printNoCommandLabel(Command commandType) {"},{"lineNumber":178,"author":{"gitId":"sarzorwyn"},"content":"        String commandName \u003d commandType.name().toLowerCase();"},{"lineNumber":179,"author":{"gitId":"sarzorwyn"},"content":"        String exceptionMessage \u003d LINE_STRING +"},{"lineNumber":180,"author":{"gitId":"sarzorwyn"},"content":"                \" 😥 You gotta tell me what is the task for \" + commandName + \"\\n\" +"},{"lineNumber":181,"author":{"gitId":"sarzorwyn"},"content":"                LINE_STRING;"},{"lineNumber":182,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(exceptionMessage);"},{"lineNumber":183,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":185,"author":{"gitId":"sarzorwyn"},"content":"    private static void printNoCommandFormat(Command commandType) {"},{"lineNumber":186,"author":{"gitId":"sarzorwyn"},"content":"        String commandName \u003d commandType.name().toLowerCase();"},{"lineNumber":187,"author":{"gitId":"sarzorwyn"},"content":"        String exceptionMessage \u003d LINE_STRING +"},{"lineNumber":188,"author":{"gitId":"sarzorwyn"},"content":"                \" 😥 You gotta use the time marker for \" + commandName + \"\\n\" +"},{"lineNumber":189,"author":{"gitId":"sarzorwyn"},"content":"                \"and the time which it happens\\n\" +"},{"lineNumber":190,"author":{"gitId":"sarzorwyn"},"content":"                LINE_STRING;"},{"lineNumber":191,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(exceptionMessage);"},{"lineNumber":192,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":194,"author":{"gitId":"sarzorwyn"},"content":"    /**"},{"lineNumber":195,"author":{"gitId":"sarzorwyn"},"content":"     * String before first space taken as command rest as args"},{"lineNumber":196,"author":{"gitId":"sarzorwyn"},"content":"     */"},{"lineNumber":197,"author":{"gitId":"sarzorwyn"},"content":"    private static boolean scanSwitch(String inputString, Command commandType) throws NoSuchMethodException, NoCommandLabelException, NoCommandFormatException {"},{"lineNumber":198,"author":{"gitId":"sarzorwyn"},"content":"        String[] inputStringArr \u003d inputString.split(\" \");"},{"lineNumber":199,"author":{"gitId":"sarzorwyn"},"content":"        boolean isScanning \u003d true;"},{"lineNumber":200,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":201,"author":{"gitId":"sarzorwyn"},"content":"        switch (commandType) {"},{"lineNumber":202,"author":{"gitId":"sarzorwyn"},"content":"        case LIST:"},{"lineNumber":203,"author":{"gitId":"sarzorwyn"},"content":"            taskList.printList();"},{"lineNumber":204,"author":{"gitId":"sarzorwyn"},"content":"            break;"},{"lineNumber":205,"author":{"gitId":"sarzorwyn"},"content":"        case DONE:"},{"lineNumber":206,"author":{"gitId":"sarzorwyn"},"content":"            taskList.completeTask(inputStringArr[1]);"},{"lineNumber":207,"author":{"gitId":"sarzorwyn"},"content":"            break;"},{"lineNumber":208,"author":{"gitId":"sarzorwyn"},"content":"        case DELETE:"},{"lineNumber":209,"author":{"gitId":"sarzorwyn"},"content":"            taskList.deleteTask(inputStringArr[1]);"},{"lineNumber":210,"author":{"gitId":"sarzorwyn"},"content":"            break;"},{"lineNumber":211,"author":{"gitId":"sarzorwyn"},"content":"        case TODO:"},{"lineNumber":212,"author":{"gitId":"sarzorwyn"},"content":"            taskList.addTodo(inputString);"},{"lineNumber":213,"author":{"gitId":"sarzorwyn"},"content":"            break;"},{"lineNumber":214,"author":{"gitId":"sarzorwyn"},"content":"        case DEADLINE:"},{"lineNumber":215,"author":{"gitId":"sarzorwyn"},"content":"            taskList.addDeadline(inputString);"},{"lineNumber":216,"author":{"gitId":"sarzorwyn"},"content":"            break;"},{"lineNumber":217,"author":{"gitId":"sarzorwyn"},"content":"        case EVENT:"},{"lineNumber":218,"author":{"gitId":"sarzorwyn"},"content":"            taskList.addEvent(inputString);"},{"lineNumber":219,"author":{"gitId":"sarzorwyn"},"content":"            break;"},{"lineNumber":220,"author":{"gitId":"sarzorwyn"},"content":"        case BYE:"},{"lineNumber":221,"author":{"gitId":"sarzorwyn"},"content":"            isScanning \u003d false;"},{"lineNumber":222,"author":{"gitId":"sarzorwyn"},"content":"            break;"},{"lineNumber":223,"author":{"gitId":"sarzorwyn"},"content":"        default:"},{"lineNumber":224,"author":{"gitId":"sarzorwyn"},"content":"            throw new NoSuchMethodException();"},{"lineNumber":225,"author":{"gitId":"sarzorwyn"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"sarzorwyn"},"content":"        return isScanning;"},{"lineNumber":227,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":229,"author":{"gitId":"sarzorwyn"},"content":"    /**"},{"lineNumber":230,"author":{"gitId":"sarzorwyn"},"content":"     * Takes a string and returns a enum Command"},{"lineNumber":231,"author":{"gitId":"sarzorwyn"},"content":"     * Treats an unknown command as regular task"},{"lineNumber":232,"author":{"gitId":"sarzorwyn"},"content":"     */"},{"lineNumber":233,"author":{"gitId":"sarzorwyn"},"content":"    private static Command getCommandType(String commandString) throws NoSuchMethodException{"},{"lineNumber":234,"author":{"gitId":"sarzorwyn"},"content":"        Command command;"},{"lineNumber":235,"author":{"gitId":"sarzorwyn"},"content":"        String[] inputStringArr \u003d commandString.split(\" \");"},{"lineNumber":236,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":237,"author":{"gitId":"sarzorwyn"},"content":"        switch (inputStringArr[0]) {"},{"lineNumber":238,"author":{"gitId":"sarzorwyn"},"content":"        case \"list\":"},{"lineNumber":239,"author":{"gitId":"sarzorwyn"},"content":"            command \u003d Command.LIST;"},{"lineNumber":240,"author":{"gitId":"sarzorwyn"},"content":"            break;"},{"lineNumber":241,"author":{"gitId":"sarzorwyn"},"content":"        case \"done\":"},{"lineNumber":242,"author":{"gitId":"sarzorwyn"},"content":"            command \u003d Command.DONE;"},{"lineNumber":243,"author":{"gitId":"sarzorwyn"},"content":"            break;"},{"lineNumber":244,"author":{"gitId":"sarzorwyn"},"content":"        case \"delete\":"},{"lineNumber":245,"author":{"gitId":"sarzorwyn"},"content":"            command \u003d Command.DELETE;"},{"lineNumber":246,"author":{"gitId":"sarzorwyn"},"content":"            break;"},{"lineNumber":247,"author":{"gitId":"sarzorwyn"},"content":"        case \"todo\":"},{"lineNumber":248,"author":{"gitId":"sarzorwyn"},"content":"            command \u003d Command.TODO;"},{"lineNumber":249,"author":{"gitId":"sarzorwyn"},"content":"            break;"},{"lineNumber":250,"author":{"gitId":"sarzorwyn"},"content":"        case \"deadline\":"},{"lineNumber":251,"author":{"gitId":"sarzorwyn"},"content":"            command \u003d Command.DEADLINE;"},{"lineNumber":252,"author":{"gitId":"sarzorwyn"},"content":"            break;"},{"lineNumber":253,"author":{"gitId":"sarzorwyn"},"content":"        case \"event\":"},{"lineNumber":254,"author":{"gitId":"sarzorwyn"},"content":"            command \u003d Command.EVENT;"},{"lineNumber":255,"author":{"gitId":"sarzorwyn"},"content":"            break;"},{"lineNumber":256,"author":{"gitId":"sarzorwyn"},"content":"        case \"bye\":"},{"lineNumber":257,"author":{"gitId":"sarzorwyn"},"content":"            command \u003d Command.BYE;"},{"lineNumber":258,"author":{"gitId":"sarzorwyn"},"content":"            break;"},{"lineNumber":259,"author":{"gitId":"sarzorwyn"},"content":"        default:"},{"lineNumber":260,"author":{"gitId":"sarzorwyn"},"content":"            throw new NoSuchMethodException();"},{"lineNumber":261,"author":{"gitId":"sarzorwyn"},"content":"        }"},{"lineNumber":262,"author":{"gitId":"sarzorwyn"},"content":"        return command;"},{"lineNumber":263,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":264,"author":{"gitId":"sarzorwyn"},"content":"}"}],"authorContributionMap":{"sarzorwyn":264}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"public enum Command {"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"    LIST, DONE, DELETE, TODO, DEADLINE, EVENT, BYE"},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":"}"}],"authorContributionMap":{"sarzorwyn":3}},{"path":"src/main/java/NoCommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"public class NoCommandFormatException extends Exception {"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"}"}],"authorContributionMap":{"sarzorwyn":2}},{"path":"src/main/java/NoCommandLabelException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"public class NoCommandLabelException extends Exception {"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"}"}],"authorContributionMap":{"sarzorwyn":2}},{"path":"src/main/java/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package Task;"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":"public class Deadline extends Task{"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"    protected String dueTime;"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"    public Deadline(String label, String dueTime) {"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"        super(label);"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"        this.dueTime \u003d dueTime;"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"    public String getTime() {"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"        return dueTime;"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"    public String getTypeString() {"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"        return \"[D]\";"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"        return super.toString() + \" (by: \" + dueTime + \")\";"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"}"}],"authorContributionMap":{"sarzorwyn":25}},{"path":"src/main/java/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package Task;"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":"public class Event extends Task{"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"    protected String startTime;"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"    public Event(String label, String startTime) {"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"        super(label);"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"    public String getTime() {"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"        return startTime;"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"    public String getTypeString() {"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"        return \"[E]\";"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"        return super.toString() + \" (at: \" + startTime + \")\";"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"}"}],"authorContributionMap":{"sarzorwyn":25}},{"path":"src/main/java/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package Task;"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"    protected static final String DATA_DELIMITER \u003d \" @_@ \";"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"    protected String label;"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"    public Task(String label) {"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"        this.label \u003d label;"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"    public boolean isDone() {"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"        return isDone;"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"    public String getLabel() {"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"        return label;"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"    public String getTime() {"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"        return \" \";"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"    /*"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"     * Converts a task to the file data format"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"    public String formatSaveTask() {"},{"lineNumber":30,"author":{"gitId":"sarzorwyn"},"content":"        String taskType \u003d this.getClass().getSimpleName().toLowerCase();"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"        String isDone \u003d this.isDone() ? \"1\" : \"0\";"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"        String label \u003d this.getLabel();"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"        String time \u003d this.getTime();"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":"        return taskType + DATA_DELIMITER + isDone + DATA_DELIMITER + label + DATA_DELIMITER + time;"},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"        return getLabel();"},{"lineNumber":41,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":43,"author":{"gitId":"sarzorwyn"},"content":"    public void isDone(boolean done) {"},{"lineNumber":44,"author":{"gitId":"sarzorwyn"},"content":"        this.isDone \u003d done;"},{"lineNumber":45,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":47,"author":{"gitId":"sarzorwyn"},"content":"    // Returns a checkbox string depending on whether task is done"},{"lineNumber":48,"author":{"gitId":"sarzorwyn"},"content":"    public String getCheckbox() {"},{"lineNumber":49,"author":{"gitId":"sarzorwyn"},"content":"        return this.isDone() ? \"[✔]\":\"[❌]\";"},{"lineNumber":50,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":52,"author":{"gitId":"sarzorwyn"},"content":"    // Returns a string depending on type of Task.Task"},{"lineNumber":53,"author":{"gitId":"sarzorwyn"},"content":"    public String getTypeString() {"},{"lineNumber":54,"author":{"gitId":"sarzorwyn"},"content":"        return \"[ ]\";"},{"lineNumber":55,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"sarzorwyn"},"content":"}"}],"authorContributionMap":{"sarzorwyn":56}},{"path":"src/main/java/Task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package Task;"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":"public class Todo extends Task{"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"    public Todo(String label) {"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"        super(label);"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"    public String getTypeString() {"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"        return \"[T]\";"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"}"}],"authorContributionMap":{"sarzorwyn":12}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"import Task.Deadline;"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"import Task.Event;"},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":"import Task.Task;"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"import Task.Todo;"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"    protected static final String LINE_STRING \u003d \"____________________________________________________________\\n\";"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"    public TaskList() {"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"    public void addToList(Task newTask) {"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"        this.addToList(newTask,true);"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"    public void addToList(Task newTask, Boolean isPrinting) {"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"        tasks.add(newTask);"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"        if (isPrinting) {"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"            addToListMessage(tasks.size() - 1);"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":"    private void addToListMessage(int index) {"},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"        System.out.print(LINE_STRING);"},{"lineNumber":30,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(\"Say no more fam. The task is added:\\n  \" + this.getStatus(index));"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println((index + 1) + \" tasks in the list.\");"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(LINE_STRING);"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":"    public void printList() {"},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":"        System.out.print(LINE_STRING);"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":"            System.out.println((i+1) + \".\" + this.getStatus(i));"},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(LINE_STRING);"},{"lineNumber":41,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":43,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":44,"author":{"gitId":"sarzorwyn"},"content":"    private String getStatus(int index) {"},{"lineNumber":45,"author":{"gitId":"sarzorwyn"},"content":"        return tasks.get(index).getTypeString() + tasks.get(index).getCheckbox() +"},{"lineNumber":46,"author":{"gitId":"sarzorwyn"},"content":"                \" \" + tasks.get(index).toString();"},{"lineNumber":47,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":49,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":50,"author":{"gitId":"sarzorwyn"},"content":"    public int getSize() {"},{"lineNumber":51,"author":{"gitId":"sarzorwyn"},"content":"        return tasks.size();"},{"lineNumber":52,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":54,"author":{"gitId":"sarzorwyn"},"content":"    public void completeTask(String s) {"},{"lineNumber":55,"author":{"gitId":"sarzorwyn"},"content":"        completeTask(Integer.parseInt(s), true);"},{"lineNumber":56,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":58,"author":{"gitId":"sarzorwyn"},"content":"    public void completeTask(int number) {"},{"lineNumber":59,"author":{"gitId":"sarzorwyn"},"content":"        completeTask(number, true);"},{"lineNumber":60,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":62,"author":{"gitId":"sarzorwyn"},"content":"    public void completeTask(int number, boolean isPrinting) {"},{"lineNumber":63,"author":{"gitId":"sarzorwyn"},"content":"        int index \u003d number - 1; // adjust for the list label starting from 1"},{"lineNumber":64,"author":{"gitId":"sarzorwyn"},"content":"        tasks.get(index).isDone(true);"},{"lineNumber":65,"author":{"gitId":"sarzorwyn"},"content":"        if (isPrinting) {"},{"lineNumber":66,"author":{"gitId":"sarzorwyn"},"content":"            completeTaskMessage(index);"},{"lineNumber":67,"author":{"gitId":"sarzorwyn"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":70,"author":{"gitId":"sarzorwyn"},"content":"    private void completeTaskMessage(int index) {"},{"lineNumber":71,"author":{"gitId":"sarzorwyn"},"content":"        System.out.print(LINE_STRING);"},{"lineNumber":72,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(\"Task.Task marked as done, gg ez\");"},{"lineNumber":73,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(\"  \" + this.getStatus(index));"},{"lineNumber":74,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(LINE_STRING);"},{"lineNumber":75,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":77,"author":{"gitId":"sarzorwyn"},"content":"    public void deleteTask(String s) {"},{"lineNumber":78,"author":{"gitId":"sarzorwyn"},"content":"        deleteTask(Integer.parseInt(s));"},{"lineNumber":79,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":81,"author":{"gitId":"sarzorwyn"},"content":"    public void deleteTask(int i) {"},{"lineNumber":82,"author":{"gitId":"sarzorwyn"},"content":"        int index \u003d i - 1; // adjust for the list label starting from 1"},{"lineNumber":83,"author":{"gitId":"sarzorwyn"},"content":"        deleteTaskMessage(index);"},{"lineNumber":84,"author":{"gitId":"sarzorwyn"},"content":"        tasks.remove(index);"},{"lineNumber":85,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":87,"author":{"gitId":"sarzorwyn"},"content":"    private void deleteTaskMessage(int index) {"},{"lineNumber":88,"author":{"gitId":"sarzorwyn"},"content":"        System.out.print(LINE_STRING);"},{"lineNumber":89,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(\"You are a quitter 👎 Anyways, I removed this:\");"},{"lineNumber":90,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(\"  \" + this.getStatus(index));"},{"lineNumber":91,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println((tasks.size() - 1) + \" tasks left in the list.\");"},{"lineNumber":92,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(LINE_STRING);"},{"lineNumber":93,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":95,"author":{"gitId":"sarzorwyn"},"content":"    public void addTodo(String command) throws NoCommandLabelException {"},{"lineNumber":96,"author":{"gitId":"sarzorwyn"},"content":"        String commandType \u003d Command.TODO.name().toLowerCase();"},{"lineNumber":97,"author":{"gitId":"sarzorwyn"},"content":"        String label \u003d getLabel(command,commandType);"},{"lineNumber":98,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":99,"author":{"gitId":"sarzorwyn"},"content":"        addToList(new Todo(label));"},{"lineNumber":100,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":102,"author":{"gitId":"sarzorwyn"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"sarzorwyn"},"content":"     * Phrases command into label and startTime parts"},{"lineNumber":104,"author":{"gitId":"sarzorwyn"},"content":"     * Followed by creating event object"},{"lineNumber":105,"author":{"gitId":"sarzorwyn"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"sarzorwyn"},"content":"    public void addEvent(String command) throws NoCommandLabelException, NoCommandFormatException {"},{"lineNumber":107,"author":{"gitId":"sarzorwyn"},"content":"        final String TIME_MARKER \u003d \"/at\";"},{"lineNumber":108,"author":{"gitId":"sarzorwyn"},"content":"        String commandType \u003d Command.EVENT.name().toLowerCase();"},{"lineNumber":109,"author":{"gitId":"sarzorwyn"},"content":"        String[] commandArray \u003d command.split(TIME_MARKER);"},{"lineNumber":110,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":111,"author":{"gitId":"sarzorwyn"},"content":"        if (commandArray.length \u003c 2) {"},{"lineNumber":112,"author":{"gitId":"sarzorwyn"},"content":"            throw new NoCommandFormatException();"},{"lineNumber":113,"author":{"gitId":"sarzorwyn"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":115,"author":{"gitId":"sarzorwyn"},"content":"        String label \u003d getLabel(commandArray[0],commandType);"},{"lineNumber":116,"author":{"gitId":"sarzorwyn"},"content":"        String startTime \u003d commandArray[1].trim();"},{"lineNumber":117,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":118,"author":{"gitId":"sarzorwyn"},"content":"        addToList(new Event(label, startTime));"},{"lineNumber":119,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":121,"author":{"gitId":"sarzorwyn"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"sarzorwyn"},"content":"     * Phrases command into label and dueTime parts"},{"lineNumber":123,"author":{"gitId":"sarzorwyn"},"content":"     * Followed by creating Task.Deadline object"},{"lineNumber":124,"author":{"gitId":"sarzorwyn"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"sarzorwyn"},"content":"    public void addDeadline(String command) throws NoCommandLabelException, NoCommandFormatException {"},{"lineNumber":126,"author":{"gitId":"sarzorwyn"},"content":"        final String TIME_MARKER \u003d \"/by\";"},{"lineNumber":127,"author":{"gitId":"sarzorwyn"},"content":"        String commandType \u003d Command.DEADLINE.name().toLowerCase();"},{"lineNumber":128,"author":{"gitId":"sarzorwyn"},"content":"        String[] commandArray \u003d command.split(TIME_MARKER);"},{"lineNumber":129,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":130,"author":{"gitId":"sarzorwyn"},"content":"        if (commandArray.length \u003c 2) {"},{"lineNumber":131,"author":{"gitId":"sarzorwyn"},"content":"            throw new NoCommandFormatException();"},{"lineNumber":132,"author":{"gitId":"sarzorwyn"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":134,"author":{"gitId":"sarzorwyn"},"content":"        String label \u003d getLabel(commandArray[0],commandType);"},{"lineNumber":135,"author":{"gitId":"sarzorwyn"},"content":"        String dueTime \u003d commandArray[1].trim();"},{"lineNumber":136,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":137,"author":{"gitId":"sarzorwyn"},"content":"        addToList(new Deadline(label, dueTime));"},{"lineNumber":138,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":140,"author":{"gitId":"sarzorwyn"},"content":"    private static String getLabel(String string, String commandType) throws NoCommandLabelException {"},{"lineNumber":141,"author":{"gitId":"sarzorwyn"},"content":"        String label \u003d string.replaceFirst(commandType, \"\").trim();"},{"lineNumber":142,"author":{"gitId":"sarzorwyn"},"content":"        if (label.isEmpty()) {"},{"lineNumber":143,"author":{"gitId":"sarzorwyn"},"content":"            throw new NoCommandLabelException();"},{"lineNumber":144,"author":{"gitId":"sarzorwyn"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"sarzorwyn"},"content":"        return label;"},{"lineNumber":146,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":148,"author":{"gitId":"sarzorwyn"},"content":"    public List\u003cString\u003e saveTaskList() {"},{"lineNumber":149,"author":{"gitId":"sarzorwyn"},"content":"        List\u003cString\u003e taskStrings \u003d new ArrayList\u003c\u003e();"},{"lineNumber":150,"author":{"gitId":"sarzorwyn"},"content":"        for (Task task: tasks) {"},{"lineNumber":151,"author":{"gitId":"sarzorwyn"},"content":"            taskStrings.add(task.formatSaveTask());"},{"lineNumber":152,"author":{"gitId":"sarzorwyn"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"sarzorwyn"},"content":"        return taskStrings;"},{"lineNumber":154,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"sarzorwyn"},"content":"}"}],"authorContributionMap":{"sarzorwyn":155}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"java -classpath ..\\bin Bob \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"sarzorwyn":1,"-":20}}]
