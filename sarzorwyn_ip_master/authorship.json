[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"# Bob project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"1. After that, locate the `src/main/java/Bob.java` file, right-click it, and choose `Run Bob.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"sarzorwyn":10,"-":16}},{"path":"src/main/java/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"public class Bob {"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"    public static TaskList taskList \u003d new TaskList();"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"        String welcome \u003d \"____________________________________________________________\\n\" +"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"                \" Hello! I\u0027m Bob üòÄ\\n\" +"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"                \" If you need anything hit me up fam üòå\\n\";"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(welcome);"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"        // Scanner loop until bye command"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"        boolean isScanning \u003d true;"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"        while (isScanning) {"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"            String line \u003d in.nextLine();"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"            String[] inputArr \u003d line.split(\" \");"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"            // String before first space taken as command rest as args"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"            switch (inputArr[0]) {"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"            case \"list\":"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"                taskList.printList();"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"                break;"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"            case \"done\":"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"                taskList.completeTask(Integer.parseInt(inputArr[1]));"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"                break;"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":"            case \"bye\":"},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"                isScanning \u003d false;"},{"lineNumber":30,"author":{"gitId":"sarzorwyn"},"content":"                break;"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"            default:"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"                taskList.addToList(line);"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":"        String goodbye \u003d \"____________________________________________________________\\n\" +"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"                \" Chao üëå\\n\" +"},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":"                \"____________________________________________________________\";"},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(goodbye);"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"sarzorwyn"},"content":"}"}],"authorContributionMap":{"sarzorwyn":41}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"    private boolean done;"},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":"    private String label;"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"    public Task(String label) {"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"        this.done \u003d false;"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"        this.label \u003d label;"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"    public boolean isDone() {"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"        return done;"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"    public String getLabel() {"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"        return label;"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"    public void isDone(boolean done) {"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"        this.done \u003d done;"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"    // Returns a checkbox string depending on whether task is done"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"    public String getCheckbox() {"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"        return this.isDone() ? \"[‚úî]\":\"[‚ùå]\";"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"}"}],"authorContributionMap":{"sarzorwyn":26}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":"public class TaskList {"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"    public TaskList() {"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"    // Adds task to list and prints the input in console"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"    public void addToList(String input) {"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"        Task newTask \u003d new Task(input);"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"        tasks.add(newTask);"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"        String echoString \u003d \"____________________________________________________________\\n\" +"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"                \"added: \" + input + \"\\n\" +"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"                \"____________________________________________________________\\n\";"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(echoString);"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"    // Prints contents of list"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"    public void printList() {"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"            System.out.println((i+1) + \". \" + tasks.get(i).getCheckbox() + \" \" + tasks.get(i).getLabel());"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(\"____________________________________________________________\\n\");"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"    // Set flag isDone in Task class of index \u003d number - 1"},{"lineNumber":30,"author":{"gitId":"sarzorwyn"},"content":"    public void completeTask(int number) {"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"        int index \u003d number - 1; // adjust for the list label starting from 1"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"        tasks.get(index).isDone(true);"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(\"Winner winner chicken dinner üêî The task is as good as done\");"},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(\"   [‚úî] \" + tasks.get(index).getLabel());"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"        System.out.println(\"____________________________________________________________\\n\");"},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":""},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"}"}],"authorContributionMap":{"sarzorwyn":40}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"java -classpath ..\\bin Bob \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"sarzorwyn":1,"-":20}}]
