[{"path":"src/main/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":" * Subclass of Task object, requires deadline date/time."},{"lineNumber":5,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":6,"author":{"gitId":"averliz"},"content":" * @author Jeremy Teo"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":""},{"lineNumber":12,"author":{"gitId":"averliz"},"content":"    private final String dateBy;"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":""},{"lineNumber":14,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"averliz"},"content":"     * Deadline object constructor."},{"lineNumber":16,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"     * @param task string description of task"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"     * @param dateBy string date/time of when task is due"},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":"    public Deadline(String task, String dateBy) {"},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"        super(task);"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":"        this.dateBy \u003d dateBy;"},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":""},{"lineNumber":25,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"averliz"},"content":"     * Get status of the deadline task."},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"averliz"},"content":"     * @return string of the deadline task completion status"},{"lineNumber":29,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"averliz"},"content":"    public String getStatusIcon() {"},{"lineNumber":32,"author":{"gitId":"averliz"},"content":"        return (isDone ? \"[D][Y]\" : \"[D][N]\");"},{"lineNumber":33,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"averliz"},"content":""},{"lineNumber":35,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"averliz"},"content":"     * Get the description of the deadline task."},{"lineNumber":37,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"averliz"},"content":"     * @return formatted string of the task."},{"lineNumber":39,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"averliz"},"content":"    public String getDescription() {"},{"lineNumber":42,"author":{"gitId":"averliz"},"content":"        String deadlineDescription \u003d String.format(\"%s (by: %s)\", description, dateBy);"},{"lineNumber":43,"author":{"gitId":"averliz"},"content":"        return deadlineDescription;"},{"lineNumber":44,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"averliz"},"content":""},{"lineNumber":46,"author":{"gitId":"averliz"},"content":""},{"lineNumber":47,"author":{"gitId":"averliz"},"content":""},{"lineNumber":48,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":48}},{"path":"src/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"import main.commands.Command;"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":"import main.commands.CommandResult;"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":"import main.commands.ExitCommand;"},{"lineNumber":6,"author":{"gitId":"averliz"},"content":""},{"lineNumber":7,"author":{"gitId":"averliz"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":""},{"lineNumber":9,"author":{"gitId":"averliz"},"content":"    public TaskList taskList;"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":"    public Ui ui;"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":""},{"lineNumber":12,"author":{"gitId":"averliz"},"content":"    public Duke() {"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"        ui \u003d new Ui();"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":"        taskList \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"averliz"},"content":""},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"    public static void main(String[] args) throws DukeException {"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"        new Duke().run();"},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":""},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"    public void run() throws DukeException {"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":"        ui.showWelcomeMessage();"},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"        runCommandLoopUntilExitCommand();"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":"        exit();"},{"lineNumber":25,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"averliz"},"content":""},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"averliz"},"content":"     * Reads the user command and executes it, until the user issues the exit command."},{"lineNumber":29,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"    public void runCommandLoopUntilExitCommand() {"},{"lineNumber":31,"author":{"gitId":"averliz"},"content":"        Command command;"},{"lineNumber":32,"author":{"gitId":"averliz"},"content":"        do {"},{"lineNumber":33,"author":{"gitId":"averliz"},"content":""},{"lineNumber":34,"author":{"gitId":"averliz"},"content":"            String fullCommand \u003d ui.getUserCommand();"},{"lineNumber":35,"author":{"gitId":"averliz"},"content":"            ui.showLine(); // show the divider line (\"_______\")"},{"lineNumber":36,"author":{"gitId":"averliz"},"content":"            command \u003d new Parser().parse(fullCommand);"},{"lineNumber":37,"author":{"gitId":"averliz"},"content":"            CommandResult result \u003d executeCommand(command);"},{"lineNumber":38,"author":{"gitId":"averliz"},"content":"            taskList \u003d result.taskList;"},{"lineNumber":39,"author":{"gitId":"averliz"},"content":"            Ui.showResultToUser(result);"},{"lineNumber":40,"author":{"gitId":"averliz"},"content":""},{"lineNumber":41,"author":{"gitId":"averliz"},"content":"        } while (!ExitCommand.isExit(command));"},{"lineNumber":42,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"averliz"},"content":""},{"lineNumber":44,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"averliz"},"content":"     * Executes the command and returns the result."},{"lineNumber":46,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"averliz"},"content":"     * @param command user command"},{"lineNumber":48,"author":{"gitId":"averliz"},"content":"     * @return result of the command"},{"lineNumber":49,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"averliz"},"content":"    private CommandResult executeCommand(Command command) {"},{"lineNumber":51,"author":{"gitId":"averliz"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"averliz"},"content":"            command.setData(taskList);"},{"lineNumber":53,"author":{"gitId":"averliz"},"content":"            return command.execute();"},{"lineNumber":54,"author":{"gitId":"averliz"},"content":"        } catch (Exception e) {"},{"lineNumber":55,"author":{"gitId":"averliz"},"content":"            ui.showToUser(e.getMessage());"},{"lineNumber":56,"author":{"gitId":"averliz"},"content":"            throw new RuntimeException(e);"},{"lineNumber":57,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"averliz"},"content":""},{"lineNumber":60,"author":{"gitId":"averliz"},"content":""},{"lineNumber":61,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"averliz"},"content":"     * Prints the Goodbye message and exits."},{"lineNumber":63,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"averliz"},"content":"    public void exit() {"},{"lineNumber":65,"author":{"gitId":"averliz"},"content":"        ui.showGoodbyeMessage();"},{"lineNumber":66,"author":{"gitId":"averliz"},"content":"        System.exit(0);"},{"lineNumber":67,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":68}},{"path":"src/main/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":" * Signals that some given data does not fulfill some constraints."},{"lineNumber":5,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":6,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":"public class DukeException extends Exception {"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":"     * @param message should contain relevant information on the failed constraint(s)"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":"    public DukeException(String message) {"},{"lineNumber":15,"author":{"gitId":"averliz"},"content":"        super(message);"},{"lineNumber":16,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":17}},{"path":"src/main/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":" * Subclass of Task object, requires event date/time."},{"lineNumber":5,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":6,"author":{"gitId":"averliz"},"content":" * @author Jeremy Teo"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":"public class Event extends Task {"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":"    private final String eventDateBy;"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":""},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":"     * Event object constructor."},{"lineNumber":15,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"averliz"},"content":"     * @param task string description of task"},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"     * @param eventDateBy string date/time of event"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"    public Event(String task, String eventDateBy) {"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":"        super(task);"},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"        this.eventDateBy \u003d eventDateBy;"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"averliz"},"content":""},{"lineNumber":24,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"averliz"},"content":"     * Get status of the Event Task."},{"lineNumber":26,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"     * @return string of the the Event Task completion status"},{"lineNumber":28,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"averliz"},"content":""},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"averliz"},"content":"    public String getStatusIcon() {"},{"lineNumber":32,"author":{"gitId":"averliz"},"content":"        return (isDone ? \"[E][Y]\" : \"[E][N]\");"},{"lineNumber":33,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"averliz"},"content":""},{"lineNumber":35,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"averliz"},"content":"     * Formats the Event description"},{"lineNumber":37,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"averliz"},"content":"     * @return formatted string of Event description"},{"lineNumber":39,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"averliz"},"content":"    public String getDescription() {"},{"lineNumber":41,"author":{"gitId":"averliz"},"content":"        String deadlineDescription \u003d String.format(\"%s (at: %s)\", description, eventDateBy);"},{"lineNumber":42,"author":{"gitId":"averliz"},"content":"        return deadlineDescription;"},{"lineNumber":43,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"averliz"},"content":""},{"lineNumber":45,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":45}},{"path":"src/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"import main.commands.*;"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":""},{"lineNumber":5,"author":{"gitId":"averliz"},"content":""},{"lineNumber":6,"author":{"gitId":"averliz"},"content":"import java.util.regex.Matcher;"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":"import java.util.regex.Pattern;"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":""},{"lineNumber":9,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":" * Parses user input."},{"lineNumber":11,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":15,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":16,"author":{"gitId":"averliz"},"content":"public class Parser {"},{"lineNumber":17,"author":{"gitId":"averliz"},"content":""},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"     * Used for initial separation of command word and args."},{"lineNumber":20,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":""},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":"     * Used for separation of the deadline description and date."},{"lineNumber":25,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"averliz"},"content":"    public static final Pattern DEADLINE_DATA_ARGS_FORMAT \u003d"},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"            Pattern.compile(\"(?\u003ctaskDescription\u003e[^/]+)by/ (?\u003cdate\u003e[^/]+)\");"},{"lineNumber":28,"author":{"gitId":"averliz"},"content":""},{"lineNumber":29,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"     * Used for separation of the event description and date."},{"lineNumber":31,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"averliz"},"content":"    public static final Pattern EVENT_DATA_ARGS_FORMAT \u003d"},{"lineNumber":33,"author":{"gitId":"averliz"},"content":"            Pattern.compile(\"(?\u003ceventDescription\u003e[^/]+)at/ (?\u003cdate\u003e[^/]+)\");"},{"lineNumber":34,"author":{"gitId":"averliz"},"content":""},{"lineNumber":35,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"averliz"},"content":"     * Used to parse index of task to be deleted."},{"lineNumber":37,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"averliz"},"content":"    public static final Pattern TASK_INDEX_ARGS_FORMAT \u003d Pattern.compile(\"(?\u003ctargetIndex\u003e.+)\");"},{"lineNumber":39,"author":{"gitId":"averliz"},"content":""},{"lineNumber":40,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"averliz"},"content":"     * Parses user input into command for execution"},{"lineNumber":42,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"averliz"},"content":"     * @param userInput full user input string"},{"lineNumber":44,"author":{"gitId":"averliz"},"content":"     * @return the command based on the user input"},{"lineNumber":45,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"averliz"},"content":""},{"lineNumber":47,"author":{"gitId":"averliz"},"content":"    public Command parse(String userInput) {"},{"lineNumber":48,"author":{"gitId":"averliz"},"content":"        Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"},{"lineNumber":49,"author":{"gitId":"averliz"},"content":""},{"lineNumber":50,"author":{"gitId":"averliz"},"content":"        String commandWord \u003d null;"},{"lineNumber":51,"author":{"gitId":"averliz"},"content":"        String arguments \u003d null;"},{"lineNumber":52,"author":{"gitId":"averliz"},"content":"        while (matcher.find()) {"},{"lineNumber":53,"author":{"gitId":"averliz"},"content":"            commandWord \u003d matcher.group(\"commandWord\").trim();"},{"lineNumber":54,"author":{"gitId":"averliz"},"content":"            arguments \u003d matcher.group(\"arguments\").trim();"},{"lineNumber":55,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"averliz"},"content":""},{"lineNumber":57,"author":{"gitId":"averliz"},"content":""},{"lineNumber":58,"author":{"gitId":"averliz"},"content":"        switch (commandWord) {"},{"lineNumber":59,"author":{"gitId":"averliz"},"content":"            case TodoAddCommand.COMMAND_WORD:"},{"lineNumber":60,"author":{"gitId":"averliz"},"content":"                return prepareTodoAdd(arguments);"},{"lineNumber":61,"author":{"gitId":"averliz"},"content":""},{"lineNumber":62,"author":{"gitId":"averliz"},"content":"            case DeadlineAddCommand.COMMAND_WORD:"},{"lineNumber":63,"author":{"gitId":"averliz"},"content":"                return prepareDeadlineAdd(arguments);"},{"lineNumber":64,"author":{"gitId":"averliz"},"content":""},{"lineNumber":65,"author":{"gitId":"averliz"},"content":"            case EventAddCommand.COMMAND_WORD:"},{"lineNumber":66,"author":{"gitId":"averliz"},"content":"                return prepareEventAdd(arguments);"},{"lineNumber":67,"author":{"gitId":"averliz"},"content":""},{"lineNumber":68,"author":{"gitId":"averliz"},"content":"            case MarkDoneCommand.COMMAND_WORD:"},{"lineNumber":69,"author":{"gitId":"averliz"},"content":"                return prepareMarkTaskDone(arguments);"},{"lineNumber":70,"author":{"gitId":"averliz"},"content":""},{"lineNumber":71,"author":{"gitId":"averliz"},"content":"            case FindTaskCommand.COMMAND_WORD:"},{"lineNumber":72,"author":{"gitId":"averliz"},"content":"                return prepareFindTask(arguments);"},{"lineNumber":73,"author":{"gitId":"averliz"},"content":""},{"lineNumber":74,"author":{"gitId":"averliz"},"content":"            case DeleteCommand.COMMAND_WORD:"},{"lineNumber":75,"author":{"gitId":"averliz"},"content":"                return prepareDelete(arguments);"},{"lineNumber":76,"author":{"gitId":"averliz"},"content":""},{"lineNumber":77,"author":{"gitId":"averliz"},"content":"            case ListCommand.COMMAND_WORD:"},{"lineNumber":78,"author":{"gitId":"averliz"},"content":"                return new ListCommand();"},{"lineNumber":79,"author":{"gitId":"averliz"},"content":""},{"lineNumber":80,"author":{"gitId":"averliz"},"content":"            case SaveCommand.COMMAND_WORD:"},{"lineNumber":81,"author":{"gitId":"averliz"},"content":"                return new SaveCommand();"},{"lineNumber":82,"author":{"gitId":"averliz"},"content":""},{"lineNumber":83,"author":{"gitId":"averliz"},"content":"            case LoadCommand.COMMAND_WORD:"},{"lineNumber":84,"author":{"gitId":"averliz"},"content":"                return new LoadCommand();"},{"lineNumber":85,"author":{"gitId":"averliz"},"content":""},{"lineNumber":86,"author":{"gitId":"averliz"},"content":"            case ExitCommand.COMMAND_WORD:"},{"lineNumber":87,"author":{"gitId":"averliz"},"content":"                return new ExitCommand();"},{"lineNumber":88,"author":{"gitId":"averliz"},"content":""},{"lineNumber":89,"author":{"gitId":"averliz"},"content":"            case HelpCommand.COMMAND_WORD:"},{"lineNumber":90,"author":{"gitId":"averliz"},"content":"                return new HelpCommand();"},{"lineNumber":91,"author":{"gitId":"averliz"},"content":""},{"lineNumber":92,"author":{"gitId":"averliz"},"content":"            default:"},{"lineNumber":93,"author":{"gitId":"averliz"},"content":"                Ui.showToUser(Ui.MESSAGE_INVALID_COMMAND);"},{"lineNumber":94,"author":{"gitId":"averliz"},"content":"                return new HelpCommand();"},{"lineNumber":95,"author":{"gitId":"averliz"},"content":""},{"lineNumber":96,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"averliz"},"content":""},{"lineNumber":99,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"averliz"},"content":"     * Parses arguments in the context of the find task command."},{"lineNumber":101,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"averliz"},"content":"     * @param args full command args string"},{"lineNumber":103,"author":{"gitId":"averliz"},"content":"     * @return prepared command"},{"lineNumber":104,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"averliz"},"content":"    protected Command prepareFindTask(String args) {"},{"lineNumber":106,"author":{"gitId":"averliz"},"content":"        return new FindTaskCommand(args);"},{"lineNumber":107,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"averliz"},"content":""},{"lineNumber":109,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"averliz"},"content":"     * Parses arguments in the context of the mark task done command."},{"lineNumber":111,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"averliz"},"content":"     * @param args full command args string"},{"lineNumber":113,"author":{"gitId":"averliz"},"content":"     * @return prepared command"},{"lineNumber":114,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"averliz"},"content":"    protected Command prepareMarkTaskDone(String args) {"},{"lineNumber":116,"author":{"gitId":"averliz"},"content":"        try {"},{"lineNumber":117,"author":{"gitId":"averliz"},"content":"            final int targetIndex \u003d parseArgsAsIndex(args);"},{"lineNumber":118,"author":{"gitId":"averliz"},"content":"            return new MarkDoneCommand(targetIndex);"},{"lineNumber":119,"author":{"gitId":"averliz"},"content":"        } catch (DukeException e) {"},{"lineNumber":120,"author":{"gitId":"averliz"},"content":"            return new IncorrectCommand(String.format(Ui.MESSAGE_INCORRECT_COMMAND, MarkDoneCommand.MESSAGE_USAGE));"},{"lineNumber":121,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"averliz"},"content":""},{"lineNumber":124,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"averliz"},"content":"     * Parses arguments in the context of the delete task command."},{"lineNumber":126,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":127,"author":{"gitId":"averliz"},"content":"     * @param args full command args string"},{"lineNumber":128,"author":{"gitId":"averliz"},"content":"     * @return the prepared command"},{"lineNumber":129,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"averliz"},"content":"    protected Command prepareDelete(String args) {"},{"lineNumber":131,"author":{"gitId":"averliz"},"content":"        try {"},{"lineNumber":132,"author":{"gitId":"averliz"},"content":"            final int targetIndex \u003d parseArgsAsIndex(args);"},{"lineNumber":133,"author":{"gitId":"averliz"},"content":"            return new DeleteCommand(targetIndex);"},{"lineNumber":134,"author":{"gitId":"averliz"},"content":"        } catch (DukeException e) {"},{"lineNumber":135,"author":{"gitId":"averliz"},"content":"            return new IncorrectCommand(String.format(Ui.MESSAGE_INCORRECT_COMMAND, DeleteCommand.MESSAGE_USAGE));"},{"lineNumber":136,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"averliz"},"content":""},{"lineNumber":139,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"averliz"},"content":"     * Parses arguments in the context of the adding todo task command."},{"lineNumber":141,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":142,"author":{"gitId":"averliz"},"content":"     * @param args full command args string"},{"lineNumber":143,"author":{"gitId":"averliz"},"content":"     * @return the prepared command"},{"lineNumber":144,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":145,"author":{"gitId":"averliz"},"content":"    protected Command prepareTodoAdd(String args) {"},{"lineNumber":146,"author":{"gitId":"averliz"},"content":"        try {"},{"lineNumber":147,"author":{"gitId":"averliz"},"content":"            return new TodoAddCommand(new Todo(args));"},{"lineNumber":148,"author":{"gitId":"averliz"},"content":"        } catch (DukeException e) {"},{"lineNumber":149,"author":{"gitId":"averliz"},"content":"            return new IncorrectCommand(e.getMessage());"},{"lineNumber":150,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"averliz"},"content":""},{"lineNumber":153,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":154,"author":{"gitId":"averliz"},"content":"     * Parses arguments in the context of the add deadline task command."},{"lineNumber":155,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":156,"author":{"gitId":"averliz"},"content":"     * @param args full command args string"},{"lineNumber":157,"author":{"gitId":"averliz"},"content":"     * @return the prepared command"},{"lineNumber":158,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"averliz"},"content":"    protected Command prepareDeadlineAdd(String args) {"},{"lineNumber":160,"author":{"gitId":"averliz"},"content":"        final Matcher matcher \u003d DEADLINE_DATA_ARGS_FORMAT.matcher(args.trim());"},{"lineNumber":161,"author":{"gitId":"averliz"},"content":""},{"lineNumber":162,"author":{"gitId":"averliz"},"content":"        if (!matcher.matches()) {"},{"lineNumber":163,"author":{"gitId":"averliz"},"content":"            return new IncorrectCommand(String.format(Ui.MESSAGE_INCORRECT_COMMAND, DeadlineAddCommand.MESSAGE_USAGE));"},{"lineNumber":164,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"averliz"},"content":"        try {"},{"lineNumber":166,"author":{"gitId":"averliz"},"content":"            return new DeadlineAddCommand("},{"lineNumber":167,"author":{"gitId":"averliz"},"content":"                    new Deadline(matcher.group(\"taskDescription\").trim(),"},{"lineNumber":168,"author":{"gitId":"averliz"},"content":"                            matcher.group(\"date\").trim()));"},{"lineNumber":169,"author":{"gitId":"averliz"},"content":"        } catch (DukeException e) {"},{"lineNumber":170,"author":{"gitId":"averliz"},"content":"            return new IncorrectCommand(e.getMessage());"},{"lineNumber":171,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"averliz"},"content":""},{"lineNumber":174,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":175,"author":{"gitId":"averliz"},"content":"     * Parses arguments in the context of the add event task command."},{"lineNumber":176,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":177,"author":{"gitId":"averliz"},"content":"     * @param args full command args string"},{"lineNumber":178,"author":{"gitId":"averliz"},"content":"     * @return the prepared command"},{"lineNumber":179,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":180,"author":{"gitId":"averliz"},"content":"    protected Command prepareEventAdd(String args) {"},{"lineNumber":181,"author":{"gitId":"averliz"},"content":"        final Matcher matcher \u003d EVENT_DATA_ARGS_FORMAT.matcher(args.trim());"},{"lineNumber":182,"author":{"gitId":"averliz"},"content":""},{"lineNumber":183,"author":{"gitId":"averliz"},"content":"        if (!matcher.matches()) {"},{"lineNumber":184,"author":{"gitId":"averliz"},"content":"            return new IncorrectCommand(String.format(Ui.MESSAGE_INCORRECT_COMMAND, EventAddCommand.MESSAGE_USAGE));"},{"lineNumber":185,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"averliz"},"content":"        try {"},{"lineNumber":187,"author":{"gitId":"averliz"},"content":"            return new EventAddCommand("},{"lineNumber":188,"author":{"gitId":"averliz"},"content":"                    new Event(matcher.group(\"eventDescription\").trim(),"},{"lineNumber":189,"author":{"gitId":"averliz"},"content":"                            matcher.group(\"date\").trim()));"},{"lineNumber":190,"author":{"gitId":"averliz"},"content":"        } catch (DukeException e) {"},{"lineNumber":191,"author":{"gitId":"averliz"},"content":"            return new IncorrectCommand(e.getMessage());"},{"lineNumber":192,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"averliz"},"content":""},{"lineNumber":195,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":196,"author":{"gitId":"averliz"},"content":"     * Parses the user given string as an index number."},{"lineNumber":197,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":198,"author":{"gitId":"averliz"},"content":"     * @param args arguments string to parse as index number"},{"lineNumber":199,"author":{"gitId":"averliz"},"content":"     * @return the parsed index number"},{"lineNumber":200,"author":{"gitId":"averliz"},"content":"     * @throws DukeException         if no region of the args string could be found for the index"},{"lineNumber":201,"author":{"gitId":"averliz"},"content":"     * @throws NumberFormatException the args string region is not a valid number"},{"lineNumber":202,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":203,"author":{"gitId":"averliz"},"content":"    private int parseArgsAsIndex(String args) throws DukeException, NumberFormatException {"},{"lineNumber":204,"author":{"gitId":"averliz"},"content":"        final Matcher matcher \u003d TASK_INDEX_ARGS_FORMAT.matcher(args.trim());"},{"lineNumber":205,"author":{"gitId":"averliz"},"content":"        if (!matcher.matches()) {"},{"lineNumber":206,"author":{"gitId":"averliz"},"content":"            throw new DukeException(\"Could not find index number to parse\");"},{"lineNumber":207,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":208,"author":{"gitId":"averliz"},"content":"        return Integer.parseInt(matcher.group(\"targetIndex\"));"},{"lineNumber":209,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"averliz"},"content":""},{"lineNumber":211,"author":{"gitId":"averliz"},"content":""},{"lineNumber":212,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":212}},{"path":"src/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"import java.io.*;"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"averliz"},"content":""},{"lineNumber":7,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":" * Storage handles all loading and saving of data for the Duke Application."},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"averliz"},"content":""},{"lineNumber":16,"author":{"gitId":"averliz"},"content":"    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"taskdata.ser\";"},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"    public static TaskList taskList;"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":""},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":"     * Saves the {@code taskList} data to the storage file."},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":"     * @throws StorageOperationException if there were errors converting and/or storing data to file."},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":"    public static void save(TaskList taskList) throws StorageOperationException {"},{"lineNumber":25,"author":{"gitId":"averliz"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"averliz"},"content":"            FileOutputStream writeData \u003d new FileOutputStream(\"taskdata.ser\");"},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"            ObjectOutputStream writeStream \u003d new ObjectOutputStream(writeData);"},{"lineNumber":28,"author":{"gitId":"averliz"},"content":""},{"lineNumber":29,"author":{"gitId":"averliz"},"content":"            writeStream.writeObject(taskList);"},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"            writeStream.flush();"},{"lineNumber":31,"author":{"gitId":"averliz"},"content":"            writeStream.close();"},{"lineNumber":32,"author":{"gitId":"averliz"},"content":""},{"lineNumber":33,"author":{"gitId":"averliz"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"averliz"},"content":"            throw new StorageOperationException(\"Error saving to file!\");"},{"lineNumber":35,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"averliz"},"content":""},{"lineNumber":38,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"averliz"},"content":"     * Loads the saved task list data to the storage file."},{"lineNumber":40,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"averliz"},"content":"     * @throws StorageOperationException if there were errors converting and/or loading data to file."},{"lineNumber":42,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"averliz"},"content":"    public static TaskList loadData() throws StorageOperationException {"},{"lineNumber":44,"author":{"gitId":"averliz"},"content":"        if (!Files.exists(Path.of(DEFAULT_STORAGE_FILEPATH)) || !Files.isRegularFile(Path.of(DEFAULT_STORAGE_FILEPATH))) {"},{"lineNumber":45,"author":{"gitId":"averliz"},"content":"            return new TaskList();"},{"lineNumber":46,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"averliz"},"content":""},{"lineNumber":48,"author":{"gitId":"averliz"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"averliz"},"content":"            FileInputStream readData \u003d new FileInputStream(\"taskdata.ser\");"},{"lineNumber":50,"author":{"gitId":"averliz"},"content":"            ObjectInputStream readStream \u003d new ObjectInputStream(readData);"},{"lineNumber":51,"author":{"gitId":"averliz"},"content":""},{"lineNumber":52,"author":{"gitId":"averliz"},"content":"            taskList \u003d (TaskList) readStream.readObject();"},{"lineNumber":53,"author":{"gitId":"averliz"},"content":"            readStream.close();"},{"lineNumber":54,"author":{"gitId":"averliz"},"content":""},{"lineNumber":55,"author":{"gitId":"averliz"},"content":"            return taskList;"},{"lineNumber":56,"author":{"gitId":"averliz"},"content":""},{"lineNumber":57,"author":{"gitId":"averliz"},"content":"        } catch (FileNotFoundException e1) {"},{"lineNumber":58,"author":{"gitId":"averliz"},"content":"            throw new AssertionError(\"File does not exist. Creating new storage file.\");"},{"lineNumber":59,"author":{"gitId":"averliz"},"content":"        } catch (IOException | ClassNotFoundException e) {"},{"lineNumber":60,"author":{"gitId":"averliz"},"content":"            throw new StorageOperationException(\"Error loading data.\");"},{"lineNumber":61,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"averliz"},"content":""},{"lineNumber":64,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"averliz"},"content":"     * Signals that some error has occured while trying to convert and read/write data between the application"},{"lineNumber":66,"author":{"gitId":"averliz"},"content":"     * and the storage file."},{"lineNumber":67,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"averliz"},"content":"    public static class StorageOperationException extends Exception {"},{"lineNumber":69,"author":{"gitId":"averliz"},"content":"        public StorageOperationException(String message) {"},{"lineNumber":70,"author":{"gitId":"averliz"},"content":"            super(message);"},{"lineNumber":71,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"averliz"},"content":""},{"lineNumber":74,"author":{"gitId":"averliz"},"content":""},{"lineNumber":75,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":75}},{"path":"src/main/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"import java.io.Serializable;"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":""},{"lineNumber":5,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"averliz"},"content":" * Task object used in the Duke Application."},{"lineNumber":7,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":"public class Task implements Serializable {"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"    protected String description;"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":"    protected boolean isDone;"},{"lineNumber":15,"author":{"gitId":"averliz"},"content":""},{"lineNumber":16,"author":{"gitId":"averliz"},"content":""},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"     * Constructor for Task object."},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":"     * @param description string description of Task."},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":"    public Task(String description) {"},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"        this.description \u003d description;"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":"        this.isDone \u003d false;"},{"lineNumber":25,"author":{"gitId":"averliz"},"content":""},{"lineNumber":26,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"averliz"},"content":""},{"lineNumber":28,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"averliz"},"content":"     * Gets done status icon of Task."},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"averliz"},"content":"     * @return Y if task is done, N if task is not done"},{"lineNumber":32,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"averliz"},"content":"    public String getStatusIcon() {"},{"lineNumber":34,"author":{"gitId":"averliz"},"content":"        return (isDone ? \"[Y]\" : \"[N]\");"},{"lineNumber":35,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"averliz"},"content":""},{"lineNumber":37,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"averliz"},"content":"     * Gets description of Task object."},{"lineNumber":39,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"averliz"},"content":"     * @return description of Task object"},{"lineNumber":41,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"averliz"},"content":"    public String getDescription() {"},{"lineNumber":43,"author":{"gitId":"averliz"},"content":"        return description;"},{"lineNumber":44,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"averliz"},"content":""},{"lineNumber":46,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"averliz"},"content":"     * Formats Task object into standard used by Duke application."},{"lineNumber":48,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"averliz"},"content":"     * @return formatted string of Task data"},{"lineNumber":50,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"averliz"},"content":"    public String toString(){"},{"lineNumber":52,"author":{"gitId":"averliz"},"content":"        return getStatusIcon() + \" \" + getDescription();"},{"lineNumber":53,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"averliz"},"content":""},{"lineNumber":55,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"averliz"},"content":"     * Sets description of Task."},{"lineNumber":57,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"averliz"},"content":"    public void setDescription(String description) {"},{"lineNumber":59,"author":{"gitId":"averliz"},"content":"        this.description \u003d description;"},{"lineNumber":60,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"averliz"},"content":""},{"lineNumber":62,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"averliz"},"content":"     * Gets completion status of Task object."},{"lineNumber":64,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"averliz"},"content":"     * @return completion status of Task object"},{"lineNumber":66,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"averliz"},"content":"    public boolean isDone() {"},{"lineNumber":68,"author":{"gitId":"averliz"},"content":"        return isDone;"},{"lineNumber":69,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"averliz"},"content":""},{"lineNumber":71,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"averliz"},"content":"     * Sets done status of Task."},{"lineNumber":73,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"averliz"},"content":"    public void setDone(boolean done) {"},{"lineNumber":75,"author":{"gitId":"averliz"},"content":"        isDone \u003d done;"},{"lineNumber":76,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"averliz"},"content":"}"},{"lineNumber":78,"author":{"gitId":"averliz"},"content":""}],"authorContributionMap":{"averliz":78}},{"path":"src/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"import java.io.Serializable;"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitId":"averliz"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":""},{"lineNumber":8,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" * TaskList object used in the Duke Application"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":15,"author":{"gitId":"averliz"},"content":"public class TaskList implements Serializable {"},{"lineNumber":16,"author":{"gitId":"averliz"},"content":""},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"    private final ArrayList\u003cTask\u003e taskList;"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":""},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":"     * Constructor for the TaskList object needed by Duke."},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":"    public TaskList() {"},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"averliz"},"content":""},{"lineNumber":26,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"     * Adds task object to taskList"},{"lineNumber":28,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"averliz"},"content":"     * @param task task object created by user or loaded from save file"},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"averliz"},"content":"    public void add(Task task) {"},{"lineNumber":32,"author":{"gitId":"averliz"},"content":"        taskList.add(task);"},{"lineNumber":33,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"averliz"},"content":""},{"lineNumber":35,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"averliz"},"content":"     * Retrieves task object from task list."},{"lineNumber":37,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"averliz"},"content":"     * @param indexOfTask the index which represents the position of the desired task object in the ArrayList"},{"lineNumber":39,"author":{"gitId":"averliz"},"content":"     * @return desired task object"},{"lineNumber":40,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"averliz"},"content":"    public Task get(int indexOfTask) {"},{"lineNumber":42,"author":{"gitId":"averliz"},"content":"        Task task;"},{"lineNumber":43,"author":{"gitId":"averliz"},"content":"        task \u003d taskList.get(indexOfTask);"},{"lineNumber":44,"author":{"gitId":"averliz"},"content":"        return task;"},{"lineNumber":45,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"averliz"},"content":""},{"lineNumber":47,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"averliz"},"content":"     * Retrieves number of task objects in the list."},{"lineNumber":49,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"averliz"},"content":"     * @return number of task objects in the list."},{"lineNumber":51,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"averliz"},"content":"    public int size() {"},{"lineNumber":53,"author":{"gitId":"averliz"},"content":"        return taskList.size();"},{"lineNumber":54,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"averliz"},"content":""},{"lineNumber":56,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"averliz"},"content":"     * Obtains formatted format of entire task list"},{"lineNumber":58,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"averliz"},"content":"     * @return Formatted string of the User\u0027s task list"},{"lineNumber":60,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"averliz"},"content":"    public String taskListAsString() {"},{"lineNumber":62,"author":{"gitId":"averliz"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":63,"author":{"gitId":"averliz"},"content":"        sb.append(\"\\tHere are the tasks in your list:\\n\");"},{"lineNumber":64,"author":{"gitId":"averliz"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":65,"author":{"gitId":"averliz"},"content":"            sb.append(String.format(\"\\t\\t%d. %s\\n\", i + 1, taskList.get(i).toString()));"},{"lineNumber":66,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"averliz"},"content":"        return sb.toString();"},{"lineNumber":68,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"averliz"},"content":""},{"lineNumber":70,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"averliz"},"content":"     * Deletes a task from the task list using its index"},{"lineNumber":72,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"averliz"},"content":"     * @param targetIndex is the index of the task that is to be deleted"},{"lineNumber":74,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"averliz"},"content":"    public void deleteTask(int targetIndex) {"},{"lineNumber":76,"author":{"gitId":"averliz"},"content":"        taskList.remove(targetIndex);"},{"lineNumber":77,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"averliz"},"content":""},{"lineNumber":79,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"averliz"},"content":"     * Finds and returns task list of task containing the specified keywords"},{"lineNumber":81,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"averliz"},"content":"     * @param keywords is the words or phrases to match the task"},{"lineNumber":83,"author":{"gitId":"averliz"},"content":"     * @return task list containing the tasks that has been matched"},{"lineNumber":84,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"averliz"},"content":"    public TaskList findMatchedTask(String keywords) {"},{"lineNumber":86,"author":{"gitId":"averliz"},"content":"        TaskList matchedTaskList \u003d new TaskList();"},{"lineNumber":87,"author":{"gitId":"averliz"},"content":"        for (Task task : taskList) {"},{"lineNumber":88,"author":{"gitId":"averliz"},"content":"            if (task.description.toLowerCase().contains(keywords)) {"},{"lineNumber":89,"author":{"gitId":"averliz"},"content":"                matchedTaskList.add(task);"},{"lineNumber":90,"author":{"gitId":"averliz"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"averliz"},"content":"        return matchedTaskList;"},{"lineNumber":93,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":94}},{"path":"src/main/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":" * Subclass of Task object"},{"lineNumber":3,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":" * @author Jeremy Teo"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":" * @version 0.1"},{"lineNumber":6,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":"package main;"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":""},{"lineNumber":10,"author":{"gitId":"averliz"},"content":"public class Todo extends Task{"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":""},{"lineNumber":12,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"     * Todo object constructor."},{"lineNumber":14,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"averliz"},"content":"     * @param description string description of task"},{"lineNumber":16,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"    public Todo(String description) {"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":""},{"lineNumber":21,"author":{"gitId":"averliz"},"content":""},{"lineNumber":22,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"     * Get user status of the Todo Task"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"averliz"},"content":"     * @return formatted string Todo Task completion status"},{"lineNumber":26,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"averliz"},"content":"    public String getStatusIcon() {"},{"lineNumber":29,"author":{"gitId":"averliz"},"content":"        return (isDone ? \"[T][Y]\" : \"[T][N]\");"},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"averliz"},"content":""},{"lineNumber":32,"author":{"gitId":"averliz"},"content":"}"},{"lineNumber":33,"author":{"gitId":"averliz"},"content":""}],"authorContributionMap":{"averliz":33}},{"path":"src/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"import main.commands.CommandResult;"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":"import main.commands.FindTaskCommand;"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":"import main.commands.ListCommand;"},{"lineNumber":6,"author":{"gitId":"averliz"},"content":""},{"lineNumber":7,"author":{"gitId":"averliz"},"content":"import java.io.InputStream;"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":"import java.io.PrintStream;"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":"import java.util.Objects;"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":""},{"lineNumber":12,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":" * Ui class handles the formatting and displaying of messages to the user."},{"lineNumber":14,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":15,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":16,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":17,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"public class Ui {"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"     * A decorative prefix for the beginning of the line"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"    public static final String LINE_PREFIX \u003d \"  \";"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":""},{"lineNumber":25,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"averliz"},"content":"     * Logo for the application"},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"averliz"},"content":"    public static final String LOGO"},{"lineNumber":29,"author":{"gitId":"averliz"},"content":"            \u003d \" ____        _        \\n\""},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":31,"author":{"gitId":"averliz"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":32,"author":{"gitId":"averliz"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":33,"author":{"gitId":"averliz"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\";"},{"lineNumber":34,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"averliz"},"content":"     * Format of welcome and goodbye messages"},{"lineNumber":36,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"averliz"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Hello! I\u0027m Duke - your personal task manager\";"},{"lineNumber":38,"author":{"gitId":"averliz"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again\";"},{"lineNumber":39,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"averliz"},"content":"     * Incorrect Command message"},{"lineNumber":41,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"averliz"},"content":"    public static final String MESSAGE_INCORRECT_COMMAND \u003d \"Incorrect command! Please try again! \\n%1$s\";"},{"lineNumber":43,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"averliz"},"content":"     * Invalid Command Message"},{"lineNumber":45,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"averliz"},"content":"    public static final String MESSAGE_INVALID_COMMAND \u003d \"Invalid command! Please try again!\";"},{"lineNumber":47,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"averliz"},"content":"     * Index invalid message."},{"lineNumber":49,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"averliz"},"content":"    public static final String MESSAGE_INVALID_TASK_INDEX \u003d \"The task index you have provided is invalid\";"},{"lineNumber":51,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"averliz"},"content":"     * A platform independent line separator."},{"lineNumber":53,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"averliz"},"content":"    protected static final String LS \u003d System.lineSeparator();"},{"lineNumber":55,"author":{"gitId":"averliz"},"content":"    protected static final String LINE_DIVIDER \u003d \"\\t__________________________________________________________________________\";"},{"lineNumber":56,"author":{"gitId":"averliz"},"content":"    private static PrintStream out;"},{"lineNumber":57,"author":{"gitId":"averliz"},"content":"    private final Scanner in;"},{"lineNumber":58,"author":{"gitId":"averliz"},"content":""},{"lineNumber":59,"author":{"gitId":"averliz"},"content":"    public Ui() {"},{"lineNumber":60,"author":{"gitId":"averliz"},"content":"        this(System.in, System.out);"},{"lineNumber":61,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"averliz"},"content":""},{"lineNumber":63,"author":{"gitId":"averliz"},"content":"    public Ui(InputStream in, PrintStream out) {"},{"lineNumber":64,"author":{"gitId":"averliz"},"content":"        this.in \u003d new Scanner(in);"},{"lineNumber":65,"author":{"gitId":"averliz"},"content":"        Ui.out \u003d out;"},{"lineNumber":66,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"averliz"},"content":""},{"lineNumber":68,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"averliz"},"content":"     * Shows message(s) to the user"},{"lineNumber":70,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"averliz"},"content":"    public static void showToUser(String... message) {"},{"lineNumber":72,"author":{"gitId":"averliz"},"content":"        for (String m : message) {"},{"lineNumber":73,"author":{"gitId":"averliz"},"content":"            out.println(LINE_PREFIX + m.replace(\"\\n\", LS + LINE_PREFIX));"},{"lineNumber":74,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"averliz"},"content":""},{"lineNumber":77,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"averliz"},"content":"     * Shows the result of a command execution to the user. Includes additional formatting to demarcate different"},{"lineNumber":79,"author":{"gitId":"averliz"},"content":"     * command execution segments."},{"lineNumber":80,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"averliz"},"content":"    public static void showResultToUser(CommandResult result) {"},{"lineNumber":82,"author":{"gitId":"averliz"},"content":"        final TaskList taskList \u003d result.getTaskList();"},{"lineNumber":83,"author":{"gitId":"averliz"},"content":"        if (Objects.equals(result.commandWord, ListCommand.COMMAND_WORD)) {"},{"lineNumber":84,"author":{"gitId":"averliz"},"content":"            if (taskList \u003d\u003d null || taskList.size() \u003d\u003d 0) {"},{"lineNumber":85,"author":{"gitId":"averliz"},"content":"                showToUser(\"\\tTask list is empty. Add some tasks! \");"},{"lineNumber":86,"author":{"gitId":"averliz"},"content":"                showToUser(LINE_DIVIDER);"},{"lineNumber":87,"author":{"gitId":"averliz"},"content":"                return;"},{"lineNumber":88,"author":{"gitId":"averliz"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"averliz"},"content":"        } else if (Objects.equals(result.commandWord, FindTaskCommand.COMMAND_WORD)) {"},{"lineNumber":90,"author":{"gitId":"averliz"},"content":"            if (result.matchedTaskList \u003d\u003d null || result.matchedTaskList.size() \u003d\u003d 0) {"},{"lineNumber":91,"author":{"gitId":"averliz"},"content":"                showToUser(\"\\t No task found with given keyword! \");"},{"lineNumber":92,"author":{"gitId":"averliz"},"content":"            } else {"},{"lineNumber":93,"author":{"gitId":"averliz"},"content":"                showToUser(result.matchedTaskList.taskListAsString());"},{"lineNumber":94,"author":{"gitId":"averliz"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"averliz"},"content":"            showToUser(LINE_DIVIDER);"},{"lineNumber":96,"author":{"gitId":"averliz"},"content":"            return;"},{"lineNumber":97,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"averliz"},"content":"        showToUser(result.feedbackToUser);"},{"lineNumber":99,"author":{"gitId":"averliz"},"content":"        showToUser(LINE_DIVIDER);"},{"lineNumber":100,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"averliz"},"content":""},{"lineNumber":102,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"averliz"},"content":"     * Prompts for the command and reads the text entered by the user."},{"lineNumber":104,"author":{"gitId":"averliz"},"content":"     * Echos the command back to the user."},{"lineNumber":105,"author":{"gitId":"averliz"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"averliz"},"content":"     * @return command (full line) entered by the user"},{"lineNumber":107,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"averliz"},"content":"    public String getUserCommand() {"},{"lineNumber":109,"author":{"gitId":"averliz"},"content":"        out.print(LINE_PREFIX + \"Enter command: \");"},{"lineNumber":110,"author":{"gitId":"averliz"},"content":"        String fullInputLine \u003d in.nextLine();"},{"lineNumber":111,"author":{"gitId":"averliz"},"content":""},{"lineNumber":112,"author":{"gitId":"averliz"},"content":"        showToUser(\"[You have entered:\" + fullInputLine + \"]\");"},{"lineNumber":113,"author":{"gitId":"averliz"},"content":"        return fullInputLine;"},{"lineNumber":114,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"averliz"},"content":""},{"lineNumber":116,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"averliz"},"content":"     * Generates and prints the welcome message upon the start of the application."},{"lineNumber":118,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"averliz"},"content":"    public void showWelcomeMessage() {"},{"lineNumber":120,"author":{"gitId":"averliz"},"content":"        showToUser("},{"lineNumber":121,"author":{"gitId":"averliz"},"content":"                LOGO,"},{"lineNumber":122,"author":{"gitId":"averliz"},"content":"                LINE_DIVIDER,"},{"lineNumber":123,"author":{"gitId":"averliz"},"content":"                MESSAGE_WELCOME,"},{"lineNumber":124,"author":{"gitId":"averliz"},"content":"                LINE_DIVIDER);"},{"lineNumber":125,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"averliz"},"content":""},{"lineNumber":127,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"averliz"},"content":"     * Generates and prints goodbye message upon completion of the application"},{"lineNumber":129,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"averliz"},"content":"    public void showGoodbyeMessage() {"},{"lineNumber":131,"author":{"gitId":"averliz"},"content":"        showToUser(MESSAGE_GOODBYE, LINE_DIVIDER, LINE_DIVIDER);"},{"lineNumber":132,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"averliz"},"content":""},{"lineNumber":134,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"averliz"},"content":"     * Shows the Line Divider to the User."},{"lineNumber":136,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"averliz"},"content":"    public void showLine() {"},{"lineNumber":138,"author":{"gitId":"averliz"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":139,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":140}},{"path":"src/main/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main.commands;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"import main.TaskList;"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":""},{"lineNumber":5,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"averliz"},"content":" * Represents an executable command."},{"lineNumber":7,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":"public class Command {"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"    protected TaskList taskList;"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":""},{"lineNumber":15,"author":{"gitId":"averliz"},"content":"    public Command() {"},{"lineNumber":16,"author":{"gitId":"averliz"},"content":""},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":""},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":"     * Executes the command and returns the result."},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":"    public CommandResult execute() {"},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"        throw new UnsupportedOperationException(\"This method is to be implemented by child classes\");"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"averliz"},"content":""},{"lineNumber":26,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"     * Supplies the data the command will operate on."},{"lineNumber":28,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"averliz"},"content":"    public void setData(TaskList taskList) {"},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":31,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"averliz"},"content":""},{"lineNumber":33,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":33}},{"path":"src/main/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main.commands;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"import main.TaskList;"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":""},{"lineNumber":5,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"averliz"},"content":" * Represents the result of a command execution."},{"lineNumber":7,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":"public class CommandResult {"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":""},{"lineNumber":14,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"averliz"},"content":"     * The feedback message to be shown to the user. Contains a description of the execution result"},{"lineNumber":16,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"    public final String feedbackToUser;"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":""},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":"     * The task list that was produced by the command"},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":"    public final TaskList taskList;"},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":"     * The task list that matches the keyword defined by user"},{"lineNumber":25,"author":{"gitId":"averliz"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"averliz"},"content":"    public TaskList matchedTaskList;"},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"    public String commandWord;"},{"lineNumber":28,"author":{"gitId":"averliz"},"content":""},{"lineNumber":29,"author":{"gitId":"averliz"},"content":"    public CommandResult(String feedbackToUser, TaskList taskList) {"},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"        this.feedbackToUser \u003d feedbackToUser;"},{"lineNumber":31,"author":{"gitId":"averliz"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":32,"author":{"gitId":"averliz"},"content":"        this.commandWord \u003d null;"},{"lineNumber":33,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"averliz"},"content":""},{"lineNumber":35,"author":{"gitId":"averliz"},"content":"    public CommandResult(String feedbackToUser, TaskList taskList, String commandWord) {"},{"lineNumber":36,"author":{"gitId":"averliz"},"content":"        this.feedbackToUser \u003d feedbackToUser;"},{"lineNumber":37,"author":{"gitId":"averliz"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":38,"author":{"gitId":"averliz"},"content":"        this.commandWord \u003d commandWord;"},{"lineNumber":39,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"averliz"},"content":""},{"lineNumber":41,"author":{"gitId":"averliz"},"content":"    public CommandResult(String feedbackToUser, String commandWord, TaskList taskList, TaskList matchedTaskList) {"},{"lineNumber":42,"author":{"gitId":"averliz"},"content":"        this.feedbackToUser \u003d feedbackToUser;"},{"lineNumber":43,"author":{"gitId":"averliz"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":44,"author":{"gitId":"averliz"},"content":"        this.matchedTaskList \u003d matchedTaskList;"},{"lineNumber":45,"author":{"gitId":"averliz"},"content":"        this.commandWord \u003d commandWord;"},{"lineNumber":46,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"averliz"},"content":""},{"lineNumber":48,"author":{"gitId":"averliz"},"content":"    public TaskList getTaskList() {"},{"lineNumber":49,"author":{"gitId":"averliz"},"content":"        return this.taskList;"},{"lineNumber":50,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":51}},{"path":"src/main/commands/DeadlineAddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main.commands;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"import main.Deadline;"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":"import main.DukeException;"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":""},{"lineNumber":6,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":" * Adds a deadline task to the task list."},{"lineNumber":8,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"public class DeadlineAddCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";"},{"lineNumber":15,"author":{"gitId":"averliz"},"content":""},{"lineNumber":16,"author":{"gitId":"averliz"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Deadline added: %1$s\";"},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a deadline task to your task list. \\n\""},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"            + \"Parameters: TASK at/ DATE\\n\""},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"            + \"Example: \" + COMMAND_WORD + \" Math Homework 1 at/ Tues 2pm\";"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":""},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"    public final Deadline newDeadline;"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":""},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"    public DeadlineAddCommand(Deadline newDeadline) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":"        this.newDeadline \u003d newDeadline;"},{"lineNumber":25,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"averliz"},"content":""},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"averliz"},"content":"    public CommandResult execute() {"},{"lineNumber":29,"author":{"gitId":"averliz"},"content":"        taskList.add(newDeadline);"},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, newDeadline), taskList);"},{"lineNumber":31,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":32}},{"path":"src/main/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main.commands;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"import main.Task;"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":"import main.Ui;"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":""},{"lineNumber":6,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":" * Deletes a task from the task list using its index in the task list"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":""},{"lineNumber":15,"author":{"gitId":"averliz"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";"},{"lineNumber":16,"author":{"gitId":"averliz"},"content":""},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"            + \": Deletes the task identified by its index number used in the task list.\\n\""},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"            + \"Parameters: INDEX\\n\""},{"lineNumber":20,"author":{"gitId":"averliz"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";"},{"lineNumber":21,"author":{"gitId":"averliz"},"content":""},{"lineNumber":22,"author":{"gitId":"averliz"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";"},{"lineNumber":23,"author":{"gitId":"averliz"},"content":""},{"lineNumber":24,"author":{"gitId":"averliz"},"content":"    private final int targetIndex;"},{"lineNumber":25,"author":{"gitId":"averliz"},"content":""},{"lineNumber":26,"author":{"gitId":"averliz"},"content":"    public DeleteCommand(int targetIndex) {"},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"        this.targetIndex \u003d targetIndex - 1;"},{"lineNumber":28,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"averliz"},"content":""},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"averliz"},"content":"    public CommandResult execute() {"},{"lineNumber":32,"author":{"gitId":"averliz"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"averliz"},"content":"            final Task taskToBeDeleted \u003d taskList.get(targetIndex);"},{"lineNumber":34,"author":{"gitId":"averliz"},"content":"            taskList.deleteTask(targetIndex);"},{"lineNumber":35,"author":{"gitId":"averliz"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToBeDeleted.toString()), taskList);"},{"lineNumber":36,"author":{"gitId":"averliz"},"content":"        } catch (IndexOutOfBoundsException ie) {"},{"lineNumber":37,"author":{"gitId":"averliz"},"content":"            return new CommandResult(Ui.MESSAGE_INVALID_TASK_INDEX, taskList);"},{"lineNumber":38,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":40}},{"path":"src/main/commands/EventAddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main.commands;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"import main.DukeException;"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":"import main.Event;"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":""},{"lineNumber":6,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":" * Adds an event task to the task list."},{"lineNumber":8,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"public class EventAddCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":"    public static final String COMMAND_WORD \u003d \"event\";"},{"lineNumber":15,"author":{"gitId":"averliz"},"content":""},{"lineNumber":16,"author":{"gitId":"averliz"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: %1$s\";"},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a event task to your task list. \\n\""},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"            + \"Parameters: EVENT at/ DATE\\n\""},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"            + \"Example: \" + COMMAND_WORD + \" Talk about Space 1 at/ Aug 6th 2-4pm\";"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":""},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"    public final Event newEvent;"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":""},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"    public EventAddCommand(Event newEvent) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":"        this.newEvent \u003d newEvent;"},{"lineNumber":25,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"averliz"},"content":""},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"averliz"},"content":"    public CommandResult execute() {"},{"lineNumber":29,"author":{"gitId":"averliz"},"content":"        taskList.add(newEvent);"},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, newEvent), taskList);"},{"lineNumber":31,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":32}},{"path":"src/main/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main.commands;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":" * Terminates the program."},{"lineNumber":5,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":6,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":"public class ExitCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":""},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Duke as requested ...\";"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":""},{"lineNumber":15,"author":{"gitId":"averliz"},"content":"    public static boolean isExit(Command command) {"},{"lineNumber":16,"author":{"gitId":"averliz"},"content":"        return command instanceof ExitCommand; // instanceof returns false if it is null"},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":""},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":"    public CommandResult execute() {"},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, taskList);"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"averliz"},"content":""},{"lineNumber":24,"author":{"gitId":"averliz"},"content":""},{"lineNumber":25,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":25}},{"path":"src/main/commands/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main.commands;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"import main.TaskList;"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":"import main.Ui;"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":""},{"lineNumber":6,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":" * Find a task from the task list using user specified keyword"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"public class FindTaskCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":"    public static final String COMMAND_WORD \u003d \"find\";"},{"lineNumber":15,"author":{"gitId":"averliz"},"content":""},{"lineNumber":16,"author":{"gitId":"averliz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"            + \": Find tasks in the task list that matches given keywords.\\n\""},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"            + \"Parameters: FIND\\n\""},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"            + \"Example: \" + COMMAND_WORD + \" book\";"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":""},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"    public static String MESSAGE_FIND_TASK_SUCCESS \u003d \"Task that contains: \";"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":""},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"    public String keywords;"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":""},{"lineNumber":25,"author":{"gitId":"averliz"},"content":"    public FindTaskCommand(String keywords) {"},{"lineNumber":26,"author":{"gitId":"averliz"},"content":"        this.keywords \u003d keywords;"},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"averliz"},"content":""},{"lineNumber":29,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"    public CommandResult execute() {"},{"lineNumber":31,"author":{"gitId":"averliz"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"averliz"},"content":"            TaskList matchedTaskList \u003d taskList.findMatchedTask(keywords);"},{"lineNumber":33,"author":{"gitId":"averliz"},"content":"            return new CommandResult(MESSAGE_FIND_TASK_SUCCESS, COMMAND_WORD,"},{"lineNumber":34,"author":{"gitId":"averliz"},"content":"                    taskList, matchedTaskList);"},{"lineNumber":35,"author":{"gitId":"averliz"},"content":"        } catch (IndexOutOfBoundsException ie) {"},{"lineNumber":36,"author":{"gitId":"averliz"},"content":"            return new CommandResult(Ui.MESSAGE_INVALID_COMMAND, taskList);"},{"lineNumber":37,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":39}},{"path":"src/main/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main.commands;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":" * Shows commands that Duke accepts."},{"lineNumber":5,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":6,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":"public class HelpCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":"    public static final String COMMAND_WORD \u003d \"help\";"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":""},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":"    public CommandResult execute() {"},{"lineNumber":15,"author":{"gitId":"averliz"},"content":"        return new CommandResult("},{"lineNumber":16,"author":{"gitId":"averliz"},"content":"                \"\\tAccepted Commands:\""},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"                        + \"\\n\\t\\t\" + TodoAddCommand.COMMAND_WORD"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"                        + \"\\n\\t\\t\" + DeadlineAddCommand.COMMAND_WORD"},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"                        + \"\\n\\t\\t\" + EventAddCommand.COMMAND_WORD"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":"                        + \"\\n\\t\\t\" + MarkDoneCommand.COMMAND_WORD"},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"                        + \"\\n\\t\\t\" + DeleteCommand.COMMAND_WORD"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":"                        + \"\\n\\t\\t\" + ListCommand.COMMAND_WORD"},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"                        + \"\\n\\t\\t\" + SaveCommand.COMMAND_WORD"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":"                        + \"\\n\\t\\t\" + LoadCommand.COMMAND_WORD"},{"lineNumber":25,"author":{"gitId":"averliz"},"content":"                        + \"\\n\\t\\t\" + HelpCommand.COMMAND_WORD"},{"lineNumber":26,"author":{"gitId":"averliz"},"content":"                        + \"\\n\\t\\t\" + ExitCommand.COMMAND_WORD,"},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"                taskList"},{"lineNumber":28,"author":{"gitId":"averliz"},"content":"        );"},{"lineNumber":29,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":30}},{"path":"src/main/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main.commands;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":""},{"lineNumber":4,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":" * Represents an incorrect command. Upon execution, produces some feedback to the user."},{"lineNumber":6,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":"public class IncorrectCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":""},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"    public static final String COMMAND_WORD \u003d \"incorrect\";"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":""},{"lineNumber":15,"author":{"gitId":"averliz"},"content":"    public final String feedbackToUser;"},{"lineNumber":16,"author":{"gitId":"averliz"},"content":""},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"    public IncorrectCommand(String feedbackToUser) {"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"        this.feedbackToUser \u003d feedbackToUser;"},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":""},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":"    public CommandResult execute() {"},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"        return new CommandResult(feedbackToUser, taskList);"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"averliz"},"content":""},{"lineNumber":26,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":26}},{"path":"src/main/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main.commands;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":""},{"lineNumber":4,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":" * Lists all tasks in the task list to the user."},{"lineNumber":6,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":"public class ListCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":""},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"    public static final String COMMAND_WORD \u003d \"list\";"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":""},{"lineNumber":15,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"averliz"},"content":"    public CommandResult execute() {"},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"        return new CommandResult(taskList.taskListAsString(), taskList, COMMAND_WORD);"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":19}},{"path":"src/main/commands/LoadCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main.commands;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"import main.Storage;"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":"import main.Ui;"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":""},{"lineNumber":6,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":" * Loads the saved task list data to the current runtime."},{"lineNumber":8,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"public class LoadCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":"    public static final String COMMAND_WORD \u003d \"load\";"},{"lineNumber":15,"author":{"gitId":"averliz"},"content":""},{"lineNumber":16,"author":{"gitId":"averliz"},"content":"    public static final String MESSAGE_LOAD_TASK_LIST_SUCCESS \u003d \"Task List loaded from memory successfully!\";"},{"lineNumber":17,"author":{"gitId":"averliz"},"content":""},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"    public CommandResult execute() {"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"            taskList \u003d Storage.loadData();"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":"            return new CommandResult(MESSAGE_LOAD_TASK_LIST_SUCCESS, taskList);"},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"        } catch (Storage.StorageOperationException e) {"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":"            e.printStackTrace();"},{"lineNumber":25,"author":{"gitId":"averliz"},"content":"            return new CommandResult(Ui.MESSAGE_INVALID_COMMAND, taskList);"},{"lineNumber":26,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":28}},{"path":"src/main/commands/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main.commands;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"import main.Task;"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":"import main.Ui;"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":""},{"lineNumber":6,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":" * Marks completed task as done using its index in the task list"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"public class MarkDoneCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":"    public static final String COMMAND_WORD \u003d \"done\";"},{"lineNumber":15,"author":{"gitId":"averliz"},"content":""},{"lineNumber":16,"author":{"gitId":"averliz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"            + \": Marks completed task as done identified by its index number used in the task list.\\n\""},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"            + \"Parameters: DONE\\n\""},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":""},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"    public static final String MESSAGE_MARK_TASK_DONE_SUCCESS \u003d \"Completed Task: %1$s\";"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":""},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"    private final int targetIndex;"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":""},{"lineNumber":25,"author":{"gitId":"averliz"},"content":"    public MarkDoneCommand(int targetIndex) {"},{"lineNumber":26,"author":{"gitId":"averliz"},"content":"        this.targetIndex \u003d targetIndex - 1;"},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"averliz"},"content":""},{"lineNumber":29,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"    public CommandResult execute() {"},{"lineNumber":31,"author":{"gitId":"averliz"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"averliz"},"content":"            Task completedTask \u003d taskList.get(targetIndex);"},{"lineNumber":33,"author":{"gitId":"averliz"},"content":"            completedTask.setDone(true);"},{"lineNumber":34,"author":{"gitId":"averliz"},"content":"            return new CommandResult(String.format(MESSAGE_MARK_TASK_DONE_SUCCESS, completedTask.toString()),"},{"lineNumber":35,"author":{"gitId":"averliz"},"content":"                    taskList);"},{"lineNumber":36,"author":{"gitId":"averliz"},"content":"        } catch (IndexOutOfBoundsException ie) {"},{"lineNumber":37,"author":{"gitId":"averliz"},"content":"            return new CommandResult(Ui.MESSAGE_INVALID_COMMAND, taskList);"},{"lineNumber":38,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"averliz"},"content":""},{"lineNumber":41,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":41}},{"path":"src/main/commands/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main.commands;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"import main.Storage;"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":"import main.Ui;"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":""},{"lineNumber":6,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":" * Saves current task list data to storage."},{"lineNumber":8,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"public class SaveCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":""},{"lineNumber":15,"author":{"gitId":"averliz"},"content":"    public static final String COMMAND_WORD \u003d \"save\";"},{"lineNumber":16,"author":{"gitId":"averliz"},"content":""},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"    public static final String MESSAGE_SAVE_TASK_LIST_SUCCESS \u003d \"Task List saved successfully!\";"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":""},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":"    public CommandResult execute() {"},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":"            Storage.save(taskList);"},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"            return new CommandResult(MESSAGE_SAVE_TASK_LIST_SUCCESS, taskList);"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":"        } catch (Storage.StorageOperationException e) {"},{"lineNumber":25,"author":{"gitId":"averliz"},"content":"            return new CommandResult(Ui.MESSAGE_INVALID_COMMAND, taskList);"},{"lineNumber":26,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":28}},{"path":"src/main/commands/TodoAddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"package main.commands;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"import main.DukeException;"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":"import main.Todo;"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":""},{"lineNumber":6,"author":{"gitId":"averliz"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":" * Adds a todo task to the task list."},{"lineNumber":8,"author":{"gitId":"averliz"},"content":" *"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":" * @author Jeremy"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":" * @version 0.2"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":" * @since 2021-02-28"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":" */"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"public class TodoAddCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";"},{"lineNumber":15,"author":{"gitId":"averliz"},"content":""},{"lineNumber":16,"author":{"gitId":"averliz"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Todo added: %1$s\";"},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a todo task to your task list. \\n\""},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"            + \"Example: \" + COMMAND_WORD + \" read book\";"},{"lineNumber":19,"author":{"gitId":"averliz"},"content":""},{"lineNumber":20,"author":{"gitId":"averliz"},"content":"    public final Todo newTodo;"},{"lineNumber":21,"author":{"gitId":"averliz"},"content":""},{"lineNumber":22,"author":{"gitId":"averliz"},"content":"    public TodoAddCommand(Todo newTodo) throws DukeException {"},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"        this.newTodo \u003d newTodo;"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"averliz"},"content":""},{"lineNumber":26,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"    public CommandResult execute(){"},{"lineNumber":28,"author":{"gitId":"averliz"},"content":"        taskList.add(newTodo);"},{"lineNumber":29,"author":{"gitId":"averliz"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, newTodo),taskList);"},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":31}}]
