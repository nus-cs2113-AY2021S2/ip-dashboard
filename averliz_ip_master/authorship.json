[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"    private final String dateBy;"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":"    private int numberOfDaysLeft;"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":""},{"lineNumber":6,"author":{"gitId":"averliz"},"content":""},{"lineNumber":7,"author":{"gitId":"averliz"},"content":"    public Deadline(String task, String dateBy) {"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":"        super(task);"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":"        this.dateBy \u003d dateBy;"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":""},{"lineNumber":12,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"    public String getStatusIcon() {"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":"        return (isDone ? \"[D][\\u2713]\" : \"[D][\\u2718]\"); //return tick or X symbols"},{"lineNumber":15,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"averliz"},"content":""},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"    public String getDescription() {"},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"        String deadlineDescription \u003d String.format(\"%s (by: %s)\", description, dateBy);"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":"        return deadlineDescription;"},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":""},{"lineNumber":23,"author":{"gitId":"averliz"},"content":""},{"lineNumber":24,"author":{"gitId":"averliz"},"content":""},{"lineNumber":25,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"averliz"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":"    static final String lineDivider \u003d \"\\t__________________________________________________________________________\\n\";"},{"lineNumber":6,"author":{"gitId":"averliz"},"content":""},{"lineNumber":7,"author":{"gitId":"averliz"},"content":"    static final String dukeKeywords \u003d \"\\t\\t Use \u0027todo\u0027, \u0027deadline\u0027 , \u0027event\u0027 to enter tasks!\\n\" +"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":"            \"\\t\\t Use \u0027list\u0027 to view tasks!\\n\";"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":"    public static final String LOGO \u003d \" ____        _        \\n\""},{"lineNumber":10,"author":{"gitId":"averliz"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":11,"author":{"gitId":"averliz"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":12,"author":{"gitId":"averliz"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":""},{"lineNumber":15,"author":{"gitId":"averliz"},"content":"    static final String dukeGreeting \u003d"},{"lineNumber":16,"author":{"gitId":"averliz"},"content":"            String.format(\"%s%s\\t Hello! I\u0027m Duke - your personal task manager \\n%s%s\","},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"                    LOGO,"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"                    lineDivider,"},{"lineNumber":19,"author":{"gitId":"averliz"},"content":"                    dukeKeywords,"},{"lineNumber":20,"author":{"gitId":"averliz"},"content":"                    lineDivider);"},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"    static final String dukeFarewell \u003d String.format(\"%s\\t Bye. Hope to see you again soon!\\n%s\","},{"lineNumber":22,"author":{"gitId":"averliz"},"content":"            lineDivider,"},{"lineNumber":23,"author":{"gitId":"averliz"},"content":"            lineDivider);"},{"lineNumber":24,"author":{"gitId":"averliz"},"content":""},{"lineNumber":25,"author":{"gitId":"averliz"},"content":"    static Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":26,"author":{"gitId":"averliz"},"content":""},{"lineNumber":27,"author":{"gitId":"averliz"},"content":"    public static String extractTaskMessage(String userInput) throws DukeExceptionNoTaskMessage {"},{"lineNumber":28,"author":{"gitId":"averliz"},"content":"        if (userInput.indexOf(\" \") \u003e 0) {"},{"lineNumber":29,"author":{"gitId":"averliz"},"content":"            return userInput.substring(userInput.indexOf(\" \") + 1);"},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"averliz"},"content":"            String errMessage \u003d String.format(\"%s\\tOOPS!!! The description of a task cannot be empty.\\n%s\","},{"lineNumber":32,"author":{"gitId":"averliz"},"content":"                    lineDivider,"},{"lineNumber":33,"author":{"gitId":"averliz"},"content":"                    lineDivider);"},{"lineNumber":34,"author":{"gitId":"averliz"},"content":"            throw new DukeExceptionNoTaskMessage(errMessage);"},{"lineNumber":35,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"averliz"},"content":""},{"lineNumber":38,"author":{"gitId":"averliz"},"content":"    public static String extractDateBy(String content) throws DukeExceptionNoDateBy {"},{"lineNumber":39,"author":{"gitId":"averliz"},"content":"        if (content.contains(\"//\")) {"},{"lineNumber":40,"author":{"gitId":"averliz"},"content":""},{"lineNumber":41,"author":{"gitId":"averliz"},"content":"            // using the limit parameter limits the number outputs the string splits"},{"lineNumber":42,"author":{"gitId":"averliz"},"content":"            String taskAndDate \u003d content.split(\"//\",2)[1].strip();"},{"lineNumber":43,"author":{"gitId":"averliz"},"content":""},{"lineNumber":44,"author":{"gitId":"averliz"},"content":"            if (taskAndDate.contains(\"by\") || taskAndDate.contains(\"at\")) {"},{"lineNumber":45,"author":{"gitId":"averliz"},"content":"                return taskAndDate.substring(taskAndDate.indexOf(\" \")).strip();"},{"lineNumber":46,"author":{"gitId":"averliz"},"content":"            } else {"},{"lineNumber":47,"author":{"gitId":"averliz"},"content":"                return taskAndDate;"},{"lineNumber":48,"author":{"gitId":"averliz"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"averliz"},"content":"        } else {"},{"lineNumber":50,"author":{"gitId":"averliz"},"content":"            String errMessage \u003d String.format(\"%s\\t OOPS!!! For deadlines and events, \" +"},{"lineNumber":51,"author":{"gitId":"averliz"},"content":"                            \"there must be a dateby denoted using\\n\" +"},{"lineNumber":52,"author":{"gitId":"averliz"},"content":"                            \"\\t  the \u0027//\u0027 symbol (e.g \\\"deadline task 1 // by Tuesday 2pm\\\"\\n \" +"},{"lineNumber":53,"author":{"gitId":"averliz"},"content":"                            \"\\t  or \\\"event task 1 // at 10/2/2021\\\" ) \\n %s\","},{"lineNumber":54,"author":{"gitId":"averliz"},"content":"                    lineDivider,"},{"lineNumber":55,"author":{"gitId":"averliz"},"content":"                    lineDivider);"},{"lineNumber":56,"author":{"gitId":"averliz"},"content":"            throw new DukeExceptionNoDateBy(errMessage);"},{"lineNumber":57,"author":{"gitId":"averliz"},"content":""},{"lineNumber":58,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"averliz"},"content":""},{"lineNumber":61,"author":{"gitId":"averliz"},"content":"    public static void taskApp() throws DukeExceptionNoTaskMessage, DukeExceptionNoDateBy {"},{"lineNumber":62,"author":{"gitId":"averliz"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":63,"author":{"gitId":"averliz"},"content":"        while (true) {"},{"lineNumber":64,"author":{"gitId":"averliz"},"content":""},{"lineNumber":65,"author":{"gitId":"averliz"},"content":"            System.out.print(\"Enter command: \");"},{"lineNumber":66,"author":{"gitId":"averliz"},"content":"            String userInput \u003d sc.nextLine();"},{"lineNumber":67,"author":{"gitId":"averliz"},"content":""},{"lineNumber":68,"author":{"gitId":"averliz"},"content":"            String commandWord \u003d userInput.split(\" \")[0].toLowerCase();"},{"lineNumber":69,"author":{"gitId":"averliz"},"content":"            String content \u003d null;"},{"lineNumber":70,"author":{"gitId":"averliz"},"content":""},{"lineNumber":71,"author":{"gitId":"averliz"},"content":"            switch (commandWord) {"},{"lineNumber":72,"author":{"gitId":"averliz"},"content":"                case \"todo\":"},{"lineNumber":73,"author":{"gitId":"averliz"},"content":"                    try {"},{"lineNumber":74,"author":{"gitId":"averliz"},"content":"                        content \u003d extractTaskMessage(userInput.strip());"},{"lineNumber":75,"author":{"gitId":"averliz"},"content":"                    } catch (DukeExceptionNoTaskMessage ex) {"},{"lineNumber":76,"author":{"gitId":"averliz"},"content":"                        System.out.println(ex.getMessage());"},{"lineNumber":77,"author":{"gitId":"averliz"},"content":"                        continue;"},{"lineNumber":78,"author":{"gitId":"averliz"},"content":"                    }"},{"lineNumber":79,"author":{"gitId":"averliz"},"content":"                    taskList.add(new Todo(content));"},{"lineNumber":80,"author":{"gitId":"averliz"},"content":"                    addTaskSuccessMessage(taskList, \"\\tGot it. I\u0027ve added this task: \");"},{"lineNumber":81,"author":{"gitId":"averliz"},"content":""},{"lineNumber":82,"author":{"gitId":"averliz"},"content":"                    break;"},{"lineNumber":83,"author":{"gitId":"averliz"},"content":"                case \"deadline\":"},{"lineNumber":84,"author":{"gitId":"averliz"},"content":"                    String datelineDateBy \u003d null;"},{"lineNumber":85,"author":{"gitId":"averliz"},"content":"                    String deadlineTask \u003d null;"},{"lineNumber":86,"author":{"gitId":"averliz"},"content":""},{"lineNumber":87,"author":{"gitId":"averliz"},"content":"                    try {"},{"lineNumber":88,"author":{"gitId":"averliz"},"content":"                        content \u003d extractTaskMessage(userInput.strip());"},{"lineNumber":89,"author":{"gitId":"averliz"},"content":"                        datelineDateBy \u003d extractDateBy(content);"},{"lineNumber":90,"author":{"gitId":"averliz"},"content":"                        deadlineTask \u003d content.split(\"//\")[0].toLowerCase();"},{"lineNumber":91,"author":{"gitId":"averliz"},"content":""},{"lineNumber":92,"author":{"gitId":"averliz"},"content":"                    } catch (DukeExceptionNoTaskMessage | DukeExceptionNoDateBy ex) {"},{"lineNumber":93,"author":{"gitId":"averliz"},"content":"                        System.out.println(ex.getMessage());"},{"lineNumber":94,"author":{"gitId":"averliz"},"content":"                        continue;"},{"lineNumber":95,"author":{"gitId":"averliz"},"content":"                    }"},{"lineNumber":96,"author":{"gitId":"averliz"},"content":"                    taskList.add(new Deadline(deadlineTask.strip(), datelineDateBy.strip()));"},{"lineNumber":97,"author":{"gitId":"averliz"},"content":"                    addTaskSuccessMessage(taskList, \"\\tGot it. I\u0027ve added this deadline: \");"},{"lineNumber":98,"author":{"gitId":"averliz"},"content":"                    break;"},{"lineNumber":99,"author":{"gitId":"averliz"},"content":""},{"lineNumber":100,"author":{"gitId":"averliz"},"content":"                case \"event\":"},{"lineNumber":101,"author":{"gitId":"averliz"},"content":"                    String eventTask \u003d null;"},{"lineNumber":102,"author":{"gitId":"averliz"},"content":"                    String eventDateBy \u003d null;"},{"lineNumber":103,"author":{"gitId":"averliz"},"content":""},{"lineNumber":104,"author":{"gitId":"averliz"},"content":"                    try{"},{"lineNumber":105,"author":{"gitId":"averliz"},"content":"                        content \u003d extractTaskMessage(userInput.strip());"},{"lineNumber":106,"author":{"gitId":"averliz"},"content":"                        eventDateBy \u003d extractDateBy(content);"},{"lineNumber":107,"author":{"gitId":"averliz"},"content":"                        eventTask \u003d content.split(\"//\")[0].toLowerCase();"},{"lineNumber":108,"author":{"gitId":"averliz"},"content":"                    } catch (DukeExceptionNoTaskMessage | DukeExceptionNoDateBy ex) {"},{"lineNumber":109,"author":{"gitId":"averliz"},"content":"                        System.out.println(ex.getMessage());"},{"lineNumber":110,"author":{"gitId":"averliz"},"content":"                        continue;"},{"lineNumber":111,"author":{"gitId":"averliz"},"content":"                    }"},{"lineNumber":112,"author":{"gitId":"averliz"},"content":"                    taskList.add(new Event(eventTask.strip(), eventDateBy.strip()));"},{"lineNumber":113,"author":{"gitId":"averliz"},"content":"                    addTaskSuccessMessage(taskList, \"\\tGot it. I\u0027ve added this Event: \");"},{"lineNumber":114,"author":{"gitId":"averliz"},"content":"                    break;"},{"lineNumber":115,"author":{"gitId":"averliz"},"content":"                case \"list\":"},{"lineNumber":116,"author":{"gitId":"averliz"},"content":"                    String listReturnString \u003d String.format(\"%s%s%s\", lineDivider, getList(taskList), lineDivider);"},{"lineNumber":117,"author":{"gitId":"averliz"},"content":"                    System.out.println(listReturnString);"},{"lineNumber":118,"author":{"gitId":"averliz"},"content":"                    break;"},{"lineNumber":119,"author":{"gitId":"averliz"},"content":"                case \"done\":"},{"lineNumber":120,"author":{"gitId":"averliz"},"content":"                    markTaskDone(taskList, userInput);"},{"lineNumber":121,"author":{"gitId":"averliz"},"content":"                    break;"},{"lineNumber":122,"author":{"gitId":"averliz"},"content":"                case \"bye\":"},{"lineNumber":123,"author":{"gitId":"averliz"},"content":"                    System.out.println(dukeFarewell);"},{"lineNumber":124,"author":{"gitId":"averliz"},"content":"                    System.exit(0);"},{"lineNumber":125,"author":{"gitId":"averliz"},"content":"                    break;"},{"lineNumber":126,"author":{"gitId":"averliz"},"content":"                default:"},{"lineNumber":127,"author":{"gitId":"averliz"},"content":"                    String defaultMessage \u003d"},{"lineNumber":128,"author":{"gitId":"averliz"},"content":"                            String.format(\"%s \\t Command word not recognised - please start command with\\n \" +"},{"lineNumber":129,"author":{"gitId":"averliz"},"content":"                                            \" \\t \u0027todo\u0027, \u0027deadline\u0027 or \u0027event\u0027 \\n%s\","},{"lineNumber":130,"author":{"gitId":"averliz"},"content":"                                    lineDivider,"},{"lineNumber":131,"author":{"gitId":"averliz"},"content":"                                    lineDivider);"},{"lineNumber":132,"author":{"gitId":"averliz"},"content":""},{"lineNumber":133,"author":{"gitId":"averliz"},"content":"                    System.out.println(defaultMessage);"},{"lineNumber":134,"author":{"gitId":"averliz"},"content":"            }"},{"lineNumber":135,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"averliz"},"content":""},{"lineNumber":138,"author":{"gitId":"averliz"},"content":"    public static void markTaskDone(ArrayList\u003cTask\u003e taskList, String userInput) {"},{"lineNumber":139,"author":{"gitId":"averliz"},"content":"        if (userInput.matches(\".*\\\\d.*\")) { // checks if there is a number in done cmd"},{"lineNumber":140,"author":{"gitId":"averliz"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.replaceAll(\"\\\\D+\",\"\"));"},{"lineNumber":141,"author":{"gitId":"averliz"},"content":"            int indexOfTaskToBeMarked \u003d taskNumber - 1;"},{"lineNumber":142,"author":{"gitId":"averliz"},"content":"            if (indexOfTaskToBeMarked \u003c taskList.size()) {"},{"lineNumber":143,"author":{"gitId":"averliz"},"content":"                taskList.get(indexOfTaskToBeMarked).setDone(true);"},{"lineNumber":144,"author":{"gitId":"averliz"},"content":"                String markedTaskAsDoneMessage \u003d"},{"lineNumber":145,"author":{"gitId":"averliz"},"content":"                        String.format(\"%s\\t Nice! I\u0027ve marked this task as done:\\n \\t %s %s \\n%s\","},{"lineNumber":146,"author":{"gitId":"averliz"},"content":"                                lineDivider,"},{"lineNumber":147,"author":{"gitId":"averliz"},"content":"                                taskList.get(indexOfTaskToBeMarked).getStatusIcon(),"},{"lineNumber":148,"author":{"gitId":"averliz"},"content":"                                taskList.get(indexOfTaskToBeMarked).getDescription(),"},{"lineNumber":149,"author":{"gitId":"averliz"},"content":"                                lineDivider);"},{"lineNumber":150,"author":{"gitId":"averliz"},"content":"                System.out.println(markedTaskAsDoneMessage);"},{"lineNumber":151,"author":{"gitId":"averliz"},"content":"            } else {"},{"lineNumber":152,"author":{"gitId":"averliz"},"content":"                String taskDoesNotExistMessage \u003d String.format(\"%s\\t Task does not exist!\\n %s \\n\", lineDivider, lineDivider);"},{"lineNumber":153,"author":{"gitId":"averliz"},"content":"                System.out.print(taskDoesNotExistMessage);"},{"lineNumber":154,"author":{"gitId":"averliz"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"averliz"},"content":"        } else {"},{"lineNumber":156,"author":{"gitId":"averliz"},"content":"            // empty list ! "},{"lineNumber":157,"author":{"gitId":"averliz"},"content":"            String doneErrorPrompt \u003d \"OOPS!!! Unable to mark task as done as your input is not in the right format!\\n \" +"},{"lineNumber":158,"author":{"gitId":"averliz"},"content":"                    \"Which task do you want to mark done?\";"},{"lineNumber":159,"author":{"gitId":"averliz"},"content":"            String doneListMessage \u003d String.format(\"%s%s\\n\\t%s\\n%s\", lineDivider, doneErrorPrompt, getList(taskList), lineDivider);"},{"lineNumber":160,"author":{"gitId":"averliz"},"content":"            System.out.println(doneListMessage);"},{"lineNumber":161,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"averliz"},"content":""},{"lineNumber":164,"author":{"gitId":"averliz"},"content":"    public static void addTaskSuccessMessage(ArrayList\u003cTask\u003e taskList, String s) {"},{"lineNumber":165,"author":{"gitId":"averliz"},"content":"        System.out.println(lineDivider);"},{"lineNumber":166,"author":{"gitId":"averliz"},"content":"        System.out.println(s);"},{"lineNumber":167,"author":{"gitId":"averliz"},"content":"        System.out.println(\"\\t \" + taskList.get(taskList.size() - 1).getStatusIcon()"},{"lineNumber":168,"author":{"gitId":"averliz"},"content":"                + \" \" + taskList.get(taskList.size() - 1).getDescription());"},{"lineNumber":169,"author":{"gitId":"averliz"},"content":"        System.out.println(lineDivider);"},{"lineNumber":170,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"averliz"},"content":""},{"lineNumber":172,"author":{"gitId":"averliz"},"content":"    public static String getList(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":173,"author":{"gitId":"averliz"},"content":"        if (!taskList.isEmpty()) { // userInput \u003d\u003d list"},{"lineNumber":174,"author":{"gitId":"averliz"},"content":"            StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":175,"author":{"gitId":"averliz"},"content":"            String listAsString;"},{"lineNumber":176,"author":{"gitId":"averliz"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":177,"author":{"gitId":"averliz"},"content":"                sb.append(\"\\t\");"},{"lineNumber":178,"author":{"gitId":"averliz"},"content":"                sb.append((i + 1));"},{"lineNumber":179,"author":{"gitId":"averliz"},"content":"                sb.append(\". \");"},{"lineNumber":180,"author":{"gitId":"averliz"},"content":"                sb.append(taskList.get(i).getStatusIcon());"},{"lineNumber":181,"author":{"gitId":"averliz"},"content":"                sb.append(\" \");"},{"lineNumber":182,"author":{"gitId":"averliz"},"content":"                sb.append(taskList.get(i).getDescription());"},{"lineNumber":183,"author":{"gitId":"averliz"},"content":"                sb.append(\"\\n\");"},{"lineNumber":184,"author":{"gitId":"averliz"},"content":"                sb.toString();"},{"lineNumber":185,"author":{"gitId":"averliz"},"content":"            }"},{"lineNumber":186,"author":{"gitId":"averliz"},"content":"            sb.append(\"\\n\");"},{"lineNumber":187,"author":{"gitId":"averliz"},"content":"            sb.append(\"\\tNow you have \");"},{"lineNumber":188,"author":{"gitId":"averliz"},"content":"            sb.append(taskList.size());"},{"lineNumber":189,"author":{"gitId":"averliz"},"content":"            sb.append(\" tasks in the list. \\n\");"},{"lineNumber":190,"author":{"gitId":"averliz"},"content":"            sb.append(\"\\tEnter \\\"done _\\\" to see mark task as done. \\n\");"},{"lineNumber":191,"author":{"gitId":"averliz"},"content":"            listAsString \u003d sb.toString();"},{"lineNumber":192,"author":{"gitId":"averliz"},"content":"            return listAsString;"},{"lineNumber":193,"author":{"gitId":"averliz"},"content":"        } else {"},{"lineNumber":194,"author":{"gitId":"averliz"},"content":"            return \"List is empty!\";"},{"lineNumber":195,"author":{"gitId":"averliz"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"averliz"},"content":""},{"lineNumber":198,"author":{"gitId":"averliz"},"content":"    public static void main(String[] args) throws DukeExceptionNoDateBy, DukeExceptionNoTaskMessage {"},{"lineNumber":199,"author":{"gitId":"averliz"},"content":""},{"lineNumber":200,"author":{"gitId":"averliz"},"content":"        // Greetings"},{"lineNumber":201,"author":{"gitId":"averliz"},"content":"        System.out.println(dukeGreeting);"},{"lineNumber":202,"author":{"gitId":"averliz"},"content":""},{"lineNumber":203,"author":{"gitId":"averliz"},"content":"        // Mark as done - Task Manager app - Level 3"},{"lineNumber":204,"author":{"gitId":"averliz"},"content":"        taskApp();"},{"lineNumber":205,"author":{"gitId":"averliz"},"content":""},{"lineNumber":206,"author":{"gitId":"averliz"},"content":"        // Farewell procedure"},{"lineNumber":207,"author":{"gitId":"averliz"},"content":"        System.out.println(dukeFarewell);"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":209,"author":{"gitId":"averliz"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"averliz":206,"-":4}},{"path":"src/main/java/DukeExceptionNoDateBy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"public class DukeExceptionNoDateBy extends Exception {"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"    public DukeExceptionNoDateBy(String message) {"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":"        super(message);"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"averliz"},"content":""},{"lineNumber":7,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":7}},{"path":"src/main/java/DukeExceptionNoTaskMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"public class DukeExceptionNoTaskMessage extends Exception {"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"    public DukeExceptionNoTaskMessage(String message) {"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":"        super(message);"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"averliz"},"content":""},{"lineNumber":7,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":"    private final String eventDateBy;"},{"lineNumber":3,"author":{"gitId":"averliz"},"content":""},{"lineNumber":4,"author":{"gitId":"averliz"},"content":""},{"lineNumber":5,"author":{"gitId":"averliz"},"content":"    public Event(String task, String eventDateBy) {"},{"lineNumber":6,"author":{"gitId":"averliz"},"content":"        super(task);"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":"        this.eventDateBy \u003d eventDateBy;"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":"    "},{"lineNumber":10,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":"    public String getStatusIcon() {"},{"lineNumber":12,"author":{"gitId":"averliz"},"content":"        return (isDone ? \"[E][\\u2713]\" : \"[E][\\u2718]\"); //return tick or X symbols"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":""},{"lineNumber":15,"author":{"gitId":"averliz"},"content":"    public String getDescription() {"},{"lineNumber":16,"author":{"gitId":"averliz"},"content":"        String deadlineDescription \u003d String.format(\"%s (at: %s)\", description, eventDateBy);"},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"        return deadlineDescription;"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"averliz"},"content":""},{"lineNumber":20,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":20}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":""},{"lineNumber":5,"author":{"gitId":"averliz"},"content":""},{"lineNumber":6,"author":{"gitId":"averliz"},"content":"    public Task(String description) {"},{"lineNumber":7,"author":{"gitId":"averliz"},"content":"        this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":""},{"lineNumber":10,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":""},{"lineNumber":12,"author":{"gitId":"averliz"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"averliz"},"content":"        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"},{"lineNumber":14,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"averliz"},"content":""},{"lineNumber":16,"author":{"gitId":"averliz"},"content":"    public String getDescription() {"},{"lineNumber":17,"author":{"gitId":"averliz"},"content":"        return description;"},{"lineNumber":18,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"averliz"},"content":""},{"lineNumber":20,"author":{"gitId":"averliz"},"content":"    public void setDescription(String description) {"},{"lineNumber":21,"author":{"gitId":"averliz"},"content":"        this.description \u003d description;"},{"lineNumber":22,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"averliz"},"content":""},{"lineNumber":24,"author":{"gitId":"averliz"},"content":"    public boolean isDone() {"},{"lineNumber":25,"author":{"gitId":"averliz"},"content":"        return isDone;"},{"lineNumber":26,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"averliz"},"content":""},{"lineNumber":28,"author":{"gitId":"averliz"},"content":"    public void setDone(boolean done) {"},{"lineNumber":29,"author":{"gitId":"averliz"},"content":"        isDone \u003d done;"},{"lineNumber":30,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":31}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"averliz"},"content":"public class Todo extends Task{"},{"lineNumber":2,"author":{"gitId":"averliz"},"content":""},{"lineNumber":3,"author":{"gitId":"averliz"},"content":"    public Todo(String description) {"},{"lineNumber":4,"author":{"gitId":"averliz"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"averliz"},"content":""},{"lineNumber":7,"author":{"gitId":"averliz"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"averliz"},"content":"    public String getStatusIcon() {"},{"lineNumber":9,"author":{"gitId":"averliz"},"content":"        return (isDone ? \"[T][\\u2713]\" : \"[T][\\u2718]\"); //return tick or X symbols"},{"lineNumber":10,"author":{"gitId":"averliz"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"averliz"},"content":""},{"lineNumber":12,"author":{"gitId":"averliz"},"content":"}"}],"authorContributionMap":{"averliz":12}}]
