[{"path":"src/main/java/duke/DeadLines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoviYeung92"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":3,"author":{"gitId":"JoviYeung92"},"content":"public class DeadLines extends Task{"},{"lineNumber":4,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":5,"author":{"gitId":"JoviYeung92"},"content":"    private String by;"},{"lineNumber":6,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":7,"author":{"gitId":"JoviYeung92"},"content":"    public DeadLines(String task, String by) {"},{"lineNumber":8,"author":{"gitId":"JoviYeung92"},"content":"        super(task);"},{"lineNumber":9,"author":{"gitId":"JoviYeung92"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":12,"author":{"gitId":"JoviYeung92"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"JoviYeung92"},"content":"    public void printStatus() {"},{"lineNumber":14,"author":{"gitId":"JoviYeung92"},"content":"        System.out.print(\"[D]\");"},{"lineNumber":15,"author":{"gitId":"JoviYeung92"},"content":"        super.printStatus();"},{"lineNumber":16,"author":{"gitId":"JoviYeung92"},"content":"        System.out.println(\"(by: \"+by+\")\");"},{"lineNumber":17,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JoviYeung92"},"content":"}"}],"authorContributionMap":{"JoviYeung92":18}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoviYeung92"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":3,"author":{"gitId":"JoviYeung92"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JoviYeung92"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":6,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":7,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":10,"author":{"gitId":"JoviYeung92"},"content":"    //to store the sentence"},{"lineNumber":11,"author":{"gitId":"JoviYeung92"},"content":"    private static String line;"},{"lineNumber":12,"author":{"gitId":"JoviYeung92"},"content":"    //to keep track of the number of task"},{"lineNumber":13,"author":{"gitId":"JoviYeung92"},"content":"    public static int count \u003d 0;"},{"lineNumber":14,"author":{"gitId":"JoviYeung92"},"content":"    private static Scanner in \u003d new Scanner(System.in);"},{"lineNumber":15,"author":{"gitId":"JoviYeung92"},"content":"    //Array of object"},{"lineNumber":16,"author":{"gitId":"JoviYeung92"},"content":"    public static Task[] tasks \u003d new Task[100];"},{"lineNumber":17,"author":{"gitId":"JoviYeung92"},"content":"    //Array list to store the task objects"},{"lineNumber":18,"author":{"gitId":"JoviYeung92"},"content":"    public static ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":19,"author":{"gitId":"JoviYeung92"},"content":"    //to store all the task in string and write to file"},{"lineNumber":20,"author":{"gitId":"JoviYeung92"},"content":"    public static ArrayList\u003cString\u003e taskSentences \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":21,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":22,"author":{"gitId":"JoviYeung92"},"content":"    public static void main(String[] args) throws DukeException {"},{"lineNumber":23,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":24,"author":{"gitId":"JoviYeung92"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can i do for you?\\n\");"},{"lineNumber":25,"author":{"gitId":"JoviYeung92"},"content":"        Read.readFile(); //before starting read task from the files first"},{"lineNumber":26,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":27,"author":{"gitId":"JoviYeung92"},"content":"        while(true){"},{"lineNumber":28,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":29,"author":{"gitId":"JoviYeung92"},"content":"            line \u003d in.nextLine();"},{"lineNumber":30,"author":{"gitId":"JoviYeung92"},"content":"            try {"},{"lineNumber":31,"author":{"gitId":"JoviYeung92"},"content":"                if(!(line.contains(\"bye\")||line.contains(\"todo\")||line.contains(\"deadline\")||line.contains(\"event\")"},{"lineNumber":32,"author":{"gitId":"JoviYeung92"},"content":"                        ||line.contains(\"list\")||line.contains(\"done\")||line.contains(\"delete\"))){"},{"lineNumber":33,"author":{"gitId":"JoviYeung92"},"content":"                    throw new DukeException();"},{"lineNumber":34,"author":{"gitId":"JoviYeung92"},"content":"                }"},{"lineNumber":35,"author":{"gitId":"JoviYeung92"},"content":"                if (line.equals(\"bye\")) {"},{"lineNumber":36,"author":{"gitId":"JoviYeung92"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\\n\");"},{"lineNumber":37,"author":{"gitId":"JoviYeung92"},"content":"                    break;"},{"lineNumber":38,"author":{"gitId":"JoviYeung92"},"content":"                } else if (line.contains(\"todo\")) {"},{"lineNumber":39,"author":{"gitId":"JoviYeung92"},"content":"                    try {"},{"lineNumber":40,"author":{"gitId":"JoviYeung92"},"content":"                        if (line.length() \u003d\u003d 4) {"},{"lineNumber":41,"author":{"gitId":"JoviYeung92"},"content":"                            throw new DukeException();"},{"lineNumber":42,"author":{"gitId":"JoviYeung92"},"content":"                        }"},{"lineNumber":43,"author":{"gitId":"JoviYeung92"},"content":"                        String task \u003d line.substring(5, line.length());"},{"lineNumber":44,"author":{"gitId":"JoviYeung92"},"content":"                        tasks[count] \u003d new ToDos(task);"},{"lineNumber":45,"author":{"gitId":"JoviYeung92"},"content":"                        taskArrayList.add(tasks[count]); //store in array list for deleting"},{"lineNumber":46,"author":{"gitId":"JoviYeung92"},"content":"                        taskSentences.add(\"T\"+\"|\"+tasks[count].getDone()+\"|\"+task); //store in array list for writing"},{"lineNumber":47,"author":{"gitId":"JoviYeung92"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task\");"},{"lineNumber":48,"author":{"gitId":"JoviYeung92"},"content":"                        System.out.print(\"  \");"},{"lineNumber":49,"author":{"gitId":"JoviYeung92"},"content":"                        tasks[count++].printStatus();"},{"lineNumber":50,"author":{"gitId":"JoviYeung92"},"content":"                        System.out.println(\"Now you have \" + count + \" tasks in the list\");"},{"lineNumber":51,"author":{"gitId":"JoviYeung92"},"content":"                        Write.writeFile(); // update file"},{"lineNumber":52,"author":{"gitId":"JoviYeung92"},"content":"                    } catch (DukeException e) {"},{"lineNumber":53,"author":{"gitId":"JoviYeung92"},"content":"                        System.out.println(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":54,"author":{"gitId":"JoviYeung92"},"content":"                    }"},{"lineNumber":55,"author":{"gitId":"JoviYeung92"},"content":"                } else if (line.contains(\"deadline\")) {"},{"lineNumber":56,"author":{"gitId":"JoviYeung92"},"content":"                    String task \u003d line.substring(9, line.indexOf(\"/\")-1);"},{"lineNumber":57,"author":{"gitId":"JoviYeung92"},"content":"                    String by \u003d line.substring(line.indexOf(\"/\") + 4, line.length());"},{"lineNumber":58,"author":{"gitId":"JoviYeung92"},"content":"                    tasks[count] \u003d new DeadLines(task, by);"},{"lineNumber":59,"author":{"gitId":"JoviYeung92"},"content":"                    taskArrayList.add(tasks[count]); //store in array for deleting"},{"lineNumber":60,"author":{"gitId":"JoviYeung92"},"content":"                    taskSentences.add(\"D\"+\"|\"+tasks[count].getDone()+\"|\"+task+\"|\"+by); //store in array list for writing"},{"lineNumber":61,"author":{"gitId":"JoviYeung92"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":62,"author":{"gitId":"JoviYeung92"},"content":"                    System.out.print(\"  \");"},{"lineNumber":63,"author":{"gitId":"JoviYeung92"},"content":"                    tasks[count++].printStatus();"},{"lineNumber":64,"author":{"gitId":"JoviYeung92"},"content":"                    System.out.println(\"Now you have \" + count + \" tasks in the list\");"},{"lineNumber":65,"author":{"gitId":"JoviYeung92"},"content":"                    Write.writeFile();"},{"lineNumber":66,"author":{"gitId":"JoviYeung92"},"content":"                } else if (line.contains(\"event\")) {"},{"lineNumber":67,"author":{"gitId":"JoviYeung92"},"content":"                    String task \u003d line.substring(6, line.indexOf(\"/\")-1);"},{"lineNumber":68,"author":{"gitId":"JoviYeung92"},"content":"                    String by \u003d line.substring(line.indexOf(\"/\") + 4, line.length());"},{"lineNumber":69,"author":{"gitId":"JoviYeung92"},"content":"                    tasks[count] \u003d new Events(task, by);"},{"lineNumber":70,"author":{"gitId":"JoviYeung92"},"content":"                    taskArrayList.add(tasks[count]); //store in task array list"},{"lineNumber":71,"author":{"gitId":"JoviYeung92"},"content":"                    taskSentences.add(\"E\"+\"|\"+tasks[count].getDone()+\"|\"+task+\"|\"+by); //store in array list for writing"},{"lineNumber":72,"author":{"gitId":"JoviYeung92"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":73,"author":{"gitId":"JoviYeung92"},"content":"                    System.out.print(\"  \");"},{"lineNumber":74,"author":{"gitId":"JoviYeung92"},"content":"                    tasks[count++].printStatus();"},{"lineNumber":75,"author":{"gitId":"JoviYeung92"},"content":"                    System.out.println(\"Now you have \" + count + \" tasks in the list:\");"},{"lineNumber":76,"author":{"gitId":"JoviYeung92"},"content":"                    Write.writeFile(); //update file"},{"lineNumber":77,"author":{"gitId":"JoviYeung92"},"content":"                } else if (line.contains(\"list\")) {"},{"lineNumber":78,"author":{"gitId":"JoviYeung92"},"content":"                    for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {"},{"lineNumber":79,"author":{"gitId":"JoviYeung92"},"content":"                        System.out.print(i + 1 + \".\");"},{"lineNumber":80,"author":{"gitId":"JoviYeung92"},"content":"                        taskArrayList.get(i).printStatus();"},{"lineNumber":81,"author":{"gitId":"JoviYeung92"},"content":"                    }"},{"lineNumber":82,"author":{"gitId":"JoviYeung92"},"content":"                } else if (line.contains(\"done\")) {"},{"lineNumber":83,"author":{"gitId":"JoviYeung92"},"content":"                    String text;"},{"lineNumber":84,"author":{"gitId":"JoviYeung92"},"content":"                    int index \u003d Integer.parseInt(line.substring(5, line.length()));"},{"lineNumber":85,"author":{"gitId":"JoviYeung92"},"content":"                    tasks[index - 1].setDone(true);"},{"lineNumber":86,"author":{"gitId":"JoviYeung92"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":87,"author":{"gitId":"JoviYeung92"},"content":"                    tasks[index - 1].printStatus();"},{"lineNumber":88,"author":{"gitId":"JoviYeung92"},"content":"                    text \u003d taskSentences.get(index-1);"},{"lineNumber":89,"author":{"gitId":"JoviYeung92"},"content":"                    text \u003d text.replace(\"false\",\"true\");"},{"lineNumber":90,"author":{"gitId":"JoviYeung92"},"content":"                    taskSentences.set(index-1,text); //rewrite and update the status"},{"lineNumber":91,"author":{"gitId":"JoviYeung92"},"content":"                    Write.writeFile(); //update file"},{"lineNumber":92,"author":{"gitId":"JoviYeung92"},"content":"                } else if (line.contains(\"delete\")){"},{"lineNumber":93,"author":{"gitId":"JoviYeung92"},"content":"                    int index \u003d Integer.parseInt(line.substring(7, line.length()));"},{"lineNumber":94,"author":{"gitId":"JoviYeung92"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":95,"author":{"gitId":"JoviYeung92"},"content":"                    taskArrayList.get(index - 1).printStatus(); //print the task to be remove before delete"},{"lineNumber":96,"author":{"gitId":"JoviYeung92"},"content":"                    taskArrayList.remove(index-1); //remove obj"},{"lineNumber":97,"author":{"gitId":"JoviYeung92"},"content":"                    taskSentences.remove(index-1); //remove sentence from file"},{"lineNumber":98,"author":{"gitId":"JoviYeung92"},"content":"                    count \u003d count - 1; //update count value after deleting"},{"lineNumber":99,"author":{"gitId":"JoviYeung92"},"content":"                    System.out.println(\"Now you have \"+ taskArrayList.size() +\" tasks in the list.\");"},{"lineNumber":100,"author":{"gitId":"JoviYeung92"},"content":"                    Write.writeFile(); //update file"},{"lineNumber":101,"author":{"gitId":"JoviYeung92"},"content":"                }"},{"lineNumber":102,"author":{"gitId":"JoviYeung92"},"content":"            }catch(DukeException e){"},{"lineNumber":103,"author":{"gitId":"JoviYeung92"},"content":"                System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":104,"author":{"gitId":"JoviYeung92"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"JoviYeung92":104,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoviYeung92"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":3,"author":{"gitId":"JoviYeung92"},"content":"public class DukeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"JoviYeung92"},"content":"    //catching errors for unrecognized input and empty todo"},{"lineNumber":5,"author":{"gitId":"JoviYeung92"},"content":"}"}],"authorContributionMap":{"JoviYeung92":5}},{"path":"src/main/java/duke/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoviYeung92"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":3,"author":{"gitId":"JoviYeung92"},"content":"public class Events extends Task{"},{"lineNumber":4,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":5,"author":{"gitId":"JoviYeung92"},"content":"    private String by;"},{"lineNumber":6,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":7,"author":{"gitId":"JoviYeung92"},"content":"    public Events(String task,String by){"},{"lineNumber":8,"author":{"gitId":"JoviYeung92"},"content":"        super(task);"},{"lineNumber":9,"author":{"gitId":"JoviYeung92"},"content":"        this.by\u003dby;"},{"lineNumber":10,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":12,"author":{"gitId":"JoviYeung92"},"content":"    public void printStatus() {"},{"lineNumber":13,"author":{"gitId":"JoviYeung92"},"content":"        System.out.print(\"[E]\");"},{"lineNumber":14,"author":{"gitId":"JoviYeung92"},"content":"        super.printStatus();"},{"lineNumber":15,"author":{"gitId":"JoviYeung92"},"content":"        System.out.println(\"(at: \"+by+\")\");"},{"lineNumber":16,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"JoviYeung92"},"content":"}"}],"authorContributionMap":{"JoviYeung92":17}},{"path":"src/main/java/duke/Read.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoviYeung92"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":3,"author":{"gitId":"JoviYeung92"},"content":"import java.io.*;"},{"lineNumber":4,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":5,"author":{"gitId":"JoviYeung92"},"content":"public class Read extends Duke{"},{"lineNumber":6,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":7,"author":{"gitId":"JoviYeung92"},"content":"    static String home \u003d System.getProperty(\"user.home\");"},{"lineNumber":8,"author":{"gitId":"JoviYeung92"},"content":"    static String sentence;"},{"lineNumber":9,"author":{"gitId":"JoviYeung92"},"content":"    static String[] words;"},{"lineNumber":10,"author":{"gitId":"JoviYeung92"},"content":"    public Read(){"},{"lineNumber":11,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":13,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":14,"author":{"gitId":"JoviYeung92"},"content":"    public static void readFile(){"},{"lineNumber":15,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":16,"author":{"gitId":"JoviYeung92"},"content":"        try{"},{"lineNumber":17,"author":{"gitId":"JoviYeung92"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(home+\"/tasklist.txt\")); //Read from this file"},{"lineNumber":18,"author":{"gitId":"JoviYeung92"},"content":"            while((sentence\u003dbr.readLine())!\u003dnull){"},{"lineNumber":19,"author":{"gitId":"JoviYeung92"},"content":"                words \u003d sentence.split(\"\\\\|\");"},{"lineNumber":20,"author":{"gitId":"JoviYeung92"},"content":"                switch(words[0]){"},{"lineNumber":21,"author":{"gitId":"JoviYeung92"},"content":"                    case \"T\":"},{"lineNumber":22,"author":{"gitId":"JoviYeung92"},"content":"                        tasks[count] \u003d new ToDos(words[2]); //create new todo object"},{"lineNumber":23,"author":{"gitId":"JoviYeung92"},"content":"                        taskArrayList.add(tasks[count]);   //add todo object to arraylist"},{"lineNumber":24,"author":{"gitId":"JoviYeung92"},"content":"                        taskSentences.add(\"T\"+\"|\"+words[1]+\"|\"+words[2]); //update the task array list"},{"lineNumber":25,"author":{"gitId":"JoviYeung92"},"content":"                        if(words[1].equals(\"true\")){     //if read from file is done set the object as done"},{"lineNumber":26,"author":{"gitId":"JoviYeung92"},"content":"                            tasks[count].setDone(true);"},{"lineNumber":27,"author":{"gitId":"JoviYeung92"},"content":"                        }"},{"lineNumber":28,"author":{"gitId":"JoviYeung92"},"content":"                        count++;                          //increment count"},{"lineNumber":29,"author":{"gitId":"JoviYeung92"},"content":"                        break;"},{"lineNumber":30,"author":{"gitId":"JoviYeung92"},"content":"                    case \"D\":"},{"lineNumber":31,"author":{"gitId":"JoviYeung92"},"content":"                        tasks[count] \u003d new DeadLines(words[2],words[3]); //create new deadline object"},{"lineNumber":32,"author":{"gitId":"JoviYeung92"},"content":"                        taskArrayList.add(tasks[count]);   //add deadline object to arraylist"},{"lineNumber":33,"author":{"gitId":"JoviYeung92"},"content":"                        taskSentences.add(\"D\"+\"|\"+words[1]+\"|\"+words[2]+words[3]); //update the task array list"},{"lineNumber":34,"author":{"gitId":"JoviYeung92"},"content":"                        if(words[1].equals(\"true\")){     //if read from file is done set the object as done"},{"lineNumber":35,"author":{"gitId":"JoviYeung92"},"content":"                            tasks[count].setDone(true);"},{"lineNumber":36,"author":{"gitId":"JoviYeung92"},"content":"                        }"},{"lineNumber":37,"author":{"gitId":"JoviYeung92"},"content":"                        count++;                          //increment count"},{"lineNumber":38,"author":{"gitId":"JoviYeung92"},"content":"                        break;"},{"lineNumber":39,"author":{"gitId":"JoviYeung92"},"content":"                    case \"E\":"},{"lineNumber":40,"author":{"gitId":"JoviYeung92"},"content":"                        tasks[count] \u003d new Events(words[2],words[3]); //create new events object"},{"lineNumber":41,"author":{"gitId":"JoviYeung92"},"content":"                        taskArrayList.add(tasks[count]);   //add event object to arraylist"},{"lineNumber":42,"author":{"gitId":"JoviYeung92"},"content":"                        taskSentences.add(\"E\"+\"|\"+words[1]+\"|\"+words[2]+words[3]); //update the task array list"},{"lineNumber":43,"author":{"gitId":"JoviYeung92"},"content":"                        if(words[1].equals(\"true\")){     //if read from file is done set the object as done"},{"lineNumber":44,"author":{"gitId":"JoviYeung92"},"content":"                            tasks[count].setDone(true);"},{"lineNumber":45,"author":{"gitId":"JoviYeung92"},"content":"                        }"},{"lineNumber":46,"author":{"gitId":"JoviYeung92"},"content":"                        count++;                          //increment count"},{"lineNumber":47,"author":{"gitId":"JoviYeung92"},"content":"                        break;"},{"lineNumber":48,"author":{"gitId":"JoviYeung92"},"content":"                }"},{"lineNumber":49,"author":{"gitId":"JoviYeung92"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":51,"author":{"gitId":"JoviYeung92"},"content":"        }catch(Exception ex){"},{"lineNumber":52,"author":{"gitId":"JoviYeung92"},"content":"            System.out.println(\"No file at the moment\");"},{"lineNumber":53,"author":{"gitId":"JoviYeung92"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":55,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"JoviYeung92"},"content":"}"},{"lineNumber":57,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":58,"author":{"gitId":"JoviYeung92"},"content":""}],"authorContributionMap":{"JoviYeung92":58}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoviYeung92"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":3,"author":{"gitId":"JoviYeung92"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":5,"author":{"gitId":"JoviYeung92"},"content":"    private final String taskName;"},{"lineNumber":6,"author":{"gitId":"JoviYeung92"},"content":"    private boolean isDone;"},{"lineNumber":7,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":8,"author":{"gitId":"JoviYeung92"},"content":"    public Task(String task){"},{"lineNumber":9,"author":{"gitId":"JoviYeung92"},"content":"        this.taskName \u003d task;"},{"lineNumber":10,"author":{"gitId":"JoviYeung92"},"content":"        setDone(false);"},{"lineNumber":11,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":13,"author":{"gitId":"JoviYeung92"},"content":"    public void setDone(boolean isDone){"},{"lineNumber":14,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":15,"author":{"gitId":"JoviYeung92"},"content":"        this.isDone\u003disDone;"},{"lineNumber":16,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":18,"author":{"gitId":"JoviYeung92"},"content":"    public String getName(){"},{"lineNumber":19,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":20,"author":{"gitId":"JoviYeung92"},"content":"        return this.taskName;"},{"lineNumber":21,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":23,"author":{"gitId":"JoviYeung92"},"content":"    public boolean getDone(){"},{"lineNumber":24,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":25,"author":{"gitId":"JoviYeung92"},"content":"        return isDone;"},{"lineNumber":26,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":28,"author":{"gitId":"JoviYeung92"},"content":"    public void printStatus(){"},{"lineNumber":29,"author":{"gitId":"JoviYeung92"},"content":"        if(getDone()){"},{"lineNumber":30,"author":{"gitId":"JoviYeung92"},"content":"            System.out.print(\"[\"+\"\\u2713\"+\"] \"+getName());"},{"lineNumber":31,"author":{"gitId":"JoviYeung92"},"content":"        }else{"},{"lineNumber":32,"author":{"gitId":"JoviYeung92"},"content":"            System.out.print(\"[\"+\" \"+\"] \"+getName());"},{"lineNumber":33,"author":{"gitId":"JoviYeung92"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"JoviYeung92"},"content":"}"}],"authorContributionMap":{"JoviYeung92":35}},{"path":"src/main/java/duke/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoviYeung92"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":3,"author":{"gitId":"JoviYeung92"},"content":"public class ToDos extends Task{"},{"lineNumber":4,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":5,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":6,"author":{"gitId":"JoviYeung92"},"content":"    public ToDos(String task){"},{"lineNumber":7,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":8,"author":{"gitId":"JoviYeung92"},"content":"        super(task);"},{"lineNumber":9,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":11,"author":{"gitId":"JoviYeung92"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"JoviYeung92"},"content":"    public void printStatus() {"},{"lineNumber":13,"author":{"gitId":"JoviYeung92"},"content":"        System.out.print(\"[T]\");"},{"lineNumber":14,"author":{"gitId":"JoviYeung92"},"content":"        super.printStatus();"},{"lineNumber":15,"author":{"gitId":"JoviYeung92"},"content":"        System.out.print(\"\\n\");"},{"lineNumber":16,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"JoviYeung92"},"content":"}"}],"authorContributionMap":{"JoviYeung92":17}},{"path":"src/main/java/duke/Write.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoviYeung92"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"JoviYeung92"},"content":"import java.io.*;"},{"lineNumber":3,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":4,"author":{"gitId":"JoviYeung92"},"content":"public class Write extends Duke {"},{"lineNumber":5,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":6,"author":{"gitId":"JoviYeung92"},"content":"    static String home \u003d System.getProperty(\"user.home\");"},{"lineNumber":7,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":8,"author":{"gitId":"JoviYeung92"},"content":"    public Write(){"},{"lineNumber":9,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":11,"author":{"gitId":"JoviYeung92"},"content":"    public static void writeFile(){"},{"lineNumber":12,"author":{"gitId":"JoviYeung92"},"content":"        try{"},{"lineNumber":13,"author":{"gitId":"JoviYeung92"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(home+\"/tasklist.txt\")); //write to this file"},{"lineNumber":14,"author":{"gitId":"JoviYeung92"},"content":"            for(String s:taskSentences){"},{"lineNumber":15,"author":{"gitId":"JoviYeung92"},"content":"                bw.write(s+\"\\n\");"},{"lineNumber":16,"author":{"gitId":"JoviYeung92"},"content":"            }"},{"lineNumber":17,"author":{"gitId":"JoviYeung92"},"content":"            bw.close();"},{"lineNumber":18,"author":{"gitId":"JoviYeung92"},"content":"        }catch(Exception ex){"},{"lineNumber":19,"author":{"gitId":"JoviYeung92"},"content":"            System.out.println(\"Error writing to file\");"},{"lineNumber":20,"author":{"gitId":"JoviYeung92"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":23,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":24,"author":{"gitId":"JoviYeung92"},"content":"}"}],"authorContributionMap":{"JoviYeung92":24}}]
