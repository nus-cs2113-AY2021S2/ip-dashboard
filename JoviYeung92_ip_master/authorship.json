[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"JoviYeung92"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"JoviYeung92"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":11,"author":{"gitId":"JoviYeung92"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"JoviYeung92"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"JoviYeung92"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"JoviYeung92"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"JoviYeung92"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"JoviYeung92":9,"-":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoviYeung92"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":6,"author":{"gitId":"JoviYeung92"},"content":"        String line;"},{"lineNumber":7,"author":{"gitId":"JoviYeung92"},"content":"        String []word \u003d new String[2];"},{"lineNumber":8,"author":{"gitId":"JoviYeung92"},"content":"        String []list\u003d new String[100];"},{"lineNumber":9,"author":{"gitId":"JoviYeung92"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":10,"author":{"gitId":"JoviYeung92"},"content":"        int counter \u003d 0;"},{"lineNumber":11,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":12,"author":{"gitId":"JoviYeung92"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can i do for you?\\n\");"},{"lineNumber":13,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":14,"author":{"gitId":"JoviYeung92"},"content":"        while(true) {"},{"lineNumber":15,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":16,"author":{"gitId":"JoviYeung92"},"content":"            line \u003d in.nextLine();"},{"lineNumber":17,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":18,"author":{"gitId":"JoviYeung92"},"content":"            if(line.equals(\"bye\")){"},{"lineNumber":19,"author":{"gitId":"JoviYeung92"},"content":"                break;"},{"lineNumber":20,"author":{"gitId":"JoviYeung92"},"content":"            }"},{"lineNumber":21,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":22,"author":{"gitId":"JoviYeung92"},"content":"            else if(line.equals(\"list\")){"},{"lineNumber":23,"author":{"gitId":"JoviYeung92"},"content":"                new Task().printList(); //print list"},{"lineNumber":24,"author":{"gitId":"JoviYeung92"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"JoviYeung92"},"content":"            else if(line.contains(\"done\")){"},{"lineNumber":26,"author":{"gitId":"JoviYeung92"},"content":"                String [] words \u003d line.split(\" \"); //spilt the word to get the number"},{"lineNumber":27,"author":{"gitId":"JoviYeung92"},"content":"                int index \u003d Integer.parseInt(words[words.length-1]); //get the number"},{"lineNumber":28,"author":{"gitId":"JoviYeung92"},"content":"                new Task().MarkAsDone(index-1);"},{"lineNumber":29,"author":{"gitId":"JoviYeung92"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"JoviYeung92"},"content":"            else {"},{"lineNumber":31,"author":{"gitId":"JoviYeung92"},"content":"                new Task().addTask(line); //add task"},{"lineNumber":32,"author":{"gitId":"JoviYeung92"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"JoviYeung92"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"JoviYeung92"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\");"},{"lineNumber":35,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"JoviYeung92":33,"-":4}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoviYeung92"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":3,"author":{"gitId":"JoviYeung92"},"content":"    protected static String[] tasks \u003d new String[100];//track tasks"},{"lineNumber":4,"author":{"gitId":"JoviYeung92"},"content":"    protected static boolean[] status \u003d new boolean[100]; //track status"},{"lineNumber":5,"author":{"gitId":"JoviYeung92"},"content":"    protected static int count \u003d 0; //keep track of number"},{"lineNumber":6,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":7,"author":{"gitId":"JoviYeung92"},"content":"    public void addTask(String description) { //initialization"},{"lineNumber":8,"author":{"gitId":"JoviYeung92"},"content":"        tasks[count] \u003d description; //store into the string arr"},{"lineNumber":9,"author":{"gitId":"JoviYeung92"},"content":"        status[count] \u003d false;  //set the count to false initially"},{"lineNumber":10,"author":{"gitId":"JoviYeung92"},"content":"        System.out.println(\"added: \"+tasks[count]);"},{"lineNumber":11,"author":{"gitId":"JoviYeung92"},"content":"        count++;"},{"lineNumber":12,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":14,"author":{"gitId":"JoviYeung92"},"content":"    public void printList(){"},{"lineNumber":15,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":16,"author":{"gitId":"JoviYeung92"},"content":"        for(int i\u003d0;i\u003ccount;i++){"},{"lineNumber":17,"author":{"gitId":"JoviYeung92"},"content":"            System.out.println((i+1)+\". \" +\"[\"+getStatusIcon(i)+\"]\"+tasks[i]);"},{"lineNumber":18,"author":{"gitId":"JoviYeung92"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":20,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":22,"author":{"gitId":"JoviYeung92"},"content":"    public String getStatusIcon(int index) {"},{"lineNumber":23,"author":{"gitId":"JoviYeung92"},"content":"        return (status[index] ? \"\\u2713\" : \"\\u2718\"); //return tick or X"},{"lineNumber":24,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JoviYeung92"},"content":""},{"lineNumber":26,"author":{"gitId":"JoviYeung92"},"content":"    public void MarkAsDone(int index){"},{"lineNumber":27,"author":{"gitId":"JoviYeung92"},"content":"        status[index] \u003d true; //mark as done"},{"lineNumber":28,"author":{"gitId":"JoviYeung92"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\"+\"[\"+getStatusIcon(index)+\"]\"+\" \"+tasks[index]);"},{"lineNumber":29,"author":{"gitId":"JoviYeung92"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"JoviYeung92"},"content":"}"}],"authorContributionMap":{"JoviYeung92":30}}]
