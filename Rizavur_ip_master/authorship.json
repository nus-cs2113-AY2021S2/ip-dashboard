[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"ip is a desktop app for managing tasks, optimized for use via a Command Line Interface (CLI). Duke is a versatile task manager and it is able to manage various types of tasks that you may want to keep track of."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"1. [Quick start](#quick-start)"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"2. [Features](#features)"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"   * [Viewing help](#viewing-help)"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"   * [Adding a todo task](#adding-a-todo-task)"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"   * [Adding a deadline](#adding-a-deadline)"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"   * [Adding an event](#adding-an-event)"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"   * [Marking a task as done](#marking-a-task-as-done)"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"   * [Listing all tasks](#listing-all-tasks)"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"   * [Deleting a task](#deleting-a-task)"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"   * [Searching for tasks by a keyword](#searching-for-tasks-by-a-keyword)"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"   * [Exit](#exit)"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"3. [Command summary](#command-summary)"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"---"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"## Quick start"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"1. Ensure that you have Java 11 or above installed in your computer."},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"2. Download the latest version of [ip.jar] from here."},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"3. Copy the file to the folder you want to use as the home folder for your ip."},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"4. Double-click the file to start the app. A terminal console similar to the below should appear in a few seconds.    "},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"   ![Screenshot 2021-03-02 at 12 34 35 AM](https://user-images.githubusercontent.com/60348727/109528031-4185eb00-7aef-11eb-9f0b-270c2e2cae8e.png)"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing help and pressing Enter will open the help window.  "},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"   Some example commands you can try:"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"   * `list`: Lists all tasks."},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"   * `deadline submit coding assignment /by Monday night`: Add a deadline to submit coding assignment by Monday night."},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"   * `delete 1`: Deletes the first task shown in the current list."},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"   * `bye`: Exits the app."},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"6. Refer to the [Features](#features) below for details of each command.  "},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"---"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":"### Viewing help"},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"### `help`  "},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"Shows a message with the format of possible commands that ip can handle.  "},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"Outcome:  "},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"![Screenshot 2021-03-02 at 12 59 43 AM](https://user-images.githubusercontent.com/60348727/109531210-9414d680-7af2-11eb-848b-f5f04c8bbd62.png)  "},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"Format: `help`"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"### Adding a todo task  "},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"### `todo`  "},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"Adds a todo task to the tasks list.   "},{"lineNumber":48,"author":{"gitId":"Rizavur"},"content":"Example: `todo make coffee`  "},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"Outcome:  "},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":"![Screenshot 2021-03-02 at 1 35 34 AM](https://user-images.githubusercontent.com/60348727/109535483-96c5fa80-7af7-11eb-8623-2b3393f1c3c7.png)  "},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"Format: `todo TASK_DESCRIPTION`  "},{"lineNumber":52,"author":{"gitId":"Rizavur"},"content":"* Note that a todo task is marked with a [T]"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"### Adding a deadline  "},{"lineNumber":55,"author":{"gitId":"Rizavur"},"content":"### `deadline`  "},{"lineNumber":56,"author":{"gitId":"Rizavur"},"content":"Adds a deadline to the tasks list.  "},{"lineNumber":57,"author":{"gitId":"Rizavur"},"content":"Example: `deadline finish project /by monday`  "},{"lineNumber":58,"author":{"gitId":"Rizavur"},"content":"Outcome:  "},{"lineNumber":59,"author":{"gitId":"Rizavur"},"content":"![Screenshot 2021-03-02 at 1 36 45 AM](https://user-images.githubusercontent.com/60348727/109535636-c07f2180-7af7-11eb-839f-114d3efa6048.png)  "},{"lineNumber":60,"author":{"gitId":"Rizavur"},"content":"Format: `deadline TASK_DESCRIPTION /by WHEN`  "},{"lineNumber":61,"author":{"gitId":"Rizavur"},"content":"* Note that a deadline is marked with a [D]"},{"lineNumber":62,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":63,"author":{"gitId":"Rizavur"},"content":"### Adding an event  "},{"lineNumber":64,"author":{"gitId":"Rizavur"},"content":"### `event`  "},{"lineNumber":65,"author":{"gitId":"Rizavur"},"content":"Adds an event to the tasks list.  "},{"lineNumber":66,"author":{"gitId":"Rizavur"},"content":"Example: `event important meeting /at tuesday morning`  "},{"lineNumber":67,"author":{"gitId":"Rizavur"},"content":"Outcome:  "},{"lineNumber":68,"author":{"gitId":"Rizavur"},"content":"![Screenshot 2021-03-02 at 1 37 22 AM](https://user-images.githubusercontent.com/60348727/109535714-d68ce200-7af7-11eb-9c11-a8c011dc8fa0.png)  "},{"lineNumber":69,"author":{"gitId":"Rizavur"},"content":"Format: `event TASK_DESCRIPTION /at WHEN`  "},{"lineNumber":70,"author":{"gitId":"Rizavur"},"content":"* Note that an event is marked with a [E]"},{"lineNumber":71,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":72,"author":{"gitId":"Rizavur"},"content":"### Marking a task as done  "},{"lineNumber":73,"author":{"gitId":"Rizavur"},"content":"### `done`  "},{"lineNumber":74,"author":{"gitId":"Rizavur"},"content":"Marks the specified task as done.  "},{"lineNumber":75,"author":{"gitId":"Rizavur"},"content":"Example: `done 2`  "},{"lineNumber":76,"author":{"gitId":"Rizavur"},"content":"Outcome:  "},{"lineNumber":77,"author":{"gitId":"Rizavur"},"content":"![Screenshot 2021-03-02 at 1 38 08 AM](https://user-images.githubusercontent.com/60348727/109535818-f2908380-7af7-11eb-82db-d6b7c3f578bd.png)  "},{"lineNumber":78,"author":{"gitId":"Rizavur"},"content":"Format: `done TASK_NUMBER` "},{"lineNumber":79,"author":{"gitId":"Rizavur"},"content":"* Note that the [✘] has changed to [✓] for the specified task"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"Rizavur"},"content":"### Listing all tasks"},{"lineNumber":82,"author":{"gitId":"Rizavur"},"content":"### `list`  "},{"lineNumber":83,"author":{"gitId":"Rizavur"},"content":"Lists all tasks.  "},{"lineNumber":84,"author":{"gitId":"Rizavur"},"content":"Outcome:  "},{"lineNumber":85,"author":{"gitId":"Rizavur"},"content":"![Screenshot 2021-03-02 at 1 38 39 AM](https://user-images.githubusercontent.com/60348727/109535874-050abd00-7af8-11eb-99e6-2ee01e6afd58.png)  "},{"lineNumber":86,"author":{"gitId":"Rizavur"},"content":"Format: `list`"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"Rizavur"},"content":"### Deleting a task  "},{"lineNumber":89,"author":{"gitId":"Rizavur"},"content":"### `delete`  "},{"lineNumber":90,"author":{"gitId":"Rizavur"},"content":"Deletes the specified task from the list.  "},{"lineNumber":91,"author":{"gitId":"Rizavur"},"content":"Example: `delete 1`  "},{"lineNumber":92,"author":{"gitId":"Rizavur"},"content":"Outcome:  "},{"lineNumber":93,"author":{"gitId":"Rizavur"},"content":"![Screenshot 2021-03-02 at 1 39 07 AM](https://user-images.githubusercontent.com/60348727/109535925-15bb3300-7af8-11eb-9e0b-0c0f101e7df3.png)  "},{"lineNumber":94,"author":{"gitId":"Rizavur"},"content":"Format: `delete TASK_NUMBER`"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"Rizavur"},"content":"### Searching for tasks by a keyword  "},{"lineNumber":97,"author":{"gitId":"Rizavur"},"content":"### `find`  "},{"lineNumber":98,"author":{"gitId":"Rizavur"},"content":"Finds all tasks that contain the specified keyword from the list.  "},{"lineNumber":99,"author":{"gitId":"Rizavur"},"content":"Example: `find important`  "},{"lineNumber":100,"author":{"gitId":"Rizavur"},"content":"Outcome:  "},{"lineNumber":101,"author":{"gitId":"Rizavur"},"content":"![Screenshot 2021-03-02 at 1 39 29 AM](https://user-images.githubusercontent.com/60348727/109535980-22d82200-7af8-11eb-86f5-c1ce6485a7e5.png)  "},{"lineNumber":102,"author":{"gitId":"Rizavur"},"content":"Format: `find KEYWORD`  "},{"lineNumber":103,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":104,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":105,"author":{"gitId":"Rizavur"},"content":"### Exit  "},{"lineNumber":106,"author":{"gitId":"Rizavur"},"content":"### `bye`"},{"lineNumber":107,"author":{"gitId":"Rizavur"},"content":"Exits the app."},{"lineNumber":108,"author":{"gitId":"Rizavur"},"content":"Outcome:  "},{"lineNumber":109,"author":{"gitId":"Rizavur"},"content":"![Screenshot 2021-03-02 at 10 47 13 AM](https://user-images.githubusercontent.com/60348727/109589064-b8999e80-7b44-11eb-88a6-13f8bceb85d7.png)  "},{"lineNumber":110,"author":{"gitId":"Rizavur"},"content":"Format: `bye`"},{"lineNumber":111,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":112,"author":{"gitId":"Rizavur"},"content":"---"},{"lineNumber":113,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":114,"author":{"gitId":"Rizavur"},"content":"## Command summary  "},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"Rizavur"},"content":"|  Commands  |               Format               |                      Example                    |"},{"lineNumber":117,"author":{"gitId":"Rizavur"},"content":"| ---------- | ---------------------------------- | ----------------------------------------------- |"},{"lineNumber":118,"author":{"gitId":"Rizavur"},"content":"| `help`     | help                               | -                                               |"},{"lineNumber":119,"author":{"gitId":"Rizavur"},"content":"| `todo`     | todo TASK_DESCRIPTION              | todo *make coffee*                              |"},{"lineNumber":120,"author":{"gitId":"Rizavur"},"content":"| `deadline` | deadline TASK_DESCRIPTION /by WHEN | deadline *finish project* /by *monday*          |"},{"lineNumber":121,"author":{"gitId":"Rizavur"},"content":"| `event`    | event TASK_DESCRIPTION /at WHEN    | event *important meeting* /at *tuesday morning* |"},{"lineNumber":122,"author":{"gitId":"Rizavur"},"content":"| `done`     | done TASK_NUMBER                   | done *2*                                        |"},{"lineNumber":123,"author":{"gitId":"Rizavur"},"content":"| `list`     | list                               | -                                               |"},{"lineNumber":124,"author":{"gitId":"Rizavur"},"content":"| `delete`   | delete TASK_NUMBER                 | delete *1*                                      |"},{"lineNumber":125,"author":{"gitId":"Rizavur"},"content":"| `find`     | find KEYWORD                       | find *important*                                |"},{"lineNumber":126,"author":{"gitId":"Rizavur"},"content":"| `bye`      | bye                                | -                                               |"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"Rizavur"},"content":"[ip.jar]: https://github.com/Rizavur/ip/releases/tag/A-Jar"}],"authorContributionMap":{"-":16,"Rizavur":112}},{"path":"src/main/java/CommandClasses/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package CommandClasses;"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"import ExceptionClasses.EmptyByOrAtWhenException;"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"import ExceptionClasses.EmptyTaskDescriptionException;"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"import ExceptionClasses.TooManyArgumentsException;"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"public class Command {"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"    private CommandEnum commandType;"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"    private String description;"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"    private String when;"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"    private Integer taskNum;"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"     * Constructor for the Command class."},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"     * @param userInput the input received from the user in the terminal."},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"    public Command(String userInput) {"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"            setCommandFromInput(userInput);"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"        } catch(EmptyByOrAtWhenException e) {"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"            System.out.println(\"Empty \u0027by\u0027 or \u0027at\u0027 when field\");"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"     * Getter for the command type."},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"     * @return the command type which of type CommandEnum"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"    public CommandEnum getCommandType() {"},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"        return commandType;"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"     * Getter for the task description."},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"     * @return the task description."},{"lineNumber":36,"author":{"gitId":"Rizavur"},"content":"     * @throws EmptyTaskDescriptionException when the task description is left empty by the user."},{"lineNumber":37,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":"    public String getDescription() throws EmptyTaskDescriptionException {"},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"        if (description.equals(\"\")) {"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"            throw new EmptyTaskDescriptionException();"},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"        return description;"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"     * Getter for the \u0027by when\u0027 or \u0027at when\u0027 details for deadline and event tasks."},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"     * @return the \u0027by when\u0027 or \u0027at when\u0027 details."},{"lineNumber":48,"author":{"gitId":"Rizavur"},"content":"     * @throws EmptyByOrAtWhenException when the \u0027by when\u0027 or \u0027at when\u0027 details is left empty by the user."},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":"    public String getWhen() throws EmptyByOrAtWhenException {"},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"        if (when.equals(\"\")) {"},{"lineNumber":52,"author":{"gitId":"Rizavur"},"content":"            throw new EmptyByOrAtWhenException();"},{"lineNumber":53,"author":{"gitId":"Rizavur"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"        return when;"},{"lineNumber":55,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":57,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"Rizavur"},"content":"     * Getter for the task number that the user specified for the done or delete commands."},{"lineNumber":59,"author":{"gitId":"Rizavur"},"content":"     * @return the task number that the user specified."},{"lineNumber":60,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"Rizavur"},"content":"    public Integer getTaskNum() {"},{"lineNumber":62,"author":{"gitId":"Rizavur"},"content":"        return taskNum;"},{"lineNumber":63,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":65,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"Rizavur"},"content":"     * Converts the raw user input from String format to obtain the necessary data according to the specific user"},{"lineNumber":67,"author":{"gitId":"Rizavur"},"content":"     * command."},{"lineNumber":68,"author":{"gitId":"Rizavur"},"content":"     * @param input the raw user input in String format."},{"lineNumber":69,"author":{"gitId":"Rizavur"},"content":"     * @throws EmptyByOrAtWhenException when the \u0027by when\u0027 or \u0027at when\u0027 details is left empty by the user."},{"lineNumber":70,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"Rizavur"},"content":"    private void setCommandFromInput(String input) throws EmptyByOrAtWhenException {"},{"lineNumber":72,"author":{"gitId":"Rizavur"},"content":"        // Remove whitespaces"},{"lineNumber":73,"author":{"gitId":"Rizavur"},"content":"        input \u003d input.trim();"},{"lineNumber":74,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":75,"author":{"gitId":"Rizavur"},"content":"        commandType \u003d getCommandTypeFromInput(input);"},{"lineNumber":76,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":77,"author":{"gitId":"Rizavur"},"content":"        // Split user input by the first \"/\" to separate description and second argument (at or by, if applicable)."},{"lineNumber":78,"author":{"gitId":"Rizavur"},"content":"        String[] arguments \u003d input.split(\"/\", 2);"},{"lineNumber":79,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":80,"author":{"gitId":"Rizavur"},"content":"        // Check if task description is empty for todo and return"},{"lineNumber":81,"author":{"gitId":"Rizavur"},"content":"        if (input.equals(\"todo\")) {"},{"lineNumber":82,"author":{"gitId":"Rizavur"},"content":"            return;"},{"lineNumber":83,"author":{"gitId":"Rizavur"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":85,"author":{"gitId":"Rizavur"},"content":"        // Remove the command word (eg. deadline, event, etc.) from the description."},{"lineNumber":86,"author":{"gitId":"Rizavur"},"content":"        description \u003d arguments[0].substring(arguments[0].indexOf(\u0027 \u0027)+1);"},{"lineNumber":87,"author":{"gitId":"Rizavur"},"content":"        description \u003d description.trim();"},{"lineNumber":88,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":89,"author":{"gitId":"Rizavur"},"content":"        if (commandType \u003d\u003d CommandEnum.DEADLINE || commandType \u003d\u003d CommandEnum.EVENT) {"},{"lineNumber":90,"author":{"gitId":"Rizavur"},"content":"            // Extract and remove the \u0027/by\u0027 or \u0027/at\u0027 from the \u0027when\u0027 argument"},{"lineNumber":91,"author":{"gitId":"Rizavur"},"content":"            when \u003d arguments[1].substring(arguments[1].indexOf(\u0027 \u0027)+1);"},{"lineNumber":92,"author":{"gitId":"Rizavur"},"content":"            if (when.equals(\"by\") || when.equals(\"at\")) {"},{"lineNumber":93,"author":{"gitId":"Rizavur"},"content":"                when \u003d null;"},{"lineNumber":94,"author":{"gitId":"Rizavur"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"Rizavur"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"Rizavur"},"content":"        if (commandType \u003d\u003d CommandEnum.DONE || commandType \u003d\u003d CommandEnum.DELETE) {"},{"lineNumber":97,"author":{"gitId":"Rizavur"},"content":"            // Split user input by \" \" to separate \u0027done\u0027 and task number according to the format."},{"lineNumber":98,"author":{"gitId":"Rizavur"},"content":"            try {"},{"lineNumber":99,"author":{"gitId":"Rizavur"},"content":"                String[] args \u003d input.split(\" \");"},{"lineNumber":100,"author":{"gitId":"Rizavur"},"content":"                if (args.length \u003e 2) {"},{"lineNumber":101,"author":{"gitId":"Rizavur"},"content":"                    throw new TooManyArgumentsException();"},{"lineNumber":102,"author":{"gitId":"Rizavur"},"content":"                }"},{"lineNumber":103,"author":{"gitId":"Rizavur"},"content":"                String taskNumArgument \u003d args[1];"},{"lineNumber":104,"author":{"gitId":"Rizavur"},"content":"                taskNum \u003d Integer.parseInt(taskNumArgument);"},{"lineNumber":105,"author":{"gitId":"Rizavur"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":106,"author":{"gitId":"Rizavur"},"content":"                System.out.println(\"Error -\u003e Task number cannot be left empty.\");"},{"lineNumber":107,"author":{"gitId":"Rizavur"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":108,"author":{"gitId":"Rizavur"},"content":"                System.out.println(\"Error -\u003e Task number cannot be in words\");"},{"lineNumber":109,"author":{"gitId":"Rizavur"},"content":"            } catch (TooManyArgumentsException e) {"},{"lineNumber":110,"author":{"gitId":"Rizavur"},"content":"                System.out.println(\"Error -\u003e Too many arguments for done command\");"},{"lineNumber":111,"author":{"gitId":"Rizavur"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"Rizavur"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":115,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"Rizavur"},"content":"     * Parses the raw user input and identifies the type of command that was passed in it."},{"lineNumber":117,"author":{"gitId":"Rizavur"},"content":"     * @param input the raw user input in String format."},{"lineNumber":118,"author":{"gitId":"Rizavur"},"content":"     * @return the user command in the CommandEnum format."},{"lineNumber":119,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"Rizavur"},"content":"    private CommandEnum getCommandTypeFromInput(String input) {"},{"lineNumber":121,"author":{"gitId":"Rizavur"},"content":"        String[] args \u003d input.split(\" \");"},{"lineNumber":122,"author":{"gitId":"Rizavur"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":123,"author":{"gitId":"Rizavur"},"content":"            return CommandEnum.BYE;"},{"lineNumber":124,"author":{"gitId":"Rizavur"},"content":"        } else if (input.equals(\"list\")) {"},{"lineNumber":125,"author":{"gitId":"Rizavur"},"content":"            return CommandEnum.LIST;"},{"lineNumber":126,"author":{"gitId":"Rizavur"},"content":"        } else if (args[0].equals(\"done\")) {"},{"lineNumber":127,"author":{"gitId":"Rizavur"},"content":"            return CommandEnum.DONE;"},{"lineNumber":128,"author":{"gitId":"Rizavur"},"content":"        } else if (args[0].equals(\"deadline\") \u0026\u0026 input.contains(\"/by\")) {"},{"lineNumber":129,"author":{"gitId":"Rizavur"},"content":"            return CommandEnum.DEADLINE;"},{"lineNumber":130,"author":{"gitId":"Rizavur"},"content":"        } else if (args[0].equals(\"event\") \u0026\u0026 input.contains(\"/at\")) {"},{"lineNumber":131,"author":{"gitId":"Rizavur"},"content":"            return CommandEnum.EVENT;"},{"lineNumber":132,"author":{"gitId":"Rizavur"},"content":"        } else if (args[0].equals(\"todo\")) {"},{"lineNumber":133,"author":{"gitId":"Rizavur"},"content":"            return CommandEnum.TODO;"},{"lineNumber":134,"author":{"gitId":"Rizavur"},"content":"        } else if (args[0].equals(\"delete\")) {"},{"lineNumber":135,"author":{"gitId":"Rizavur"},"content":"            return CommandEnum.DELETE;"},{"lineNumber":136,"author":{"gitId":"Rizavur"},"content":"        } else if (args[0].equals(\"find\")) {"},{"lineNumber":137,"author":{"gitId":"Rizavur"},"content":"            return CommandEnum.FIND;"},{"lineNumber":138,"author":{"gitId":"Rizavur"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"Rizavur"},"content":"        return CommandEnum.INVALID;"},{"lineNumber":140,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"Rizavur"},"content":"}"}],"authorContributionMap":{"Rizavur":141}},{"path":"src/main/java/CommandClasses/CommandEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package CommandClasses;"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"public enum CommandEnum {"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"    BYE,"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"    LIST,"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"    DONE,"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"    DEADLINE,"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"    EVENT,"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"    TODO,"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"    DELETE,"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"    INVALID,"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"    FIND"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"}"}],"authorContributionMap":{"Rizavur":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"import ManagerClasses.InputManager;"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"import ManagerClasses.PrintManager;"},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":" * Duke\u0027s main class where greeting messages are printed and InputManager is initialized"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"        PrintManager.showLogo();"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"        PrintManager.showGreetMessage();"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"        // Initialize InputManager"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"        InputManager inputManager \u003d new InputManager();"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"        inputManager.manageInput();"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Rizavur":12,"-":4}},{"path":"src/main/java/ExceptionClasses/EmptyByOrAtWhenException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package ExceptionClasses;"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"public class EmptyByOrAtWhenException extends Exception {"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"}"}],"authorContributionMap":{"Rizavur":4}},{"path":"src/main/java/ExceptionClasses/EmptyTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package ExceptionClasses;"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"public class EmptyTaskDescriptionException extends Exception {"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"}"}],"authorContributionMap":{"Rizavur":4}},{"path":"src/main/java/ExceptionClasses/NoMatchingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package ExceptionClasses;"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"public class NoMatchingTaskException extends Exception{"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"}"}],"authorContributionMap":{"Rizavur":4}},{"path":"src/main/java/ExceptionClasses/SaveFileNotCreatedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package ExceptionClasses;"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"public class SaveFileNotCreatedException extends Exception{"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"}"}],"authorContributionMap":{"Rizavur":4}},{"path":"src/main/java/ExceptionClasses/TooManyArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package ExceptionClasses;"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"public class TooManyArgumentsException extends Exception {"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"}"}],"authorContributionMap":{"Rizavur":4}},{"path":"src/main/java/ManagerClasses/InputManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package ManagerClasses;"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"import CommandClasses.Command;"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"import ExceptionClasses.EmptyByOrAtWhenException;"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"import ExceptionClasses.EmptyTaskDescriptionException;"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":" * Manages the user input received from the command line."},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"public class InputManager {"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"    private final TaskManager taskManager;"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"    private final StorageManager storageManager;"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"     * Constructor for InputManager class"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"    public InputManager(){"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"        taskManager \u003d new TaskManager();"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"        storageManager \u003d new StorageManager(taskManager);"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"     * Imports tasks from previously saved text file and contains the loop that receives user inputs."},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"    public void manageInput() {"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"        storageManager.importTasksFromTxtFile();"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"        inputLoop();"},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"     * Continuous loop that gets user input and invokes the necessary command according to the input."},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"     * Exits when user enters \u0027bye\u0027 command."},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Rizavur"},"content":"    private void inputLoop() {"},{"lineNumber":37,"author":{"gitId":"Rizavur"},"content":"        while(true) {"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":"            String input \u003d getUserInput();"},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"            Command command \u003d new Command(input);"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"            switch (command.getCommandType()) {"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"            case BYE:"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"                PrintManager.printByeMessage();"},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":"                return;"},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"            case LIST:"},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"                taskManager.showTasks();"},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"                break;"},{"lineNumber":48,"author":{"gitId":"Rizavur"},"content":"            case DONE:"},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"                taskManager.markDone(command.getTaskNum());"},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":"                storageManager.saveTasksInTxtFile();"},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"                break;"},{"lineNumber":52,"author":{"gitId":"Rizavur"},"content":"            case DEADLINE:"},{"lineNumber":53,"author":{"gitId":"Rizavur"},"content":"                try {"},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"                    taskManager.addDeadlineToList(command.getDescription(), command.getWhen());"},{"lineNumber":55,"author":{"gitId":"Rizavur"},"content":"                    storageManager.saveTasksInTxtFile();"},{"lineNumber":56,"author":{"gitId":"Rizavur"},"content":"                } catch (EmptyTaskDescriptionException e) {"},{"lineNumber":57,"author":{"gitId":"Rizavur"},"content":"                    System.out.println(\"Error -\u003e Empty task description\");"},{"lineNumber":58,"author":{"gitId":"Rizavur"},"content":"                } catch (EmptyByOrAtWhenException | NullPointerException e) {"},{"lineNumber":59,"author":{"gitId":"Rizavur"},"content":"                    System.out.println(\"Error -\u003e Deadline by when is not stated\");"},{"lineNumber":60,"author":{"gitId":"Rizavur"},"content":"                }"},{"lineNumber":61,"author":{"gitId":"Rizavur"},"content":"                break;"},{"lineNumber":62,"author":{"gitId":"Rizavur"},"content":"            case EVENT:"},{"lineNumber":63,"author":{"gitId":"Rizavur"},"content":"                try {"},{"lineNumber":64,"author":{"gitId":"Rizavur"},"content":"                    taskManager.addEventToList(command.getDescription(), command.getWhen());"},{"lineNumber":65,"author":{"gitId":"Rizavur"},"content":"                    storageManager.saveTasksInTxtFile();"},{"lineNumber":66,"author":{"gitId":"Rizavur"},"content":"                } catch (EmptyTaskDescriptionException e) {"},{"lineNumber":67,"author":{"gitId":"Rizavur"},"content":"                    System.out.println(\"Error -\u003e Empty task description\");"},{"lineNumber":68,"author":{"gitId":"Rizavur"},"content":"                } catch (EmptyByOrAtWhenException | NullPointerException e) {"},{"lineNumber":69,"author":{"gitId":"Rizavur"},"content":"                    System.out.println(\"Error -\u003e Event at when is not stated\");"},{"lineNumber":70,"author":{"gitId":"Rizavur"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"Rizavur"},"content":"                break;"},{"lineNumber":72,"author":{"gitId":"Rizavur"},"content":"            case TODO:"},{"lineNumber":73,"author":{"gitId":"Rizavur"},"content":"                try {"},{"lineNumber":74,"author":{"gitId":"Rizavur"},"content":"                    taskManager.addTodoToList(command.getDescription());"},{"lineNumber":75,"author":{"gitId":"Rizavur"},"content":"                    storageManager.saveTasksInTxtFile();"},{"lineNumber":76,"author":{"gitId":"Rizavur"},"content":"                } catch (EmptyTaskDescriptionException | NullPointerException e) {"},{"lineNumber":77,"author":{"gitId":"Rizavur"},"content":"                    System.out.println(\"Error -\u003e Empty task description\");"},{"lineNumber":78,"author":{"gitId":"Rizavur"},"content":"                }"},{"lineNumber":79,"author":{"gitId":"Rizavur"},"content":"                break;"},{"lineNumber":80,"author":{"gitId":"Rizavur"},"content":"            case DELETE:"},{"lineNumber":81,"author":{"gitId":"Rizavur"},"content":"                taskManager.deleteTask(command.getTaskNum());"},{"lineNumber":82,"author":{"gitId":"Rizavur"},"content":"                storageManager.saveTasksInTxtFile();"},{"lineNumber":83,"author":{"gitId":"Rizavur"},"content":"                break;"},{"lineNumber":84,"author":{"gitId":"Rizavur"},"content":"            case FIND:"},{"lineNumber":85,"author":{"gitId":"Rizavur"},"content":"                try {"},{"lineNumber":86,"author":{"gitId":"Rizavur"},"content":"                    taskManager.findTasks(command.getDescription());"},{"lineNumber":87,"author":{"gitId":"Rizavur"},"content":"                } catch (EmptyTaskDescriptionException e) {"},{"lineNumber":88,"author":{"gitId":"Rizavur"},"content":"                    System.out.println(\"Error -\u003e Please enter a keyword to search\");"},{"lineNumber":89,"author":{"gitId":"Rizavur"},"content":"                }"},{"lineNumber":90,"author":{"gitId":"Rizavur"},"content":"                break;"},{"lineNumber":91,"author":{"gitId":"Rizavur"},"content":"            default:"},{"lineNumber":92,"author":{"gitId":"Rizavur"},"content":"                PrintManager.printHelpMessage();"},{"lineNumber":93,"author":{"gitId":"Rizavur"},"content":"            }"},{"lineNumber":94,"author":{"gitId":"Rizavur"},"content":"            PrintManager.printBreakLine();"},{"lineNumber":95,"author":{"gitId":"Rizavur"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":98,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"Rizavur"},"content":"     * Returns the user input as a String which can then be parsed to execute commands."},{"lineNumber":100,"author":{"gitId":"Rizavur"},"content":"     * @return the user input received"},{"lineNumber":101,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"Rizavur"},"content":"    private String getUserInput() {"},{"lineNumber":103,"author":{"gitId":"Rizavur"},"content":"        System.out.print(\"\u003e \");"},{"lineNumber":104,"author":{"gitId":"Rizavur"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":105,"author":{"gitId":"Rizavur"},"content":"        String input \u003d in.nextLine();"},{"lineNumber":106,"author":{"gitId":"Rizavur"},"content":"        PrintManager.printBreakLine();"},{"lineNumber":107,"author":{"gitId":"Rizavur"},"content":"        return input;"},{"lineNumber":108,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"Rizavur"},"content":"}"}],"authorContributionMap":{"Rizavur":109}},{"path":"src/main/java/ManagerClasses/PrintManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package ManagerClasses;"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":" * Handles the UI elements of Duke. It can print the greeting, bye and help messages."},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"public class PrintManager {"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"    private static final String BREAK_LINE \u003d \"------------------------------------------------------------\";"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"     * Prints Duke logo on the terminal."},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"    public static void showLogo() {"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"        String logo \u003d \" ____        _\\n\""},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"                + \"|  _ \\\\ _   _| | _____\\n\""},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"        System.out.println(BREAK_LINE + \"\\n\" + logo + \"\\n\" + BREAK_LINE);"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"     * Prints the breakline on the terminal."},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"    public static void printBreakLine() {"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"        System.out.println(BREAK_LINE);"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"     * Prints the greeting message in the terminal."},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"    public static void showGreetMessage() {"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"        printBreakLine();"},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":37,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":"     * Prints the bye message in the terminal."},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"    public static void printByeMessage() {"},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"        printBreakLine();"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"     * Prints the help message in the terminal. The help message entails the format that the user need to adhere to."},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"Rizavur"},"content":"    public static void printHelpMessage() {"},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"        System.out.print(\"Help message:\\n\""},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":"                + \"* Adding a todo task -\u003e \u0027todo \u003cdescription\u003e\u0027\\n\""},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"                + \"* Adding a deadline -\u003e \u0027deadline \u003cdescription\u003e /by \u003cwhen\u003e\u0027\\n\""},{"lineNumber":52,"author":{"gitId":"Rizavur"},"content":"                + \"* Adding an event -\u003e \u0027event \u003cdescription\u003e /at \u003cwhen\u003e\u0027\\n\""},{"lineNumber":53,"author":{"gitId":"Rizavur"},"content":"                + \"* Marking a task as done -\u003e \u0027done \u003ctask number\u003e\u0027\\n\""},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"                + \"* Listing all tasks -\u003e \u0027list\u0027\\n\""},{"lineNumber":55,"author":{"gitId":"Rizavur"},"content":"                + \"* Deleting a task -\u003e \u0027delete \u003ctask number\u003e\u0027\\n\""},{"lineNumber":56,"author":{"gitId":"Rizavur"},"content":"                + \"* Searching for tasks by keyword -\u003e \u0027find \u003ckeyword\u003e\u0027\\n\""},{"lineNumber":57,"author":{"gitId":"Rizavur"},"content":"                + \"* Exit -\u003e \u0027bye\u0027\\n\");"},{"lineNumber":58,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Rizavur"},"content":"}"}],"authorContributionMap":{"Rizavur":59}},{"path":"src/main/java/ManagerClasses/StorageManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package ManagerClasses;"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"import ExceptionClasses.SaveFileNotCreatedException;"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"import TaskClasses.Deadline;"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"import TaskClasses.Event;"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"import TaskClasses.Task;"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"import TaskClasses.Todo;"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"import java.io.*;"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"import java.nio.file.Files;"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"import java.nio.file.Path;"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"import java.nio.file.Paths;"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":" * Manages the saving and retrieving of data from storage files for Duke."},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":" */"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"public class StorageManager {"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"    private final TaskManager taskManager;"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"     * Constructor for StorageManager class. The taskManager needs to be passed here so as to be able to update"},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"     * the list of tasks that are stored and updated in taskManager while Duke is running."},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"     * @param taskManager the taskManager that was initiated in the inputManager class."},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"    public StorageManager(TaskManager taskManager) {"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"        this.taskManager \u003d taskManager;"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"     * Saves tasks into an existing data text file in the data folder that should have been created when"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"     * importTasksFromTxtFile() method is called when Duke starts."},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"    public void saveTasksInTxtFile() {"},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"        String currentPath \u003d System.getProperty(\"user.dir\");"},{"lineNumber":36,"author":{"gitId":"Rizavur"},"content":"        Path filePath \u003d Paths.get(currentPath, \"data\", \"duke.txt\");"},{"lineNumber":37,"author":{"gitId":"Rizavur"},"content":"        try (PrintStream out \u003d new PrintStream(new FileOutputStream(String.valueOf(filePath)))) {"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":"            for (Task task : taskManager.getTasks()) {"},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"                out.print(task.toSaveFormat() + \"\\n\");"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"            e.printStackTrace();"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"     * Imports tasks from an existing data text file if it exists or creates one if it does not already exist."},{"lineNumber":48,"author":{"gitId":"Rizavur"},"content":"     * Calls the method to parse the text file."},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":"    public void importTasksFromTxtFile() {"},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"        String currentPath \u003d System.getProperty(\"user.dir\");"},{"lineNumber":52,"author":{"gitId":"Rizavur"},"content":"        Path folderPath \u003d Paths.get(currentPath, \"data\");"},{"lineNumber":53,"author":{"gitId":"Rizavur"},"content":"        Path filePath \u003d Paths.get(currentPath, \"data\", \"duke.txt\");"},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"        boolean directoryExists \u003d Files.exists(folderPath);"},{"lineNumber":55,"author":{"gitId":"Rizavur"},"content":"        if (!directoryExists) {"},{"lineNumber":56,"author":{"gitId":"Rizavur"},"content":"            createPath(folderPath, filePath);"},{"lineNumber":57,"author":{"gitId":"Rizavur"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"Rizavur"},"content":"        parseTxtFile(filePath);"},{"lineNumber":59,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":61,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"Rizavur"},"content":"     * Creates a new folder using the folderPath passed in and creates a file in it with the path of filePath."},{"lineNumber":63,"author":{"gitId":"Rizavur"},"content":"     * @param folderPath the folder path where the new data files are going to be stored in."},{"lineNumber":64,"author":{"gitId":"Rizavur"},"content":"     * @param filePath the file path where data is stored."},{"lineNumber":65,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"Rizavur"},"content":"    void createPath(Path folderPath, Path filePath) {"},{"lineNumber":67,"author":{"gitId":"Rizavur"},"content":"        File file \u003d new File(String.valueOf(folderPath));"},{"lineNumber":68,"author":{"gitId":"Rizavur"},"content":"        try {"},{"lineNumber":69,"author":{"gitId":"Rizavur"},"content":"            if (file.mkdir()) {"},{"lineNumber":70,"author":{"gitId":"Rizavur"},"content":"                Path newFilePath \u003d Paths.get(String.valueOf(filePath));"},{"lineNumber":71,"author":{"gitId":"Rizavur"},"content":"                Files.createFile(newFilePath);"},{"lineNumber":72,"author":{"gitId":"Rizavur"},"content":"            } else {"},{"lineNumber":73,"author":{"gitId":"Rizavur"},"content":"                throw new SaveFileNotCreatedException();"},{"lineNumber":74,"author":{"gitId":"Rizavur"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"Rizavur"},"content":"        } catch (SaveFileNotCreatedException | IOException e) {"},{"lineNumber":76,"author":{"gitId":"Rizavur"},"content":"            System.out.println(\"Save file was not created\");"},{"lineNumber":77,"author":{"gitId":"Rizavur"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":80,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"Rizavur"},"content":"     * Parses the data file to read each line and convert it into \u0027Task\u0027 type which is then stored in the tasks list"},{"lineNumber":82,"author":{"gitId":"Rizavur"},"content":"     * from the taskManager."},{"lineNumber":83,"author":{"gitId":"Rizavur"},"content":"     * @param filePath the file path where data is stored."},{"lineNumber":84,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"Rizavur"},"content":"    void parseTxtFile(Path filePath) {"},{"lineNumber":86,"author":{"gitId":"Rizavur"},"content":"        try (Scanner inputFileScanner \u003d new Scanner(new File(String.valueOf(filePath)))) {"},{"lineNumber":87,"author":{"gitId":"Rizavur"},"content":"            while (inputFileScanner.hasNextLine()) {"},{"lineNumber":88,"author":{"gitId":"Rizavur"},"content":"                String line \u003d inputFileScanner.nextLine();"},{"lineNumber":89,"author":{"gitId":"Rizavur"},"content":"                String[] taskAttributes \u003d line.split(\" \\\\| \");"},{"lineNumber":90,"author":{"gitId":"Rizavur"},"content":"                String taskType \u003d taskAttributes[0];"},{"lineNumber":91,"author":{"gitId":"Rizavur"},"content":"                switch (taskType) {"},{"lineNumber":92,"author":{"gitId":"Rizavur"},"content":"                case \"T\":"},{"lineNumber":93,"author":{"gitId":"Rizavur"},"content":"                    taskManager.getTasks().add(new Todo(Boolean.parseBoolean(taskAttributes[1]), taskAttributes[2]));"},{"lineNumber":94,"author":{"gitId":"Rizavur"},"content":"                    break;"},{"lineNumber":95,"author":{"gitId":"Rizavur"},"content":"                case \"D\":"},{"lineNumber":96,"author":{"gitId":"Rizavur"},"content":"                    taskManager.getTasks().add(new Deadline(Boolean.parseBoolean(taskAttributes[1]), taskAttributes[2],"},{"lineNumber":97,"author":{"gitId":"Rizavur"},"content":"                            taskAttributes[3]));"},{"lineNumber":98,"author":{"gitId":"Rizavur"},"content":"                    break;"},{"lineNumber":99,"author":{"gitId":"Rizavur"},"content":"                case \"E\":"},{"lineNumber":100,"author":{"gitId":"Rizavur"},"content":"                    taskManager.getTasks().add(new Event(Boolean.parseBoolean(taskAttributes[1]), taskAttributes[2],"},{"lineNumber":101,"author":{"gitId":"Rizavur"},"content":"                            taskAttributes[3]));"},{"lineNumber":102,"author":{"gitId":"Rizavur"},"content":"                    break;"},{"lineNumber":103,"author":{"gitId":"Rizavur"},"content":"                default:"},{"lineNumber":104,"author":{"gitId":"Rizavur"},"content":"                }"},{"lineNumber":105,"author":{"gitId":"Rizavur"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"Rizavur"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":107,"author":{"gitId":"Rizavur"},"content":"            System.out.println(\"No previous data found\");"},{"lineNumber":108,"author":{"gitId":"Rizavur"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"Rizavur"},"content":"}"}],"authorContributionMap":{"Rizavur":110}},{"path":"src/main/java/ManagerClasses/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package ManagerClasses;"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"import ExceptionClasses.NoMatchingTaskException;"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"import TaskClasses.Deadline;"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"import TaskClasses.Event;"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"import TaskClasses.Task;"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"import TaskClasses.Todo;"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":" * Manages the task actions that the user may input."},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":" */"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"public class TaskManager {"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"     * Constructor for the TaskManager class."},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"    public TaskManager() {"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"     * Getter for the tasks list."},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"     * @return the task list in the taskManager"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"    public List\u003cTask\u003e getTasks() {"},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"        return tasks;"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"     * Shows the tasks in the task list."},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Rizavur"},"content":"    public void showTasks() {"},{"lineNumber":37,"author":{"gitId":"Rizavur"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":"            System.out.println(\"Oops, it seems like you don\u0027t have any tasks.\");"},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"        } else {"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"            printAllTasksInList(tasks);"},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"     * Marks the specified task as being done."},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"     * @param taskIdNum index number of the task that is to be marked as done."},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"Rizavur"},"content":"    public void markDone(Integer taskIdNum) {"},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"//        Check if user input for \u0027done\u0027 task id is within the range of the list."},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"            if (taskIdNum !\u003d null) {"},{"lineNumber":52,"author":{"gitId":"Rizavur"},"content":"                int taskListIndexNum \u003d taskIdNum - 1;"},{"lineNumber":53,"author":{"gitId":"Rizavur"},"content":"                Task task \u003d tasks.get(taskListIndexNum);"},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"                task.setAsDone();"},{"lineNumber":55,"author":{"gitId":"Rizavur"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":56,"author":{"gitId":"Rizavur"},"content":"                System.out.println(task.toString());"},{"lineNumber":57,"author":{"gitId":"Rizavur"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"Rizavur"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":59,"author":{"gitId":"Rizavur"},"content":"            System.out.println(\"Error -\u003e Cannot find task with the specified task number \" + taskIdNum + \".\");"},{"lineNumber":60,"author":{"gitId":"Rizavur"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":63,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"Rizavur"},"content":"     * Deletes the specified task from the task list."},{"lineNumber":65,"author":{"gitId":"Rizavur"},"content":"     * @param taskIdNum index number of the task that is to be deleted."},{"lineNumber":66,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"Rizavur"},"content":"    public void deleteTask (Integer taskIdNum) {"},{"lineNumber":68,"author":{"gitId":"Rizavur"},"content":"        try {"},{"lineNumber":69,"author":{"gitId":"Rizavur"},"content":"            if (taskIdNum !\u003d null) {"},{"lineNumber":70,"author":{"gitId":"Rizavur"},"content":"                int taskListIndexNum \u003d taskIdNum - 1;"},{"lineNumber":71,"author":{"gitId":"Rizavur"},"content":"                Task task \u003d tasks.get(taskListIndexNum);"},{"lineNumber":72,"author":{"gitId":"Rizavur"},"content":"                String taskDescription \u003d task.toString();"},{"lineNumber":73,"author":{"gitId":"Rizavur"},"content":"                tasks.remove(taskListIndexNum);"},{"lineNumber":74,"author":{"gitId":"Rizavur"},"content":"                System.out.println(\"Nice! I\u0027ve removed this task:\");"},{"lineNumber":75,"author":{"gitId":"Rizavur"},"content":"                System.out.println(taskDescription);"},{"lineNumber":76,"author":{"gitId":"Rizavur"},"content":"                printNumberOfTasks();"},{"lineNumber":77,"author":{"gitId":"Rizavur"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"Rizavur"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":79,"author":{"gitId":"Rizavur"},"content":"            System.out.println(\"Error -\u003e Cannot find task with the specified task number \" + taskIdNum + \".\");"},{"lineNumber":80,"author":{"gitId":"Rizavur"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":83,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"Rizavur"},"content":"     * Converts the inputs into a todo task and calls the addTaskToList() method to add the task into the task list."},{"lineNumber":85,"author":{"gitId":"Rizavur"},"content":"     * @param description description of the todo task."},{"lineNumber":86,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"Rizavur"},"content":"    public void addTodoToList(String description) {"},{"lineNumber":88,"author":{"gitId":"Rizavur"},"content":"        Todo todoTask \u003d new Todo(description);"},{"lineNumber":89,"author":{"gitId":"Rizavur"},"content":"        addTaskToList(todoTask);"},{"lineNumber":90,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":92,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"Rizavur"},"content":"     * Converts the inputs into a event task and calls the addTaskToList() method to add the task into the task list."},{"lineNumber":94,"author":{"gitId":"Rizavur"},"content":"     * @param description description of the event task."},{"lineNumber":95,"author":{"gitId":"Rizavur"},"content":"     * @param at when is the event going to take place."},{"lineNumber":96,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"Rizavur"},"content":"    public void addEventToList(String description, String at) {"},{"lineNumber":98,"author":{"gitId":"Rizavur"},"content":"        Event eventTask \u003d new Event(description, at);"},{"lineNumber":99,"author":{"gitId":"Rizavur"},"content":"        addTaskToList(eventTask);"},{"lineNumber":100,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":102,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"Rizavur"},"content":"     * Converts the inputs into a deadline task and calls the addTaskToList() method to add the task into the task list."},{"lineNumber":104,"author":{"gitId":"Rizavur"},"content":"     * @param description description of the deadline task."},{"lineNumber":105,"author":{"gitId":"Rizavur"},"content":"     * @param by when must the task be done by."},{"lineNumber":106,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"Rizavur"},"content":"    public void addDeadlineToList(String description, String by) {"},{"lineNumber":108,"author":{"gitId":"Rizavur"},"content":"        Deadline deadlineTask \u003d new Deadline(description, by);"},{"lineNumber":109,"author":{"gitId":"Rizavur"},"content":"        addTaskToList(deadlineTask);"},{"lineNumber":110,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":112,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"Rizavur"},"content":"     * Add task into the task list."},{"lineNumber":114,"author":{"gitId":"Rizavur"},"content":"     * @param task the task that is to be added to the task list."},{"lineNumber":115,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"Rizavur"},"content":"    private void addTaskToList(Task task) {"},{"lineNumber":117,"author":{"gitId":"Rizavur"},"content":"        tasks.add(task);"},{"lineNumber":118,"author":{"gitId":"Rizavur"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":119,"author":{"gitId":"Rizavur"},"content":"        System.out.println(task.toString());"},{"lineNumber":120,"author":{"gitId":"Rizavur"},"content":"        printNumberOfTasks();"},{"lineNumber":121,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":123,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"Rizavur"},"content":"     * Prints the number of tasks in the task list into the terminal console."},{"lineNumber":125,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"Rizavur"},"content":"    public void printNumberOfTasks() {"},{"lineNumber":127,"author":{"gitId":"Rizavur"},"content":"        if (tasks.size() \u003d\u003d 1) {"},{"lineNumber":128,"author":{"gitId":"Rizavur"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" task in the list.\");"},{"lineNumber":129,"author":{"gitId":"Rizavur"},"content":"        } else {"},{"lineNumber":130,"author":{"gitId":"Rizavur"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":131,"author":{"gitId":"Rizavur"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":134,"author":{"gitId":"Rizavur"},"content":"    public void findTasks(String keyword) {"},{"lineNumber":135,"author":{"gitId":"Rizavur"},"content":"        try {"},{"lineNumber":136,"author":{"gitId":"Rizavur"},"content":"            ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();"},{"lineNumber":137,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":138,"author":{"gitId":"Rizavur"},"content":"            checkTasks(keyword, matches);"},{"lineNumber":139,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":140,"author":{"gitId":"Rizavur"},"content":"            if (!matches.isEmpty()) {"},{"lineNumber":141,"author":{"gitId":"Rizavur"},"content":"                printAllTasksInList(matches);"},{"lineNumber":142,"author":{"gitId":"Rizavur"},"content":"            } else {"},{"lineNumber":143,"author":{"gitId":"Rizavur"},"content":"                throw new NoMatchingTaskException();"},{"lineNumber":144,"author":{"gitId":"Rizavur"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"Rizavur"},"content":"        } catch (NoMatchingTaskException e) {"},{"lineNumber":146,"author":{"gitId":"Rizavur"},"content":"            System.out.println(\"Oops there were no tasks that match that keyword\");"},{"lineNumber":147,"author":{"gitId":"Rizavur"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":150,"author":{"gitId":"Rizavur"},"content":"    private void checkTasks(String keyword, ArrayList\u003cTask\u003e matches) {"},{"lineNumber":151,"author":{"gitId":"Rizavur"},"content":"        for (Task task : tasks) {"},{"lineNumber":152,"author":{"gitId":"Rizavur"},"content":"            if (task.getDescription().contains(keyword)) {"},{"lineNumber":153,"author":{"gitId":"Rizavur"},"content":"                matches.add(task);"},{"lineNumber":154,"author":{"gitId":"Rizavur"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"Rizavur"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":158,"author":{"gitId":"Rizavur"},"content":"    private void printAllTasksInList(ArrayList\u003cTask\u003e matches) {"},{"lineNumber":159,"author":{"gitId":"Rizavur"},"content":"        int taskId \u003d 1;"},{"lineNumber":160,"author":{"gitId":"Rizavur"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":161,"author":{"gitId":"Rizavur"},"content":"        for (Task match : matches) {"},{"lineNumber":162,"author":{"gitId":"Rizavur"},"content":"            System.out.println(taskId + \". \" + match.toString());"},{"lineNumber":163,"author":{"gitId":"Rizavur"},"content":"            taskId++;"},{"lineNumber":164,"author":{"gitId":"Rizavur"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"Rizavur"},"content":"}"}],"authorContributionMap":{"Rizavur":166}},{"path":"src/main/java/TaskClasses/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package TaskClasses;"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":" * Class that describes a deadline."},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"public class Deadline extends Task{"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"    protected String by;"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"     * Constructor for the deadline class if isDone, description and by parameters are passed in."},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"     * @param isDone the status of the deadline on whether it is marked as done."},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"     * @param description the description of the deadline."},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"     * @param by when the deadline must be done by"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"    public Deadline(boolean isDone, String description, String by) {"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"        super(isDone, description);"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"        this.by \u003d by;"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"     * Constructor for the deadline class if description and by parameters are passed in."},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"     * @param description the description of the deadline."},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"     * @param by when the deadline must be done by"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"        super(description);"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"        this.by \u003d by;"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"     * Overrides the conversion of the deadline into String format."},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"     * @return the String format of the deadline."},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"Rizavur"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":37,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"     * Overrides the conversion of the deadline to the save format."},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"     * @return the String that adhered to the save format of deadline."},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":"    public String toSaveFormat() {"},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"        return \"D\" + super.toSaveFormat() + \" | \" + by;"},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"}"}],"authorContributionMap":{"Rizavur":47}},{"path":"src/main/java/TaskClasses/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package TaskClasses;"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":" * Class that describes an event."},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"public class Event extends Task{"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"    protected String at;"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"     * Constructor for the event class if isDone, description and by parameters are passed in."},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"     * @param isDone the status of the event on whether it is marked as done."},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"     * @param description the description of the event."},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"     * @param at when the event must be done by"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"    public Event(Boolean isDone, String description, String at) {"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"        super(isDone, description);"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"        this.at \u003d at;"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"     * Constructor for the event class if description and by parameters are passed in."},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"     * @param description the description of the event."},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"     * @param at when the event must be done by"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"    public Event(String description, String at) {"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"        super(description);"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"        this.at \u003d at;"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"     * Overrides the conversion of the event into String format."},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"     * @return the String format of the event."},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"Rizavur"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":37,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"     * Overrides the conversion of the event to the save format."},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"     * @return the String that adhered to the save format of event."},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":"    public String toSaveFormat() {"},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"        return \"E\" + super.toSaveFormat() + \" | \" + at;"},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"}"}],"authorContributionMap":{"Rizavur":47}},{"path":"src/main/java/TaskClasses/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package TaskClasses;"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":" * Class that describes a general task."},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"     * Constructor for the task class if only description is passed in."},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"     * @param description the description of the task."},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"    public Task(String description) {"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"        this.isDone \u003d false;"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"     * Constructor for the task class if only description is passed in."},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"     * @param isDone  the status of the task on whether it is marked as done."},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"     * @param description the description of the task."},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"    public Task(Boolean isDone, String description) {"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"        this.description \u003d description;"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"     * Getter for the status icon. (Tick or cross)"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"     * @return the tick or cross symbols"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"    public String getStatusIcon() {"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":37,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":"     * Getter for the description of the task."},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"    public String getDescription() {"},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"        return description;"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"     * Setter for the done status of the task."},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"    public void setAsDone() {"},{"lineNumber":48,"author":{"gitId":"Rizavur"},"content":"        isDone \u003d true;"},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"Rizavur"},"content":"     * Convert the task into String format."},{"lineNumber":53,"author":{"gitId":"Rizavur"},"content":"     * @return the String format of the task."},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"Rizavur"},"content":"    public String toString() {"},{"lineNumber":56,"author":{"gitId":"Rizavur"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":57,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":59,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"Rizavur"},"content":"     * Convert the task to the save format."},{"lineNumber":61,"author":{"gitId":"Rizavur"},"content":"     * @return the String that adhered to the save format of the task."},{"lineNumber":62,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"Rizavur"},"content":"    public String toSaveFormat() {"},{"lineNumber":64,"author":{"gitId":"Rizavur"},"content":"        return \" | \" + isDone + \" | \" + description;"},{"lineNumber":65,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Rizavur"},"content":"}"}],"authorContributionMap":{"Rizavur":66}},{"path":"src/main/java/TaskClasses/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package TaskClasses;"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":" * Class that describes a todo task."},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"public class Todo extends Task{"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"     * Constructor for the todo class if isDone and description parameters are passed in."},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"     * @param isDone the status of the todo task on whether it is marked as done."},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"     * @param description the description of the todo task."},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"    public Todo(boolean isDone, String description) {"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"        super(isDone, description);"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"     * Constructor for the todo class class if description parameter is passed in."},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"     * @param description the description of the deadline."},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"    public Todo(String description) {"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"        super(description);"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"     * Overrides the conversion of the todo task into String format."},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"     * @return the String format of the todo task."},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":""},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"     * Overrides the conversion of the todo task to the save format."},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"     * @return the String that adhered to the save format of todo task."},{"lineNumber":36,"author":{"gitId":"Rizavur"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"Rizavur"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":"    public String toSaveFormat() {"},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"        return \"T\" + super.toSaveFormat();"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"}"}],"authorContributionMap":{"Rizavur":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"qa"}],"authorContributionMap":{"Rizavur":1}}]
