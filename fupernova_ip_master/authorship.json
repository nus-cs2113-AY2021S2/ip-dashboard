[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"## When Duke meets Staines"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"What\u0027s this then? Me thinks its some kind of fancy tekmology I can use on me compooter. Wicked! Wait till I show this to me Julie and Rainbow Jeremy."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"Duke chatbot inspired by Ali G. West Side. Done as part of individual project component of CS2113. All wacky typos are intentional."}],"authorContributionMap":{"fupernova":3,"-":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.command.ByeCommand;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"import duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"import java.io.*;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"    private static final String FILEPATH \u003d \"tasklogs/tasks.txt\";"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"    private Storage storage;"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    private Ui ui;"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"    private TaskList taskList;"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    private Parser parser;"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    private Object ByeCommand;"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    public Duke() {"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"        storage \u003d new Storage(FILEPATH);"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"        ui \u003d new Ui();"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"        taskList \u003d new TaskList(ui);"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"        parser \u003d new Parser(taskList, ui);"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"            storage.loadFile(taskList.getTasks());"},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":"            System.out.println(\"IO error.\");"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"    public void run() {"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"            ui.printGreeting();"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"            while(true) {"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"                String command \u003d ui.getCommand();"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"                Command parsedCommand \u003d parser.parseCommands(command);"},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"                if (parsedCommand instanceof ByeCommand) {"},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"                    break;"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"                }"},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"                parsedCommand.execute(ui);"},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"            ui.sayGoodbye();"},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"            storage.saveFile(taskList.getTasks());"},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":"        } catch (IOException e) {"},{"lineNumber":44,"author":{"gitId":"fupernova"},"content":"            System.out.println(\"IO error.\");"},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":48,"author":{"gitId":"fupernova"},"content":"    public static void main(String[] args) {"},{"lineNumber":49,"author":{"gitId":"fupernova"},"content":"        new Duke().run();"},{"lineNumber":50,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fupernova":49,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.command.*;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_MAX_CAPACITY \u003d -5;"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_EXIT \u003d 0;"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_LIST \u003d 1;"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_MARK \u003d 2;"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_ADD \u003d 3;"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_DELETE \u003d 4;"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"    private TaskList tasks;"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    private Ui ui;"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"    public Parser(TaskList tasks, Ui ui) {"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"        this.ui \u003d ui;"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"     * Loops through all features available."},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"     * Returns if user inputs bye."},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"    public Command parseCommands(String line) throws IOException {"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"            int command \u003d getCommand(line);"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"            // No fallthrough required"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"            switch (command) {"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"            // If user wants to mark a task as done"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"            case COMMAND_MARK:"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"                return new MarkCommand(line, this.tasks, this.ui);"},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"            // If user wants to list all tasks"},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"            case COMMAND_LIST:"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"                return new ListCommand(line, this.tasks, this.ui);"},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"            // If user wants to add an item"},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"            case COMMAND_ADD:"},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"                return new AddCommand(line, this.tasks, this.ui);"},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"            // If user wants to delete an item"},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":"            case COMMAND_DELETE:"},{"lineNumber":44,"author":{"gitId":"fupernova"},"content":"                return new DeleteCommand(line, this.tasks, this.ui);"},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":"            // IF user wants to exit program"},{"lineNumber":46,"author":{"gitId":"fupernova"},"content":"            case COMMAND_EXIT:"},{"lineNumber":47,"author":{"gitId":"fupernova"},"content":"                return new ByeCommand();"},{"lineNumber":48,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"fupernova"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":50,"author":{"gitId":"fupernova"},"content":"                ui.printError(ERR_MAX_CAPACITY);"},{"lineNumber":51,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"fupernova"},"content":"        return null; // To make compiler happy :D"},{"lineNumber":53,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"fupernova"},"content":"     * Parses the command that user has keyed in."},{"lineNumber":56,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"fupernova"},"content":"     * @param line input from user."},{"lineNumber":58,"author":{"gitId":"fupernova"},"content":"     * @return The type of command user inputted."},{"lineNumber":59,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"fupernova"},"content":"    public static int getCommand(String line) {"},{"lineNumber":61,"author":{"gitId":"fupernova"},"content":"        String[] subStrings \u003d line.split(\" \");"},{"lineNumber":62,"author":{"gitId":"fupernova"},"content":"        String command \u003d subStrings[0];"},{"lineNumber":63,"author":{"gitId":"fupernova"},"content":"        if (command.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":64,"author":{"gitId":"fupernova"},"content":"            return COMMAND_EXIT;"},{"lineNumber":65,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"fupernova"},"content":"        if (command.equalsIgnoreCase(\"done\")) {"},{"lineNumber":67,"author":{"gitId":"fupernova"},"content":"            return COMMAND_MARK;"},{"lineNumber":68,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"fupernova"},"content":"        if (command.equalsIgnoreCase(\"list\")) {"},{"lineNumber":70,"author":{"gitId":"fupernova"},"content":"            return COMMAND_LIST;"},{"lineNumber":71,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"fupernova"},"content":"        if (command.equalsIgnoreCase(\"delete\")) {"},{"lineNumber":73,"author":{"gitId":"fupernova"},"content":"            return COMMAND_DELETE;"},{"lineNumber":74,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"fupernova"},"content":"        return COMMAND_ADD;"},{"lineNumber":76,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":77}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"    private final String filePath;"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    public Storage(String filePath) {"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"     * Loads tasks from saved text file. If file does not exist, create a file."},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"     * @throws IOException if there is IO error."},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"    public void loadFile(ArrayList\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":"        File f \u003d new File(filePath);"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"        f.getParentFile().mkdirs();"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"        f.createNewFile();"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"        while(s.hasNext()) {"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"            tasks.add(deserializeFile(s.nextLine()));"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"            Task.totalNumberOfTasks +\u003d 1;"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"     * Converts format of tasks from text file format to program format."},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"     * @param line line from text file."},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"     * @return Task in the format of program."},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"    public static Task deserializeFile(String line) {"},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":"        String[] components \u003d line.split(\" \\\\| \");"},{"lineNumber":44,"author":{"gitId":"fupernova"},"content":"        // No fallthrough required"},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":"        switch(components[0]) {"},{"lineNumber":46,"author":{"gitId":"fupernova"},"content":"        case \"[T]\":"},{"lineNumber":47,"author":{"gitId":"fupernova"},"content":"            Task fileTodo \u003d new Todo(components[2]);"},{"lineNumber":48,"author":{"gitId":"fupernova"},"content":"            if (components[1].equals(\"1\")) {"},{"lineNumber":49,"author":{"gitId":"fupernova"},"content":"                fileTodo.setDone();"},{"lineNumber":50,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"fupernova"},"content":"            return fileTodo;"},{"lineNumber":52,"author":{"gitId":"fupernova"},"content":"        case \"[E]\":"},{"lineNumber":53,"author":{"gitId":"fupernova"},"content":"            Task fileEvent \u003d new Event(components[2], components[3]);"},{"lineNumber":54,"author":{"gitId":"fupernova"},"content":"            if (components[1].equals(\"1\")) {"},{"lineNumber":55,"author":{"gitId":"fupernova"},"content":"                fileEvent.setDone();"},{"lineNumber":56,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"fupernova"},"content":"            return fileEvent;"},{"lineNumber":58,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"fupernova"},"content":"        // Case where task is deadline"},{"lineNumber":60,"author":{"gitId":"fupernova"},"content":"        Task fileDeadline \u003d new Deadline(components[2], components[3]);"},{"lineNumber":61,"author":{"gitId":"fupernova"},"content":"        if (components[1].equals(\"1\")) {"},{"lineNumber":62,"author":{"gitId":"fupernova"},"content":"            fileDeadline.setDone();"},{"lineNumber":63,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"fupernova"},"content":"        return fileDeadline;"},{"lineNumber":65,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"fupernova"},"content":"     * Saves all tasks into file after user inputs \"bye\""},{"lineNumber":68,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"fupernova"},"content":"     * @throws IOException if there is IO error."},{"lineNumber":70,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"fupernova"},"content":"    public void saveFile(ArrayList\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":72,"author":{"gitId":"fupernova"},"content":"        StringBuilder saveText \u003d new StringBuilder();"},{"lineNumber":73,"author":{"gitId":"fupernova"},"content":"        for(Task task: tasks) {"},{"lineNumber":74,"author":{"gitId":"fupernova"},"content":"            saveText.append(serializeFile(task));"},{"lineNumber":75,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"fupernova"},"content":"        FileWriter w \u003d new FileWriter(filePath);"},{"lineNumber":77,"author":{"gitId":"fupernova"},"content":"        w.write(saveText.toString());"},{"lineNumber":78,"author":{"gitId":"fupernova"},"content":"        w.close();"},{"lineNumber":79,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":81,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"fupernova"},"content":"     * Convert task from program format to text format to prepare for storage."},{"lineNumber":83,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":84,"author":{"gitId":"fupernova"},"content":"     * @param task task to convert."},{"lineNumber":85,"author":{"gitId":"fupernova"},"content":"     * @return converted task."},{"lineNumber":86,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"fupernova"},"content":"    public static String serializeFile(Task task) {"},{"lineNumber":88,"author":{"gitId":"fupernova"},"content":"        String serialized \u003d task.getType();"},{"lineNumber":89,"author":{"gitId":"fupernova"},"content":"        serialized +\u003d \" | \";"},{"lineNumber":90,"author":{"gitId":"fupernova"},"content":"        if (task.checkDone()) {"},{"lineNumber":91,"author":{"gitId":"fupernova"},"content":"            serialized +\u003d \"1 | \";"},{"lineNumber":92,"author":{"gitId":"fupernova"},"content":"        } else {"},{"lineNumber":93,"author":{"gitId":"fupernova"},"content":"            serialized +\u003d \"0 | \";"},{"lineNumber":94,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"fupernova"},"content":"        serialized +\u003d task.getName();"},{"lineNumber":96,"author":{"gitId":"fupernova"},"content":"        if (!(task instanceof Todo)) {"},{"lineNumber":97,"author":{"gitId":"fupernova"},"content":"            serialized +\u003d \" | \";"},{"lineNumber":98,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"fupernova"},"content":"        serialized +\u003d task.getTime();"},{"lineNumber":100,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":101,"author":{"gitId":"fupernova"},"content":"        return serialized + \"\\n\";"},{"lineNumber":102,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":103}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.error.EmptyNameFieldException;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"import duke.error.IllegalAccessException;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"import duke.error.WrongFormatException;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"import duke.task.Deadline;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"import duke.task.Event;"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"import duke.task.Todo;"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"public class TaskList {"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    private ArrayList\u003cTask\u003e Tasks;"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"    private Ui ui;"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    public TaskList(Ui ui) {"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"        this.Tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"        this.ui \u003d ui;"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"        return Tasks;"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":25}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_MAX_CAPACITY \u003d -5;"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_NO_NAME \u003d -4;"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_OUT_OF_BOUNDS_MESSAGE \u003d -3;"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_WRONG_FORMAT_MESSAGE \u003d -2;"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    private static final String GREETING_MESSAGE \u003d \"Wagwan! I is Ali G. West side.\\nWhat is we chattin\u0027 bout today?\";"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Goodbye, big up yourself, keep it real, respekt.\";"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    private static final String BORDER_LINE \u003d \"___________________________________________________________\";"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    private static final String OUT_OF_BOUNDS_MESSAGE \u003d \"You are accessing something that doesn\u0027t exist! Stop being an ignoranus.\";"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"    private static final String WRONG_FORMAT_MESSAGE \u003d \"Are you spasticated? The format is wrong!\";"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    private static final String NO_NAME_MESSAGE \u003d \"Why you be trying to find something with no name? Ave\u0027 you been smoking me special stash?\";"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"    private static final String EXCEED_CAPACITY_MESSAGE \u003d \"Maximum capacity reached\";"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"    private static final String TOTAL_TASK_MESSAGE \u003d \"You is having %d task(s) on your list\";"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"    private static final String SET_TO_DONE_MESSAGE \u003d \" set to done. You\u0027re well smart innit?\";"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"    private static final String ADDED_TO_LIST_MESSAGE \u003d \"Wicked. This ting is now on da list.\";"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"    private static final String DELETED_MESSAGE \u003d \"This ting has been deleted. I could\u0027ve done that task, you stupid.\";"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"    public String getCommand() {"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"        String line \u003d in.nextLine();"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"        return line;"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"    public void printGreeting() {"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"        System.out.println(GREETING_MESSAGE);"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"        printBorderLine();"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"    public void printBorderLine() {"},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"        System.out.println(BORDER_LINE);"},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"    public void sayGoodbye() {"},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"        System.out.println(GOODBYE_MESSAGE);"},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"        printBorderLine();"},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"    public void printTotalTasks() {"},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":"        System.out.println(String.format(TOTAL_TASK_MESSAGE, Task.totalNumberOfTasks));"},{"lineNumber":44,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":"    /** Method used to print each item for \"list\" command */"},{"lineNumber":46,"author":{"gitId":"fupernova"},"content":"    public void printListItem(int index, String type, String status, String name, String date) {"},{"lineNumber":47,"author":{"gitId":"fupernova"},"content":"        System.out.println(index + \". \" + type + \"[\" + status + \"] \" + name + \" \" + date);"},{"lineNumber":48,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"fupernova"},"content":"    public void printMarkedDone(String name) {"},{"lineNumber":50,"author":{"gitId":"fupernova"},"content":"        System.out.println(name + SET_TO_DONE_MESSAGE);"},{"lineNumber":51,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"fupernova"},"content":"     * Prints message for deletion of task"},{"lineNumber":54,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"fupernova"},"content":"     * @param index index of item to delete"},{"lineNumber":56,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"fupernova"},"content":"    public void printDeletedTask(int index, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":58,"author":{"gitId":"fupernova"},"content":"        System.out.println(DELETED_MESSAGE);"},{"lineNumber":59,"author":{"gitId":"fupernova"},"content":"        printDetailsOfTask(index, tasks);"},{"lineNumber":60,"author":{"gitId":"fupernova"},"content":"        printTotalTasks();"},{"lineNumber":61,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"fupernova"},"content":"    public void printDetailsOfTask(int index, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":63,"author":{"gitId":"fupernova"},"content":"        Task task \u003d tasks.get(index);"},{"lineNumber":64,"author":{"gitId":"fupernova"},"content":"        System.out.println(task.getType() + \"[\" + task.getStatusIcon() + \"] \" + task.getName() + \" \" + task.getDate());"},{"lineNumber":65,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"fupernova"},"content":"    public void printAddedToList(int current, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":67,"author":{"gitId":"fupernova"},"content":"        System.out.println(ADDED_TO_LIST_MESSAGE);"},{"lineNumber":68,"author":{"gitId":"fupernova"},"content":"        printDetailsOfTask(current, tasks);"},{"lineNumber":69,"author":{"gitId":"fupernova"},"content":"        printTotalTasks();"},{"lineNumber":70,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"fupernova"},"content":"     * Prints appropriate error message according to error type."},{"lineNumber":73,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"fupernova"},"content":"     * @param type type of error thrown."},{"lineNumber":75,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"fupernova"},"content":"    public void printError(int type) {"},{"lineNumber":77,"author":{"gitId":"fupernova"},"content":"        // No fallthrough required"},{"lineNumber":78,"author":{"gitId":"fupernova"},"content":"        switch (type) {"},{"lineNumber":79,"author":{"gitId":"fupernova"},"content":"        case ERR_OUT_OF_BOUNDS_MESSAGE:"},{"lineNumber":80,"author":{"gitId":"fupernova"},"content":"            System.out.println(OUT_OF_BOUNDS_MESSAGE);"},{"lineNumber":81,"author":{"gitId":"fupernova"},"content":"            break;"},{"lineNumber":82,"author":{"gitId":"fupernova"},"content":"        case ERR_WRONG_FORMAT_MESSAGE:"},{"lineNumber":83,"author":{"gitId":"fupernova"},"content":"            System.out.println(WRONG_FORMAT_MESSAGE);"},{"lineNumber":84,"author":{"gitId":"fupernova"},"content":"            break;"},{"lineNumber":85,"author":{"gitId":"fupernova"},"content":"        case ERR_NO_NAME:"},{"lineNumber":86,"author":{"gitId":"fupernova"},"content":"            System.out.println(NO_NAME_MESSAGE);"},{"lineNumber":87,"author":{"gitId":"fupernova"},"content":"            break;"},{"lineNumber":88,"author":{"gitId":"fupernova"},"content":"        case ERR_MAX_CAPACITY:"},{"lineNumber":89,"author":{"gitId":"fupernova"},"content":"            System.out.println(EXCEED_CAPACITY_MESSAGE);"},{"lineNumber":90,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"fupernova"},"content":"        printBorderLine();"},{"lineNumber":92,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":93}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"import duke.error.EmptyNameFieldException;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"import duke.error.WrongFormatException;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"import duke.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"import duke.task.Event;"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"import duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"import duke.task.Todo;"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"public class AddCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_NO_NAME \u003d -4;"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_WRONG_FORMAT_MESSAGE \u003d -2;"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    private static final int ADD_TODO \u003d 4;"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"    private static final int ADD_DEADLINE \u003d 5;"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    private static final int ADD_EVENT \u003d 6;"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"    private final TaskList taskList;"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"    private final String input;"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"    private final Ui ui;"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"    public AddCommand(String input, TaskList taskList, Ui ui) {"},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"        this.input \u003d input;"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"        this.ui \u003d ui;"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"    public void execute(Ui ui) {"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"        ArrayList\u003cTask\u003e Tasks \u003d taskList.getTasks();"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"        addItem(this.input, Tasks);"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"     * Parses type of item to add and calls appropriate method."},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"     * @param line raw input given by user."},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"    public void addItem(String line, ArrayList\u003cTask\u003e Tasks) {"},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":"            String prefix \u003d line.split(\" \")[0];"},{"lineNumber":44,"author":{"gitId":"fupernova"},"content":"            int itemType \u003d getItemType(prefix);"},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":"            // No fallthrough required"},{"lineNumber":46,"author":{"gitId":"fupernova"},"content":"            switch (itemType) {"},{"lineNumber":47,"author":{"gitId":"fupernova"},"content":"            case ADD_TODO:"},{"lineNumber":48,"author":{"gitId":"fupernova"},"content":"                addTodo(line, Tasks);"},{"lineNumber":49,"author":{"gitId":"fupernova"},"content":"                break;"},{"lineNumber":50,"author":{"gitId":"fupernova"},"content":"            case ADD_DEADLINE:"},{"lineNumber":51,"author":{"gitId":"fupernova"},"content":"                addDeadline(line, Tasks);"},{"lineNumber":52,"author":{"gitId":"fupernova"},"content":"                break;"},{"lineNumber":53,"author":{"gitId":"fupernova"},"content":"            case ADD_EVENT:"},{"lineNumber":54,"author":{"gitId":"fupernova"},"content":"                addEvent(line, Tasks);"},{"lineNumber":55,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"fupernova"},"content":"            ui.printBorderLine();"},{"lineNumber":57,"author":{"gitId":"fupernova"},"content":"        } catch (WrongFormatException e) {"},{"lineNumber":58,"author":{"gitId":"fupernova"},"content":"            ui.printError(ERR_WRONG_FORMAT_MESSAGE);"},{"lineNumber":59,"author":{"gitId":"fupernova"},"content":"        } catch (EmptyNameFieldException e) {"},{"lineNumber":60,"author":{"gitId":"fupernova"},"content":"            ui.printError(ERR_NO_NAME);"},{"lineNumber":61,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"fupernova"},"content":"     * Parses the type of task to add to list."},{"lineNumber":65,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"fupernova"},"content":"     * @param line input from user."},{"lineNumber":67,"author":{"gitId":"fupernova"},"content":"     * @return Type of task to add if valid input, error otherwise."},{"lineNumber":68,"author":{"gitId":"fupernova"},"content":"     * @throws WrongFormatException If type of task is invalid."},{"lineNumber":69,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"fupernova"},"content":"    public static int getItemType(String line) throws WrongFormatException {"},{"lineNumber":71,"author":{"gitId":"fupernova"},"content":"        if (line.equalsIgnoreCase(\"todo\")) {"},{"lineNumber":72,"author":{"gitId":"fupernova"},"content":"            return ADD_TODO;"},{"lineNumber":73,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"fupernova"},"content":"        if (line.equalsIgnoreCase(\"deadline\")) {"},{"lineNumber":75,"author":{"gitId":"fupernova"},"content":"            return ADD_DEADLINE;"},{"lineNumber":76,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"fupernova"},"content":"        if (line.equalsIgnoreCase(\"event\")) {"},{"lineNumber":78,"author":{"gitId":"fupernova"},"content":"            return ADD_EVENT;"},{"lineNumber":79,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"fupernova"},"content":"        throw new WrongFormatException();"},{"lineNumber":81,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"fupernova"},"content":"    public void addTodo(String line, ArrayList\u003cTask\u003e tasks) throws EmptyNameFieldException {"},{"lineNumber":83,"author":{"gitId":"fupernova"},"content":"        if (line.length() \u003c 6) {"},{"lineNumber":84,"author":{"gitId":"fupernova"},"content":"            throw new EmptyNameFieldException();"},{"lineNumber":85,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"fupernova"},"content":"        int current \u003d Task.totalNumberOfTasks;"},{"lineNumber":87,"author":{"gitId":"fupernova"},"content":"        String nameOfTask \u003d line.substring(5);"},{"lineNumber":88,"author":{"gitId":"fupernova"},"content":"        tasks.add(new Todo(nameOfTask));"},{"lineNumber":89,"author":{"gitId":"fupernova"},"content":"        Task.totalNumberOfTasks +\u003d 1;"},{"lineNumber":90,"author":{"gitId":"fupernova"},"content":"        this.ui.printAddedToList(current, tasks);"},{"lineNumber":91,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"fupernova"},"content":"    public void addDeadline(String line, ArrayList\u003cTask\u003e tasks) throws EmptyNameFieldException, WrongFormatException {"},{"lineNumber":93,"author":{"gitId":"fupernova"},"content":"        if (line.length() \u003c 10) {"},{"lineNumber":94,"author":{"gitId":"fupernova"},"content":"            throw new EmptyNameFieldException();"},{"lineNumber":95,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"fupernova"},"content":"        if (line.contains(\"/by\")) {"},{"lineNumber":97,"author":{"gitId":"fupernova"},"content":"            int current \u003d Task.totalNumberOfTasks;"},{"lineNumber":98,"author":{"gitId":"fupernova"},"content":"            // Details of task starts at index 9 of input"},{"lineNumber":99,"author":{"gitId":"fupernova"},"content":"            String nameAndDeadline \u003d line.substring(9);"},{"lineNumber":100,"author":{"gitId":"fupernova"},"content":"            String[] split \u003d nameAndDeadline.split(\" /by \");"},{"lineNumber":101,"author":{"gitId":"fupernova"},"content":"            String name \u003d split[0];"},{"lineNumber":102,"author":{"gitId":"fupernova"},"content":"            String deadline \u003d split[1];"},{"lineNumber":103,"author":{"gitId":"fupernova"},"content":"            tasks.add(new Deadline(name, deadline));"},{"lineNumber":104,"author":{"gitId":"fupernova"},"content":"            Task.totalNumberOfTasks +\u003d 1;"},{"lineNumber":105,"author":{"gitId":"fupernova"},"content":"            this.ui.printAddedToList(current, tasks);"},{"lineNumber":106,"author":{"gitId":"fupernova"},"content":"        } else {"},{"lineNumber":107,"author":{"gitId":"fupernova"},"content":"            throw new WrongFormatException();"},{"lineNumber":108,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"fupernova"},"content":"    public void addEvent(String nameOfTask, ArrayList\u003cTask\u003e tasks) throws EmptyNameFieldException, WrongFormatException {"},{"lineNumber":111,"author":{"gitId":"fupernova"},"content":"        if (nameOfTask.length() \u003c 7) {"},{"lineNumber":112,"author":{"gitId":"fupernova"},"content":"            throw new EmptyNameFieldException();"},{"lineNumber":113,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"fupernova"},"content":"        if (nameOfTask.contains(\"/at\")) {"},{"lineNumber":115,"author":{"gitId":"fupernova"},"content":"            int current \u003d Task.totalNumberOfTasks;"},{"lineNumber":116,"author":{"gitId":"fupernova"},"content":"            // Details of task starts at index 6 of input"},{"lineNumber":117,"author":{"gitId":"fupernova"},"content":"            String nameAndTime \u003d nameOfTask.substring(6);"},{"lineNumber":118,"author":{"gitId":"fupernova"},"content":"            String[] split \u003d nameAndTime.split(\" /at \");"},{"lineNumber":119,"author":{"gitId":"fupernova"},"content":"            String name \u003d split[0];"},{"lineNumber":120,"author":{"gitId":"fupernova"},"content":"            String time \u003d split[1];"},{"lineNumber":121,"author":{"gitId":"fupernova"},"content":"            tasks.add(new Event(name, time));"},{"lineNumber":122,"author":{"gitId":"fupernova"},"content":"            Task.totalNumberOfTasks +\u003d 1;"},{"lineNumber":123,"author":{"gitId":"fupernova"},"content":"            this.ui.printAddedToList(current, tasks);"},{"lineNumber":124,"author":{"gitId":"fupernova"},"content":"        } else {"},{"lineNumber":125,"author":{"gitId":"fupernova"},"content":"            throw new WrongFormatException();"},{"lineNumber":126,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":128}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.Ui;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"public class ByeCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"    public void execute(Ui ui) {"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"    public ByeCommand() {"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":13}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.Ui;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"public abstract class Command {"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"    protected Ui ui;"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"    // To be overriden"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"    public abstract void execute(Ui ui);"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":11}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"import duke.error.EmptyNameFieldException;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"import duke.error.IllegalAccessException;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"    private static final int INVALID_INDEX \u003d -1;"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_NO_NAME \u003d -4;"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_OUT_OF_BOUNDS_MESSAGE \u003d -3;"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    private final String input;"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    private final TaskList taskList;"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"    private final Ui ui;"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"    public DeleteCommand(String input, TaskList taskList, Ui ui) {"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"        this.input \u003d input;"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"        this.ui \u003d ui;"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":"    public void execute(Ui ui) {"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"            ArrayList\u003cTask\u003e tasks \u003d this.taskList.getTasks();"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"            deleteItem(this.input, tasks);"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"        } catch (IllegalAccessException e) {"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"            ui.printError(ERR_OUT_OF_BOUNDS_MESSAGE);"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"        } catch (EmptyNameFieldException e) {"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"            ui.printError(ERR_NO_NAME);"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"     * Deletes item from task list if input format is correct."},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"     * @param line user input."},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyNameFieldException if index to delete is not given."},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":"     * @throws IllegalAccessException if index is out of bounds."},{"lineNumber":44,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":"    public void deleteItem(String line, ArrayList\u003cTask\u003e tasks) throws EmptyNameFieldException, IllegalAccessException {"},{"lineNumber":46,"author":{"gitId":"fupernova"},"content":"        if (line.length() \u003c 8) {"},{"lineNumber":47,"author":{"gitId":"fupernova"},"content":"            throw new EmptyNameFieldException();"},{"lineNumber":48,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"fupernova"},"content":"        int index \u003dcheckValidDelete(line);"},{"lineNumber":50,"author":{"gitId":"fupernova"},"content":"        if (index \u003d\u003d INVALID_INDEX) {"},{"lineNumber":51,"author":{"gitId":"fupernova"},"content":"            throw new IllegalAccessException();"},{"lineNumber":52,"author":{"gitId":"fupernova"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"fupernova"},"content":"            Task.totalNumberOfTasks -\u003d 1;"},{"lineNumber":54,"author":{"gitId":"fupernova"},"content":"            this.ui.printDeletedTask(index-1, tasks);"},{"lineNumber":55,"author":{"gitId":"fupernova"},"content":"            tasks.remove(index-1);"},{"lineNumber":56,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"fupernova"},"content":"        this.ui.printBorderLine();"},{"lineNumber":58,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"fupernova"},"content":"     * Checks for presence of number on index 7 of input."},{"lineNumber":61,"author":{"gitId":"fupernova"},"content":"     * Then check if the number is within bounds."},{"lineNumber":62,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"fupernova"},"content":"     * @param line input from user."},{"lineNumber":64,"author":{"gitId":"fupernova"},"content":"     * @return index of item to mark as done if valid, -1 otherwise."},{"lineNumber":65,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"fupernova"},"content":"    public int checkValidDelete(String line) {"},{"lineNumber":67,"author":{"gitId":"fupernova"},"content":"        if (line.substring(7).matches(\"[0-9]+\")) {"},{"lineNumber":68,"author":{"gitId":"fupernova"},"content":"            int listNum \u003d Integer.parseInt(line.substring(7));"},{"lineNumber":69,"author":{"gitId":"fupernova"},"content":"            // Check for illegal access to out of bounds index"},{"lineNumber":70,"author":{"gitId":"fupernova"},"content":"            if (listNum \u003e Task.totalNumberOfTasks || listNum \u003d\u003d 0) {"},{"lineNumber":71,"author":{"gitId":"fupernova"},"content":"                return INVALID_INDEX;"},{"lineNumber":72,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"fupernova"},"content":"            return listNum;"},{"lineNumber":74,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"fupernova"},"content":"        return INVALID_INDEX;"},{"lineNumber":76,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":77}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"public class ListCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"    private static final String LIST_ITEMS_MESSAGE \u003d \"Eez are the tings you added to the list\";"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"    private final String input;"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"    private final TaskList taskList;"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"    public ListCommand(String input, TaskList taskList, Ui ui) {"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"        this.input \u003d input;"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"        this.ui \u003d ui;"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"    public void execute(Ui ui) {"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"        ArrayList\u003cTask\u003e tasks \u003d this.taskList.getTasks();"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"        listItems(tasks);"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"    /** Lists all items that were added to the list. */"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":"    public void listItems(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"        System.out.println(LIST_ITEMS_MESSAGE);"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"        for(int i \u003d 0; i \u003c Task.totalNumberOfTasks; i++) {"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"            this.ui.printListItem(i+1, tasks.get(i).getType(), tasks.get(i).getStatusIcon(),"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"                    tasks.get(i).getName(), tasks.get(i).getDate());"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"        this.ui.printBorderLine();"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":35}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"import duke.error.EmptyNameFieldException;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"import duke.error.IllegalAccessException;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"public class MarkCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_NO_NAME \u003d -4;"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_OUT_OF_BOUNDS_MESSAGE \u003d -3;"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    private static final int INVALID_INDEX \u003d -1;"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    private final String input;"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    private final TaskList taskList;"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    public MarkCommand(String input, TaskList taskList, Ui ui) {"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"        this.input \u003d input;"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"        this.ui \u003d ui;"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"    public void execute(Ui ui) {"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"            ArrayList\u003cTask\u003e tasks \u003d this.taskList.getTasks();"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"            markAsDone(input, tasks);"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"        } catch (IllegalAccessException e) {"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"            ui.printError(ERR_OUT_OF_BOUNDS_MESSAGE);"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"        } catch (EmptyNameFieldException e) {"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"            ui.printError(ERR_NO_NAME);"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"     * Marks a task as done."},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"     * Checks for out of bounds access and presence of numerical value."},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"     * @param line user input."},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"     * @throws IllegalAccessException if index given is out of bounds."},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyNameFieldException if index is not given."},{"lineNumber":44,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":"    public void markAsDone(String line, ArrayList\u003cTask\u003e tasks) throws IllegalAccessException, EmptyNameFieldException {"},{"lineNumber":46,"author":{"gitId":"fupernova"},"content":"        if (line.length() \u003c 6) {"},{"lineNumber":47,"author":{"gitId":"fupernova"},"content":"            throw new EmptyNameFieldException();"},{"lineNumber":48,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"fupernova"},"content":"        int listNum \u003d checkValidDone(line);"},{"lineNumber":50,"author":{"gitId":"fupernova"},"content":"        if (listNum \u003d\u003d INVALID_INDEX) {"},{"lineNumber":51,"author":{"gitId":"fupernova"},"content":"            throw new IllegalAccessException();"},{"lineNumber":52,"author":{"gitId":"fupernova"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"fupernova"},"content":"            listNum -\u003d 1;"},{"lineNumber":54,"author":{"gitId":"fupernova"},"content":"            tasks.get(listNum).setDone();"},{"lineNumber":55,"author":{"gitId":"fupernova"},"content":"            this.ui.printMarkedDone(tasks.get(listNum).getName());"},{"lineNumber":56,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"fupernova"},"content":"        this.ui.printBorderLine();"},{"lineNumber":58,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"fupernova"},"content":"     * Checks for presence of number on index 5 of input."},{"lineNumber":61,"author":{"gitId":"fupernova"},"content":"     * Then check if the number is within bounds."},{"lineNumber":62,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"fupernova"},"content":"     * @param line input from user."},{"lineNumber":64,"author":{"gitId":"fupernova"},"content":"     * @return index of item to mark as done if valid, -1 otherwise."},{"lineNumber":65,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"fupernova"},"content":"    public static int checkValidDone(String line) {"},{"lineNumber":67,"author":{"gitId":"fupernova"},"content":"        if (line.substring(5).matches(\"[0-9]+\")) {"},{"lineNumber":68,"author":{"gitId":"fupernova"},"content":"            int listNum \u003d Integer.parseInt(line.substring(5));"},{"lineNumber":69,"author":{"gitId":"fupernova"},"content":"            // Check for illegal access to out of bounds index"},{"lineNumber":70,"author":{"gitId":"fupernova"},"content":"            if (listNum \u003e Task.totalNumberOfTasks || listNum \u003d\u003d 0) {"},{"lineNumber":71,"author":{"gitId":"fupernova"},"content":"                return INVALID_INDEX;"},{"lineNumber":72,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"fupernova"},"content":"            return listNum;"},{"lineNumber":74,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"fupernova"},"content":"        return INVALID_INDEX;"},{"lineNumber":76,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":77}},{"path":"src/main/java/duke/error/EmptyNameFieldException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class EmptyNameFieldException extends Exception {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":4}},{"path":"src/main/java/duke/error/IllegalAccessException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class IllegalAccessException extends Exception {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":5}},{"path":"src/main/java/duke/error/WrongFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class WrongFormatException extends Exception{"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":5}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"    protected static String deadline;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"    public Deadline(String name, String deadline) {"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"        super(name);"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"    public String getType() {"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"        return \"[D]\";"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    public String getDate() {"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"        return \"(by: \" + this.deadline + \")\";"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"    public String getTime() {"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"        return this.deadline;"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"    protected static String eventTime;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"    public Event(String name, String eventTime) {"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"        super(name);"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"    public String getType() {"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"        return \"[E]\";"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    public String getDate() {"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"        return \"(at: \" + this.eventTime + \")\";"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"    public String getTime() {"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"        return this.eventTime;"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"    protected String name;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"    public static int totalNumberOfTasks \u003d 0;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"    protected Task(String name) {"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"        this.name \u003d name;"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"    public void setDone() {"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"        this.isDone \u003d true;"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    public boolean checkDone() {"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"        return this.isDone;"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"     * @return \"x\" if duke.task is done, empty space otherwise"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"    public String getStatusIcon() {"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"        return (isDone? \"\\u2718\" : \" \");"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":"    public String getName() {"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"        return name;"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"    // To be overridden"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"    public String getType() {"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"        return \"[ ]\";"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"    // To be overridden"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"    public String getDate() {"},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"        return \"\";"},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"    // To be overridden"},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"    public String getTime() {"},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"        return \"\";"},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":42}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"    public Todo(String name) {"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"        super(name);"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"    public String getType() {"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"        return \"[T]\";"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":13}},{"path":"tasklogs/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"[T] | 0 | change amp"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":"[E] | 1 | write guitar part | saturday 9pm"},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"[E] | 1 | live gig | saturday 9pm"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"[T] | 0 | logos/sublunary"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"[T] | 1 | baby blue"}],"authorContributionMap":{"fupernova":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"todo change amp"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"blah"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"fak ni"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"blah"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"deadline remaster drums /by saturday 2359"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"list"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"write guitar part"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"event record /at monday 2-4"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"todo add guitars /at thursday 8pm"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"deadline restring guitar /by tuesday 33"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"list"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"done 3"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"list"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"event live gig /at friday 10pm"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"done 5"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"done 10"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"list"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"bye"}],"authorContributionMap":{"fupernova":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"fupernova":1,"-":20}}]
