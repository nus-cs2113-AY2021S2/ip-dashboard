[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"## When Duke meets Staines"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"What\u0027s this then? Me thinks its some kind of fancy tekmology I can use on me compooter. Wicked! Wait till I show this to me Julie and Rainbow Jeremy."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"Duke chatbot inspired by Ali G. West Side. Done as part of individual project component of CS2113. All wacky typos are intentional."}],"authorContributionMap":{"fupernova":3,"-":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"# Da Ali G task helper"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":"By: `Xia Fuxi` Latest update: `24 Feb 2021`"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"![logo](./ali-g.png)"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"- [Da Ali G task helper](#da-ali-g-task-helper)"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"  * [1. Introduction](#1-introduction)"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"  * [2. Quick Start](#2-quick-start)"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"  * [3. Features](#3-features)"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"    + [3.1 Add a Todo task: `todo`](#31-add-a-todo-task-todo)"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"    + [3.2 Add a Deadline task: `deadline`](#32-add-a-deadline-task-deadline)"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"    + [3.3 Add an Event task: `event`](#33-add-an-event-task-event)"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"    + [3.4 Mark a task as done: `done`](#34-mark-a-task-as-done-done)"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    + [3.5 List all the tasks: `list`](#35-list-all-the-tasks-list)"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"    + [3.6 Delete a task: `delete`](#36-delete-a-task-delete)"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    + [3.7 Search tasks by keyword: `find`](#37-search-tasks-by-keyword-find)"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    + [3.8 Exit the program: `bye`](#38-exit-the-program-bye)"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"    + [3.9 Task Storage](#39-task-storage)"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"  * [4. Frequently Asked Question (FAQ)](#4-frequently-asked-questions-faq)"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"  * [5. Command Summary](#5-command-summary)"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"## 1. Introduction"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"Diggity check it, booyakasha! Wagwan, my name be Ali G and I is here to help you manage your everyday life."},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"Whether it be your weekly ganja shipment or your next murder trial, I is able to help"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"you remember bare important tings that your not very cleverer little head always be forgettin\u0027. I use only"},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"the most states of the art tekmology, the **command line interface (CLI)**, to help you out."},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":"## 2. Quick Start"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"1. Ensure you have `Java 11` installed on your computer."},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"2. Download the latest `Duke.jar` from [here](https://github.com/fupernova/ip/releases)."},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"3. Move the `Duke.jar` into the folder you wish to run it from."},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"4. Open up **command prompt** and navigate to the directory where `Duke.jar` resides."},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"5. Run the command `java -jar Duke.jar` and you should see the welcome message:"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"```"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"Wagwan! I is Ali G. West side."},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"What is we chattin\u0027 bout today?"},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"___________________________________________________________"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"```"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"## 3. Features"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"### 3.1 Add a Todo task: `todo`"},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":"This command adds a todo task to the task list."},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":"Usage: `todo \u003cTask name\u003e`"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"fupernova"},"content":"Sample input: `todo restring guitar`"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"fupernova"},"content":"Expected output:"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"fupernova"},"content":"```"},{"lineNumber":52,"author":{"gitId":"fupernova"},"content":"Wicked. This ting is now on da list."},{"lineNumber":53,"author":{"gitId":"fupernova"},"content":"[T][ ] restring guitar "},{"lineNumber":54,"author":{"gitId":"fupernova"},"content":"You is having 1 task(s) on your list."},{"lineNumber":55,"author":{"gitId":"fupernova"},"content":"___________________________________________________________"},{"lineNumber":56,"author":{"gitId":"fupernova"},"content":"```"},{"lineNumber":57,"author":{"gitId":"fupernova"},"content":"### 3.2 Add a Deadline task: `deadline`"},{"lineNumber":58,"author":{"gitId":"fupernova"},"content":"This command adds a deadline task to the task list."},{"lineNumber":59,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":60,"author":{"gitId":"fupernova"},"content":"Usage: `deadline \u003cTask name\u003e /by \u003cYYYY-MM-DD\u003e`"},{"lineNumber":61,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":62,"author":{"gitId":"fupernova"},"content":"Sample input: `deadline remaster guitar track /by 2020-02-27`"},{"lineNumber":63,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":64,"author":{"gitId":"fupernova"},"content":"Expected output:"},{"lineNumber":65,"author":{"gitId":"fupernova"},"content":"```"},{"lineNumber":66,"author":{"gitId":"fupernova"},"content":"Wicked. This ting is now on da list."},{"lineNumber":67,"author":{"gitId":"fupernova"},"content":"[D][ ] remaster guitar track (by: 2020-02-27)"},{"lineNumber":68,"author":{"gitId":"fupernova"},"content":"You is having 2 task(s) on your list."},{"lineNumber":69,"author":{"gitId":"fupernova"},"content":"___________________________________________________________"},{"lineNumber":70,"author":{"gitId":"fupernova"},"content":"```"},{"lineNumber":71,"author":{"gitId":"fupernova"},"content":"### 3.3 Add an Event task: `event`"},{"lineNumber":72,"author":{"gitId":"fupernova"},"content":"This command adds an event task to the task list."},{"lineNumber":73,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":74,"author":{"gitId":"fupernova"},"content":"Usage: `event \u003ctask name\u003e /at \u003cYYYY-MM-DD\u003e`"},{"lineNumber":75,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":76,"author":{"gitId":"fupernova"},"content":"Sample input: `event live gig /at 2020-03-05`"},{"lineNumber":77,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":78,"author":{"gitId":"fupernova"},"content":"Expected output:"},{"lineNumber":79,"author":{"gitId":"fupernova"},"content":"```"},{"lineNumber":80,"author":{"gitId":"fupernova"},"content":"Wicked. This ting is now on da list."},{"lineNumber":81,"author":{"gitId":"fupernova"},"content":"[E][ ] live gig (at: 2020-03-05)"},{"lineNumber":82,"author":{"gitId":"fupernova"},"content":"You is having 3 task(s) on your list."},{"lineNumber":83,"author":{"gitId":"fupernova"},"content":"___________________________________________________________"},{"lineNumber":84,"author":{"gitId":"fupernova"},"content":"```"},{"lineNumber":85,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":86,"author":{"gitId":"fupernova"},"content":"### 3.4 Mark a task as done: `done`"},{"lineNumber":87,"author":{"gitId":"fupernova"},"content":"This command marks one task on the list as done."},{"lineNumber":88,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":89,"author":{"gitId":"fupernova"},"content":"Usage: `done \u003ctask number\u003e`"},{"lineNumber":90,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":91,"author":{"gitId":"fupernova"},"content":"Sample input: `done 2`"},{"lineNumber":92,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":93,"author":{"gitId":"fupernova"},"content":"Expected output:"},{"lineNumber":94,"author":{"gitId":"fupernova"},"content":"```"},{"lineNumber":95,"author":{"gitId":"fupernova"},"content":"remaster guitar track set to done. You is well smart innit?"},{"lineNumber":96,"author":{"gitId":"fupernova"},"content":"___________________________________________________________"},{"lineNumber":97,"author":{"gitId":"fupernova"},"content":"```"},{"lineNumber":98,"author":{"gitId":"fupernova"},"content":"### 3.5 List all the tasks: `list`"},{"lineNumber":99,"author":{"gitId":"fupernova"},"content":"This command lists all the tasks on the list, including its type and whether it is done."},{"lineNumber":100,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":101,"author":{"gitId":"fupernova"},"content":"Usage: `list`"},{"lineNumber":102,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":103,"author":{"gitId":"fupernova"},"content":"Sample input: `list`"},{"lineNumber":104,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":105,"author":{"gitId":"fupernova"},"content":"Expected output:"},{"lineNumber":106,"author":{"gitId":"fupernova"},"content":"```"},{"lineNumber":107,"author":{"gitId":"fupernova"},"content":"Eez are the tings you added to the list"},{"lineNumber":108,"author":{"gitId":"fupernova"},"content":"1. [T][ ] restring guitar "},{"lineNumber":109,"author":{"gitId":"fupernova"},"content":"2. [D][✘] remaster guitar track (by: 2020-02-27)"},{"lineNumber":110,"author":{"gitId":"fupernova"},"content":"3. [E][ ] live gig (at: 2020-03-05)"},{"lineNumber":111,"author":{"gitId":"fupernova"},"content":"___________________________________________________________"},{"lineNumber":112,"author":{"gitId":"fupernova"},"content":"```"},{"lineNumber":113,"author":{"gitId":"fupernova"},"content":"### 3.6 Delete a task: `delete`"},{"lineNumber":114,"author":{"gitId":"fupernova"},"content":"This command removes a task from the list."},{"lineNumber":115,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":116,"author":{"gitId":"fupernova"},"content":"Usage: `delete \u003ctask number\u003e`"},{"lineNumber":117,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":118,"author":{"gitId":"fupernova"},"content":"Sample input: `delete 1`"},{"lineNumber":119,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":120,"author":{"gitId":"fupernova"},"content":"Expected output:"},{"lineNumber":121,"author":{"gitId":"fupernova"},"content":"```"},{"lineNumber":122,"author":{"gitId":"fupernova"},"content":"This ting has been deleted. I could\u0027ve done that task, you stupid."},{"lineNumber":123,"author":{"gitId":"fupernova"},"content":"[T][ ] restring guitar "},{"lineNumber":124,"author":{"gitId":"fupernova"},"content":"You is having 2 task(s) on your list."},{"lineNumber":125,"author":{"gitId":"fupernova"},"content":"___________________________________________________________"},{"lineNumber":126,"author":{"gitId":"fupernova"},"content":"```"},{"lineNumber":127,"author":{"gitId":"fupernova"},"content":"### 3.7 Search tasks by keyword: `find`"},{"lineNumber":128,"author":{"gitId":"fupernova"},"content":"This command lists down all tasks containing a specific keyword."},{"lineNumber":129,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":130,"author":{"gitId":"fupernova"},"content":"Usage: `find \u003ckeyword\u003e`"},{"lineNumber":131,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":132,"author":{"gitId":"fupernova"},"content":"Sample input: `find gig`"},{"lineNumber":133,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":134,"author":{"gitId":"fupernova"},"content":"Expected output:"},{"lineNumber":135,"author":{"gitId":"fupernova"},"content":"```"},{"lineNumber":136,"author":{"gitId":"fupernova"},"content":"Here are all the tings I cound find."},{"lineNumber":137,"author":{"gitId":"fupernova"},"content":"[E][ ] live gig (at: 2020-03-05)"},{"lineNumber":138,"author":{"gitId":"fupernova"},"content":"___________________________________________________________"},{"lineNumber":139,"author":{"gitId":"fupernova"},"content":"```"},{"lineNumber":140,"author":{"gitId":"fupernova"},"content":"### 3.8 Exit the program: `bye`"},{"lineNumber":141,"author":{"gitId":"fupernova"},"content":"This command shuts down the chatbot. Ali G be snoozing."},{"lineNumber":142,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":143,"author":{"gitId":"fupernova"},"content":"Usage: `bye`"},{"lineNumber":144,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":145,"author":{"gitId":"fupernova"},"content":"Sample input: `bye`"},{"lineNumber":146,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":147,"author":{"gitId":"fupernova"},"content":"Expected output:"},{"lineNumber":148,"author":{"gitId":"fupernova"},"content":"```"},{"lineNumber":149,"author":{"gitId":"fupernova"},"content":"Goodbye, big up yourself, keep it real, respekt."},{"lineNumber":150,"author":{"gitId":"fupernova"},"content":"___________________________________________________________"},{"lineNumber":151,"author":{"gitId":"fupernova"},"content":"```"},{"lineNumber":152,"author":{"gitId":"fupernova"},"content":"### 3.9 Task storage"},{"lineNumber":153,"author":{"gitId":"fupernova"},"content":"#### 3.9.1 Loading data"},{"lineNumber":154,"author":{"gitId":"fupernova"},"content":"Ali G is smart enough to keep a text file"},{"lineNumber":155,"author":{"gitId":"fupernova"},"content":"storing all tasks added to the list. Information in this file will be loaded every"},{"lineNumber":156,"author":{"gitId":"fupernova"},"content":"time you call Ali G to help you."},{"lineNumber":157,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":158,"author":{"gitId":"fupernova"},"content":"#### 3.9.2 Saving data"},{"lineNumber":159,"author":{"gitId":"fupernova"},"content":"Every time the user sends Ali G to snooze with"},{"lineNumber":160,"author":{"gitId":"fupernova"},"content":"`bye`, the text file is updated. "},{"lineNumber":161,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":162,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":163,"author":{"gitId":"fupernova"},"content":"**If you abruptly exit the program without `bye`, Ali G will "},{"lineNumber":164,"author":{"gitId":"fupernova"},"content":"be very upset at your rude behavior and will not save anything for you.**"},{"lineNumber":165,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":166,"author":{"gitId":"fupernova"},"content":"#### 3.9.3 Location of saved tasks"},{"lineNumber":167,"author":{"gitId":"fupernova"},"content":"The text file is saved under ***tasklogs/tasks.txt***."},{"lineNumber":168,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":169,"author":{"gitId":"fupernova"},"content":"## 4. Frequently Asked Questions (FAQ)"},{"lineNumber":170,"author":{"gitId":"fupernova"},"content":"**Q: How do I know that my data was loaded and saved?**"},{"lineNumber":171,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":172,"author":{"gitId":"fupernova"},"content":"**A:** As someone who has shanked many people and gotten away with it, Ali G"},{"lineNumber":173,"author":{"gitId":"fupernova"},"content":"is a very sneaky man and you won\u0027t see any traces of him loading or saving data."},{"lineNumber":174,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":175,"author":{"gitId":"fupernova"},"content":"**Q: I currently do not have a file called tasks.txt. Do I need to create it myself?**"},{"lineNumber":176,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":177,"author":{"gitId":"fupernova"},"content":"**A:** Of course not! Upon calling up Ali G to help you with your life the first time,"},{"lineNumber":178,"author":{"gitId":"fupernova"},"content":"he will create the file for you. He\u0027s got everything covered!"},{"lineNumber":179,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":180,"author":{"gitId":"fupernova"},"content":"## 5. Command Summary"},{"lineNumber":181,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":182,"author":{"gitId":"fupernova"},"content":"Command     | Format                                   | Example"},{"lineNumber":183,"author":{"gitId":"fupernova"},"content":" ----------- | ---------------------------------------- | --------------------------------------"},{"lineNumber":184,"author":{"gitId":"fupernova"},"content":"todo        | `todo \u003ctask description\u003e`                  | `todo restring guitar`"},{"lineNumber":185,"author":{"gitId":"fupernova"},"content":"deadline    | `deadline \u003ctask description\u003e /by \u003cYYYY-MM-DD\u003e`   | `deadline buy new snare /by 2020-04-25`"},{"lineNumber":186,"author":{"gitId":"fupernova"},"content":"event       | `event \u003ctask description\u003e /at \u003cYYYY-MM-DD\u003e`      | `event song recording /at 2020-03-01`"},{"lineNumber":187,"author":{"gitId":"fupernova"},"content":"list        | `list`                                     | `list`"},{"lineNumber":188,"author":{"gitId":"fupernova"},"content":"done        | `done \u003ctask number\u003e`                       | `done 1`"},{"lineNumber":189,"author":{"gitId":"fupernova"},"content":"delete      | `delete \u003ctask number\u003e`                     | `delete 2`"},{"lineNumber":190,"author":{"gitId":"fupernova"},"content":"find        | `find \u003ctask number\u003e`                       | `find book`"},{"lineNumber":191,"author":{"gitId":"fupernova"},"content":"bye         | `bye`                                      | `bye`"},{"lineNumber":192,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":193,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":194,"author":{"gitId":"fupernova"},"content":"###### *All wacky typos in this README are intentional.*"}],"authorContributionMap":{"fupernova":185,"-":9}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.command.ByeCommand;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"import duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"    private static final int IO_ERROR \u003d -7;"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"    private static final String FILEPATH \u003d \"tasklogs/tasks.txt\";"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"    private Storage storage;"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    private Ui ui;"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"    private TaskList taskList;"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    private Parser parser;"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"     * Duke constructor creates instances of Storage, Ui, TaskList and Parser."},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"     * It then loads the saved file into the created TaskList."},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"    public Duke() {"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"        storage \u003d new Storage(FILEPATH);"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"        ui \u003d new Ui();"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"        taskList \u003d new TaskList(ui);"},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"        parser \u003d new Parser(taskList, ui);"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"            storage.loadFile(taskList.getTasks());"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"            this.ui.printError(IO_ERROR);"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"     * Runs the application."},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"     * 1. Print greeting."},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"     * 2. Read commands in a loop and break when \u0027bye\u0027 is the command."},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"     * 3. Prints goodbye message."},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"     * 4. Save tasks into file."},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"    public void run() {"},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":"            ui.printGreeting();"},{"lineNumber":44,"author":{"gitId":"fupernova"},"content":"            while(true) {"},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":"                String command \u003d ui.getCommand();"},{"lineNumber":46,"author":{"gitId":"fupernova"},"content":"                Command parsedCommand \u003d parser.parseCommands(command);"},{"lineNumber":47,"author":{"gitId":"fupernova"},"content":"                // If user provides input that is all whitespace."},{"lineNumber":48,"author":{"gitId":"fupernova"},"content":"                if (parsedCommand \u003d\u003d null) {"},{"lineNumber":49,"author":{"gitId":"fupernova"},"content":"                    continue;"},{"lineNumber":50,"author":{"gitId":"fupernova"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"fupernova"},"content":"                if (parsedCommand instanceof ByeCommand) {"},{"lineNumber":52,"author":{"gitId":"fupernova"},"content":"                    break;"},{"lineNumber":53,"author":{"gitId":"fupernova"},"content":"                }"},{"lineNumber":54,"author":{"gitId":"fupernova"},"content":"                parsedCommand.execute(ui);"},{"lineNumber":55,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"fupernova"},"content":"            ui.sayGoodbye();"},{"lineNumber":57,"author":{"gitId":"fupernova"},"content":"            // Saves tasks into text file after user types \u0027bye\u0027."},{"lineNumber":58,"author":{"gitId":"fupernova"},"content":"            storage.saveFile(taskList.getTasks());"},{"lineNumber":59,"author":{"gitId":"fupernova"},"content":"        } catch (IOException e) {"},{"lineNumber":60,"author":{"gitId":"fupernova"},"content":"            this.ui.printError(IO_ERROR);"},{"lineNumber":61,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":64,"author":{"gitId":"fupernova"},"content":"    public static void main(String[] args) {"},{"lineNumber":65,"author":{"gitId":"fupernova"},"content":"        new Duke().run();"},{"lineNumber":66,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fupernova":65,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.command.MarkCommand;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"import duke.command.ByeCommand;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"import duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"import duke.command.AddCommand;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"import duke.command.FindCommand;"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"import duke.command.ListCommand;"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"import duke.error.EmptyInputException;"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"public class Parser {"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_EMPTY_INPUT \u003d -6;"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_EXIT \u003d 0;"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_LIST \u003d 1;"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_MARK \u003d 2;"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_ADD \u003d 3;"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_DELETE \u003d 4;"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_FIND \u003d 5;"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"    private TaskList tasks;"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"    private Ui ui;"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"    public Parser(TaskList tasks, Ui ui) {"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"        this.ui \u003d ui;"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"     * Parses the command user wants to execute and creates new instance of said command."},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"     * @param line user input."},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"     * @return new instance of command specified by user."},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"    public Command parseCommands(String line) {"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"            int command \u003d getCommand(line);"},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"            // No fallthrough required"},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"            switch (command) {"},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"            case COMMAND_MARK:"},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":"                return new MarkCommand(line, this.tasks, this.ui);"},{"lineNumber":44,"author":{"gitId":"fupernova"},"content":"            case COMMAND_LIST:"},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":"                return new ListCommand(line, this.tasks, this.ui);"},{"lineNumber":46,"author":{"gitId":"fupernova"},"content":"            case COMMAND_ADD:"},{"lineNumber":47,"author":{"gitId":"fupernova"},"content":"                return new AddCommand(line, this.tasks, this.ui);"},{"lineNumber":48,"author":{"gitId":"fupernova"},"content":"            case COMMAND_DELETE:"},{"lineNumber":49,"author":{"gitId":"fupernova"},"content":"                return new DeleteCommand(line, this.tasks, this.ui);"},{"lineNumber":50,"author":{"gitId":"fupernova"},"content":"            case COMMAND_FIND:"},{"lineNumber":51,"author":{"gitId":"fupernova"},"content":"                return new FindCommand(line, this.tasks, this.ui);"},{"lineNumber":52,"author":{"gitId":"fupernova"},"content":"            // If user wants to exit program"},{"lineNumber":53,"author":{"gitId":"fupernova"},"content":"            default:"},{"lineNumber":54,"author":{"gitId":"fupernova"},"content":"                return new ByeCommand();"},{"lineNumber":55,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"fupernova"},"content":"        } catch (EmptyInputException e) {"},{"lineNumber":57,"author":{"gitId":"fupernova"},"content":"            this.ui.printError(ERR_EMPTY_INPUT);"},{"lineNumber":58,"author":{"gitId":"fupernova"},"content":"            return null;"},{"lineNumber":59,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":62,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"fupernova"},"content":"     * Parses the command that user has keyed in and returns a constant integer representing type of command."},{"lineNumber":64,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"fupernova"},"content":"     * @param line input from user."},{"lineNumber":66,"author":{"gitId":"fupernova"},"content":"     * @return The type of command user inputted."},{"lineNumber":67,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyInputException if input is all whitespace."},{"lineNumber":68,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"fupernova"},"content":"    public static int getCommand(String line) throws EmptyInputException {"},{"lineNumber":70,"author":{"gitId":"fupernova"},"content":"        if (line.trim().length() \u003d\u003d 0) {"},{"lineNumber":71,"author":{"gitId":"fupernova"},"content":"            throw new EmptyInputException();"},{"lineNumber":72,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"fupernova"},"content":"        String[] subStrings \u003d line.split(\" \");"},{"lineNumber":74,"author":{"gitId":"fupernova"},"content":"        String command \u003d subStrings[0];"},{"lineNumber":75,"author":{"gitId":"fupernova"},"content":"        if (command.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":76,"author":{"gitId":"fupernova"},"content":"            return COMMAND_EXIT;"},{"lineNumber":77,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"fupernova"},"content":"        if (command.equalsIgnoreCase(\"done\")) {"},{"lineNumber":79,"author":{"gitId":"fupernova"},"content":"            return COMMAND_MARK;"},{"lineNumber":80,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"fupernova"},"content":"        if (command.equalsIgnoreCase(\"list\")) {"},{"lineNumber":82,"author":{"gitId":"fupernova"},"content":"            return COMMAND_LIST;"},{"lineNumber":83,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"fupernova"},"content":"        if (command.equalsIgnoreCase(\"delete\")) {"},{"lineNumber":85,"author":{"gitId":"fupernova"},"content":"            return COMMAND_DELETE;"},{"lineNumber":86,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"fupernova"},"content":"        if (command.equalsIgnoreCase(\"find\")) {"},{"lineNumber":88,"author":{"gitId":"fupernova"},"content":"            return COMMAND_FIND;"},{"lineNumber":89,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"fupernova"},"content":"        return COMMAND_ADD;"},{"lineNumber":91,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":92}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    private final String filePath;"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"    public Storage(String filePath) {"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"     * Loads tasks from saved text file. If file does not exist, create relevant directory and file."},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"     * @param tasks The ArrayList to store all existing tasks from saved text file."},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"     * @throws IOException if there is IO error."},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"    public void loadFile(ArrayList\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"        File f \u003d new File(filePath);"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"        f.getParentFile().mkdirs();"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"        f.createNewFile();"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"        while(s.hasNext()) {"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"            tasks.add(deserializeFile(s.nextLine()));"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"            Task.totalNumberOfTasks +\u003d 1;"},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"     * Converts format of tasks from text file format to program format."},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"     * @param line line from text file."},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":"     * @return Task in the format of program."},{"lineNumber":44,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":"    public static Task deserializeFile(String line) {"},{"lineNumber":46,"author":{"gitId":"fupernova"},"content":"        String[] components \u003d line.split(\" \\\\| \");"},{"lineNumber":47,"author":{"gitId":"fupernova"},"content":"        // No fallthrough required"},{"lineNumber":48,"author":{"gitId":"fupernova"},"content":"        switch(components[0]) {"},{"lineNumber":49,"author":{"gitId":"fupernova"},"content":"        // Case where task is todo"},{"lineNumber":50,"author":{"gitId":"fupernova"},"content":"        case \"[T]\":"},{"lineNumber":51,"author":{"gitId":"fupernova"},"content":"            Task fileTodo \u003d new Todo(components[2]);"},{"lineNumber":52,"author":{"gitId":"fupernova"},"content":"            if (components[1].equals(\"1\")) {"},{"lineNumber":53,"author":{"gitId":"fupernova"},"content":"                fileTodo.setDone();"},{"lineNumber":54,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"fupernova"},"content":"            return fileTodo;"},{"lineNumber":56,"author":{"gitId":"fupernova"},"content":"        // Case where task is event"},{"lineNumber":57,"author":{"gitId":"fupernova"},"content":"        case \"[E]\":"},{"lineNumber":58,"author":{"gitId":"fupernova"},"content":"            Task fileEvent \u003d new Event(components[2], components[3]);"},{"lineNumber":59,"author":{"gitId":"fupernova"},"content":"            if (components[1].equals(\"1\")) {"},{"lineNumber":60,"author":{"gitId":"fupernova"},"content":"                fileEvent.setDone();"},{"lineNumber":61,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"fupernova"},"content":"            return fileEvent;"},{"lineNumber":63,"author":{"gitId":"fupernova"},"content":"        // Case where task is deadline"},{"lineNumber":64,"author":{"gitId":"fupernova"},"content":"        default:"},{"lineNumber":65,"author":{"gitId":"fupernova"},"content":"            Task fileDeadline \u003d new Deadline(components[2], components[3]);"},{"lineNumber":66,"author":{"gitId":"fupernova"},"content":"            if (components[1].equals(\"1\")) {"},{"lineNumber":67,"author":{"gitId":"fupernova"},"content":"                fileDeadline.setDone();"},{"lineNumber":68,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"fupernova"},"content":"            return fileDeadline;"},{"lineNumber":70,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":73,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"fupernova"},"content":"     * Saves all tasks into file after user inputs \"bye\"."},{"lineNumber":75,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"fupernova"},"content":"     * @param tasks The ArrayList containing the tasks to save."},{"lineNumber":77,"author":{"gitId":"fupernova"},"content":"     * @throws IOException if there is IO error."},{"lineNumber":78,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"fupernova"},"content":"    public void saveFile(ArrayList\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":80,"author":{"gitId":"fupernova"},"content":"        StringBuilder saveText \u003d new StringBuilder();"},{"lineNumber":81,"author":{"gitId":"fupernova"},"content":"        for(Task task: tasks) {"},{"lineNumber":82,"author":{"gitId":"fupernova"},"content":"            saveText.append(serializeFile(task));"},{"lineNumber":83,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"fupernova"},"content":"        FileWriter w \u003d new FileWriter(filePath);"},{"lineNumber":85,"author":{"gitId":"fupernova"},"content":"        w.write(saveText.toString());"},{"lineNumber":86,"author":{"gitId":"fupernova"},"content":"        w.close();"},{"lineNumber":87,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":89,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"fupernova"},"content":"     * Convert task from program format to text format to prepare for storage."},{"lineNumber":91,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"fupernova"},"content":"     * @param task task to convert."},{"lineNumber":93,"author":{"gitId":"fupernova"},"content":"     * @return converted task."},{"lineNumber":94,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"fupernova"},"content":"    public static String serializeFile(Task task) {"},{"lineNumber":96,"author":{"gitId":"fupernova"},"content":"        String serialized \u003d task.getType();"},{"lineNumber":97,"author":{"gitId":"fupernova"},"content":"        serialized +\u003d \" | \";"},{"lineNumber":98,"author":{"gitId":"fupernova"},"content":"        if (task.checkDone()) {"},{"lineNumber":99,"author":{"gitId":"fupernova"},"content":"            serialized +\u003d \"1 | \";"},{"lineNumber":100,"author":{"gitId":"fupernova"},"content":"        } else {"},{"lineNumber":101,"author":{"gitId":"fupernova"},"content":"            serialized +\u003d \"0 | \";"},{"lineNumber":102,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"fupernova"},"content":"        serialized +\u003d task.getName();"},{"lineNumber":104,"author":{"gitId":"fupernova"},"content":"        if (!(task instanceof Todo)) {"},{"lineNumber":105,"author":{"gitId":"fupernova"},"content":"            serialized +\u003d \" | \";"},{"lineNumber":106,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"fupernova"},"content":"        serialized +\u003d task.getTime();"},{"lineNumber":108,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":109,"author":{"gitId":"fupernova"},"content":"        return serialized + \"\\n\";"},{"lineNumber":110,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":111}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"    private ArrayList\u003cTask\u003e Tasks;"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"    private Ui ui;"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"    public TaskList(Ui ui) {"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"        this.Tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"        this.ui \u003d ui;"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"        return Tasks;"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":19}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"    // Error constants"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_IO \u003d -7;"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_EMPTY_INPUT \u003d -6;"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_NO_DATE \u003d -5;"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_NO_NAME \u003d -4;"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_OUT_OF_BOUNDS_MESSAGE \u003d -3;"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_WRONG_FORMAT_MESSAGE \u003d -2;"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_WRONG_DATE_FORMAT \u003d -1;"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"    private static final String GREETING_MESSAGE \u003d \"Wagwan! I is Ali G. West side.\\nWhat is we chattin\u0027 bout today?\";"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Goodbye, big up yourself, keep it real, respekt.\";"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"    private static final String BORDER_LINE \u003d \"___________________________________________________________\";"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"    // Error messages"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"    private static final String OUT_OF_BOUNDS_MESSAGE \u003d \"You are accessing something that doesn\u0027t exist! Stop being an ignoranus.\";"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"    private static final String WRONG_FORMAT_MESSAGE \u003d \"I don\u0027t think you are cleverer enough to know that the format is wrong!\";"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"    private static final String NO_NAME_MESSAGE \u003d \"Why you be trying to tell me something with no name? Ave\u0027 you been smoking me special stash?\";"},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"    private static final String NO_DATE_MESSAGE \u003d \"Ave\u0027 you got no understanding of a date? Like Monday the 41th or sumting like that?\";"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":"    private static final String WRONG_DATE_FORMAT_MESSAGE \u003d \"Are you spasticated? The date format is wrong! It should be\" +"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"            \" like YY-DDDD-M or sumting like that...\\nNo wait, its YYYY-MM-DD. I\u0027m bare smart innit?\";"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"    private static final String NO_SEARCH_RESULTS \u003d \"Wait, I can\u0027t find anyting with that name on the list. Are you chatting rubbish?\";"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"    private static final String EMPTY_INPUT_MESSAGE \u003d \"So you is one them not very brighterest persons eh? You did not type anything!\";"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"    private static final String IO_ERROR_MESSAGE \u003d \"I can\u0027t find the file on your compooter! Has your compooter got some virus?\";"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"    private static final String TOTAL_TASK_MESSAGE \u003d \"You is having %d task(s) on your list.\";"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"    private static final String SET_TO_DONE_MESSAGE \u003d \" set to done. You is well smart innit?\";"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"    private static final String ADDED_TO_LIST_MESSAGE \u003d \"Wicked. This ting is now on da list.\";"},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"    private static final String DELETED_MESSAGE \u003d \"This ting has been deleted. I could\u0027ve done that task, you stupid.\";"},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"    private static final String FIND_MESSAGE \u003d \"Here are all the tings I cound find.\";"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"    public String getCommand() {"},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"        return in.nextLine();"},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":44,"author":{"gitId":"fupernova"},"content":"    public void printGreeting() {"},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":"        System.out.println(GREETING_MESSAGE);"},{"lineNumber":46,"author":{"gitId":"fupernova"},"content":"        printBorderLine();"},{"lineNumber":47,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":49,"author":{"gitId":"fupernova"},"content":"    public void printBorderLine() {"},{"lineNumber":50,"author":{"gitId":"fupernova"},"content":"        System.out.println(BORDER_LINE);"},{"lineNumber":51,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":53,"author":{"gitId":"fupernova"},"content":"    /** Prints goodbye message after user inputs \"bye\". */"},{"lineNumber":54,"author":{"gitId":"fupernova"},"content":"    public void sayGoodbye() {"},{"lineNumber":55,"author":{"gitId":"fupernova"},"content":"        System.out.println(GOODBYE_MESSAGE);"},{"lineNumber":56,"author":{"gitId":"fupernova"},"content":"        printBorderLine();"},{"lineNumber":57,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":59,"author":{"gitId":"fupernova"},"content":"    /** Prints total number of tasks in the list. */"},{"lineNumber":60,"author":{"gitId":"fupernova"},"content":"    public void printTotalTasks() {"},{"lineNumber":61,"author":{"gitId":"fupernova"},"content":"        System.out.println(String.format(TOTAL_TASK_MESSAGE, Task.totalNumberOfTasks));"},{"lineNumber":62,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":64,"author":{"gitId":"fupernova"},"content":"    /** Method used to print entire list. */"},{"lineNumber":65,"author":{"gitId":"fupernova"},"content":"    public void printEntireList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":66,"author":{"gitId":"fupernova"},"content":"        for(int i \u003d 0; i \u003c Task.totalNumberOfTasks; i++) {"},{"lineNumber":67,"author":{"gitId":"fupernova"},"content":"            printListItem(i+1, tasks.get(i).getType(), tasks.get(i).getStatusIcon(),"},{"lineNumber":68,"author":{"gitId":"fupernova"},"content":"                    tasks.get(i).getName(), tasks.get(i).getDate());"},{"lineNumber":69,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":72,"author":{"gitId":"fupernova"},"content":"    /** Method used to print each item for \"list\" command. */"},{"lineNumber":73,"author":{"gitId":"fupernova"},"content":"    public void printListItem(int index, String type, String status, String name, String date) {"},{"lineNumber":74,"author":{"gitId":"fupernova"},"content":"        System.out.println(index + \". \" + type + \"[\" + status + \"] \" + name + \" \" + date);"},{"lineNumber":75,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":77,"author":{"gitId":"fupernova"},"content":"    /** Prints name of item that was set to done."},{"lineNumber":78,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"fupernova"},"content":"     * @param name name of task that was set to done."},{"lineNumber":80,"author":{"gitId":"fupernova"},"content":"     * */"},{"lineNumber":81,"author":{"gitId":"fupernova"},"content":"    public void printMarkedDone(String name) {"},{"lineNumber":82,"author":{"gitId":"fupernova"},"content":"        System.out.println(name + SET_TO_DONE_MESSAGE);"},{"lineNumber":83,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":85,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"fupernova"},"content":"     * Prints message for deletion of task."},{"lineNumber":87,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"fupernova"},"content":"     * @param index index of item to delete."},{"lineNumber":89,"author":{"gitId":"fupernova"},"content":"     * @param tasks ArrayList containing all tasks."},{"lineNumber":90,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"fupernova"},"content":"    public void printDeletedTask(int index, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":92,"author":{"gitId":"fupernova"},"content":"        System.out.println(DELETED_MESSAGE);"},{"lineNumber":93,"author":{"gitId":"fupernova"},"content":"        printDetailsOfTask(index, tasks);"},{"lineNumber":94,"author":{"gitId":"fupernova"},"content":"        printTotalTasks();"},{"lineNumber":95,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":97,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"fupernova"},"content":"     * Prints all items in the list that contains a substring in its name."},{"lineNumber":99,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"fupernova"},"content":"     * @param foundItems list of items containing a substring."},{"lineNumber":101,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"fupernova"},"content":"    public void printFoundItems(ArrayList\u003cTask\u003e foundItems) {"},{"lineNumber":103,"author":{"gitId":"fupernova"},"content":"        System.out.println(FIND_MESSAGE);"},{"lineNumber":104,"author":{"gitId":"fupernova"},"content":"        int size \u003d foundItems.size();"},{"lineNumber":105,"author":{"gitId":"fupernova"},"content":"        if (size \u003e 0) {"},{"lineNumber":106,"author":{"gitId":"fupernova"},"content":"            for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":107,"author":{"gitId":"fupernova"},"content":"                printDetailsOfTask(i, foundItems);"},{"lineNumber":108,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":109,"author":{"gitId":"fupernova"},"content":"        } else {"},{"lineNumber":110,"author":{"gitId":"fupernova"},"content":"            System.out.println(NO_SEARCH_RESULTS);"},{"lineNumber":111,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"fupernova"},"content":"        printBorderLine();"},{"lineNumber":113,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":115,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"fupernova"},"content":"     * Prints the type, status, name and date of a given task."},{"lineNumber":117,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":118,"author":{"gitId":"fupernova"},"content":"     * @param index index of task to query."},{"lineNumber":119,"author":{"gitId":"fupernova"},"content":"     * @param tasks ArrayList containing all tasks."},{"lineNumber":120,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"fupernova"},"content":"    public void printDetailsOfTask(int index, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":122,"author":{"gitId":"fupernova"},"content":"        Task task \u003d tasks.get(index);"},{"lineNumber":123,"author":{"gitId":"fupernova"},"content":"        System.out.println(task.getType() + \"[\" + task.getStatusIcon() + \"] \" + task.getName() + \" \" + task.getDate());"},{"lineNumber":124,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":126,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"fupernova"},"content":"     * Prints message sequence after a task has been added to list."},{"lineNumber":128,"author":{"gitId":"fupernova"},"content":"     * Message includes details of task added and total number of tasks."},{"lineNumber":129,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"fupernova"},"content":"     * @param current index of the most recent addition to the list."},{"lineNumber":131,"author":{"gitId":"fupernova"},"content":"     * @param tasks ArrayList of tasks."},{"lineNumber":132,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"fupernova"},"content":"    public void printAddedToList(int current, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":134,"author":{"gitId":"fupernova"},"content":"        System.out.println(ADDED_TO_LIST_MESSAGE);"},{"lineNumber":135,"author":{"gitId":"fupernova"},"content":"        printDetailsOfTask(current, tasks);"},{"lineNumber":136,"author":{"gitId":"fupernova"},"content":"        printTotalTasks();"},{"lineNumber":137,"author":{"gitId":"fupernova"},"content":"        printBorderLine();"},{"lineNumber":138,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":140,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"fupernova"},"content":"     * Prints appropriate error message according to the error type."},{"lineNumber":142,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":143,"author":{"gitId":"fupernova"},"content":"     * @param type type of error thrown."},{"lineNumber":144,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":145,"author":{"gitId":"fupernova"},"content":"    public void printError(int type) {"},{"lineNumber":146,"author":{"gitId":"fupernova"},"content":"        // No fallthrough required"},{"lineNumber":147,"author":{"gitId":"fupernova"},"content":"        switch (type) {"},{"lineNumber":148,"author":{"gitId":"fupernova"},"content":"        case ERR_OUT_OF_BOUNDS_MESSAGE:"},{"lineNumber":149,"author":{"gitId":"fupernova"},"content":"            System.out.println(OUT_OF_BOUNDS_MESSAGE);"},{"lineNumber":150,"author":{"gitId":"fupernova"},"content":"            break;"},{"lineNumber":151,"author":{"gitId":"fupernova"},"content":"        case ERR_WRONG_FORMAT_MESSAGE:"},{"lineNumber":152,"author":{"gitId":"fupernova"},"content":"            System.out.println(WRONG_FORMAT_MESSAGE);"},{"lineNumber":153,"author":{"gitId":"fupernova"},"content":"            break;"},{"lineNumber":154,"author":{"gitId":"fupernova"},"content":"        case ERR_NO_NAME:"},{"lineNumber":155,"author":{"gitId":"fupernova"},"content":"            System.out.println(NO_NAME_MESSAGE);"},{"lineNumber":156,"author":{"gitId":"fupernova"},"content":"            break;"},{"lineNumber":157,"author":{"gitId":"fupernova"},"content":"        case ERR_NO_DATE:"},{"lineNumber":158,"author":{"gitId":"fupernova"},"content":"            System.out.println(NO_DATE_MESSAGE);"},{"lineNumber":159,"author":{"gitId":"fupernova"},"content":"            break;"},{"lineNumber":160,"author":{"gitId":"fupernova"},"content":"        case ERR_WRONG_DATE_FORMAT:"},{"lineNumber":161,"author":{"gitId":"fupernova"},"content":"            System.out.println(WRONG_DATE_FORMAT_MESSAGE);"},{"lineNumber":162,"author":{"gitId":"fupernova"},"content":"            break;"},{"lineNumber":163,"author":{"gitId":"fupernova"},"content":"        case ERR_EMPTY_INPUT:"},{"lineNumber":164,"author":{"gitId":"fupernova"},"content":"            System.out.println(EMPTY_INPUT_MESSAGE);"},{"lineNumber":165,"author":{"gitId":"fupernova"},"content":"            break;"},{"lineNumber":166,"author":{"gitId":"fupernova"},"content":"        case ERR_IO:"},{"lineNumber":167,"author":{"gitId":"fupernova"},"content":"            System.out.println(IO_ERROR_MESSAGE);"},{"lineNumber":168,"author":{"gitId":"fupernova"},"content":"            break;"},{"lineNumber":169,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":170,"author":{"gitId":"fupernova"},"content":"        printBorderLine();"},{"lineNumber":171,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":172}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"import duke.error.EmptyDateException;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"import duke.error.EmptyNameFieldException;"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"import duke.error.WrongFormatException;"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"import duke.task.Deadline;"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"import duke.task.Event;"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"import duke.task.Task;"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"import duke.task.Todo;"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"import java.time.DateTimeException;"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"import java.time.LocalDate;"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"import java.util.ArrayList;"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"public class AddCommand extends Command {"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_NO_DATE \u003d -5;"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_NO_NAME \u003d -4;"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_WRONG_FORMAT_MESSAGE \u003d -2;"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_WRONG_DATE_FORMAT \u003d -1;"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"    private static final int ADD_TODO \u003d 4;"},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"    private static final int ADD_DEADLINE \u003d 5;"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":"    private static final int ADD_EVENT \u003d 6;"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"    private final TaskList taskList;"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"    private final String input;"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"    private final Ui ui;"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"    public AddCommand(String input, TaskList taskList, Ui ui) {"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"        this.input \u003d input;"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"        this.ui \u003d ui;"},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"    public void execute(Ui ui) {"},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"            ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":"            addItem(this.input, tasks);"},{"lineNumber":44,"author":{"gitId":"fupernova"},"content":"        } catch (WrongFormatException e) {"},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":"            this.ui.printError(ERR_WRONG_FORMAT_MESSAGE);"},{"lineNumber":46,"author":{"gitId":"fupernova"},"content":"        } catch (EmptyNameFieldException e) {"},{"lineNumber":47,"author":{"gitId":"fupernova"},"content":"            this.ui.printError(ERR_NO_NAME);"},{"lineNumber":48,"author":{"gitId":"fupernova"},"content":"        } catch (EmptyDateException | ArrayIndexOutOfBoundsException e) {"},{"lineNumber":49,"author":{"gitId":"fupernova"},"content":"            this.ui.printError(ERR_NO_DATE);"},{"lineNumber":50,"author":{"gitId":"fupernova"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":51,"author":{"gitId":"fupernova"},"content":"            this.ui.printError(ERR_WRONG_DATE_FORMAT);"},{"lineNumber":52,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":55,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"fupernova"},"content":"     * Parses type of item to add and calls appropriate method."},{"lineNumber":57,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"fupernova"},"content":"     * @param line raw input given by user."},{"lineNumber":59,"author":{"gitId":"fupernova"},"content":"     * @param tasks ArrayList containing all tasks."},{"lineNumber":60,"author":{"gitId":"fupernova"},"content":"     * @throws WrongFormatException if type of task is not recognised."},{"lineNumber":61,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyNameFieldException if name is not given or all whitespace."},{"lineNumber":62,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyDateException if date is not given or all whitespace."},{"lineNumber":63,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"fupernova"},"content":"    public void addItem(String line, ArrayList\u003cTask\u003e tasks) throws WrongFormatException, EmptyNameFieldException,"},{"lineNumber":65,"author":{"gitId":"fupernova"},"content":"            EmptyDateException {"},{"lineNumber":66,"author":{"gitId":"fupernova"},"content":"        String command \u003d line.split(\" \")[0];"},{"lineNumber":67,"author":{"gitId":"fupernova"},"content":"        int itemType \u003d getItemType(command);"},{"lineNumber":68,"author":{"gitId":"fupernova"},"content":"        // No fallthrough required"},{"lineNumber":69,"author":{"gitId":"fupernova"},"content":"        switch (itemType) {"},{"lineNumber":70,"author":{"gitId":"fupernova"},"content":"        case ADD_TODO:"},{"lineNumber":71,"author":{"gitId":"fupernova"},"content":"            addTodo(line, tasks);"},{"lineNumber":72,"author":{"gitId":"fupernova"},"content":"            break;"},{"lineNumber":73,"author":{"gitId":"fupernova"},"content":"        case ADD_DEADLINE:"},{"lineNumber":74,"author":{"gitId":"fupernova"},"content":"            addDeadline(line, tasks);"},{"lineNumber":75,"author":{"gitId":"fupernova"},"content":"            break;"},{"lineNumber":76,"author":{"gitId":"fupernova"},"content":"        case ADD_EVENT:"},{"lineNumber":77,"author":{"gitId":"fupernova"},"content":"            addEvent(line, tasks);"},{"lineNumber":78,"author":{"gitId":"fupernova"},"content":"            break;"},{"lineNumber":79,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":82,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"fupernova"},"content":"     * Parses the type of task to add to list. Returns a constant integer representing type of task."},{"lineNumber":84,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"fupernova"},"content":"     * @param line input from user."},{"lineNumber":86,"author":{"gitId":"fupernova"},"content":"     * @return Type of task to add if valid input, error otherwise."},{"lineNumber":87,"author":{"gitId":"fupernova"},"content":"     * @throws WrongFormatException If type of task is not recognised."},{"lineNumber":88,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"fupernova"},"content":"    public static int getItemType(String line) throws WrongFormatException {"},{"lineNumber":90,"author":{"gitId":"fupernova"},"content":"        if (line.equalsIgnoreCase(\"todo\")) {"},{"lineNumber":91,"author":{"gitId":"fupernova"},"content":"            return ADD_TODO;"},{"lineNumber":92,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"fupernova"},"content":"        if (line.equalsIgnoreCase(\"deadline\")) {"},{"lineNumber":94,"author":{"gitId":"fupernova"},"content":"            return ADD_DEADLINE;"},{"lineNumber":95,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"fupernova"},"content":"        if (line.equalsIgnoreCase(\"event\")) {"},{"lineNumber":97,"author":{"gitId":"fupernova"},"content":"            return ADD_EVENT;"},{"lineNumber":98,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"fupernova"},"content":"        throw new WrongFormatException();"},{"lineNumber":100,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":102,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"fupernova"},"content":"     * Adds a task of type Todo into the list after checking validity of the input."},{"lineNumber":104,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":105,"author":{"gitId":"fupernova"},"content":"     * @param line user input."},{"lineNumber":106,"author":{"gitId":"fupernova"},"content":"     * @param tasks ArrayList containing all tasks."},{"lineNumber":107,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyNameFieldException if task name is not given."},{"lineNumber":108,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"fupernova"},"content":"    public void addTodo(String line, ArrayList\u003cTask\u003e tasks) throws EmptyNameFieldException {"},{"lineNumber":110,"author":{"gitId":"fupernova"},"content":"        validateTodoFormat(line);"},{"lineNumber":111,"author":{"gitId":"fupernova"},"content":"        int current \u003d Task.totalNumberOfTasks;"},{"lineNumber":112,"author":{"gitId":"fupernova"},"content":"        String nameOfTask \u003d line.substring(5);"},{"lineNumber":113,"author":{"gitId":"fupernova"},"content":"        tasks.add(new Todo(nameOfTask.trim()));"},{"lineNumber":114,"author":{"gitId":"fupernova"},"content":"        Task.totalNumberOfTasks +\u003d 1;"},{"lineNumber":115,"author":{"gitId":"fupernova"},"content":"        this.ui.printAddedToList(current, tasks);"},{"lineNumber":116,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":118,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"fupernova"},"content":"     * Validates user input for task type Todo."},{"lineNumber":120,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":121,"author":{"gitId":"fupernova"},"content":"     * @param line user input."},{"lineNumber":122,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyNameFieldException if task name is not given or all whitespace."},{"lineNumber":123,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":124,"author":{"gitId":"fupernova"},"content":"    public void validateTodoFormat(String line) throws EmptyNameFieldException {"},{"lineNumber":125,"author":{"gitId":"fupernova"},"content":"        // Checks if name field is blank or all whitespace"},{"lineNumber":126,"author":{"gitId":"fupernova"},"content":"        if (line.length() \u003c 6 || line.substring(5).trim().length() \u003d\u003d 0) {"},{"lineNumber":127,"author":{"gitId":"fupernova"},"content":"            throw new EmptyNameFieldException();"},{"lineNumber":128,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":131,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":132,"author":{"gitId":"fupernova"},"content":"     * Adds a task of type Deadline into the list after checking validity of input."},{"lineNumber":133,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":134,"author":{"gitId":"fupernova"},"content":"     * @param line user input."},{"lineNumber":135,"author":{"gitId":"fupernova"},"content":"     * @param tasks ArrayList of tasks."},{"lineNumber":136,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyNameFieldException if task name is not given or all whitespace."},{"lineNumber":137,"author":{"gitId":"fupernova"},"content":"     * @throws WrongFormatException if task name does not contain substring \"/by\""},{"lineNumber":138,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyDateException if date is not given or full of whitespace."},{"lineNumber":139,"author":{"gitId":"fupernova"},"content":"     * @throws DateTimeException if date given cannot be parsed as LocalDate."},{"lineNumber":140,"author":{"gitId":"fupernova"},"content":"     * @throws ArrayIndexOutOfBoundsException if there is nothing after the \"/by\"."},{"lineNumber":141,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"fupernova"},"content":"    public void addDeadline(String line, ArrayList\u003cTask\u003e tasks) throws EmptyNameFieldException,"},{"lineNumber":143,"author":{"gitId":"fupernova"},"content":"            WrongFormatException, EmptyDateException, DateTimeException, ArrayIndexOutOfBoundsException {"},{"lineNumber":144,"author":{"gitId":"fupernova"},"content":"        String[] components \u003d extractDeadlineComponents(line);"},{"lineNumber":145,"author":{"gitId":"fupernova"},"content":"        int current \u003d Task.totalNumberOfTasks;"},{"lineNumber":146,"author":{"gitId":"fupernova"},"content":"        // components[0] contains name, components[1] contains date"},{"lineNumber":147,"author":{"gitId":"fupernova"},"content":"        tasks.add(new Deadline(components[0], components[1]));"},{"lineNumber":148,"author":{"gitId":"fupernova"},"content":"        Task.totalNumberOfTasks +\u003d 1;"},{"lineNumber":149,"author":{"gitId":"fupernova"},"content":"        this.ui.printAddedToList(current, tasks);"},{"lineNumber":150,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":152,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"fupernova"},"content":"     * Extracts the name and date of the Deadline after checking validity of input."},{"lineNumber":154,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":155,"author":{"gitId":"fupernova"},"content":"     * @param line user input."},{"lineNumber":156,"author":{"gitId":"fupernova"},"content":"     * @return components, a string array with 2 elements: name and date."},{"lineNumber":157,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyNameFieldException if task name is not given or is all whitespace."},{"lineNumber":158,"author":{"gitId":"fupernova"},"content":"     * @throws WrongFormatException if task name does not contain substring \"/by\""},{"lineNumber":159,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyDateException if date is not given or is all whitespace."},{"lineNumber":160,"author":{"gitId":"fupernova"},"content":"     * @throws DateTimeException if date given cannot be parsed as LocalDate."},{"lineNumber":161,"author":{"gitId":"fupernova"},"content":"     * @throws ArrayIndexOutOfBoundsException if there is nothing after the \"/by\"."},{"lineNumber":162,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"fupernova"},"content":"    public String[] extractDeadlineComponents(String line) throws EmptyNameFieldException,"},{"lineNumber":164,"author":{"gitId":"fupernova"},"content":"            WrongFormatException, EmptyDateException, DateTimeException, ArrayIndexOutOfBoundsException {"},{"lineNumber":165,"author":{"gitId":"fupernova"},"content":"        validateDeadlineComponents(line);"},{"lineNumber":166,"author":{"gitId":"fupernova"},"content":"        String nameAndDate \u003d line.substring(8);"},{"lineNumber":167,"author":{"gitId":"fupernova"},"content":"        String[] components \u003d nameAndDate.split(\" /by \");"},{"lineNumber":168,"author":{"gitId":"fupernova"},"content":"        String name \u003d components[0];"},{"lineNumber":169,"author":{"gitId":"fupernova"},"content":"        String date \u003d components[1];"},{"lineNumber":170,"author":{"gitId":"fupernova"},"content":"        // Remove any leading or trailing whitespace from name and date."},{"lineNumber":171,"author":{"gitId":"fupernova"},"content":"        components[0] \u003d name.trim();"},{"lineNumber":172,"author":{"gitId":"fupernova"},"content":"        components[1] \u003d date.trim();"},{"lineNumber":173,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":174,"author":{"gitId":"fupernova"},"content":"        return components;"},{"lineNumber":175,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":177,"author":{"gitId":"fupernova"},"content":"    /** Does the following validation checks on input of type Deadline:"},{"lineNumber":178,"author":{"gitId":"fupernova"},"content":"     *  1. Check for the substring \"/by\"."},{"lineNumber":179,"author":{"gitId":"fupernova"},"content":"     *  2. Checks that name and date of task are not empty or all whitespace."},{"lineNumber":180,"author":{"gitId":"fupernova"},"content":"     *  3. Checks that format of date is correct."},{"lineNumber":181,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":182,"author":{"gitId":"fupernova"},"content":"     * @param line user input."},{"lineNumber":183,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyNameFieldException if name is not provided or all whitespace."},{"lineNumber":184,"author":{"gitId":"fupernova"},"content":"     * @throws WrongFormatException if input does not contain substring \"/by\"."},{"lineNumber":185,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyDateException if date is not given or all whitespace."},{"lineNumber":186,"author":{"gitId":"fupernova"},"content":"     * @throws DateTimeException if date is wrong format."},{"lineNumber":187,"author":{"gitId":"fupernova"},"content":"     * @throws ArrayIndexOutOfBoundsException if there are no characters after the substring \"/by\"."},{"lineNumber":188,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":189,"author":{"gitId":"fupernova"},"content":"    public void validateDeadlineComponents(String line) throws EmptyNameFieldException,"},{"lineNumber":190,"author":{"gitId":"fupernova"},"content":"            WrongFormatException, EmptyDateException, DateTimeException, ArrayIndexOutOfBoundsException {"},{"lineNumber":191,"author":{"gitId":"fupernova"},"content":"        if (!line.contains(\"/by\")) {"},{"lineNumber":192,"author":{"gitId":"fupernova"},"content":"            throw new WrongFormatException();"},{"lineNumber":193,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":194,"author":{"gitId":"fupernova"},"content":"        String nameAndDate \u003d line.substring(8);"},{"lineNumber":195,"author":{"gitId":"fupernova"},"content":"        String[] components \u003d nameAndDate.split(\" /by \");"},{"lineNumber":196,"author":{"gitId":"fupernova"},"content":"        String name \u003d components[0];"},{"lineNumber":197,"author":{"gitId":"fupernova"},"content":"        String date \u003d components[1];"},{"lineNumber":198,"author":{"gitId":"fupernova"},"content":"        if (name.trim().length() \u003d\u003d 0) {"},{"lineNumber":199,"author":{"gitId":"fupernova"},"content":"            throw new EmptyNameFieldException();"},{"lineNumber":200,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":201,"author":{"gitId":"fupernova"},"content":"        if (date.trim().length() \u003d\u003d 0) {"},{"lineNumber":202,"author":{"gitId":"fupernova"},"content":"            throw new EmptyDateException();"},{"lineNumber":203,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"fupernova"},"content":"        // Checks if date is of correct format"},{"lineNumber":205,"author":{"gitId":"fupernova"},"content":"        LocalDate.parse(date.trim());"},{"lineNumber":206,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":208,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":209,"author":{"gitId":"fupernova"},"content":"     * Adds a task of type Event into the list after checking validity of input."},{"lineNumber":210,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":211,"author":{"gitId":"fupernova"},"content":"     * @param line user input."},{"lineNumber":212,"author":{"gitId":"fupernova"},"content":"     * @param tasks ArrayList of tasks."},{"lineNumber":213,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyNameFieldException if task name is not given or all whitespace."},{"lineNumber":214,"author":{"gitId":"fupernova"},"content":"     * @throws WrongFormatException if input does not contain substring \"/at\"."},{"lineNumber":215,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyDateException if date is not given or all whitespace."},{"lineNumber":216,"author":{"gitId":"fupernova"},"content":"     * @throws DateTimeException if date cannot be parsed as LocalDate."},{"lineNumber":217,"author":{"gitId":"fupernova"},"content":"     * @throws ArrayIndexOutOfBoundsException if there is nothing after the \"/by\"."},{"lineNumber":218,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":219,"author":{"gitId":"fupernova"},"content":"    public void addEvent(String line, ArrayList\u003cTask\u003e tasks) throws EmptyNameFieldException,"},{"lineNumber":220,"author":{"gitId":"fupernova"},"content":"            WrongFormatException, EmptyDateException, DateTimeException, ArrayIndexOutOfBoundsException {"},{"lineNumber":221,"author":{"gitId":"fupernova"},"content":"        String[] components \u003d extractEventComponents(line);"},{"lineNumber":222,"author":{"gitId":"fupernova"},"content":"        int current \u003d Task.totalNumberOfTasks;"},{"lineNumber":223,"author":{"gitId":"fupernova"},"content":"        // components[0] contains name, components[1] contains date"},{"lineNumber":224,"author":{"gitId":"fupernova"},"content":"        tasks.add(new Event(components[0], components[1]));"},{"lineNumber":225,"author":{"gitId":"fupernova"},"content":"        Task.totalNumberOfTasks +\u003d 1;"},{"lineNumber":226,"author":{"gitId":"fupernova"},"content":"        this.ui.printAddedToList(current, tasks);"},{"lineNumber":227,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":229,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":230,"author":{"gitId":"fupernova"},"content":"     * Extracts name and date of Event after checking validity of input."},{"lineNumber":231,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":232,"author":{"gitId":"fupernova"},"content":"     * @param line user input."},{"lineNumber":233,"author":{"gitId":"fupernova"},"content":"     * @return components, a String array with 2 elements: name and date."},{"lineNumber":234,"author":{"gitId":"fupernova"},"content":"     * @throws WrongFormatException if task does not contain substring \"/at\"."},{"lineNumber":235,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyNameFieldException if task name is not given or all whitespace."},{"lineNumber":236,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyDateException if date is not given or all whitespace."},{"lineNumber":237,"author":{"gitId":"fupernova"},"content":"     * @throws DateTimeException if date cannot be parsed as LocalDate."},{"lineNumber":238,"author":{"gitId":"fupernova"},"content":"     * @throws ArrayIndexOutOfBoundsException if there is nothing after the \"/at\"."},{"lineNumber":239,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":240,"author":{"gitId":"fupernova"},"content":"    public String[] extractEventComponents(String line) throws WrongFormatException,"},{"lineNumber":241,"author":{"gitId":"fupernova"},"content":"            EmptyNameFieldException, EmptyDateException, DateTimeException, ArrayIndexOutOfBoundsException {"},{"lineNumber":242,"author":{"gitId":"fupernova"},"content":"        validateEventComponents(line);"},{"lineNumber":243,"author":{"gitId":"fupernova"},"content":"        String nameAndDate \u003d line.substring(5);"},{"lineNumber":244,"author":{"gitId":"fupernova"},"content":"        String[] components \u003d nameAndDate.split(\" /at \");"},{"lineNumber":245,"author":{"gitId":"fupernova"},"content":"        String name \u003d components[0];"},{"lineNumber":246,"author":{"gitId":"fupernova"},"content":"        String date \u003d components[1];"},{"lineNumber":247,"author":{"gitId":"fupernova"},"content":"        // Remove any leading or trailing whitespace from name and date."},{"lineNumber":248,"author":{"gitId":"fupernova"},"content":"        components[0] \u003d name.trim();"},{"lineNumber":249,"author":{"gitId":"fupernova"},"content":"        components[1] \u003d date.trim();"},{"lineNumber":250,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":251,"author":{"gitId":"fupernova"},"content":"        return components;"},{"lineNumber":252,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":253,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":254,"author":{"gitId":"fupernova"},"content":"    /** Does the following validation checks on input of type Event:"},{"lineNumber":255,"author":{"gitId":"fupernova"},"content":"     *  1. Check for the substring \"/at\"."},{"lineNumber":256,"author":{"gitId":"fupernova"},"content":"     *  2. Checks that name and date of task are not empty or all whitespace."},{"lineNumber":257,"author":{"gitId":"fupernova"},"content":"     *  3. Checks that format of date is correct."},{"lineNumber":258,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":259,"author":{"gitId":"fupernova"},"content":"     * @param line user input."},{"lineNumber":260,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyNameFieldException if name is not provided or all whitespace."},{"lineNumber":261,"author":{"gitId":"fupernova"},"content":"     * @throws WrongFormatException if input does not contain substring \"/at\"."},{"lineNumber":262,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyDateException if date is not given or all whitespace."},{"lineNumber":263,"author":{"gitId":"fupernova"},"content":"     * @throws DateTimeException if date is wrong format."},{"lineNumber":264,"author":{"gitId":"fupernova"},"content":"     * @throws ArrayIndexOutOfBoundsException if there are no characters after the substring \"/at\"."},{"lineNumber":265,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":266,"author":{"gitId":"fupernova"},"content":"    public void validateEventComponents(String line) throws WrongFormatException,"},{"lineNumber":267,"author":{"gitId":"fupernova"},"content":"            EmptyNameFieldException, EmptyDateException, DateTimeException, ArrayIndexOutOfBoundsException {"},{"lineNumber":268,"author":{"gitId":"fupernova"},"content":"        if (!line.contains(\"/at\")) {"},{"lineNumber":269,"author":{"gitId":"fupernova"},"content":"            throw new WrongFormatException();"},{"lineNumber":270,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":271,"author":{"gitId":"fupernova"},"content":"        String nameAndDate \u003d line.substring(5);"},{"lineNumber":272,"author":{"gitId":"fupernova"},"content":"        String[] components \u003d nameAndDate.split(\" /at \");"},{"lineNumber":273,"author":{"gitId":"fupernova"},"content":"        String name \u003d components[0];"},{"lineNumber":274,"author":{"gitId":"fupernova"},"content":"        String date \u003d components[1];"},{"lineNumber":275,"author":{"gitId":"fupernova"},"content":"        if (name.trim().length() \u003d\u003d 0) {"},{"lineNumber":276,"author":{"gitId":"fupernova"},"content":"            throw new EmptyNameFieldException();"},{"lineNumber":277,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":278,"author":{"gitId":"fupernova"},"content":"        if (date.trim().length() \u003d\u003d 0) {"},{"lineNumber":279,"author":{"gitId":"fupernova"},"content":"            throw new EmptyDateException();"},{"lineNumber":280,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":281,"author":{"gitId":"fupernova"},"content":"        // Checks if date is of correct format"},{"lineNumber":282,"author":{"gitId":"fupernova"},"content":"        LocalDate.parse(date.trim());"},{"lineNumber":283,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":284,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":284}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.Ui;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"public class ByeCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"    public void execute(Ui ui) {"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"    public ByeCommand() {"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":13}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.Ui;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"public abstract class Command {"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"    protected Ui ui;"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"    /** To be overriden. Executes command. */"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"    public abstract void execute(Ui ui);"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":11}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"import duke.error.EmptyNameFieldException;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"import duke.error.IllegalAccessException;"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"import duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_NO_NAME \u003d -4;"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_OUT_OF_BOUNDS_MESSAGE \u003d -3;"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    private static final int INVALID_INDEX \u003d -1;"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"    private final String input;"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    private final TaskList taskList;"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"    private final Ui ui;"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"    public DeleteCommand(String input, TaskList taskList, Ui ui) {"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"        this.input \u003d input;"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"        this.ui \u003d ui;"},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"    public void execute(Ui ui) {"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"            ArrayList\u003cTask\u003e tasks \u003d this.taskList.getTasks();"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"            deleteItem(this.input, tasks);"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"        } catch (IllegalAccessException e) {"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"            this.ui.printError(ERR_OUT_OF_BOUNDS_MESSAGE);"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"        } catch (EmptyNameFieldException e) {"},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"            this.ui.printError(ERR_NO_NAME);"},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"     * Deletes item from task list if input format is correct."},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":"     * @param line user input."},{"lineNumber":44,"author":{"gitId":"fupernova"},"content":"     * @param tasks ArrayList containing all tasks."},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyNameFieldException if index to delete is not given."},{"lineNumber":46,"author":{"gitId":"fupernova"},"content":"     * @throws IllegalAccessException if index is out of bounds."},{"lineNumber":47,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"fupernova"},"content":"    public void deleteItem(String line, ArrayList\u003cTask\u003e tasks) throws EmptyNameFieldException, IllegalAccessException {"},{"lineNumber":49,"author":{"gitId":"fupernova"},"content":"        int index \u003d checkValidDelete(line);"},{"lineNumber":50,"author":{"gitId":"fupernova"},"content":"        if (index \u003d\u003d INVALID_INDEX) {"},{"lineNumber":51,"author":{"gitId":"fupernova"},"content":"            throw new IllegalAccessException();"},{"lineNumber":52,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"fupernova"},"content":"        Task.totalNumberOfTasks -\u003d 1;"},{"lineNumber":54,"author":{"gitId":"fupernova"},"content":"        this.ui.printDeletedTask(index-1, tasks);"},{"lineNumber":55,"author":{"gitId":"fupernova"},"content":"        tasks.remove(index-1);"},{"lineNumber":56,"author":{"gitId":"fupernova"},"content":"        this.ui.printBorderLine();"},{"lineNumber":57,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":59,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"fupernova"},"content":"     * Checks for presence of number on index 7 of input."},{"lineNumber":61,"author":{"gitId":"fupernova"},"content":"     * Then checks if the number is within bounds."},{"lineNumber":62,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"fupernova"},"content":"     * @param line input from user."},{"lineNumber":64,"author":{"gitId":"fupernova"},"content":"     * @return index of item to mark as done if valid, -1 otherwise."},{"lineNumber":65,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"fupernova"},"content":"    public int checkValidDelete(String line) throws EmptyNameFieldException {"},{"lineNumber":67,"author":{"gitId":"fupernova"},"content":"        if (line.length() \u003c 8) {"},{"lineNumber":68,"author":{"gitId":"fupernova"},"content":"            throw new EmptyNameFieldException();"},{"lineNumber":69,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"fupernova"},"content":"        if (line.substring(7).trim().matches(\"[0-9]+\")) {"},{"lineNumber":71,"author":{"gitId":"fupernova"},"content":"            int listNum \u003d Integer.parseInt(line.substring(7).trim());"},{"lineNumber":72,"author":{"gitId":"fupernova"},"content":"            // Check for illegal access to out of bounds index"},{"lineNumber":73,"author":{"gitId":"fupernova"},"content":"            if (listNum \u003e Task.totalNumberOfTasks || listNum \u003d\u003d 0) {"},{"lineNumber":74,"author":{"gitId":"fupernova"},"content":"                return INVALID_INDEX;"},{"lineNumber":75,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"fupernova"},"content":"            return listNum;"},{"lineNumber":77,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"fupernova"},"content":"        return INVALID_INDEX;"},{"lineNumber":79,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":80}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"import duke.error.EmptyNameFieldException;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"public class FindCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_NO_NAME \u003d -4;"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"    private final String input;"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    private final TaskList taskList;"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    private final Ui ui;"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    public FindCommand(String input, TaskList taskList, Ui ui) {"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"        this.input \u003d input;"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"        this.ui \u003d ui;"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"    public void execute(Ui ui) {"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"            ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"            ArrayList\u003cTask\u003e foundItems \u003d findItems(this.input, tasks);"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"            this.ui.printFoundItems(foundItems);"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"        } catch (EmptyNameFieldException e) {"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"            this.ui.printError(ERR_NO_NAME);"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"     * Searches the list for tasks containing the substring given by the user."},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"     * @param line user input, substring to search for."},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"     * @param tasks list of tasks to search."},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"     * @return ArrayList of items found with substring."},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyNameFieldException if name is not given or is all whitespace."},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"fupernova"},"content":"    public ArrayList\u003cTask\u003e findItems(String line, ArrayList\u003cTask\u003e tasks) throws EmptyNameFieldException {"},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":"        String searchName \u003d extractSearchName(line);"},{"lineNumber":46,"author":{"gitId":"fupernova"},"content":"        ArrayList\u003cTask\u003e foundItems \u003d new ArrayList\u003c\u003e();"},{"lineNumber":47,"author":{"gitId":"fupernova"},"content":"        for(int i \u003d 0; i \u003c Task.totalNumberOfTasks; i++) {"},{"lineNumber":48,"author":{"gitId":"fupernova"},"content":"            if (tasks.get(i).getName().contains(searchName)) {"},{"lineNumber":49,"author":{"gitId":"fupernova"},"content":"                foundItems.add(tasks.get(i));"},{"lineNumber":50,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"fupernova"},"content":"        return foundItems;"},{"lineNumber":53,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":55,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"fupernova"},"content":"     * Extracts the substring user wants to search from the entire input."},{"lineNumber":57,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"fupernova"},"content":"     * @param line user input."},{"lineNumber":59,"author":{"gitId":"fupernova"},"content":"     * @return substring to search."},{"lineNumber":60,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyNameFieldException if name is not given or is all whitespace."},{"lineNumber":61,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"fupernova"},"content":"    public String extractSearchName(String line) throws EmptyNameFieldException {"},{"lineNumber":63,"author":{"gitId":"fupernova"},"content":"        String searchName \u003d line.substring(4).trim();"},{"lineNumber":64,"author":{"gitId":"fupernova"},"content":"        if (searchName.length() \u003d\u003d 0) {"},{"lineNumber":65,"author":{"gitId":"fupernova"},"content":"            throw new EmptyNameFieldException();"},{"lineNumber":66,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"fupernova"},"content":"        return searchName;"},{"lineNumber":68,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":69}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"    private static final String LIST_ITEMS_MESSAGE \u003d \"Eez are the tings you added to the list\";"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"    private final String input;"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    private final TaskList taskList;"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"    private final Ui ui;"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    public ListCommand(String input, TaskList taskList, Ui ui) {"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"        this.input \u003d input;"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"        this.ui \u003d ui;"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"    public void execute(Ui ui) {"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"        ArrayList\u003cTask\u003e tasks \u003d this.taskList.getTasks();"},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"        listItems(tasks);"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"     * List all items added to the list."},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"     * @param tasks ArrayList containing all tasks."},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"    public void listItems(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"        System.out.println(LIST_ITEMS_MESSAGE);"},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"        this.ui.printEntireList(tasks);"},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"        this.ui.printBorderLine();"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":39}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"import duke.error.EmptyNameFieldException;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"import duke.error.IllegalAccessException;"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"import duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"public class MarkCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_NO_NAME \u003d -4;"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_OUT_OF_BOUNDS_MESSAGE \u003d -3;"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    private static final int INVALID_INDEX \u003d -1;"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"    private final String input;"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    private final TaskList taskList;"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"    private final Ui ui;"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"    public MarkCommand(String input, TaskList taskList, Ui ui) {"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"        this.input \u003d input;"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"        this.ui \u003d ui;"},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"    public void execute(Ui ui) {"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"            ArrayList\u003cTask\u003e tasks \u003d this.taskList.getTasks();"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"            markAsDone(input, tasks);"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"        } catch (IllegalAccessException e) {"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"            this.ui.printError(ERR_OUT_OF_BOUNDS_MESSAGE);"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"        } catch (EmptyNameFieldException e) {"},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"            this.ui.printError(ERR_NO_NAME);"},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"     * Marks a task as done."},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"     * Checks for out of bounds access and presence of numerical value."},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"fupernova"},"content":"     * @param line user input."},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":"     * @param tasks ArrayList containing all tasks."},{"lineNumber":46,"author":{"gitId":"fupernova"},"content":"     * @throws IllegalAccessException if index given is out of bounds."},{"lineNumber":47,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyNameFieldException if index is not given."},{"lineNumber":48,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"fupernova"},"content":"    public void markAsDone(String line, ArrayList\u003cTask\u003e tasks)"},{"lineNumber":50,"author":{"gitId":"fupernova"},"content":"            throws IllegalAccessException, EmptyNameFieldException {"},{"lineNumber":51,"author":{"gitId":"fupernova"},"content":"        if (line.length() \u003c 6) {"},{"lineNumber":52,"author":{"gitId":"fupernova"},"content":"            throw new EmptyNameFieldException();"},{"lineNumber":53,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"fupernova"},"content":"        int listNum \u003d checkValidDone(line);"},{"lineNumber":55,"author":{"gitId":"fupernova"},"content":"        if (listNum \u003d\u003d INVALID_INDEX) {"},{"lineNumber":56,"author":{"gitId":"fupernova"},"content":"            throw new IllegalAccessException();"},{"lineNumber":57,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"fupernova"},"content":"        listNum -\u003d 1;"},{"lineNumber":59,"author":{"gitId":"fupernova"},"content":"        tasks.get(listNum).setDone();"},{"lineNumber":60,"author":{"gitId":"fupernova"},"content":"        this.ui.printMarkedDone(tasks.get(listNum).getName());"},{"lineNumber":61,"author":{"gitId":"fupernova"},"content":"        this.ui.printBorderLine();"},{"lineNumber":62,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":64,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"fupernova"},"content":"     * Checks for presence of number on index 5 of input."},{"lineNumber":66,"author":{"gitId":"fupernova"},"content":"     * Then check if the number is within bounds."},{"lineNumber":67,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"fupernova"},"content":"     * @param line input from user."},{"lineNumber":69,"author":{"gitId":"fupernova"},"content":"     * @return index of item to mark as done if valid, -1 otherwise."},{"lineNumber":70,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"fupernova"},"content":"    public static int checkValidDone(String line) {"},{"lineNumber":72,"author":{"gitId":"fupernova"},"content":"        if (line.substring(5).trim().matches(\"[0-9]+\")) {"},{"lineNumber":73,"author":{"gitId":"fupernova"},"content":"            int listNum \u003d Integer.parseInt(line.substring(5).trim());"},{"lineNumber":74,"author":{"gitId":"fupernova"},"content":"            // Check for illegal access to out of bounds index"},{"lineNumber":75,"author":{"gitId":"fupernova"},"content":"            if (listNum \u003e Task.totalNumberOfTasks || listNum \u003d\u003d 0) {"},{"lineNumber":76,"author":{"gitId":"fupernova"},"content":"                return INVALID_INDEX;"},{"lineNumber":77,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"fupernova"},"content":"            return listNum;"},{"lineNumber":79,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"fupernova"},"content":"        return INVALID_INDEX;"},{"lineNumber":81,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":82}},{"path":"src/main/java/duke/error/EmptyDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class EmptyDateException extends Exception {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":4}},{"path":"src/main/java/duke/error/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class EmptyInputException extends Exception {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":4}},{"path":"src/main/java/duke/error/EmptyNameFieldException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class EmptyNameFieldException extends Exception {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":4}},{"path":"src/main/java/duke/error/IllegalAccessException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class IllegalAccessException extends Exception {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":5}},{"path":"src/main/java/duke/error/WrongFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class WrongFormatException extends Exception{"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":5}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"    protected static String deadline;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"    public Deadline(String name, String deadline) {"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"        super(name);"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"    public String getType() {"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"        return \"[D]\";"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    public String getDate() {"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"        return \"(by: \" + this.deadline + \")\";"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"    public String getTime() {"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"        return this.deadline;"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"    protected static String eventTime;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"    public Event(String name, String eventTime) {"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"        super(name);"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"    public String getType() {"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"        return \"[E]\";"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    public String getDate() {"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"        return \"(at: \" + this.eventTime + \")\";"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"    public String getTime() {"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"        return this.eventTime;"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"    protected String name;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"    public static int totalNumberOfTasks \u003d 0;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"    protected Task(String name) {"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"        this.name \u003d name;"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"    public void setDone() {"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"        this.isDone \u003d true;"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    public boolean checkDone() {"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"        return this.isDone;"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"     * @return \"X\" if task is done, empty space otherwise"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"    public String getStatusIcon() {"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"        return (isDone? \"X\" : \" \");"},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"    public String getName() {"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"        return name;"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"    // To be overridden"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"    public String getType() {"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"        return \"[ ]\";"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"    // To be overridden"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"    public String getDate() {"},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"        return \"\";"},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"    // To be overridden"},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":"    public String getTime() {"},{"lineNumber":44,"author":{"gitId":"fupernova"},"content":"        return \"\";"},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":46}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"    public Todo(String name) {"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"        super(name);"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"    public String getType() {"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"        return \"[T]\";"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":13}},{"path":"tasklogs/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"[T] | 0 | roxy"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":"[E] | 0 | prefab sprout | 2020-04-04"},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"[T] | 0 | guitar"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"[T] | 1 | guitar centre"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"[T] | 0 | restring guitart"}],"authorContributionMap":{"fupernova":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"todo change amp"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"blah"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"fak ni"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"blah"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"deadline remaster drums /by saturday 2359"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"list"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"write guitar part"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"event record /at monday 2-4"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"todo add guitars /at thursday 8pm"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"deadline restring guitar /by tuesday 33"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"list"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"done 3"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"list"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"event live gig /at friday 10pm"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"done 5"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"done 10"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"list"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"bye"}],"authorContributionMap":{"fupernova":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"fupernova":1,"-":20}}]
