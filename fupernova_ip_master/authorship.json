[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"## When Duke meets Staines"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"What\u0027s this then? Me thinks its some kind of fancy tekmology I can use on me compooter. Wicked! Wait till I show this to me Julie and Rainbow Jeremy."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"Duke chatbot inspired by Ali G. West Side. Done as part of individual project component of CS2113. All wacky typos are intentional."}],"authorContributionMap":{"fupernova":3,"-":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import duke.error.EmptyNameFieldException;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"import duke.error.IllegalAccessException;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"import duke.error.WrongFormatException;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"import duke.task.Deadline;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"import duke.task.Event;"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"import duke.task.Todo;"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"import java.io.*;"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_MAX_CAPACITY \u003d -5;"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_NO_NAME \u003d -4;"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_OUT_OF_BOUNDS_MESSAGE \u003d -3;"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    private static final int ERR_WRONG_FORMAT_MESSAGE \u003d -2;"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"    private static final int INVALID_INDEX \u003d -1;"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_EXIT \u003d 0;"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_LIST \u003d 1;"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_MARK \u003d 2;"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_ADD \u003d 3;"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_DELETE \u003d 4;"},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"    private static final int ADD_TODO \u003d 4;"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":"    private static final int ADD_DEADLINE \u003d 5;"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"    private static final int ADD_EVENT \u003d 6;"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"    private static final String GREETING_MESSAGE \u003d \"Wagwan! I is Ali G. West side.\\nWhat is we chattin\u0027 bout today?\";"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Goodbye, big up yourself, keep it real, respekt.\";"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"    private static final String BORDER_LINE \u003d \"___________________________________________________________\";"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"    private static final String LIST_ITEMS_MESSAGE \u003d \"Eez are the tings you added to the list\";"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"    private static final String EXCEED_CAPACITY_MESSAGE \u003d \"Maximum capacity reached\";"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"    private static final String ADDED_TO_LIST_MESSAGE \u003d \"Wicked. This ting is now on da list.\";"},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"    private static final String SET_TO_DONE_MESSAGE \u003d \" set to done. You\u0027re well smart innit?\";"},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"    private static final String OUT_OF_BOUNDS_MESSAGE \u003d \"You are accessing something that doesn\u0027t exist! Stop being an ignoranus.\";"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"    private static final String WRONG_FORMAT_MESSAGE \u003d \"Are you spasticated? The format is wrong!\";"},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"    private static final String TOTAL_TASK_MESSAGE \u003d \"You is having %d task(s) on your list\";"},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"    private static final String NO_NAME_MESSAGE \u003d \"Why you be trying to find something with no name? Ave\u0027 you been smoking me special stash?\";"},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"    private static final String DELETED_MESSAGE \u003d \"This ting has been deleted. I could\u0027ve done that task, you stupid.\";"},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"    private static final String FILEPATH \u003d \"tasklogs/tasks.txt\";"},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":44,"author":{"gitId":"fupernova"},"content":"    public static ArrayList\u003cTask\u003e Tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":47,"author":{"gitId":"fupernova"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"fupernova"},"content":"            printGreeting();"},{"lineNumber":49,"author":{"gitId":"fupernova"},"content":"            loopCommands();"},{"lineNumber":50,"author":{"gitId":"fupernova"},"content":"            sayGoodbye();"},{"lineNumber":51,"author":{"gitId":"fupernova"},"content":"            saveFile();"},{"lineNumber":52,"author":{"gitId":"fupernova"},"content":"        } catch (IOException e) {"},{"lineNumber":53,"author":{"gitId":"fupernova"},"content":"            System.out.println(\"IO error.\");"},{"lineNumber":54,"author":{"gitId":"fupernova"},"content":"            e.printStackTrace();"},{"lineNumber":55,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"fupernova"},"content":"     * Loops through all features available."},{"lineNumber":59,"author":{"gitId":"fupernova"},"content":"     * Returns if user inputs bye."},{"lineNumber":60,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"fupernova"},"content":"    public static void loopCommands() throws IOException {"},{"lineNumber":62,"author":{"gitId":"fupernova"},"content":"        loadFile();"},{"lineNumber":63,"author":{"gitId":"fupernova"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":64,"author":{"gitId":"fupernova"},"content":"        while (in.hasNextLine()) {"},{"lineNumber":65,"author":{"gitId":"fupernova"},"content":"            String line \u003d in.nextLine();"},{"lineNumber":66,"author":{"gitId":"fupernova"},"content":"            try {"},{"lineNumber":67,"author":{"gitId":"fupernova"},"content":"                int command \u003d getCommand(line);"},{"lineNumber":68,"author":{"gitId":"fupernova"},"content":"                // No fallthrough required"},{"lineNumber":69,"author":{"gitId":"fupernova"},"content":"                switch (command) {"},{"lineNumber":70,"author":{"gitId":"fupernova"},"content":"                // If user wants to mark a task as done"},{"lineNumber":71,"author":{"gitId":"fupernova"},"content":"                case COMMAND_MARK:"},{"lineNumber":72,"author":{"gitId":"fupernova"},"content":"                    markAsDone(line);"},{"lineNumber":73,"author":{"gitId":"fupernova"},"content":"                    break;"},{"lineNumber":74,"author":{"gitId":"fupernova"},"content":"                // If user wants to list all tasks"},{"lineNumber":75,"author":{"gitId":"fupernova"},"content":"                case COMMAND_LIST:"},{"lineNumber":76,"author":{"gitId":"fupernova"},"content":"                    listItems();"},{"lineNumber":77,"author":{"gitId":"fupernova"},"content":"                    break;"},{"lineNumber":78,"author":{"gitId":"fupernova"},"content":"                // If user wants to add an item"},{"lineNumber":79,"author":{"gitId":"fupernova"},"content":"                case COMMAND_ADD:"},{"lineNumber":80,"author":{"gitId":"fupernova"},"content":"                    addItem(line);"},{"lineNumber":81,"author":{"gitId":"fupernova"},"content":"                    break;"},{"lineNumber":82,"author":{"gitId":"fupernova"},"content":"                // If user wants to delete an item"},{"lineNumber":83,"author":{"gitId":"fupernova"},"content":"                case COMMAND_DELETE:"},{"lineNumber":84,"author":{"gitId":"fupernova"},"content":"                    deleteItem(line);"},{"lineNumber":85,"author":{"gitId":"fupernova"},"content":"                    break;"},{"lineNumber":86,"author":{"gitId":"fupernova"},"content":"                case COMMAND_EXIT:"},{"lineNumber":87,"author":{"gitId":"fupernova"},"content":"                    return;"},{"lineNumber":88,"author":{"gitId":"fupernova"},"content":"                }"},{"lineNumber":89,"author":{"gitId":"fupernova"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":90,"author":{"gitId":"fupernova"},"content":"                printError(ERR_MAX_CAPACITY);"},{"lineNumber":91,"author":{"gitId":"fupernova"},"content":"            } catch (IllegalAccessException e) {"},{"lineNumber":92,"author":{"gitId":"fupernova"},"content":"                printError(ERR_OUT_OF_BOUNDS_MESSAGE);"},{"lineNumber":93,"author":{"gitId":"fupernova"},"content":"            } catch (EmptyNameFieldException e) {"},{"lineNumber":94,"author":{"gitId":"fupernova"},"content":"                printError(ERR_NO_NAME);"},{"lineNumber":95,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"fupernova"},"content":"     * Parses the command that user has keyed in."},{"lineNumber":100,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":101,"author":{"gitId":"fupernova"},"content":"     * @param line input from user."},{"lineNumber":102,"author":{"gitId":"fupernova"},"content":"     * @return The type of command user inputted."},{"lineNumber":103,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"fupernova"},"content":"    public static int getCommand(String line) {"},{"lineNumber":105,"author":{"gitId":"fupernova"},"content":"        String[] subStrings \u003d line.split(\" \");"},{"lineNumber":106,"author":{"gitId":"fupernova"},"content":"        String command \u003d subStrings[0];"},{"lineNumber":107,"author":{"gitId":"fupernova"},"content":"        if (command.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":108,"author":{"gitId":"fupernova"},"content":"            return COMMAND_EXIT;"},{"lineNumber":109,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"fupernova"},"content":"        if (command.equalsIgnoreCase(\"done\")) {"},{"lineNumber":111,"author":{"gitId":"fupernova"},"content":"            return COMMAND_MARK;"},{"lineNumber":112,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"fupernova"},"content":"        if (command.equalsIgnoreCase(\"list\")) {"},{"lineNumber":114,"author":{"gitId":"fupernova"},"content":"            return COMMAND_LIST;"},{"lineNumber":115,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"fupernova"},"content":"        if (command.equalsIgnoreCase(\"delete\")) {"},{"lineNumber":117,"author":{"gitId":"fupernova"},"content":"            return COMMAND_DELETE;"},{"lineNumber":118,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"fupernova"},"content":"        return COMMAND_ADD;"},{"lineNumber":120,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"fupernova"},"content":"     * Marks a task as done."},{"lineNumber":123,"author":{"gitId":"fupernova"},"content":"     * Checks for out of bounds access and presence of numerical value."},{"lineNumber":124,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":125,"author":{"gitId":"fupernova"},"content":"     * @param line user input."},{"lineNumber":126,"author":{"gitId":"fupernova"},"content":"     * @throws IllegalAccessException if index given is out of bounds."},{"lineNumber":127,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyNameFieldException if index is not given."},{"lineNumber":128,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"fupernova"},"content":"    public static void markAsDone(String line) throws IllegalAccessException, EmptyNameFieldException {"},{"lineNumber":130,"author":{"gitId":"fupernova"},"content":"        if (line.length() \u003c 6) {"},{"lineNumber":131,"author":{"gitId":"fupernova"},"content":"            throw new EmptyNameFieldException();"},{"lineNumber":132,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"fupernova"},"content":"        int listNum \u003d checkValidDone(line);"},{"lineNumber":134,"author":{"gitId":"fupernova"},"content":"        if (listNum \u003d\u003d INVALID_INDEX) {"},{"lineNumber":135,"author":{"gitId":"fupernova"},"content":"            throw new IllegalAccessException();"},{"lineNumber":136,"author":{"gitId":"fupernova"},"content":"        } else {"},{"lineNumber":137,"author":{"gitId":"fupernova"},"content":"            listNum -\u003d 1;"},{"lineNumber":138,"author":{"gitId":"fupernova"},"content":"            Tasks.get(listNum).setDone();"},{"lineNumber":139,"author":{"gitId":"fupernova"},"content":"            printMarkedDone(Tasks.get(listNum).getName());"},{"lineNumber":140,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"fupernova"},"content":"        printBorderLine();"},{"lineNumber":142,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"fupernova"},"content":"     * Checks for presence of number on index 5 of input."},{"lineNumber":145,"author":{"gitId":"fupernova"},"content":"     * Then check if the number is within bounds."},{"lineNumber":146,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":147,"author":{"gitId":"fupernova"},"content":"     * @param line input from user."},{"lineNumber":148,"author":{"gitId":"fupernova"},"content":"     * @return index of item to mark as done if valid, -1 otherwise."},{"lineNumber":149,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"fupernova"},"content":"    public static int checkValidDone(String line) {"},{"lineNumber":151,"author":{"gitId":"fupernova"},"content":"        if (line.substring(5).matches(\"[0-9]+\")) {"},{"lineNumber":152,"author":{"gitId":"fupernova"},"content":"            int listNum \u003d Integer.parseInt(line.substring(5));"},{"lineNumber":153,"author":{"gitId":"fupernova"},"content":"            // Check for illegal access to out of bounds index"},{"lineNumber":154,"author":{"gitId":"fupernova"},"content":"            if (listNum \u003e Task.totalNumberOfTasks || listNum \u003d\u003d 0) {"},{"lineNumber":155,"author":{"gitId":"fupernova"},"content":"                return INVALID_INDEX;"},{"lineNumber":156,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":157,"author":{"gitId":"fupernova"},"content":"            return listNum;"},{"lineNumber":158,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":159,"author":{"gitId":"fupernova"},"content":"        return INVALID_INDEX;"},{"lineNumber":160,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":162,"author":{"gitId":"fupernova"},"content":"     * Parses type of item to add and calls appropriate method."},{"lineNumber":163,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":164,"author":{"gitId":"fupernova"},"content":"     * @param line raw input given by user."},{"lineNumber":165,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":166,"author":{"gitId":"fupernova"},"content":"    public static void addItem(String line) {"},{"lineNumber":167,"author":{"gitId":"fupernova"},"content":"        try {"},{"lineNumber":168,"author":{"gitId":"fupernova"},"content":"            String prefix \u003d line.split(\" \")[0];"},{"lineNumber":169,"author":{"gitId":"fupernova"},"content":"            int itemType \u003d getItemType(prefix);"},{"lineNumber":170,"author":{"gitId":"fupernova"},"content":"            // No fallthrough required"},{"lineNumber":171,"author":{"gitId":"fupernova"},"content":"            switch (itemType) {"},{"lineNumber":172,"author":{"gitId":"fupernova"},"content":"            case ADD_TODO:"},{"lineNumber":173,"author":{"gitId":"fupernova"},"content":"                addTodo(line);"},{"lineNumber":174,"author":{"gitId":"fupernova"},"content":"                break;"},{"lineNumber":175,"author":{"gitId":"fupernova"},"content":"            case ADD_DEADLINE:"},{"lineNumber":176,"author":{"gitId":"fupernova"},"content":"                addDeadline(line);"},{"lineNumber":177,"author":{"gitId":"fupernova"},"content":"                break;"},{"lineNumber":178,"author":{"gitId":"fupernova"},"content":"            case ADD_EVENT:"},{"lineNumber":179,"author":{"gitId":"fupernova"},"content":"                addEvent(line);"},{"lineNumber":180,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":181,"author":{"gitId":"fupernova"},"content":"            printBorderLine();"},{"lineNumber":182,"author":{"gitId":"fupernova"},"content":"        } catch (WrongFormatException e) {"},{"lineNumber":183,"author":{"gitId":"fupernova"},"content":"            printError(ERR_WRONG_FORMAT_MESSAGE);"},{"lineNumber":184,"author":{"gitId":"fupernova"},"content":"        } catch (EmptyNameFieldException e) {"},{"lineNumber":185,"author":{"gitId":"fupernova"},"content":"            printError(ERR_NO_NAME);"},{"lineNumber":186,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":189,"author":{"gitId":"fupernova"},"content":"     * Parses the type of task to add to list."},{"lineNumber":190,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":191,"author":{"gitId":"fupernova"},"content":"     * @param line input from user."},{"lineNumber":192,"author":{"gitId":"fupernova"},"content":"     * @return Type of task to add if valid input, error otherwise."},{"lineNumber":193,"author":{"gitId":"fupernova"},"content":"     * @throws WrongFormatException If type of task is invalid."},{"lineNumber":194,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":195,"author":{"gitId":"fupernova"},"content":"    public static int getItemType(String line) throws WrongFormatException {"},{"lineNumber":196,"author":{"gitId":"fupernova"},"content":"        if (line.equalsIgnoreCase(\"todo\")) {"},{"lineNumber":197,"author":{"gitId":"fupernova"},"content":"            return ADD_TODO;"},{"lineNumber":198,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":199,"author":{"gitId":"fupernova"},"content":"        if (line.equalsIgnoreCase(\"deadline\")) {"},{"lineNumber":200,"author":{"gitId":"fupernova"},"content":"            return ADD_DEADLINE;"},{"lineNumber":201,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":202,"author":{"gitId":"fupernova"},"content":"        if (line.equalsIgnoreCase(\"event\")) {"},{"lineNumber":203,"author":{"gitId":"fupernova"},"content":"            return ADD_EVENT;"},{"lineNumber":204,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"fupernova"},"content":"        throw new WrongFormatException();"},{"lineNumber":206,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"fupernova"},"content":"    public static void addTodo(String line) throws EmptyNameFieldException {"},{"lineNumber":208,"author":{"gitId":"fupernova"},"content":"        if (line.length() \u003c 6) {"},{"lineNumber":209,"author":{"gitId":"fupernova"},"content":"            throw new EmptyNameFieldException();"},{"lineNumber":210,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":211,"author":{"gitId":"fupernova"},"content":"        int current \u003d Task.totalNumberOfTasks;"},{"lineNumber":212,"author":{"gitId":"fupernova"},"content":"        String nameOfTask \u003d line.substring(5);"},{"lineNumber":213,"author":{"gitId":"fupernova"},"content":"        Tasks.add(new Todo(nameOfTask));"},{"lineNumber":214,"author":{"gitId":"fupernova"},"content":"        Task.totalNumberOfTasks +\u003d 1;"},{"lineNumber":215,"author":{"gitId":"fupernova"},"content":"        printAddedToList(current);"},{"lineNumber":216,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"fupernova"},"content":"    public static void addDeadline(String line) throws EmptyNameFieldException, WrongFormatException {"},{"lineNumber":218,"author":{"gitId":"fupernova"},"content":"        if (line.length() \u003c 10) {"},{"lineNumber":219,"author":{"gitId":"fupernova"},"content":"            throw new EmptyNameFieldException();"},{"lineNumber":220,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"fupernova"},"content":"        if (line.contains(\"/by\")) {"},{"lineNumber":222,"author":{"gitId":"fupernova"},"content":"            int current \u003d Task.totalNumberOfTasks;"},{"lineNumber":223,"author":{"gitId":"fupernova"},"content":"            // Details of task starts at index 9 of input"},{"lineNumber":224,"author":{"gitId":"fupernova"},"content":"            String nameAndDeadline \u003d line.substring(9);"},{"lineNumber":225,"author":{"gitId":"fupernova"},"content":"            String[] split \u003d nameAndDeadline.split(\" /by \");"},{"lineNumber":226,"author":{"gitId":"fupernova"},"content":"            String name \u003d split[0];"},{"lineNumber":227,"author":{"gitId":"fupernova"},"content":"            String deadline \u003d split[1];"},{"lineNumber":228,"author":{"gitId":"fupernova"},"content":"            Tasks.add(new Deadline(name, deadline));"},{"lineNumber":229,"author":{"gitId":"fupernova"},"content":"            Task.totalNumberOfTasks +\u003d 1;"},{"lineNumber":230,"author":{"gitId":"fupernova"},"content":"            printAddedToList(current);"},{"lineNumber":231,"author":{"gitId":"fupernova"},"content":"        } else {"},{"lineNumber":232,"author":{"gitId":"fupernova"},"content":"            throw new WrongFormatException();"},{"lineNumber":233,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":234,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":235,"author":{"gitId":"fupernova"},"content":"    public static void addEvent(String nameOfTask) throws EmptyNameFieldException, WrongFormatException {"},{"lineNumber":236,"author":{"gitId":"fupernova"},"content":"        if (nameOfTask.length() \u003c 7) {"},{"lineNumber":237,"author":{"gitId":"fupernova"},"content":"            throw new EmptyNameFieldException();"},{"lineNumber":238,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":239,"author":{"gitId":"fupernova"},"content":"        if (nameOfTask.contains(\"/at\")) {"},{"lineNumber":240,"author":{"gitId":"fupernova"},"content":"            int current \u003d Task.totalNumberOfTasks;"},{"lineNumber":241,"author":{"gitId":"fupernova"},"content":"            // Details of task starts at index 6 of input"},{"lineNumber":242,"author":{"gitId":"fupernova"},"content":"            String nameAndTime \u003d nameOfTask.substring(6);"},{"lineNumber":243,"author":{"gitId":"fupernova"},"content":"            String[] split \u003d nameAndTime.split(\" /at \");"},{"lineNumber":244,"author":{"gitId":"fupernova"},"content":"            String name \u003d split[0];"},{"lineNumber":245,"author":{"gitId":"fupernova"},"content":"            String time \u003d split[1];"},{"lineNumber":246,"author":{"gitId":"fupernova"},"content":"            Tasks.add(new Event(name, time));"},{"lineNumber":247,"author":{"gitId":"fupernova"},"content":"            Task.totalNumberOfTasks +\u003d 1;"},{"lineNumber":248,"author":{"gitId":"fupernova"},"content":"            printAddedToList(current);"},{"lineNumber":249,"author":{"gitId":"fupernova"},"content":"        } else {"},{"lineNumber":250,"author":{"gitId":"fupernova"},"content":"            throw new WrongFormatException();"},{"lineNumber":251,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":252,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":253,"author":{"gitId":"fupernova"},"content":"    /** Lists all items that were added to the list. */"},{"lineNumber":254,"author":{"gitId":"fupernova"},"content":"    public static void listItems() {"},{"lineNumber":255,"author":{"gitId":"fupernova"},"content":"        System.out.println(LIST_ITEMS_MESSAGE);"},{"lineNumber":256,"author":{"gitId":"fupernova"},"content":"        for(int i \u003d 0; i \u003c Task.totalNumberOfTasks; i++) {"},{"lineNumber":257,"author":{"gitId":"fupernova"},"content":"            printListItem(i+1, Tasks.get(i).getType(), Tasks.get(i).getStatusIcon(),"},{"lineNumber":258,"author":{"gitId":"fupernova"},"content":"                    Tasks.get(i).getName(), Tasks.get(i).getDate());"},{"lineNumber":259,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":260,"author":{"gitId":"fupernova"},"content":"        printBorderLine();"},{"lineNumber":261,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":262,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":263,"author":{"gitId":"fupernova"},"content":"     * Deletes item from task list if input format is correct."},{"lineNumber":264,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":265,"author":{"gitId":"fupernova"},"content":"     * @param line user input."},{"lineNumber":266,"author":{"gitId":"fupernova"},"content":"     * @throws EmptyNameFieldException if index to delete is not given."},{"lineNumber":267,"author":{"gitId":"fupernova"},"content":"     * @throws IllegalAccessException if index is out of bounds."},{"lineNumber":268,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":269,"author":{"gitId":"fupernova"},"content":"    public static void deleteItem(String line) throws EmptyNameFieldException, IllegalAccessException {"},{"lineNumber":270,"author":{"gitId":"fupernova"},"content":"        if (line.length() \u003c 8) {"},{"lineNumber":271,"author":{"gitId":"fupernova"},"content":"            throw new EmptyNameFieldException();"},{"lineNumber":272,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":273,"author":{"gitId":"fupernova"},"content":"        int index \u003dcheckValidDelete(line);"},{"lineNumber":274,"author":{"gitId":"fupernova"},"content":"        if (index \u003d\u003d INVALID_INDEX) {"},{"lineNumber":275,"author":{"gitId":"fupernova"},"content":"            throw new IllegalAccessException();"},{"lineNumber":276,"author":{"gitId":"fupernova"},"content":"        } else {"},{"lineNumber":277,"author":{"gitId":"fupernova"},"content":"            Task.totalNumberOfTasks -\u003d 1;"},{"lineNumber":278,"author":{"gitId":"fupernova"},"content":"            printDeletedTask(index-1);"},{"lineNumber":279,"author":{"gitId":"fupernova"},"content":"            Tasks.remove(index-1);"},{"lineNumber":280,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":281,"author":{"gitId":"fupernova"},"content":"        printBorderLine();"},{"lineNumber":282,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":283,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":284,"author":{"gitId":"fupernova"},"content":"     * Checks for presence of number on index 7 of input."},{"lineNumber":285,"author":{"gitId":"fupernova"},"content":"     * Then check if the number is within bounds."},{"lineNumber":286,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":287,"author":{"gitId":"fupernova"},"content":"     * @param line input from user."},{"lineNumber":288,"author":{"gitId":"fupernova"},"content":"     * @return index of item to mark as done if valid, -1 otherwise."},{"lineNumber":289,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":290,"author":{"gitId":"fupernova"},"content":"    public static int checkValidDelete(String line) {"},{"lineNumber":291,"author":{"gitId":"fupernova"},"content":"        if (line.substring(7).matches(\"[0-9]+\")) {"},{"lineNumber":292,"author":{"gitId":"fupernova"},"content":"            int listNum \u003d Integer.parseInt(line.substring(7));"},{"lineNumber":293,"author":{"gitId":"fupernova"},"content":"            // Check for illegal access to out of bounds index"},{"lineNumber":294,"author":{"gitId":"fupernova"},"content":"            if (listNum \u003e Task.totalNumberOfTasks || listNum \u003d\u003d 0) {"},{"lineNumber":295,"author":{"gitId":"fupernova"},"content":"                return INVALID_INDEX;"},{"lineNumber":296,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":297,"author":{"gitId":"fupernova"},"content":"            return listNum;"},{"lineNumber":298,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":299,"author":{"gitId":"fupernova"},"content":"        return INVALID_INDEX;"},{"lineNumber":300,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":301,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":302,"author":{"gitId":"fupernova"},"content":"    //************************************** Methods used to print stuff **********************************************/"},{"lineNumber":303,"author":{"gitId":"fupernova"},"content":"    /** Method used to print each item for \"list\" command */"},{"lineNumber":304,"author":{"gitId":"fupernova"},"content":"    public static void printListItem(int index, String type, String status, String name, String date) {"},{"lineNumber":305,"author":{"gitId":"fupernova"},"content":"        System.out.println(index + \". \" + type + \"[\" + status + \"] \" + name + \" \" + date);"},{"lineNumber":306,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":307,"author":{"gitId":"fupernova"},"content":"    public static void printMarkedDone(String name) {"},{"lineNumber":308,"author":{"gitId":"fupernova"},"content":"        System.out.println(name + SET_TO_DONE_MESSAGE);"},{"lineNumber":309,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":310,"author":{"gitId":"fupernova"},"content":"    public static void printGreeting() {"},{"lineNumber":311,"author":{"gitId":"fupernova"},"content":"        System.out.println(GREETING_MESSAGE);"},{"lineNumber":312,"author":{"gitId":"fupernova"},"content":"        printBorderLine();"},{"lineNumber":313,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":314,"author":{"gitId":"fupernova"},"content":"    public static void printBorderLine() {"},{"lineNumber":315,"author":{"gitId":"fupernova"},"content":"        System.out.println(BORDER_LINE);"},{"lineNumber":316,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":317,"author":{"gitId":"fupernova"},"content":"    public static void sayGoodbye() {"},{"lineNumber":318,"author":{"gitId":"fupernova"},"content":"        System.out.println(GOODBYE_MESSAGE);"},{"lineNumber":319,"author":{"gitId":"fupernova"},"content":"        printBorderLine();"},{"lineNumber":320,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":321,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":322,"author":{"gitId":"fupernova"},"content":"     * Prints message for deletion of task"},{"lineNumber":323,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":324,"author":{"gitId":"fupernova"},"content":"     * @param index index of item to delete"},{"lineNumber":325,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":326,"author":{"gitId":"fupernova"},"content":"    public static void printDeletedTask(int index) {"},{"lineNumber":327,"author":{"gitId":"fupernova"},"content":"        System.out.println(DELETED_MESSAGE);"},{"lineNumber":328,"author":{"gitId":"fupernova"},"content":"        printDetailsOfTask(index);"},{"lineNumber":329,"author":{"gitId":"fupernova"},"content":"        printTotalTasks();"},{"lineNumber":330,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":331,"author":{"gitId":"fupernova"},"content":"    public static void printDetailsOfTask(int index) {"},{"lineNumber":332,"author":{"gitId":"fupernova"},"content":"        Task task \u003d Tasks.get(index);"},{"lineNumber":333,"author":{"gitId":"fupernova"},"content":"        System.out.println(task.getType() + \"[\" + task.getStatusIcon() + \"] \" + task.getName() + \" \" + task.getDate());"},{"lineNumber":334,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":335,"author":{"gitId":"fupernova"},"content":"    public static void printAddedToList(int current) {"},{"lineNumber":336,"author":{"gitId":"fupernova"},"content":"        System.out.println(ADDED_TO_LIST_MESSAGE);"},{"lineNumber":337,"author":{"gitId":"fupernova"},"content":"        printDetailsOfTask(current);"},{"lineNumber":338,"author":{"gitId":"fupernova"},"content":"        printTotalTasks();"},{"lineNumber":339,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":340,"author":{"gitId":"fupernova"},"content":"    public static void printTotalTasks() {"},{"lineNumber":341,"author":{"gitId":"fupernova"},"content":"        System.out.println(String.format(TOTAL_TASK_MESSAGE, Task.totalNumberOfTasks));"},{"lineNumber":342,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":343,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":344,"author":{"gitId":"fupernova"},"content":"     * Prints appropriate error message according to error type."},{"lineNumber":345,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":346,"author":{"gitId":"fupernova"},"content":"     * @param type type of error thrown."},{"lineNumber":347,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":348,"author":{"gitId":"fupernova"},"content":"    public static void printError(int type) {"},{"lineNumber":349,"author":{"gitId":"fupernova"},"content":"        // No fallthrough required"},{"lineNumber":350,"author":{"gitId":"fupernova"},"content":"        switch (type) {"},{"lineNumber":351,"author":{"gitId":"fupernova"},"content":"        case ERR_OUT_OF_BOUNDS_MESSAGE:"},{"lineNumber":352,"author":{"gitId":"fupernova"},"content":"            System.out.println(OUT_OF_BOUNDS_MESSAGE);"},{"lineNumber":353,"author":{"gitId":"fupernova"},"content":"            break;"},{"lineNumber":354,"author":{"gitId":"fupernova"},"content":"        case ERR_WRONG_FORMAT_MESSAGE:"},{"lineNumber":355,"author":{"gitId":"fupernova"},"content":"            System.out.println(WRONG_FORMAT_MESSAGE);"},{"lineNumber":356,"author":{"gitId":"fupernova"},"content":"            break;"},{"lineNumber":357,"author":{"gitId":"fupernova"},"content":"        case ERR_NO_NAME:"},{"lineNumber":358,"author":{"gitId":"fupernova"},"content":"            System.out.println(NO_NAME_MESSAGE);"},{"lineNumber":359,"author":{"gitId":"fupernova"},"content":"            break;"},{"lineNumber":360,"author":{"gitId":"fupernova"},"content":"        case ERR_MAX_CAPACITY:"},{"lineNumber":361,"author":{"gitId":"fupernova"},"content":"            System.out.println(EXCEED_CAPACITY_MESSAGE);"},{"lineNumber":362,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":363,"author":{"gitId":"fupernova"},"content":"        printBorderLine();"},{"lineNumber":364,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":365,"author":{"gitId":"fupernova"},"content":"    //********************************************** Methods for File IO **********************************************/"},{"lineNumber":366,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":367,"author":{"gitId":"fupernova"},"content":"     * Loads tasks from saved text file. If file does not exist, create a file."},{"lineNumber":368,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":369,"author":{"gitId":"fupernova"},"content":"     * @throws IOException if there is IO error."},{"lineNumber":370,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":371,"author":{"gitId":"fupernova"},"content":"    public static void loadFile() throws IOException {"},{"lineNumber":372,"author":{"gitId":"fupernova"},"content":"        File f \u003d new File(FILEPATH);"},{"lineNumber":373,"author":{"gitId":"fupernova"},"content":"        f.getParentFile().mkdirs();"},{"lineNumber":374,"author":{"gitId":"fupernova"},"content":"        f.createNewFile();"},{"lineNumber":375,"author":{"gitId":"fupernova"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":376,"author":{"gitId":"fupernova"},"content":"        while(s.hasNext()) {"},{"lineNumber":377,"author":{"gitId":"fupernova"},"content":"            Tasks.add(deserializeFile(s.nextLine()));"},{"lineNumber":378,"author":{"gitId":"fupernova"},"content":"            Task.totalNumberOfTasks +\u003d 1;"},{"lineNumber":379,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":380,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":381,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":382,"author":{"gitId":"fupernova"},"content":"     * Converts format of tasks from text file format to program format."},{"lineNumber":383,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":384,"author":{"gitId":"fupernova"},"content":"     * @param line line from text file."},{"lineNumber":385,"author":{"gitId":"fupernova"},"content":"     * @return Task in the format of program."},{"lineNumber":386,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":387,"author":{"gitId":"fupernova"},"content":"    public static Task deserializeFile(String line) {"},{"lineNumber":388,"author":{"gitId":"fupernova"},"content":"        String[] components \u003d line.split(\" \\\\| \");"},{"lineNumber":389,"author":{"gitId":"fupernova"},"content":"        // No fallthrough required"},{"lineNumber":390,"author":{"gitId":"fupernova"},"content":"        switch(components[0]) {"},{"lineNumber":391,"author":{"gitId":"fupernova"},"content":"        case \"[T]\":"},{"lineNumber":392,"author":{"gitId":"fupernova"},"content":"            Task fileTodo \u003d new Todo(components[2]);"},{"lineNumber":393,"author":{"gitId":"fupernova"},"content":"            if (components[1].equals(\"1\")) {"},{"lineNumber":394,"author":{"gitId":"fupernova"},"content":"                fileTodo.setDone();"},{"lineNumber":395,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":396,"author":{"gitId":"fupernova"},"content":"            return fileTodo;"},{"lineNumber":397,"author":{"gitId":"fupernova"},"content":"        case \"[E]\":"},{"lineNumber":398,"author":{"gitId":"fupernova"},"content":"            Task fileEvent \u003d new Event(components[2], components[3]);"},{"lineNumber":399,"author":{"gitId":"fupernova"},"content":"            if (components[1].equals(\"1\")) {"},{"lineNumber":400,"author":{"gitId":"fupernova"},"content":"                fileEvent.setDone();"},{"lineNumber":401,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":402,"author":{"gitId":"fupernova"},"content":"            return fileEvent;"},{"lineNumber":403,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":404,"author":{"gitId":"fupernova"},"content":"        // Case where task is deadline"},{"lineNumber":405,"author":{"gitId":"fupernova"},"content":"        Task fileDeadline \u003d new Deadline(components[2], components[3]);"},{"lineNumber":406,"author":{"gitId":"fupernova"},"content":"        if (components[1].equals(\"1\")) {"},{"lineNumber":407,"author":{"gitId":"fupernova"},"content":"            fileDeadline.setDone();"},{"lineNumber":408,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":409,"author":{"gitId":"fupernova"},"content":"        return fileDeadline;"},{"lineNumber":410,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":411,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":412,"author":{"gitId":"fupernova"},"content":"     * Saves all tasks into file after user inputs \"bye\""},{"lineNumber":413,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":414,"author":{"gitId":"fupernova"},"content":"     * @throws IOException if there is IO error."},{"lineNumber":415,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":416,"author":{"gitId":"fupernova"},"content":"    public static void saveFile() throws IOException {"},{"lineNumber":417,"author":{"gitId":"fupernova"},"content":"        StringBuilder saveText \u003d new StringBuilder();"},{"lineNumber":418,"author":{"gitId":"fupernova"},"content":"        for(Task task: Tasks) {"},{"lineNumber":419,"author":{"gitId":"fupernova"},"content":"            saveText.append(serializeFile(task));"},{"lineNumber":420,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":421,"author":{"gitId":"fupernova"},"content":"        FileWriter w \u003d new FileWriter(FILEPATH);"},{"lineNumber":422,"author":{"gitId":"fupernova"},"content":"        w.write(saveText.toString());"},{"lineNumber":423,"author":{"gitId":"fupernova"},"content":"        w.close();"},{"lineNumber":424,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":425,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":426,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":427,"author":{"gitId":"fupernova"},"content":"     * Convert task from program format to text format to prepare for storage."},{"lineNumber":428,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":429,"author":{"gitId":"fupernova"},"content":"     * @param task task to convert."},{"lineNumber":430,"author":{"gitId":"fupernova"},"content":"     * @return converted task."},{"lineNumber":431,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":432,"author":{"gitId":"fupernova"},"content":"    public static String serializeFile(Task task) {"},{"lineNumber":433,"author":{"gitId":"fupernova"},"content":"        String serialized \u003d task.getType();"},{"lineNumber":434,"author":{"gitId":"fupernova"},"content":"        serialized +\u003d \" | \";"},{"lineNumber":435,"author":{"gitId":"fupernova"},"content":"        if (task.checkDone()) {"},{"lineNumber":436,"author":{"gitId":"fupernova"},"content":"            serialized +\u003d \"1 | \";"},{"lineNumber":437,"author":{"gitId":"fupernova"},"content":"        } else {"},{"lineNumber":438,"author":{"gitId":"fupernova"},"content":"            serialized +\u003d \"0 | \";"},{"lineNumber":439,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":440,"author":{"gitId":"fupernova"},"content":"        serialized +\u003d task.getName();"},{"lineNumber":441,"author":{"gitId":"fupernova"},"content":"        if (!(task instanceof Todo)) {"},{"lineNumber":442,"author":{"gitId":"fupernova"},"content":"            serialized +\u003d \" | \";"},{"lineNumber":443,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":444,"author":{"gitId":"fupernova"},"content":"        serialized +\u003d task.getTime();"},{"lineNumber":445,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":446,"author":{"gitId":"fupernova"},"content":"        return serialized + \"\\n\";"},{"lineNumber":447,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":448,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fupernova":445,"-":3}},{"path":"src/main/java/duke/error/EmptyNameFieldException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class EmptyNameFieldException extends Exception {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":4}},{"path":"src/main/java/duke/error/IllegalAccessException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class IllegalAccessException extends Exception {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":5}},{"path":"src/main/java/duke/error/WrongFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.error;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class WrongFormatException extends Exception{"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":5}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"    protected static String deadline;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"    public Deadline(String name, String deadline) {"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"        super(name);"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"    public String getType() {"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"        return \"[D]\";"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    public String getDate() {"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"        return \"(by: \" + this.deadline + \")\";"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"    public String getTime() {"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"        return this.deadline;"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"    protected static String eventTime;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"    public Event(String name, String eventTime) {"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"        super(name);"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"    public String getType() {"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"        return \"[E]\";"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    public String getDate() {"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"        return \"(at: \" + this.eventTime + \")\";"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"    public String getTime() {"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"        return this.eventTime;"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"    protected String name;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"    public static int totalNumberOfTasks \u003d 0;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"    protected Task(String name) {"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"        this.name \u003d name;"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"    public void setDone() {"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"        this.isDone \u003d true;"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    public boolean checkDone() {"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"        return this.isDone;"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"     * @return \"x\" if duke.task is done, empty space otherwise"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":"    public String getStatusIcon() {"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"        return (isDone? \"\\u2718\" : \" \");"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":"    public String getName() {"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"        return name;"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"    // To be overridden"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"    public String getType() {"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"        return \"[ ]\";"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"    // To be overridden"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":"    public String getDate() {"},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"        return \"\";"},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"    // To be overridden"},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"    public String getTime() {"},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"        return \"\";"},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":42}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"    public Todo(String name) {"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"        super(name);"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"    public String getType() {"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"        return \"[T]\";"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":13}},{"path":"tasklogs/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"[T] | 0 | change amp"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":"[D] | 0 | remaster drums | tuesday 10am"},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"[E] | 1 | write guitar part | friday 10pm"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"[D] | 0 | restring guitar | tuesday 10am"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"[E] | 1 | live gig | friday 10pm"}],"authorContributionMap":{"fupernova":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"todo change amp"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"blah"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":"fak ni"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"blah"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"deadline remaster drums /by saturday 2359"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"list"},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"write guitar part"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"event record /at monday 2-4"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"todo add guitars /at thursday 8pm"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"deadline restring guitar /by tuesday 33"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"list"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"done 3"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"list"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"event live gig /at friday 10pm"},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"done 5"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"done 10"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"list"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"bye"}],"authorContributionMap":{"fupernova":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"fupernova":1,"-":20}}]
