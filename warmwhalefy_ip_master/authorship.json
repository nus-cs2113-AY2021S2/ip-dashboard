[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warmwhalefy"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"warmwhalefy"},"content":"    protected String by;"},{"lineNumber":3,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":4,"author":{"gitId":"warmwhalefy"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":5,"author":{"gitId":"warmwhalefy"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"warmwhalefy"},"content":"        this.by \u003d by;"},{"lineNumber":7,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":9,"author":{"gitId":"warmwhalefy"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"warmwhalefy"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"warmwhalefy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":12,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"warmwhalefy"},"content":"}"}],"authorContributionMap":{"warmwhalefy":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warmwhalefy"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"warmwhalefy"},"content":"    static int noOfTasks \u003d 0;"},{"lineNumber":5,"author":{"gitId":"warmwhalefy"},"content":"    static String sectionDivider \u003d \"____________________________________________________________\";"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"warmwhalefy"},"content":"        Task[] TaskArray \u003d new Task[100];"},{"lineNumber":8,"author":{"gitId":"warmwhalefy"},"content":"        Task newItem \u003d null;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":15,"author":{"gitId":"warmwhalefy"},"content":"        System.out.println(sectionDivider);"},{"lineNumber":16,"author":{"gitId":"warmwhalefy"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":17,"author":{"gitId":"warmwhalefy"},"content":"        System.out.println(\"Please type tasks to do OR (list) to list all the tasks OR (bye) to exit.\");"},{"lineNumber":18,"author":{"gitId":"warmwhalefy"},"content":"        Scanner sc\u003d new Scanner(System.in);"},{"lineNumber":19,"author":{"gitId":"warmwhalefy"},"content":"        while (true) {"},{"lineNumber":20,"author":{"gitId":"warmwhalefy"},"content":"            String str \u003d sc.nextLine();"},{"lineNumber":21,"author":{"gitId":"warmwhalefy"},"content":"            if (str.equals(\"bye\")) {"},{"lineNumber":22,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(sectionDivider);"},{"lineNumber":23,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":24,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(sectionDivider);"},{"lineNumber":25,"author":{"gitId":"warmwhalefy"},"content":"                break;"},{"lineNumber":26,"author":{"gitId":"warmwhalefy"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"warmwhalefy"},"content":"            if (str.equals(\"list\")){"},{"lineNumber":28,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(sectionDivider);"},{"lineNumber":29,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(\"Here are the tasks in your to-do list:\");"},{"lineNumber":30,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(TaskArray[0].getStatusIcon());"},{"lineNumber":31,"author":{"gitId":"warmwhalefy"},"content":"                for(int i\u003d 1; i!\u003dnoOfTasks+1; i++){"},{"lineNumber":32,"author":{"gitId":"warmwhalefy"},"content":"                    System.out.println(i + \".\" + TaskArray[i-1].toString());"},{"lineNumber":33,"author":{"gitId":"warmwhalefy"},"content":"                    //System.out.println(i + \". [\" + TaskArray[i-1].getStatusIcon() + \" ]\" + TaskArray[i-1].getDescription());"},{"lineNumber":34,"author":{"gitId":"warmwhalefy"},"content":"                }"},{"lineNumber":35,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(sectionDivider);"},{"lineNumber":36,"author":{"gitId":"warmwhalefy"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"warmwhalefy"},"content":"            if (str.contains(\"done\")){"},{"lineNumber":38,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(sectionDivider);"},{"lineNumber":39,"author":{"gitId":"warmwhalefy"},"content":"                String[] splitInput \u003d str.split(\" \");"},{"lineNumber":40,"author":{"gitId":"warmwhalefy"},"content":"                int taskNumber \u003d Integer.parseInt(splitInput[1]);"},{"lineNumber":41,"author":{"gitId":"warmwhalefy"},"content":"                TaskArray[taskNumber-1].markAsDone();"},{"lineNumber":42,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":43,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(taskNumber + \". [\" + TaskArray[taskNumber-1].getStatusIcon() + \" ]\" + TaskArray[taskNumber-1].getDescription());"},{"lineNumber":44,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(sectionDivider);"},{"lineNumber":45,"author":{"gitId":"warmwhalefy"},"content":"            } else {"},{"lineNumber":46,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(sectionDivider);"},{"lineNumber":47,"author":{"gitId":"warmwhalefy"},"content":"                String[] splitInput \u003d str.split(\" \");"},{"lineNumber":48,"author":{"gitId":"warmwhalefy"},"content":"                if (splitInput[0].equals(\"deadline\")) {"},{"lineNumber":49,"author":{"gitId":"warmwhalefy"},"content":"                    int wordsCount \u003d splitInput.length;"},{"lineNumber":50,"author":{"gitId":"warmwhalefy"},"content":"                    String descriptionString \u003d \"\";"},{"lineNumber":51,"author":{"gitId":"warmwhalefy"},"content":"                    String byString \u003d \"\";"},{"lineNumber":52,"author":{"gitId":"warmwhalefy"},"content":"                    int byIndex \u003d 0;"},{"lineNumber":53,"author":{"gitId":"warmwhalefy"},"content":"                    for (int i \u003d 1; i !\u003d wordsCount; i++) {"},{"lineNumber":54,"author":{"gitId":"warmwhalefy"},"content":"                        if (splitInput[i] !\u003d \"/by\") {"},{"lineNumber":55,"author":{"gitId":"warmwhalefy"},"content":"                            descriptionString \u003d descriptionString + splitInput[i] + \" \";"},{"lineNumber":56,"author":{"gitId":"warmwhalefy"},"content":"                        } else {"},{"lineNumber":57,"author":{"gitId":"warmwhalefy"},"content":"                            byIndex \u003d i + 1;"},{"lineNumber":58,"author":{"gitId":"warmwhalefy"},"content":"                        }"},{"lineNumber":59,"author":{"gitId":"warmwhalefy"},"content":"                    }"},{"lineNumber":60,"author":{"gitId":"warmwhalefy"},"content":"                    while (byIndex !\u003d wordsCount) {"},{"lineNumber":61,"author":{"gitId":"warmwhalefy"},"content":"                        byString \u003d byString + splitInput[byIndex] + \" \";"},{"lineNumber":62,"author":{"gitId":"warmwhalefy"},"content":"                        byIndex++;"},{"lineNumber":63,"author":{"gitId":"warmwhalefy"},"content":"                    }"},{"lineNumber":64,"author":{"gitId":"warmwhalefy"},"content":"                    newItem \u003d new Deadline(descriptionString, byString);"},{"lineNumber":65,"author":{"gitId":"warmwhalefy"},"content":"                    TaskArray[noOfTasks] \u003d newItem;"},{"lineNumber":66,"author":{"gitId":"warmwhalefy"},"content":"                    noOfTasks \u003d noOfTasks + 1;"},{"lineNumber":67,"author":{"gitId":"warmwhalefy"},"content":"                }"},{"lineNumber":68,"author":{"gitId":"warmwhalefy"},"content":"                if (splitInput[0].equals(\"event\")) {"},{"lineNumber":69,"author":{"gitId":"warmwhalefy"},"content":"                    int wordsCount \u003d splitInput.length;"},{"lineNumber":70,"author":{"gitId":"warmwhalefy"},"content":"                    String descriptionString \u003d \"\";"},{"lineNumber":71,"author":{"gitId":"warmwhalefy"},"content":"                    String atString \u003d \"\";"},{"lineNumber":72,"author":{"gitId":"warmwhalefy"},"content":"                    int byIndex \u003d 0;"},{"lineNumber":73,"author":{"gitId":"warmwhalefy"},"content":"                    for (int i \u003d 1; i !\u003d wordsCount; i++) {"},{"lineNumber":74,"author":{"gitId":"warmwhalefy"},"content":"                        if (splitInput[i] !\u003d \"/at\") {"},{"lineNumber":75,"author":{"gitId":"warmwhalefy"},"content":"                            descriptionString \u003d descriptionString + splitInput[i] + \" \";"},{"lineNumber":76,"author":{"gitId":"warmwhalefy"},"content":"                        } else {"},{"lineNumber":77,"author":{"gitId":"warmwhalefy"},"content":"                            byIndex \u003d i + 1;"},{"lineNumber":78,"author":{"gitId":"warmwhalefy"},"content":"                        }"},{"lineNumber":79,"author":{"gitId":"warmwhalefy"},"content":"                    }"},{"lineNumber":80,"author":{"gitId":"warmwhalefy"},"content":"                    while (byIndex !\u003d wordsCount) {"},{"lineNumber":81,"author":{"gitId":"warmwhalefy"},"content":"                        atString \u003d atString + splitInput[byIndex] + \" \";"},{"lineNumber":82,"author":{"gitId":"warmwhalefy"},"content":"                        byIndex++;"},{"lineNumber":83,"author":{"gitId":"warmwhalefy"},"content":"                    }"},{"lineNumber":84,"author":{"gitId":"warmwhalefy"},"content":"                    newItem \u003d new Deadline(descriptionString, atString);"},{"lineNumber":85,"author":{"gitId":"warmwhalefy"},"content":"                    TaskArray[noOfTasks] \u003d newItem;"},{"lineNumber":86,"author":{"gitId":"warmwhalefy"},"content":"                    noOfTasks \u003d noOfTasks + 1;"},{"lineNumber":87,"author":{"gitId":"warmwhalefy"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"warmwhalefy"},"content":"                if (splitInput[0].equals(\"todo\")) {"},{"lineNumber":89,"author":{"gitId":"warmwhalefy"},"content":"                    int wordsCount \u003d splitInput.length;"},{"lineNumber":90,"author":{"gitId":"warmwhalefy"},"content":"                    String descriptionString \u003d \"\";"},{"lineNumber":91,"author":{"gitId":"warmwhalefy"},"content":"                    for (int i \u003d 1; i !\u003d wordsCount; i++) {"},{"lineNumber":92,"author":{"gitId":"warmwhalefy"},"content":"                        descriptionString \u003d descriptionString + splitInput[i] + \" \";"},{"lineNumber":93,"author":{"gitId":"warmwhalefy"},"content":"                    }"},{"lineNumber":94,"author":{"gitId":"warmwhalefy"},"content":"                    newItem \u003d new Todo(descriptionString);"},{"lineNumber":95,"author":{"gitId":"warmwhalefy"},"content":"                    TaskArray[noOfTasks] \u003d newItem;"},{"lineNumber":96,"author":{"gitId":"warmwhalefy"},"content":"                    noOfTasks \u003d noOfTasks + 1;"},{"lineNumber":97,"author":{"gitId":"warmwhalefy"},"content":"                }"},{"lineNumber":98,"author":{"gitId":"warmwhalefy"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"warmwhalefy":91,"-":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warmwhalefy"},"content":"public class Event extends Task{"},{"lineNumber":2,"author":{"gitId":"warmwhalefy"},"content":"    protected String at;"},{"lineNumber":3,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":4,"author":{"gitId":"warmwhalefy"},"content":"    public Event(String description, String at) {"},{"lineNumber":5,"author":{"gitId":"warmwhalefy"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"warmwhalefy"},"content":"        this.at \u003d at;"},{"lineNumber":7,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":9,"author":{"gitId":"warmwhalefy"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"warmwhalefy"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"warmwhalefy"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":12,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"warmwhalefy"},"content":"}"}],"authorContributionMap":{"warmwhalefy":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warmwhalefy"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"warmwhalefy"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"warmwhalefy"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":5,"author":{"gitId":"warmwhalefy"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"warmwhalefy"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"warmwhalefy"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":10,"author":{"gitId":"warmwhalefy"},"content":"    public String getDescription() {"},{"lineNumber":11,"author":{"gitId":"warmwhalefy"},"content":"        return (this.description);"},{"lineNumber":12,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":14,"author":{"gitId":"warmwhalefy"},"content":"    public String getStatusIcon() {"},{"lineNumber":15,"author":{"gitId":"warmwhalefy"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X"},{"lineNumber":16,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":18,"author":{"gitId":"warmwhalefy"},"content":"    public void markAsDone(){"},{"lineNumber":19,"author":{"gitId":"warmwhalefy"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"warmwhalefy"},"content":"}"}],"authorContributionMap":{"warmwhalefy":21}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warmwhalefy"},"content":"public class Todo extends Task{"},{"lineNumber":2,"author":{"gitId":"warmwhalefy"},"content":"     public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"warmwhalefy"},"content":"         super(description);"},{"lineNumber":4,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":6,"author":{"gitId":"warmwhalefy"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"warmwhalefy"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"warmwhalefy"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":9,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"warmwhalefy"},"content":"}"}],"authorContributionMap":{"warmwhalefy":10}}]
