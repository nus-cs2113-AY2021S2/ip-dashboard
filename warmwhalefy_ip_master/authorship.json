[{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warmwhalefy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":3,"author":{"gitId":"warmwhalefy"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"warmwhalefy"},"content":"    protected String by;"},{"lineNumber":5,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":6,"author":{"gitId":"warmwhalefy"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":7,"author":{"gitId":"warmwhalefy"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"warmwhalefy"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":11,"author":{"gitId":"warmwhalefy"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"warmwhalefy"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"warmwhalefy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":14,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"warmwhalefy"},"content":"}"}],"authorContributionMap":{"warmwhalefy":15}},{"path":"src/main/java/duke/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warmwhalefy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":3,"author":{"gitId":"warmwhalefy"},"content":"public class DeadlineException extends Exception {"},{"lineNumber":4,"author":{"gitId":"warmwhalefy"},"content":"}"}],"authorContributionMap":{"warmwhalefy":4}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warmwhalefy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":3,"author":{"gitId":"warmwhalefy"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"warmwhalefy"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"warmwhalefy"},"content":"import java.io.*;"},{"lineNumber":6,"author":{"gitId":"warmwhalefy"},"content":"import java.nio.file.NoSuchFileException;"},{"lineNumber":7,"author":{"gitId":"warmwhalefy"},"content":"import java.nio.file.Path;"},{"lineNumber":8,"author":{"gitId":"warmwhalefy"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"warmwhalefy"},"content":"    public static final int INDEX_TODO \u003d 5;"},{"lineNumber":12,"author":{"gitId":"warmwhalefy"},"content":"    public static final int INDEX_EVENT \u003d 6;"},{"lineNumber":13,"author":{"gitId":"warmwhalefy"},"content":"    public static final int INDEX_DEADLINE \u003d 9;"},{"lineNumber":14,"author":{"gitId":"warmwhalefy"},"content":"    public static final String SECTION_DIVIDER \u003d \"____________________\";"},{"lineNumber":15,"author":{"gitId":"warmwhalefy"},"content":"    public static boolean invalidInput \u003d false;"},{"lineNumber":16,"author":{"gitId":"warmwhalefy"},"content":"    private static ArrayList\u003cTask\u003e TaskArray \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":19,"author":{"gitId":"warmwhalefy"},"content":"        String logo \u003d \" __        _        \\n\""},{"lineNumber":20,"author":{"gitId":"warmwhalefy"},"content":"                + \"|  _ \\\\ _   | | __ \\n\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":22,"author":{"gitId":"warmwhalefy"},"content":"                + \"| || | || |   \u003c  __/\\n\""},{"lineNumber":23,"author":{"gitId":"warmwhalefy"},"content":"                + \"|_/ \\\\,||\\\\\\\\___|\\n\";"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":25,"author":{"gitId":"warmwhalefy"},"content":"        System.out.println(\"Hello! I\u0027m Duke.\");"},{"lineNumber":26,"author":{"gitId":"warmwhalefy"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":27,"author":{"gitId":"warmwhalefy"},"content":"        System.out.println(SECTION_DIVIDER);"},{"lineNumber":28,"author":{"gitId":"warmwhalefy"},"content":"        String fileName \u003d \"testing.txt\";"},{"lineNumber":29,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":30,"author":{"gitId":"warmwhalefy"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"warmwhalefy"},"content":"            File myObj \u003d new File(\"testing.txt\");"},{"lineNumber":32,"author":{"gitId":"warmwhalefy"},"content":"            if (myObj.createNewFile()) {"},{"lineNumber":33,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(\"File created: \" + myObj.getName());"},{"lineNumber":34,"author":{"gitId":"warmwhalefy"},"content":"            } else {"},{"lineNumber":35,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(\"File already exists.\");"},{"lineNumber":36,"author":{"gitId":"warmwhalefy"},"content":"                loadFile(\"testing.txt\");"},{"lineNumber":37,"author":{"gitId":"warmwhalefy"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"warmwhalefy"},"content":"        } catch (IOException e) {"},{"lineNumber":39,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":40,"author":{"gitId":"warmwhalefy"},"content":"            e.printStackTrace();"},{"lineNumber":41,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":43,"author":{"gitId":"warmwhalefy"},"content":"        Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":44,"author":{"gitId":"warmwhalefy"},"content":"        String userInput;"},{"lineNumber":45,"author":{"gitId":"warmwhalefy"},"content":"        userInput \u003d getUserInput(scan);"},{"lineNumber":46,"author":{"gitId":"warmwhalefy"},"content":"        while (invalidInput) {"},{"lineNumber":47,"author":{"gitId":"warmwhalefy"},"content":"            userInput \u003d getUserInput(scan);"},{"lineNumber":48,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"warmwhalefy"},"content":"        while (sayBye(userInput) \u003d\u003d 0) {"},{"lineNumber":50,"author":{"gitId":"warmwhalefy"},"content":"            if (userInput.contains(\"list\")) {"},{"lineNumber":51,"author":{"gitId":"warmwhalefy"},"content":"                viewTasks(TaskArray);"},{"lineNumber":52,"author":{"gitId":"warmwhalefy"},"content":"            } else if (userInput.contains(\"done\")) {"},{"lineNumber":53,"author":{"gitId":"warmwhalefy"},"content":"                markTaskAsDone(userInput);"},{"lineNumber":54,"author":{"gitId":"warmwhalefy"},"content":"            } else if (userInput.contains(\"delete\")) {"},{"lineNumber":55,"author":{"gitId":"warmwhalefy"},"content":"                deleteTask(userInput);"},{"lineNumber":56,"author":{"gitId":"warmwhalefy"},"content":"            } else {"},{"lineNumber":57,"author":{"gitId":"warmwhalefy"},"content":"                addTaskToArray(userInput);"},{"lineNumber":58,"author":{"gitId":"warmwhalefy"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"warmwhalefy"},"content":"            try {"},{"lineNumber":60,"author":{"gitId":"warmwhalefy"},"content":"                updateFile(Path.of(fileName));"},{"lineNumber":61,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(\"updated file\");"},{"lineNumber":62,"author":{"gitId":"warmwhalefy"},"content":"            } catch (IOException e) {"},{"lineNumber":63,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());"},{"lineNumber":64,"author":{"gitId":"warmwhalefy"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"warmwhalefy"},"content":"            userInput \u003d getUserInput(scan);"},{"lineNumber":66,"author":{"gitId":"warmwhalefy"},"content":"            while (invalidInput) {"},{"lineNumber":67,"author":{"gitId":"warmwhalefy"},"content":"                userInput \u003d getUserInput(scan);"},{"lineNumber":68,"author":{"gitId":"warmwhalefy"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":72,"author":{"gitId":"warmwhalefy"},"content":"    private static void loadFile(String fileName) throws NoSuchFileException, IOException {"},{"lineNumber":73,"author":{"gitId":"warmwhalefy"},"content":"        Scanner s \u003d new Scanner(Path.of(fileName)); // create a Scanner using the File as the source"},{"lineNumber":74,"author":{"gitId":"warmwhalefy"},"content":"        while (s.hasNext()) {"},{"lineNumber":75,"author":{"gitId":"warmwhalefy"},"content":"            String fileInput \u003d s.nextLine();"},{"lineNumber":76,"author":{"gitId":"warmwhalefy"},"content":"            if (fileInput.contains(\"[T]\")) {"},{"lineNumber":77,"author":{"gitId":"warmwhalefy"},"content":"                addTodoFromFile(fileInput);"},{"lineNumber":78,"author":{"gitId":"warmwhalefy"},"content":"            } else if (fileInput.contains(\"[E]\")) {"},{"lineNumber":79,"author":{"gitId":"warmwhalefy"},"content":"                addEventFromFile(fileInput);"},{"lineNumber":80,"author":{"gitId":"warmwhalefy"},"content":"            } else if (fileInput.contains(\"[D]\")) {"},{"lineNumber":81,"author":{"gitId":"warmwhalefy"},"content":"                addDeadlineFromFile(fileInput);"},{"lineNumber":82,"author":{"gitId":"warmwhalefy"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"warmwhalefy"},"content":"        viewTasks(TaskArray);"},{"lineNumber":85,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":87,"author":{"gitId":"warmwhalefy"},"content":"    private static void addDeadlineFromFile(String fileInput) {"},{"lineNumber":88,"author":{"gitId":"warmwhalefy"},"content":"        int byIndex \u003d fileInput.indexOf(\"(by:\");"},{"lineNumber":89,"author":{"gitId":"warmwhalefy"},"content":"        Deadline deadlineAdded \u003d new Deadline(fileInput.substring(7, byIndex), fileInput.substring(byIndex + 5, fileInput.indexOf(\")\")));"},{"lineNumber":90,"author":{"gitId":"warmwhalefy"},"content":"        TaskArray.add(deadlineAdded);"},{"lineNumber":91,"author":{"gitId":"warmwhalefy"},"content":"        if (fileInput.contains(\"X\")) {"},{"lineNumber":92,"author":{"gitId":"warmwhalefy"},"content":"            TaskArray.get(TaskArray.size() - 1).markAsDone();"},{"lineNumber":93,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":96,"author":{"gitId":"warmwhalefy"},"content":"    private static void addEventFromFile(String fileInput) {"},{"lineNumber":97,"author":{"gitId":"warmwhalefy"},"content":"        int byIndex \u003d fileInput.indexOf(\"(at:\");"},{"lineNumber":98,"author":{"gitId":"warmwhalefy"},"content":"        Event eventAdded \u003d new Event(fileInput.substring(7, byIndex), fileInput.substring(byIndex + 5, fileInput.indexOf(\")\")));"},{"lineNumber":99,"author":{"gitId":"warmwhalefy"},"content":"        TaskArray.add(eventAdded);"},{"lineNumber":100,"author":{"gitId":"warmwhalefy"},"content":"        if (fileInput.contains(\"X\")) {"},{"lineNumber":101,"author":{"gitId":"warmwhalefy"},"content":"            TaskArray.get(TaskArray.size() - 1).markAsDone();"},{"lineNumber":102,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":105,"author":{"gitId":"warmwhalefy"},"content":"    private static void addTodoFromFile(String fileInput) {"},{"lineNumber":106,"author":{"gitId":"warmwhalefy"},"content":"        Todo todoAdded \u003d new Todo(fileInput.substring(7));"},{"lineNumber":107,"author":{"gitId":"warmwhalefy"},"content":"        TaskArray.add(todoAdded);"},{"lineNumber":108,"author":{"gitId":"warmwhalefy"},"content":"        if (fileInput.contains(\"X\")) {"},{"lineNumber":109,"author":{"gitId":"warmwhalefy"},"content":"            TaskArray.get(TaskArray.size() - 1).markAsDone();"},{"lineNumber":110,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":113,"author":{"gitId":"warmwhalefy"},"content":"    private static void updateFile(Path filePath) throws IOException {"},{"lineNumber":114,"author":{"gitId":"warmwhalefy"},"content":"        FileWriter fw \u003d new FileWriter(String.valueOf(filePath));"},{"lineNumber":115,"author":{"gitId":"warmwhalefy"},"content":"        for (Task t : TaskArray) {"},{"lineNumber":116,"author":{"gitId":"warmwhalefy"},"content":"            fw.write(t.toString() + System.lineSeparator());"},{"lineNumber":117,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"warmwhalefy"},"content":"        fw.write(\"There are a total of \" + TaskArray.size() + \" tasks in the list.\");"},{"lineNumber":119,"author":{"gitId":"warmwhalefy"},"content":"        fw.close();"},{"lineNumber":120,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":122,"author":{"gitId":"warmwhalefy"},"content":"    public static String getUserInput(Scanner scan) {"},{"lineNumber":123,"author":{"gitId":"warmwhalefy"},"content":"        String userInput;"},{"lineNumber":124,"author":{"gitId":"warmwhalefy"},"content":"        userInput \u003d scan.nextLine();"},{"lineNumber":125,"author":{"gitId":"warmwhalefy"},"content":"        try {"},{"lineNumber":126,"author":{"gitId":"warmwhalefy"},"content":"            handleErrorUserInputs(userInput);"},{"lineNumber":127,"author":{"gitId":"warmwhalefy"},"content":"        } catch (TaskException e) {"},{"lineNumber":128,"author":{"gitId":"warmwhalefy"},"content":"            invalidInput \u003d true;"},{"lineNumber":129,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(\"☹️ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":130,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(SECTION_DIVIDER);"},{"lineNumber":131,"author":{"gitId":"warmwhalefy"},"content":"        } catch (EventException e) {"},{"lineNumber":132,"author":{"gitId":"warmwhalefy"},"content":"            invalidInput \u003d true;"},{"lineNumber":133,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(\"☹️ OOPS!!! The description of an event cannot be empty or is incomplete (/at).\");"},{"lineNumber":134,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(SECTION_DIVIDER);"},{"lineNumber":135,"author":{"gitId":"warmwhalefy"},"content":"        } catch (DeadlineException e) {"},{"lineNumber":136,"author":{"gitId":"warmwhalefy"},"content":"            invalidInput \u003d true;"},{"lineNumber":137,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(\"☹️ OOPS!!! The description of a deadline cannot be empty or is incomplete (/by).\");"},{"lineNumber":138,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(SECTION_DIVIDER);"},{"lineNumber":139,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"warmwhalefy"},"content":"        return userInput;"},{"lineNumber":141,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":143,"author":{"gitId":"warmwhalefy"},"content":"    public static void addTaskToArray(String userInput) {"},{"lineNumber":144,"author":{"gitId":"warmwhalefy"},"content":"        Task taskAdded \u003d null;"},{"lineNumber":145,"author":{"gitId":"warmwhalefy"},"content":"        if (userInput.contains(\"deadline\")) {"},{"lineNumber":146,"author":{"gitId":"warmwhalefy"},"content":"            taskAdded \u003d addDeadlineToArray(userInput);"},{"lineNumber":147,"author":{"gitId":"warmwhalefy"},"content":"        } else if (userInput.contains(\"event\")) {"},{"lineNumber":148,"author":{"gitId":"warmwhalefy"},"content":"            taskAdded \u003d addEventToArray(userInput);"},{"lineNumber":149,"author":{"gitId":"warmwhalefy"},"content":"        } else if (userInput.contains(\"todo\")){"},{"lineNumber":150,"author":{"gitId":"warmwhalefy"},"content":"            taskAdded \u003d addTodoToArray(userInput);"},{"lineNumber":151,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"warmwhalefy"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\" + System.lineSeparator() + taskAdded);"},{"lineNumber":153,"author":{"gitId":"warmwhalefy"},"content":"        System.out.println(\"Now you have \" + TaskArray.size() + \" tasks in the list.\");"},{"lineNumber":154,"author":{"gitId":"warmwhalefy"},"content":"        System.out.println(SECTION_DIVIDER);"},{"lineNumber":155,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":157,"author":{"gitId":"warmwhalefy"},"content":"    public static Todo addTodoToArray(String userInput) {"},{"lineNumber":158,"author":{"gitId":"warmwhalefy"},"content":"        int descriptionIndex \u003d userInput.indexOf(\"todo\") + INDEX_TODO;"},{"lineNumber":159,"author":{"gitId":"warmwhalefy"},"content":"        Todo todoAdded \u003d new Todo(userInput.substring(descriptionIndex));"},{"lineNumber":160,"author":{"gitId":"warmwhalefy"},"content":"        TaskArray.add(todoAdded);"},{"lineNumber":161,"author":{"gitId":"warmwhalefy"},"content":"        return todoAdded;"},{"lineNumber":162,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":164,"author":{"gitId":"warmwhalefy"},"content":"    public static Event addEventToArray(String userInput) {"},{"lineNumber":165,"author":{"gitId":"warmwhalefy"},"content":"        int descriptionIndex \u003d userInput.indexOf(\"event\") + INDEX_EVENT;"},{"lineNumber":166,"author":{"gitId":"warmwhalefy"},"content":"        int byIndex \u003d userInput.indexOf(\"/at\");"},{"lineNumber":167,"author":{"gitId":"warmwhalefy"},"content":"        Event eventAdded \u003d new Event(userInput.substring(descriptionIndex, byIndex-1), userInput.substring(byIndex + 4));"},{"lineNumber":168,"author":{"gitId":"warmwhalefy"},"content":"        TaskArray.add(eventAdded);"},{"lineNumber":169,"author":{"gitId":"warmwhalefy"},"content":"        return eventAdded;"},{"lineNumber":170,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":172,"author":{"gitId":"warmwhalefy"},"content":"    public static Deadline addDeadlineToArray(String userInput) {"},{"lineNumber":173,"author":{"gitId":"warmwhalefy"},"content":"        int descriptionIndex \u003d userInput.indexOf(\"deadline\") + INDEX_DEADLINE;"},{"lineNumber":174,"author":{"gitId":"warmwhalefy"},"content":"        int byIndex \u003d userInput.indexOf(\"/by\");"},{"lineNumber":175,"author":{"gitId":"warmwhalefy"},"content":"        Deadline deadlineAdded \u003d new Deadline(userInput.substring(descriptionIndex, byIndex-1), userInput.substring(byIndex + 4));"},{"lineNumber":176,"author":{"gitId":"warmwhalefy"},"content":"        TaskArray.add(deadlineAdded);"},{"lineNumber":177,"author":{"gitId":"warmwhalefy"},"content":"        return deadlineAdded;"},{"lineNumber":178,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":180,"author":{"gitId":"warmwhalefy"},"content":"    public static void markTaskAsDone(String userInput) {"},{"lineNumber":181,"author":{"gitId":"warmwhalefy"},"content":"        userInput \u003d userInput.replaceAll(\"[^0-9]\", \"\");"},{"lineNumber":182,"author":{"gitId":"warmwhalefy"},"content":"        try {"},{"lineNumber":183,"author":{"gitId":"warmwhalefy"},"content":"            int taskNo \u003d Integer.parseInt(userInput);"},{"lineNumber":184,"author":{"gitId":"warmwhalefy"},"content":"            if (taskNo \u003e TaskArray.size()) {"},{"lineNumber":185,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(\"You only have \" + TaskArray.size() + \" task(s)!\");"},{"lineNumber":186,"author":{"gitId":"warmwhalefy"},"content":"            } else {"},{"lineNumber":187,"author":{"gitId":"warmwhalefy"},"content":"                TaskArray.get(taskNo - 1).markAsDone();"},{"lineNumber":188,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(\"Nice! I have marked this task as done:\" + TaskArray.get(taskNo - 1));"},{"lineNumber":189,"author":{"gitId":"warmwhalefy"},"content":"            }"},{"lineNumber":190,"author":{"gitId":"warmwhalefy"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":191,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(\"Invalid Input! Input format should have an integer e.g. done 2\");"},{"lineNumber":192,"author":{"gitId":"warmwhalefy"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":193,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(\"Invalid Input! Integer cannot be 0!\");"},{"lineNumber":194,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":195,"author":{"gitId":"warmwhalefy"},"content":"        System.out.println(SECTION_DIVIDER);"},{"lineNumber":196,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":198,"author":{"gitId":"warmwhalefy"},"content":"    private static void deleteTask(String userInput) {"},{"lineNumber":199,"author":{"gitId":"warmwhalefy"},"content":"        userInput \u003d userInput.replaceAll(\"[^0-9]\", \"\");"},{"lineNumber":200,"author":{"gitId":"warmwhalefy"},"content":"        try {"},{"lineNumber":201,"author":{"gitId":"warmwhalefy"},"content":"            int taskNo \u003d Integer.parseInt(userInput);"},{"lineNumber":202,"author":{"gitId":"warmwhalefy"},"content":"            if (taskNo \u003e TaskArray.size()) {"},{"lineNumber":203,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(\"You only have \" + TaskArray.size() + \" task(s)!\");"},{"lineNumber":204,"author":{"gitId":"warmwhalefy"},"content":"            } else {"},{"lineNumber":205,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task: \" + System.lineSeparator() + TaskArray.get(taskNo - 1));"},{"lineNumber":206,"author":{"gitId":"warmwhalefy"},"content":"                TaskArray.remove(taskNo - 1);"},{"lineNumber":207,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(\"Now you have \" + TaskArray.size() + \" tasks in the list.\");"},{"lineNumber":208,"author":{"gitId":"warmwhalefy"},"content":"            }"},{"lineNumber":209,"author":{"gitId":"warmwhalefy"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":210,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(\"Invalid Input! Input format should have an integer e.g. done 2\");"},{"lineNumber":211,"author":{"gitId":"warmwhalefy"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":212,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(\"Invalid Input! Integer cannot be 0!\");"},{"lineNumber":213,"author":{"gitId":"warmwhalefy"},"content":"        } finally {"},{"lineNumber":214,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(SECTION_DIVIDER);"},{"lineNumber":215,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":216,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":218,"author":{"gitId":"warmwhalefy"},"content":"    public static void viewTasks(ArrayList\u003cTask\u003e arrayOfTasks) {"},{"lineNumber":219,"author":{"gitId":"warmwhalefy"},"content":"        if (arrayOfTasks.size() \u003d\u003d 0) {"},{"lineNumber":220,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(\"There are no tasks in your list.\");"},{"lineNumber":221,"author":{"gitId":"warmwhalefy"},"content":"        } else {"},{"lineNumber":222,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":223,"author":{"gitId":"warmwhalefy"},"content":"            for (int i \u003d 1; i \u003c\u003d arrayOfTasks.size(); i++) {"},{"lineNumber":224,"author":{"gitId":"warmwhalefy"},"content":"                System.out.println(i + \". \" + arrayOfTasks.get(i - 1));"},{"lineNumber":225,"author":{"gitId":"warmwhalefy"},"content":"            }"},{"lineNumber":226,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":227,"author":{"gitId":"warmwhalefy"},"content":"        System.out.println(SECTION_DIVIDER);"},{"lineNumber":228,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":229,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":230,"author":{"gitId":"warmwhalefy"},"content":"    public static int sayBye(String bye) {"},{"lineNumber":231,"author":{"gitId":"warmwhalefy"},"content":"        if (bye.toLowerCase().contains(\"bye\")) {"},{"lineNumber":232,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(SECTION_DIVIDER);"},{"lineNumber":233,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":234,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(SECTION_DIVIDER);"},{"lineNumber":235,"author":{"gitId":"warmwhalefy"},"content":"            return 1;"},{"lineNumber":236,"author":{"gitId":"warmwhalefy"},"content":"        } else {"},{"lineNumber":237,"author":{"gitId":"warmwhalefy"},"content":"            return 0;"},{"lineNumber":238,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":239,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":240,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":241,"author":{"gitId":"warmwhalefy"},"content":"    public static void handleErrorUserInputs(String userInput) throws TaskException, EventException, DeadlineException {"},{"lineNumber":242,"author":{"gitId":"warmwhalefy"},"content":"        userInput \u003d userInput.toLowerCase().trim();"},{"lineNumber":243,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":244,"author":{"gitId":"warmwhalefy"},"content":"        if (userInput.contains(\"todo\") \u0026\u0026 !(userInput.contains(\"event\")) \u0026\u0026 !(userInput.contains(\"deadline\"))) {"},{"lineNumber":245,"author":{"gitId":"warmwhalefy"},"content":"            validateTodo(userInput);"},{"lineNumber":246,"author":{"gitId":"warmwhalefy"},"content":"        } else if (userInput.contains(\"event\") \u0026\u0026 !(userInput.contains(\"todo\")) \u0026\u0026 !(userInput.contains(\"deadline\"))) {"},{"lineNumber":247,"author":{"gitId":"warmwhalefy"},"content":"            validateEvent(userInput);"},{"lineNumber":248,"author":{"gitId":"warmwhalefy"},"content":"        } else if (userInput.contains(\"deadline\") \u0026\u0026 !(userInput.contains(\"todo\")) \u0026\u0026 !(userInput.contains(\"event\"))) {"},{"lineNumber":249,"author":{"gitId":"warmwhalefy"},"content":"            validateDeadline(userInput);"},{"lineNumber":250,"author":{"gitId":"warmwhalefy"},"content":"        } else if (userInput.contains(\"list\")"},{"lineNumber":251,"author":{"gitId":"warmwhalefy"},"content":"                || userInput.contains(\"bye\")"},{"lineNumber":252,"author":{"gitId":"warmwhalefy"},"content":"                || userInput.contains(\"done\")"},{"lineNumber":253,"author":{"gitId":"warmwhalefy"},"content":"                || userInput.contains(\"delete\")) {"},{"lineNumber":254,"author":{"gitId":"warmwhalefy"},"content":"            invalidInput \u003d false;"},{"lineNumber":255,"author":{"gitId":"warmwhalefy"},"content":"        } else {"},{"lineNumber":256,"author":{"gitId":"warmwhalefy"},"content":"            invalidInput \u003d true;"},{"lineNumber":257,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(\"☹️ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":258,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(SECTION_DIVIDER);"},{"lineNumber":259,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":260,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":261,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":262,"author":{"gitId":"warmwhalefy"},"content":"    public static void validateDeadline(String userInput) throws DeadlineException {"},{"lineNumber":263,"author":{"gitId":"warmwhalefy"},"content":"        if (userInput.substring(INDEX_DEADLINE - 1).trim().isEmpty()"},{"lineNumber":264,"author":{"gitId":"warmwhalefy"},"content":"                || !(userInput.contains(\"/by\"))"},{"lineNumber":265,"author":{"gitId":"warmwhalefy"},"content":"                || userInput.substring(userInput.indexOf(\"/by\") + 3).trim().isEmpty() ) {"},{"lineNumber":266,"author":{"gitId":"warmwhalefy"},"content":"            throw new DeadlineException();"},{"lineNumber":267,"author":{"gitId":"warmwhalefy"},"content":"        } else {"},{"lineNumber":268,"author":{"gitId":"warmwhalefy"},"content":"            invalidInput \u003d false;"},{"lineNumber":269,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":270,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":271,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":272,"author":{"gitId":"warmwhalefy"},"content":"    public static void validateEvent(String userInput) throws EventException {"},{"lineNumber":273,"author":{"gitId":"warmwhalefy"},"content":"        if (userInput.substring(INDEX_EVENT - 1).trim().isEmpty()"},{"lineNumber":274,"author":{"gitId":"warmwhalefy"},"content":"                || !(userInput.contains(\"/at\"))"},{"lineNumber":275,"author":{"gitId":"warmwhalefy"},"content":"                || userInput.substring(userInput.indexOf(\"/at\") + 3).trim().isEmpty()) {"},{"lineNumber":276,"author":{"gitId":"warmwhalefy"},"content":"            throw new EventException();"},{"lineNumber":277,"author":{"gitId":"warmwhalefy"},"content":"        } else {"},{"lineNumber":278,"author":{"gitId":"warmwhalefy"},"content":"            invalidInput \u003d false;"},{"lineNumber":279,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":280,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":281,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":282,"author":{"gitId":"warmwhalefy"},"content":"    public static void validateTodo(String userInput) throws TaskException {"},{"lineNumber":283,"author":{"gitId":"warmwhalefy"},"content":"        if (userInput.substring(INDEX_TODO - 1).trim().isEmpty()) {"},{"lineNumber":284,"author":{"gitId":"warmwhalefy"},"content":"            throw new TaskException();"},{"lineNumber":285,"author":{"gitId":"warmwhalefy"},"content":"        } else {"},{"lineNumber":286,"author":{"gitId":"warmwhalefy"},"content":"            invalidInput \u003d false;"},{"lineNumber":287,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":288,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"warmwhalefy":283,"-":6}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warmwhalefy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":3,"author":{"gitId":"warmwhalefy"},"content":"public class Event extends Task{"},{"lineNumber":4,"author":{"gitId":"warmwhalefy"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":6,"author":{"gitId":"warmwhalefy"},"content":"    public Event(String description, String at) {"},{"lineNumber":7,"author":{"gitId":"warmwhalefy"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"warmwhalefy"},"content":"        this.at \u003d at;"},{"lineNumber":9,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":11,"author":{"gitId":"warmwhalefy"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"warmwhalefy"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"warmwhalefy"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":14,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"warmwhalefy"},"content":"}"}],"authorContributionMap":{"warmwhalefy":15}},{"path":"src/main/java/duke/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warmwhalefy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":3,"author":{"gitId":"warmwhalefy"},"content":"public class EventException extends Exception{"},{"lineNumber":4,"author":{"gitId":"warmwhalefy"},"content":"}"}],"authorContributionMap":{"warmwhalefy":4}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warmwhalefy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":3,"author":{"gitId":"warmwhalefy"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"warmwhalefy"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"warmwhalefy"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":7,"author":{"gitId":"warmwhalefy"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"warmwhalefy"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"warmwhalefy"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":12,"author":{"gitId":"warmwhalefy"},"content":"    public String getDescription() {"},{"lineNumber":13,"author":{"gitId":"warmwhalefy"},"content":"        return (this.description);"},{"lineNumber":14,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":16,"author":{"gitId":"warmwhalefy"},"content":"    public String getStatusIcon() {"},{"lineNumber":17,"author":{"gitId":"warmwhalefy"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X"},{"lineNumber":18,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":20,"author":{"gitId":"warmwhalefy"},"content":"    public void markAsDone(){"},{"lineNumber":21,"author":{"gitId":"warmwhalefy"},"content":"        this.isDone \u003d true;"},{"lineNumber":22,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":24,"author":{"gitId":"warmwhalefy"},"content":"    public String toString(){"},{"lineNumber":25,"author":{"gitId":"warmwhalefy"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;"},{"lineNumber":26,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":28,"author":{"gitId":"warmwhalefy"},"content":"}"}],"authorContributionMap":{"warmwhalefy":28}},{"path":"src/main/java/duke/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warmwhalefy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":3,"author":{"gitId":"warmwhalefy"},"content":"public class TaskException extends Exception {"},{"lineNumber":4,"author":{"gitId":"warmwhalefy"},"content":"}"}],"authorContributionMap":{"warmwhalefy":4}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"warmwhalefy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":3,"author":{"gitId":"warmwhalefy"},"content":"public class Todo extends Task{"},{"lineNumber":4,"author":{"gitId":"warmwhalefy"},"content":"     public Todo(String description) {"},{"lineNumber":5,"author":{"gitId":"warmwhalefy"},"content":"         super(description);"},{"lineNumber":6,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"warmwhalefy"},"content":""},{"lineNumber":8,"author":{"gitId":"warmwhalefy"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"warmwhalefy"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"warmwhalefy"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":11,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"warmwhalefy"},"content":"    public boolean isDescriptionEmpty(String s){"},{"lineNumber":13,"author":{"gitId":"warmwhalefy"},"content":"        if (s.isEmpty()){"},{"lineNumber":14,"author":{"gitId":"warmwhalefy"},"content":"            System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":15,"author":{"gitId":"warmwhalefy"},"content":"            return true;"},{"lineNumber":16,"author":{"gitId":"warmwhalefy"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"warmwhalefy"},"content":"        return false;"},{"lineNumber":18,"author":{"gitId":"warmwhalefy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"warmwhalefy"},"content":"}"}],"authorContributionMap":{"warmwhalefy":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"warmwhalefy"},"content":"todo laundry"},{"lineNumber":2,"author":{"gitId":"warmwhalefy"},"content":"todo borrow book"},{"lineNumber":3,"author":{"gitId":"warmwhalefy"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"warmwhalefy"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"warmwhalefy"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":6,"author":{"gitId":"warmwhalefy"},"content":"list"},{"lineNumber":7,"author":{"gitId":"warmwhalefy"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"warmwhalefy"},"content":"done 1"},{"lineNumber":9,"author":{"gitId":"warmwhalefy"},"content":"list"},{"lineNumber":10,"author":{"gitId":"warmwhalefy"},"content":"bye"}],"authorContributionMap":{"warmwhalefy":10}}]
