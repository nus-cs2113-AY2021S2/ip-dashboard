[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"Tyuanyuan"},"content":"   |  _ \\ _   _| | _____"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"Tyuanyuan"},"content":"   ```"}],"authorContributionMap":{"Tyuanyuan":2,"-":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Tyuanyuan"},"content":"# Duke User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Tyuanyuan"},"content":"Duke is a desktop app for managing tasks, optimized for use via a Command Line Interface (CLI)."},{"lineNumber":4,"author":{"gitId":"Tyuanyuan"},"content":"If you can type fast, Duke can get your task management done faster than traditional GUI apps."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"Tyuanyuan"},"content":"__________________________"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"Tyuanyuan"},"content":"### Quick start"},{"lineNumber":9,"author":{"gitId":"Tyuanyuan"},"content":"1. Ensure you have Java `11` or above installed in your Computer."},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"Tyuanyuan"},"content":"2. Download the latest `duke.jar` from [here](https://github.com/Tyuanyuan/ip/releases)."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"Tyuanyuan"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your Duke."},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"Tyuanyuan"},"content":"4. Double-click the file to start the app. "},{"lineNumber":19,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":20,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":21,"author":{"gitId":"Tyuanyuan"},"content":"5. Type the command in the command box and press Enter to execute it."},{"lineNumber":22,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":23,"author":{"gitId":"Tyuanyuan"},"content":"   Some example commands you can try:"},{"lineNumber":24,"author":{"gitId":"Tyuanyuan"},"content":"    * `list` : Lists all tasks."},{"lineNumber":25,"author":{"gitId":"Tyuanyuan"},"content":"    * `todo task 1` : Add a todo task to task list."},{"lineNumber":26,"author":{"gitId":"Tyuanyuan"},"content":"    * `deadline task 2 /by today` : Add a deadline task to task list."},{"lineNumber":27,"author":{"gitId":"Tyuanyuan"},"content":"    * `event task 3 /at tomorrow` : Add an event task to task list."},{"lineNumber":28,"author":{"gitId":"Tyuanyuan"},"content":"    * `delete 1` : Delete the task in the task list that has task number 1."},{"lineNumber":29,"author":{"gitId":"Tyuanyuan"},"content":"    * `done 1` : Mark the task in the task list that has task number 1 as done."},{"lineNumber":30,"author":{"gitId":"Tyuanyuan"},"content":"    * `find task` : Find the tasks in the task list that contain the keyword."},{"lineNumber":31,"author":{"gitId":"Tyuanyuan"},"content":"    * `bye` : Exits the app."},{"lineNumber":32,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":33,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":34,"author":{"gitId":"Tyuanyuan"},"content":"6. Refer to the Features below for details of each command."},{"lineNumber":35,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":36,"author":{"gitId":"Tyuanyuan"},"content":"__________________________"},{"lineNumber":37,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":38,"author":{"gitId":"Tyuanyuan"},"content":"### Features"},{"lineNumber":39,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":40,"author":{"gitId":"Tyuanyuan"},"content":"\u003cspan style\u003d\"color:green\"\u003e"},{"lineNumber":41,"author":{"gitId":"Tyuanyuan"},"content":"Notes about the command format: \u003cbr\u003e"},{"lineNumber":42,"author":{"gitId":"Tyuanyuan"},"content":"Words in UPPER_CASE are the parameters to be supplied by the user. "},{"lineNumber":43,"author":{"gitId":"Tyuanyuan"},"content":"\u003c/span\u003e"},{"lineNumber":44,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":45,"author":{"gitId":"Tyuanyuan"},"content":"1. Listing all tasks : `list`"},{"lineNumber":46,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":47,"author":{"gitId":"Tyuanyuan"},"content":"   Shows a list of all tasks in the task list."},{"lineNumber":48,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":49,"author":{"gitId":"Tyuanyuan"},"content":"   Format: `list`"},{"lineNumber":50,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":51,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":52,"author":{"gitId":"Tyuanyuan"},"content":"2. Adding a todo task: `todo`"},{"lineNumber":53,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":54,"author":{"gitId":"Tyuanyuan"},"content":"   Adds a todo task to the task list."},{"lineNumber":55,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":56,"author":{"gitId":"Tyuanyuan"},"content":"   Format: `todo TODO`"},{"lineNumber":57,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":58,"author":{"gitId":"Tyuanyuan"},"content":"   Example:"},{"lineNumber":59,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":60,"author":{"gitId":"Tyuanyuan"},"content":"    * `todo task 1`"},{"lineNumber":61,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":62,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":63,"author":{"gitId":"Tyuanyuan"},"content":"3. Adding a deadline task: `deadline`"},{"lineNumber":64,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":65,"author":{"gitId":"Tyuanyuan"},"content":"   Adds a deadline task to the task list."},{"lineNumber":66,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":67,"author":{"gitId":"Tyuanyuan"},"content":"   Format: `deadline DEADLINE /by BYTIME`"},{"lineNumber":68,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":69,"author":{"gitId":"Tyuanyuan"},"content":"   Example:"},{"lineNumber":70,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":71,"author":{"gitId":"Tyuanyuan"},"content":"    * `deadline task 2 /by today`"},{"lineNumber":72,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":73,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":74,"author":{"gitId":"Tyuanyuan"},"content":"4. Adding an event task : `event`"},{"lineNumber":75,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":76,"author":{"gitId":"Tyuanyuan"},"content":"   Adds an event task to the task list."},{"lineNumber":77,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":78,"author":{"gitId":"Tyuanyuan"},"content":"   Format: `event EVENT /at ATTIME`"},{"lineNumber":79,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":80,"author":{"gitId":"Tyuanyuan"},"content":"   Example:"},{"lineNumber":81,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":82,"author":{"gitId":"Tyuanyuan"},"content":"    * `event task 3 /at tomorrow`"},{"lineNumber":83,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":84,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":85,"author":{"gitId":"Tyuanyuan"},"content":"5. Deleting a task : `delete`"},{"lineNumber":86,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":87,"author":{"gitId":"Tyuanyuan"},"content":"   Deletes the specified task from the task list."},{"lineNumber":88,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":89,"author":{"gitId":"Tyuanyuan"},"content":"   Format: `delete INDEX`"},{"lineNumber":90,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":91,"author":{"gitId":"Tyuanyuan"},"content":"    * Deletes the task at the specified `INDEX`."},{"lineNumber":92,"author":{"gitId":"Tyuanyuan"},"content":"    * The index refers to the task number shown in the displayed task list."},{"lineNumber":93,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":94,"author":{"gitId":"Tyuanyuan"},"content":"   Examples:"},{"lineNumber":95,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":96,"author":{"gitId":"Tyuanyuan"},"content":"    * `list` followed by `delete 1` deletes the task that has task number 1."},{"lineNumber":97,"author":{"gitId":"Tyuanyuan"},"content":"    * `find task` followed by `delete 2` deletes the task in the results of the `find` command that has task number 2."},{"lineNumber":98,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":99,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":100,"author":{"gitId":"Tyuanyuan"},"content":"6. Marking a task as done : `done`"},{"lineNumber":101,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":102,"author":{"gitId":"Tyuanyuan"},"content":"   Marks the specified task from the task list as done."},{"lineNumber":103,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":104,"author":{"gitId":"Tyuanyuan"},"content":"   Format: `done INDEX`"},{"lineNumber":105,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":106,"author":{"gitId":"Tyuanyuan"},"content":"    * Marks the task at the specified `INDEX` as done."},{"lineNumber":107,"author":{"gitId":"Tyuanyuan"},"content":"    * The index refers to the task number shown in the displayed task list."},{"lineNumber":108,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":109,"author":{"gitId":"Tyuanyuan"},"content":"   Examples:"},{"lineNumber":110,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":111,"author":{"gitId":"Tyuanyuan"},"content":"    * `list` followed by `done 1` marks the task that has task number 1 as done."},{"lineNumber":112,"author":{"gitId":"Tyuanyuan"},"content":"    * `find task` followed by `done 2` marks the task in the results of the `find` command that has task number 2 as done."},{"lineNumber":113,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":114,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":115,"author":{"gitId":"Tyuanyuan"},"content":"7. Locating tasks by task name : `find`"},{"lineNumber":116,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":117,"author":{"gitId":"Tyuanyuan"},"content":"   Finds tasks whose task names contain any of the given keywords."},{"lineNumber":118,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":119,"author":{"gitId":"Tyuanyuan"},"content":"   Format: `find KEYWORD`"},{"lineNumber":120,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":121,"author":{"gitId":"Tyuanyuan"},"content":"    * The search is case-sensitive. e.g. `task` will not match `Task`."},{"lineNumber":122,"author":{"gitId":"Tyuanyuan"},"content":"    * The order of the keywords matters. e.g. `task 1` will not match `1 task`."},{"lineNumber":123,"author":{"gitId":"Tyuanyuan"},"content":"    * The task names, by time and at time can all be searched."},{"lineNumber":124,"author":{"gitId":"Tyuanyuan"},"content":"    * Partial keywords can be matched with full keywords. e.g. `task` will match `task 1`."},{"lineNumber":125,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":126,"author":{"gitId":"Tyuanyuan"},"content":"   Examples:"},{"lineNumber":127,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":128,"author":{"gitId":"Tyuanyuan"},"content":"    * `find task` returns `task 1` and `task 2`."},{"lineNumber":129,"author":{"gitId":"Tyuanyuan"},"content":"    * `find today` returns `task 1 (at: today)`."},{"lineNumber":130,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":131,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":132,"author":{"gitId":"Tyuanyuan"},"content":"8. Exiting the program : `bye`"},{"lineNumber":133,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":134,"author":{"gitId":"Tyuanyuan"},"content":"   Shows goodbye quotes and exits the program."},{"lineNumber":135,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":136,"author":{"gitId":"Tyuanyuan"},"content":"   Format: `bye`"},{"lineNumber":137,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":138,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":139,"author":{"gitId":"Tyuanyuan"},"content":"9. Saving the data"},{"lineNumber":140,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":141,"author":{"gitId":"Tyuanyuan"},"content":"   Duke data are saved in the hard disk automatically after exiting the program properly. There is no need to save manually."},{"lineNumber":142,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":143,"author":{"gitId":"Tyuanyuan"},"content":"__________________________"},{"lineNumber":144,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":145,"author":{"gitId":"Tyuanyuan"},"content":"### Command Summary"},{"lineNumber":146,"author":{"gitId":"Tyuanyuan"},"content":"Action | Format | Examples"},{"lineNumber":147,"author":{"gitId":"Tyuanyuan"},"content":"------------ | ------------- | -------------"},{"lineNumber":148,"author":{"gitId":"Tyuanyuan"},"content":"List | `list` | "},{"lineNumber":149,"author":{"gitId":"Tyuanyuan"},"content":"Todo | `todo TODO` | e.g. `todo task 1`"},{"lineNumber":150,"author":{"gitId":"Tyuanyuan"},"content":"Deadline | `deadline DEADLINE /by BYTIME` | e.g. `deadline task 2 /by today`"},{"lineNumber":151,"author":{"gitId":"Tyuanyuan"},"content":"Event | `event EVENT /at ATTIME` | e.g. `event task 3 /at tomorrow`"},{"lineNumber":152,"author":{"gitId":"Tyuanyuan"},"content":"Delete | `delete INDEX` | e.g. `delete 1`"},{"lineNumber":153,"author":{"gitId":"Tyuanyuan"},"content":"Done | `done INDEX` | e.g. `done 1`"},{"lineNumber":154,"author":{"gitId":"Tyuanyuan"},"content":"Find | `find KEYWORD` | e.g. `find task`"},{"lineNumber":155,"author":{"gitId":"Tyuanyuan"},"content":"Bye | `bye` | "}],"authorContributionMap":{"Tyuanyuan":146,"-":9}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tyuanyuan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":3,"author":{"gitId":"Tyuanyuan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Tyuanyuan"},"content":" * Represents a deadline that can be created and store in Duke."},{"lineNumber":5,"author":{"gitId":"Tyuanyuan"},"content":" * An \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to"},{"lineNumber":6,"author":{"gitId":"Tyuanyuan"},"content":" * a deadline represented by a deadline description, a deadline status, and a deadline time."},{"lineNumber":7,"author":{"gitId":"Tyuanyuan"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Tyuanyuan"},"content":"public class Deadline extends Task {"},{"lineNumber":9,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":10,"author":{"gitId":"Tyuanyuan"},"content":"    protected String by;"},{"lineNumber":11,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":12,"author":{"gitId":"Tyuanyuan"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":13,"author":{"gitId":"Tyuanyuan"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"Tyuanyuan"},"content":"        this.by \u003d by;"},{"lineNumber":15,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":17,"author":{"gitId":"Tyuanyuan"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"Tyuanyuan"},"content":"     * Returns the status, description, and time of a deadline in a line."},{"lineNumber":20,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"Tyuanyuan"},"content":"     * @return Deadline status, description and time."},{"lineNumber":22,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Tyuanyuan"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"Tyuanyuan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":25,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":27,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"Tyuanyuan"},"content":"     * Saves the status, description and time of a deadline into file."},{"lineNumber":29,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"Tyuanyuan"},"content":"     * @return Deadline status, description and time."},{"lineNumber":31,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Tyuanyuan"},"content":"    public String saveTask() {"},{"lineNumber":33,"author":{"gitId":"Tyuanyuan"},"content":"        return \"D\" + super.saveTask() + \"|\" + by;"},{"lineNumber":34,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Tyuanyuan"},"content":"}"}],"authorContributionMap":{"Tyuanyuan":35}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tyuanyuan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":3,"author":{"gitId":"Tyuanyuan"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Tyuanyuan"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":6,"author":{"gitId":"Tyuanyuan"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Tyuanyuan"},"content":" * Entry point of the Duke application."},{"lineNumber":8,"author":{"gitId":"Tyuanyuan"},"content":" * Initializes the application and starts the interaction with the user."},{"lineNumber":9,"author":{"gitId":"Tyuanyuan"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"Tyuanyuan"},"content":"    private final Storage storage;"},{"lineNumber":12,"author":{"gitId":"Tyuanyuan"},"content":"    private TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"Tyuanyuan"},"content":"    private final Ui ui;"},{"lineNumber":14,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":15,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Tyuanyuan"},"content":"     * Sets up the required objects, loads up the data from the storage file."},{"lineNumber":17,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"Tyuanyuan"},"content":"     * @param filePath Location to load and save the data."},{"lineNumber":19,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Tyuanyuan"},"content":"    public Duke(String filePath) {"},{"lineNumber":21,"author":{"gitId":"Tyuanyuan"},"content":"        ui \u003d new Ui();"},{"lineNumber":22,"author":{"gitId":"Tyuanyuan"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":23,"author":{"gitId":"Tyuanyuan"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"Tyuanyuan"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":25,"author":{"gitId":"Tyuanyuan"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"Tyuanyuan"},"content":"            ui.showLoadingError();"},{"lineNumber":27,"author":{"gitId":"Tyuanyuan"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":28,"author":{"gitId":"Tyuanyuan"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":31,"author":{"gitId":"Tyuanyuan"},"content":"    public static void main(String[] args) {"},{"lineNumber":32,"author":{"gitId":"Tyuanyuan"},"content":"        new Duke(\"data/duke.txt\").run();"},{"lineNumber":33,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":34,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":36,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"Tyuanyuan"},"content":"     * Prints the welcome message, runs the program until termination."},{"lineNumber":38,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"Tyuanyuan"},"content":"    public void run() {"},{"lineNumber":40,"author":{"gitId":"Tyuanyuan"},"content":"        ui.showWelcome();"},{"lineNumber":41,"author":{"gitId":"Tyuanyuan"},"content":"        boolean isExit \u003d false;"},{"lineNumber":42,"author":{"gitId":"Tyuanyuan"},"content":"        while (!isExit) {"},{"lineNumber":43,"author":{"gitId":"Tyuanyuan"},"content":"            try {"},{"lineNumber":44,"author":{"gitId":"Tyuanyuan"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":45,"author":{"gitId":"Tyuanyuan"},"content":"                Ui.showLine();"},{"lineNumber":46,"author":{"gitId":"Tyuanyuan"},"content":"                List\u003cString\u003e commandStr \u003d Parser.parse(fullCommand);"},{"lineNumber":47,"author":{"gitId":"Tyuanyuan"},"content":"                isExit \u003d tasks.process(commandStr, isExit);"},{"lineNumber":48,"author":{"gitId":"Tyuanyuan"},"content":"            } finally {"},{"lineNumber":49,"author":{"gitId":"Tyuanyuan"},"content":"                Ui.showLine();"},{"lineNumber":50,"author":{"gitId":"Tyuanyuan"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"Tyuanyuan"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Tyuanyuan":51,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tyuanyuan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":3,"author":{"gitId":"Tyuanyuan"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":5,"author":{"gitId":"Tyuanyuan"},"content":"}"}],"authorContributionMap":{"Tyuanyuan":5}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tyuanyuan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":3,"author":{"gitId":"Tyuanyuan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Tyuanyuan"},"content":" * Represents an event that can be created and store in Duke."},{"lineNumber":5,"author":{"gitId":"Tyuanyuan"},"content":" * An \u003ccode\u003eEvent\u003c/code\u003e object corresponds to"},{"lineNumber":6,"author":{"gitId":"Tyuanyuan"},"content":" * an event represented by an event description, an event status, and an event time."},{"lineNumber":7,"author":{"gitId":"Tyuanyuan"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Tyuanyuan"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":10,"author":{"gitId":"Tyuanyuan"},"content":"    protected String at;"},{"lineNumber":11,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":12,"author":{"gitId":"Tyuanyuan"},"content":"    public Event(String description, String at) {"},{"lineNumber":13,"author":{"gitId":"Tyuanyuan"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"Tyuanyuan"},"content":"        this.at \u003d at;"},{"lineNumber":15,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":17,"author":{"gitId":"Tyuanyuan"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"Tyuanyuan"},"content":"     * Returns the status, description, and time of an event in a line."},{"lineNumber":20,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"Tyuanyuan"},"content":"     * @return Event status, description and time."},{"lineNumber":22,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Tyuanyuan"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"Tyuanyuan"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":25,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":27,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"Tyuanyuan"},"content":"     * Saves the status, description and time of an event into file."},{"lineNumber":29,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"Tyuanyuan"},"content":"     * @return Event status, description and time."},{"lineNumber":31,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Tyuanyuan"},"content":"    public String saveTask() {"},{"lineNumber":33,"author":{"gitId":"Tyuanyuan"},"content":"        return \"E\" + super.saveTask() + \"|\" + at;"},{"lineNumber":34,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Tyuanyuan"},"content":"}"}],"authorContributionMap":{"Tyuanyuan":35}},{"path":"src/main/java/duke/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tyuanyuan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":3,"author":{"gitId":"Tyuanyuan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Tyuanyuan"},"content":" * Container for user visible messages."},{"lineNumber":5,"author":{"gitId":"Tyuanyuan"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Tyuanyuan"},"content":"public class Messages {"},{"lineNumber":7,"author":{"gitId":"Tyuanyuan"},"content":"    public static final String LOGO \u003d \" ____        _        \\n\""},{"lineNumber":8,"author":{"gitId":"Tyuanyuan"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":9,"author":{"gitId":"Tyuanyuan"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":10,"author":{"gitId":"Tyuanyuan"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":11,"author":{"gitId":"Tyuanyuan"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":12,"author":{"gitId":"Tyuanyuan"},"content":"    public static final String MESSAGE_WELCOME \u003d \" Hello! I\u0027m Duke\\n What can I do for you?\";"},{"lineNumber":13,"author":{"gitId":"Tyuanyuan"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":14,"author":{"gitId":"Tyuanyuan"},"content":"    public static final String MESSAGE_INCOMPLETE_COMMAND \u003d \"OOPS!!! The description of a %1$s cannot be empty.\";"},{"lineNumber":15,"author":{"gitId":"Tyuanyuan"},"content":"    public static final String MESSAGE_INVALID_COMMAND \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"},{"lineNumber":16,"author":{"gitId":"Tyuanyuan"},"content":"    public static final String MESSAGE_LOAD_ERROR \u003d \"Failed to load tasks.\";"},{"lineNumber":17,"author":{"gitId":"Tyuanyuan"},"content":"    public static final String MESSAGE_LIST_TASKS \u003d \"Here are the tasks in your list: \\n\";"},{"lineNumber":18,"author":{"gitId":"Tyuanyuan"},"content":"    public static final String MESSAGE_MATCH_TASK \u003d \"Here are the matching tasks in your list: \\n\";"},{"lineNumber":19,"author":{"gitId":"Tyuanyuan"},"content":"    public static final String MESSAGE_DELETE_TASK \u003d \"Noted. I\u0027ve removed this task: \\n\";"},{"lineNumber":20,"author":{"gitId":"Tyuanyuan"},"content":"    public static final String MESSAGE_ADD_TASK \u003d \"Got it. I\u0027ve added this task: \\n\";"},{"lineNumber":21,"author":{"gitId":"Tyuanyuan"},"content":"    public static final String MESSAGE_TASK_NUMBER \u003d \"Now you have %1$d tasks in the list.\";"},{"lineNumber":22,"author":{"gitId":"Tyuanyuan"},"content":"    public static final String MESSAGE_MARK_DONE \u003d \"Nice! I\u0027ve marked this task as done: \\n\";"},{"lineNumber":23,"author":{"gitId":"Tyuanyuan"},"content":"    public static final String LS \u003d System.lineSeparator();"},{"lineNumber":24,"author":{"gitId":"Tyuanyuan"},"content":"    public static final String DIVIDER \u003d \"____________________________________________________________\";"},{"lineNumber":25,"author":{"gitId":"Tyuanyuan"},"content":"}"}],"authorContributionMap":{"Tyuanyuan":25}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tyuanyuan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":3,"author":{"gitId":"Tyuanyuan"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Tyuanyuan"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":6,"author":{"gitId":"Tyuanyuan"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Tyuanyuan"},"content":" * Parses user input."},{"lineNumber":8,"author":{"gitId":"Tyuanyuan"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Tyuanyuan"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":11,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Tyuanyuan"},"content":"     * Used for initial separation of command word and args."},{"lineNumber":13,"author":{"gitId":"Tyuanyuan"},"content":"     * Parses user input into command for execution."},{"lineNumber":14,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"Tyuanyuan"},"content":"     * @param fullCommand Full user input string."},{"lineNumber":16,"author":{"gitId":"Tyuanyuan"},"content":"     * @return List of command strings based on the user input."},{"lineNumber":17,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Tyuanyuan"},"content":"    public static List\u003cString\u003e parse(String fullCommand) {"},{"lineNumber":19,"author":{"gitId":"Tyuanyuan"},"content":"        List\u003cString\u003e returnStr \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":21,"author":{"gitId":"Tyuanyuan"},"content":"        String[] words \u003d fullCommand.split(\" \", 2);"},{"lineNumber":22,"author":{"gitId":"Tyuanyuan"},"content":"        String commandType \u003d words[0];"},{"lineNumber":23,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":24,"author":{"gitId":"Tyuanyuan"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"Tyuanyuan"},"content":"            switch (commandType) {"},{"lineNumber":26,"author":{"gitId":"Tyuanyuan"},"content":"            case \"bye\":"},{"lineNumber":27,"author":{"gitId":"Tyuanyuan"},"content":"            case \"list\":"},{"lineNumber":28,"author":{"gitId":"Tyuanyuan"},"content":"                returnStr.add(commandType);"},{"lineNumber":29,"author":{"gitId":"Tyuanyuan"},"content":"                break;"},{"lineNumber":30,"author":{"gitId":"Tyuanyuan"},"content":"            case \"done\":"},{"lineNumber":31,"author":{"gitId":"Tyuanyuan"},"content":"            case \"delete\":"},{"lineNumber":32,"author":{"gitId":"Tyuanyuan"},"content":"            case \"find\":"},{"lineNumber":33,"author":{"gitId":"Tyuanyuan"},"content":"            case \"todo\":"},{"lineNumber":34,"author":{"gitId":"Tyuanyuan"},"content":"                returnStr.add(commandType);"},{"lineNumber":35,"author":{"gitId":"Tyuanyuan"},"content":"                String todoDetail \u003d words[1];"},{"lineNumber":36,"author":{"gitId":"Tyuanyuan"},"content":"                returnStr.add(todoDetail);"},{"lineNumber":37,"author":{"gitId":"Tyuanyuan"},"content":"                break;"},{"lineNumber":38,"author":{"gitId":"Tyuanyuan"},"content":"            case \"deadline\":"},{"lineNumber":39,"author":{"gitId":"Tyuanyuan"},"content":"                returnStr.add(commandType);"},{"lineNumber":40,"author":{"gitId":"Tyuanyuan"},"content":"                String ddlDetail \u003d words[1];"},{"lineNumber":41,"author":{"gitId":"Tyuanyuan"},"content":"                String[] infoD \u003d ddlDetail.split(\" /by \", 2);"},{"lineNumber":42,"author":{"gitId":"Tyuanyuan"},"content":"                String descriptionD \u003d infoD[0];"},{"lineNumber":43,"author":{"gitId":"Tyuanyuan"},"content":"                String byTime \u003d infoD[1];"},{"lineNumber":44,"author":{"gitId":"Tyuanyuan"},"content":"                returnStr.add(descriptionD);"},{"lineNumber":45,"author":{"gitId":"Tyuanyuan"},"content":"                returnStr.add(byTime);"},{"lineNumber":46,"author":{"gitId":"Tyuanyuan"},"content":"                break;"},{"lineNumber":47,"author":{"gitId":"Tyuanyuan"},"content":"            case \"event\":"},{"lineNumber":48,"author":{"gitId":"Tyuanyuan"},"content":"                returnStr.add(commandType);"},{"lineNumber":49,"author":{"gitId":"Tyuanyuan"},"content":"                String eventDetail \u003d words[1];"},{"lineNumber":50,"author":{"gitId":"Tyuanyuan"},"content":"                String[] infoE \u003d eventDetail.split(\" /at \", 2);"},{"lineNumber":51,"author":{"gitId":"Tyuanyuan"},"content":"                String descriptionE \u003d infoE[0];"},{"lineNumber":52,"author":{"gitId":"Tyuanyuan"},"content":"                String atTime \u003d infoE[1];"},{"lineNumber":53,"author":{"gitId":"Tyuanyuan"},"content":"                returnStr.add(descriptionE);"},{"lineNumber":54,"author":{"gitId":"Tyuanyuan"},"content":"                returnStr.add(atTime);"},{"lineNumber":55,"author":{"gitId":"Tyuanyuan"},"content":"                break;"},{"lineNumber":56,"author":{"gitId":"Tyuanyuan"},"content":"            default:"},{"lineNumber":57,"author":{"gitId":"Tyuanyuan"},"content":"                returnStr.add(fullCommand);"},{"lineNumber":58,"author":{"gitId":"Tyuanyuan"},"content":"                break;"},{"lineNumber":59,"author":{"gitId":"Tyuanyuan"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"Tyuanyuan"},"content":"        } catch (ArrayIndexOutOfBoundsException ignored) {"},{"lineNumber":61,"author":{"gitId":"Tyuanyuan"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"Tyuanyuan"},"content":"        return returnStr;"},{"lineNumber":63,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Tyuanyuan"},"content":"}"}],"authorContributionMap":{"Tyuanyuan":64}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tyuanyuan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":3,"author":{"gitId":"Tyuanyuan"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Tyuanyuan"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"Tyuanyuan"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Tyuanyuan"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"Tyuanyuan"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"Tyuanyuan"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":10,"author":{"gitId":"Tyuanyuan"},"content":"import static duke.TaskList.taskList;"},{"lineNumber":11,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":12,"author":{"gitId":"Tyuanyuan"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"Tyuanyuan"},"content":" * Represents the file used to store Duke data."},{"lineNumber":14,"author":{"gitId":"Tyuanyuan"},"content":" */"},{"lineNumber":15,"author":{"gitId":"Tyuanyuan"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":17,"author":{"gitId":"Tyuanyuan"},"content":"    private final String filePath;"},{"lineNumber":18,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":19,"author":{"gitId":"Tyuanyuan"},"content":"    public Storage(String filePath) {"},{"lineNumber":20,"author":{"gitId":"Tyuanyuan"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":21,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":23,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Tyuanyuan"},"content":"     * Saves the \u003ccode\u003eTaskList\u003c/code\u003e data to the storage file."},{"lineNumber":25,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"Tyuanyuan"},"content":"     * @throws IOException If there is a failure during reading, writing and searching file or directory operations."},{"lineNumber":27,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Tyuanyuan"},"content":"    public static void save() throws IOException {"},{"lineNumber":29,"author":{"gitId":"Tyuanyuan"},"content":"        int index \u003d 0;"},{"lineNumber":30,"author":{"gitId":"Tyuanyuan"},"content":"        FileWriter fileWriter \u003d new FileWriter(\"data/duke.txt\");"},{"lineNumber":31,"author":{"gitId":"Tyuanyuan"},"content":"        while (index \u003c taskList.size()) {"},{"lineNumber":32,"author":{"gitId":"Tyuanyuan"},"content":"            fileWriter.write(taskList.get(index).saveTask() + System.lineSeparator());"},{"lineNumber":33,"author":{"gitId":"Tyuanyuan"},"content":"            index++;"},{"lineNumber":34,"author":{"gitId":"Tyuanyuan"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Tyuanyuan"},"content":"        fileWriter.close();"},{"lineNumber":36,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":38,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Tyuanyuan"},"content":"     * Loads the \u003ccode\u003eTaskList\u003c/code\u003e data from this storage file, and then returns it."},{"lineNumber":40,"author":{"gitId":"Tyuanyuan"},"content":"     * Returns an empty \u003ccode\u003eTaskList\u003c/code\u003e if the file does not exist, or is not a regular file."},{"lineNumber":41,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"Tyuanyuan"},"content":"     * @return Task data loaded from the storage file."},{"lineNumber":43,"author":{"gitId":"Tyuanyuan"},"content":"     * @throws IOException If there is a failure during reading, writing and searching file or directory operations."},{"lineNumber":44,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"Tyuanyuan"},"content":"    public List\u003cString\u003e load() throws IOException {"},{"lineNumber":46,"author":{"gitId":"Tyuanyuan"},"content":"        List\u003cString\u003e loadTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":47,"author":{"gitId":"Tyuanyuan"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":48,"author":{"gitId":"Tyuanyuan"},"content":"        file.getParentFile().mkdir();"},{"lineNumber":49,"author":{"gitId":"Tyuanyuan"},"content":"        file.createNewFile();"},{"lineNumber":50,"author":{"gitId":"Tyuanyuan"},"content":"        Scanner scanner \u003d new Scanner(file);"},{"lineNumber":51,"author":{"gitId":"Tyuanyuan"},"content":"        while (scanner.hasNext()) {"},{"lineNumber":52,"author":{"gitId":"Tyuanyuan"},"content":"            loadTasks.add(scanner.nextLine());"},{"lineNumber":53,"author":{"gitId":"Tyuanyuan"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"Tyuanyuan"},"content":"        return loadTasks;"},{"lineNumber":55,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":57,"author":{"gitId":"Tyuanyuan"},"content":"}"}],"authorContributionMap":{"Tyuanyuan":57}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tyuanyuan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":3,"author":{"gitId":"Tyuanyuan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Tyuanyuan"},"content":" * Represents a task that can be created and store in Duke."},{"lineNumber":5,"author":{"gitId":"Tyuanyuan"},"content":" * A \u003ccode\u003eTask\u003c/code\u003e object corresponds to"},{"lineNumber":6,"author":{"gitId":"Tyuanyuan"},"content":" * a task represented by a task description and a task status."},{"lineNumber":7,"author":{"gitId":"Tyuanyuan"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Tyuanyuan"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"Tyuanyuan"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"Tyuanyuan"},"content":"    protected boolean isDone;"},{"lineNumber":11,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":12,"author":{"gitId":"Tyuanyuan"},"content":"    public Task(String description) {"},{"lineNumber":13,"author":{"gitId":"Tyuanyuan"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"Tyuanyuan"},"content":"        this.isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":17,"author":{"gitId":"Tyuanyuan"},"content":"    public String getStatusIcon() {"},{"lineNumber":18,"author":{"gitId":"Tyuanyuan"},"content":"        return (isDone ? \"V\" : \"X\");"},{"lineNumber":19,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":21,"author":{"gitId":"Tyuanyuan"},"content":"    public void markAsDone() {"},{"lineNumber":22,"author":{"gitId":"Tyuanyuan"},"content":"        this.isDone \u003d true;"},{"lineNumber":23,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":25,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Tyuanyuan"},"content":"     * Returns the status and description of a task in a line."},{"lineNumber":27,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"Tyuanyuan"},"content":"     * @return Task status and description."},{"lineNumber":29,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Tyuanyuan"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"Tyuanyuan"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":32,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":34,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Tyuanyuan"},"content":"     * Saves the status and description of a task into file."},{"lineNumber":36,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"Tyuanyuan"},"content":"     * @return Task status and description."},{"lineNumber":38,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"Tyuanyuan"},"content":"    public String saveTask() {"},{"lineNumber":40,"author":{"gitId":"Tyuanyuan"},"content":"        return \"|\" + isDone + \"|\" + description;"},{"lineNumber":41,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Tyuanyuan"},"content":"}"}],"authorContributionMap":{"Tyuanyuan":42}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tyuanyuan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":3,"author":{"gitId":"Tyuanyuan"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Tyuanyuan"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"Tyuanyuan"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":7,"author":{"gitId":"Tyuanyuan"},"content":"import static duke.Messages.*;"},{"lineNumber":8,"author":{"gitId":"Tyuanyuan"},"content":"import static duke.Storage.save;"},{"lineNumber":9,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":10,"author":{"gitId":"Tyuanyuan"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Tyuanyuan"},"content":" * Contains the task list and operations to add/delete tasks in the list."},{"lineNumber":12,"author":{"gitId":"Tyuanyuan"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Tyuanyuan"},"content":"public class TaskList {"},{"lineNumber":14,"author":{"gitId":"Tyuanyuan"},"content":"    public static ArrayList\u003cTask\u003e taskList;"},{"lineNumber":15,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":16,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Tyuanyuan"},"content":"     * Construct the \u003ccode\u003eTaskList\u003c/code\u003e from data in the storage file."},{"lineNumber":18,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Tyuanyuan"},"content":"     * @param tasksLoad Task data loaded from the storage file."},{"lineNumber":20,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Tyuanyuan"},"content":"    public TaskList(List\u003cString\u003e tasksLoad) {"},{"lineNumber":22,"author":{"gitId":"Tyuanyuan"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"Tyuanyuan"},"content":"        for (String task : tasksLoad) {"},{"lineNumber":24,"author":{"gitId":"Tyuanyuan"},"content":"            String[] words \u003d task.split(\"\\\\|\");"},{"lineNumber":25,"author":{"gitId":"Tyuanyuan"},"content":"            String taskType \u003d words[0];"},{"lineNumber":26,"author":{"gitId":"Tyuanyuan"},"content":"            String taskStatus \u003d words[1];"},{"lineNumber":27,"author":{"gitId":"Tyuanyuan"},"content":"            String taskDescription \u003d words[2];"},{"lineNumber":28,"author":{"gitId":"Tyuanyuan"},"content":"            switch (taskType) {"},{"lineNumber":29,"author":{"gitId":"Tyuanyuan"},"content":"            case \"T\":"},{"lineNumber":30,"author":{"gitId":"Tyuanyuan"},"content":"                taskList.add(new Todo(taskDescription));"},{"lineNumber":31,"author":{"gitId":"Tyuanyuan"},"content":"                break;"},{"lineNumber":32,"author":{"gitId":"Tyuanyuan"},"content":"            case \"D\":"},{"lineNumber":33,"author":{"gitId":"Tyuanyuan"},"content":"                String taskBy \u003d words[3];"},{"lineNumber":34,"author":{"gitId":"Tyuanyuan"},"content":"                taskList.add(new Deadline(taskDescription, taskBy));"},{"lineNumber":35,"author":{"gitId":"Tyuanyuan"},"content":"                break;"},{"lineNumber":36,"author":{"gitId":"Tyuanyuan"},"content":"            case \"E\":"},{"lineNumber":37,"author":{"gitId":"Tyuanyuan"},"content":"                String taskAt \u003d words[3];"},{"lineNumber":38,"author":{"gitId":"Tyuanyuan"},"content":"                taskList.add(new Event(taskDescription, taskAt));"},{"lineNumber":39,"author":{"gitId":"Tyuanyuan"},"content":"                break;"},{"lineNumber":40,"author":{"gitId":"Tyuanyuan"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"Tyuanyuan"},"content":"            if (taskStatus.equals(\"true\")) {"},{"lineNumber":42,"author":{"gitId":"Tyuanyuan"},"content":"                taskList.get(taskList.size() - 1).markAsDone();"},{"lineNumber":43,"author":{"gitId":"Tyuanyuan"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"Tyuanyuan"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":47,"author":{"gitId":"Tyuanyuan"},"content":"    public TaskList() {"},{"lineNumber":48,"author":{"gitId":"Tyuanyuan"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":49,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":51,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"Tyuanyuan"},"content":"     * Find a task stored in Duke."},{"lineNumber":53,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"Tyuanyuan"},"content":"     * @param commandDetail Command input from the user."},{"lineNumber":55,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"Tyuanyuan"},"content":"    private static void findTask(String commandDetail) {"},{"lineNumber":57,"author":{"gitId":"Tyuanyuan"},"content":"        System.out.println(MESSAGE_MATCH_TASK);"},{"lineNumber":58,"author":{"gitId":"Tyuanyuan"},"content":"        int index \u003d 0;"},{"lineNumber":59,"author":{"gitId":"Tyuanyuan"},"content":"        while (index \u003c taskList.size()) {"},{"lineNumber":60,"author":{"gitId":"Tyuanyuan"},"content":"            if (taskList.get(index).toString().contains(commandDetail)) {"},{"lineNumber":61,"author":{"gitId":"Tyuanyuan"},"content":"                System.out.println((index + 1) + \".\" + taskList.get(index).toString());"},{"lineNumber":62,"author":{"gitId":"Tyuanyuan"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"Tyuanyuan"},"content":"            index++;"},{"lineNumber":64,"author":{"gitId":"Tyuanyuan"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":67,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"Tyuanyuan"},"content":"     * Delete a task stored in Duke."},{"lineNumber":69,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"Tyuanyuan"},"content":"     * @param commandDetail Command input from the user."},{"lineNumber":71,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"Tyuanyuan"},"content":"    private static void deleteTask(String commandDetail) {"},{"lineNumber":73,"author":{"gitId":"Tyuanyuan"},"content":"        int deleteIndex \u003d Integer.parseInt(commandDetail) - 1;"},{"lineNumber":74,"author":{"gitId":"Tyuanyuan"},"content":"        Ui.showToUser(MESSAGE_DELETE_TASK, taskList.get(deleteIndex).toString(),"},{"lineNumber":75,"author":{"gitId":"Tyuanyuan"},"content":"                String.format(MESSAGE_TASK_NUMBER, taskList.size() - 1));"},{"lineNumber":76,"author":{"gitId":"Tyuanyuan"},"content":"        taskList.remove(deleteIndex);"},{"lineNumber":77,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":79,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"Tyuanyuan"},"content":"     * Add an event to Duke."},{"lineNumber":81,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"Tyuanyuan"},"content":"     * @param description Event description input from user."},{"lineNumber":83,"author":{"gitId":"Tyuanyuan"},"content":"     * @param time        Event time input from the user."},{"lineNumber":84,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"Tyuanyuan"},"content":"    private static void addEvent(String description, String time) {"},{"lineNumber":86,"author":{"gitId":"Tyuanyuan"},"content":"        taskList.add(new Event(description, time));"},{"lineNumber":87,"author":{"gitId":"Tyuanyuan"},"content":"        Ui.showToUser(MESSAGE_ADD_TASK, taskList.get(taskList.size() - 1).toString(),"},{"lineNumber":88,"author":{"gitId":"Tyuanyuan"},"content":"                String.format(MESSAGE_TASK_NUMBER, taskList.size()));"},{"lineNumber":89,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":91,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"Tyuanyuan"},"content":"     * Add a deadline to Duke."},{"lineNumber":93,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"Tyuanyuan"},"content":"     * @param description Deadline description input from user."},{"lineNumber":95,"author":{"gitId":"Tyuanyuan"},"content":"     * @param time        Deadline time input from the user."},{"lineNumber":96,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"Tyuanyuan"},"content":"    private static void addDeadline(String description, String time) {"},{"lineNumber":98,"author":{"gitId":"Tyuanyuan"},"content":"        taskList.add(new Deadline(description, time));"},{"lineNumber":99,"author":{"gitId":"Tyuanyuan"},"content":"        Ui.showToUser(MESSAGE_ADD_TASK, taskList.get(taskList.size() - 1).toString(),"},{"lineNumber":100,"author":{"gitId":"Tyuanyuan"},"content":"                String.format(MESSAGE_TASK_NUMBER, taskList.size()));"},{"lineNumber":101,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":103,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"Tyuanyuan"},"content":"     * Add a todo task to Duke."},{"lineNumber":105,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"Tyuanyuan"},"content":"     * @param commandDetail Command input from the user."},{"lineNumber":107,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"Tyuanyuan"},"content":"    private static void addTodo(String commandDetail) {"},{"lineNumber":109,"author":{"gitId":"Tyuanyuan"},"content":"        taskList.add(new Todo(commandDetail));"},{"lineNumber":110,"author":{"gitId":"Tyuanyuan"},"content":"        Ui.showToUser(MESSAGE_ADD_TASK, taskList.get(taskList.size() - 1).toString(),"},{"lineNumber":111,"author":{"gitId":"Tyuanyuan"},"content":"                String.format(MESSAGE_TASK_NUMBER, taskList.size()));"},{"lineNumber":112,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":114,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"Tyuanyuan"},"content":"     * Mark the status of a task in Duke as done."},{"lineNumber":116,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"Tyuanyuan"},"content":"     * @param commandDetail Command input from the user."},{"lineNumber":118,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"Tyuanyuan"},"content":"    private static void markDone(String commandDetail) {"},{"lineNumber":120,"author":{"gitId":"Tyuanyuan"},"content":"        int doneIndex \u003d Integer.parseInt(commandDetail);"},{"lineNumber":121,"author":{"gitId":"Tyuanyuan"},"content":"        Task doneTask \u003d taskList.get(doneIndex - 1);"},{"lineNumber":122,"author":{"gitId":"Tyuanyuan"},"content":"        doneTask.markAsDone();"},{"lineNumber":123,"author":{"gitId":"Tyuanyuan"},"content":"        Ui.showToUser(MESSAGE_MARK_DONE, doneTask.toString());"},{"lineNumber":124,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":126,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"Tyuanyuan"},"content":"     * List all the tasks store in Duke."},{"lineNumber":128,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"Tyuanyuan"},"content":"    private static void printList() {"},{"lineNumber":130,"author":{"gitId":"Tyuanyuan"},"content":"        System.out.println(MESSAGE_LIST_TASKS);"},{"lineNumber":131,"author":{"gitId":"Tyuanyuan"},"content":"        int index \u003d 0;"},{"lineNumber":132,"author":{"gitId":"Tyuanyuan"},"content":"        while (index \u003c taskList.size()) {"},{"lineNumber":133,"author":{"gitId":"Tyuanyuan"},"content":"            System.out.println((index + 1) + \".\" + taskList.get(index).toString());"},{"lineNumber":134,"author":{"gitId":"Tyuanyuan"},"content":"            index++;"},{"lineNumber":135,"author":{"gitId":"Tyuanyuan"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":138,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":139,"author":{"gitId":"Tyuanyuan"},"content":"     * Executes the command and returns the result."},{"lineNumber":140,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":141,"author":{"gitId":"Tyuanyuan"},"content":"     * @param commandStr Input command from the user."},{"lineNumber":142,"author":{"gitId":"Tyuanyuan"},"content":"     * @param isExit     Boolean variable shows whether the program is terminated."},{"lineNumber":143,"author":{"gitId":"Tyuanyuan"},"content":"     * @return Boolean variable shows whether the program is terminated."},{"lineNumber":144,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":145,"author":{"gitId":"Tyuanyuan"},"content":"    public boolean process(List\u003cString\u003e commandStr, boolean isExit) {"},{"lineNumber":146,"author":{"gitId":"Tyuanyuan"},"content":"        String commandType \u003d commandStr.get(0);"},{"lineNumber":147,"author":{"gitId":"Tyuanyuan"},"content":"        try {"},{"lineNumber":148,"author":{"gitId":"Tyuanyuan"},"content":"            switch (commandType) {"},{"lineNumber":149,"author":{"gitId":"Tyuanyuan"},"content":"            case \"list\":"},{"lineNumber":150,"author":{"gitId":"Tyuanyuan"},"content":"                printList();"},{"lineNumber":151,"author":{"gitId":"Tyuanyuan"},"content":"                break;"},{"lineNumber":152,"author":{"gitId":"Tyuanyuan"},"content":"            case \"bye\":"},{"lineNumber":153,"author":{"gitId":"Tyuanyuan"},"content":"                isExit \u003d true;"},{"lineNumber":154,"author":{"gitId":"Tyuanyuan"},"content":"                Ui.printBye();"},{"lineNumber":155,"author":{"gitId":"Tyuanyuan"},"content":"                save();"},{"lineNumber":156,"author":{"gitId":"Tyuanyuan"},"content":"                break;"},{"lineNumber":157,"author":{"gitId":"Tyuanyuan"},"content":"            case \"done\": {"},{"lineNumber":158,"author":{"gitId":"Tyuanyuan"},"content":"                String commandDetail \u003d commandStr.get(1);"},{"lineNumber":159,"author":{"gitId":"Tyuanyuan"},"content":"                markDone(commandDetail);"},{"lineNumber":160,"author":{"gitId":"Tyuanyuan"},"content":"                break;"},{"lineNumber":161,"author":{"gitId":"Tyuanyuan"},"content":"            }"},{"lineNumber":162,"author":{"gitId":"Tyuanyuan"},"content":"            case \"todo\": {"},{"lineNumber":163,"author":{"gitId":"Tyuanyuan"},"content":"                String commandDetail \u003d commandStr.get(1);"},{"lineNumber":164,"author":{"gitId":"Tyuanyuan"},"content":"                addTodo(commandDetail);"},{"lineNumber":165,"author":{"gitId":"Tyuanyuan"},"content":"                break;"},{"lineNumber":166,"author":{"gitId":"Tyuanyuan"},"content":"            }"},{"lineNumber":167,"author":{"gitId":"Tyuanyuan"},"content":"            case \"deadline\":"},{"lineNumber":168,"author":{"gitId":"Tyuanyuan"},"content":"                String descriptionD \u003d commandStr.get(1);"},{"lineNumber":169,"author":{"gitId":"Tyuanyuan"},"content":"                String byTime \u003d commandStr.get(2);"},{"lineNumber":170,"author":{"gitId":"Tyuanyuan"},"content":"                addDeadline(descriptionD, byTime);"},{"lineNumber":171,"author":{"gitId":"Tyuanyuan"},"content":"                break;"},{"lineNumber":172,"author":{"gitId":"Tyuanyuan"},"content":"            case \"event\":"},{"lineNumber":173,"author":{"gitId":"Tyuanyuan"},"content":"                String descriptionE \u003d commandStr.get(1);"},{"lineNumber":174,"author":{"gitId":"Tyuanyuan"},"content":"                String atTime \u003d commandStr.get(2);"},{"lineNumber":175,"author":{"gitId":"Tyuanyuan"},"content":"                addEvent(descriptionE, atTime);"},{"lineNumber":176,"author":{"gitId":"Tyuanyuan"},"content":"                break;"},{"lineNumber":177,"author":{"gitId":"Tyuanyuan"},"content":"            case \"delete\": {"},{"lineNumber":178,"author":{"gitId":"Tyuanyuan"},"content":"                String commandDetail \u003d commandStr.get(1);"},{"lineNumber":179,"author":{"gitId":"Tyuanyuan"},"content":"                deleteTask(commandDetail);"},{"lineNumber":180,"author":{"gitId":"Tyuanyuan"},"content":"                break;"},{"lineNumber":181,"author":{"gitId":"Tyuanyuan"},"content":"            }"},{"lineNumber":182,"author":{"gitId":"Tyuanyuan"},"content":"            case \"find\": {"},{"lineNumber":183,"author":{"gitId":"Tyuanyuan"},"content":"                String commandDetail \u003d commandStr.get(1);"},{"lineNumber":184,"author":{"gitId":"Tyuanyuan"},"content":"                findTask(commandDetail);"},{"lineNumber":185,"author":{"gitId":"Tyuanyuan"},"content":"                break;"},{"lineNumber":186,"author":{"gitId":"Tyuanyuan"},"content":"            }"},{"lineNumber":187,"author":{"gitId":"Tyuanyuan"},"content":"            default:"},{"lineNumber":188,"author":{"gitId":"Tyuanyuan"},"content":"                throw new DukeException();"},{"lineNumber":189,"author":{"gitId":"Tyuanyuan"},"content":"            }"},{"lineNumber":190,"author":{"gitId":"Tyuanyuan"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":191,"author":{"gitId":"Tyuanyuan"},"content":"            Ui.showToUser(String.format(MESSAGE_INCOMPLETE_COMMAND, commandType));"},{"lineNumber":192,"author":{"gitId":"Tyuanyuan"},"content":"        } catch (DukeException e) {"},{"lineNumber":193,"author":{"gitId":"Tyuanyuan"},"content":"            Ui.showToUser(MESSAGE_INVALID_COMMAND);"},{"lineNumber":194,"author":{"gitId":"Tyuanyuan"},"content":"        } catch (IOException e) {"},{"lineNumber":195,"author":{"gitId":"Tyuanyuan"},"content":"            e.printStackTrace();"},{"lineNumber":196,"author":{"gitId":"Tyuanyuan"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"Tyuanyuan"},"content":"        return isExit;"},{"lineNumber":198,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"Tyuanyuan"},"content":"}"}],"authorContributionMap":{"Tyuanyuan":199}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tyuanyuan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":3,"author":{"gitId":"Tyuanyuan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Tyuanyuan"},"content":" * Represents a todo task that can be created and store in Duke."},{"lineNumber":5,"author":{"gitId":"Tyuanyuan"},"content":" * A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to"},{"lineNumber":6,"author":{"gitId":"Tyuanyuan"},"content":" * a todo task represented by a task description and a task status."},{"lineNumber":7,"author":{"gitId":"Tyuanyuan"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Tyuanyuan"},"content":"public class Todo extends Task {"},{"lineNumber":9,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":10,"author":{"gitId":"Tyuanyuan"},"content":"    public Todo(String description) {"},{"lineNumber":11,"author":{"gitId":"Tyuanyuan"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":14,"author":{"gitId":"Tyuanyuan"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Tyuanyuan"},"content":"     * Returns the status and description of a todo task in a line."},{"lineNumber":17,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"Tyuanyuan"},"content":"     * @return Todo task status and description."},{"lineNumber":19,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Tyuanyuan"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"Tyuanyuan"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":22,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":24,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Tyuanyuan"},"content":"     * Saves the status and description of a todo task into file."},{"lineNumber":26,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"Tyuanyuan"},"content":"     * @return Todo task status and description."},{"lineNumber":28,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Tyuanyuan"},"content":"    public String saveTask() {"},{"lineNumber":30,"author":{"gitId":"Tyuanyuan"},"content":"        return \"T\" + super.saveTask();"},{"lineNumber":31,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Tyuanyuan"},"content":"}"}],"authorContributionMap":{"Tyuanyuan":32}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tyuanyuan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":3,"author":{"gitId":"Tyuanyuan"},"content":"import java.io.InputStream;"},{"lineNumber":4,"author":{"gitId":"Tyuanyuan"},"content":"import java.io.PrintStream;"},{"lineNumber":5,"author":{"gitId":"Tyuanyuan"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":7,"author":{"gitId":"Tyuanyuan"},"content":"import static duke.Messages.*;"},{"lineNumber":8,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":9,"author":{"gitId":"Tyuanyuan"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"Tyuanyuan"},"content":" * UI of the application."},{"lineNumber":11,"author":{"gitId":"Tyuanyuan"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Tyuanyuan"},"content":"public class Ui {"},{"lineNumber":13,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":14,"author":{"gitId":"Tyuanyuan"},"content":"    private static PrintStream out;"},{"lineNumber":15,"author":{"gitId":"Tyuanyuan"},"content":"    private final Scanner in;"},{"lineNumber":16,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":17,"author":{"gitId":"Tyuanyuan"},"content":"    public Ui() {"},{"lineNumber":18,"author":{"gitId":"Tyuanyuan"},"content":"        this(System.in, System.out);"},{"lineNumber":19,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":21,"author":{"gitId":"Tyuanyuan"},"content":"    public Ui(InputStream in, PrintStream out) {"},{"lineNumber":22,"author":{"gitId":"Tyuanyuan"},"content":"        this.in \u003d new Scanner(in);"},{"lineNumber":23,"author":{"gitId":"Tyuanyuan"},"content":"        Ui.out \u003d out;"},{"lineNumber":24,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":26,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"Tyuanyuan"},"content":"     * Generates and prints the bye message upon the termination of the application."},{"lineNumber":28,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Tyuanyuan"},"content":"    public static void printBye() {"},{"lineNumber":30,"author":{"gitId":"Tyuanyuan"},"content":"        showToUser(MESSAGE_GOODBYE);"},{"lineNumber":31,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":33,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Tyuanyuan"},"content":"     * Shows message(s) to the user."},{"lineNumber":35,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Tyuanyuan"},"content":"    public static void showToUser(String... message) {"},{"lineNumber":37,"author":{"gitId":"Tyuanyuan"},"content":"        for (String m : message) {"},{"lineNumber":38,"author":{"gitId":"Tyuanyuan"},"content":"            out.println(m.replace(\"\\n\", LS));"},{"lineNumber":39,"author":{"gitId":"Tyuanyuan"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":42,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Tyuanyuan"},"content":"     * Shows the divider line."},{"lineNumber":44,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"Tyuanyuan"},"content":"    public static void showLine() {"},{"lineNumber":46,"author":{"gitId":"Tyuanyuan"},"content":"        showToUser(DIVIDER);"},{"lineNumber":47,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":49,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"Tyuanyuan"},"content":"     * Generates and prints the welcome message upon the start of the application."},{"lineNumber":51,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"Tyuanyuan"},"content":"    public void showWelcome() {"},{"lineNumber":53,"author":{"gitId":"Tyuanyuan"},"content":"        showToUser(LOGO, DIVIDER, MESSAGE_WELCOME, DIVIDER);"},{"lineNumber":54,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":56,"author":{"gitId":"Tyuanyuan"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"Tyuanyuan"},"content":"     * Reads the text entered by the user."},{"lineNumber":58,"author":{"gitId":"Tyuanyuan"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"Tyuanyuan"},"content":"     * @return Full line command entered by the user."},{"lineNumber":60,"author":{"gitId":"Tyuanyuan"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"Tyuanyuan"},"content":"    public String readCommand() {"},{"lineNumber":62,"author":{"gitId":"Tyuanyuan"},"content":"        return in.nextLine();"},{"lineNumber":63,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Tyuanyuan"},"content":""},{"lineNumber":65,"author":{"gitId":"Tyuanyuan"},"content":"    public void showLoadingError() {"},{"lineNumber":66,"author":{"gitId":"Tyuanyuan"},"content":"        System.out.println(MESSAGE_LOAD_ERROR);"},{"lineNumber":67,"author":{"gitId":"Tyuanyuan"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"Tyuanyuan"},"content":"}"}],"authorContributionMap":{"Tyuanyuan":68}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"Tyuanyuan"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"Tyuanyuan"},"content":"java -classpath ..\\src\\main\\java duke/Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"Tyuanyuan":2,"-":19}}]
