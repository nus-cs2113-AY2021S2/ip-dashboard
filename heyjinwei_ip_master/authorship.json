[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"# CI User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"### Task List"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"Able to track three types of tasks:"},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":"1. **ToDos**: tasks without any date/time attached to it *e.g., visit new theme park*"},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":"2. **Deadlines**: tasks that need to be done before a specific date/time *e.g., submit report by 11/10/2019 5pm*"},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":"3. **Events**: tasks that start at a specific time and ends at a specific time *e.g., team project meeting on 2/10/2019 2-4pm*"},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":"#### List Manipulation"},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"Able to add, delete, show all tasks, and find tasks."},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":"### Save and Load"},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":"Save the tasks in a file in the user\u0027s documents folder whenever the user exits the program."},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"When CI starts up, that file is read and loaded."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"heyjinwei"},"content":"### `-h` - Shows a list of available commands"},{"lineNumber":22,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":23,"author":{"gitId":"heyjinwei"},"content":"Example of usage:"},{"lineNumber":24,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":25,"author":{"gitId":"heyjinwei"},"content":"`-h`"},{"lineNumber":26,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":27,"author":{"gitId":"heyjinwei"},"content":"### `todo` - Adds a todo to the user\u0027s list"},{"lineNumber":28,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":29,"author":{"gitId":"heyjinwei"},"content":"The description should follow the keyword."},{"lineNumber":30,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":31,"author":{"gitId":"heyjinwei"},"content":"Example of usage:"},{"lineNumber":32,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":33,"author":{"gitId":"heyjinwei"},"content":"`todo \u003ctask description\u003e`"},{"lineNumber":34,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":35,"author":{"gitId":"heyjinwei"},"content":"Expected outcome:"},{"lineNumber":36,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":37,"author":{"gitId":"heyjinwei"},"content":"`Got it. I\u0027ve added this task:`"},{"lineNumber":38,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":39,"author":{"gitId":"heyjinwei"},"content":"`[T][✘] do homework`"},{"lineNumber":40,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":41,"author":{"gitId":"heyjinwei"},"content":"### `deadline` - Adds a deadline to the user\u0027s task list"},{"lineNumber":42,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":43,"author":{"gitId":"heyjinwei"},"content":"The description should follow the keyword and the date and time should be after \"/by\"."},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"heyjinwei"},"content":"Date and time format: \"yyyy-MM-dd HH:mm\""},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"heyjinwei"},"content":"Example of usage:"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"heyjinwei"},"content":"`deadline \u003ctask description\u003e /by \u003cdate and time\u003e`"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"heyjinwei"},"content":"`Got it. I\u0027ve added this task:`"},{"lineNumber":54,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":55,"author":{"gitId":"heyjinwei"},"content":"`[D][✘] go to bed  (by: Feb 23 2021 22:00)`"},{"lineNumber":56,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":57,"author":{"gitId":"heyjinwei"},"content":"### `event` - Adds an event to the user\u0027s task list"},{"lineNumber":58,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":59,"author":{"gitId":"heyjinwei"},"content":"The description should follow the keyword and the date and time should be after \"/at\"."},{"lineNumber":60,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":61,"author":{"gitId":"heyjinwei"},"content":"Date and time format: \"yyyy-MM-dd HH:mm\""},{"lineNumber":62,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":63,"author":{"gitId":"heyjinwei"},"content":"Example of usage:"},{"lineNumber":64,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":65,"author":{"gitId":"heyjinwei"},"content":"`event \u003ctask description\u003e /at \u003cdate and time\u003e`"},{"lineNumber":66,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":67,"author":{"gitId":"heyjinwei"},"content":"Expected outcome:"},{"lineNumber":68,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":69,"author":{"gitId":"heyjinwei"},"content":"`Got it. I\u0027ve added this task:`"},{"lineNumber":70,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":71,"author":{"gitId":"heyjinwei"},"content":"`[E][✘] sister\u0027s wedding  (at: Feb 23 2021 22:00)`"},{"lineNumber":72,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":73,"author":{"gitId":"heyjinwei"},"content":"### `done` - Mark task as done"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"heyjinwei"},"content":"Marks the task at the task index as done."},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"heyjinwei"},"content":"`done \u003ctask index\u003e`"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"heyjinwei"},"content":"`Nice! I\u0027ve marked this task as done:`"},{"lineNumber":84,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":85,"author":{"gitId":"heyjinwei"},"content":"`[T][✓] do homework`"},{"lineNumber":86,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":87,"author":{"gitId":"heyjinwei"},"content":"### `list` - Displays task list"},{"lineNumber":88,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":89,"author":{"gitId":"heyjinwei"},"content":"Example of usage:"},{"lineNumber":90,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":91,"author":{"gitId":"heyjinwei"},"content":"`list`"},{"lineNumber":92,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":93,"author":{"gitId":"heyjinwei"},"content":"Expected outcome:"},{"lineNumber":94,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":95,"author":{"gitId":"heyjinwei"},"content":"`There are 3 tasks in your list:`"},{"lineNumber":96,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":97,"author":{"gitId":"heyjinwei"},"content":"`1.[T][✓] do homework`"},{"lineNumber":98,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":99,"author":{"gitId":"heyjinwei"},"content":"`2.[T][✘] do housework`"},{"lineNumber":100,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":101,"author":{"gitId":"heyjinwei"},"content":"`3.[D][✘] go to bed  (by: Feb 23 2021 22:00)`"},{"lineNumber":102,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":103,"author":{"gitId":"heyjinwei"},"content":"### `delete` - Delete\u0027s a task from the list"},{"lineNumber":104,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":105,"author":{"gitId":"heyjinwei"},"content":"Deletes the task at the task index provided."},{"lineNumber":106,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":107,"author":{"gitId":"heyjinwei"},"content":"Example of usage:"},{"lineNumber":108,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":109,"author":{"gitId":"heyjinwei"},"content":"`delete \u003ctask index\u003e`"},{"lineNumber":110,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":111,"author":{"gitId":"heyjinwei"},"content":"Expected outcome:"},{"lineNumber":112,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":113,"author":{"gitId":"heyjinwei"},"content":"`Got it. I\u0027ve deleted this task:`"},{"lineNumber":114,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":115,"author":{"gitId":"heyjinwei"},"content":"`[T][✘] he`"},{"lineNumber":116,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":117,"author":{"gitId":"heyjinwei"},"content":"### `Find` - Find a task by searching for a keyword"},{"lineNumber":118,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":119,"author":{"gitId":"heyjinwei"},"content":"Filters and shows all tasks with the keyword in their description."},{"lineNumber":120,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":121,"author":{"gitId":"heyjinwei"},"content":"Example of usage:"},{"lineNumber":122,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":123,"author":{"gitId":"heyjinwei"},"content":"`find work`"},{"lineNumber":124,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":125,"author":{"gitId":"heyjinwei"},"content":"Expected outcome:"},{"lineNumber":126,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":127,"author":{"gitId":"heyjinwei"},"content":"`Finding tasks with \"work\" in their description...`"},{"lineNumber":128,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":129,"author":{"gitId":"heyjinwei"},"content":"`6.[T][✘] do homework`"},{"lineNumber":130,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":131,"author":{"gitId":"heyjinwei"},"content":"`7.[T][✘] do housework`"}],"authorContributionMap":{"heyjinwei":112,"-":19}},{"path":"src/main/java/duke/Command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke.Command;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"import duke.*;"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"public class AddCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":"    protected Task task;"},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"    public AddCommand(Task task) {"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":"        this.task \u003d task;"},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"            tasks.addTask(this.task);"},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":"        } catch (DukeException e) {"},{"lineNumber":19,"author":{"gitId":"heyjinwei"},"content":"            throw new DukeException();"},{"lineNumber":20,"author":{"gitId":"heyjinwei"},"content":"        } catch (Exception e) {"},{"lineNumber":21,"author":{"gitId":"heyjinwei"},"content":"            ui.showError(e);"},{"lineNumber":22,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":24}},{"path":"src/main/java/duke/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke.Command;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":"public abstract class Command {"},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":"    public boolean isExit() {"},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"        boolean isExit \u003d false;"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":"        if (this.getClass().equals(ExitCommand.class)) {"},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":"            isExit \u003d true;"},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":"        return isExit;"},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":18}},{"path":"src/main/java/duke/Command/DefaultCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke.Command;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":"public class DefaultCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":"    protected String input;"},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":"    public DefaultCommand(String input) {"},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"        this.input \u003d input;"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":"        ui.mockEcho(input);"},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":18}},{"path":"src/main/java/duke/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke.Command;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":"public class DeleteCommand extends Command{"},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"    protected int taskIndex;"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"    public DeleteCommand(int taskIndex) {"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":"        this.taskIndex \u003d taskIndex;"},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"heyjinwei"},"content":"            TaskList.deleteTask(taskIndex);"},{"lineNumber":20,"author":{"gitId":"heyjinwei"},"content":"        } catch (DukeException e) {"},{"lineNumber":21,"author":{"gitId":"heyjinwei"},"content":"            ui.showInvalidTaskIndex(taskIndex);"},{"lineNumber":22,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":24}},{"path":"src/main/java/duke/Command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke.Command;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":"public class DoneCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"    protected int taskIndex;"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"    public DoneCommand(int taskIndex) {"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":"        this.taskIndex \u003d taskIndex;"},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"heyjinwei"},"content":"            TaskList.markIndexDone(taskIndex);"},{"lineNumber":20,"author":{"gitId":"heyjinwei"},"content":"        } catch (DukeException e) {"},{"lineNumber":21,"author":{"gitId":"heyjinwei"},"content":"            ui.showInvalidTaskIndex(taskIndex);"},{"lineNumber":22,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":24}},{"path":"src/main/java/duke/Command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke.Command;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":"public class ExitCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":"        ui.showExit();"},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":13}},{"path":"src/main/java/duke/Command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke.Command;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":"public class FindCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"    protected String keyword;"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"heyjinwei"},"content":"            tasks.findTasks(keyword);"},{"lineNumber":20,"author":{"gitId":"heyjinwei"},"content":"        } catch (DukeException e) {"},{"lineNumber":21,"author":{"gitId":"heyjinwei"},"content":"            ui.showNoTasksFound(keyword);"},{"lineNumber":22,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":24}},{"path":"src/main/java/duke/Command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke.Command;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":"public class HelpCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":"        ui.showHelp();"},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":13}},{"path":"src/main/java/duke/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke.Command;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":"public class ListCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"            tasks.printTasks();"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":"        } catch (DukeException e) {"},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":"            ui.showNoTasks();"},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":17}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"import java.nio.file.Path;"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"import java.nio.file.Paths;"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":"import duke.Command.Command;"},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"    private static TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":"    private final Ui ui \u003d new Ui();"},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":"    /** Variables for the file-saving process */"},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":"    private final String home \u003d System.getProperty(\"user.home\");"},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":"    private final Path filePath \u003d Paths.get(home, \"Documents\",\"duke.txt\");"},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"    private final Storage storage \u003d new Storage(filePath);"},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":19,"author":{"gitId":"heyjinwei"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"heyjinwei"},"content":"     * Attempts to load data from an existing file into the task list."},{"lineNumber":21,"author":{"gitId":"heyjinwei"},"content":"     * Otherwise, it will create a new file and task list."},{"lineNumber":22,"author":{"gitId":"heyjinwei"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"heyjinwei"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"heyjinwei"},"content":"    public Duke() {"},{"lineNumber":25,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"heyjinwei"},"content":"            ui.showLoading();"},{"lineNumber":27,"author":{"gitId":"heyjinwei"},"content":"            tasks \u003d storage.loadFile();"},{"lineNumber":28,"author":{"gitId":"heyjinwei"},"content":"        } catch (DukeException e) {"},{"lineNumber":29,"author":{"gitId":"heyjinwei"},"content":"            ui.showLoadingError(new File(filePath.toString()));"},{"lineNumber":30,"author":{"gitId":"heyjinwei"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":31,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":34,"author":{"gitId":"heyjinwei"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"heyjinwei"},"content":"     * Main code to run."},{"lineNumber":36,"author":{"gitId":"heyjinwei"},"content":"     * Reads user input."},{"lineNumber":37,"author":{"gitId":"heyjinwei"},"content":"     * Parses the input."},{"lineNumber":38,"author":{"gitId":"heyjinwei"},"content":"     * Execute the command."},{"lineNumber":39,"author":{"gitId":"heyjinwei"},"content":"     * Loops until an exit command is given."},{"lineNumber":40,"author":{"gitId":"heyjinwei"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"heyjinwei"},"content":"     * Saves to a file after."},{"lineNumber":42,"author":{"gitId":"heyjinwei"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"heyjinwei"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"heyjinwei"},"content":"    public void run() {"},{"lineNumber":45,"author":{"gitId":"heyjinwei"},"content":"        ui.showWelcome();"},{"lineNumber":46,"author":{"gitId":"heyjinwei"},"content":"        boolean isExit \u003d false;"},{"lineNumber":47,"author":{"gitId":"heyjinwei"},"content":"        while (!isExit) {"},{"lineNumber":48,"author":{"gitId":"heyjinwei"},"content":"            try {"},{"lineNumber":49,"author":{"gitId":"heyjinwei"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":50,"author":{"gitId":"heyjinwei"},"content":"                ui.showSeparator();"},{"lineNumber":51,"author":{"gitId":"heyjinwei"},"content":"                Parser parser \u003d new Parser();"},{"lineNumber":52,"author":{"gitId":"heyjinwei"},"content":"                Command c \u003d  parser.parse(fullCommand);"},{"lineNumber":53,"author":{"gitId":"heyjinwei"},"content":"                c.execute(tasks, ui, storage);"},{"lineNumber":54,"author":{"gitId":"heyjinwei"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":55,"author":{"gitId":"heyjinwei"},"content":"            } catch (DukeException e) {"},{"lineNumber":56,"author":{"gitId":"heyjinwei"},"content":"                ui.showError(e);"},{"lineNumber":57,"author":{"gitId":"heyjinwei"},"content":"            } finally {"},{"lineNumber":58,"author":{"gitId":"heyjinwei"},"content":"                ui.showSeparator();"},{"lineNumber":59,"author":{"gitId":"heyjinwei"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"heyjinwei"},"content":"            storage.writeToFile(tasks);"},{"lineNumber":63,"author":{"gitId":"heyjinwei"},"content":"            ui.showSavingSuccess(new File(filePath.toString()));"},{"lineNumber":64,"author":{"gitId":"heyjinwei"},"content":"        } catch (IOException e) {"},{"lineNumber":65,"author":{"gitId":"heyjinwei"},"content":"            ui.showError(e);"},{"lineNumber":66,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"heyjinwei"},"content":"        ui.showSeparator();"},{"lineNumber":68,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":71,"author":{"gitId":"heyjinwei"},"content":"        new Duke().run();"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"heyjinwei":70,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"public class DukeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"    //no other code needed"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":5}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"import duke.Command.*;"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"import duke.task.Deadline;"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"import duke.task.Event;"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":"import java.time.LocalDateTime;"},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"public class Parser {"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":"    public Ui ui \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":"    /** Main command to execute */"},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":"    public String keyCommand;"},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"    /** Description of the task to add*/"},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":"    public String taskDescription;"},{"lineNumber":19,"author":{"gitId":"heyjinwei"},"content":"    /** Keyword to find among the task list */"},{"lineNumber":20,"author":{"gitId":"heyjinwei"},"content":"    public String keyword;"},{"lineNumber":21,"author":{"gitId":"heyjinwei"},"content":"    /** Date and time for deadlines and events */"},{"lineNumber":22,"author":{"gitId":"heyjinwei"},"content":"    public LocalDateTime taskDate;"},{"lineNumber":23,"author":{"gitId":"heyjinwei"},"content":"    /** The task index to mark as done or delete */"},{"lineNumber":24,"author":{"gitId":"heyjinwei"},"content":"    public int taskIndex;"},{"lineNumber":25,"author":{"gitId":"heyjinwei"},"content":"    public String dateTimeFormat \u003d \"yyyy-MM-dd HH:mm\";"},{"lineNumber":26,"author":{"gitId":"heyjinwei"},"content":"    public DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(dateTimeFormat);"},{"lineNumber":27,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":28,"author":{"gitId":"heyjinwei"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"heyjinwei"},"content":"     * Extracts information from the full user input depending on what the main command is."},{"lineNumber":30,"author":{"gitId":"heyjinwei"},"content":"     * The information is stored in class variables which can be utilised in the parse method."},{"lineNumber":31,"author":{"gitId":"heyjinwei"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"heyjinwei"},"content":"     * @param fullLine  Full input from user"},{"lineNumber":33,"author":{"gitId":"heyjinwei"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"heyjinwei"},"content":"    public void extractInfo(String fullLine) {"},{"lineNumber":35,"author":{"gitId":"heyjinwei"},"content":"        String[] lineParts;"},{"lineNumber":36,"author":{"gitId":"heyjinwei"},"content":"        lineParts \u003d fullLine.split(\" \");"},{"lineNumber":37,"author":{"gitId":"heyjinwei"},"content":"        keyCommand \u003d lineParts[0];"},{"lineNumber":38,"author":{"gitId":"heyjinwei"},"content":"        switch (keyCommand) {"},{"lineNumber":39,"author":{"gitId":"heyjinwei"},"content":"        case \"todo\":"},{"lineNumber":40,"author":{"gitId":"heyjinwei"},"content":"            taskDescription \u003d fullLine.replace(\"todo\", \"\").trim();"},{"lineNumber":41,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":42,"author":{"gitId":"heyjinwei"},"content":"        case \"deadline\":"},{"lineNumber":43,"author":{"gitId":"heyjinwei"},"content":"            try {"},{"lineNumber":44,"author":{"gitId":"heyjinwei"},"content":"                int byIndex \u003d fullLine.indexOf(\"/by\");"},{"lineNumber":45,"author":{"gitId":"heyjinwei"},"content":"                // takes the description from the start of the description to where /by is"},{"lineNumber":46,"author":{"gitId":"heyjinwei"},"content":"                taskDescription \u003d fullLine.substring(9, byIndex);"},{"lineNumber":47,"author":{"gitId":"heyjinwei"},"content":"                taskDate \u003d LocalDateTime.parse(fullLine.substring(byIndex + 4), formatter);"},{"lineNumber":48,"author":{"gitId":"heyjinwei"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":49,"author":{"gitId":"heyjinwei"},"content":"                ui.showDeadlineByError();"},{"lineNumber":50,"author":{"gitId":"heyjinwei"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":51,"author":{"gitId":"heyjinwei"},"content":"                ui.showDateTimeHint(dateTimeFormat);"},{"lineNumber":52,"author":{"gitId":"heyjinwei"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":54,"author":{"gitId":"heyjinwei"},"content":"        case \"event\":"},{"lineNumber":55,"author":{"gitId":"heyjinwei"},"content":"            try {"},{"lineNumber":56,"author":{"gitId":"heyjinwei"},"content":"                int atIndex \u003d fullLine.indexOf(\"/at\");"},{"lineNumber":57,"author":{"gitId":"heyjinwei"},"content":"                taskDescription \u003d fullLine.substring(6, atIndex);"},{"lineNumber":58,"author":{"gitId":"heyjinwei"},"content":"                taskDate \u003d LocalDateTime.parse(fullLine.substring(atIndex + 4), formatter);"},{"lineNumber":59,"author":{"gitId":"heyjinwei"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":60,"author":{"gitId":"heyjinwei"},"content":"                ui.showEventAtError();"},{"lineNumber":61,"author":{"gitId":"heyjinwei"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":62,"author":{"gitId":"heyjinwei"},"content":"                ui.showDateTimeHint(dateTimeFormat);"},{"lineNumber":63,"author":{"gitId":"heyjinwei"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":65,"author":{"gitId":"heyjinwei"},"content":"        case \"done\":"},{"lineNumber":66,"author":{"gitId":"heyjinwei"},"content":"            try {"},{"lineNumber":67,"author":{"gitId":"heyjinwei"},"content":"                taskIndex \u003d Integer.parseInt(lineParts[1]) - 1;"},{"lineNumber":68,"author":{"gitId":"heyjinwei"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":69,"author":{"gitId":"heyjinwei"},"content":"                ui.showInvalidNumber(lineParts[1]);"},{"lineNumber":70,"author":{"gitId":"heyjinwei"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":71,"author":{"gitId":"heyjinwei"},"content":"                ui.showDoneEmptyError();"},{"lineNumber":72,"author":{"gitId":"heyjinwei"},"content":"            } catch (Exception e) {"},{"lineNumber":73,"author":{"gitId":"heyjinwei"},"content":"                ui.showError(e);"},{"lineNumber":74,"author":{"gitId":"heyjinwei"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"heyjinwei"},"content":"        case \"delete\":"},{"lineNumber":76,"author":{"gitId":"heyjinwei"},"content":"            try {"},{"lineNumber":77,"author":{"gitId":"heyjinwei"},"content":"                taskIndex \u003d Integer.parseInt(lineParts[1]) - 1;"},{"lineNumber":78,"author":{"gitId":"heyjinwei"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":79,"author":{"gitId":"heyjinwei"},"content":"                ui.showInvalidNumber(lineParts[1]);"},{"lineNumber":80,"author":{"gitId":"heyjinwei"},"content":"            } catch (Exception e) {"},{"lineNumber":81,"author":{"gitId":"heyjinwei"},"content":"                ui.showError(e);"},{"lineNumber":82,"author":{"gitId":"heyjinwei"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"heyjinwei"},"content":"        case \"find\":"},{"lineNumber":84,"author":{"gitId":"heyjinwei"},"content":"            keyword \u003d fullLine.replace(\"find\", \"\").trim();"},{"lineNumber":85,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":86,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":89,"author":{"gitId":"heyjinwei"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"heyjinwei"},"content":"     * Returns the command to execute based on the user input."},{"lineNumber":91,"author":{"gitId":"heyjinwei"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"heyjinwei"},"content":"     * @param fullLine Full input from user."},{"lineNumber":93,"author":{"gitId":"heyjinwei"},"content":"     * @return Command to execute"},{"lineNumber":94,"author":{"gitId":"heyjinwei"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"heyjinwei"},"content":"    public Command parse(String fullLine) {"},{"lineNumber":96,"author":{"gitId":"heyjinwei"},"content":"        Command command \u003d new DefaultCommand(fullLine);"},{"lineNumber":97,"author":{"gitId":"heyjinwei"},"content":"        extractInfo(fullLine);"},{"lineNumber":98,"author":{"gitId":"heyjinwei"},"content":"        switch (keyCommand) {"},{"lineNumber":99,"author":{"gitId":"heyjinwei"},"content":"        case \"todo\":"},{"lineNumber":100,"author":{"gitId":"heyjinwei"},"content":"            Todo todo \u003d new Todo(taskDescription, false);"},{"lineNumber":101,"author":{"gitId":"heyjinwei"},"content":"            command \u003d new AddCommand(todo);"},{"lineNumber":102,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":103,"author":{"gitId":"heyjinwei"},"content":"        case \"deadline\":"},{"lineNumber":104,"author":{"gitId":"heyjinwei"},"content":"            Deadline deadline \u003d new Deadline(taskDescription, taskDate, false);"},{"lineNumber":105,"author":{"gitId":"heyjinwei"},"content":"            command \u003d new AddCommand(deadline);"},{"lineNumber":106,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":107,"author":{"gitId":"heyjinwei"},"content":"        case \"event\":"},{"lineNumber":108,"author":{"gitId":"heyjinwei"},"content":"            Event event \u003d new Event(taskDescription, taskDate, false);"},{"lineNumber":109,"author":{"gitId":"heyjinwei"},"content":"            command \u003d new AddCommand(event);"},{"lineNumber":110,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":111,"author":{"gitId":"heyjinwei"},"content":"        case \"-h\":"},{"lineNumber":112,"author":{"gitId":"heyjinwei"},"content":"            command \u003d new HelpCommand();"},{"lineNumber":113,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":114,"author":{"gitId":"heyjinwei"},"content":"        case \"list\":"},{"lineNumber":115,"author":{"gitId":"heyjinwei"},"content":"            command \u003d new ListCommand();"},{"lineNumber":116,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":117,"author":{"gitId":"heyjinwei"},"content":"        case \"done\":"},{"lineNumber":118,"author":{"gitId":"heyjinwei"},"content":"            command \u003d new DoneCommand(taskIndex);"},{"lineNumber":119,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":120,"author":{"gitId":"heyjinwei"},"content":"        case \"delete\":"},{"lineNumber":121,"author":{"gitId":"heyjinwei"},"content":"            command \u003d new DeleteCommand(taskIndex);"},{"lineNumber":122,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":123,"author":{"gitId":"heyjinwei"},"content":"        case \"find\":"},{"lineNumber":124,"author":{"gitId":"heyjinwei"},"content":"            command \u003d new FindCommand(keyword);"},{"lineNumber":125,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":126,"author":{"gitId":"heyjinwei"},"content":"        case \"bye\":"},{"lineNumber":127,"author":{"gitId":"heyjinwei"},"content":"            command \u003d new ExitCommand();"},{"lineNumber":128,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":129,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"heyjinwei"},"content":"        return command;"},{"lineNumber":131,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":132}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":"import java.nio.file.Path;"},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"import java.time.LocalDateTime;"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":"import java.util.Scanner;"},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":"public class Storage {"},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":"    public Ui ui \u003d new Ui();"},{"lineNumber":19,"author":{"gitId":"heyjinwei"},"content":"    public Path filePath;"},{"lineNumber":20,"author":{"gitId":"heyjinwei"},"content":"    /** String that is used to separate the line into the different details */"},{"lineNumber":21,"author":{"gitId":"heyjinwei"},"content":"    private static final String FILE_SEPARATOR \u003d \"CHOPCHOP\";"},{"lineNumber":22,"author":{"gitId":"heyjinwei"},"content":"    public String dateTimeFormat \u003d \"yyyy-MM-dd HH:mm\";"},{"lineNumber":23,"author":{"gitId":"heyjinwei"},"content":"    public DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(dateTimeFormat);"},{"lineNumber":24,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":25,"author":{"gitId":"heyjinwei"},"content":"    public Storage(Path filePath) {"},{"lineNumber":26,"author":{"gitId":"heyjinwei"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":27,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":29,"author":{"gitId":"heyjinwei"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"heyjinwei"},"content":"     * Writes all the details of the tasks on the task list to a file."},{"lineNumber":31,"author":{"gitId":"heyjinwei"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"heyjinwei"},"content":"     * @param tasks  X coordinate of position."},{"lineNumber":33,"author":{"gitId":"heyjinwei"},"content":"     * @throws IOException  If an error occurs while writing the data."},{"lineNumber":34,"author":{"gitId":"heyjinwei"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"heyjinwei"},"content":"    public void writeToFile(TaskList tasks) throws IOException {"},{"lineNumber":36,"author":{"gitId":"heyjinwei"},"content":"        FileWriter fw \u003d new FileWriter(filePath.toString());"},{"lineNumber":37,"author":{"gitId":"heyjinwei"},"content":"        for (Task t: tasks.tasks) {"},{"lineNumber":38,"author":{"gitId":"heyjinwei"},"content":"            if(\"Todo\".equals(t.getTaskType())) {"},{"lineNumber":39,"author":{"gitId":"heyjinwei"},"content":"                fw.write(t.getTaskType() + FILE_SEPARATOR + t.getDone() + FILE_SEPARATOR"},{"lineNumber":40,"author":{"gitId":"heyjinwei"},"content":"                        + t.getDescription() + \"\\n\");"},{"lineNumber":41,"author":{"gitId":"heyjinwei"},"content":"            } else {"},{"lineNumber":42,"author":{"gitId":"heyjinwei"},"content":"                fw.write(t.getTaskType() + FILE_SEPARATOR + t.getDone() + FILE_SEPARATOR"},{"lineNumber":43,"author":{"gitId":"heyjinwei"},"content":"                        + t.getDescription() + FILE_SEPARATOR  + t.getDate().format(formatter) + \"\\n\");"},{"lineNumber":44,"author":{"gitId":"heyjinwei"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"heyjinwei"},"content":"        fw.close();"},{"lineNumber":47,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":49,"author":{"gitId":"heyjinwei"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"heyjinwei"},"content":"     * Returns a task list with initial data (if any) extracted from a file."},{"lineNumber":51,"author":{"gitId":"heyjinwei"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"heyjinwei"},"content":"     * @return Task list"},{"lineNumber":53,"author":{"gitId":"heyjinwei"},"content":"     * @throws DukeException If there is no existing data and a new file is created."},{"lineNumber":54,"author":{"gitId":"heyjinwei"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"heyjinwei"},"content":"    public TaskList loadFile() throws DukeException {"},{"lineNumber":56,"author":{"gitId":"heyjinwei"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":57,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"heyjinwei"},"content":"            File f \u003d new File(filePath.toString());"},{"lineNumber":59,"author":{"gitId":"heyjinwei"},"content":"            if (!f.createNewFile()) {"},{"lineNumber":60,"author":{"gitId":"heyjinwei"},"content":"                Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":61,"author":{"gitId":"heyjinwei"},"content":"                while (s.hasNext()) {"},{"lineNumber":62,"author":{"gitId":"heyjinwei"},"content":"                    String[] lineParts \u003d s.nextLine().split(FILE_SEPARATOR);"},{"lineNumber":63,"author":{"gitId":"heyjinwei"},"content":"                    switch(lineParts[0]) {"},{"lineNumber":64,"author":{"gitId":"heyjinwei"},"content":"                    case \"Todo\":"},{"lineNumber":65,"author":{"gitId":"heyjinwei"},"content":"                        tasks.addTodo(new Todo(lineParts[2], Boolean.parseBoolean(lineParts[1])));"},{"lineNumber":66,"author":{"gitId":"heyjinwei"},"content":"                        break;"},{"lineNumber":67,"author":{"gitId":"heyjinwei"},"content":"                    case \"Deadline\":"},{"lineNumber":68,"author":{"gitId":"heyjinwei"},"content":"                        tasks.addDeadline(new Deadline(lineParts[2], LocalDateTime.parse(lineParts[3], formatter),"},{"lineNumber":69,"author":{"gitId":"heyjinwei"},"content":"                                Boolean.parseBoolean(lineParts[1])));"},{"lineNumber":70,"author":{"gitId":"heyjinwei"},"content":"                        break;"},{"lineNumber":71,"author":{"gitId":"heyjinwei"},"content":"                    case \"Event\":"},{"lineNumber":72,"author":{"gitId":"heyjinwei"},"content":"                        tasks.addEvent(new Event(lineParts[2], LocalDateTime.parse(lineParts[3], formatter),"},{"lineNumber":73,"author":{"gitId":"heyjinwei"},"content":"                                Boolean.parseBoolean(lineParts[1])));"},{"lineNumber":74,"author":{"gitId":"heyjinwei"},"content":"                        break;"},{"lineNumber":75,"author":{"gitId":"heyjinwei"},"content":"                    }"},{"lineNumber":76,"author":{"gitId":"heyjinwei"},"content":"                }"},{"lineNumber":77,"author":{"gitId":"heyjinwei"},"content":"                ui.showLoadingSuccess();"},{"lineNumber":78,"author":{"gitId":"heyjinwei"},"content":"            } else {"},{"lineNumber":79,"author":{"gitId":"heyjinwei"},"content":"                throw new DukeException();"},{"lineNumber":80,"author":{"gitId":"heyjinwei"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"heyjinwei"},"content":"        } catch (Exception e) {"},{"lineNumber":82,"author":{"gitId":"heyjinwei"},"content":"            ui.showError(e);"},{"lineNumber":83,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"heyjinwei"},"content":"        return tasks;"},{"lineNumber":85,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":86}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"    public static ArrayList\u003cTask\u003e tasks;"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":"    private static Ui ui \u003d new Ui();"},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":19,"author":{"gitId":"heyjinwei"},"content":"    public void printTasks() throws DukeException{"},{"lineNumber":20,"author":{"gitId":"heyjinwei"},"content":"        if (tasks.size() \u003e\u003d 1) {"},{"lineNumber":21,"author":{"gitId":"heyjinwei"},"content":"            ui.showListSize(tasks.size());"},{"lineNumber":22,"author":{"gitId":"heyjinwei"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":23,"author":{"gitId":"heyjinwei"},"content":"                ui.printTask(i+1, tasks.get(i));"},{"lineNumber":24,"author":{"gitId":"heyjinwei"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"heyjinwei"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"heyjinwei"},"content":"            throw new DukeException();"},{"lineNumber":27,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":30,"author":{"gitId":"heyjinwei"},"content":"    public void addTask(Task t) throws DukeException{"},{"lineNumber":31,"author":{"gitId":"heyjinwei"},"content":"        if (!t.getDescription().isEmpty()) {"},{"lineNumber":32,"author":{"gitId":"heyjinwei"},"content":"            tasks.add(t);"},{"lineNumber":33,"author":{"gitId":"heyjinwei"},"content":"            System.out.print(\"Got it. I\u0027ve added this task:\\n\" + t.toString() + \u0027\\n\u0027);"},{"lineNumber":34,"author":{"gitId":"heyjinwei"},"content":"        } else {"},{"lineNumber":35,"author":{"gitId":"heyjinwei"},"content":"            throw new DukeException();"},{"lineNumber":36,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":39,"author":{"gitId":"heyjinwei"},"content":"    public void addTodo(Todo todo) {"},{"lineNumber":40,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"heyjinwei"},"content":"            addTask(todo);"},{"lineNumber":42,"author":{"gitId":"heyjinwei"},"content":"        } catch (DukeException e) {"},{"lineNumber":43,"author":{"gitId":"heyjinwei"},"content":"            System.out.print(\"The description of a todo cannot be empty.\\n\");"},{"lineNumber":44,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":47,"author":{"gitId":"heyjinwei"},"content":"    public void addDeadline(Deadline deadline) {"},{"lineNumber":48,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"heyjinwei"},"content":"            addTask(deadline);"},{"lineNumber":50,"author":{"gitId":"heyjinwei"},"content":"        } catch (DukeException e) {"},{"lineNumber":51,"author":{"gitId":"heyjinwei"},"content":"            System.out.print(\"The description of a deadline cannot be empty.\\n\");"},{"lineNumber":52,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":55,"author":{"gitId":"heyjinwei"},"content":"    public void addEvent(Event event) {"},{"lineNumber":56,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":57,"author":{"gitId":"heyjinwei"},"content":"            addTask(event);"},{"lineNumber":58,"author":{"gitId":"heyjinwei"},"content":"        } catch (DukeException e) {"},{"lineNumber":59,"author":{"gitId":"heyjinwei"},"content":"            System.out.print(\"The description of an event cannot be empty.\\n\");"},{"lineNumber":60,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":63,"author":{"gitId":"heyjinwei"},"content":"    public static void deleteTask(int taskIndex) throws DukeException{"},{"lineNumber":64,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"heyjinwei"},"content":"            System.out.print(\"Got it. I\u0027ve deleted this task:\\n\" + tasks.get(taskIndex).toString() + \u0027\\n\u0027);"},{"lineNumber":66,"author":{"gitId":"heyjinwei"},"content":"            tasks.remove(taskIndex);"},{"lineNumber":67,"author":{"gitId":"heyjinwei"},"content":"        } catch (Exception e) {"},{"lineNumber":68,"author":{"gitId":"heyjinwei"},"content":"            throw new DukeException();"},{"lineNumber":69,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":72,"author":{"gitId":"heyjinwei"},"content":"    public static void markIndexDone(int taskIndex) throws DukeException{"},{"lineNumber":73,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"heyjinwei"},"content":"            tasks.get(taskIndex).setDone();"},{"lineNumber":75,"author":{"gitId":"heyjinwei"},"content":"        } catch (Exception e) {"},{"lineNumber":76,"author":{"gitId":"heyjinwei"},"content":"            throw new DukeException();"},{"lineNumber":77,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":80,"author":{"gitId":"heyjinwei"},"content":"    public static void findTasks(String keyword) throws DukeException{"},{"lineNumber":81,"author":{"gitId":"heyjinwei"},"content":"        ui.showFindLoading(keyword);"},{"lineNumber":82,"author":{"gitId":"heyjinwei"},"content":"        int foundTaskCount \u003d 0;"},{"lineNumber":83,"author":{"gitId":"heyjinwei"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":84,"author":{"gitId":"heyjinwei"},"content":"            if(tasks.get(i).getDescription().contains(keyword)) {"},{"lineNumber":85,"author":{"gitId":"heyjinwei"},"content":"                ui.printTask(i+1, tasks.get(i));"},{"lineNumber":86,"author":{"gitId":"heyjinwei"},"content":"                foundTaskCount++;"},{"lineNumber":87,"author":{"gitId":"heyjinwei"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"heyjinwei"},"content":"        if (foundTaskCount \u003d\u003d 0) {"},{"lineNumber":90,"author":{"gitId":"heyjinwei"},"content":"            throw new DukeException();"},{"lineNumber":91,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":93}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"import java.util.Random;"},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":"public class Ui {"},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":"    /** Number of dashes for the separator */"},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"    private static final int SEPARATOR_LENGTH \u003d 80;"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":"    public void showSeparator() {"},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":"        for(int i \u003d 0; i \u003c SEPARATOR_LENGTH; i++) {"},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":"            System.out.print(\u0027-\u0027);"},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\u0027\\n\u0027);"},{"lineNumber":19,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":21,"author":{"gitId":"heyjinwei"},"content":"    public void showWelcome() {"},{"lineNumber":22,"author":{"gitId":"heyjinwei"},"content":"        showSeparator();"},{"lineNumber":23,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"Greetings, fellow humans!\\nI am CI.\\nHow may I help you?\\n\");"},{"lineNumber":24,"author":{"gitId":"heyjinwei"},"content":"        showSeparator();"},{"lineNumber":25,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":27,"author":{"gitId":"heyjinwei"},"content":"    public void showExit() {"},{"lineNumber":28,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"My cover\u0027s blown!\\n\");"},{"lineNumber":29,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":31,"author":{"gitId":"heyjinwei"},"content":"    public void showLoading() {"},{"lineNumber":32,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"Looking for existing data...\\n\");"},{"lineNumber":33,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":35,"author":{"gitId":"heyjinwei"},"content":"    public void showLoadingSuccess() {"},{"lineNumber":36,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"File loaded successfully.\\n\");"},{"lineNumber":37,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":39,"author":{"gitId":"heyjinwei"},"content":"    public void showLoadingError(File filePath) {"},{"lineNumber":40,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"No prior data found. New file created at \" + filePath.getAbsolutePath()+ \"\\n\");"},{"lineNumber":41,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":43,"author":{"gitId":"heyjinwei"},"content":"    public void showSavingSuccess(File filePath) {"},{"lineNumber":44,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"File saved successfully at \" + filePath.getAbsolutePath() + \"\\n\");"},{"lineNumber":45,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":47,"author":{"gitId":"heyjinwei"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"heyjinwei"},"content":"     * Echoes the user input with random upper and lower case for mockery."},{"lineNumber":49,"author":{"gitId":"heyjinwei"},"content":"     * Shows the command the user may input for help after."},{"lineNumber":50,"author":{"gitId":"heyjinwei"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"heyjinwei"},"content":"     * @param line User input."},{"lineNumber":52,"author":{"gitId":"heyjinwei"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"heyjinwei"},"content":"    public void mockEcho(String line) {"},{"lineNumber":54,"author":{"gitId":"heyjinwei"},"content":"        Random rd \u003d new Random();"},{"lineNumber":55,"author":{"gitId":"heyjinwei"},"content":"        for (int i \u003d 0; i \u003c line.length(); i++) {"},{"lineNumber":56,"author":{"gitId":"heyjinwei"},"content":"            if (rd.nextBoolean()) {"},{"lineNumber":57,"author":{"gitId":"heyjinwei"},"content":"                System.out.print(Character.toUpperCase(line.charAt(i)));"},{"lineNumber":58,"author":{"gitId":"heyjinwei"},"content":"            } else {"},{"lineNumber":59,"author":{"gitId":"heyjinwei"},"content":"                System.out.print(Character.toLowerCase(line.charAt(i)));"},{"lineNumber":60,"author":{"gitId":"heyjinwei"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\u0027\\n\u0027);"},{"lineNumber":63,"author":{"gitId":"heyjinwei"},"content":"        showHint();"},{"lineNumber":64,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":66,"author":{"gitId":"heyjinwei"},"content":"    public void showError(Exception e) {"},{"lineNumber":67,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"Something went wrong: \" + e.getMessage() + \"\\n\");"},{"lineNumber":68,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":70,"author":{"gitId":"heyjinwei"},"content":"    public String readCommand() {"},{"lineNumber":71,"author":{"gitId":"heyjinwei"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":72,"author":{"gitId":"heyjinwei"},"content":"        return in.nextLine();"},{"lineNumber":73,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":75,"author":{"gitId":"heyjinwei"},"content":"    public void showHint() {"},{"lineNumber":76,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"Use -h for list of available commands.\\n\");"},{"lineNumber":77,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":79,"author":{"gitId":"heyjinwei"},"content":"    public void showHelp() {"},{"lineNumber":80,"author":{"gitId":"heyjinwei"},"content":"            System.out.print(\"I can remember your tasks for you!\\n\\n\" +"},{"lineNumber":81,"author":{"gitId":"heyjinwei"},"content":"                    \"Available commands:\\n\" +"},{"lineNumber":82,"author":{"gitId":"heyjinwei"},"content":"                    \"\\ttodo \u003cdescription\u003e\\n\" +"},{"lineNumber":83,"author":{"gitId":"heyjinwei"},"content":"                    \"\\tdeadline \u003cdescription\u003e /by \u003cdate and time due\u003e\\n\" +"},{"lineNumber":84,"author":{"gitId":"heyjinwei"},"content":"                    \"\\tevent \u003cdescription\u003e /at \u003cdate and time occurring\u003e\\n\" +"},{"lineNumber":85,"author":{"gitId":"heyjinwei"},"content":"                    \"\\tlist\\n\" +"},{"lineNumber":86,"author":{"gitId":"heyjinwei"},"content":"                    \"\\tdone \u003ctask index\u003e\\n\" +"},{"lineNumber":87,"author":{"gitId":"heyjinwei"},"content":"                    \"\\tdelete \u003ctask index\u003e\\n\" +"},{"lineNumber":88,"author":{"gitId":"heyjinwei"},"content":"                    \"\\tfind \u003ckeyword\u003e\\n\" +"},{"lineNumber":89,"author":{"gitId":"heyjinwei"},"content":"                    \"\\tbye\\n\""},{"lineNumber":90,"author":{"gitId":"heyjinwei"},"content":"                    );"},{"lineNumber":91,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":93,"author":{"gitId":"heyjinwei"},"content":"    public void showNoTasks() {"},{"lineNumber":94,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"You don\u0027t have any tasks currently!\\n\");"},{"lineNumber":95,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":97,"author":{"gitId":"heyjinwei"},"content":"    public void showInvalidNumber(String invalidNumber) {"},{"lineNumber":98,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(invalidNumber + \" is not a valid number.\\n\");"},{"lineNumber":99,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":101,"author":{"gitId":"heyjinwei"},"content":"    public void showDeadlineByError() {"},{"lineNumber":102,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"Something went wrong. Please put the due date after /by.\\n\");"},{"lineNumber":103,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":105,"author":{"gitId":"heyjinwei"},"content":"    public void showEventAtError() {"},{"lineNumber":106,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"Something went wrong. Please put the event time after /at.\\n\");"},{"lineNumber":107,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":109,"author":{"gitId":"heyjinwei"},"content":"    public void showInvalidTaskIndex(int taskIndex) {"},{"lineNumber":110,"author":{"gitId":"heyjinwei"},"content":"        System.out.print((taskIndex+1) + \" is not a valid task index, please try again.\\n\");"},{"lineNumber":111,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":113,"author":{"gitId":"heyjinwei"},"content":"    public void showDoneEmptyError() {"},{"lineNumber":114,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"That is not a valid command. Please enter a number after the word.\\n\");"},{"lineNumber":115,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":117,"author":{"gitId":"heyjinwei"},"content":"    public void showListSize(int size) {"},{"lineNumber":118,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"There are \" + size + \" tasks in your list:\\n\");"},{"lineNumber":119,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":121,"author":{"gitId":"heyjinwei"},"content":"    public void printTask(int index, Task task) {"},{"lineNumber":122,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(index+ \".\" + task + \u0027\\n\u0027);"},{"lineNumber":123,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":125,"author":{"gitId":"heyjinwei"},"content":"    public void showNoTasksFound(String keyword) {"},{"lineNumber":126,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"There are no tasks with \\\"\" + keyword +\"\\\".\\n\");"},{"lineNumber":127,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":129,"author":{"gitId":"heyjinwei"},"content":"    public void showFindLoading(String keyword) {"},{"lineNumber":130,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"Finding tasks with \\\"\" + keyword + \"\\\" in their description...\\n\");"},{"lineNumber":131,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":133,"author":{"gitId":"heyjinwei"},"content":"    public void showDateTimeHint(String dateTimeFormat) {"},{"lineNumber":134,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"That is invalid. The date-time format should be: \" + dateTimeFormat + \"\\n\");"},{"lineNumber":135,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":136}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":"    protected LocalDateTime by;"},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"    public Deadline(String description, LocalDateTime by, boolean isDone) {"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":"        super(description, isDone);"},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"        this.by \u003d by;"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":"    public LocalDateTime getDate() {"},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"        return by;"},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":20,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"heyjinwei"},"content":"    public String getTaskType() {"},{"lineNumber":22,"author":{"gitId":"heyjinwei"},"content":"        return \"Deadline\";"},{"lineNumber":23,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":25,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"heyjinwei"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"heyjinwei"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":28,"author":{"gitId":"heyjinwei"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";"},{"lineNumber":29,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":30}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":"    protected LocalDateTime at;"},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"    public Event(String description, LocalDateTime at, boolean isDone) {"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":"        super(description, isDone);"},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"        this.at \u003d at;"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":"    public LocalDateTime getDate() {"},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"        return at;"},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":20,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"heyjinwei"},"content":"    public String getTaskType() {"},{"lineNumber":22,"author":{"gitId":"heyjinwei"},"content":"        return \"Event\";"},{"lineNumber":23,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":25,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"heyjinwei"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"heyjinwei"},"content":"        return \"[E]\" + super.toString() + \" (at: \""},{"lineNumber":28,"author":{"gitId":"heyjinwei"},"content":"                + this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";"},{"lineNumber":29,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":30}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"public class Task {"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":"        this.description \u003d description;"},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":"    public String getDescription() {"},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":"        return description;"},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":19,"author":{"gitId":"heyjinwei"},"content":"    public void setDone() {"},{"lineNumber":20,"author":{"gitId":"heyjinwei"},"content":"        isDone \u003d true;"},{"lineNumber":21,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"Nice! I\u0027ve marked this task as done:\\n\" + this.toString() + \u0027\\n\u0027);"},{"lineNumber":22,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":24,"author":{"gitId":"heyjinwei"},"content":"    public boolean getDone() {"},{"lineNumber":25,"author":{"gitId":"heyjinwei"},"content":"        return this.isDone;"},{"lineNumber":26,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":28,"author":{"gitId":"heyjinwei"},"content":"    public String getStatusIcon() {"},{"lineNumber":29,"author":{"gitId":"heyjinwei"},"content":"        if(isDone) {"},{"lineNumber":30,"author":{"gitId":"heyjinwei"},"content":"            return \"[\\u2713] \";"},{"lineNumber":31,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"heyjinwei"},"content":"        return \"[\\u2718] \";"},{"lineNumber":33,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":35,"author":{"gitId":"heyjinwei"},"content":"    public String getTaskType() {"},{"lineNumber":36,"author":{"gitId":"heyjinwei"},"content":"        return \"Task\";"},{"lineNumber":37,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":39,"author":{"gitId":"heyjinwei"},"content":"    public LocalDateTime getDate() {"},{"lineNumber":40,"author":{"gitId":"heyjinwei"},"content":"        return null;"},{"lineNumber":41,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":43,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"heyjinwei"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitId":"heyjinwei"},"content":"        return this.getStatusIcon() + this.description;"},{"lineNumber":46,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":48,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":49,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":49}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"        super(description, isDone);"},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"    public String getTaskType() {"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":"        return \"Todo\";"},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":"list"},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"list"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"bye"}],"authorContributionMap":{"heyjinwei":6}}]
