[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"import java.util.Random;"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":"import java.nio.file.Path;"},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":"import java.nio.file.Paths;"},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":"import duke.task.Task;"},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"import duke.task.Deadline;"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":"import duke.task.Event;"},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":"import duke.task.Todo;"},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"heyjinwei"},"content":"    private static final String FILE_SEPARATOR \u003d \"CHOPCHOP\";"},{"lineNumber":20,"author":{"gitId":"heyjinwei"},"content":"    private static final int SEPARATOR_LENGTH \u003d 60;"},{"lineNumber":21,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":22,"author":{"gitId":"heyjinwei"},"content":"    private static void printSeparator() {"},{"lineNumber":23,"author":{"gitId":"heyjinwei"},"content":"        for(int i \u003d 0; i \u003c SEPARATOR_LENGTH; i++) {"},{"lineNumber":24,"author":{"gitId":"heyjinwei"},"content":"            System.out.print(\u0027-\u0027);"},{"lineNumber":25,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\u0027\\n\u0027);"},{"lineNumber":27,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":29,"author":{"gitId":"heyjinwei"},"content":"    private static void exitMethod() {"},{"lineNumber":30,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"My cover\u0027s blown!\\n\");"},{"lineNumber":31,"author":{"gitId":"heyjinwei"},"content":"        printSeparator();"},{"lineNumber":32,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":34,"author":{"gitId":"heyjinwei"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"heyjinwei"},"content":"     * Echoes the user input with random upper and lower case for mockery."},{"lineNumber":36,"author":{"gitId":"heyjinwei"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"heyjinwei"},"content":"     * @param line User input."},{"lineNumber":38,"author":{"gitId":"heyjinwei"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"heyjinwei"},"content":"    private static void mockEcho(String line) {"},{"lineNumber":40,"author":{"gitId":"heyjinwei"},"content":"        Random rd \u003d new Random();"},{"lineNumber":41,"author":{"gitId":"heyjinwei"},"content":"        for (int i \u003d 0; i \u003c line.length(); i++) {"},{"lineNumber":42,"author":{"gitId":"heyjinwei"},"content":"            if (rd.nextBoolean()) {"},{"lineNumber":43,"author":{"gitId":"heyjinwei"},"content":"                System.out.print(Character.toUpperCase(line.charAt(i)));"},{"lineNumber":44,"author":{"gitId":"heyjinwei"},"content":"            } else {"},{"lineNumber":45,"author":{"gitId":"heyjinwei"},"content":"                System.out.print(Character.toLowerCase(line.charAt(i)));"},{"lineNumber":46,"author":{"gitId":"heyjinwei"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\u0027\\n\u0027);"},{"lineNumber":49,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":51,"author":{"gitId":"heyjinwei"},"content":"    private static void printTasks() throws DukeException{"},{"lineNumber":52,"author":{"gitId":"heyjinwei"},"content":"        if (tasks.size() \u003c 1) {"},{"lineNumber":53,"author":{"gitId":"heyjinwei"},"content":"            throw new DukeException();"},{"lineNumber":54,"author":{"gitId":"heyjinwei"},"content":"        } else {"},{"lineNumber":55,"author":{"gitId":"heyjinwei"},"content":"            System.out.print(\"There are \" + tasks.size() + \" tasks in your list:\\n\");"},{"lineNumber":56,"author":{"gitId":"heyjinwei"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":57,"author":{"gitId":"heyjinwei"},"content":"                System.out.print((i+1) + \".\" + tasks.get(i) + \u0027\\n\u0027);"},{"lineNumber":58,"author":{"gitId":"heyjinwei"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":62,"author":{"gitId":"heyjinwei"},"content":"    private static void addTask(Task t) throws DukeException{"},{"lineNumber":63,"author":{"gitId":"heyjinwei"},"content":"        if (t.getDescription().isEmpty()) {"},{"lineNumber":64,"author":{"gitId":"heyjinwei"},"content":"            throw new DukeException();"},{"lineNumber":65,"author":{"gitId":"heyjinwei"},"content":"        } else {"},{"lineNumber":66,"author":{"gitId":"heyjinwei"},"content":"            tasks.add(t);"},{"lineNumber":67,"author":{"gitId":"heyjinwei"},"content":"            System.out.print(\"Got it. I\u0027ve added this task:\\n\" + t.toString() + \u0027\\n\u0027);"},{"lineNumber":68,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":71,"author":{"gitId":"heyjinwei"},"content":"    private static void addTodo(Todo todo) {"},{"lineNumber":72,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":73,"author":{"gitId":"heyjinwei"},"content":"            addTask(todo);"},{"lineNumber":74,"author":{"gitId":"heyjinwei"},"content":"        } catch (DukeException e) {"},{"lineNumber":75,"author":{"gitId":"heyjinwei"},"content":"            System.out.print(\"The description of a todo cannot be empty.\\n\");"},{"lineNumber":76,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":79,"author":{"gitId":"heyjinwei"},"content":"    private static void addDeadline(Deadline deadline) {"},{"lineNumber":80,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":81,"author":{"gitId":"heyjinwei"},"content":"            addTask(deadline);"},{"lineNumber":82,"author":{"gitId":"heyjinwei"},"content":"        } catch (DukeException e) {"},{"lineNumber":83,"author":{"gitId":"heyjinwei"},"content":"            System.out.print(\"The description of a deadline cannot be empty.\\n\");"},{"lineNumber":84,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":87,"author":{"gitId":"heyjinwei"},"content":"    private static void addEvent(Event event) {"},{"lineNumber":88,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":89,"author":{"gitId":"heyjinwei"},"content":"            addTask(event);"},{"lineNumber":90,"author":{"gitId":"heyjinwei"},"content":"        } catch (DukeException e) {"},{"lineNumber":91,"author":{"gitId":"heyjinwei"},"content":"            System.out.print(\"The description of an event cannot be empty.\\n\");"},{"lineNumber":92,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":95,"author":{"gitId":"heyjinwei"},"content":"    private static void deleteTask(int taskIndex) throws DukeException{"},{"lineNumber":96,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":97,"author":{"gitId":"heyjinwei"},"content":"            System.out.print(\"Got it. I\u0027ve deleted this task:\\n\" + tasks.get(taskIndex).toString() + \u0027\\n\u0027);"},{"lineNumber":98,"author":{"gitId":"heyjinwei"},"content":"            tasks.remove(taskIndex);"},{"lineNumber":99,"author":{"gitId":"heyjinwei"},"content":"        } catch (Exception e) {"},{"lineNumber":100,"author":{"gitId":"heyjinwei"},"content":"            throw new DukeException();"},{"lineNumber":101,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":104,"author":{"gitId":"heyjinwei"},"content":"    private static void markIndexDone(int taskIndex) throws DukeException{"},{"lineNumber":105,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":106,"author":{"gitId":"heyjinwei"},"content":"            tasks.get(taskIndex).setDone();"},{"lineNumber":107,"author":{"gitId":"heyjinwei"},"content":"        } catch (Exception e) {"},{"lineNumber":108,"author":{"gitId":"heyjinwei"},"content":"            throw new DukeException();"},{"lineNumber":109,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":112,"author":{"gitId":"heyjinwei"},"content":"    private static void printHelp() {"},{"lineNumber":113,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"I can remember your tasks for you!\\n\\n\" +"},{"lineNumber":114,"author":{"gitId":"heyjinwei"},"content":"                \"Available commands:\\n\" +"},{"lineNumber":115,"author":{"gitId":"heyjinwei"},"content":"                \"\\ttodo \u003cdescription\u003e\\n\" +"},{"lineNumber":116,"author":{"gitId":"heyjinwei"},"content":"                \"\\tdeadline \u003cdescription\u003e /by \u003ctime due\u003e\\n\" +"},{"lineNumber":117,"author":{"gitId":"heyjinwei"},"content":"                \"\\tevent \u003cdescription\u003e /at \u003ctime occurring\u003e\\n\" +"},{"lineNumber":118,"author":{"gitId":"heyjinwei"},"content":"                \"\\tlist\\n\" + \"\\tdone \u003ctask index\u003e\\n\" +"},{"lineNumber":119,"author":{"gitId":"heyjinwei"},"content":"                \"\\tdelete \u003ctask index\u003e\\n\");"},{"lineNumber":120,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":122,"author":{"gitId":"heyjinwei"},"content":"    private static void executeCommand(String line) {"},{"lineNumber":123,"author":{"gitId":"heyjinwei"},"content":"        String[] lineParts;"},{"lineNumber":124,"author":{"gitId":"heyjinwei"},"content":"        lineParts \u003d line.split(\" \");"},{"lineNumber":125,"author":{"gitId":"heyjinwei"},"content":"        switch(lineParts[0]) {"},{"lineNumber":126,"author":{"gitId":"heyjinwei"},"content":"        case \"-h\":"},{"lineNumber":127,"author":{"gitId":"heyjinwei"},"content":"            printHelp();"},{"lineNumber":128,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":129,"author":{"gitId":"heyjinwei"},"content":"        case \"list\":"},{"lineNumber":130,"author":{"gitId":"heyjinwei"},"content":"            try {"},{"lineNumber":131,"author":{"gitId":"heyjinwei"},"content":"                printTasks();"},{"lineNumber":132,"author":{"gitId":"heyjinwei"},"content":"            } catch (DukeException e) {"},{"lineNumber":133,"author":{"gitId":"heyjinwei"},"content":"                System.out.print(\"You don\u0027t have any tasks currently!\\n\");"},{"lineNumber":134,"author":{"gitId":"heyjinwei"},"content":"            }"},{"lineNumber":135,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":136,"author":{"gitId":"heyjinwei"},"content":"        case \"done\":"},{"lineNumber":137,"author":{"gitId":"heyjinwei"},"content":"            try {"},{"lineNumber":138,"author":{"gitId":"heyjinwei"},"content":"                int taskIndex \u003d Integer.parseInt(lineParts[1]) - 1;"},{"lineNumber":139,"author":{"gitId":"heyjinwei"},"content":"                markIndexDone(taskIndex);"},{"lineNumber":140,"author":{"gitId":"heyjinwei"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":141,"author":{"gitId":"heyjinwei"},"content":"                System.out.print(lineParts[1] + \" is not a valid number.\\n\");"},{"lineNumber":142,"author":{"gitId":"heyjinwei"},"content":"            } catch (DukeException e) {"},{"lineNumber":143,"author":{"gitId":"heyjinwei"},"content":"                System.out.print(\"That is not a valid task index, please try again.\\n\");"},{"lineNumber":144,"author":{"gitId":"heyjinwei"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":145,"author":{"gitId":"heyjinwei"},"content":"                System.out.print(\"That is not a valid command. Please enter a number after the word.\\n\");"},{"lineNumber":146,"author":{"gitId":"heyjinwei"},"content":"            }"},{"lineNumber":147,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":148,"author":{"gitId":"heyjinwei"},"content":"        case \"todo\":"},{"lineNumber":149,"author":{"gitId":"heyjinwei"},"content":"            addTodo(new Todo(line.replace(\"todo\", \"\").trim(), false));"},{"lineNumber":150,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":151,"author":{"gitId":"heyjinwei"},"content":"        case \"deadline\":"},{"lineNumber":152,"author":{"gitId":"heyjinwei"},"content":"            try {"},{"lineNumber":153,"author":{"gitId":"heyjinwei"},"content":"                int byIndex \u003d line.indexOf(\"/by\");"},{"lineNumber":154,"author":{"gitId":"heyjinwei"},"content":"                addDeadline(new Deadline(line.substring(9, byIndex), line.substring(byIndex + 4), false));"},{"lineNumber":155,"author":{"gitId":"heyjinwei"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":156,"author":{"gitId":"heyjinwei"},"content":"                System.out.print(\"Something went wrong. Please put the due date after /by.\\n\");"},{"lineNumber":157,"author":{"gitId":"heyjinwei"},"content":"            }"},{"lineNumber":158,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":159,"author":{"gitId":"heyjinwei"},"content":"        case \"event\":"},{"lineNumber":160,"author":{"gitId":"heyjinwei"},"content":"            try {"},{"lineNumber":161,"author":{"gitId":"heyjinwei"},"content":"                int atIndex \u003d line.indexOf(\"/at\");"},{"lineNumber":162,"author":{"gitId":"heyjinwei"},"content":"                addEvent(new Event(line.substring(6, atIndex), line.substring(atIndex + 4), false));"},{"lineNumber":163,"author":{"gitId":"heyjinwei"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":164,"author":{"gitId":"heyjinwei"},"content":"                System.out.print(\"Something went wrong. Please put the event time after /at.\\n\");"},{"lineNumber":165,"author":{"gitId":"heyjinwei"},"content":"            }"},{"lineNumber":166,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":167,"author":{"gitId":"heyjinwei"},"content":"        case \"delete\":"},{"lineNumber":168,"author":{"gitId":"heyjinwei"},"content":"            try {"},{"lineNumber":169,"author":{"gitId":"heyjinwei"},"content":"                int taskIndex \u003d Integer.parseInt(lineParts[1]) - 1;"},{"lineNumber":170,"author":{"gitId":"heyjinwei"},"content":"                deleteTask(taskIndex);"},{"lineNumber":171,"author":{"gitId":"heyjinwei"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":172,"author":{"gitId":"heyjinwei"},"content":"                System.out.print(lineParts[1] + \" is not a valid number.\\n\");"},{"lineNumber":173,"author":{"gitId":"heyjinwei"},"content":"            } catch (DukeException e) {"},{"lineNumber":174,"author":{"gitId":"heyjinwei"},"content":"                System.out.print(\"That is not a valid task index, please try again.\\n\");"},{"lineNumber":175,"author":{"gitId":"heyjinwei"},"content":"            }"},{"lineNumber":176,"author":{"gitId":"heyjinwei"},"content":"            break;"},{"lineNumber":177,"author":{"gitId":"heyjinwei"},"content":"        default:"},{"lineNumber":178,"author":{"gitId":"heyjinwei"},"content":"            mockEcho(line);"},{"lineNumber":179,"author":{"gitId":"heyjinwei"},"content":"            System.out.print(\"Use -h for list of available commands.\\n\");"},{"lineNumber":180,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":183,"author":{"gitId":"heyjinwei"},"content":"    private static void listMode() {"},{"lineNumber":184,"author":{"gitId":"heyjinwei"},"content":"        String line;"},{"lineNumber":185,"author":{"gitId":"heyjinwei"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":186,"author":{"gitId":"heyjinwei"},"content":"        line \u003d in.nextLine();"},{"lineNumber":187,"author":{"gitId":"heyjinwei"},"content":"        while (!line.equals(\"bye\")){"},{"lineNumber":188,"author":{"gitId":"heyjinwei"},"content":"            executeCommand(line);"},{"lineNumber":189,"author":{"gitId":"heyjinwei"},"content":"            printSeparator();"},{"lineNumber":190,"author":{"gitId":"heyjinwei"},"content":"            line \u003d in.nextLine();"},{"lineNumber":191,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":192,"author":{"gitId":"heyjinwei"},"content":"        exitMethod();"},{"lineNumber":193,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":195,"author":{"gitId":"heyjinwei"},"content":"    private static void loadFile(Path path) {"},{"lineNumber":196,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"Looking for existing data...\\n\");"},{"lineNumber":197,"author":{"gitId":"heyjinwei"},"content":"        //java.nio.file.Files.exists(path)"},{"lineNumber":198,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":199,"author":{"gitId":"heyjinwei"},"content":"            File f \u003d new File(path.toString());"},{"lineNumber":200,"author":{"gitId":"heyjinwei"},"content":"            if (!f.createNewFile()) {"},{"lineNumber":201,"author":{"gitId":"heyjinwei"},"content":"                System.out.println(\"File already exists.\\nLoading...\");"},{"lineNumber":202,"author":{"gitId":"heyjinwei"},"content":"                Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":203,"author":{"gitId":"heyjinwei"},"content":"                while (s.hasNext()) {"},{"lineNumber":204,"author":{"gitId":"heyjinwei"},"content":"                    String[] lineParts \u003d s.nextLine().split(FILE_SEPARATOR);"},{"lineNumber":205,"author":{"gitId":"heyjinwei"},"content":"                    switch(lineParts[0]) {"},{"lineNumber":206,"author":{"gitId":"heyjinwei"},"content":"                    case \"Todo\":"},{"lineNumber":207,"author":{"gitId":"heyjinwei"},"content":"                        addTodo(new Todo(lineParts[2], Boolean.parseBoolean(lineParts[1])));"},{"lineNumber":208,"author":{"gitId":"heyjinwei"},"content":"                        break;"},{"lineNumber":209,"author":{"gitId":"heyjinwei"},"content":"                    case \"Deadline\":"},{"lineNumber":210,"author":{"gitId":"heyjinwei"},"content":"                        addDeadline(new Deadline(lineParts[2], lineParts[3], Boolean.parseBoolean(lineParts[1])));"},{"lineNumber":211,"author":{"gitId":"heyjinwei"},"content":"                        break;"},{"lineNumber":212,"author":{"gitId":"heyjinwei"},"content":"                    case \"Event\":"},{"lineNumber":213,"author":{"gitId":"heyjinwei"},"content":"                        addEvent(new Event(lineParts[2], lineParts[3], Boolean.parseBoolean(lineParts[1])));"},{"lineNumber":214,"author":{"gitId":"heyjinwei"},"content":"                        break;"},{"lineNumber":215,"author":{"gitId":"heyjinwei"},"content":"                    }"},{"lineNumber":216,"author":{"gitId":"heyjinwei"},"content":"                }"},{"lineNumber":217,"author":{"gitId":"heyjinwei"},"content":"            } else {"},{"lineNumber":218,"author":{"gitId":"heyjinwei"},"content":"                System.out.println(\"File created: \" + path.toAbsolutePath());"},{"lineNumber":219,"author":{"gitId":"heyjinwei"},"content":"            }"},{"lineNumber":220,"author":{"gitId":"heyjinwei"},"content":"        } catch (IOException e) {"},{"lineNumber":221,"author":{"gitId":"heyjinwei"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":222,"author":{"gitId":"heyjinwei"},"content":"            e.printStackTrace();"},{"lineNumber":223,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":224,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":225,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":226,"author":{"gitId":"heyjinwei"},"content":"    private static void writeToFile(Path path) throws IOException {"},{"lineNumber":227,"author":{"gitId":"heyjinwei"},"content":"        FileWriter fw \u003d new FileWriter(path.toString());"},{"lineNumber":228,"author":{"gitId":"heyjinwei"},"content":"        for (Task t: tasks) {"},{"lineNumber":229,"author":{"gitId":"heyjinwei"},"content":"            if(\"Todo\".equals(t.getTaskType())) {"},{"lineNumber":230,"author":{"gitId":"heyjinwei"},"content":"                fw.write(t.getTaskType() + FILE_SEPARATOR + t.getDone() + FILE_SEPARATOR"},{"lineNumber":231,"author":{"gitId":"heyjinwei"},"content":"                        + t.getDescription() + \"\\n\");"},{"lineNumber":232,"author":{"gitId":"heyjinwei"},"content":"            } else {"},{"lineNumber":233,"author":{"gitId":"heyjinwei"},"content":"                fw.write(t.getTaskType() + FILE_SEPARATOR + t.getDone() + FILE_SEPARATOR"},{"lineNumber":234,"author":{"gitId":"heyjinwei"},"content":"                        + t.getDescription() + FILE_SEPARATOR  + t.getDate() + \"\\n\");"},{"lineNumber":235,"author":{"gitId":"heyjinwei"},"content":"            }"},{"lineNumber":236,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":237,"author":{"gitId":"heyjinwei"},"content":"        fw.close();"},{"lineNumber":238,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":239,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":241,"author":{"gitId":"heyjinwei"},"content":"        String home \u003d System.getProperty(\"user.home\");"},{"lineNumber":242,"author":{"gitId":"heyjinwei"},"content":"        Path path \u003d Paths.get(home, \"Documents\",\"duke.txt\");"},{"lineNumber":243,"author":{"gitId":"heyjinwei"},"content":"        printSeparator();"},{"lineNumber":244,"author":{"gitId":"heyjinwei"},"content":"        loadFile(path);"},{"lineNumber":245,"author":{"gitId":"heyjinwei"},"content":"        printSeparator();"},{"lineNumber":246,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"Greetings, fellow humans!\\nI am CI.\\nHow may I help you?\\n\");"},{"lineNumber":247,"author":{"gitId":"heyjinwei"},"content":"        printSeparator();"},{"lineNumber":248,"author":{"gitId":"heyjinwei"},"content":"        listMode();"},{"lineNumber":249,"author":{"gitId":"heyjinwei"},"content":"        try {"},{"lineNumber":250,"author":{"gitId":"heyjinwei"},"content":"            writeToFile(path);"},{"lineNumber":251,"author":{"gitId":"heyjinwei"},"content":"            System.out.print(\"File saved successfully at \" + path.toAbsolutePath() + \"\\n\");"},{"lineNumber":252,"author":{"gitId":"heyjinwei"},"content":"        } catch (IOException e) {"},{"lineNumber":253,"author":{"gitId":"heyjinwei"},"content":"            System.out.print(\"Something went wrong: \" + e.getMessage() + \"\\n\");"},{"lineNumber":254,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":255,"author":{"gitId":"heyjinwei"},"content":"        printSeparator();"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"heyjinwei":253,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"public class DukeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"    //no other code needed"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":5}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"    protected String by;"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":"    public Deadline(String description, String by, boolean isDone) {"},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":"        super(description, isDone);"},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":"    public String getDate() {"},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":"        return by;"},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":"    public String getTaskType() {"},{"lineNumber":19,"author":{"gitId":"heyjinwei"},"content":"        return \"Deadline\";"},{"lineNumber":20,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":22,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"heyjinwei"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"heyjinwei"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"},{"lineNumber":25,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":26}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"    protected String at;"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":"    public Event(String description, String at, boolean isDone) {"},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":"        super(description, isDone);"},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":"        this.at \u003d at;"},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":"    public String getDate() {"},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":"        return at;"},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":"    public String getTaskType() {"},{"lineNumber":19,"author":{"gitId":"heyjinwei"},"content":"        return \"Event\";"},{"lineNumber":20,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":22,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"heyjinwei"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"heyjinwei"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"},{"lineNumber":25,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":26}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":"    public String getDescription() {"},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":"        return description;"},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"    public void setDone() {"},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":"        isDone \u003d true;"},{"lineNumber":19,"author":{"gitId":"heyjinwei"},"content":"        System.out.print(\"Nice! I\u0027ve marked this task as done:\\n\" + this.toString() + \u0027\\n\u0027);"},{"lineNumber":20,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":22,"author":{"gitId":"heyjinwei"},"content":"    public boolean getDone() {"},{"lineNumber":23,"author":{"gitId":"heyjinwei"},"content":"        return this.isDone;"},{"lineNumber":24,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":26,"author":{"gitId":"heyjinwei"},"content":"    public String getStatusIcon() {"},{"lineNumber":27,"author":{"gitId":"heyjinwei"},"content":"        if(isDone) {"},{"lineNumber":28,"author":{"gitId":"heyjinwei"},"content":"            return \"[\\u2713] \";"},{"lineNumber":29,"author":{"gitId":"heyjinwei"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"heyjinwei"},"content":"        return \"[\\u2718] \";"},{"lineNumber":31,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":33,"author":{"gitId":"heyjinwei"},"content":"    public String getTaskType() {"},{"lineNumber":34,"author":{"gitId":"heyjinwei"},"content":"        return \"Task\";"},{"lineNumber":35,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":37,"author":{"gitId":"heyjinwei"},"content":"    public String getDate() {"},{"lineNumber":38,"author":{"gitId":"heyjinwei"},"content":"        return \"\";"},{"lineNumber":39,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":41,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"heyjinwei"},"content":"    public String toString() {"},{"lineNumber":43,"author":{"gitId":"heyjinwei"},"content":"        return this.getStatusIcon() + this.description;"},{"lineNumber":44,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":46,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":47,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":47}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"        super(description, isDone);"},{"lineNumber":7,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":9,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"heyjinwei"},"content":"    public String getTaskType() {"},{"lineNumber":11,"author":{"gitId":"heyjinwei"},"content":"        return \"Todo\";"},{"lineNumber":12,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"heyjinwei"},"content":""},{"lineNumber":14,"author":{"gitId":"heyjinwei"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"heyjinwei"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"heyjinwei"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":17,"author":{"gitId":"heyjinwei"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"heyjinwei"},"content":"}"}],"authorContributionMap":{"heyjinwei":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"heyjinwei"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"heyjinwei"},"content":"list"},{"lineNumber":3,"author":{"gitId":"heyjinwei"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"heyjinwei"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"heyjinwei"},"content":"list"},{"lineNumber":6,"author":{"gitId":"heyjinwei"},"content":"bye"}],"authorContributionMap":{"heyjinwei":6}}]
