[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"vaiish371"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"vaiish371"},"content":"1. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"vaiish371":2,"-":24}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"vaiish371"},"content":"T : X : read books"},{"lineNumber":2,"author":{"gitId":"vaiish371"},"content":"D : ✓ : test : 19 feb"},{"lineNumber":3,"author":{"gitId":"vaiish371"},"content":"T : X : clean room"}],"authorContributionMap":{"vaiish371":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaiish371"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":3,"author":{"gitId":"vaiish371"},"content":"import duke.taskclass.Deadlines;"},{"lineNumber":4,"author":{"gitId":"vaiish371"},"content":"import duke.taskclass.Events;"},{"lineNumber":5,"author":{"gitId":"vaiish371"},"content":"import duke.taskclass.Task;"},{"lineNumber":6,"author":{"gitId":"vaiish371"},"content":"import duke.taskclass.Todo;"},{"lineNumber":7,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":8,"author":{"gitId":"vaiish371"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"vaiish371"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":10,"author":{"gitId":"vaiish371"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"vaiish371"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"vaiish371"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"vaiish371"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":16,"author":{"gitId":"vaiish371"},"content":"    static final int MAX_TASK \u003d 100;"},{"lineNumber":17,"author":{"gitId":"vaiish371"},"content":"    static int taskCounter \u003d 0;"},{"lineNumber":18,"author":{"gitId":"vaiish371"},"content":"    static String userCommand;"},{"lineNumber":19,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":20,"author":{"gitId":"vaiish371"},"content":"   static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":22,"author":{"gitId":"vaiish371"},"content":"    static final Scanner input \u003d new Scanner(System.in);"},{"lineNumber":23,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":24,"author":{"gitId":"vaiish371"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":25,"author":{"gitId":"vaiish371"},"content":"        String filePath \u003d new File(\"\").getAbsolutePath();"},{"lineNumber":26,"author":{"gitId":"vaiish371"},"content":"        loadTasks(filePath+\"/data.txt\");"},{"lineNumber":27,"author":{"gitId":"vaiish371"},"content":"        printHorizontal();"},{"lineNumber":28,"author":{"gitId":"vaiish371"},"content":"        System.out.println(\"Hello! I\u0027m duke.Duke\\nWhat can I do for you?\");"},{"lineNumber":29,"author":{"gitId":"vaiish371"},"content":"        printHorizontal();"},{"lineNumber":30,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":31,"author":{"gitId":"vaiish371"},"content":"        userCommand \u003d (input.nextLine()).trim();"},{"lineNumber":32,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":33,"author":{"gitId":"vaiish371"},"content":"        while(!(userCommand.equals(\"bye\"))) {"},{"lineNumber":34,"author":{"gitId":"vaiish371"},"content":"            printHorizontal();"},{"lineNumber":35,"author":{"gitId":"vaiish371"},"content":"            if(userCommand.equals(\"list\")) {"},{"lineNumber":36,"author":{"gitId":"vaiish371"},"content":"                listTasks(tasks);"},{"lineNumber":37,"author":{"gitId":"vaiish371"},"content":"            } else if(userCommand.contains(\"done\")) {"},{"lineNumber":38,"author":{"gitId":"vaiish371"},"content":"                markTasks(tasks);"},{"lineNumber":39,"author":{"gitId":"vaiish371"},"content":"            } else if(userCommand.contains(\"todo\")) {"},{"lineNumber":40,"author":{"gitId":"vaiish371"},"content":"                addTodo(tasks);"},{"lineNumber":41,"author":{"gitId":"vaiish371"},"content":"            } else if(userCommand.contains(\"deadline\")){"},{"lineNumber":42,"author":{"gitId":"vaiish371"},"content":"                addDeadline(tasks);"},{"lineNumber":43,"author":{"gitId":"vaiish371"},"content":"            } else if(userCommand.contains(\"event\")) {"},{"lineNumber":44,"author":{"gitId":"vaiish371"},"content":"                addEvent(tasks);"},{"lineNumber":45,"author":{"gitId":"vaiish371"},"content":"            } else if(userCommand.contains(\"delete\")){"},{"lineNumber":46,"author":{"gitId":"vaiish371"},"content":"                deleteTasks(tasks);"},{"lineNumber":47,"author":{"gitId":"vaiish371"},"content":"            } else {"},{"lineNumber":48,"author":{"gitId":"vaiish371"},"content":"                System.out.println(\"Oops! Command is not valid.\");"},{"lineNumber":49,"author":{"gitId":"vaiish371"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"vaiish371"},"content":"            printHorizontal();"},{"lineNumber":51,"author":{"gitId":"vaiish371"},"content":"            userCommand \u003d (input.nextLine()).trim();"},{"lineNumber":52,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":54,"author":{"gitId":"vaiish371"},"content":"        saveTasks();"},{"lineNumber":55,"author":{"gitId":"vaiish371"},"content":"        printHorizontal();"},{"lineNumber":56,"author":{"gitId":"vaiish371"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":57,"author":{"gitId":"vaiish371"},"content":"        printHorizontal();"},{"lineNumber":58,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":60,"author":{"gitId":"vaiish371"},"content":"    public static void loadTasks(String filePath) throws FileNotFoundException {"},{"lineNumber":61,"author":{"gitId":"vaiish371"},"content":"        File f \u003d new File(filePath);"},{"lineNumber":62,"author":{"gitId":"vaiish371"},"content":"        Scanner fileContent \u003d new Scanner(f);"},{"lineNumber":63,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":64,"author":{"gitId":"vaiish371"},"content":"        while (fileContent.hasNext()) {"},{"lineNumber":65,"author":{"gitId":"vaiish371"},"content":"            String fileInput \u003d fileContent.nextLine();"},{"lineNumber":66,"author":{"gitId":"vaiish371"},"content":"            // System.out.println(fileInput);"},{"lineNumber":67,"author":{"gitId":"vaiish371"},"content":"            String[] splitLine \u003d fileInput.split(\" : \");"},{"lineNumber":68,"author":{"gitId":"vaiish371"},"content":"            // System.out.println(splitLine[0]+splitLine[1]+splitLine[2]);"},{"lineNumber":69,"author":{"gitId":"vaiish371"},"content":"            switch(splitLine[0].trim()){"},{"lineNumber":70,"author":{"gitId":"vaiish371"},"content":"                case \"T\" : tasks.add(new Todo(splitLine[2]));"},{"lineNumber":71,"author":{"gitId":"vaiish371"},"content":"                            ++taskCounter;"},{"lineNumber":72,"author":{"gitId":"vaiish371"},"content":"                            if(splitLine[1].equals(\"✓\")) {"},{"lineNumber":73,"author":{"gitId":"vaiish371"},"content":"                                tasks.get(taskCounter - 1).markAsDone();"},{"lineNumber":74,"author":{"gitId":"vaiish371"},"content":"                            }"},{"lineNumber":75,"author":{"gitId":"vaiish371"},"content":"                            break;"},{"lineNumber":76,"author":{"gitId":"vaiish371"},"content":"                case \"E\" : tasks.add(new Events(splitLine[2],splitLine[3]));"},{"lineNumber":77,"author":{"gitId":"vaiish371"},"content":"                            ++taskCounter;"},{"lineNumber":78,"author":{"gitId":"vaiish371"},"content":"                            if(splitLine[1].equals(\"✓\")) {"},{"lineNumber":79,"author":{"gitId":"vaiish371"},"content":"                                tasks.get(taskCounter - 1).markAsDone();"},{"lineNumber":80,"author":{"gitId":"vaiish371"},"content":"                            }"},{"lineNumber":81,"author":{"gitId":"vaiish371"},"content":"                            break;"},{"lineNumber":82,"author":{"gitId":"vaiish371"},"content":"                case \"D\" : tasks.add(new Deadlines(splitLine[2],splitLine[3]));"},{"lineNumber":83,"author":{"gitId":"vaiish371"},"content":"                            ++taskCounter;"},{"lineNumber":84,"author":{"gitId":"vaiish371"},"content":"                            if(splitLine[1].equals(\"✓\")) {"},{"lineNumber":85,"author":{"gitId":"vaiish371"},"content":"                                tasks.get(taskCounter - 1).markAsDone();"},{"lineNumber":86,"author":{"gitId":"vaiish371"},"content":"                            }"},{"lineNumber":87,"author":{"gitId":"vaiish371"},"content":"                            break;"},{"lineNumber":88,"author":{"gitId":"vaiish371"},"content":"                  default: System.out.println(\"Task is not valid\");"},{"lineNumber":89,"author":{"gitId":"vaiish371"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":91,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"vaiish371"},"content":"    public static void saveTasks() throws IOException {"},{"lineNumber":94,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":95,"author":{"gitId":"vaiish371"},"content":"        String filePath \u003d new File(\"\").getAbsolutePath();"},{"lineNumber":96,"author":{"gitId":"vaiish371"},"content":"        try {"},{"lineNumber":97,"author":{"gitId":"vaiish371"},"content":"            FileWriter fw \u003d new FileWriter(filePath + \"/data.txt\");"},{"lineNumber":98,"author":{"gitId":"vaiish371"},"content":"            for (Task taskObj : tasks) {"},{"lineNumber":99,"author":{"gitId":"vaiish371"},"content":"                if (taskObj instanceof Todo) {"},{"lineNumber":100,"author":{"gitId":"vaiish371"},"content":"                    if (taskObj.isDone) {"},{"lineNumber":101,"author":{"gitId":"vaiish371"},"content":"                        fw.write(\"T : ✓ : \" + taskObj.getDescription()+System.lineSeparator());"},{"lineNumber":102,"author":{"gitId":"vaiish371"},"content":"                    } else {"},{"lineNumber":103,"author":{"gitId":"vaiish371"},"content":"                        fw.write(\"T : X : \" + taskObj.getDescription()+System.lineSeparator());"},{"lineNumber":104,"author":{"gitId":"vaiish371"},"content":"                    }"},{"lineNumber":105,"author":{"gitId":"vaiish371"},"content":"                } else if (taskObj instanceof Deadlines) {"},{"lineNumber":106,"author":{"gitId":"vaiish371"},"content":"                    if (taskObj.isDone) {"},{"lineNumber":107,"author":{"gitId":"vaiish371"},"content":"                        fw.write(\"D : ✓ : \");"},{"lineNumber":108,"author":{"gitId":"vaiish371"},"content":"                    } else {"},{"lineNumber":109,"author":{"gitId":"vaiish371"},"content":"                        fw.write(\"D : X : \");"},{"lineNumber":110,"author":{"gitId":"vaiish371"},"content":"                    }"},{"lineNumber":111,"author":{"gitId":"vaiish371"},"content":"                    fw.write(taskObj.getDescription() + \" : \" + ((Deadlines) taskObj).getBy() + System.lineSeparator());"},{"lineNumber":112,"author":{"gitId":"vaiish371"},"content":"                } else if (taskObj instanceof Events) {"},{"lineNumber":113,"author":{"gitId":"vaiish371"},"content":"                    if (taskObj.isDone) {"},{"lineNumber":114,"author":{"gitId":"vaiish371"},"content":"                        fw.write(\"E : ✓ : \");"},{"lineNumber":115,"author":{"gitId":"vaiish371"},"content":"                    } else {"},{"lineNumber":116,"author":{"gitId":"vaiish371"},"content":"                        fw.write(\"E : X : \");"},{"lineNumber":117,"author":{"gitId":"vaiish371"},"content":"                    }"},{"lineNumber":118,"author":{"gitId":"vaiish371"},"content":"                    fw.write(taskObj.getDescription() + \" : \" + ((Events) taskObj).getEventTime() +  System.lineSeparator());"},{"lineNumber":119,"author":{"gitId":"vaiish371"},"content":"                } else {"},{"lineNumber":120,"author":{"gitId":"vaiish371"},"content":"                    System.out.println(\"Class not found!\");"},{"lineNumber":121,"author":{"gitId":"vaiish371"},"content":"                }"},{"lineNumber":122,"author":{"gitId":"vaiish371"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"vaiish371"},"content":"            fw.close();"},{"lineNumber":124,"author":{"gitId":"vaiish371"},"content":"        } catch (IOException e) {"},{"lineNumber":125,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"ERROR: something went wrong! :(\");"},{"lineNumber":126,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":129,"author":{"gitId":"vaiish371"},"content":"    public static void listTasks(ArrayList\u003cTask\u003e tasks){"},{"lineNumber":130,"author":{"gitId":"vaiish371"},"content":"        if(tasks.size()\u003d\u003d0) {"},{"lineNumber":131,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"No tasks are there.\");"},{"lineNumber":132,"author":{"gitId":"vaiish371"},"content":"        } else {"},{"lineNumber":133,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":134,"author":{"gitId":"vaiish371"},"content":"            for (Task taskObject: tasks ) {"},{"lineNumber":135,"author":{"gitId":"vaiish371"},"content":"                System.out.println(\"        \" + (tasks.indexOf(taskObject) + 1) + \". \" + taskObject.toString());"},{"lineNumber":136,"author":{"gitId":"vaiish371"},"content":"            }"},{"lineNumber":137,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":140,"author":{"gitId":"vaiish371"},"content":"    //This function marks the tasks as done."},{"lineNumber":141,"author":{"gitId":"vaiish371"},"content":"    public static void markTasks(ArrayList\u003cTask\u003e tasks){"},{"lineNumber":142,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":143,"author":{"gitId":"vaiish371"},"content":"        int taskIndex, taskNumAsInt;"},{"lineNumber":144,"author":{"gitId":"vaiish371"},"content":"        try {"},{"lineNumber":145,"author":{"gitId":"vaiish371"},"content":"            String taskNumAsString \u003d userCommand.substring(5);"},{"lineNumber":146,"author":{"gitId":"vaiish371"},"content":"            taskNumAsInt \u003d Integer.parseInt(taskNumAsString);"},{"lineNumber":147,"author":{"gitId":"vaiish371"},"content":"            taskIndex \u003d taskNumAsInt - 1;"},{"lineNumber":148,"author":{"gitId":"vaiish371"},"content":"            tasks.get(taskIndex).markAsDone();"},{"lineNumber":149,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator() +"},{"lineNumber":150,"author":{"gitId":"vaiish371"},"content":"                    \"        \" + taskNumAsInt + \". \" + tasks.get(taskIndex).toString());"},{"lineNumber":151,"author":{"gitId":"vaiish371"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":152,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"Task to be marked done is not specified as a number.\");"},{"lineNumber":153,"author":{"gitId":"vaiish371"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":154,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"There are no such tasks added yet.\");"},{"lineNumber":155,"author":{"gitId":"vaiish371"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":156,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"Task Number field is either empty or out of bounds.\");"},{"lineNumber":157,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":160,"author":{"gitId":"vaiish371"},"content":"    public static void deleteTasks(ArrayList\u003cTask\u003e tasks){"},{"lineNumber":161,"author":{"gitId":"vaiish371"},"content":"        int taskNumAsInt;"},{"lineNumber":162,"author":{"gitId":"vaiish371"},"content":"        try{"},{"lineNumber":163,"author":{"gitId":"vaiish371"},"content":"            String[] splitCommand \u003d userCommand.split(\" \", 2);"},{"lineNumber":164,"author":{"gitId":"vaiish371"},"content":"            taskNumAsInt \u003d Integer.parseInt(splitCommand[1]);"},{"lineNumber":165,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"Noted! I\u0027ve removed this task:\" + System.lineSeparator() +"},{"lineNumber":166,"author":{"gitId":"vaiish371"},"content":"                    \"        \" + taskNumAsInt + \". \" + tasks.get(taskNumAsInt-1).toString());"},{"lineNumber":167,"author":{"gitId":"vaiish371"},"content":"            tasks.remove(taskNumAsInt-1);"},{"lineNumber":168,"author":{"gitId":"vaiish371"},"content":"            --taskCounter;"},{"lineNumber":169,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"Now you have \"+tasks.size()+\" tasks in your list.\");"},{"lineNumber":170,"author":{"gitId":"vaiish371"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":171,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"Task to be deleted is not specified as a number.\");"},{"lineNumber":172,"author":{"gitId":"vaiish371"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":173,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"There are no such tasks yet.\");"},{"lineNumber":174,"author":{"gitId":"vaiish371"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":175,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"Task Number field is either empty or out of bounds.\");"},{"lineNumber":176,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":179,"author":{"gitId":"vaiish371"},"content":"    public static void addTodo(ArrayList\u003cTask\u003e tasks){"},{"lineNumber":180,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":181,"author":{"gitId":"vaiish371"},"content":"        try {"},{"lineNumber":182,"author":{"gitId":"vaiish371"},"content":"            String[] splitCommand \u003d userCommand.split(\" \", 2);"},{"lineNumber":183,"author":{"gitId":"vaiish371"},"content":"            tasks.add(new Todo(splitCommand[1]));"},{"lineNumber":184,"author":{"gitId":"vaiish371"},"content":"            ++taskCounter;"},{"lineNumber":185,"author":{"gitId":"vaiish371"},"content":"            printDetails(tasks);"},{"lineNumber":186,"author":{"gitId":"vaiish371"},"content":"        } catch (ArrayIndexOutOfBoundsException e){"},{"lineNumber":187,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"You have not given any description.\");"},{"lineNumber":188,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":189,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":191,"author":{"gitId":"vaiish371"},"content":"    public static void addDeadline(ArrayList\u003cTask\u003e tasks){"},{"lineNumber":192,"author":{"gitId":"vaiish371"},"content":"        String[] splitCommand \u003d userCommand.split(\" \", 2);"},{"lineNumber":193,"author":{"gitId":"vaiish371"},"content":"        String[] splitCommandAgain \u003d splitCommand[1].split(\" /by \");"},{"lineNumber":194,"author":{"gitId":"vaiish371"},"content":"        tasks.add(new Deadlines(splitCommandAgain[0], splitCommandAgain[1]));"},{"lineNumber":195,"author":{"gitId":"vaiish371"},"content":"        ++taskCounter;"},{"lineNumber":196,"author":{"gitId":"vaiish371"},"content":"        printDetails(tasks);"},{"lineNumber":197,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":199,"author":{"gitId":"vaiish371"},"content":"    public static void addEvent(ArrayList\u003cTask\u003e tasks){"},{"lineNumber":200,"author":{"gitId":"vaiish371"},"content":"        String[] splitCommand \u003d userCommand.split(\" \", 2);"},{"lineNumber":201,"author":{"gitId":"vaiish371"},"content":"        String[] splitCommandAgain \u003d splitCommand[1].split(\" /at \");"},{"lineNumber":202,"author":{"gitId":"vaiish371"},"content":"        tasks.add(new Events(splitCommandAgain[0], splitCommandAgain[1]));"},{"lineNumber":203,"author":{"gitId":"vaiish371"},"content":"        ++taskCounter;"},{"lineNumber":204,"author":{"gitId":"vaiish371"},"content":"        printDetails(tasks);"},{"lineNumber":205,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":207,"author":{"gitId":"vaiish371"},"content":"    public static void printDetails(ArrayList\u003cTask\u003e tasks){"},{"lineNumber":208,"author":{"gitId":"vaiish371"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":209,"author":{"gitId":"vaiish371"},"content":"        System.out.println(\"        \" + taskCounter + \". \" + tasks.get(taskCounter - 1).toString());"},{"lineNumber":210,"author":{"gitId":"vaiish371"},"content":"        System.out.println(\"Now you have \"+taskCounter+ \" tasks in the list.\");"},{"lineNumber":211,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":213,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":214,"author":{"gitId":"vaiish371"},"content":"    public static void printHorizontal(){"},{"lineNumber":215,"author":{"gitId":"vaiish371"},"content":"        String horizontalLine \u003d \"------------------------------------------\";"},{"lineNumber":216,"author":{"gitId":"vaiish371"},"content":"        System.out.println(horizontalLine);"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"vaiish371":215,"-":3}},{"path":"src/main/java/duke/taskclass/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaiish371"},"content":"package duke.taskclass;"},{"lineNumber":2,"author":{"gitId":"vaiish371"},"content":"public class Deadlines extends Task{"},{"lineNumber":3,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":4,"author":{"gitId":"vaiish371"},"content":"    protected String by;"},{"lineNumber":5,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":6,"author":{"gitId":"vaiish371"},"content":"    public Deadlines(String description, String by){"},{"lineNumber":7,"author":{"gitId":"vaiish371"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"vaiish371"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":11,"author":{"gitId":"vaiish371"},"content":"    public String getBy(){"},{"lineNumber":12,"author":{"gitId":"vaiish371"},"content":"        return by;"},{"lineNumber":13,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":15,"author":{"gitId":"vaiish371"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"vaiish371"},"content":"    public String toString(){"},{"lineNumber":17,"author":{"gitId":"vaiish371"},"content":"        return (\"[D]\" + super.toString() + \" (by: \"+by+\")\");"},{"lineNumber":18,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"vaiish371"},"content":"}"}],"authorContributionMap":{"vaiish371":19}},{"path":"src/main/java/duke/taskclass/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaiish371"},"content":"package duke.taskclass;"},{"lineNumber":2,"author":{"gitId":"vaiish371"},"content":"public class Events extends Task{"},{"lineNumber":3,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":4,"author":{"gitId":"vaiish371"},"content":"    protected String eventTime;"},{"lineNumber":5,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":6,"author":{"gitId":"vaiish371"},"content":"    public Events(String description, String eventTime){"},{"lineNumber":7,"author":{"gitId":"vaiish371"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"vaiish371"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":9,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":11,"author":{"gitId":"vaiish371"},"content":"    public String getEventTime(){"},{"lineNumber":12,"author":{"gitId":"vaiish371"},"content":"        return eventTime;"},{"lineNumber":13,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":15,"author":{"gitId":"vaiish371"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"vaiish371"},"content":"    public String toString(){"},{"lineNumber":17,"author":{"gitId":"vaiish371"},"content":"        return (\"[E]\" + super.toString() + \" (at: \" + eventTime + \")\");"},{"lineNumber":18,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"vaiish371"},"content":"}"}],"authorContributionMap":{"vaiish371":19}},{"path":"src/main/java/duke/taskclass/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaiish371"},"content":"package duke.taskclass;"},{"lineNumber":2,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":3,"author":{"gitId":"vaiish371"},"content":"public class Task   {"},{"lineNumber":4,"author":{"gitId":"vaiish371"},"content":"        protected String description;"},{"lineNumber":5,"author":{"gitId":"vaiish371"},"content":"        public boolean isDone;"},{"lineNumber":6,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":7,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":8,"author":{"gitId":"vaiish371"},"content":"        public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"vaiish371"},"content":"            this.description\u003d description;"},{"lineNumber":10,"author":{"gitId":"vaiish371"},"content":"            this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":12,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":13,"author":{"gitId":"vaiish371"},"content":"        public String getDescription() {"},{"lineNumber":14,"author":{"gitId":"vaiish371"},"content":"            return description;"},{"lineNumber":15,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":17,"author":{"gitId":"vaiish371"},"content":"        public void setDescription(String description) {"},{"lineNumber":18,"author":{"gitId":"vaiish371"},"content":"            this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":21,"author":{"gitId":"vaiish371"},"content":"        public String getStatusIcon() {"},{"lineNumber":22,"author":{"gitId":"vaiish371"},"content":"            return (isDone ? \"X\" : \" \"); // mark done task with X"},{"lineNumber":23,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":25,"author":{"gitId":"vaiish371"},"content":"        public void markAsDone() {"},{"lineNumber":26,"author":{"gitId":"vaiish371"},"content":"            isDone \u003d true;"},{"lineNumber":27,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":29,"author":{"gitId":"vaiish371"},"content":"        @Override"},{"lineNumber":30,"author":{"gitId":"vaiish371"},"content":"        public String toString(){"},{"lineNumber":31,"author":{"gitId":"vaiish371"},"content":"            return (\"[\" + getStatusIcon() + \"] \"+ description);"},{"lineNumber":32,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":34,"author":{"gitId":"vaiish371"},"content":"    }"}],"authorContributionMap":{"vaiish371":34}},{"path":"src/main/java/duke/taskclass/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaiish371"},"content":"package duke.taskclass;"},{"lineNumber":2,"author":{"gitId":"vaiish371"},"content":"public class Todo extends Task{"},{"lineNumber":3,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":4,"author":{"gitId":"vaiish371"},"content":"    public Todo(String description){"},{"lineNumber":5,"author":{"gitId":"vaiish371"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":8,"author":{"gitId":"vaiish371"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"vaiish371"},"content":"    public String toString(){"},{"lineNumber":10,"author":{"gitId":"vaiish371"},"content":"        return (\"[T]\" + super.toString());"},{"lineNumber":11,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":13,"author":{"gitId":"vaiish371"},"content":"}"}],"authorContributionMap":{"vaiish371":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"vaiish371"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"vaiish371"},"content":"deadlines assignment /by 19 feb"},{"lineNumber":3,"author":{"gitId":"vaiish371"},"content":"deadline assignment /by 19 feb"},{"lineNumber":4,"author":{"gitId":"vaiish371"},"content":"event meeting /at mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"vaiish371"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"vaiish371"},"content":"done 3"},{"lineNumber":7,"author":{"gitId":"vaiish371"},"content":"list"},{"lineNumber":8,"author":{"gitId":"vaiish371"},"content":"bye"}],"authorContributionMap":{"vaiish371":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"vaiish371"},"content":"javac  -cp C:\\Users\\vaiis\\Desktop\\My Folders\\Y2S2\\CS2113T\\Individual Project\\src\\main\\java\\duke.Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"vaiish371"},"content":"java -classpath C:\\Users\\vaiis\\Desktop\\My Folders\\Y2S2\\CS2113T\\Individual Project\\src\\main\\java\\duke.Duke.java"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"vaiish371":2,"-":19}}]
