[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"vaiish371"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"vaiish371"},"content":"1. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"vaiish371":2,"-":24}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaiish371"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":3,"author":{"gitId":"vaiish371"},"content":"import duke.taskclass.Deadlines;"},{"lineNumber":4,"author":{"gitId":"vaiish371"},"content":"import duke.taskclass.Events;"},{"lineNumber":5,"author":{"gitId":"vaiish371"},"content":"import duke.taskclass.Task;"},{"lineNumber":6,"author":{"gitId":"vaiish371"},"content":"import duke.taskclass.Todo;"},{"lineNumber":7,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":8,"author":{"gitId":"vaiish371"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"vaiish371"},"content":"    static final int MAX_TASK \u003d 100;"},{"lineNumber":12,"author":{"gitId":"vaiish371"},"content":"    static String userCommand;"},{"lineNumber":13,"author":{"gitId":"vaiish371"},"content":"    static int taskCounter\u003d0;"},{"lineNumber":14,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":15,"author":{"gitId":"vaiish371"},"content":"    static Task[] tasks \u003d new Task[MAX_TASK];"},{"lineNumber":16,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":17,"author":{"gitId":"vaiish371"},"content":"    static final Scanner input \u003d new Scanner(System.in);"},{"lineNumber":18,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":20,"author":{"gitId":"vaiish371"},"content":"        printHorizontal();"},{"lineNumber":21,"author":{"gitId":"vaiish371"},"content":"        System.out.println(\"Hello! I\u0027m duke.Duke\\nWhat can I do for you?\");"},{"lineNumber":22,"author":{"gitId":"vaiish371"},"content":"        printHorizontal();"},{"lineNumber":23,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":24,"author":{"gitId":"vaiish371"},"content":"        userCommand \u003d (input.nextLine()).trim();"},{"lineNumber":25,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":26,"author":{"gitId":"vaiish371"},"content":"        while(!(userCommand.equals(\"bye\"))) {"},{"lineNumber":27,"author":{"gitId":"vaiish371"},"content":"            printHorizontal();"},{"lineNumber":28,"author":{"gitId":"vaiish371"},"content":"            if(userCommand.equals(\"list\")) {"},{"lineNumber":29,"author":{"gitId":"vaiish371"},"content":"                listTasks(tasks);"},{"lineNumber":30,"author":{"gitId":"vaiish371"},"content":"            } else if(userCommand.contains(\"done\")) {"},{"lineNumber":31,"author":{"gitId":"vaiish371"},"content":"                markTasks(tasks);"},{"lineNumber":32,"author":{"gitId":"vaiish371"},"content":"            } else if(userCommand.contains(\"todo\")) {"},{"lineNumber":33,"author":{"gitId":"vaiish371"},"content":"                addTodo(tasks);"},{"lineNumber":34,"author":{"gitId":"vaiish371"},"content":"            } else if(userCommand.contains(\"deadline\")){"},{"lineNumber":35,"author":{"gitId":"vaiish371"},"content":"                addDeadline(tasks);"},{"lineNumber":36,"author":{"gitId":"vaiish371"},"content":"            } else if(userCommand.contains(\"event\")) {"},{"lineNumber":37,"author":{"gitId":"vaiish371"},"content":"                addEvent(tasks);"},{"lineNumber":38,"author":{"gitId":"vaiish371"},"content":"            } else {"},{"lineNumber":39,"author":{"gitId":"vaiish371"},"content":"                System.out.println(\"Oops! Command is not valid.\");"},{"lineNumber":40,"author":{"gitId":"vaiish371"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"vaiish371"},"content":"            printHorizontal();"},{"lineNumber":42,"author":{"gitId":"vaiish371"},"content":"            userCommand \u003d (input.nextLine()).trim();"},{"lineNumber":43,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":45,"author":{"gitId":"vaiish371"},"content":"        printHorizontal();"},{"lineNumber":46,"author":{"gitId":"vaiish371"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":47,"author":{"gitId":"vaiish371"},"content":"        printHorizontal();"},{"lineNumber":48,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":50,"author":{"gitId":"vaiish371"},"content":"    public static void listTasks(Task[] tasks){"},{"lineNumber":51,"author":{"gitId":"vaiish371"},"content":"        if(taskCounter\u003d\u003d0) {"},{"lineNumber":52,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"No tasks are there.\");"},{"lineNumber":53,"author":{"gitId":"vaiish371"},"content":"        } else {"},{"lineNumber":54,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":55,"author":{"gitId":"vaiish371"},"content":"            for (int j \u003d 0; j \u003c taskCounter; ++j) {"},{"lineNumber":56,"author":{"gitId":"vaiish371"},"content":"                System.out.println(\"        \" + (j + 1) + \". \" + tasks[j].toString());"},{"lineNumber":57,"author":{"gitId":"vaiish371"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":61,"author":{"gitId":"vaiish371"},"content":"    //This function marks the tasks as done."},{"lineNumber":62,"author":{"gitId":"vaiish371"},"content":"    public static void markTasks(Task[] tasks){"},{"lineNumber":63,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":64,"author":{"gitId":"vaiish371"},"content":"        int taskIndex, taskNumAsInt;"},{"lineNumber":65,"author":{"gitId":"vaiish371"},"content":"        try {"},{"lineNumber":66,"author":{"gitId":"vaiish371"},"content":"            String taskNumAsString \u003d userCommand.substring(5);"},{"lineNumber":67,"author":{"gitId":"vaiish371"},"content":"            taskNumAsInt \u003d Integer.parseInt(taskNumAsString);"},{"lineNumber":68,"author":{"gitId":"vaiish371"},"content":"            taskIndex \u003d taskNumAsInt - 1;"},{"lineNumber":69,"author":{"gitId":"vaiish371"},"content":"            tasks[taskIndex].markAsDone();"},{"lineNumber":70,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator() +"},{"lineNumber":71,"author":{"gitId":"vaiish371"},"content":"                    \"        \" + taskNumAsInt + \". \" + tasks[taskIndex].toString());"},{"lineNumber":72,"author":{"gitId":"vaiish371"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":73,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"Task to be marked done is not specified as a number.\");"},{"lineNumber":74,"author":{"gitId":"vaiish371"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":75,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"There are no such tasks added yet.\");"},{"lineNumber":76,"author":{"gitId":"vaiish371"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":77,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"Task Number field is either empty or out of bounds.\");"},{"lineNumber":78,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":81,"author":{"gitId":"vaiish371"},"content":"    public static void addTodo(Task[] tasks){"},{"lineNumber":82,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":83,"author":{"gitId":"vaiish371"},"content":"        try {"},{"lineNumber":84,"author":{"gitId":"vaiish371"},"content":"            String[] splitCommand \u003d userCommand.split(\" \", 2);"},{"lineNumber":85,"author":{"gitId":"vaiish371"},"content":"            tasks[taskCounter++] \u003d new Todo(splitCommand[1]);"},{"lineNumber":86,"author":{"gitId":"vaiish371"},"content":"            printDetails(tasks);"},{"lineNumber":87,"author":{"gitId":"vaiish371"},"content":"        } catch (ArrayIndexOutOfBoundsException e){"},{"lineNumber":88,"author":{"gitId":"vaiish371"},"content":"            System.out.println(\"You have not given any description.\");"},{"lineNumber":89,"author":{"gitId":"vaiish371"},"content":"            --taskCounter;"},{"lineNumber":90,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":93,"author":{"gitId":"vaiish371"},"content":"    public static void addDeadline(Task[] tasks){"},{"lineNumber":94,"author":{"gitId":"vaiish371"},"content":"        String[] splitCommand \u003d userCommand.split(\" \", 2);"},{"lineNumber":95,"author":{"gitId":"vaiish371"},"content":"        String[] splitCommandAgain \u003d splitCommand[1].split(\" /by \");"},{"lineNumber":96,"author":{"gitId":"vaiish371"},"content":"        tasks[taskCounter++] \u003d new Deadlines(splitCommandAgain[0], splitCommandAgain[1]);"},{"lineNumber":97,"author":{"gitId":"vaiish371"},"content":"        printDetails(tasks);"},{"lineNumber":98,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":100,"author":{"gitId":"vaiish371"},"content":"    public static void addEvent(Task[] tasks){"},{"lineNumber":101,"author":{"gitId":"vaiish371"},"content":"        String[] splitCommand \u003d userCommand.split(\" \", 2);"},{"lineNumber":102,"author":{"gitId":"vaiish371"},"content":"        String[] splitCommandAgain \u003d splitCommand[1].split(\" /at \");"},{"lineNumber":103,"author":{"gitId":"vaiish371"},"content":"        tasks[taskCounter++] \u003d new Events(splitCommandAgain[0], splitCommandAgain[1]);"},{"lineNumber":104,"author":{"gitId":"vaiish371"},"content":"        printDetails(tasks);"},{"lineNumber":105,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":107,"author":{"gitId":"vaiish371"},"content":"    public static void printDetails(Task[] tasks){"},{"lineNumber":108,"author":{"gitId":"vaiish371"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":109,"author":{"gitId":"vaiish371"},"content":"        System.out.println(\"        \" + taskCounter + \". \" + tasks[taskCounter-1].toString());"},{"lineNumber":110,"author":{"gitId":"vaiish371"},"content":"        System.out.println(\"Now you have \"+taskCounter+ \" tasks in the list.\");"},{"lineNumber":111,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":113,"author":{"gitId":"vaiish371"},"content":"    public static void printHorizontal(){"},{"lineNumber":114,"author":{"gitId":"vaiish371"},"content":"        String horizontalLine \u003d \"------------------------------------------\";"},{"lineNumber":115,"author":{"gitId":"vaiish371"},"content":"        System.out.println(horizontalLine);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"vaiish371":113,"-":4}},{"path":"src/main/java/duke/taskclass/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaiish371"},"content":"package duke.taskclass;"},{"lineNumber":2,"author":{"gitId":"vaiish371"},"content":"public class Deadlines extends Task{"},{"lineNumber":3,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":4,"author":{"gitId":"vaiish371"},"content":"    protected String by;"},{"lineNumber":5,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":6,"author":{"gitId":"vaiish371"},"content":"    public Deadlines(String description, String by){"},{"lineNumber":7,"author":{"gitId":"vaiish371"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"vaiish371"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":11,"author":{"gitId":"vaiish371"},"content":"    public String getBy(){"},{"lineNumber":12,"author":{"gitId":"vaiish371"},"content":"        return by;"},{"lineNumber":13,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":15,"author":{"gitId":"vaiish371"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"vaiish371"},"content":"    public String toString(){"},{"lineNumber":17,"author":{"gitId":"vaiish371"},"content":"        return (\"[D]\" + super.toString() + \" (by: \"+by+\")\");"},{"lineNumber":18,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"vaiish371"},"content":"}"}],"authorContributionMap":{"vaiish371":19}},{"path":"src/main/java/duke/taskclass/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaiish371"},"content":"package duke.taskclass;"},{"lineNumber":2,"author":{"gitId":"vaiish371"},"content":"public class Events extends Task{"},{"lineNumber":3,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":4,"author":{"gitId":"vaiish371"},"content":"    protected String eventTime;"},{"lineNumber":5,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":6,"author":{"gitId":"vaiish371"},"content":"    public Events(String description, String eventTime){"},{"lineNumber":7,"author":{"gitId":"vaiish371"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"vaiish371"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":9,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":11,"author":{"gitId":"vaiish371"},"content":"    public String getEventTime(){"},{"lineNumber":12,"author":{"gitId":"vaiish371"},"content":"        return eventTime;"},{"lineNumber":13,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":15,"author":{"gitId":"vaiish371"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"vaiish371"},"content":"    public String toString(){"},{"lineNumber":17,"author":{"gitId":"vaiish371"},"content":"        return (\"[E]\" + super.toString() + \" (at: \" + eventTime + \")\");"},{"lineNumber":18,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"vaiish371"},"content":"}"}],"authorContributionMap":{"vaiish371":19}},{"path":"src/main/java/duke/taskclass/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaiish371"},"content":"package duke.taskclass;"},{"lineNumber":2,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":3,"author":{"gitId":"vaiish371"},"content":"public class Task   {"},{"lineNumber":4,"author":{"gitId":"vaiish371"},"content":"        protected String description;"},{"lineNumber":5,"author":{"gitId":"vaiish371"},"content":"        protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":7,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":8,"author":{"gitId":"vaiish371"},"content":"        public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"vaiish371"},"content":"            this.description\u003d description;"},{"lineNumber":10,"author":{"gitId":"vaiish371"},"content":"            this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":12,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":13,"author":{"gitId":"vaiish371"},"content":"        public String getDescription() {"},{"lineNumber":14,"author":{"gitId":"vaiish371"},"content":"            return description;"},{"lineNumber":15,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":17,"author":{"gitId":"vaiish371"},"content":"        public void setDescription(String description) {"},{"lineNumber":18,"author":{"gitId":"vaiish371"},"content":"            this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":21,"author":{"gitId":"vaiish371"},"content":"        public String getStatusIcon() {"},{"lineNumber":22,"author":{"gitId":"vaiish371"},"content":"            return (isDone ? \"X\" : \" \"); // mark done task with X"},{"lineNumber":23,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":25,"author":{"gitId":"vaiish371"},"content":"        public void markAsDone() {"},{"lineNumber":26,"author":{"gitId":"vaiish371"},"content":"            isDone \u003d true;"},{"lineNumber":27,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":29,"author":{"gitId":"vaiish371"},"content":"        @Override"},{"lineNumber":30,"author":{"gitId":"vaiish371"},"content":"        public String toString(){"},{"lineNumber":31,"author":{"gitId":"vaiish371"},"content":"            return (\"[\" + getStatusIcon() + \"] \"+ description);"},{"lineNumber":32,"author":{"gitId":"vaiish371"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":34,"author":{"gitId":"vaiish371"},"content":"    }"}],"authorContributionMap":{"vaiish371":34}},{"path":"src/main/java/duke/taskclass/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vaiish371"},"content":"package duke.taskclass;"},{"lineNumber":2,"author":{"gitId":"vaiish371"},"content":"public class Todo extends Task{"},{"lineNumber":3,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":4,"author":{"gitId":"vaiish371"},"content":"    public Todo(String description){"},{"lineNumber":5,"author":{"gitId":"vaiish371"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":8,"author":{"gitId":"vaiish371"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"vaiish371"},"content":"    public String toString(){"},{"lineNumber":10,"author":{"gitId":"vaiish371"},"content":"        return (\"[T]\" + super.toString());"},{"lineNumber":11,"author":{"gitId":"vaiish371"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"vaiish371"},"content":""},{"lineNumber":13,"author":{"gitId":"vaiish371"},"content":"}"}],"authorContributionMap":{"vaiish371":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"vaiish371"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"vaiish371"},"content":"deadlines assignment /by 19 feb"},{"lineNumber":3,"author":{"gitId":"vaiish371"},"content":"deadline assignment /by 19 feb"},{"lineNumber":4,"author":{"gitId":"vaiish371"},"content":"event meeting /at mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"vaiish371"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"vaiish371"},"content":"done 3"},{"lineNumber":7,"author":{"gitId":"vaiish371"},"content":"list"},{"lineNumber":8,"author":{"gitId":"vaiish371"},"content":"bye"}],"authorContributionMap":{"vaiish371":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"vaiish371"},"content":"javac  -cp C:\\Users\\vaiis\\Desktop\\My Folders\\Y2S2\\CS2113T\\Individual Project\\src\\main\\java\\duke.Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"vaiish371"},"content":"java -classpath C:\\Users\\vaiis\\Desktop\\My Folders\\Y2S2\\CS2113T\\Individual Project\\src\\main\\java\\duke.Duke.java"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"vaiish371":2,"-":19}}]
