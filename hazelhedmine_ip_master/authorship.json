[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hazelhedmine"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":3,"author":{"gitId":"hazelhedmine"},"content":"import duke.exception.DescriptionFieldEmptyException;"},{"lineNumber":4,"author":{"gitId":"hazelhedmine"},"content":"import duke.exception.MultipleTimeFieldsException;"},{"lineNumber":5,"author":{"gitId":"hazelhedmine"},"content":"import duke.exception.TimeFieldEmptyException;"},{"lineNumber":6,"author":{"gitId":"hazelhedmine"},"content":"import duke.task.Deadline;"},{"lineNumber":7,"author":{"gitId":"hazelhedmine"},"content":"import duke.task.Event;"},{"lineNumber":8,"author":{"gitId":"hazelhedmine"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"hazelhedmine"},"content":"import duke.task.ToDo;"},{"lineNumber":10,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":11,"author":{"gitId":"hazelhedmine"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":17,"author":{"gitId":"hazelhedmine"},"content":"        Scanner userInput \u003d new Scanner(System.in);"},{"lineNumber":18,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":19,"author":{"gitId":"hazelhedmine"},"content":"        printStartingMessage();"},{"lineNumber":20,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":21,"author":{"gitId":"hazelhedmine"},"content":"        Task[] tasks \u003d new Task[100];"},{"lineNumber":22,"author":{"gitId":"hazelhedmine"},"content":"        Task task;"},{"lineNumber":23,"author":{"gitId":"hazelhedmine"},"content":"        ToDo toDo;"},{"lineNumber":24,"author":{"gitId":"hazelhedmine"},"content":"        String[] splitCommand;"},{"lineNumber":25,"author":{"gitId":"hazelhedmine"},"content":"        String[] description;"},{"lineNumber":26,"author":{"gitId":"hazelhedmine"},"content":"        String command;"},{"lineNumber":27,"author":{"gitId":"hazelhedmine"},"content":"        int numberOfTasks \u003d 0;"},{"lineNumber":28,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":29,"author":{"gitId":"hazelhedmine"},"content":"        while (!(command \u003d userInput.nextLine().trim()).equals(\"bye\")) {"},{"lineNumber":30,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":31,"author":{"gitId":"hazelhedmine"},"content":"            printHorizontalLine();"},{"lineNumber":32,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":33,"author":{"gitId":"hazelhedmine"},"content":"            if (command.equals(\"list\")) {"},{"lineNumber":34,"author":{"gitId":"hazelhedmine"},"content":"                printListMessage(tasks, numberOfTasks);"},{"lineNumber":35,"author":{"gitId":"hazelhedmine"},"content":"                printHorizontalLine();"},{"lineNumber":36,"author":{"gitId":"hazelhedmine"},"content":"                continue;"},{"lineNumber":37,"author":{"gitId":"hazelhedmine"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":39,"author":{"gitId":"hazelhedmine"},"content":"            String[] tokens \u003d command.split(\" \");"},{"lineNumber":40,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":41,"author":{"gitId":"hazelhedmine"},"content":"            switch (tokens[0]) {"},{"lineNumber":42,"author":{"gitId":"hazelhedmine"},"content":"            case \"done\":"},{"lineNumber":43,"author":{"gitId":"hazelhedmine"},"content":"                int taskNumber \u003d Integer.parseInt(tokens[1]);"},{"lineNumber":44,"author":{"gitId":"hazelhedmine"},"content":"                task \u003d tasks[taskNumber - 1];"},{"lineNumber":45,"author":{"gitId":"hazelhedmine"},"content":"                task.markAsDone();"},{"lineNumber":46,"author":{"gitId":"hazelhedmine"},"content":"                printDoneMessage(task);"},{"lineNumber":47,"author":{"gitId":"hazelhedmine"},"content":"                break;"},{"lineNumber":48,"author":{"gitId":"hazelhedmine"},"content":"            case \"deadline\":"},{"lineNumber":49,"author":{"gitId":"hazelhedmine"},"content":"                try {"},{"lineNumber":50,"author":{"gitId":"hazelhedmine"},"content":"                    splitCommand \u003d command.split(\" \", 2);"},{"lineNumber":51,"author":{"gitId":"hazelhedmine"},"content":"                    description \u003d splitCommand[1].split(\"/by\", 2);"},{"lineNumber":52,"author":{"gitId":"hazelhedmine"},"content":"                    checkForValidDeadlineInput(description);"},{"lineNumber":53,"author":{"gitId":"hazelhedmine"},"content":"                    Deadline deadline \u003d new Deadline(description[0].trim(), description[1].trim());"},{"lineNumber":54,"author":{"gitId":"hazelhedmine"},"content":"                    tasks[numberOfTasks] \u003d deadline;"},{"lineNumber":55,"author":{"gitId":"hazelhedmine"},"content":"                    printDeadlineMessage(deadline, ++numberOfTasks);"},{"lineNumber":56,"author":{"gitId":"hazelhedmine"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":57,"author":{"gitId":"hazelhedmine"},"content":"                    printMissingFieldsMessage();"},{"lineNumber":58,"author":{"gitId":"hazelhedmine"},"content":"                } catch (DescriptionFieldEmptyException e) {"},{"lineNumber":59,"author":{"gitId":"hazelhedmine"},"content":"                    printDescriptionFieldEmptyMessage();"},{"lineNumber":60,"author":{"gitId":"hazelhedmine"},"content":"                } catch (TimeFieldEmptyException e) {"},{"lineNumber":61,"author":{"gitId":"hazelhedmine"},"content":"                    printTimeFieldEmptyMessage();"},{"lineNumber":62,"author":{"gitId":"hazelhedmine"},"content":"                } catch (MultipleTimeFieldsException e) {"},{"lineNumber":63,"author":{"gitId":"hazelhedmine"},"content":"                    printTooManyTimeFieldsMessage();"},{"lineNumber":64,"author":{"gitId":"hazelhedmine"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"hazelhedmine"},"content":"                break;"},{"lineNumber":66,"author":{"gitId":"hazelhedmine"},"content":"            case \"event\":"},{"lineNumber":67,"author":{"gitId":"hazelhedmine"},"content":"                try {"},{"lineNumber":68,"author":{"gitId":"hazelhedmine"},"content":"                    splitCommand \u003d command.split(\" \", 2);"},{"lineNumber":69,"author":{"gitId":"hazelhedmine"},"content":"                    description \u003d splitCommand[1].split(\"/at\", 2);"},{"lineNumber":70,"author":{"gitId":"hazelhedmine"},"content":"                    checkForValidEventInput(description);"},{"lineNumber":71,"author":{"gitId":"hazelhedmine"},"content":"                    Event event \u003d new Event(description[0].trim(), description[1].trim());"},{"lineNumber":72,"author":{"gitId":"hazelhedmine"},"content":"                    tasks[numberOfTasks] \u003d event;"},{"lineNumber":73,"author":{"gitId":"hazelhedmine"},"content":"                    printEventMessage(event, ++numberOfTasks);"},{"lineNumber":74,"author":{"gitId":"hazelhedmine"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":75,"author":{"gitId":"hazelhedmine"},"content":"                    printMissingFieldsMessage();"},{"lineNumber":76,"author":{"gitId":"hazelhedmine"},"content":"                } catch (DescriptionFieldEmptyException e) {"},{"lineNumber":77,"author":{"gitId":"hazelhedmine"},"content":"                    printDescriptionFieldEmptyMessage();"},{"lineNumber":78,"author":{"gitId":"hazelhedmine"},"content":"                } catch (TimeFieldEmptyException e) {"},{"lineNumber":79,"author":{"gitId":"hazelhedmine"},"content":"                    printTimeFieldEmptyMessage();"},{"lineNumber":80,"author":{"gitId":"hazelhedmine"},"content":"                } catch (MultipleTimeFieldsException e) {"},{"lineNumber":81,"author":{"gitId":"hazelhedmine"},"content":"                    printTooManyTimeFieldsMessage();"},{"lineNumber":82,"author":{"gitId":"hazelhedmine"},"content":"                }"},{"lineNumber":83,"author":{"gitId":"hazelhedmine"},"content":"                break;"},{"lineNumber":84,"author":{"gitId":"hazelhedmine"},"content":"            case \"todo\":"},{"lineNumber":85,"author":{"gitId":"hazelhedmine"},"content":"                try {"},{"lineNumber":86,"author":{"gitId":"hazelhedmine"},"content":"                    toDo \u003d new ToDo(tokens[1]);"},{"lineNumber":87,"author":{"gitId":"hazelhedmine"},"content":"                    tasks[numberOfTasks] \u003d toDo;"},{"lineNumber":88,"author":{"gitId":"hazelhedmine"},"content":"                    printToDoMessage(toDo, ++numberOfTasks);"},{"lineNumber":89,"author":{"gitId":"hazelhedmine"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":90,"author":{"gitId":"hazelhedmine"},"content":"                    printMissingFieldsMessage();"},{"lineNumber":91,"author":{"gitId":"hazelhedmine"},"content":"                }"},{"lineNumber":92,"author":{"gitId":"hazelhedmine"},"content":"                break;"},{"lineNumber":93,"author":{"gitId":"hazelhedmine"},"content":"            default:"},{"lineNumber":94,"author":{"gitId":"hazelhedmine"},"content":"                printCommandDoesNotExistMessage();"},{"lineNumber":95,"author":{"gitId":"hazelhedmine"},"content":"                break;"},{"lineNumber":96,"author":{"gitId":"hazelhedmine"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":98,"author":{"gitId":"hazelhedmine"},"content":"            printHorizontalLine();"},{"lineNumber":99,"author":{"gitId":"hazelhedmine"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":101,"author":{"gitId":"hazelhedmine"},"content":"        printByeMessage();"},{"lineNumber":102,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":103,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":105,"author":{"gitId":"hazelhedmine"},"content":"    public static void printHorizontalLine() {"},{"lineNumber":106,"author":{"gitId":"hazelhedmine"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":107,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":109,"author":{"gitId":"hazelhedmine"},"content":"    public static void printStartingMessage() {"},{"lineNumber":110,"author":{"gitId":"hazelhedmine"},"content":"        System.out.println(\"Hello from\");"},{"lineNumber":111,"author":{"gitId":"hazelhedmine"},"content":"        System.out.println(\" ____        _        \\n\""},{"lineNumber":112,"author":{"gitId":"hazelhedmine"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":113,"author":{"gitId":"hazelhedmine"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":114,"author":{"gitId":"hazelhedmine"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":115,"author":{"gitId":"hazelhedmine"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\");"},{"lineNumber":116,"author":{"gitId":"hazelhedmine"},"content":"        printHorizontalLine();"},{"lineNumber":117,"author":{"gitId":"hazelhedmine"},"content":"        System.out.println(\" Hello! I\u0027m duke.Duke\");"},{"lineNumber":118,"author":{"gitId":"hazelhedmine"},"content":"        System.out.println(\" What can I do for you?\");"},{"lineNumber":119,"author":{"gitId":"hazelhedmine"},"content":"        printHorizontalLine();"},{"lineNumber":120,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":122,"author":{"gitId":"hazelhedmine"},"content":"    public static void printListMessage(Task[] tasks, int numberOfTasks) {"},{"lineNumber":123,"author":{"gitId":"hazelhedmine"},"content":"        System.out.println(\" Here are the tasks in your list:\");"},{"lineNumber":124,"author":{"gitId":"hazelhedmine"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i++) {"},{"lineNumber":125,"author":{"gitId":"hazelhedmine"},"content":"            System.out.println(\" \" + (i + 1) + \".\" + tasks[i].toString());"},{"lineNumber":126,"author":{"gitId":"hazelhedmine"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":129,"author":{"gitId":"hazelhedmine"},"content":"    public static void printDoneMessage(Task task) {"},{"lineNumber":130,"author":{"gitId":"hazelhedmine"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":131,"author":{"gitId":"hazelhedmine"},"content":"        System.out.println(\"   \" + task.toString());"},{"lineNumber":132,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":134,"author":{"gitId":"hazelhedmine"},"content":"    public static void printDeadlineMessage(Deadline deadline, int numberOfTasks) {"},{"lineNumber":135,"author":{"gitId":"hazelhedmine"},"content":"        System.out.println(\" Alright, I\u0027ve added this task:\\n   \" + deadline.toString() + \"\\n\""},{"lineNumber":136,"author":{"gitId":"hazelhedmine"},"content":"                + \" Now you have \" + numberOfTasks + \" tasks in your list.\");"},{"lineNumber":137,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":139,"author":{"gitId":"hazelhedmine"},"content":"    public static void printEventMessage(Event event, int numberOfTasks) {"},{"lineNumber":140,"author":{"gitId":"hazelhedmine"},"content":"        System.out.println(\" Alright, I\u0027ve added this task:\\n   \" + event.toString() + \"\\n\""},{"lineNumber":141,"author":{"gitId":"hazelhedmine"},"content":"                + \" Now you have \" + numberOfTasks + \" tasks in your list.\");"},{"lineNumber":142,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":144,"author":{"gitId":"hazelhedmine"},"content":"    public static void printToDoMessage(ToDo toDo, int numberOfTasks) {"},{"lineNumber":145,"author":{"gitId":"hazelhedmine"},"content":"        System.out.println(\" Alright, I\u0027ve added this task:\\n   \" + toDo.toString() + \"\\n\""},{"lineNumber":146,"author":{"gitId":"hazelhedmine"},"content":"                + \" Now you have \" + numberOfTasks + \" tasks in your list.\");"},{"lineNumber":147,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":149,"author":{"gitId":"hazelhedmine"},"content":"    public static void printByeMessage() {"},{"lineNumber":150,"author":{"gitId":"hazelhedmine"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");"},{"lineNumber":151,"author":{"gitId":"hazelhedmine"},"content":"        printHorizontalLine();"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":154,"author":{"gitId":"hazelhedmine"},"content":"    public static void checkForValidDeadlineInput(String[] input) throws DescriptionFieldEmptyException,"},{"lineNumber":155,"author":{"gitId":"hazelhedmine"},"content":"            TimeFieldEmptyException,"},{"lineNumber":156,"author":{"gitId":"hazelhedmine"},"content":"            MultipleTimeFieldsException {"},{"lineNumber":157,"author":{"gitId":"hazelhedmine"},"content":"        if (input[0].trim().equals(\"\")) {"},{"lineNumber":158,"author":{"gitId":"hazelhedmine"},"content":"            throw new DescriptionFieldEmptyException();"},{"lineNumber":159,"author":{"gitId":"hazelhedmine"},"content":"        } else if (input[1].contains(\"/by\")) {"},{"lineNumber":160,"author":{"gitId":"hazelhedmine"},"content":"            throw new MultipleTimeFieldsException();"},{"lineNumber":161,"author":{"gitId":"hazelhedmine"},"content":"        } else if (input[1].trim().equals(\"\")) {"},{"lineNumber":162,"author":{"gitId":"hazelhedmine"},"content":"            throw new TimeFieldEmptyException();"},{"lineNumber":163,"author":{"gitId":"hazelhedmine"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":166,"author":{"gitId":"hazelhedmine"},"content":"    public static void checkForValidEventInput(String[] input) throws DescriptionFieldEmptyException,"},{"lineNumber":167,"author":{"gitId":"hazelhedmine"},"content":"            TimeFieldEmptyException,"},{"lineNumber":168,"author":{"gitId":"hazelhedmine"},"content":"            MultipleTimeFieldsException {"},{"lineNumber":169,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":170,"author":{"gitId":"hazelhedmine"},"content":"        if (input[0].trim().equals(\"\")) {"},{"lineNumber":171,"author":{"gitId":"hazelhedmine"},"content":"            throw new DescriptionFieldEmptyException();"},{"lineNumber":172,"author":{"gitId":"hazelhedmine"},"content":"        } else if (input[1].contains(\"/at\")) {"},{"lineNumber":173,"author":{"gitId":"hazelhedmine"},"content":"            throw new MultipleTimeFieldsException();"},{"lineNumber":174,"author":{"gitId":"hazelhedmine"},"content":"        } else if (input[1].trim().equals(\"\")) {"},{"lineNumber":175,"author":{"gitId":"hazelhedmine"},"content":"            throw new TimeFieldEmptyException();"},{"lineNumber":176,"author":{"gitId":"hazelhedmine"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":178,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":180,"author":{"gitId":"hazelhedmine"},"content":"    public static void printDescriptionFieldEmptyMessage() {"},{"lineNumber":181,"author":{"gitId":"hazelhedmine"},"content":"        System.out.println(\" ERROR: the description field of a task cannot be empty :(\");"},{"lineNumber":182,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":184,"author":{"gitId":"hazelhedmine"},"content":"    public static void printTimeFieldEmptyMessage() {"},{"lineNumber":185,"author":{"gitId":"hazelhedmine"},"content":"        System.out.println(\" ERROR: the time field of a task cannot be empty :(\");"},{"lineNumber":186,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":188,"author":{"gitId":"hazelhedmine"},"content":"    public static void printMissingFieldsMessage() {"},{"lineNumber":189,"author":{"gitId":"hazelhedmine"},"content":"        System.out.println(\" ERROR: make sure that you\u0027ve input a description and time field!\");"},{"lineNumber":190,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":192,"author":{"gitId":"hazelhedmine"},"content":"    public static void printTooManyTimeFieldsMessage() {"},{"lineNumber":193,"author":{"gitId":"hazelhedmine"},"content":"        System.out.println(\" ERROR: too many timings, try again with just one!\");"},{"lineNumber":194,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":196,"author":{"gitId":"hazelhedmine"},"content":"    public static void printCommandDoesNotExistMessage() {"},{"lineNumber":197,"author":{"gitId":"hazelhedmine"},"content":"        System.out.println(\" ERROR: there is no such command, try again!\");"},{"lineNumber":198,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"hazelhedmine":196,"-":4}},{"path":"src/main/java/duke/exception/DescriptionFieldEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hazelhedmine"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":3,"author":{"gitId":"hazelhedmine"},"content":"public class DescriptionFieldEmptyException extends Exception {"},{"lineNumber":4,"author":{"gitId":"hazelhedmine"},"content":"}"}],"authorContributionMap":{"hazelhedmine":4}},{"path":"src/main/java/duke/exception/MultipleTimeFieldsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hazelhedmine"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":3,"author":{"gitId":"hazelhedmine"},"content":"public class MultipleTimeFieldsException extends Exception {"},{"lineNumber":4,"author":{"gitId":"hazelhedmine"},"content":"}"}],"authorContributionMap":{"hazelhedmine":4}},{"path":"src/main/java/duke/exception/TimeFieldEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hazelhedmine"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":3,"author":{"gitId":"hazelhedmine"},"content":"public class TimeFieldEmptyException extends Exception {"},{"lineNumber":4,"author":{"gitId":"hazelhedmine"},"content":"}"}],"authorContributionMap":{"hazelhedmine":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hazelhedmine"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":3,"author":{"gitId":"hazelhedmine"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"hazelhedmine"},"content":"    protected String by;"},{"lineNumber":5,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":6,"author":{"gitId":"hazelhedmine"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":7,"author":{"gitId":"hazelhedmine"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"hazelhedmine"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":11,"author":{"gitId":"hazelhedmine"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"hazelhedmine"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"hazelhedmine"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":14,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"hazelhedmine"},"content":"}"}],"authorContributionMap":{"hazelhedmine":15}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hazelhedmine"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":3,"author":{"gitId":"hazelhedmine"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"hazelhedmine"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":6,"author":{"gitId":"hazelhedmine"},"content":"    public Event(String description, String at) {"},{"lineNumber":7,"author":{"gitId":"hazelhedmine"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"hazelhedmine"},"content":"        this.at \u003d at;"},{"lineNumber":9,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":11,"author":{"gitId":"hazelhedmine"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"hazelhedmine"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"hazelhedmine"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":14,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"hazelhedmine"},"content":"}"}],"authorContributionMap":{"hazelhedmine":15}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hazelhedmine"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":3,"author":{"gitId":"hazelhedmine"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"hazelhedmine"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"hazelhedmine"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":7,"author":{"gitId":"hazelhedmine"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"hazelhedmine"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"hazelhedmine"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":12,"author":{"gitId":"hazelhedmine"},"content":"    public String getDescription() {"},{"lineNumber":13,"author":{"gitId":"hazelhedmine"},"content":"        return description;"},{"lineNumber":14,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":16,"author":{"gitId":"hazelhedmine"},"content":"    public String getStatus() {"},{"lineNumber":17,"author":{"gitId":"hazelhedmine"},"content":"        return (isDone ? \"[X] \" : \"[ ] \");"},{"lineNumber":18,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":20,"author":{"gitId":"hazelhedmine"},"content":"    public void setDescription(String description) {"},{"lineNumber":21,"author":{"gitId":"hazelhedmine"},"content":"        this.description \u003d description;"},{"lineNumber":22,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":24,"author":{"gitId":"hazelhedmine"},"content":"    public void markAsDone() {"},{"lineNumber":25,"author":{"gitId":"hazelhedmine"},"content":"        this.isDone \u003d true;"},{"lineNumber":26,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":28,"author":{"gitId":"hazelhedmine"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"hazelhedmine"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"hazelhedmine"},"content":"        return this.getStatus() + description;"},{"lineNumber":31,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"hazelhedmine"},"content":"}"}],"authorContributionMap":{"hazelhedmine":32}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hazelhedmine"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":3,"author":{"gitId":"hazelhedmine"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":5,"author":{"gitId":"hazelhedmine"},"content":"    public ToDo(String description) {"},{"lineNumber":6,"author":{"gitId":"hazelhedmine"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"hazelhedmine"},"content":""},{"lineNumber":9,"author":{"gitId":"hazelhedmine"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"hazelhedmine"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"hazelhedmine"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":12,"author":{"gitId":"hazelhedmine"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"hazelhedmine"},"content":"}"}],"authorContributionMap":{"hazelhedmine":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hazelhedmine"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"hazelhedmine"},"content":"list"},{"lineNumber":3,"author":{"gitId":"hazelhedmine"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"hazelhedmine"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"hazelhedmine"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"hazelhedmine"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":7,"author":{"gitId":"hazelhedmine"},"content":"list"},{"lineNumber":8,"author":{"gitId":"hazelhedmine"},"content":"todo"},{"lineNumber":9,"author":{"gitId":"hazelhedmine"},"content":"blah"},{"lineNumber":10,"author":{"gitId":"hazelhedmine"},"content":"bye"}],"authorContributionMap":{"hazelhedmine":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"hazelhedmine"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"hazelhedmine":1,"-":20}}]
