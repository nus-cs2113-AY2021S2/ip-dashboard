[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"brandonfoong"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"brandonfoong"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":11,"author":{"gitId":"brandonfoong"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"brandonfoong"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"brandonfoong"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"brandonfoong"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"brandonfoong"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"-":17,"brandonfoong":9}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonfoong"},"content":"public class Deadline extends Task{"},{"lineNumber":2,"author":{"gitId":"brandonfoong"},"content":"    private String dueDate;"},{"lineNumber":3,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":4,"author":{"gitId":"brandonfoong"},"content":"    public Deadline(String description, String dueDate) {"},{"lineNumber":5,"author":{"gitId":"brandonfoong"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"brandonfoong"},"content":"        this.dueDate \u003d dueDate;"},{"lineNumber":7,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":9,"author":{"gitId":"brandonfoong"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"brandonfoong"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"brandonfoong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dueDate + \")\";"},{"lineNumber":12,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"brandonfoong"},"content":"}"}],"authorContributionMap":{"brandonfoong":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonfoong"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"brandonfoong"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":6,"author":{"gitId":"brandonfoong"},"content":"    private static final String LINE_DIVIDER \u003d \"\\t____________________________________________________________\";"},{"lineNumber":7,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":9,"author":{"gitId":"brandonfoong"},"content":"        printWelcomeMessage();"},{"lineNumber":10,"author":{"gitId":"brandonfoong"},"content":"        interactWithUser();"},{"lineNumber":11,"author":{"gitId":"brandonfoong"},"content":"        printExitMessage();"},{"lineNumber":12,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":14,"author":{"gitId":"brandonfoong"},"content":"    private static void printWelcomeMessage() {"},{"lineNumber":15,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":16,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t Hello! I\u0027m Duke\");"},{"lineNumber":17,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t What can I do for you?\");"},{"lineNumber":18,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t (Type \u0027help\u0027 for a list of commands)\");"},{"lineNumber":19,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":20,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":22,"author":{"gitId":"brandonfoong"},"content":"    private static void printExitMessage() {"},{"lineNumber":23,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":24,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t Bye. Hope to see you again soon!\");"},{"lineNumber":25,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":26,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":28,"author":{"gitId":"brandonfoong"},"content":"    private static void printHelpMessage() {"},{"lineNumber":29,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":30,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t List of valid commands:\");"},{"lineNumber":31,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t bye - Exits program\");"},{"lineNumber":32,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t list - Lists all tasks\");"},{"lineNumber":33,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t done \u003ctask_number\u003e - Mark the specified task as done\");"},{"lineNumber":34,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t todo \u003ctask_description\u003e - Create a new task with the specified description\");"},{"lineNumber":35,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t deadline \u003ctask_description\u003e /by \u003cdeadline_date\u003e - \" +"},{"lineNumber":36,"author":{"gitId":"brandonfoong"},"content":"                \"Create a new task with the specified description and deadline\");"},{"lineNumber":37,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t event \u003ctask_description\u003e /at \u003cevent_date\u003e - \" +"},{"lineNumber":38,"author":{"gitId":"brandonfoong"},"content":"                \"Create a new task with the specified description and event date\");"},{"lineNumber":39,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":40,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":42,"author":{"gitId":"brandonfoong"},"content":"    private static void listTasks(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":43,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":44,"author":{"gitId":"brandonfoong"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":45,"author":{"gitId":"brandonfoong"},"content":"            System.out.println(\"\\t You have no tasks right now\");"},{"lineNumber":46,"author":{"gitId":"brandonfoong"},"content":"        } else {"},{"lineNumber":47,"author":{"gitId":"brandonfoong"},"content":"            System.out.println(\"\\t Here is a list of all your tasks:\");"},{"lineNumber":48,"author":{"gitId":"brandonfoong"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":49,"author":{"gitId":"brandonfoong"},"content":"                System.out.println(\"\\t \" + Integer.toString(i + 1) + \". \" + tasks.get(i));"},{"lineNumber":50,"author":{"gitId":"brandonfoong"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"brandonfoong"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":53,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":55,"author":{"gitId":"brandonfoong"},"content":"    private static void addTodo(ArrayList\u003cTask\u003e tasks, String description) {"},{"lineNumber":56,"author":{"gitId":"brandonfoong"},"content":"        Todo todo \u003d new Todo(description);"},{"lineNumber":57,"author":{"gitId":"brandonfoong"},"content":"        tasks.add(todo);"},{"lineNumber":58,"author":{"gitId":"brandonfoong"},"content":"        printTaskAdded(tasks, todo);"},{"lineNumber":59,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":61,"author":{"gitId":"brandonfoong"},"content":"    private static void addDeadline(ArrayList\u003cTask\u003e tasks, String description, String dueDate) {"},{"lineNumber":62,"author":{"gitId":"brandonfoong"},"content":"        Deadline deadline \u003d new Deadline(description, dueDate);"},{"lineNumber":63,"author":{"gitId":"brandonfoong"},"content":"        tasks.add(deadline);"},{"lineNumber":64,"author":{"gitId":"brandonfoong"},"content":"        printTaskAdded(tasks, deadline);"},{"lineNumber":65,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":67,"author":{"gitId":"brandonfoong"},"content":"    private static void addEvent(ArrayList\u003cTask\u003e tasks, String description, String eventDate) {"},{"lineNumber":68,"author":{"gitId":"brandonfoong"},"content":"        Event event \u003d new Event(description, eventDate);"},{"lineNumber":69,"author":{"gitId":"brandonfoong"},"content":"        tasks.add(event);"},{"lineNumber":70,"author":{"gitId":"brandonfoong"},"content":"        printTaskAdded(tasks, event);"},{"lineNumber":71,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":73,"author":{"gitId":"brandonfoong"},"content":"    private static void markTaskAsDone(ArrayList\u003cTask\u003e tasks, int taskNumber) {"},{"lineNumber":74,"author":{"gitId":"brandonfoong"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {"},{"lineNumber":75,"author":{"gitId":"brandonfoong"},"content":"            printInvalidArgumentsMessage();"},{"lineNumber":76,"author":{"gitId":"brandonfoong"},"content":"            return;"},{"lineNumber":77,"author":{"gitId":"brandonfoong"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"brandonfoong"},"content":"        /* change from 1-based indexing to 0-based indexing */"},{"lineNumber":79,"author":{"gitId":"brandonfoong"},"content":"        taskNumber \u003d taskNumber - 1;"},{"lineNumber":80,"author":{"gitId":"brandonfoong"},"content":"        tasks.get(taskNumber).markAsDone();"},{"lineNumber":81,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":82,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":83,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t   \" + tasks.get(taskNumber));"},{"lineNumber":84,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":85,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":87,"author":{"gitId":"brandonfoong"},"content":"    private static void printTaskAdded(ArrayList\u003cTask\u003e tasks, Task task) {"},{"lineNumber":88,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":89,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t added: \" + task);"},{"lineNumber":90,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(getNumTasksString(tasks.size()));"},{"lineNumber":91,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":92,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":94,"author":{"gitId":"brandonfoong"},"content":"    private static void printFallbackMessage() {"},{"lineNumber":95,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":96,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t I didn\u0027t quite catch what you were saying. Please try again.\");"},{"lineNumber":97,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t Try using \\\"help\\\" for a list of commands.\");"},{"lineNumber":98,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":99,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":101,"author":{"gitId":"brandonfoong"},"content":"    private static void printEmptyInputMessage() {"},{"lineNumber":102,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":103,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t Please enter a command!\");"},{"lineNumber":104,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":105,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":107,"author":{"gitId":"brandonfoong"},"content":"    private static void printInsufficientArgumentsMessage() {"},{"lineNumber":108,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":109,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t Please give me more details about the task!\");"},{"lineNumber":110,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":111,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":113,"author":{"gitId":"brandonfoong"},"content":"    private static void printInvalidArgumentsMessage() {"},{"lineNumber":114,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":115,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t That\u0027s an invalid task number!\");"},{"lineNumber":116,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":117,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":119,"author":{"gitId":"brandonfoong"},"content":"    private static void interactWithUser() {"},{"lineNumber":120,"author":{"gitId":"brandonfoong"},"content":"        Scanner userInput \u003d new Scanner(System.in);"},{"lineNumber":121,"author":{"gitId":"brandonfoong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":122,"author":{"gitId":"brandonfoong"},"content":"        boolean isDoneReadingInputs \u003d false;"},{"lineNumber":123,"author":{"gitId":"brandonfoong"},"content":"        while (!isDoneReadingInputs) {"},{"lineNumber":124,"author":{"gitId":"brandonfoong"},"content":"            String userCommand \u003d userInput.nextLine();"},{"lineNumber":125,"author":{"gitId":"brandonfoong"},"content":"            String[] commandTokens \u003d tokenizeInput(userCommand);"},{"lineNumber":126,"author":{"gitId":"brandonfoong"},"content":"            /* Handle empty inputs */"},{"lineNumber":127,"author":{"gitId":"brandonfoong"},"content":"            if (commandTokens.length \u003d\u003d 0) {"},{"lineNumber":128,"author":{"gitId":"brandonfoong"},"content":"                printEmptyInputMessage();"},{"lineNumber":129,"author":{"gitId":"brandonfoong"},"content":"                continue;"},{"lineNumber":130,"author":{"gitId":"brandonfoong"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"brandonfoong"},"content":"            switch (commandTokens[0]) {"},{"lineNumber":132,"author":{"gitId":"brandonfoong"},"content":"            case \"bye\":"},{"lineNumber":133,"author":{"gitId":"brandonfoong"},"content":"                isDoneReadingInputs \u003d true;"},{"lineNumber":134,"author":{"gitId":"brandonfoong"},"content":"                break;"},{"lineNumber":135,"author":{"gitId":"brandonfoong"},"content":"            case \"list\":"},{"lineNumber":136,"author":{"gitId":"brandonfoong"},"content":"                listTasks(tasks);"},{"lineNumber":137,"author":{"gitId":"brandonfoong"},"content":"                break;"},{"lineNumber":138,"author":{"gitId":"brandonfoong"},"content":"            case \"help\":"},{"lineNumber":139,"author":{"gitId":"brandonfoong"},"content":"                printHelpMessage();"},{"lineNumber":140,"author":{"gitId":"brandonfoong"},"content":"                break;"},{"lineNumber":141,"author":{"gitId":"brandonfoong"},"content":"            case \"done\":"},{"lineNumber":142,"author":{"gitId":"brandonfoong"},"content":"                if (commandTokens.length \u003c 2) {"},{"lineNumber":143,"author":{"gitId":"brandonfoong"},"content":"                    printInsufficientArgumentsMessage();"},{"lineNumber":144,"author":{"gitId":"brandonfoong"},"content":"                    break;"},{"lineNumber":145,"author":{"gitId":"brandonfoong"},"content":"                }"},{"lineNumber":146,"author":{"gitId":"brandonfoong"},"content":"                int taskNumber;"},{"lineNumber":147,"author":{"gitId":"brandonfoong"},"content":"                try {"},{"lineNumber":148,"author":{"gitId":"brandonfoong"},"content":"                    taskNumber \u003d Integer.parseInt(commandTokens[1]);"},{"lineNumber":149,"author":{"gitId":"brandonfoong"},"content":"                } catch (NumberFormatException nfe) {"},{"lineNumber":150,"author":{"gitId":"brandonfoong"},"content":"                    printInvalidArgumentsMessage();"},{"lineNumber":151,"author":{"gitId":"brandonfoong"},"content":"                    break;"},{"lineNumber":152,"author":{"gitId":"brandonfoong"},"content":"                }"},{"lineNumber":153,"author":{"gitId":"brandonfoong"},"content":"                markTaskAsDone(tasks, taskNumber);"},{"lineNumber":154,"author":{"gitId":"brandonfoong"},"content":"                break;"},{"lineNumber":155,"author":{"gitId":"brandonfoong"},"content":"            case \"todo\":"},{"lineNumber":156,"author":{"gitId":"brandonfoong"},"content":"                if (commandTokens.length \u003c 2) {"},{"lineNumber":157,"author":{"gitId":"brandonfoong"},"content":"                    printInsufficientArgumentsMessage();"},{"lineNumber":158,"author":{"gitId":"brandonfoong"},"content":"                    break;"},{"lineNumber":159,"author":{"gitId":"brandonfoong"},"content":"                }"},{"lineNumber":160,"author":{"gitId":"brandonfoong"},"content":"                addTodo(tasks, commandTokens[1]);"},{"lineNumber":161,"author":{"gitId":"brandonfoong"},"content":"                break;"},{"lineNumber":162,"author":{"gitId":"brandonfoong"},"content":"            case \"deadline\":"},{"lineNumber":163,"author":{"gitId":"brandonfoong"},"content":"                if (commandTokens.length \u003c 3) {"},{"lineNumber":164,"author":{"gitId":"brandonfoong"},"content":"                    printInsufficientArgumentsMessage();"},{"lineNumber":165,"author":{"gitId":"brandonfoong"},"content":"                    break;"},{"lineNumber":166,"author":{"gitId":"brandonfoong"},"content":"                }"},{"lineNumber":167,"author":{"gitId":"brandonfoong"},"content":"                addDeadline(tasks, commandTokens[1], commandTokens[2]);"},{"lineNumber":168,"author":{"gitId":"brandonfoong"},"content":"                break;"},{"lineNumber":169,"author":{"gitId":"brandonfoong"},"content":"            case \"event\":"},{"lineNumber":170,"author":{"gitId":"brandonfoong"},"content":"                if (commandTokens.length \u003c 3) {"},{"lineNumber":171,"author":{"gitId":"brandonfoong"},"content":"                    printInsufficientArgumentsMessage();"},{"lineNumber":172,"author":{"gitId":"brandonfoong"},"content":"                    break;"},{"lineNumber":173,"author":{"gitId":"brandonfoong"},"content":"                }"},{"lineNumber":174,"author":{"gitId":"brandonfoong"},"content":"                addEvent(tasks, commandTokens[1], commandTokens[2]);"},{"lineNumber":175,"author":{"gitId":"brandonfoong"},"content":"                break;"},{"lineNumber":176,"author":{"gitId":"brandonfoong"},"content":"            default:"},{"lineNumber":177,"author":{"gitId":"brandonfoong"},"content":"                /* Unknown command, prompt user to use the \"help\" command */"},{"lineNumber":178,"author":{"gitId":"brandonfoong"},"content":"                printFallbackMessage();"},{"lineNumber":179,"author":{"gitId":"brandonfoong"},"content":"                break;"},{"lineNumber":180,"author":{"gitId":"brandonfoong"},"content":"            }"},{"lineNumber":181,"author":{"gitId":"brandonfoong"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":184,"author":{"gitId":"brandonfoong"},"content":"    private static String[] tokenizeInput(String userCommand) {"},{"lineNumber":185,"author":{"gitId":"brandonfoong"},"content":"        String[] commandTokens \u003d userCommand.split(\" \", 2);"},{"lineNumber":186,"author":{"gitId":"brandonfoong"},"content":"        /* Handle empty inputs */"},{"lineNumber":187,"author":{"gitId":"brandonfoong"},"content":"        if (commandTokens.length \u003d\u003d 0) {"},{"lineNumber":188,"author":{"gitId":"brandonfoong"},"content":"            return commandTokens;"},{"lineNumber":189,"author":{"gitId":"brandonfoong"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"brandonfoong"},"content":"        /* Make commands case-insensitive */"},{"lineNumber":191,"author":{"gitId":"brandonfoong"},"content":"        commandTokens[0] \u003d commandTokens[0].toLowerCase();"},{"lineNumber":192,"author":{"gitId":"brandonfoong"},"content":"        String[] commandParsed \u003d commandTokens;"},{"lineNumber":193,"author":{"gitId":"brandonfoong"},"content":"        String[] commandArgs;"},{"lineNumber":194,"author":{"gitId":"brandonfoong"},"content":"        switch (commandTokens[0]) {"},{"lineNumber":195,"author":{"gitId":"brandonfoong"},"content":"        case \"deadline\":"},{"lineNumber":196,"author":{"gitId":"brandonfoong"},"content":"            if (commandTokens.length \u003e 1) {"},{"lineNumber":197,"author":{"gitId":"brandonfoong"},"content":"                commandArgs \u003d commandTokens[1].split(\"/by\");"},{"lineNumber":198,"author":{"gitId":"brandonfoong"},"content":"                commandParsed \u003d new String[commandArgs.length + 1];"},{"lineNumber":199,"author":{"gitId":"brandonfoong"},"content":"                commandParsed[0] \u003d commandTokens[0];"},{"lineNumber":200,"author":{"gitId":"brandonfoong"},"content":"                for (int i \u003d 0; i \u003c commandArgs.length; i++) {"},{"lineNumber":201,"author":{"gitId":"brandonfoong"},"content":"                    commandParsed[i + 1] \u003d commandArgs[i];"},{"lineNumber":202,"author":{"gitId":"brandonfoong"},"content":"                }"},{"lineNumber":203,"author":{"gitId":"brandonfoong"},"content":"            }"},{"lineNumber":204,"author":{"gitId":"brandonfoong"},"content":"            break;"},{"lineNumber":205,"author":{"gitId":"brandonfoong"},"content":"        case \"event\":"},{"lineNumber":206,"author":{"gitId":"brandonfoong"},"content":"            if (commandTokens.length \u003e 1) {"},{"lineNumber":207,"author":{"gitId":"brandonfoong"},"content":"                commandArgs \u003d commandTokens[1].split(\"/at\");"},{"lineNumber":208,"author":{"gitId":"brandonfoong"},"content":"                commandParsed \u003d new String[commandArgs.length + 1];"},{"lineNumber":209,"author":{"gitId":"brandonfoong"},"content":"                commandParsed[0] \u003d commandTokens[0];"},{"lineNumber":210,"author":{"gitId":"brandonfoong"},"content":"                for (int i \u003d 0; i \u003c commandArgs.length; i++) {"},{"lineNumber":211,"author":{"gitId":"brandonfoong"},"content":"                    commandParsed[i + 1] \u003d commandArgs[i];"},{"lineNumber":212,"author":{"gitId":"brandonfoong"},"content":"                }"},{"lineNumber":213,"author":{"gitId":"brandonfoong"},"content":"            }"},{"lineNumber":214,"author":{"gitId":"brandonfoong"},"content":"            break;"},{"lineNumber":215,"author":{"gitId":"brandonfoong"},"content":"        default:"},{"lineNumber":216,"author":{"gitId":"brandonfoong"},"content":"            /**"},{"lineNumber":217,"author":{"gitId":"brandonfoong"},"content":"             * For commands that do not require further tokenization"},{"lineNumber":218,"author":{"gitId":"brandonfoong"},"content":"             * e.g. \"todo\", \"list\", \"bye\""},{"lineNumber":219,"author":{"gitId":"brandonfoong"},"content":"             */"},{"lineNumber":220,"author":{"gitId":"brandonfoong"},"content":"            break;"},{"lineNumber":221,"author":{"gitId":"brandonfoong"},"content":"        }"},{"lineNumber":222,"author":{"gitId":"brandonfoong"},"content":"        /* Remove any trailing whitespace from the tokens */"},{"lineNumber":223,"author":{"gitId":"brandonfoong"},"content":"        for (int i \u003d 0; i \u003c commandParsed.length; i++) {"},{"lineNumber":224,"author":{"gitId":"brandonfoong"},"content":"            commandParsed[i] \u003d commandParsed[i].trim();"},{"lineNumber":225,"author":{"gitId":"brandonfoong"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"brandonfoong"},"content":"        return commandParsed;"},{"lineNumber":227,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":229,"author":{"gitId":"brandonfoong"},"content":"    private static String getNumTasksString(int numberOfTasks) {"},{"lineNumber":230,"author":{"gitId":"brandonfoong"},"content":"        if (numberOfTasks \u003d\u003d 1) return \"\\t You have \" + Integer.toString(numberOfTasks) + \" task in the list.\";"},{"lineNumber":231,"author":{"gitId":"brandonfoong"},"content":"        return \"\\t You have \" + Integer.toString(numberOfTasks) + \" tasks in the list.\";"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"brandonfoong":229,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonfoong"},"content":"public class Event extends Task{"},{"lineNumber":2,"author":{"gitId":"brandonfoong"},"content":"    private String eventDate;"},{"lineNumber":3,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":4,"author":{"gitId":"brandonfoong"},"content":"    public Event(String description, String eventDate) {"},{"lineNumber":5,"author":{"gitId":"brandonfoong"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"brandonfoong"},"content":"        this.eventDate \u003d eventDate;"},{"lineNumber":7,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":9,"author":{"gitId":"brandonfoong"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"brandonfoong"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"brandonfoong"},"content":"        return \"[E]\" + super.toString() + \" (on: \" + eventDate + \")\";"},{"lineNumber":12,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"brandonfoong"},"content":"}"}],"authorContributionMap":{"brandonfoong":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonfoong"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"brandonfoong"},"content":"    private String description;"},{"lineNumber":3,"author":{"gitId":"brandonfoong"},"content":"    private boolean isDone;"},{"lineNumber":4,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":5,"author":{"gitId":"brandonfoong"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"brandonfoong"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"brandonfoong"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":10,"author":{"gitId":"brandonfoong"},"content":"    public void markAsDone() {"},{"lineNumber":11,"author":{"gitId":"brandonfoong"},"content":"        this.isDone \u003d true;"},{"lineNumber":12,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":14,"author":{"gitId":"brandonfoong"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"brandonfoong"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":16,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":18,"author":{"gitId":"brandonfoong"},"content":"    private String getStatusIcon() {"},{"lineNumber":19,"author":{"gitId":"brandonfoong"},"content":"        return (isDone ? \"X\" : \" \"); // return X if task is done, and space otherwise"},{"lineNumber":20,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"brandonfoong"},"content":"}"}],"authorContributionMap":{"brandonfoong":21}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonfoong"},"content":"public class Todo extends Task{"},{"lineNumber":2,"author":{"gitId":"brandonfoong"},"content":"    public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"brandonfoong"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":6,"author":{"gitId":"brandonfoong"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"brandonfoong"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"brandonfoong"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":9,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"brandonfoong"},"content":"}"}],"authorContributionMap":{"brandonfoong":10}},{"path":"text-ui-test/EXPECTED_1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandonfoong"},"content":"\t____________________________________________________________"},{"lineNumber":2,"author":{"gitId":"brandonfoong"},"content":"\t Hello! I\u0027m Duke"},{"lineNumber":3,"author":{"gitId":"brandonfoong"},"content":"\t What can I do for you?"},{"lineNumber":4,"author":{"gitId":"brandonfoong"},"content":"\t (Type \u0027help\u0027 for a list of commands)"},{"lineNumber":5,"author":{"gitId":"brandonfoong"},"content":"\t____________________________________________________________"},{"lineNumber":6,"author":{"gitId":"brandonfoong"},"content":"\t____________________________________________________________"},{"lineNumber":7,"author":{"gitId":"brandonfoong"},"content":"\t You have no tasks right now"},{"lineNumber":8,"author":{"gitId":"brandonfoong"},"content":"\t____________________________________________________________"},{"lineNumber":9,"author":{"gitId":"brandonfoong"},"content":"\t____________________________________________________________"},{"lineNumber":10,"author":{"gitId":"brandonfoong"},"content":"\t added: [T][ ] complete this project"},{"lineNumber":11,"author":{"gitId":"brandonfoong"},"content":"\t You have 1 task in the list."},{"lineNumber":12,"author":{"gitId":"brandonfoong"},"content":"\t____________________________________________________________"},{"lineNumber":13,"author":{"gitId":"brandonfoong"},"content":"\t____________________________________________________________"},{"lineNumber":14,"author":{"gitId":"brandonfoong"},"content":"\t added: [D][ ] CS2113T ip submission (by: before the tutorial)"},{"lineNumber":15,"author":{"gitId":"brandonfoong"},"content":"\t You have 2 tasks in the list."},{"lineNumber":16,"author":{"gitId":"brandonfoong"},"content":"\t____________________________________________________________"},{"lineNumber":17,"author":{"gitId":"brandonfoong"},"content":"\t____________________________________________________________"},{"lineNumber":18,"author":{"gitId":"brandonfoong"},"content":"\t Here is a list of all your tasks:"},{"lineNumber":19,"author":{"gitId":"brandonfoong"},"content":"\t 1. [T][ ] complete this project"},{"lineNumber":20,"author":{"gitId":"brandonfoong"},"content":"\t 2. [D][ ] CS2113T ip submission (by: before the tutorial)"},{"lineNumber":21,"author":{"gitId":"brandonfoong"},"content":"\t____________________________________________________________"},{"lineNumber":22,"author":{"gitId":"brandonfoong"},"content":"\t____________________________________________________________"},{"lineNumber":23,"author":{"gitId":"brandonfoong"},"content":"\t Nice! I\u0027ve marked this task as done: "},{"lineNumber":24,"author":{"gitId":"brandonfoong"},"content":"\t   [T][X] complete this project"},{"lineNumber":25,"author":{"gitId":"brandonfoong"},"content":"\t____________________________________________________________"},{"lineNumber":26,"author":{"gitId":"brandonfoong"},"content":"\t____________________________________________________________"},{"lineNumber":27,"author":{"gitId":"brandonfoong"},"content":"\t added: [E][ ] CS2101 lecture (on: Tuesdays 10 am)"},{"lineNumber":28,"author":{"gitId":"brandonfoong"},"content":"\t You have 3 tasks in the list."},{"lineNumber":29,"author":{"gitId":"brandonfoong"},"content":"\t____________________________________________________________"},{"lineNumber":30,"author":{"gitId":"brandonfoong"},"content":"\t____________________________________________________________"},{"lineNumber":31,"author":{"gitId":"brandonfoong"},"content":"\t Here is a list of all your tasks:"},{"lineNumber":32,"author":{"gitId":"brandonfoong"},"content":"\t 1. [T][X] complete this project"},{"lineNumber":33,"author":{"gitId":"brandonfoong"},"content":"\t 2. [D][ ] CS2113T ip submission (by: before the tutorial)"},{"lineNumber":34,"author":{"gitId":"brandonfoong"},"content":"\t 3. [E][ ] CS2101 lecture (on: Tuesdays 10 am)"},{"lineNumber":35,"author":{"gitId":"brandonfoong"},"content":"\t____________________________________________________________"},{"lineNumber":36,"author":{"gitId":"brandonfoong"},"content":"\t____________________________________________________________"},{"lineNumber":37,"author":{"gitId":"brandonfoong"},"content":"\t Bye. Hope to see you again soon!"},{"lineNumber":38,"author":{"gitId":"brandonfoong"},"content":"\t____________________________________________________________"}],"authorContributionMap":{"brandonfoong":38}},{"path":"text-ui-test/INPUT_1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brandonfoong"},"content":"list"},{"lineNumber":2,"author":{"gitId":"brandonfoong"},"content":"todo complete this project"},{"lineNumber":3,"author":{"gitId":"brandonfoong"},"content":"deadline CS2113T ip submission /by before the tutorial"},{"lineNumber":4,"author":{"gitId":"brandonfoong"},"content":"list"},{"lineNumber":5,"author":{"gitId":"brandonfoong"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"brandonfoong"},"content":"event CS2101 lecture /at Tuesdays 10 am"},{"lineNumber":7,"author":{"gitId":"brandonfoong"},"content":"list"},{"lineNumber":8,"author":{"gitId":"brandonfoong"},"content":"bye"}],"authorContributionMap":{"brandonfoong":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"brandonfoong"},"content":"REM run the program, feed commands from input file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"brandonfoong"},"content":"java -classpath ..\\bin Duke \u003c INPUT_1.TXT \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"brandonfoong"},"content":"FC ACTUAL.TXT EXPECTED_1.TXT"}],"authorContributionMap":{"-":18,"brandonfoong":3}}]
