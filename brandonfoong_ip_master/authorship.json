[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"brandonfoong"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"brandonfoong"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":11,"author":{"gitId":"brandonfoong"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"brandonfoong"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"brandonfoong"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"brandonfoong"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"brandonfoong"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"-":17,"brandonfoong":9}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonfoong"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":6,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t Hello! I\u0027m Duke\");"},{"lineNumber":7,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t What can I do for you?\");"},{"lineNumber":8,"author":{"gitId":"brandonfoong"},"content":"        System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":9,"author":{"gitId":"brandonfoong"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":10,"author":{"gitId":"brandonfoong"},"content":"        Task[] tasks \u003d new Task[100];"},{"lineNumber":11,"author":{"gitId":"brandonfoong"},"content":"        int numberOfTasks \u003d 0;"},{"lineNumber":12,"author":{"gitId":"brandonfoong"},"content":"        while (true) {"},{"lineNumber":13,"author":{"gitId":"brandonfoong"},"content":"            String command \u003d sc.nextLine();"},{"lineNumber":14,"author":{"gitId":"brandonfoong"},"content":"            System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":15,"author":{"gitId":"brandonfoong"},"content":"            if (command.equals(\"bye\")) {"},{"lineNumber":16,"author":{"gitId":"brandonfoong"},"content":"                System.out.println(\"\\t Bye. Hope to see you again soon!\");"},{"lineNumber":17,"author":{"gitId":"brandonfoong"},"content":"                System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":18,"author":{"gitId":"brandonfoong"},"content":"                break;"},{"lineNumber":19,"author":{"gitId":"brandonfoong"},"content":"            } else if (command.equals(\"list\")) {"},{"lineNumber":20,"author":{"gitId":"brandonfoong"},"content":"                for (int i \u003d 0; i \u003c numberOfTasks; i++) {"},{"lineNumber":21,"author":{"gitId":"brandonfoong"},"content":"                    System.out.println(\"\\t \" + (i + 1) + \". \" + tasks[i]);"},{"lineNumber":22,"author":{"gitId":"brandonfoong"},"content":"                }"},{"lineNumber":23,"author":{"gitId":"brandonfoong"},"content":"            } else if (command.length() \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equals(\"done\")) {"},{"lineNumber":24,"author":{"gitId":"brandonfoong"},"content":"                try {"},{"lineNumber":25,"author":{"gitId":"brandonfoong"},"content":"                    int taskNumber \u003d Integer.parseInt(command.substring(5)) - 1;"},{"lineNumber":26,"author":{"gitId":"brandonfoong"},"content":"                    if (0 \u003c\u003d taskNumber \u0026\u0026 taskNumber \u003c numberOfTasks) {"},{"lineNumber":27,"author":{"gitId":"brandonfoong"},"content":"                        tasks[taskNumber].markAsDone();"},{"lineNumber":28,"author":{"gitId":"brandonfoong"},"content":"                        System.out.println(\"\\t Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":29,"author":{"gitId":"brandonfoong"},"content":"                        System.out.println(\"\\t   \" + tasks[taskNumber]);"},{"lineNumber":30,"author":{"gitId":"brandonfoong"},"content":"                    } else {"},{"lineNumber":31,"author":{"gitId":"brandonfoong"},"content":"                        System.out.println(\"\\t That\u0027s an invalid task number!\");"},{"lineNumber":32,"author":{"gitId":"brandonfoong"},"content":"                    }"},{"lineNumber":33,"author":{"gitId":"brandonfoong"},"content":"                } catch (NumberFormatException nfe) {"},{"lineNumber":34,"author":{"gitId":"brandonfoong"},"content":"                    System.out.println(\"\\t That\u0027s an invalid task number!\");"},{"lineNumber":35,"author":{"gitId":"brandonfoong"},"content":"                }"},{"lineNumber":36,"author":{"gitId":"brandonfoong"},"content":"            } else {"},{"lineNumber":37,"author":{"gitId":"brandonfoong"},"content":"                tasks[numberOfTasks] \u003d new Task(command);"},{"lineNumber":38,"author":{"gitId":"brandonfoong"},"content":"                numberOfTasks \u003d numberOfTasks + 1;"},{"lineNumber":39,"author":{"gitId":"brandonfoong"},"content":"                System.out.println(\"\\t added: \" + command);"},{"lineNumber":40,"author":{"gitId":"brandonfoong"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"brandonfoong"},"content":"            System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":42,"author":{"gitId":"brandonfoong"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"brandonfoong":40,"-":4}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brandonfoong"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"brandonfoong"},"content":"    private String description;"},{"lineNumber":3,"author":{"gitId":"brandonfoong"},"content":"    private boolean isDone;"},{"lineNumber":4,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":5,"author":{"gitId":"brandonfoong"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"brandonfoong"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"brandonfoong"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":10,"author":{"gitId":"brandonfoong"},"content":"    public void markAsDone() {"},{"lineNumber":11,"author":{"gitId":"brandonfoong"},"content":"        this.isDone \u003d true;"},{"lineNumber":12,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":14,"author":{"gitId":"brandonfoong"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"brandonfoong"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":16,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"brandonfoong"},"content":""},{"lineNumber":18,"author":{"gitId":"brandonfoong"},"content":"    private String getStatusIcon() {"},{"lineNumber":19,"author":{"gitId":"brandonfoong"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":20,"author":{"gitId":"brandonfoong"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"brandonfoong"},"content":"}"}],"authorContributionMap":{"brandonfoong":21}}]
