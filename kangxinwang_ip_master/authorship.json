[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kangxinwang"},"content":"[T][✘] read book"},{"lineNumber":2,"author":{"gitId":"kangxinwang"},"content":"[D][✘]  return book (by:h)"}],"authorContributionMap":{"kangxinwang":2}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangxinwang"},"content":"import duke.exception.DukeException;"},{"lineNumber":2,"author":{"gitId":"kangxinwang"},"content":"import duke.storage.Storage;"},{"lineNumber":3,"author":{"gitId":"kangxinwang"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"kangxinwang"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"kangxinwang"},"content":"import duke.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":7,"author":{"gitId":"kangxinwang"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"kangxinwang"},"content":" * Main class"},{"lineNumber":9,"author":{"gitId":"kangxinwang"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"kangxinwang"},"content":"    private Storage storage;"},{"lineNumber":12,"author":{"gitId":"kangxinwang"},"content":"    private TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"kangxinwang"},"content":"    private Ui ui;"},{"lineNumber":14,"author":{"gitId":"kangxinwang"},"content":"    public Duke(String filepath){"},{"lineNumber":15,"author":{"gitId":"kangxinwang"},"content":"        ui \u003d new Ui();"},{"lineNumber":16,"author":{"gitId":"kangxinwang"},"content":"        storage \u003d new Storage(filepath);"},{"lineNumber":17,"author":{"gitId":"kangxinwang"},"content":"        tasks \u003d new TaskList(storage.load());"},{"lineNumber":18,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":21,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"kangxinwang"},"content":"     * executes the program"},{"lineNumber":23,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"kangxinwang"},"content":"    public void run(){"},{"lineNumber":25,"author":{"gitId":"kangxinwang"},"content":"        Ui.helloMessage();"},{"lineNumber":26,"author":{"gitId":"kangxinwang"},"content":"        boolean isExit \u003d false;"},{"lineNumber":27,"author":{"gitId":"kangxinwang"},"content":"        while(!isExit){"},{"lineNumber":28,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":29,"author":{"gitId":"kangxinwang"},"content":"            String fullcommand \u003d ui.readCommand();"},{"lineNumber":30,"author":{"gitId":"kangxinwang"},"content":"            if (fullcommand.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":31,"author":{"gitId":"kangxinwang"},"content":"                Ui.byeMessage();"},{"lineNumber":32,"author":{"gitId":"kangxinwang"},"content":"                break;"},{"lineNumber":33,"author":{"gitId":"kangxinwang"},"content":"            } else {"},{"lineNumber":34,"author":{"gitId":"kangxinwang"},"content":"                Parser.parse(fullcommand);"},{"lineNumber":35,"author":{"gitId":"kangxinwang"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"kangxinwang"},"content":"            Ui.showLine();"},{"lineNumber":37,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":38,"author":{"gitId":"kangxinwang"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kangxinwang"},"content":"    "},{"lineNumber":41,"author":{"gitId":"kangxinwang"},"content":"    public static void main(String[] args){"},{"lineNumber":42,"author":{"gitId":"kangxinwang"},"content":"        new Duke(\"data/tasks.txt\").run();"},{"lineNumber":43,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":44,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":46,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"kangxinwang":44,"-":3}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangxinwang"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":3,"author":{"gitId":"kangxinwang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kangxinwang"},"content":" * Exception when there are invalid inputs."},{"lineNumber":5,"author":{"gitId":"kangxinwang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kangxinwang"},"content":"public class DukeException extends Exception{"},{"lineNumber":7,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":8,"author":{"gitId":"kangxinwang"},"content":"}"}],"authorContributionMap":{"kangxinwang":8}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangxinwang"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"kangxinwang"},"content":"import duke.storage.Storage;"},{"lineNumber":3,"author":{"gitId":"kangxinwang"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"kangxinwang"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":6,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":7,"author":{"gitId":"kangxinwang"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"kangxinwang"},"content":" * Handles users\u0027 input."},{"lineNumber":9,"author":{"gitId":"kangxinwang"},"content":" */"},{"lineNumber":10,"author":{"gitId":"kangxinwang"},"content":"public class Parser {"},{"lineNumber":11,"author":{"gitId":"kangxinwang"},"content":"    private static final int EVENT_LENGTH \u003d 5;"},{"lineNumber":12,"author":{"gitId":"kangxinwang"},"content":"    private static final int DEADLINE_LENGTH \u003d 8;"},{"lineNumber":13,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":14,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"kangxinwang"},"content":"     * Determines user\u0027s input and carry out the program."},{"lineNumber":16,"author":{"gitId":"kangxinwang"},"content":"     * @param input User\u0027s input."},{"lineNumber":17,"author":{"gitId":"kangxinwang"},"content":"     * if user\u0027s input is not recognised in the program, an error message is printed."},{"lineNumber":18,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"kangxinwang"},"content":"    public static void parse(String input){"},{"lineNumber":20,"author":{"gitId":"kangxinwang"},"content":"        if(input.equalsIgnoreCase(\"list\")){"},{"lineNumber":21,"author":{"gitId":"kangxinwang"},"content":"            Ui.printList();"},{"lineNumber":22,"author":{"gitId":"kangxinwang"},"content":"        } else if(input.startsWith(\"done\")) {"},{"lineNumber":23,"author":{"gitId":"kangxinwang"},"content":"            TaskList.markTaskAsDone(input);"},{"lineNumber":24,"author":{"gitId":"kangxinwang"},"content":"            Storage.writeFile();"},{"lineNumber":25,"author":{"gitId":"kangxinwang"},"content":"        } else if(input.startsWith(\"todo\")){"},{"lineNumber":26,"author":{"gitId":"kangxinwang"},"content":"            TaskList.addTodo(input);"},{"lineNumber":27,"author":{"gitId":"kangxinwang"},"content":"            Storage.writeFile();"},{"lineNumber":28,"author":{"gitId":"kangxinwang"},"content":"        } else if(input.startsWith(\"deadline\")){"},{"lineNumber":29,"author":{"gitId":"kangxinwang"},"content":"            input \u003d input.substring(DEADLINE_LENGTH);"},{"lineNumber":30,"author":{"gitId":"kangxinwang"},"content":"            TaskList.addDeadline(input);"},{"lineNumber":31,"author":{"gitId":"kangxinwang"},"content":"            Storage.writeFile();"},{"lineNumber":32,"author":{"gitId":"kangxinwang"},"content":"        } else if(input.startsWith(\"event\")){"},{"lineNumber":33,"author":{"gitId":"kangxinwang"},"content":"            input \u003d input.substring(EVENT_LENGTH);"},{"lineNumber":34,"author":{"gitId":"kangxinwang"},"content":"            TaskList.addEvent(input);"},{"lineNumber":35,"author":{"gitId":"kangxinwang"},"content":"            Storage.writeFile();"},{"lineNumber":36,"author":{"gitId":"kangxinwang"},"content":"        } else if(input.startsWith(\"delete\")){"},{"lineNumber":37,"author":{"gitId":"kangxinwang"},"content":"            TaskList.deleteTask(input);"},{"lineNumber":38,"author":{"gitId":"kangxinwang"},"content":"            Storage.writeFile();"},{"lineNumber":39,"author":{"gitId":"kangxinwang"},"content":"        } else if (input.startsWith(\"find\")) {"},{"lineNumber":40,"author":{"gitId":"kangxinwang"},"content":"            TaskList.find(input);"},{"lineNumber":41,"author":{"gitId":"kangxinwang"},"content":"            Storage.writeFile();"},{"lineNumber":42,"author":{"gitId":"kangxinwang"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":44,"author":{"gitId":"kangxinwang"},"content":"            Ui.showLine();"},{"lineNumber":45,"author":{"gitId":"kangxinwang"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":47,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":49,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":50,"author":{"gitId":"kangxinwang"},"content":"}"}],"authorContributionMap":{"kangxinwang":50}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangxinwang"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"kangxinwang"},"content":"import duke.task.Deadline;"},{"lineNumber":3,"author":{"gitId":"kangxinwang"},"content":"import duke.task.Event;"},{"lineNumber":4,"author":{"gitId":"kangxinwang"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"kangxinwang"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"kangxinwang"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":8,"author":{"gitId":"kangxinwang"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"kangxinwang"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":10,"author":{"gitId":"kangxinwang"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"kangxinwang"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"kangxinwang"},"content":"import java.nio.file.Files;"},{"lineNumber":13,"author":{"gitId":"kangxinwang"},"content":"import java.nio.file.Paths;"},{"lineNumber":14,"author":{"gitId":"kangxinwang"},"content":"import java.util.ArrayList;"},{"lineNumber":15,"author":{"gitId":"kangxinwang"},"content":"import java.util.Scanner;"},{"lineNumber":16,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":17,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":18,"author":{"gitId":"kangxinwang"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"kangxinwang"},"content":" * Handles data from text file."},{"lineNumber":20,"author":{"gitId":"kangxinwang"},"content":" */"},{"lineNumber":21,"author":{"gitId":"kangxinwang"},"content":"public class Storage {"},{"lineNumber":22,"author":{"gitId":"kangxinwang"},"content":"    private static String filePath \u003d \"data/tasks.txt\";"},{"lineNumber":23,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":24,"author":{"gitId":"kangxinwang"},"content":"    public Storage(String filepath) {"},{"lineNumber":25,"author":{"gitId":"kangxinwang"},"content":"        this.filePath \u003d filepath;"},{"lineNumber":26,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":28,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"kangxinwang"},"content":"     * @return an arraylist of tasks."},{"lineNumber":30,"author":{"gitId":"kangxinwang"},"content":"     * loads the saved text file."},{"lineNumber":31,"author":{"gitId":"kangxinwang"},"content":"     * Error message is printed if file is not found."},{"lineNumber":32,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"kangxinwang"},"content":"    public ArrayList \u003cTask\u003e load() {"},{"lineNumber":34,"author":{"gitId":"kangxinwang"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":35,"author":{"gitId":"kangxinwang"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"kangxinwang"},"content":"            if (Files.exists(Paths.get(filePath))) {"},{"lineNumber":37,"author":{"gitId":"kangxinwang"},"content":"                File f \u003d new File(filePath);"},{"lineNumber":38,"author":{"gitId":"kangxinwang"},"content":"                Scanner sc \u003d new Scanner(f);"},{"lineNumber":39,"author":{"gitId":"kangxinwang"},"content":"                while (sc.hasNext()) {"},{"lineNumber":40,"author":{"gitId":"kangxinwang"},"content":"                    String text \u003d sc.nextLine();"},{"lineNumber":41,"author":{"gitId":"kangxinwang"},"content":"                    if (text.startsWith(\"[T]\")) {"},{"lineNumber":42,"author":{"gitId":"kangxinwang"},"content":"                        String getDescription \u003d text.substring(7);"},{"lineNumber":43,"author":{"gitId":"kangxinwang"},"content":"                        tasks.add(TaskList.tasksCount, new Todo(getDescription));"},{"lineNumber":44,"author":{"gitId":"kangxinwang"},"content":"                        TaskList.tasksCount++;"},{"lineNumber":45,"author":{"gitId":"kangxinwang"},"content":"                        if (text.substring(4, 5).compareTo(\"\\u2718\") \u003d\u003d 0) {"},{"lineNumber":46,"author":{"gitId":"kangxinwang"},"content":"                            tasks.get(TaskList.tasksCount - 1).markAsDone();"},{"lineNumber":47,"author":{"gitId":"kangxinwang"},"content":"                        }"},{"lineNumber":48,"author":{"gitId":"kangxinwang"},"content":"                    } else if (text.startsWith(\"[E]\")) {"},{"lineNumber":49,"author":{"gitId":"kangxinwang"},"content":"                        String getDescription \u003d text.substring(7, text.indexOf(\"(\") - 1);"},{"lineNumber":50,"author":{"gitId":"kangxinwang"},"content":"                        String event \u003d text.substring(text.indexOf(\"(\") + 5, text.indexOf(\")\"));"},{"lineNumber":51,"author":{"gitId":"kangxinwang"},"content":"                        tasks.add(TaskList.tasksCount, new Event(getDescription, event));"},{"lineNumber":52,"author":{"gitId":"kangxinwang"},"content":"                        TaskList.tasksCount++;"},{"lineNumber":53,"author":{"gitId":"kangxinwang"},"content":"                        if (text.substring(4, 5).compareTo(\"\\u2718\") \u003d\u003d 0) {"},{"lineNumber":54,"author":{"gitId":"kangxinwang"},"content":"                            tasks.get(TaskList.tasksCount - 1).markAsDone();"},{"lineNumber":55,"author":{"gitId":"kangxinwang"},"content":"                        }"},{"lineNumber":56,"author":{"gitId":"kangxinwang"},"content":"                    } else if (text.startsWith(\"[D]\")) {"},{"lineNumber":57,"author":{"gitId":"kangxinwang"},"content":"                        String description \u003d text.substring(7, text.indexOf(\"(\") - 1);"},{"lineNumber":58,"author":{"gitId":"kangxinwang"},"content":"                        String deadline \u003d text.substring(text.indexOf(\"(\") + 5, text.indexOf(\")\"));"},{"lineNumber":59,"author":{"gitId":"kangxinwang"},"content":"                        tasks.add(TaskList.tasksCount, new Deadline(description, deadline));"},{"lineNumber":60,"author":{"gitId":"kangxinwang"},"content":"                        TaskList.tasksCount++;"},{"lineNumber":61,"author":{"gitId":"kangxinwang"},"content":"                        if (text.substring(4, 5).compareTo(\"\\u2718\") \u003d\u003d 0) {"},{"lineNumber":62,"author":{"gitId":"kangxinwang"},"content":"                            tasks.get(TaskList.tasksCount - 1).markAsDone();"},{"lineNumber":63,"author":{"gitId":"kangxinwang"},"content":"                        }"},{"lineNumber":64,"author":{"gitId":"kangxinwang"},"content":"                    }"},{"lineNumber":65,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":66,"author":{"gitId":"kangxinwang"},"content":"                }"},{"lineNumber":67,"author":{"gitId":"kangxinwang"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"kangxinwang"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":69,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(\"Error! File not found!\");"},{"lineNumber":70,"author":{"gitId":"kangxinwang"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"kangxinwang"},"content":"        return tasks;"},{"lineNumber":72,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":74,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"kangxinwang"},"content":"     * writes user\u0027s input onto a text file"},{"lineNumber":76,"author":{"gitId":"kangxinwang"},"content":"     * An error message is printed if file is unable to be written"},{"lineNumber":77,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"kangxinwang"},"content":"    public static void writeFile() {"},{"lineNumber":79,"author":{"gitId":"kangxinwang"},"content":"        try {"},{"lineNumber":80,"author":{"gitId":"kangxinwang"},"content":"            if (Files.notExists(Paths.get(\"data/\"))) {"},{"lineNumber":81,"author":{"gitId":"kangxinwang"},"content":"                Files.createDirectory(Paths.get(\"data/\"));"},{"lineNumber":82,"author":{"gitId":"kangxinwang"},"content":"            } else if (Files.notExists(Paths.get(filePath))) {"},{"lineNumber":83,"author":{"gitId":"kangxinwang"},"content":"                Files.createFile(Paths.get(filePath));"},{"lineNumber":84,"author":{"gitId":"kangxinwang"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"kangxinwang"},"content":"            FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":86,"author":{"gitId":"kangxinwang"},"content":"            for (int i \u003d 0; i \u003c TaskList.tasksCount; i++) {"},{"lineNumber":87,"author":{"gitId":"kangxinwang"},"content":"                fw.write(TaskList.get(i).toString() + System.lineSeparator());"},{"lineNumber":88,"author":{"gitId":"kangxinwang"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"kangxinwang"},"content":"            fw.close();"},{"lineNumber":90,"author":{"gitId":"kangxinwang"},"content":"        } catch (IOException e) {"},{"lineNumber":91,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(\"Error! Unable to write to file\");"},{"lineNumber":92,"author":{"gitId":"kangxinwang"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":94,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":95,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"kangxinwang"},"content":"}"},{"lineNumber":97,"author":{"gitId":"kangxinwang"},"content":""}],"authorContributionMap":{"kangxinwang":97}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangxinwang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":3,"author":{"gitId":"kangxinwang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kangxinwang"},"content":" * Task type is deadline."},{"lineNumber":5,"author":{"gitId":"kangxinwang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kangxinwang"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"kangxinwang"},"content":"    protected String by;"},{"lineNumber":8,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":9,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"kangxinwang"},"content":"     * @param description is the details of what the task is."},{"lineNumber":11,"author":{"gitId":"kangxinwang"},"content":"     * @param by is the time by which the the task should be done by."},{"lineNumber":12,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"kangxinwang"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":14,"author":{"gitId":"kangxinwang"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"kangxinwang"},"content":"        this.by \u003d by;"},{"lineNumber":16,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":18,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"kangxinwang"},"content":"     * @return the deadline description and status."},{"lineNumber":20,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"kangxinwang"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"kangxinwang"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"kangxinwang"},"content":"        return \"[D]\" + super.toString() + \" (by:\" +by + \")\";"},{"lineNumber":24,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"kangxinwang"},"content":"}"}],"authorContributionMap":{"kangxinwang":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangxinwang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":3,"author":{"gitId":"kangxinwang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kangxinwang"},"content":" * task type is event."},{"lineNumber":5,"author":{"gitId":"kangxinwang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kangxinwang"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"kangxinwang"},"content":"    protected String at;"},{"lineNumber":8,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":9,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"kangxinwang"},"content":"     * @param description is the description of the event."},{"lineNumber":11,"author":{"gitId":"kangxinwang"},"content":"     * @param at is the time which the event will be held."},{"lineNumber":12,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"kangxinwang"},"content":"    public Event(String description, String at) {"},{"lineNumber":14,"author":{"gitId":"kangxinwang"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"kangxinwang"},"content":"        this.at \u003d at;"},{"lineNumber":16,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":18,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"kangxinwang"},"content":"     * @return the event description and status."},{"lineNumber":20,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"kangxinwang"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"kangxinwang"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"kangxinwang"},"content":"        return \"[E]\"+ super.toString() + \" (at:\" +at + \")\";"},{"lineNumber":24,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"kangxinwang"},"content":"}"}],"authorContributionMap":{"kangxinwang":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangxinwang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":3,"author":{"gitId":"kangxinwang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kangxinwang"},"content":" * A parent class."},{"lineNumber":5,"author":{"gitId":"kangxinwang"},"content":" * Represents a task."},{"lineNumber":6,"author":{"gitId":"kangxinwang"},"content":" */"},{"lineNumber":7,"author":{"gitId":"kangxinwang"},"content":"public class Task {"},{"lineNumber":8,"author":{"gitId":"kangxinwang"},"content":"    protected String description;"},{"lineNumber":9,"author":{"gitId":"kangxinwang"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"kangxinwang"},"content":"    public Task(String description) {"},{"lineNumber":11,"author":{"gitId":"kangxinwang"},"content":"        this.description \u003d description;"},{"lineNumber":12,"author":{"gitId":"kangxinwang"},"content":"        this.isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":15,"author":{"gitId":"kangxinwang"},"content":"    public String getStatusIcon() {"},{"lineNumber":16,"author":{"gitId":"kangxinwang"},"content":"        return (isDone ? \"\\u2718\" : \" \"); //return blank or X symbols"},{"lineNumber":17,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":19,"author":{"gitId":"kangxinwang"},"content":"    public void markAsDone() {"},{"lineNumber":20,"author":{"gitId":"kangxinwang"},"content":"        this.isDone \u003d true;"},{"lineNumber":21,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":23,"author":{"gitId":"kangxinwang"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"kangxinwang"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"kangxinwang"},"content":"        return \"[\"+ getStatusIcon() +\"] \"+ description;"},{"lineNumber":26,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":28,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":29,"author":{"gitId":"kangxinwang"},"content":"}"}],"authorContributionMap":{"kangxinwang":29}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangxinwang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"kangxinwang"},"content":"import duke.exception.DukeException;"},{"lineNumber":3,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":4,"author":{"gitId":"kangxinwang"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":6,"author":{"gitId":"kangxinwang"},"content":"import static duke.ui.Ui.showLine;"},{"lineNumber":7,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":8,"author":{"gitId":"kangxinwang"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kangxinwang"},"content":" * Contains the task list and has operations to add/delete tasks in list."},{"lineNumber":10,"author":{"gitId":"kangxinwang"},"content":" */"},{"lineNumber":11,"author":{"gitId":"kangxinwang"},"content":"public class TaskList {"},{"lineNumber":12,"author":{"gitId":"kangxinwang"},"content":"    private static final int DONE_LENGTH \u003d 5;"},{"lineNumber":13,"author":{"gitId":"kangxinwang"},"content":"    private static final int TODO_LENGTH \u003d 5;"},{"lineNumber":14,"author":{"gitId":"kangxinwang"},"content":"    private static final int DELETE_LENGTH \u003d 7;"},{"lineNumber":15,"author":{"gitId":"kangxinwang"},"content":"    private static final int FIND_LENGTH \u003d 5;"},{"lineNumber":16,"author":{"gitId":"kangxinwang"},"content":"    private static ArrayList\u003cTask\u003e tasks;"},{"lineNumber":17,"author":{"gitId":"kangxinwang"},"content":"    public static int tasksCount \u003d0;"},{"lineNumber":18,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":19,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"kangxinwang"},"content":"     * @param tasks is the arraylist of tasks."},{"lineNumber":21,"author":{"gitId":"kangxinwang"},"content":"     * constructor for TaskList."},{"lineNumber":22,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"kangxinwang"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":24,"author":{"gitId":"kangxinwang"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":25,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":27,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"kangxinwang"},"content":"     * @return arraylist of tasks."},{"lineNumber":29,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"kangxinwang"},"content":"    public static ArrayList\u003cTask\u003e getTasks(){"},{"lineNumber":31,"author":{"gitId":"kangxinwang"},"content":"        return tasks;"},{"lineNumber":32,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":34,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"kangxinwang"},"content":"     * @param i index of tasks."},{"lineNumber":36,"author":{"gitId":"kangxinwang"},"content":"     * @return returns the task at the given index."},{"lineNumber":37,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"kangxinwang"},"content":"    public static Task get(int i){"},{"lineNumber":39,"author":{"gitId":"kangxinwang"},"content":"        return tasks.get(i);"},{"lineNumber":40,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":42,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":43,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"kangxinwang"},"content":"     * @param input user\u0027s input."},{"lineNumber":45,"author":{"gitId":"kangxinwang"},"content":"     * marks task as done."},{"lineNumber":46,"author":{"gitId":"kangxinwang"},"content":"     * if task number is invalid, error message is printed."},{"lineNumber":47,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"kangxinwang"},"content":"    public static void markTaskAsDone(String input) {"},{"lineNumber":49,"author":{"gitId":"kangxinwang"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"kangxinwang"},"content":"            int newNum \u003d Integer.parseInt(input.substring(DONE_LENGTH));"},{"lineNumber":51,"author":{"gitId":"kangxinwang"},"content":"            if (newNum \u003e tasks.size()|| newNum \u003c 0) {"},{"lineNumber":52,"author":{"gitId":"kangxinwang"},"content":"                throw new DukeException();"},{"lineNumber":53,"author":{"gitId":"kangxinwang"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":55,"author":{"gitId":"kangxinwang"},"content":"            tasks.get(newNum - 1).markAsDone();"},{"lineNumber":56,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(tasks.get(newNum - 1).toString());"},{"lineNumber":57,"author":{"gitId":"kangxinwang"},"content":"        } catch (DukeException e) {"},{"lineNumber":58,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(\"☹ OOPS!!! The task number is invalid!\");"},{"lineNumber":59,"author":{"gitId":"kangxinwang"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":61,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":63,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"kangxinwang"},"content":"     * @param input user\u0027s input."},{"lineNumber":65,"author":{"gitId":"kangxinwang"},"content":"     * deletes tasks."},{"lineNumber":66,"author":{"gitId":"kangxinwang"},"content":"     * if task number is invalid, an error message is printed."},{"lineNumber":67,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"kangxinwang"},"content":"    public static void deleteTask(String input){"},{"lineNumber":69,"author":{"gitId":"kangxinwang"},"content":"        try {"},{"lineNumber":70,"author":{"gitId":"kangxinwang"},"content":"            int newNum \u003d Integer.parseInt(input.substring(DELETE_LENGTH));"},{"lineNumber":71,"author":{"gitId":"kangxinwang"},"content":"            if (newNum \u003e tasks.size() || newNum \u003c 0) {"},{"lineNumber":72,"author":{"gitId":"kangxinwang"},"content":"                throw new ArrayIndexOutOfBoundsException();"},{"lineNumber":73,"author":{"gitId":"kangxinwang"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":75,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\" + \"\\n\"+ tasks.get(newNum-1).toString());"},{"lineNumber":76,"author":{"gitId":"kangxinwang"},"content":"            tasks.remove(newNum-1);"},{"lineNumber":77,"author":{"gitId":"kangxinwang"},"content":"            tasksCount--;"},{"lineNumber":78,"author":{"gitId":"kangxinwang"},"content":"            printTotalTasks();"},{"lineNumber":79,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":80,"author":{"gitId":"kangxinwang"},"content":"        }catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":81,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(\"☹ OOPS!!! The task number is invalid!\");"},{"lineNumber":82,"author":{"gitId":"kangxinwang"},"content":"            showLine();"},{"lineNumber":83,"author":{"gitId":"kangxinwang"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":86,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"kangxinwang"},"content":"     * @param newTask user\u0027s input."},{"lineNumber":88,"author":{"gitId":"kangxinwang"},"content":"     *  adds a todo task."},{"lineNumber":89,"author":{"gitId":"kangxinwang"},"content":"     *  if description is empty, error message is printed."},{"lineNumber":90,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"kangxinwang"},"content":"    public static void addTodo(String newTask) {"},{"lineNumber":92,"author":{"gitId":"kangxinwang"},"content":"        try {"},{"lineNumber":93,"author":{"gitId":"kangxinwang"},"content":"            newTask \u003d newTask.substring(TODO_LENGTH);"},{"lineNumber":94,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":95,"author":{"gitId":"kangxinwang"},"content":"            Todo todo \u003d new Todo(newTask);"},{"lineNumber":96,"author":{"gitId":"kangxinwang"},"content":"            tasks.add(todo);"},{"lineNumber":97,"author":{"gitId":"kangxinwang"},"content":"            tasksCount++;"},{"lineNumber":98,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(todo.toString());"},{"lineNumber":99,"author":{"gitId":"kangxinwang"},"content":"            printTotalTasks();"},{"lineNumber":100,"author":{"gitId":"kangxinwang"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":101,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":102,"author":{"gitId":"kangxinwang"},"content":"            showLine();"},{"lineNumber":103,"author":{"gitId":"kangxinwang"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":106,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"kangxinwang"},"content":"     * @param input user\u0027s input."},{"lineNumber":108,"author":{"gitId":"kangxinwang"},"content":"     * adds a deadline."},{"lineNumber":109,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"kangxinwang"},"content":"    public static void addDeadline(String input) {"},{"lineNumber":111,"author":{"gitId":"kangxinwang"},"content":"        String[] split \u003d input.split(\" /by\");"},{"lineNumber":112,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":113,"author":{"gitId":"kangxinwang"},"content":"        Deadline deadline \u003d new Deadline(split[0], split[1]);"},{"lineNumber":114,"author":{"gitId":"kangxinwang"},"content":"        tasks.add(deadline);"},{"lineNumber":115,"author":{"gitId":"kangxinwang"},"content":"        tasksCount++;"},{"lineNumber":116,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(deadline.toString());"},{"lineNumber":117,"author":{"gitId":"kangxinwang"},"content":"        printTotalTasks();"},{"lineNumber":118,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":119,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":121,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"kangxinwang"},"content":"     * prints a message that describes the number of tasks in the list."},{"lineNumber":123,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":124,"author":{"gitId":"kangxinwang"},"content":"    public static void printTotalTasks(){"},{"lineNumber":125,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(\"Now you have \"+ tasksCount+ \" tasks in the list.\");"},{"lineNumber":126,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":128,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"kangxinwang"},"content":"     * @param input user\u0027s input."},{"lineNumber":130,"author":{"gitId":"kangxinwang"},"content":"     * adds an event."},{"lineNumber":131,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"kangxinwang"},"content":"    public static void addEvent(String input) {"},{"lineNumber":133,"author":{"gitId":"kangxinwang"},"content":"        String[] split \u003d input.split(\" /at\");"},{"lineNumber":134,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":135,"author":{"gitId":"kangxinwang"},"content":"        Event event \u003d new Event(split[0], split[1]);"},{"lineNumber":136,"author":{"gitId":"kangxinwang"},"content":"        tasks.add(event);"},{"lineNumber":137,"author":{"gitId":"kangxinwang"},"content":"        tasksCount++;"},{"lineNumber":138,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(event.toString());"},{"lineNumber":139,"author":{"gitId":"kangxinwang"},"content":"        printTotalTasks();"},{"lineNumber":140,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":142,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":143,"author":{"gitId":"kangxinwang"},"content":"     * @param input user\u0027s input."},{"lineNumber":144,"author":{"gitId":"kangxinwang"},"content":"     * finds if the description entered by the user is already in database."},{"lineNumber":145,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":146,"author":{"gitId":"kangxinwang"},"content":"    public static void find(String input){"},{"lineNumber":147,"author":{"gitId":"kangxinwang"},"content":"        input \u003d input.substring(FIND_LENGTH);"},{"lineNumber":148,"author":{"gitId":"kangxinwang"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":149,"author":{"gitId":"kangxinwang"},"content":"        int foundCount \u003d0;"},{"lineNumber":150,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");"},{"lineNumber":151,"author":{"gitId":"kangxinwang"},"content":"        for(Task t:tasks){"},{"lineNumber":152,"author":{"gitId":"kangxinwang"},"content":"            if(t.description.contains(input)){"},{"lineNumber":153,"author":{"gitId":"kangxinwang"},"content":"                foundTasks.add(t);"},{"lineNumber":154,"author":{"gitId":"kangxinwang"},"content":"                System.out.println((foundCount+1)+\".\"+t.toString());"},{"lineNumber":155,"author":{"gitId":"kangxinwang"},"content":"                foundCount++;"},{"lineNumber":156,"author":{"gitId":"kangxinwang"},"content":"            }"},{"lineNumber":157,"author":{"gitId":"kangxinwang"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"kangxinwang"},"content":"}"}],"authorContributionMap":{"kangxinwang":159}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangxinwang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":3,"author":{"gitId":"kangxinwang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kangxinwang"},"content":" * Represents a todo task."},{"lineNumber":5,"author":{"gitId":"kangxinwang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kangxinwang"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"kangxinwang"},"content":"    protected boolean isDone;"},{"lineNumber":8,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":9,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"kangxinwang"},"content":"     * @param description is the description of the todo task."},{"lineNumber":11,"author":{"gitId":"kangxinwang"},"content":"     * Constructor of todo."},{"lineNumber":12,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"kangxinwang"},"content":"    public Todo(String description) {"},{"lineNumber":14,"author":{"gitId":"kangxinwang"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":17,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"kangxinwang"},"content":"     * @return the todo description and status."},{"lineNumber":19,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"kangxinwang"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"kangxinwang"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"kangxinwang"},"content":"        return \"[T]\"+ super.toString();"},{"lineNumber":23,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":25,"author":{"gitId":"kangxinwang"},"content":"}"}],"authorContributionMap":{"kangxinwang":25}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangxinwang"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":3,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":4,"author":{"gitId":"kangxinwang"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"kangxinwang"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":7,"author":{"gitId":"kangxinwang"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"kangxinwang"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":10,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":11,"author":{"gitId":"kangxinwang"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"kangxinwang"},"content":" * Interacts with users."},{"lineNumber":13,"author":{"gitId":"kangxinwang"},"content":" */"},{"lineNumber":14,"author":{"gitId":"kangxinwang"},"content":"public class Ui {"},{"lineNumber":15,"author":{"gitId":"kangxinwang"},"content":"    private static Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":16,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":17,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"kangxinwang"},"content":"     * greets the user when user first run the application."},{"lineNumber":19,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"kangxinwang"},"content":"    public static void helloMessage() {"},{"lineNumber":21,"author":{"gitId":"kangxinwang"},"content":"        showLine();"},{"lineNumber":22,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(\"Hello! I\u0027m Julia\");"},{"lineNumber":23,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":24,"author":{"gitId":"kangxinwang"},"content":"        System.out.println();"},{"lineNumber":25,"author":{"gitId":"kangxinwang"},"content":"        showLine();"},{"lineNumber":26,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":28,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"kangxinwang"},"content":"     * @param tasks arraylist of tasks."},{"lineNumber":30,"author":{"gitId":"kangxinwang"},"content":"     * prints the tasks in the list."},{"lineNumber":31,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"kangxinwang"},"content":"    public static void printTasks(ArrayList \u003cTask\u003e tasks){"},{"lineNumber":33,"author":{"gitId":"kangxinwang"},"content":"        for (int i \u003d 0; i \u003ctasks.size(); i++) {"},{"lineNumber":34,"author":{"gitId":"kangxinwang"},"content":"            System.out.printf(\"%d.%s\\n\", i + 1, tasks.get(i).toString());"},{"lineNumber":35,"author":{"gitId":"kangxinwang"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":38,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"kangxinwang"},"content":"     * prints the message and tasks list."},{"lineNumber":40,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"kangxinwang"},"content":"    public static void printList() {"},{"lineNumber":42,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(\"Here are the tasks in your list: \");"},{"lineNumber":43,"author":{"gitId":"kangxinwang"},"content":"        printTasks(TaskList.getTasks());"},{"lineNumber":44,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":45,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":47,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"kangxinwang"},"content":"     * when user enters \u0027bye\u0027, the program prints this message and exits."},{"lineNumber":49,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"kangxinwang"},"content":"    public static void byeMessage() {"},{"lineNumber":51,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":52,"author":{"gitId":"kangxinwang"},"content":"        System.out.println();"},{"lineNumber":53,"author":{"gitId":"kangxinwang"},"content":"        showLine();"},{"lineNumber":54,"author":{"gitId":"kangxinwang"},"content":"        System.exit(0);"},{"lineNumber":55,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":57,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":58,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"kangxinwang"},"content":"     * @return user\u0027s input"},{"lineNumber":60,"author":{"gitId":"kangxinwang"},"content":"     * reads user\u0027s input"},{"lineNumber":61,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"kangxinwang"},"content":"    public static String readCommand(){"},{"lineNumber":63,"author":{"gitId":"kangxinwang"},"content":"        String input \u003d scanner.nextLine();"},{"lineNumber":64,"author":{"gitId":"kangxinwang"},"content":"        return input;"},{"lineNumber":65,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":67,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":68,"author":{"gitId":"kangxinwang"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"kangxinwang"},"content":"     * prints a line as separator"},{"lineNumber":70,"author":{"gitId":"kangxinwang"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"kangxinwang"},"content":"    public static void showLine(){"},{"lineNumber":72,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(\"*********************************************\");"},{"lineNumber":73,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":75,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":76,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":77,"author":{"gitId":"kangxinwang"},"content":"}"}],"authorContributionMap":{"kangxinwang":77}}]
