[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kangxinwang"},"content":"[T][ ] run"}],"authorContributionMap":{"kangxinwang":1}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangxinwang"},"content":"import duke.command.ArrayIndexOutOfBoundsException;"},{"lineNumber":2,"author":{"gitId":"kangxinwang"},"content":"import duke.task.Deadline;"},{"lineNumber":3,"author":{"gitId":"kangxinwang"},"content":"import duke.task.Event;"},{"lineNumber":4,"author":{"gitId":"kangxinwang"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"kangxinwang"},"content":"import duke.task.Todo;"},{"lineNumber":6,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":7,"author":{"gitId":"kangxinwang"},"content":"import java.io.File;"},{"lineNumber":8,"author":{"gitId":"kangxinwang"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":9,"author":{"gitId":"kangxinwang"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"kangxinwang"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"kangxinwang"},"content":"import java.nio.file.Files;"},{"lineNumber":12,"author":{"gitId":"kangxinwang"},"content":"import java.nio.file.Paths;"},{"lineNumber":13,"author":{"gitId":"kangxinwang"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"kangxinwang"},"content":"import java.util.Scanner;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":16,"author":{"gitId":"kangxinwang"},"content":"    private static final int DONE_LENGTH \u003d 5;"},{"lineNumber":17,"author":{"gitId":"kangxinwang"},"content":"    private static final int EVENT_LENGTH \u003d 5;"},{"lineNumber":18,"author":{"gitId":"kangxinwang"},"content":"    private static final int TODO_LENGTH \u003d 5;"},{"lineNumber":19,"author":{"gitId":"kangxinwang"},"content":"    private static final int DEADLINE_LENGTH \u003d 8;"},{"lineNumber":20,"author":{"gitId":"kangxinwang"},"content":"    private static final int DELETE_LENGTH \u003d 7;"},{"lineNumber":21,"author":{"gitId":"kangxinwang"},"content":"    private static Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":22,"author":{"gitId":"kangxinwang"},"content":"    private static int tasksCount \u003d 0;"},{"lineNumber":23,"author":{"gitId":"kangxinwang"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"kangxinwang"},"content":"    private static String line \u003d \"*********************************************\";"},{"lineNumber":25,"author":{"gitId":"kangxinwang"},"content":"    private static String filePath \u003d \"data/tasks.txt\";"},{"lineNumber":26,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":27,"author":{"gitId":"kangxinwang"},"content":"    private static void helloMessage() {"},{"lineNumber":28,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(line);"},{"lineNumber":29,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(\"Hello! I\u0027m Julia\");"},{"lineNumber":30,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":31,"author":{"gitId":"kangxinwang"},"content":"        System.out.println();"},{"lineNumber":32,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(line);"},{"lineNumber":33,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"kangxinwang"},"content":"    private static void byeMessage() {"},{"lineNumber":35,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":36,"author":{"gitId":"kangxinwang"},"content":"        System.out.println();"},{"lineNumber":37,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(line);"},{"lineNumber":38,"author":{"gitId":"kangxinwang"},"content":"        System.exit(0);"},{"lineNumber":39,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":41,"author":{"gitId":"kangxinwang"},"content":"    public static void printList(ArrayList\u003cTask\u003e tasks){"},{"lineNumber":42,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(\"Here are the tasks in your list: \");"},{"lineNumber":43,"author":{"gitId":"kangxinwang"},"content":"        for (int i \u003d 0; i \u003c tasksCount; i++) {"},{"lineNumber":44,"author":{"gitId":"kangxinwang"},"content":"            System.out.printf(\"%d.%s\\n\", i + 1, tasks.get(i).toString());"},{"lineNumber":45,"author":{"gitId":"kangxinwang"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(line);"},{"lineNumber":47,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":49,"author":{"gitId":"kangxinwang"},"content":"    public static void deleteTask(String input){"},{"lineNumber":50,"author":{"gitId":"kangxinwang"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"kangxinwang"},"content":"            int newNum \u003d Integer.parseInt(input.substring(DELETE_LENGTH));"},{"lineNumber":52,"author":{"gitId":"kangxinwang"},"content":"            if (newNum \u003e tasksCount || newNum \u003c 0) {"},{"lineNumber":53,"author":{"gitId":"kangxinwang"},"content":"                throw new ArrayIndexOutOfBoundsException();"},{"lineNumber":54,"author":{"gitId":"kangxinwang"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":56,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\" + \"\\n\"+ tasks.get(newNum-1).toString());"},{"lineNumber":57,"author":{"gitId":"kangxinwang"},"content":"            tasks.remove(newNum-1);"},{"lineNumber":58,"author":{"gitId":"kangxinwang"},"content":"            tasksCount--;"},{"lineNumber":59,"author":{"gitId":"kangxinwang"},"content":"            printTotalTasks();"},{"lineNumber":60,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":61,"author":{"gitId":"kangxinwang"},"content":"        }catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":62,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(\"☹ OOPS!!! The task number is invalid!\");"},{"lineNumber":63,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(line);"},{"lineNumber":64,"author":{"gitId":"kangxinwang"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":67,"author":{"gitId":"kangxinwang"},"content":"    public static void markTaskAsDone(String input){"},{"lineNumber":68,"author":{"gitId":"kangxinwang"},"content":"        try {"},{"lineNumber":69,"author":{"gitId":"kangxinwang"},"content":"            int newNum \u003d Integer.parseInt(input.substring(DONE_LENGTH));"},{"lineNumber":70,"author":{"gitId":"kangxinwang"},"content":"            if (newNum \u003e tasksCount || newNum \u003c 0) {"},{"lineNumber":71,"author":{"gitId":"kangxinwang"},"content":"                throw new ArrayIndexOutOfBoundsException();"},{"lineNumber":72,"author":{"gitId":"kangxinwang"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":74,"author":{"gitId":"kangxinwang"},"content":"            tasks.get(newNum - 1).markAsDone();"},{"lineNumber":75,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(tasks.get(newNum-1).toString());"},{"lineNumber":76,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(line);"},{"lineNumber":77,"author":{"gitId":"kangxinwang"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":78,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(\"☹ OOPS!!! The task number is invalid!\");"},{"lineNumber":79,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(line);"},{"lineNumber":80,"author":{"gitId":"kangxinwang"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":82,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":84,"author":{"gitId":"kangxinwang"},"content":"    public static void addTodo(String newTask) {"},{"lineNumber":85,"author":{"gitId":"kangxinwang"},"content":"        try {"},{"lineNumber":86,"author":{"gitId":"kangxinwang"},"content":"            newTask \u003d newTask.substring(TODO_LENGTH);"},{"lineNumber":87,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":88,"author":{"gitId":"kangxinwang"},"content":"            Todo todo \u003d new Todo(newTask);"},{"lineNumber":89,"author":{"gitId":"kangxinwang"},"content":"            tasks.add(todo);"},{"lineNumber":90,"author":{"gitId":"kangxinwang"},"content":"            tasksCount++;"},{"lineNumber":91,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(todo.toString());"},{"lineNumber":92,"author":{"gitId":"kangxinwang"},"content":"            printTotalTasks();"},{"lineNumber":93,"author":{"gitId":"kangxinwang"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":94,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":95,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(line);"},{"lineNumber":96,"author":{"gitId":"kangxinwang"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":99,"author":{"gitId":"kangxinwang"},"content":"    public static void addDeadline(String input) {"},{"lineNumber":100,"author":{"gitId":"kangxinwang"},"content":"        String[] split \u003d input.split(\" /by\");"},{"lineNumber":101,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":102,"author":{"gitId":"kangxinwang"},"content":"        Deadline deadline \u003d new Deadline(split[0], split[1]);"},{"lineNumber":103,"author":{"gitId":"kangxinwang"},"content":"        tasks.add(deadline);"},{"lineNumber":104,"author":{"gitId":"kangxinwang"},"content":"        tasksCount++;"},{"lineNumber":105,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(deadline.toString());"},{"lineNumber":106,"author":{"gitId":"kangxinwang"},"content":"        printTotalTasks();"},{"lineNumber":107,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":108,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"kangxinwang"},"content":"    public static void printTotalTasks(){"},{"lineNumber":110,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(\"Now you have \"+ tasksCount+ \" tasks in the list.\");"},{"lineNumber":111,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(line);"},{"lineNumber":112,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":114,"author":{"gitId":"kangxinwang"},"content":"    public static void addEvent(String input) {"},{"lineNumber":115,"author":{"gitId":"kangxinwang"},"content":"        String[] split \u003d input.split(\" /at\");"},{"lineNumber":116,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":117,"author":{"gitId":"kangxinwang"},"content":"        Event event \u003d new Event(split[0], split[1]);"},{"lineNumber":118,"author":{"gitId":"kangxinwang"},"content":"        tasks.add(event);"},{"lineNumber":119,"author":{"gitId":"kangxinwang"},"content":"        tasksCount++;"},{"lineNumber":120,"author":{"gitId":"kangxinwang"},"content":"        System.out.println(event.toString());"},{"lineNumber":121,"author":{"gitId":"kangxinwang"},"content":"        printTotalTasks();"},{"lineNumber":122,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"kangxinwang"},"content":"    public static void readFile(){"},{"lineNumber":124,"author":{"gitId":"kangxinwang"},"content":"        try {"},{"lineNumber":125,"author":{"gitId":"kangxinwang"},"content":"            if(Files.exists(Paths.get(filePath))){"},{"lineNumber":126,"author":{"gitId":"kangxinwang"},"content":"                File f \u003d new File(filePath);"},{"lineNumber":127,"author":{"gitId":"kangxinwang"},"content":"                Scanner sc \u003d new Scanner(f);"},{"lineNumber":128,"author":{"gitId":"kangxinwang"},"content":"                while (sc.hasNext()) {"},{"lineNumber":129,"author":{"gitId":"kangxinwang"},"content":"                    String text \u003d sc.nextLine();"},{"lineNumber":130,"author":{"gitId":"kangxinwang"},"content":"                    if (text.startsWith(\"[T]\")) {"},{"lineNumber":131,"author":{"gitId":"kangxinwang"},"content":"                        String getDescription \u003d text.substring(7);"},{"lineNumber":132,"author":{"gitId":"kangxinwang"},"content":"                        tasks.add(tasksCount, new Todo(getDescription));"},{"lineNumber":133,"author":{"gitId":"kangxinwang"},"content":"                        tasksCount++;"},{"lineNumber":134,"author":{"gitId":"kangxinwang"},"content":"                        if (text.substring(4,5).compareTo(\"\\u2718\")\u003d\u003d0) {"},{"lineNumber":135,"author":{"gitId":"kangxinwang"},"content":"                            tasks.get(tasksCount - 1).markAsDone();"},{"lineNumber":136,"author":{"gitId":"kangxinwang"},"content":"                        }"},{"lineNumber":137,"author":{"gitId":"kangxinwang"},"content":"                    } else if (text.startsWith(\"[E]\")) {"},{"lineNumber":138,"author":{"gitId":"kangxinwang"},"content":"                        String getDescription \u003d text.substring(7, text.indexOf(\"(\") - 1);"},{"lineNumber":139,"author":{"gitId":"kangxinwang"},"content":"                        String event \u003d text.substring(text.indexOf(\"(\") + 5, text.indexOf(\")\"));"},{"lineNumber":140,"author":{"gitId":"kangxinwang"},"content":"                        tasks.add(tasksCount, new Event(getDescription, event));"},{"lineNumber":141,"author":{"gitId":"kangxinwang"},"content":"                        tasksCount++;"},{"lineNumber":142,"author":{"gitId":"kangxinwang"},"content":"                        if (text.substring(4,5).compareTo(\"\\u2718\")\u003d\u003d0) {"},{"lineNumber":143,"author":{"gitId":"kangxinwang"},"content":"                            tasks.get(tasksCount - 1).markAsDone();"},{"lineNumber":144,"author":{"gitId":"kangxinwang"},"content":"                        }"},{"lineNumber":145,"author":{"gitId":"kangxinwang"},"content":"                    } else if (text.startsWith(\"[D]\")) {"},{"lineNumber":146,"author":{"gitId":"kangxinwang"},"content":"                        String description \u003d text.substring(7, text.indexOf(\"(\") - 1);"},{"lineNumber":147,"author":{"gitId":"kangxinwang"},"content":"                        String deadline \u003d text.substring(text.indexOf(\"(\") + 5, text.indexOf(\")\"));"},{"lineNumber":148,"author":{"gitId":"kangxinwang"},"content":"                        tasks.add(tasksCount,new Deadline(description, deadline));"},{"lineNumber":149,"author":{"gitId":"kangxinwang"},"content":"                        tasksCount++;"},{"lineNumber":150,"author":{"gitId":"kangxinwang"},"content":"                        if (text.substring(4,5).compareTo(\"\\u2718\")\u003d\u003d0) {"},{"lineNumber":151,"author":{"gitId":"kangxinwang"},"content":"                            tasks.get(tasksCount - 1).markAsDone();"},{"lineNumber":152,"author":{"gitId":"kangxinwang"},"content":"                        }"},{"lineNumber":153,"author":{"gitId":"kangxinwang"},"content":"                    }"},{"lineNumber":154,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":155,"author":{"gitId":"kangxinwang"},"content":"                }"},{"lineNumber":156,"author":{"gitId":"kangxinwang"},"content":"            }"},{"lineNumber":157,"author":{"gitId":"kangxinwang"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":158,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":159,"author":{"gitId":"kangxinwang"},"content":"        }"},{"lineNumber":160,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":161,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":163,"author":{"gitId":"kangxinwang"},"content":"    public static void writeFile(){"},{"lineNumber":164,"author":{"gitId":"kangxinwang"},"content":"        try {"},{"lineNumber":165,"author":{"gitId":"kangxinwang"},"content":"            if (Files.notExists(Paths.get(\"data/\"))) {"},{"lineNumber":166,"author":{"gitId":"kangxinwang"},"content":"                Files.createDirectory(Paths.get(\"data/\"));"},{"lineNumber":167,"author":{"gitId":"kangxinwang"},"content":"            } else if (Files.notExists(Paths.get(filePath))) {"},{"lineNumber":168,"author":{"gitId":"kangxinwang"},"content":"                Files.createFile(Paths.get(filePath));"},{"lineNumber":169,"author":{"gitId":"kangxinwang"},"content":"            }"},{"lineNumber":170,"author":{"gitId":"kangxinwang"},"content":"            FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":171,"author":{"gitId":"kangxinwang"},"content":"            for (int i\u003d0; i\u003ctasksCount;i++) {"},{"lineNumber":172,"author":{"gitId":"kangxinwang"},"content":"                fw.write(tasks.get(i).toString() + System.lineSeparator());"},{"lineNumber":173,"author":{"gitId":"kangxinwang"},"content":"            }"},{"lineNumber":174,"author":{"gitId":"kangxinwang"},"content":"            fw.close();"},{"lineNumber":175,"author":{"gitId":"kangxinwang"},"content":"        } catch (IOException e) {"},{"lineNumber":176,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(\"Error! Unable to write to file\");"},{"lineNumber":177,"author":{"gitId":"kangxinwang"},"content":"        }"},{"lineNumber":178,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":179,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":180,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":181,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"kangxinwang"},"content":"    public static void main(String[] args){"},{"lineNumber":183,"author":{"gitId":"kangxinwang"},"content":"        helloMessage();"},{"lineNumber":184,"author":{"gitId":"kangxinwang"},"content":"        readFile();"},{"lineNumber":185,"author":{"gitId":"kangxinwang"},"content":"        String input;"},{"lineNumber":186,"author":{"gitId":"kangxinwang"},"content":"        while(true){"},{"lineNumber":187,"author":{"gitId":"kangxinwang"},"content":"            input \u003d scanner.nextLine();"},{"lineNumber":188,"author":{"gitId":"kangxinwang"},"content":"            System.out.println(line);"},{"lineNumber":189,"author":{"gitId":"kangxinwang"},"content":"            if(input.equals(\"bye\")){"},{"lineNumber":190,"author":{"gitId":"kangxinwang"},"content":"                byeMessage();"},{"lineNumber":191,"author":{"gitId":"kangxinwang"},"content":"            } else if(input.equals(\"list\")) {"},{"lineNumber":192,"author":{"gitId":"kangxinwang"},"content":"                printList(tasks);"},{"lineNumber":193,"author":{"gitId":"kangxinwang"},"content":"            } else if(input.startsWith(\"done\")) {"},{"lineNumber":194,"author":{"gitId":"kangxinwang"},"content":"                markTaskAsDone(input);"},{"lineNumber":195,"author":{"gitId":"kangxinwang"},"content":"                writeFile();"},{"lineNumber":196,"author":{"gitId":"kangxinwang"},"content":"            } else if(input.startsWith(\"todo\")){"},{"lineNumber":197,"author":{"gitId":"kangxinwang"},"content":"                addTodo(input);"},{"lineNumber":198,"author":{"gitId":"kangxinwang"},"content":"                writeFile();"},{"lineNumber":199,"author":{"gitId":"kangxinwang"},"content":"            } else if(input.startsWith(\"deadline\")){"},{"lineNumber":200,"author":{"gitId":"kangxinwang"},"content":"                input \u003d input.substring(DEADLINE_LENGTH);"},{"lineNumber":201,"author":{"gitId":"kangxinwang"},"content":"                addDeadline(input);"},{"lineNumber":202,"author":{"gitId":"kangxinwang"},"content":"                writeFile();"},{"lineNumber":203,"author":{"gitId":"kangxinwang"},"content":"            } else if(input.startsWith(\"event\")){"},{"lineNumber":204,"author":{"gitId":"kangxinwang"},"content":"                input \u003d input.substring(EVENT_LENGTH);"},{"lineNumber":205,"author":{"gitId":"kangxinwang"},"content":"                addEvent(input);"},{"lineNumber":206,"author":{"gitId":"kangxinwang"},"content":"                writeFile();"},{"lineNumber":207,"author":{"gitId":"kangxinwang"},"content":"            } else if(input.startsWith(\"delete\")){"},{"lineNumber":208,"author":{"gitId":"kangxinwang"},"content":"                deleteTask(input);"},{"lineNumber":209,"author":{"gitId":"kangxinwang"},"content":"                writeFile();"},{"lineNumber":210,"author":{"gitId":"kangxinwang"},"content":"            } else{"},{"lineNumber":211,"author":{"gitId":"kangxinwang"},"content":"                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":212,"author":{"gitId":"kangxinwang"},"content":"                System.out.println(line);"},{"lineNumber":213,"author":{"gitId":"kangxinwang"},"content":"            }"},{"lineNumber":214,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":215,"author":{"gitId":"kangxinwang"},"content":"        }"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":218,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":219,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"kangxinwang":217,"-":3}},{"path":"src/main/java/duke/command/ArrayIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangxinwang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":3,"author":{"gitId":"kangxinwang"},"content":"public class ArrayIndexOutOfBoundsException extends Exception{"},{"lineNumber":4,"author":{"gitId":"kangxinwang"},"content":"}"}],"authorContributionMap":{"kangxinwang":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangxinwang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":3,"author":{"gitId":"kangxinwang"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"kangxinwang"},"content":"    protected String by;"},{"lineNumber":5,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":6,"author":{"gitId":"kangxinwang"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":7,"author":{"gitId":"kangxinwang"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"kangxinwang"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":11,"author":{"gitId":"kangxinwang"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"kangxinwang"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"kangxinwang"},"content":"        return \"[D]\" + super.toString() + \" (by:\" +by + \")\";"},{"lineNumber":14,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"kangxinwang"},"content":"}"}],"authorContributionMap":{"kangxinwang":15}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangxinwang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":3,"author":{"gitId":"kangxinwang"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"kangxinwang"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":6,"author":{"gitId":"kangxinwang"},"content":"    public Event(String description, String at) {"},{"lineNumber":7,"author":{"gitId":"kangxinwang"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"kangxinwang"},"content":"        this.at \u003d at;"},{"lineNumber":9,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":11,"author":{"gitId":"kangxinwang"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"kangxinwang"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"kangxinwang"},"content":"        return \"[E]\"+ super.toString() + \" (at:\" +at + \")\";"},{"lineNumber":14,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"kangxinwang"},"content":"}"}],"authorContributionMap":{"kangxinwang":15}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangxinwang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":3,"author":{"gitId":"kangxinwang"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"kangxinwang"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"kangxinwang"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":7,"author":{"gitId":"kangxinwang"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"kangxinwang"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"kangxinwang"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":12,"author":{"gitId":"kangxinwang"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"kangxinwang"},"content":"        return (isDone ? \"\\u2718\" : \" \"); //return blank or X symbols"},{"lineNumber":14,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":16,"author":{"gitId":"kangxinwang"},"content":"    public void markAsDone() {"},{"lineNumber":17,"author":{"gitId":"kangxinwang"},"content":"        this.isDone \u003d true;"},{"lineNumber":18,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":20,"author":{"gitId":"kangxinwang"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"kangxinwang"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"kangxinwang"},"content":"        return \"[\"+ getStatusIcon() +\"] \"+ description;"},{"lineNumber":23,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":25,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":26,"author":{"gitId":"kangxinwang"},"content":"}"}],"authorContributionMap":{"kangxinwang":26}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kangxinwang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":3,"author":{"gitId":"kangxinwang"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"kangxinwang"},"content":"    protected boolean isDone;"},{"lineNumber":5,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":6,"author":{"gitId":"kangxinwang"},"content":"    public Todo(String description) {"},{"lineNumber":7,"author":{"gitId":"kangxinwang"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":10,"author":{"gitId":"kangxinwang"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"kangxinwang"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"kangxinwang"},"content":"        return \"[T]\"+ super.toString();"},{"lineNumber":13,"author":{"gitId":"kangxinwang"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"kangxinwang"},"content":""},{"lineNumber":15,"author":{"gitId":"kangxinwang"},"content":"}"}],"authorContributionMap":{"kangxinwang":15}}]
