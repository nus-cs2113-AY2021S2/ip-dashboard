[{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"public enum Command {"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"    ADD, BYE, DONE, ERROR, LIST, TODO, DEADLINE, EVENT"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"}"}],"authorContributionMap":{"hussain1998":5}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import duke.exceptions.EmptyDescriptionException;"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import duke.exceptions.InvalidCommandException;"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"    private static final TaskList taskList \u003d new TaskList();"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"    private static final Scanner in \u003d initialiseInput();"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"    private static Command command;"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"    private static String input;"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"     * Main entry point of the application."},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"     * Initializes the application and starts the interaction with the user."},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"        printInitialMsg();"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"        do {"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"            scanInput();"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"            printReaction();"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"        } while (canContinue());"},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"    private static void printInitialMsg() {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":29,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":31,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"    private static void scanInput() {"},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"        input \u003d takeInput(in);"},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"        processInput(taskList, input);"},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"    private static void printReaction() {"},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"        switch (command) {"},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"        case ADD:"},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"            // Fallthrough"},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"        case DEADLINE:"},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"            // Fallthrough"},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"        case EVENT:"},{"lineNumber":49,"author":{"gitId":"hussain1998"},"content":"            // Fallthrough"},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"        case TODO:"},{"lineNumber":51,"author":{"gitId":"hussain1998"},"content":"            System.out.println(\"Added: \" + taskList.getLastTask());"},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"            break;"},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"        case BYE:"},{"lineNumber":54,"author":{"gitId":"hussain1998"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":55,"author":{"gitId":"hussain1998"},"content":"            break;"},{"lineNumber":56,"author":{"gitId":"hussain1998"},"content":"        case LIST:"},{"lineNumber":57,"author":{"gitId":"hussain1998"},"content":"            System.out.println(taskList);"},{"lineNumber":58,"author":{"gitId":"hussain1998"},"content":"            break;"},{"lineNumber":59,"author":{"gitId":"hussain1998"},"content":"        case DONE:"},{"lineNumber":60,"author":{"gitId":"hussain1998"},"content":"            int taskNum \u003d getTaskNum(input);"},{"lineNumber":61,"author":{"gitId":"hussain1998"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator() +"},{"lineNumber":62,"author":{"gitId":"hussain1998"},"content":"                    taskList.getTask(taskNum - 1));"},{"lineNumber":63,"author":{"gitId":"hussain1998"},"content":"            break;"},{"lineNumber":64,"author":{"gitId":"hussain1998"},"content":"        case ERROR:"},{"lineNumber":65,"author":{"gitId":"hussain1998"},"content":"            break;"},{"lineNumber":66,"author":{"gitId":"hussain1998"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":69,"author":{"gitId":"hussain1998"},"content":"    private static boolean canContinue() {"},{"lineNumber":70,"author":{"gitId":"hussain1998"},"content":"        return command !\u003d Command.BYE;"},{"lineNumber":71,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":73,"author":{"gitId":"hussain1998"},"content":"    private static Scanner initialiseInput() {"},{"lineNumber":74,"author":{"gitId":"hussain1998"},"content":"        return new Scanner(System.in);"},{"lineNumber":75,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":77,"author":{"gitId":"hussain1998"},"content":"    private static String takeInput(Scanner in) {"},{"lineNumber":78,"author":{"gitId":"hussain1998"},"content":"        return in.nextLine();"},{"lineNumber":79,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":81,"author":{"gitId":"hussain1998"},"content":"    private static void processInput(TaskList taskList, String input) {"},{"lineNumber":82,"author":{"gitId":"hussain1998"},"content":"        try {"},{"lineNumber":83,"author":{"gitId":"hussain1998"},"content":"            command \u003d  getCommand(input);"},{"lineNumber":84,"author":{"gitId":"hussain1998"},"content":"            switch (command) {"},{"lineNumber":85,"author":{"gitId":"hussain1998"},"content":"            case ADD:"},{"lineNumber":86,"author":{"gitId":"hussain1998"},"content":"                command \u003d taskList.addTask(input, Command.ADD);"},{"lineNumber":87,"author":{"gitId":"hussain1998"},"content":"                break;"},{"lineNumber":88,"author":{"gitId":"hussain1998"},"content":"            case TODO:"},{"lineNumber":89,"author":{"gitId":"hussain1998"},"content":"                command \u003d taskList.addTask(input.replaceFirst(\"todo \", \"\"), Command.TODO);"},{"lineNumber":90,"author":{"gitId":"hussain1998"},"content":"                break;"},{"lineNumber":91,"author":{"gitId":"hussain1998"},"content":"            case DEADLINE:"},{"lineNumber":92,"author":{"gitId":"hussain1998"},"content":"                command \u003d taskList.addTask(input.replaceFirst(\"deadline \", \"\"), Command.DEADLINE);"},{"lineNumber":93,"author":{"gitId":"hussain1998"},"content":"                break;"},{"lineNumber":94,"author":{"gitId":"hussain1998"},"content":"            case EVENT:"},{"lineNumber":95,"author":{"gitId":"hussain1998"},"content":"                command \u003d taskList.addTask(input.replaceFirst(\"event \", \"\"), Command.EVENT);"},{"lineNumber":96,"author":{"gitId":"hussain1998"},"content":"                break;"},{"lineNumber":97,"author":{"gitId":"hussain1998"},"content":"            case DONE:"},{"lineNumber":98,"author":{"gitId":"hussain1998"},"content":"                try {"},{"lineNumber":99,"author":{"gitId":"hussain1998"},"content":"                    taskList.validateDescription(input, Command.DONE);"},{"lineNumber":100,"author":{"gitId":"hussain1998"},"content":"                } catch (EmptyDescriptionException e) {"},{"lineNumber":101,"author":{"gitId":"hussain1998"},"content":"                    System.out.println(\"Done command needs task number!\");;"},{"lineNumber":102,"author":{"gitId":"hussain1998"},"content":"                    command \u003d Command.ERROR;"},{"lineNumber":103,"author":{"gitId":"hussain1998"},"content":"                    break;"},{"lineNumber":104,"author":{"gitId":"hussain1998"},"content":"                }"},{"lineNumber":105,"author":{"gitId":"hussain1998"},"content":"                int taskNum \u003d getTaskNum(input);"},{"lineNumber":106,"author":{"gitId":"hussain1998"},"content":"                taskList.finishTask(taskNum - 1);"},{"lineNumber":107,"author":{"gitId":"hussain1998"},"content":"                break;"},{"lineNumber":108,"author":{"gitId":"hussain1998"},"content":"            default:"},{"lineNumber":109,"author":{"gitId":"hussain1998"},"content":"                break;"},{"lineNumber":110,"author":{"gitId":"hussain1998"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"hussain1998"},"content":"        } catch (InvalidCommandException e) {"},{"lineNumber":112,"author":{"gitId":"hussain1998"},"content":"            System.out.println(\"Wrong command entered!: \" + input);"},{"lineNumber":113,"author":{"gitId":"hussain1998"},"content":"            command \u003d Command.ERROR;"},{"lineNumber":114,"author":{"gitId":"hussain1998"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":117,"author":{"gitId":"hussain1998"},"content":"    private static Command getCommand(String input) throws InvalidCommandException {"},{"lineNumber":118,"author":{"gitId":"hussain1998"},"content":"        if (input.equals(\"list\")) {"},{"lineNumber":119,"author":{"gitId":"hussain1998"},"content":"            return Command.LIST;"},{"lineNumber":120,"author":{"gitId":"hussain1998"},"content":"        } else if (input.equals(\"bye\")) {"},{"lineNumber":121,"author":{"gitId":"hussain1998"},"content":"            return Command.BYE;"},{"lineNumber":122,"author":{"gitId":"hussain1998"},"content":"        } else if (input.startsWith(\"done \")) {"},{"lineNumber":123,"author":{"gitId":"hussain1998"},"content":"            return Command.DONE;"},{"lineNumber":124,"author":{"gitId":"hussain1998"},"content":"        } else if (input.startsWith(\"todo \")) {"},{"lineNumber":125,"author":{"gitId":"hussain1998"},"content":"            return Command.TODO;"},{"lineNumber":126,"author":{"gitId":"hussain1998"},"content":"        } else if (input.startsWith(\"deadline \")) {"},{"lineNumber":127,"author":{"gitId":"hussain1998"},"content":"            return Command.DEADLINE;"},{"lineNumber":128,"author":{"gitId":"hussain1998"},"content":"        } else if (input.startsWith(\"event \")) {"},{"lineNumber":129,"author":{"gitId":"hussain1998"},"content":"            return Command.EVENT;"},{"lineNumber":130,"author":{"gitId":"hussain1998"},"content":"        } else {"},{"lineNumber":131,"author":{"gitId":"hussain1998"},"content":"            throw new InvalidCommandException();"},{"lineNumber":132,"author":{"gitId":"hussain1998"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":135,"author":{"gitId":"hussain1998"},"content":"    private static int getTaskNum(String input) {"},{"lineNumber":136,"author":{"gitId":"hussain1998"},"content":"        return Integer.parseInt(input.replaceFirst(\"done \", \"\"));"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"hussain1998":128,"-":10}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import duke.exceptions.EmptyDescriptionException;"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import duke.task.Deadline;"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import duke.task.Event;"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"import duke.task.ToDo;"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"public class TaskList {"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"    public TaskList() {"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"    public Command addTask(String description, Command command) {"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"        Task newTask;"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"        String[] stringArray;"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"            validateDescription(description, command);"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"        } catch (EmptyDescriptionException e) {"},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"            System.out.println(\"The description cannot be empty!\");"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"            return Command.ERROR;"},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"        switch (command) {"},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"        case TODO:"},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"            newTask \u003d new ToDo(description);"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"            break;"},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"        case EVENT:"},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"            stringArray \u003d description.split(\"/at\");"},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"            newTask \u003d new Event(stringArray[0], stringArray[1].trim());"},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"            break;"},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"        case DEADLINE:"},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"            stringArray \u003d description.split(\"/by\");"},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"            newTask \u003d new Deadline(stringArray[0], stringArray[1].trim());"},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"            break;"},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"        default:"},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"            newTask \u003d new Task(description);"},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"            break;"},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"        tasks.add(newTask);"},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"        return command;"},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"    public void validateDescription(String description, Command command) throws EmptyDescriptionException {"},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"        if (description.equals(\"\")) {"},{"lineNumber":49,"author":{"gitId":"hussain1998"},"content":"            throw new EmptyDescriptionException();"},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"hussain1998"},"content":"        switch (command) {"},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"        case DONE:"},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"            if (description.replace(\"done \", \"\").equals(\"\")) {"},{"lineNumber":54,"author":{"gitId":"hussain1998"},"content":"                throw new EmptyDescriptionException();"},{"lineNumber":55,"author":{"gitId":"hussain1998"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"hussain1998"},"content":"            break;"},{"lineNumber":57,"author":{"gitId":"hussain1998"},"content":"        case TODO:"},{"lineNumber":58,"author":{"gitId":"hussain1998"},"content":"            break;"},{"lineNumber":59,"author":{"gitId":"hussain1998"},"content":"        case DEADLINE:"},{"lineNumber":60,"author":{"gitId":"hussain1998"},"content":"            break;"},{"lineNumber":61,"author":{"gitId":"hussain1998"},"content":"        case EVENT:"},{"lineNumber":62,"author":{"gitId":"hussain1998"},"content":"            break;"},{"lineNumber":63,"author":{"gitId":"hussain1998"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":66,"author":{"gitId":"hussain1998"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"hussain1998"},"content":"    public String toString() {"},{"lineNumber":68,"author":{"gitId":"hussain1998"},"content":"        StringBuilder outputString \u003d new StringBuilder();"},{"lineNumber":69,"author":{"gitId":"hussain1998"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":70,"author":{"gitId":"hussain1998"},"content":"            outputString.append(i + 1);"},{"lineNumber":71,"author":{"gitId":"hussain1998"},"content":"            outputString.append(\".\");"},{"lineNumber":72,"author":{"gitId":"hussain1998"},"content":"            outputString.append(tasks.get(i).toString());"},{"lineNumber":73,"author":{"gitId":"hussain1998"},"content":"            outputString.append(System.lineSeparator());"},{"lineNumber":74,"author":{"gitId":"hussain1998"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"hussain1998"},"content":"        if (outputString.length() \u003d\u003d 0) {"},{"lineNumber":76,"author":{"gitId":"hussain1998"},"content":"            return \"List is empty!\";"},{"lineNumber":77,"author":{"gitId":"hussain1998"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"hussain1998"},"content":"        return outputString.toString().trim();"},{"lineNumber":79,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":81,"author":{"gitId":"hussain1998"},"content":"    public void finishTask(int taskNum) {"},{"lineNumber":82,"author":{"gitId":"hussain1998"},"content":"        tasks.get(taskNum).setDone();"},{"lineNumber":83,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":85,"author":{"gitId":"hussain1998"},"content":"    public String getTask(int taskNum) {"},{"lineNumber":86,"author":{"gitId":"hussain1998"},"content":"        return tasks.get(taskNum).toString();"},{"lineNumber":87,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":89,"author":{"gitId":"hussain1998"},"content":"    // Gets the Last task of tasks array"},{"lineNumber":90,"author":{"gitId":"hussain1998"},"content":"    public String getLastTask() {"},{"lineNumber":91,"author":{"gitId":"hussain1998"},"content":"        return tasks.get(tasks.size() - 1).toString();"},{"lineNumber":92,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"hussain1998"},"content":"}"}],"authorContributionMap":{"hussain1998":93}},{"path":"src/main/java/duke/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"public class EmptyDescriptionException extends Exception {"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"}"}],"authorContributionMap":{"hussain1998":4}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"public class InvalidCommandException extends Exception{"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"}"}],"authorContributionMap":{"hussain1998":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"    String endTime;"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"    public Deadline(String description, String endTime) {"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"    public String getStatusIcon() {"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"        return \"[D]\" + super.getStatusIcon();"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"    public String getDescription() {"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"        return super.getDescription() + \"(by: \" + endTime + \")\";"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"}"}],"authorContributionMap":{"hussain1998":19}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"    String eventTime;"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"    public Event(String description, String eventTime) {"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"    public String getStatusIcon() {"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"        return \"[E]\" + super.getStatusIcon();"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"    public String getDescription() {"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"        return super.getDescription() + \"(at: \" + eventTime + \")\";"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"}"}],"authorContributionMap":{"hussain1998":19}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"        return (isDone ? \"[X] \" : \"[ ] \");"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"    public String getDescription() {"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"        return description;"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"    public void setDone() {"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"        isDone \u003d true;"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"        return getStatusIcon() + getDescription();"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"}"}],"authorContributionMap":{"hussain1998":28}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"    public ToDo(String description) {"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":""},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"    public String getStatusIcon() {"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"        return \"[T]\" + super.getStatusIcon();"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"}"}],"authorContributionMap":{"hussain1998":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"list"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"todo I want to learn a new language"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"add I want to sleep"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"deadline cs3235 quiz /by this friday"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"event cs2113t meeting /at this sunday 10am"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"todo sleep early everyday"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"todo eat properly"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"done 4"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"deadline homework /by tonight"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"done 6"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"event lecture /at tmr"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"done "},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"deadline "},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"todo "},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"event "},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"done 1"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"done 2"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"done 3"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"done 5"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"done 7"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"list"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"bye"}],"authorContributionMap":{"hussain1998":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\exceptions\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"hussain1998":1,"-":20}}]
