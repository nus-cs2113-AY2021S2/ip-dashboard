[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"yyixue"},"content":"Duke is used for managing tasks, optimized for use via a Command Line Interface (CLI)."},{"lineNumber":3,"author":{"gitId":"yyixue"},"content":"If you can type fast, Duke can get your task management done faster than traditional GUI apps."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"yyixue"},"content":"# Setting up in IntelliJ"},{"lineNumber":6,"author":{"gitId":"yyixue"},"content":"1. Ensure you have the latest version of IntelliJ installed with JDK 11. "},{"lineNumber":7,"author":{"gitId":"yyixue"},"content":"2. Open IntelliJ (if you are not in the welcome screen, click File \u003e Close Project to close the existing project first)"},{"lineNumber":8,"author":{"gitId":"yyixue"},"content":"3. Import the project into IntelliJ as follows:"},{"lineNumber":9,"author":{"gitId":"yyixue"},"content":"   1. Click Open "},{"lineNumber":10,"author":{"gitId":"yyixue"},"content":"   2. Select the project directory, and click OK "},{"lineNumber":11,"author":{"gitId":"yyixue"},"content":"   3. If there are any further prompts, accept the defaults."},{"lineNumber":12,"author":{"gitId":"yyixue"},"content":"4. Configure the project to use JDK 11 (not other versions)."},{"lineNumber":13,"author":{"gitId":"yyixue"},"content":"5. After that, locate the src/main/java/Duke.java file, right-click it, and choose Run Duke.main(). "},{"lineNumber":14,"author":{"gitId":"yyixue"},"content":"6. Refer to the Features below for commands you can try."},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"yyixue"},"content":"# Features"},{"lineNumber":17,"author":{"gitId":"yyixue"},"content":"## Adding a todo: \u003cmark style\u003d\"background-color: lightblue\"\u003etodo\u003c/mark\u003e"},{"lineNumber":18,"author":{"gitId":"yyixue"},"content":"Adds a todo to the task list. "},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"yyixue"},"content":"Format: \u003cmark style\u003d\"background-color: lightblue\"\u003e todo d/DESCRIPTION \u003c/mark\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"yyixue"},"content":"Examples:"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"yyixue"},"content":"* \u003cmark style\u003d\"background-color: lightblue\"\u003e todo d/Return library book \u003c/mark\u003e"},{"lineNumber":25,"author":{"gitId":"yyixue"},"content":"* \u003cmark style\u003d\"background-color: lightblue\"\u003e todo d/Take my daily vitamins \u003c/mark\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"yyixue"},"content":"## Adding a deadline: \u003cmark style\u003d\"background-color: lightblue\"\u003edeadline\u003c/mark\u003e"},{"lineNumber":28,"author":{"gitId":"yyixue"},"content":"Adds a deadline to the task list. "},{"lineNumber":29,"author":{"gitId":"yyixue"},"content":"Datetime can be in formats \u003cmark style\u003d\"background-color: gray\"\u003eyyyy-mm-dd\u003c/mark\u003e (date),"},{"lineNumber":30,"author":{"gitId":"yyixue"},"content":"\u003cmark style\u003d\"background-color: gray\"\u003ehhmm\u003c/mark\u003e (time) or"},{"lineNumber":31,"author":{"gitId":"yyixue"},"content":"\u003cmark style\u003d\"background-color: gray\"\u003eyyyy-mm-dd hhmm\u003c/mark\u003e (datetime)."},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"yyixue"},"content":"Format: \u003cmark style\u003d\"background-color: lightblue\"\u003e deadline d/DESCRIPTION /by t/DATETIME \u003c/mark\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"yyixue"},"content":"Examples:"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"yyixue"},"content":"* \u003cmark style\u003d\"background-color: lightblue\"\u003e deadline d/Submit research paper /by t/2021-09-09 2359\u003c/mark\u003e"},{"lineNumber":38,"author":{"gitId":"yyixue"},"content":"* \u003cmark style\u003d\"background-color: lightblue\"\u003e deadline d/Pay school fees /by 2021-03-04\u003c/mark\u003e"},{"lineNumber":39,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":40,"author":{"gitId":"yyixue"},"content":"Expected Output:"},{"lineNumber":41,"author":{"gitId":"yyixue"},"content":"![Deadline Output](./Images/Deadline_Output.png)"},{"lineNumber":42,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":43,"author":{"gitId":"yyixue"},"content":"## Adding an event: \u003cmark style\u003d\"background-color: lightblue\"\u003eevent\u003c/mark\u003e"},{"lineNumber":44,"author":{"gitId":"yyixue"},"content":"Adds an event to the task list."},{"lineNumber":45,"author":{"gitId":"yyixue"},"content":"Datetime can be in formats \u003cmark style\u003d\"background-color: gray\"\u003eyyyy-mm-dd\u003c/mark\u003e (date),"},{"lineNumber":46,"author":{"gitId":"yyixue"},"content":"\u003cmark style\u003d\"background-color: gray\"\u003ehhmm\u003c/mark\u003e (time) or"},{"lineNumber":47,"author":{"gitId":"yyixue"},"content":"\u003cmark style\u003d\"background-color: gray\"\u003eyyyy-mm-dd hhmm\u003c/mark\u003e (datetime)."},{"lineNumber":48,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":49,"author":{"gitId":"yyixue"},"content":"Format: \u003cmark style\u003d\"background-color: lightblue\"\u003e event d/DESCRIPTION /at t/DATETIME \u003c/mark\u003e"},{"lineNumber":50,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":51,"author":{"gitId":"yyixue"},"content":"Examples:"},{"lineNumber":52,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":53,"author":{"gitId":"yyixue"},"content":"* \u003cmark style\u003d\"background-color: lightblue\"\u003e event d/Attend church service /at 2021-03-02 1600\u003c/mark\u003e"},{"lineNumber":54,"author":{"gitId":"yyixue"},"content":"* \u003cmark style\u003d\"background-color: lightblue\"\u003e event d/Write daily reflection /at 2200\u003c/mark\u003e"},{"lineNumber":55,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":56,"author":{"gitId":"yyixue"},"content":"Expected Output:"},{"lineNumber":57,"author":{"gitId":"yyixue"},"content":"![Event Output](./Images/Event_Output.png)"},{"lineNumber":58,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":59,"author":{"gitId":"yyixue"},"content":"## Listing all tasks: \u003cmark style\u003d\"background-color: lightblue\"\u003elist\u003c/mark\u003e"},{"lineNumber":60,"author":{"gitId":"yyixue"},"content":"Shows a list of all tasks in the task list."},{"lineNumber":61,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":62,"author":{"gitId":"yyixue"},"content":"Format: \u003cmark style\u003d\"background-color: lightblue\"\u003e list \u003c/mark\u003e"},{"lineNumber":63,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":64,"author":{"gitId":"yyixue"},"content":"## Marking a task as done: \u003cmark style\u003d\"background-color: lightblue\"\u003edone\u003c/mark\u003e"},{"lineNumber":65,"author":{"gitId":"yyixue"},"content":"Mark the n-th task in the task list as completed, where n is the task\u0027s index in the task list. "},{"lineNumber":66,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":67,"author":{"gitId":"yyixue"},"content":"Format: \u003cmark style\u003d\"background-color: lightblue\"\u003e done i/INDEX \u003c/mark\u003e"},{"lineNumber":68,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":69,"author":{"gitId":"yyixue"},"content":"Examples:"},{"lineNumber":70,"author":{"gitId":"yyixue"},"content":"* \u003cmark style\u003d\"background-color: lightblue\"\u003e done 2 \u003c/mark\u003e"},{"lineNumber":71,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":72,"author":{"gitId":"yyixue"},"content":"Expected Output:"},{"lineNumber":73,"author":{"gitId":"yyixue"},"content":"![Done Output](./Images/Done_Output.png)"},{"lineNumber":74,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":75,"author":{"gitId":"yyixue"},"content":"## Deleting a task: \u003cmark style\u003d\"background-color: lightblue\"\u003edelete\u003c/mark\u003e"},{"lineNumber":76,"author":{"gitId":"yyixue"},"content":"Delete the n-th task in the task list, where n is the task\u0027s index in the task list."},{"lineNumber":77,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":78,"author":{"gitId":"yyixue"},"content":"Format: \u003cmark style\u003d\"background-color: lightblue\"\u003e delete i/INDEX \u003c/mark\u003e"},{"lineNumber":79,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":80,"author":{"gitId":"yyixue"},"content":"Examples:"},{"lineNumber":81,"author":{"gitId":"yyixue"},"content":"* \u003cmark style\u003d\"background-color: lightblue\"\u003e delete 2 \u003c/mark\u003e"},{"lineNumber":82,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":83,"author":{"gitId":"yyixue"},"content":"Expected Output:"},{"lineNumber":84,"author":{"gitId":"yyixue"},"content":"![Delete Output](./Images/Delete_Output.png)"},{"lineNumber":85,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":86,"author":{"gitId":"yyixue"},"content":"## Finding similar tasks: \u003cmark style\u003d\"background-color: lightblue\"\u003efind\u003c/mark\u003e"},{"lineNumber":87,"author":{"gitId":"yyixue"},"content":"Returns all tasks in the task list that hold the input keyword."},{"lineNumber":88,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":89,"author":{"gitId":"yyixue"},"content":"Format: \u003cmark style\u003d\"background-color: lightblue\"\u003e find k/KEYWORD \u003c/mark\u003e"},{"lineNumber":90,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":91,"author":{"gitId":"yyixue"},"content":"Examples:"},{"lineNumber":92,"author":{"gitId":"yyixue"},"content":"* \u003cmark style\u003d\"background-color: lightblue\"\u003e find church \u003c/mark\u003e"},{"lineNumber":93,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":94,"author":{"gitId":"yyixue"},"content":"Expected Output:"},{"lineNumber":95,"author":{"gitId":"yyixue"},"content":"![Find Output](./Images/Find_Output.png)"},{"lineNumber":96,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":97,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":98,"author":{"gitId":"yyixue"},"content":"## Exiting the Program: \u003cmark style\u003d\"background-color: lightblue\"\u003ebye\u003c/mark\u003e"},{"lineNumber":99,"author":{"gitId":"yyixue"},"content":"Exits the Program."},{"lineNumber":100,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":101,"author":{"gitId":"yyixue"},"content":"Format: \u003cmark style\u003d\"background-color: lightblue\"\u003e bye \u003c/mark\u003e"},{"lineNumber":102,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":103,"author":{"gitId":"yyixue"},"content":"# Command Summary"},{"lineNumber":104,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":105,"author":{"gitId":"yyixue"},"content":"| Action   | Format/ Examples                                                                                                                             |"},{"lineNumber":106,"author":{"gitId":"yyixue"},"content":"|----------|----------------------------------------------------------------------------------------------------------------------------------------------|"},{"lineNumber":107,"author":{"gitId":"yyixue"},"content":"| todo     | todo d/DESCRIPTION e.g. todo d/Return library book                                                                                           |"},{"lineNumber":108,"author":{"gitId":"yyixue"},"content":"| deadline | deadline d/DESCRIPTION /by t/DATETIME e.g. deadline d/Submit research paper /by t/2021-09-09 2359, deadline d/Pay school fees /by 2021-03-04 |"},{"lineNumber":109,"author":{"gitId":"yyixue"},"content":"| event    | event d/DESCRIPTION /at t/DATETIME e.g. event d/Attend church service /at 2021-03-02 1600, event d/Write daily reflection /at 2200           |"},{"lineNumber":110,"author":{"gitId":"yyixue"},"content":"| list     | list                                                                                                                                         |"},{"lineNumber":111,"author":{"gitId":"yyixue"},"content":"| done     | done i/INDEX e.g. done 2                                                                                                                     |"},{"lineNumber":112,"author":{"gitId":"yyixue"},"content":"| delete   | delete i/INDEX e.g. delete 2                                                                                                                 |"},{"lineNumber":113,"author":{"gitId":"yyixue"},"content":"| find     | find k/KEYWORD e.g. find church                                                                                                              |"},{"lineNumber":114,"author":{"gitId":"yyixue"},"content":"| exit     | exit                                                                                                                                         |"}],"authorContributionMap":{"yyixue":104,"-":10}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyixue"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"yyixue"},"content":"import task.*;"},{"lineNumber":3,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":4,"author":{"gitId":"yyixue"},"content":"import tasklist.TaskList;"},{"lineNumber":5,"author":{"gitId":"yyixue"},"content":"import ui.TextUi;"},{"lineNumber":6,"author":{"gitId":"yyixue"},"content":"import parser.Parser;"},{"lineNumber":7,"author":{"gitId":"yyixue"},"content":"import storage.Storage;"},{"lineNumber":8,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":9,"author":{"gitId":"yyixue"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"yyixue"},"content":" * Entry point of the Address Book application."},{"lineNumber":11,"author":{"gitId":"yyixue"},"content":" * Initializes the application and starts the interaction with the user."},{"lineNumber":12,"author":{"gitId":"yyixue"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":15,"author":{"gitId":"yyixue"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";"},{"lineNumber":16,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":17,"author":{"gitId":"yyixue"},"content":"    public static ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":19,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"yyixue"},"content":"     *  Sets up the task list, loads up the existing tasks from the storage file,"},{"lineNumber":21,"author":{"gitId":"yyixue"},"content":"     *  and prints the welcome message."},{"lineNumber":22,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":24,"author":{"gitId":"yyixue"},"content":"        TaskList taskList \u003d new TaskList(allTasks);"},{"lineNumber":25,"author":{"gitId":"yyixue"},"content":"        String filePath \u003d \"/Users/yanyixue/Desktop/year3/sem2/CS2113/ip/tasks.txt\";"},{"lineNumber":26,"author":{"gitId":"yyixue"},"content":"        Storage storage \u003d new Storage(filePath);"},{"lineNumber":27,"author":{"gitId":"yyixue"},"content":"        run();"},{"lineNumber":28,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":30,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"yyixue"},"content":"     * Runs the program until termination."},{"lineNumber":32,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"yyixue"},"content":"    private static void run() {"},{"lineNumber":34,"author":{"gitId":"yyixue"},"content":"        TextUi.showWelcomeMessage();"},{"lineNumber":35,"author":{"gitId":"yyixue"},"content":"        TaskList.allTasks \u003d Storage.getSavedTasks();"},{"lineNumber":36,"author":{"gitId":"yyixue"},"content":"        runLoopUntilExitCommand();"},{"lineNumber":37,"author":{"gitId":"yyixue"},"content":"        exit();"},{"lineNumber":38,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":40,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"yyixue"},"content":"     * Prints the Goodbye message and exits."},{"lineNumber":42,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"yyixue"},"content":"    private static void exit() {"},{"lineNumber":44,"author":{"gitId":"yyixue"},"content":"        TextUi.showGoodbyeMessage();"},{"lineNumber":45,"author":{"gitId":"yyixue"},"content":"        System.exit(0);"},{"lineNumber":46,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":48,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"yyixue"},"content":"     * Reads the user command and executes it, until the user issues the exit command."},{"lineNumber":50,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"yyixue"},"content":"    private static void runLoopUntilExitCommand() {"},{"lineNumber":52,"author":{"gitId":"yyixue"},"content":"        String userInput;"},{"lineNumber":53,"author":{"gitId":"yyixue"},"content":"        do {"},{"lineNumber":54,"author":{"gitId":"yyixue"},"content":"            userInput \u003d TextUi.getUserCommand();"},{"lineNumber":55,"author":{"gitId":"yyixue"},"content":"            Parser.parseCommand(userInput);"},{"lineNumber":56,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":57,"author":{"gitId":"yyixue"},"content":"        } while (!userInput.equalsIgnoreCase(EXIT_COMMAND));"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"},{"lineNumber":60,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":61,"author":{"gitId":"yyixue"},"content":""}],"authorContributionMap":{"yyixue":57,"-":4}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyixue"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":3,"author":{"gitId":"yyixue"},"content":"import task.Deadline;"},{"lineNumber":4,"author":{"gitId":"yyixue"},"content":"import task.Event;"},{"lineNumber":5,"author":{"gitId":"yyixue"},"content":"import task.Task;"},{"lineNumber":6,"author":{"gitId":"yyixue"},"content":"import task.Todo;"},{"lineNumber":7,"author":{"gitId":"yyixue"},"content":"import tasklist.TaskList;"},{"lineNumber":8,"author":{"gitId":"yyixue"},"content":"import ui.TextUi;"},{"lineNumber":9,"author":{"gitId":"yyixue"},"content":"import storage.Storage;"},{"lineNumber":10,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":11,"author":{"gitId":"yyixue"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"yyixue"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":14,"author":{"gitId":"yyixue"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"yyixue"},"content":" * Represents all methods to make sense of the user command and execute."},{"lineNumber":16,"author":{"gitId":"yyixue"},"content":" */"},{"lineNumber":17,"author":{"gitId":"yyixue"},"content":"public class Parser {"},{"lineNumber":18,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":19,"author":{"gitId":"yyixue"},"content":"    private static final String DONE_COMMAND \u003d \"done\";"},{"lineNumber":20,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":21,"author":{"gitId":"yyixue"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";"},{"lineNumber":22,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":23,"author":{"gitId":"yyixue"},"content":"    private static final String LIST_COMMAND \u003d \"list\";"},{"lineNumber":24,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":25,"author":{"gitId":"yyixue"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";"},{"lineNumber":26,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":27,"author":{"gitId":"yyixue"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";"},{"lineNumber":28,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":29,"author":{"gitId":"yyixue"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";"},{"lineNumber":30,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":31,"author":{"gitId":"yyixue"},"content":"    private static final String FIND_COMMAND \u003d \"find\";"},{"lineNumber":32,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":33,"author":{"gitId":"yyixue"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";"},{"lineNumber":34,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":35,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"yyixue"},"content":"     * Parses user input for execution."},{"lineNumber":37,"author":{"gitId":"yyixue"},"content":"     * @param userInput full user input string."},{"lineNumber":38,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"yyixue"},"content":"    public static void parseCommand(String userInput) {"},{"lineNumber":40,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":41,"author":{"gitId":"yyixue"},"content":"        String[] actionArr \u003d userInput.split(\" \", 2);"},{"lineNumber":42,"author":{"gitId":"yyixue"},"content":"        int taskNum;"},{"lineNumber":43,"author":{"gitId":"yyixue"},"content":"        ArrayList\u003cTask\u003e matchList;"},{"lineNumber":44,"author":{"gitId":"yyixue"},"content":"        switch(actionArr[0].toLowerCase()) {"},{"lineNumber":45,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":46,"author":{"gitId":"yyixue"},"content":"            case TODO_COMMAND:"},{"lineNumber":47,"author":{"gitId":"yyixue"},"content":"                try {"},{"lineNumber":48,"author":{"gitId":"yyixue"},"content":"                    if (actionArr.length \u003d\u003d 1) {"},{"lineNumber":49,"author":{"gitId":"yyixue"},"content":"                        throw new ParseException(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":50,"author":{"gitId":"yyixue"},"content":"                    }"},{"lineNumber":51,"author":{"gitId":"yyixue"},"content":"                    createTodo(actionArr[1]);"},{"lineNumber":52,"author":{"gitId":"yyixue"},"content":"                    taskNum \u003d TaskList.allTasks.size();"},{"lineNumber":53,"author":{"gitId":"yyixue"},"content":"                    storeTask(taskNum);"},{"lineNumber":54,"author":{"gitId":"yyixue"},"content":"                } catch (ParseException p){"},{"lineNumber":55,"author":{"gitId":"yyixue"},"content":"                    System.out.println(p);"},{"lineNumber":56,"author":{"gitId":"yyixue"},"content":"                    break;"},{"lineNumber":57,"author":{"gitId":"yyixue"},"content":"                }"},{"lineNumber":58,"author":{"gitId":"yyixue"},"content":"                break;"},{"lineNumber":59,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":60,"author":{"gitId":"yyixue"},"content":"            case DEADLINE_COMMAND:"},{"lineNumber":61,"author":{"gitId":"yyixue"},"content":"                try {"},{"lineNumber":62,"author":{"gitId":"yyixue"},"content":"                    if (actionArr.length \u003d\u003d 1) {"},{"lineNumber":63,"author":{"gitId":"yyixue"},"content":"                        throw new ParseException(\"OOPS!!! Deadline description cannot be empty.\");"},{"lineNumber":64,"author":{"gitId":"yyixue"},"content":"                    }"},{"lineNumber":65,"author":{"gitId":"yyixue"},"content":"                    createDeadline(actionArr[1]);"},{"lineNumber":66,"author":{"gitId":"yyixue"},"content":"                    taskNum \u003d TaskList.allTasks.size();"},{"lineNumber":67,"author":{"gitId":"yyixue"},"content":"                    storeTask(taskNum);"},{"lineNumber":68,"author":{"gitId":"yyixue"},"content":"                } catch (ParseException p){"},{"lineNumber":69,"author":{"gitId":"yyixue"},"content":"                    System.out.println(p);"},{"lineNumber":70,"author":{"gitId":"yyixue"},"content":"                    break;"},{"lineNumber":71,"author":{"gitId":"yyixue"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"yyixue"},"content":"                break;"},{"lineNumber":73,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":74,"author":{"gitId":"yyixue"},"content":"            case EVENT_COMMAND:"},{"lineNumber":75,"author":{"gitId":"yyixue"},"content":"                try {"},{"lineNumber":76,"author":{"gitId":"yyixue"},"content":"                    if (actionArr.length \u003d\u003d 1) {"},{"lineNumber":77,"author":{"gitId":"yyixue"},"content":"                        throw new ParseException(\"OOPS!!! Event description cannot be empty.\");"},{"lineNumber":78,"author":{"gitId":"yyixue"},"content":"                    }"},{"lineNumber":79,"author":{"gitId":"yyixue"},"content":"                    createEvent(actionArr[1]);"},{"lineNumber":80,"author":{"gitId":"yyixue"},"content":"                    taskNum \u003d TaskList.allTasks.size();"},{"lineNumber":81,"author":{"gitId":"yyixue"},"content":"                    storeTask(taskNum);"},{"lineNumber":82,"author":{"gitId":"yyixue"},"content":"                } catch (ParseException p){"},{"lineNumber":83,"author":{"gitId":"yyixue"},"content":"                    System.out.println(p);"},{"lineNumber":84,"author":{"gitId":"yyixue"},"content":"                    break;"},{"lineNumber":85,"author":{"gitId":"yyixue"},"content":"                }"},{"lineNumber":86,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":87,"author":{"gitId":"yyixue"},"content":"                break;"},{"lineNumber":88,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":89,"author":{"gitId":"yyixue"},"content":"            case LIST_COMMAND:"},{"lineNumber":90,"author":{"gitId":"yyixue"},"content":"                TextUi.showTaskList();"},{"lineNumber":91,"author":{"gitId":"yyixue"},"content":"                break;"},{"lineNumber":92,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":93,"author":{"gitId":"yyixue"},"content":"            case DONE_COMMAND:"},{"lineNumber":94,"author":{"gitId":"yyixue"},"content":"                try {"},{"lineNumber":95,"author":{"gitId":"yyixue"},"content":"                    if (actionArr.length \u003d\u003d 1) {"},{"lineNumber":96,"author":{"gitId":"yyixue"},"content":"                        throw new ParseException(\"OOPS!!! Please indicate the task you want to mark as done.\");"},{"lineNumber":97,"author":{"gitId":"yyixue"},"content":"                    }"},{"lineNumber":98,"author":{"gitId":"yyixue"},"content":"                    taskNum \u003d Integer.parseInt(actionArr[1]);"},{"lineNumber":99,"author":{"gitId":"yyixue"},"content":"                    try {"},{"lineNumber":100,"author":{"gitId":"yyixue"},"content":"                        if (taskNum \u003e TaskList.allTasks.size()) {"},{"lineNumber":101,"author":{"gitId":"yyixue"},"content":"                            throw new IllegalValueException(\"OOPS!! Please enter a valid integer for the task index.\");"},{"lineNumber":102,"author":{"gitId":"yyixue"},"content":"                        }"},{"lineNumber":103,"author":{"gitId":"yyixue"},"content":"                        taskNum \u003d taskNum - 1;"},{"lineNumber":104,"author":{"gitId":"yyixue"},"content":"                        TaskList.allTasks.get(taskNum).setDone();"},{"lineNumber":105,"author":{"gitId":"yyixue"},"content":"                        TextUi.taskDoneMessage(taskNum);"},{"lineNumber":106,"author":{"gitId":"yyixue"},"content":"                        for(int i\u003d0; i \u003c TaskList.allTasks.size(); i++) {"},{"lineNumber":107,"author":{"gitId":"yyixue"},"content":"                            taskNum \u003d i + 1;"},{"lineNumber":108,"author":{"gitId":"yyixue"},"content":"                            storeTask(taskNum);"},{"lineNumber":109,"author":{"gitId":"yyixue"},"content":"                        }"},{"lineNumber":110,"author":{"gitId":"yyixue"},"content":"                    } catch (IllegalValueException e) {"},{"lineNumber":111,"author":{"gitId":"yyixue"},"content":"                        System.out.println(e);"},{"lineNumber":112,"author":{"gitId":"yyixue"},"content":"                        break;"},{"lineNumber":113,"author":{"gitId":"yyixue"},"content":"                    }"},{"lineNumber":114,"author":{"gitId":"yyixue"},"content":"                } catch (ParseException p){"},{"lineNumber":115,"author":{"gitId":"yyixue"},"content":"                    System.out.println(p);"},{"lineNumber":116,"author":{"gitId":"yyixue"},"content":"                    break;"},{"lineNumber":117,"author":{"gitId":"yyixue"},"content":"                }"},{"lineNumber":118,"author":{"gitId":"yyixue"},"content":"                break;"},{"lineNumber":119,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":120,"author":{"gitId":"yyixue"},"content":"            case DELETE_COMMAND:"},{"lineNumber":121,"author":{"gitId":"yyixue"},"content":"                try {"},{"lineNumber":122,"author":{"gitId":"yyixue"},"content":"                    if (actionArr.length \u003d\u003d 1) {"},{"lineNumber":123,"author":{"gitId":"yyixue"},"content":"                        throw new ParseException(\"OOPS!!! Please indicate the task you want to mark as done.\");"},{"lineNumber":124,"author":{"gitId":"yyixue"},"content":"                    }"},{"lineNumber":125,"author":{"gitId":"yyixue"},"content":"                    taskNum \u003d Integer.parseInt(actionArr[1]);"},{"lineNumber":126,"author":{"gitId":"yyixue"},"content":"                    try {"},{"lineNumber":127,"author":{"gitId":"yyixue"},"content":"                        if (taskNum \u003e TaskList.allTasks.size()) {"},{"lineNumber":128,"author":{"gitId":"yyixue"},"content":"                            throw new IllegalValueException(\"OOPS!! Please enter a valid integer for the task index.\");"},{"lineNumber":129,"author":{"gitId":"yyixue"},"content":"                        }"},{"lineNumber":130,"author":{"gitId":"yyixue"},"content":"                        taskNum \u003d taskNum - 1;"},{"lineNumber":131,"author":{"gitId":"yyixue"},"content":"                        TextUi.taskDeleteMessage(taskNum);"},{"lineNumber":132,"author":{"gitId":"yyixue"},"content":"                        TaskList.allTasks.remove(taskNum);"},{"lineNumber":133,"author":{"gitId":"yyixue"},"content":"                        for (int i\u003d0; i \u003c TaskList.allTasks.size(); i++) {"},{"lineNumber":134,"author":{"gitId":"yyixue"},"content":"                            taskNum \u003d i + 1;"},{"lineNumber":135,"author":{"gitId":"yyixue"},"content":"                            storeTask(taskNum);"},{"lineNumber":136,"author":{"gitId":"yyixue"},"content":"                        }"},{"lineNumber":137,"author":{"gitId":"yyixue"},"content":"                    } catch (IllegalValueException e) {"},{"lineNumber":138,"author":{"gitId":"yyixue"},"content":"                        System.out.println(e);"},{"lineNumber":139,"author":{"gitId":"yyixue"},"content":"                        break;"},{"lineNumber":140,"author":{"gitId":"yyixue"},"content":"                    }"},{"lineNumber":141,"author":{"gitId":"yyixue"},"content":"                } catch (ParseException p){"},{"lineNumber":142,"author":{"gitId":"yyixue"},"content":"                    System.out.println(p);"},{"lineNumber":143,"author":{"gitId":"yyixue"},"content":"                    break;"},{"lineNumber":144,"author":{"gitId":"yyixue"},"content":"                }"},{"lineNumber":145,"author":{"gitId":"yyixue"},"content":"                break;"},{"lineNumber":146,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":147,"author":{"gitId":"yyixue"},"content":"            case FIND_COMMAND:"},{"lineNumber":148,"author":{"gitId":"yyixue"},"content":"                String findKeyword \u003d actionArr[1];"},{"lineNumber":149,"author":{"gitId":"yyixue"},"content":"                matchList \u003d getMatches(findKeyword);"},{"lineNumber":150,"author":{"gitId":"yyixue"},"content":"                TextUi.showMatchedTasks(matchList);"},{"lineNumber":151,"author":{"gitId":"yyixue"},"content":"                break;"},{"lineNumber":152,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":153,"author":{"gitId":"yyixue"},"content":"            case EXIT_COMMAND:"},{"lineNumber":154,"author":{"gitId":"yyixue"},"content":"                break;"},{"lineNumber":155,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":156,"author":{"gitId":"yyixue"},"content":"            default:"},{"lineNumber":157,"author":{"gitId":"yyixue"},"content":"                TextUi.showInvalidInputMessage();"},{"lineNumber":158,"author":{"gitId":"yyixue"},"content":"        }"},{"lineNumber":159,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":161,"author":{"gitId":"yyixue"},"content":"    private static void createTodo(String todoDescription) {"},{"lineNumber":162,"author":{"gitId":"yyixue"},"content":"        Todo t \u003d new Todo(todoDescription);"},{"lineNumber":163,"author":{"gitId":"yyixue"},"content":"        TaskList.allTasks.add(t);"},{"lineNumber":164,"author":{"gitId":"yyixue"},"content":"        TextUi.taskAddedMessage(t);"},{"lineNumber":165,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":167,"author":{"gitId":"yyixue"},"content":"    private static void createDeadline(String deadlineDescription) {"},{"lineNumber":168,"author":{"gitId":"yyixue"},"content":"        String[] deadlineParts \u003d deadlineDescription.split(\"/by\");"},{"lineNumber":169,"author":{"gitId":"yyixue"},"content":"        try {"},{"lineNumber":170,"author":{"gitId":"yyixue"},"content":"            if (deadlineParts.length \u003d\u003d 1) {"},{"lineNumber":171,"author":{"gitId":"yyixue"},"content":"                throw new ParseException(\"OOPS!! You did not include a deadline using /by. :(\");"},{"lineNumber":172,"author":{"gitId":"yyixue"},"content":"            }"},{"lineNumber":173,"author":{"gitId":"yyixue"},"content":"            Deadline d \u003d new Deadline(deadlineParts[0], deadlineParts[1]);"},{"lineNumber":174,"author":{"gitId":"yyixue"},"content":"            TaskList.allTasks.add(d);"},{"lineNumber":175,"author":{"gitId":"yyixue"},"content":"            TextUi.taskAddedMessage(d);"},{"lineNumber":176,"author":{"gitId":"yyixue"},"content":"        } catch (ParseException p){"},{"lineNumber":177,"author":{"gitId":"yyixue"},"content":"            System.out.println(p);"},{"lineNumber":178,"author":{"gitId":"yyixue"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":181,"author":{"gitId":"yyixue"},"content":"    private static void createEvent(String eventDescription) {"},{"lineNumber":182,"author":{"gitId":"yyixue"},"content":"        String[] eventParts \u003d eventDescription.split(\"/at\");"},{"lineNumber":183,"author":{"gitId":"yyixue"},"content":"        try {"},{"lineNumber":184,"author":{"gitId":"yyixue"},"content":"            if (eventParts.length \u003d\u003d 1) {"},{"lineNumber":185,"author":{"gitId":"yyixue"},"content":"                throw new ParseException(\"OOPS!! You did not include an event date using /at. :(\");"},{"lineNumber":186,"author":{"gitId":"yyixue"},"content":"            }"},{"lineNumber":187,"author":{"gitId":"yyixue"},"content":"            Event e \u003d new Event(eventParts[0], eventParts[1]);"},{"lineNumber":188,"author":{"gitId":"yyixue"},"content":"            TaskList.allTasks.add(e);"},{"lineNumber":189,"author":{"gitId":"yyixue"},"content":"            TextUi.taskAddedMessage(e);"},{"lineNumber":190,"author":{"gitId":"yyixue"},"content":"        } catch (ParseException p){"},{"lineNumber":191,"author":{"gitId":"yyixue"},"content":"            System.out.println(p);"},{"lineNumber":192,"author":{"gitId":"yyixue"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":195,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":196,"author":{"gitId":"yyixue"},"content":"    private static void storeTask(int taskNum) {"},{"lineNumber":197,"author":{"gitId":"yyixue"},"content":"        if (taskNum\u003d\u003d1) {"},{"lineNumber":198,"author":{"gitId":"yyixue"},"content":"            try {"},{"lineNumber":199,"author":{"gitId":"yyixue"},"content":"                Storage.writeToFile(taskNum + \". \" + TaskList.allTasks.get(0).toString() + \"\\n\");"},{"lineNumber":200,"author":{"gitId":"yyixue"},"content":"            } catch (IOException a) {"},{"lineNumber":201,"author":{"gitId":"yyixue"},"content":"                System.out.println(\"Something went wrong: \" + a.getMessage());"},{"lineNumber":202,"author":{"gitId":"yyixue"},"content":"            }"},{"lineNumber":203,"author":{"gitId":"yyixue"},"content":"        } else {"},{"lineNumber":204,"author":{"gitId":"yyixue"},"content":"            try {"},{"lineNumber":205,"author":{"gitId":"yyixue"},"content":"                Storage.appendToFile(taskNum + \". \" + TaskList.allTasks.get(taskNum-1).toString() + \"\\n\");"},{"lineNumber":206,"author":{"gitId":"yyixue"},"content":"            } catch (IOException a) {"},{"lineNumber":207,"author":{"gitId":"yyixue"},"content":"                System.out.println(\"Something went wrong: \" + a.getMessage());"},{"lineNumber":208,"author":{"gitId":"yyixue"},"content":"            }"},{"lineNumber":209,"author":{"gitId":"yyixue"},"content":"        }"},{"lineNumber":210,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":211,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":212,"author":{"gitId":"yyixue"},"content":"    private static ArrayList\u003cTask\u003e getMatches(String keyword) {"},{"lineNumber":213,"author":{"gitId":"yyixue"},"content":"        ArrayList\u003cTask\u003e matchList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":214,"author":{"gitId":"yyixue"},"content":"        for (int i\u003d0; i \u003c TaskList.allTasks.size(); i++) {"},{"lineNumber":215,"author":{"gitId":"yyixue"},"content":"            if (TaskList.allTasks.get(i).getTask().toLowerCase().contains(keyword.toLowerCase())) {"},{"lineNumber":216,"author":{"gitId":"yyixue"},"content":"                matchList.add(TaskList.allTasks.get(i));"},{"lineNumber":217,"author":{"gitId":"yyixue"},"content":"            }"},{"lineNumber":218,"author":{"gitId":"yyixue"},"content":"        }"},{"lineNumber":219,"author":{"gitId":"yyixue"},"content":"        return matchList;"},{"lineNumber":220,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":221,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":222,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":223,"author":{"gitId":"yyixue"},"content":"     * Signals that the user input could not be parsed."},{"lineNumber":224,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":225,"author":{"gitId":"yyixue"},"content":"    public static class ParseException extends Exception {"},{"lineNumber":226,"author":{"gitId":"yyixue"},"content":"        ParseException(String message) {"},{"lineNumber":227,"author":{"gitId":"yyixue"},"content":"            super(message);"},{"lineNumber":228,"author":{"gitId":"yyixue"},"content":"        }"},{"lineNumber":229,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":231,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":232,"author":{"gitId":"yyixue"},"content":"     * Signals that the user\u0027s input task number does not exist in the task list."},{"lineNumber":233,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":234,"author":{"gitId":"yyixue"},"content":"    public static class IllegalValueException extends Exception {"},{"lineNumber":235,"author":{"gitId":"yyixue"},"content":"        IllegalValueException(String message) {"},{"lineNumber":236,"author":{"gitId":"yyixue"},"content":"            super(message);"},{"lineNumber":237,"author":{"gitId":"yyixue"},"content":"        }"},{"lineNumber":238,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":239,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":240,"author":{"gitId":"yyixue"},"content":"}"}],"authorContributionMap":{"yyixue":240}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyixue"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":3,"author":{"gitId":"yyixue"},"content":"import task.Deadline;"},{"lineNumber":4,"author":{"gitId":"yyixue"},"content":"import task.Event;"},{"lineNumber":5,"author":{"gitId":"yyixue"},"content":"import task.Task;"},{"lineNumber":6,"author":{"gitId":"yyixue"},"content":"import task.Todo;"},{"lineNumber":7,"author":{"gitId":"yyixue"},"content":"import tasklist.TaskList;"},{"lineNumber":8,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":9,"author":{"gitId":"yyixue"},"content":"import java.io.File;"},{"lineNumber":10,"author":{"gitId":"yyixue"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":11,"author":{"gitId":"yyixue"},"content":"import java.io.FileWriter;"},{"lineNumber":12,"author":{"gitId":"yyixue"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"yyixue"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"yyixue"},"content":"import java.util.Scanner;"},{"lineNumber":15,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":16,"author":{"gitId":"yyixue"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"yyixue"},"content":" * Represents any file-related actions such as loading tasks from"},{"lineNumber":18,"author":{"gitId":"yyixue"},"content":" * the file and saving tasks in the file."},{"lineNumber":19,"author":{"gitId":"yyixue"},"content":" */"},{"lineNumber":20,"author":{"gitId":"yyixue"},"content":"public class Storage {"},{"lineNumber":21,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":22,"author":{"gitId":"yyixue"},"content":"    private static String filePath;"},{"lineNumber":23,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":24,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"yyixue"},"content":"     * Creates a new file for storing tasks using the input filepath if the file"},{"lineNumber":26,"author":{"gitId":"yyixue"},"content":"     * does not exist."},{"lineNumber":27,"author":{"gitId":"yyixue"},"content":"     * If the file exists, read the contents of the file to get all existing tasks."},{"lineNumber":28,"author":{"gitId":"yyixue"},"content":"     * @param filePath path to the .txt file that stores all tasks."},{"lineNumber":29,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"yyixue"},"content":"    public Storage(String filePath) {"},{"lineNumber":31,"author":{"gitId":"yyixue"},"content":"        File f \u003d new File(filePath);"},{"lineNumber":32,"author":{"gitId":"yyixue"},"content":"        Storage.filePath \u003d filePath;"},{"lineNumber":33,"author":{"gitId":"yyixue"},"content":"        if(f.exists() \u0026\u0026 !f.isDirectory()) {"},{"lineNumber":34,"author":{"gitId":"yyixue"},"content":"            ReadFile(f);"},{"lineNumber":35,"author":{"gitId":"yyixue"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":38,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"yyixue"},"content":"     * Add task to the .txt file that stores all tasks."},{"lineNumber":40,"author":{"gitId":"yyixue"},"content":"     * @param textToAppend String format of the task to add into the .txt file."},{"lineNumber":41,"author":{"gitId":"yyixue"},"content":"     * @throws IOException if the .txt file cannot be found."},{"lineNumber":42,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"yyixue"},"content":"    public static void appendToFile(String textToAppend) throws IOException {"},{"lineNumber":44,"author":{"gitId":"yyixue"},"content":"        FileWriter fw \u003d new FileWriter(Storage.filePath, true);"},{"lineNumber":45,"author":{"gitId":"yyixue"},"content":"        fw.write(textToAppend);"},{"lineNumber":46,"author":{"gitId":"yyixue"},"content":"        fw.close();"},{"lineNumber":47,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":49,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"yyixue"},"content":"     * Add task to an empty .txt file that stores all tasks."},{"lineNumber":51,"author":{"gitId":"yyixue"},"content":"     * @param textToAdd String format of the task to add into the .txt file."},{"lineNumber":52,"author":{"gitId":"yyixue"},"content":"     * @throws IOException if the .txt file cannot be found."},{"lineNumber":53,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"yyixue"},"content":"    public static void writeToFile(String textToAdd) throws IOException {"},{"lineNumber":55,"author":{"gitId":"yyixue"},"content":"        FileWriter fw \u003d new FileWriter(Storage.filePath);"},{"lineNumber":56,"author":{"gitId":"yyixue"},"content":"        fw.write(textToAdd);"},{"lineNumber":57,"author":{"gitId":"yyixue"},"content":"        fw.close();"},{"lineNumber":58,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":60,"author":{"gitId":"yyixue"},"content":"    private static void ReadFile(File fileObj) {"},{"lineNumber":61,"author":{"gitId":"yyixue"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"yyixue"},"content":"            Scanner fileReader \u003d new Scanner(fileObj);"},{"lineNumber":63,"author":{"gitId":"yyixue"},"content":"            while (fileReader.hasNextLine()) {"},{"lineNumber":64,"author":{"gitId":"yyixue"},"content":"                String line \u003d fileReader.nextLine();"},{"lineNumber":65,"author":{"gitId":"yyixue"},"content":"                char taskType \u003d line.charAt(4);"},{"lineNumber":66,"author":{"gitId":"yyixue"},"content":"                char doneStatus \u003d line.charAt(7);"},{"lineNumber":67,"author":{"gitId":"yyixue"},"content":"                String subLine \u003d line.substring(10);"},{"lineNumber":68,"author":{"gitId":"yyixue"},"content":"                switch (taskType) {"},{"lineNumber":69,"author":{"gitId":"yyixue"},"content":"                    case \u0027T\u0027:"},{"lineNumber":70,"author":{"gitId":"yyixue"},"content":"                        Todo t \u003d new Todo(subLine);"},{"lineNumber":71,"author":{"gitId":"yyixue"},"content":"                        if (doneStatus \u003d\u003d \u0027X\u0027) {"},{"lineNumber":72,"author":{"gitId":"yyixue"},"content":"                            t.setDone();"},{"lineNumber":73,"author":{"gitId":"yyixue"},"content":"                        }"},{"lineNumber":74,"author":{"gitId":"yyixue"},"content":"                        TaskList.allTasks.add(t);"},{"lineNumber":75,"author":{"gitId":"yyixue"},"content":"                        break;"},{"lineNumber":76,"author":{"gitId":"yyixue"},"content":"                    case \u0027D\u0027:"},{"lineNumber":77,"author":{"gitId":"yyixue"},"content":"                        String[] deadlineParts \u003d subLine.split(\" \\\\(by: \");"},{"lineNumber":78,"author":{"gitId":"yyixue"},"content":"                        Deadline d \u003d new Deadline(deadlineParts[0], deadlineParts[1].substring(0, deadlineParts[1].length() -1));"},{"lineNumber":79,"author":{"gitId":"yyixue"},"content":"                        if (doneStatus \u003d\u003d \u0027X\u0027) {"},{"lineNumber":80,"author":{"gitId":"yyixue"},"content":"                            d.setDone();"},{"lineNumber":81,"author":{"gitId":"yyixue"},"content":"                        }"},{"lineNumber":82,"author":{"gitId":"yyixue"},"content":"                        TaskList.allTasks.add(d);"},{"lineNumber":83,"author":{"gitId":"yyixue"},"content":"                        break;"},{"lineNumber":84,"author":{"gitId":"yyixue"},"content":"                    case \u0027E\u0027:"},{"lineNumber":85,"author":{"gitId":"yyixue"},"content":"                        String[] eventParts \u003d subLine.split(\" \\\\(at: \");"},{"lineNumber":86,"author":{"gitId":"yyixue"},"content":"                        Event e \u003d new Event(eventParts[0], eventParts[1].substring(0, eventParts[1].length()-1));"},{"lineNumber":87,"author":{"gitId":"yyixue"},"content":"                        if (doneStatus \u003d\u003d \u0027X\u0027) {"},{"lineNumber":88,"author":{"gitId":"yyixue"},"content":"                            e.setDone();"},{"lineNumber":89,"author":{"gitId":"yyixue"},"content":"                        }"},{"lineNumber":90,"author":{"gitId":"yyixue"},"content":"                        TaskList.allTasks.add(e);"},{"lineNumber":91,"author":{"gitId":"yyixue"},"content":"                        break;"},{"lineNumber":92,"author":{"gitId":"yyixue"},"content":"                    default:"},{"lineNumber":93,"author":{"gitId":"yyixue"},"content":"                        break;"},{"lineNumber":94,"author":{"gitId":"yyixue"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"yyixue"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"yyixue"},"content":"            fileReader.close();"},{"lineNumber":97,"author":{"gitId":"yyixue"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":98,"author":{"gitId":"yyixue"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":99,"author":{"gitId":"yyixue"},"content":"            e.printStackTrace();"},{"lineNumber":100,"author":{"gitId":"yyixue"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":103,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"yyixue"},"content":"     * Get an ArrayList of existing tasks from the .txt file."},{"lineNumber":105,"author":{"gitId":"yyixue"},"content":"     * @return ArrayList\u003cTask\u003e\u003c/Task\u003e TaskList.allTasks"},{"lineNumber":106,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"yyixue"},"content":"    public static ArrayList\u003cTask\u003e getSavedTasks(){"},{"lineNumber":108,"author":{"gitId":"yyixue"},"content":"        return TaskList.allTasks;"},{"lineNumber":109,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":111,"author":{"gitId":"yyixue"},"content":"    //"},{"lineNumber":112,"author":{"gitId":"yyixue"},"content":"}"}],"authorContributionMap":{"yyixue":112}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyixue"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":3,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":4,"author":{"gitId":"yyixue"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"yyixue"},"content":"import java.time.LocalTime;"},{"lineNumber":6,"author":{"gitId":"yyixue"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"yyixue"},"content":"import java.util.regex.Pattern;"},{"lineNumber":8,"author":{"gitId":"yyixue"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":10,"author":{"gitId":"yyixue"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"yyixue"},"content":" * Represents a deadline in the task list."},{"lineNumber":12,"author":{"gitId":"yyixue"},"content":" */"},{"lineNumber":13,"author":{"gitId":"yyixue"},"content":"public class Deadline extends Task{"},{"lineNumber":14,"author":{"gitId":"yyixue"},"content":"    protected String by;"},{"lineNumber":15,"author":{"gitId":"yyixue"},"content":"    protected LocalTime time;"},{"lineNumber":16,"author":{"gitId":"yyixue"},"content":"    protected LocalDate date;"},{"lineNumber":17,"author":{"gitId":"yyixue"},"content":"    protected LocalDateTime datetime;"},{"lineNumber":18,"author":{"gitId":"yyixue"},"content":"    private static final String DATE_FORMAT \u003d \"\\\\d+[-]\\\\d+[-]\\\\d+\";"},{"lineNumber":19,"author":{"gitId":"yyixue"},"content":"    private static final String TIME_FORMAT \u003d \"\\\\d{4}\";"},{"lineNumber":20,"author":{"gitId":"yyixue"},"content":"    private static final String DATETIME_FORMAT \u003d \"\\\\d+-\\\\d+-\\\\d+\\\\s+\\\\d{4}\";"},{"lineNumber":21,"author":{"gitId":"yyixue"},"content":"    private static final String FINAL_DATETIME_FORMAT \u003d \"MMM dd yyyy HH:mm\";"},{"lineNumber":22,"author":{"gitId":"yyixue"},"content":"    private static final String FINAL_DATE_FORMAT \u003d \"MMM dd yyyy\";"},{"lineNumber":23,"author":{"gitId":"yyixue"},"content":"    private static final String FINAL_TIME_FORMAT \u003d \"HH:mm\";"},{"lineNumber":24,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":25,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"yyixue"},"content":"     * Create deadline."},{"lineNumber":27,"author":{"gitId":"yyixue"},"content":"     * @param task String description of the deadline."},{"lineNumber":28,"author":{"gitId":"yyixue"},"content":"     * @param by String date and time of the deadline."},{"lineNumber":29,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"yyixue"},"content":"    public Deadline(String task, String by) {"},{"lineNumber":31,"author":{"gitId":"yyixue"},"content":"        super(task);"},{"lineNumber":32,"author":{"gitId":"yyixue"},"content":"        this.by \u003d by;"},{"lineNumber":33,"author":{"gitId":"yyixue"},"content":"        setDateTime(by);"},{"lineNumber":34,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":36,"author":{"gitId":"yyixue"},"content":"    private void setDateTime(String by) {"},{"lineNumber":37,"author":{"gitId":"yyixue"},"content":"        String trimmedBy \u003d by.trim();"},{"lineNumber":38,"author":{"gitId":"yyixue"},"content":"        if (Pattern.matches(DATETIME_FORMAT, trimmedBy)) {"},{"lineNumber":39,"author":{"gitId":"yyixue"},"content":"            String[] byParts \u003d trimmedBy.split(\" \");"},{"lineNumber":40,"author":{"gitId":"yyixue"},"content":"            LocalDate tempDate \u003d LocalDate.parse(byParts[0]);"},{"lineNumber":41,"author":{"gitId":"yyixue"},"content":"            int tempHour \u003d Integer.parseInt(byParts[1].substring(0, 2));"},{"lineNumber":42,"author":{"gitId":"yyixue"},"content":"            int tempMinute \u003d Integer.parseInt(byParts[1].substring(2));"},{"lineNumber":43,"author":{"gitId":"yyixue"},"content":"            LocalTime tempTime \u003d LocalTime.of(tempHour, tempMinute);"},{"lineNumber":44,"author":{"gitId":"yyixue"},"content":"            this.datetime \u003d LocalDateTime.of(tempDate, tempTime);"},{"lineNumber":45,"author":{"gitId":"yyixue"},"content":"        } else if (Pattern.matches(TIME_FORMAT, trimmedBy)) {"},{"lineNumber":46,"author":{"gitId":"yyixue"},"content":"            int hour \u003d Integer.parseInt(trimmedBy.substring(0, 2));"},{"lineNumber":47,"author":{"gitId":"yyixue"},"content":"            int minute \u003d Integer.parseInt(trimmedBy.substring(2));"},{"lineNumber":48,"author":{"gitId":"yyixue"},"content":"            this.time \u003d LocalTime.of(hour, minute);"},{"lineNumber":49,"author":{"gitId":"yyixue"},"content":"        } else if (Pattern.matches(DATE_FORMAT, trimmedBy)) {"},{"lineNumber":50,"author":{"gitId":"yyixue"},"content":"            this.date \u003d LocalDate.parse(trimmedBy);"},{"lineNumber":51,"author":{"gitId":"yyixue"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":54,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":55,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"yyixue"},"content":"     * Add [D] symbol that represents a deadline."},{"lineNumber":57,"author":{"gitId":"yyixue"},"content":"     * @return String formatted task in text format with task type,"},{"lineNumber":58,"author":{"gitId":"yyixue"},"content":"     * done status and task description."},{"lineNumber":59,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"yyixue"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"yyixue"},"content":"    public String toString() {"},{"lineNumber":62,"author":{"gitId":"yyixue"},"content":"        if (Pattern.matches(DATETIME_FORMAT, by.trim())) {"},{"lineNumber":63,"author":{"gitId":"yyixue"},"content":"            String formattedDateTime \u003d this.datetime.format(DateTimeFormatter.ofPattern(FINAL_DATETIME_FORMAT));"},{"lineNumber":64,"author":{"gitId":"yyixue"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + formattedDateTime + \")\";"},{"lineNumber":65,"author":{"gitId":"yyixue"},"content":"        } else if (Pattern.matches(TIME_FORMAT, by.trim())) {"},{"lineNumber":66,"author":{"gitId":"yyixue"},"content":"            String formattedTime \u003d this.time.format(DateTimeFormatter.ofPattern(FINAL_TIME_FORMAT));"},{"lineNumber":67,"author":{"gitId":"yyixue"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + formattedTime + \")\";"},{"lineNumber":68,"author":{"gitId":"yyixue"},"content":"        } else if (Pattern.matches(DATE_FORMAT, by.trim())) {"},{"lineNumber":69,"author":{"gitId":"yyixue"},"content":"            String formattedDate \u003d this.date.format(DateTimeFormatter.ofPattern(FINAL_DATE_FORMAT));"},{"lineNumber":70,"author":{"gitId":"yyixue"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";"},{"lineNumber":71,"author":{"gitId":"yyixue"},"content":"        } else {"},{"lineNumber":72,"author":{"gitId":"yyixue"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":73,"author":{"gitId":"yyixue"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"yyixue"},"content":"}"}],"authorContributionMap":{"yyixue":75}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyixue"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":3,"author":{"gitId":"yyixue"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"yyixue"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"yyixue"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"yyixue"},"content":"import java.util.regex.Pattern;"},{"lineNumber":7,"author":{"gitId":"yyixue"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":9,"author":{"gitId":"yyixue"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"yyixue"},"content":" * Represents an event in the task list."},{"lineNumber":11,"author":{"gitId":"yyixue"},"content":" */"},{"lineNumber":12,"author":{"gitId":"yyixue"},"content":"public class Event extends Task{"},{"lineNumber":13,"author":{"gitId":"yyixue"},"content":"    protected String at;"},{"lineNumber":14,"author":{"gitId":"yyixue"},"content":"    protected LocalTime time;"},{"lineNumber":15,"author":{"gitId":"yyixue"},"content":"    protected LocalDate date;"},{"lineNumber":16,"author":{"gitId":"yyixue"},"content":"    protected LocalDateTime datetime;"},{"lineNumber":17,"author":{"gitId":"yyixue"},"content":"    private static final String DATE_FORMAT \u003d \"\\\\d+[-]\\\\d+[-]\\\\d+\";"},{"lineNumber":18,"author":{"gitId":"yyixue"},"content":"    private static final String TIME_FORMAT \u003d \"\\\\d{4}\";"},{"lineNumber":19,"author":{"gitId":"yyixue"},"content":"    private static final String DATETIME_FORMAT \u003d \"\\\\d+-\\\\d+-\\\\d+\\\\s+\\\\d{4}\";"},{"lineNumber":20,"author":{"gitId":"yyixue"},"content":"    private static final String FINAL_DATETIME_FORMAT \u003d \"MMM dd yyyy HH:mm\";"},{"lineNumber":21,"author":{"gitId":"yyixue"},"content":"    private static final String FINAL_DATE_FORMAT \u003d \"MMM dd yyyy\";"},{"lineNumber":22,"author":{"gitId":"yyixue"},"content":"    private static final String FINAL_TIME_FORMAT \u003d \"HH:mm\";"},{"lineNumber":23,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":24,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"yyixue"},"content":"     * Create event."},{"lineNumber":26,"author":{"gitId":"yyixue"},"content":"     * @param task String description of the event."},{"lineNumber":27,"author":{"gitId":"yyixue"},"content":"     * @param at String date and time of the event."},{"lineNumber":28,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"yyixue"},"content":"    public Event(String task, String at) {"},{"lineNumber":30,"author":{"gitId":"yyixue"},"content":"        super(task);"},{"lineNumber":31,"author":{"gitId":"yyixue"},"content":"        this.at \u003d at;"},{"lineNumber":32,"author":{"gitId":"yyixue"},"content":"        setDateTime(at);"},{"lineNumber":33,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":35,"author":{"gitId":"yyixue"},"content":"    private void setDateTime(String at) {"},{"lineNumber":36,"author":{"gitId":"yyixue"},"content":"        String trimmedAt \u003d at.trim();"},{"lineNumber":37,"author":{"gitId":"yyixue"},"content":"        if (Pattern.matches(DATETIME_FORMAT, trimmedAt)) {"},{"lineNumber":38,"author":{"gitId":"yyixue"},"content":"            String[] byParts \u003d trimmedAt.split(\" \");"},{"lineNumber":39,"author":{"gitId":"yyixue"},"content":"            LocalDate tempDate \u003d LocalDate.parse(byParts[0]);"},{"lineNumber":40,"author":{"gitId":"yyixue"},"content":"            int tempHour \u003d Integer.parseInt(byParts[1].substring(0, 2));"},{"lineNumber":41,"author":{"gitId":"yyixue"},"content":"            int tempMinute \u003d Integer.parseInt(byParts[1].substring(2));"},{"lineNumber":42,"author":{"gitId":"yyixue"},"content":"            LocalTime tempTime \u003d LocalTime.of(tempHour, tempMinute);"},{"lineNumber":43,"author":{"gitId":"yyixue"},"content":"            this.datetime \u003d LocalDateTime.of(tempDate, tempTime);"},{"lineNumber":44,"author":{"gitId":"yyixue"},"content":"        } else if (Pattern.matches(TIME_FORMAT, trimmedAt)) {"},{"lineNumber":45,"author":{"gitId":"yyixue"},"content":"            int hour \u003d Integer.parseInt(trimmedAt.substring(0, 2));"},{"lineNumber":46,"author":{"gitId":"yyixue"},"content":"            int minute \u003d Integer.parseInt(trimmedAt.substring(2));"},{"lineNumber":47,"author":{"gitId":"yyixue"},"content":"            this.time \u003d LocalTime.of(hour, minute);"},{"lineNumber":48,"author":{"gitId":"yyixue"},"content":"        } else if (Pattern.matches(DATE_FORMAT, trimmedAt)) {"},{"lineNumber":49,"author":{"gitId":"yyixue"},"content":"            this.date \u003d LocalDate.parse(trimmedAt);"},{"lineNumber":50,"author":{"gitId":"yyixue"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":53,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"yyixue"},"content":"     * Add [E] symbol that represents an event."},{"lineNumber":55,"author":{"gitId":"yyixue"},"content":"     * @return String formatted task in text format with task type,"},{"lineNumber":56,"author":{"gitId":"yyixue"},"content":"     * done status and task description."},{"lineNumber":57,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"yyixue"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"yyixue"},"content":"    public String toString() {"},{"lineNumber":60,"author":{"gitId":"yyixue"},"content":"        if (Pattern.matches(DATETIME_FORMAT, at.trim())) {"},{"lineNumber":61,"author":{"gitId":"yyixue"},"content":"            String formattedDateTime \u003d this.datetime.format(DateTimeFormatter.ofPattern(FINAL_DATETIME_FORMAT));"},{"lineNumber":62,"author":{"gitId":"yyixue"},"content":"            return \"[E]\" + super.toString() + \" (at: \" + formattedDateTime + \")\";"},{"lineNumber":63,"author":{"gitId":"yyixue"},"content":"        } else if (Pattern.matches(TIME_FORMAT, at.trim())) {"},{"lineNumber":64,"author":{"gitId":"yyixue"},"content":"            String formattedTime \u003d this.time.format(DateTimeFormatter.ofPattern(FINAL_TIME_FORMAT));"},{"lineNumber":65,"author":{"gitId":"yyixue"},"content":"            return \"[E]\" + super.toString() + \" (at: \" + formattedTime + \")\";"},{"lineNumber":66,"author":{"gitId":"yyixue"},"content":"        } else if (Pattern.matches(DATE_FORMAT, at.trim())) {"},{"lineNumber":67,"author":{"gitId":"yyixue"},"content":"            String formattedDate \u003d this.date.format(DateTimeFormatter.ofPattern(FINAL_DATE_FORMAT));"},{"lineNumber":68,"author":{"gitId":"yyixue"},"content":"            return \"[E]\" + super.toString() + \" (at: \" + formattedDate + \")\";"},{"lineNumber":69,"author":{"gitId":"yyixue"},"content":"        } else {"},{"lineNumber":70,"author":{"gitId":"yyixue"},"content":"            return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":71,"author":{"gitId":"yyixue"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"yyixue"},"content":"}"}],"authorContributionMap":{"yyixue":73}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyixue"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":3,"author":{"gitId":"yyixue"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yyixue"},"content":" * Represents a task in the task list."},{"lineNumber":5,"author":{"gitId":"yyixue"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yyixue"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":8,"author":{"gitId":"yyixue"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"yyixue"},"content":"    protected String task;"},{"lineNumber":10,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":11,"author":{"gitId":"yyixue"},"content":"    public Task(String task) {"},{"lineNumber":12,"author":{"gitId":"yyixue"},"content":"        this.isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"yyixue"},"content":"        this.task \u003d task;"},{"lineNumber":14,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":16,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"yyixue"},"content":"     * Formats the task description as text."},{"lineNumber":18,"author":{"gitId":"yyixue"},"content":"     * @return String task."},{"lineNumber":19,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"yyixue"},"content":"    public String getTask() {"},{"lineNumber":21,"author":{"gitId":"yyixue"},"content":"        return task;"},{"lineNumber":22,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":24,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"yyixue"},"content":"     * Mark the task as done."},{"lineNumber":26,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"yyixue"},"content":"    public void setDone() {"},{"lineNumber":28,"author":{"gitId":"yyixue"},"content":"        isDone \u003d true;"},{"lineNumber":29,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":31,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"yyixue"},"content":"     * Format the done status of the task as text."},{"lineNumber":33,"author":{"gitId":"yyixue"},"content":"     * @return String done status."},{"lineNumber":34,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"yyixue"},"content":"    public String getDone() {"},{"lineNumber":36,"author":{"gitId":"yyixue"},"content":"        if (isDone) {"},{"lineNumber":37,"author":{"gitId":"yyixue"},"content":"            return \"[X]\";"},{"lineNumber":38,"author":{"gitId":"yyixue"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"yyixue"},"content":"            return \"[ ]\";"},{"lineNumber":40,"author":{"gitId":"yyixue"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":43,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"yyixue"},"content":"     * Format the entire task and done status as text."},{"lineNumber":45,"author":{"gitId":"yyixue"},"content":"     * @return String done status and task."},{"lineNumber":46,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"yyixue"},"content":"    public String toString() {"},{"lineNumber":48,"author":{"gitId":"yyixue"},"content":"        return getDone() + \" \" + task;"},{"lineNumber":49,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":51,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":52,"author":{"gitId":"yyixue"},"content":"}"}],"authorContributionMap":{"yyixue":52}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyixue"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":3,"author":{"gitId":"yyixue"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yyixue"},"content":" * Represents a todo in the task list."},{"lineNumber":5,"author":{"gitId":"yyixue"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yyixue"},"content":"public class Todo extends Task{"},{"lineNumber":7,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":8,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"yyixue"},"content":"     * Create todo."},{"lineNumber":10,"author":{"gitId":"yyixue"},"content":"     * @param task String description of the todo."},{"lineNumber":11,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"yyixue"},"content":"    public Todo(String task){"},{"lineNumber":13,"author":{"gitId":"yyixue"},"content":"        super(task);"},{"lineNumber":14,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":16,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"yyixue"},"content":"     * Add [T] symbol that represents a todo."},{"lineNumber":18,"author":{"gitId":"yyixue"},"content":"     * @return String formatted task in text format with task type,"},{"lineNumber":19,"author":{"gitId":"yyixue"},"content":"     * done status and task description."},{"lineNumber":20,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"yyixue"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"yyixue"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"yyixue"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":24,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"yyixue"},"content":"}"}],"authorContributionMap":{"yyixue":25}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyixue"},"content":"package tasklist;"},{"lineNumber":2,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":3,"author":{"gitId":"yyixue"},"content":"import task.Task;"},{"lineNumber":4,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":5,"author":{"gitId":"yyixue"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":7,"author":{"gitId":"yyixue"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"yyixue"},"content":" * Represents the entire task list."},{"lineNumber":9,"author":{"gitId":"yyixue"},"content":" */"},{"lineNumber":10,"author":{"gitId":"yyixue"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":12,"author":{"gitId":"yyixue"},"content":"    public static ArrayList\u003cTask\u003e allTasks;"},{"lineNumber":13,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":14,"author":{"gitId":"yyixue"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList){"},{"lineNumber":15,"author":{"gitId":"yyixue"},"content":"        allTasks \u003d taskList;"},{"lineNumber":16,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":18,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":19,"author":{"gitId":"yyixue"},"content":"}"}],"authorContributionMap":{"yyixue":19}},{"path":"src/main/java/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyixue"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":3,"author":{"gitId":"yyixue"},"content":"import tasklist.TaskList;"},{"lineNumber":4,"author":{"gitId":"yyixue"},"content":"import task.Task;"},{"lineNumber":5,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":6,"author":{"gitId":"yyixue"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"yyixue"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":9,"author":{"gitId":"yyixue"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"yyixue"},"content":" * Represents all interactions with the user."},{"lineNumber":11,"author":{"gitId":"yyixue"},"content":" */"},{"lineNumber":12,"author":{"gitId":"yyixue"},"content":"public class TextUi {"},{"lineNumber":13,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":14,"author":{"gitId":"yyixue"},"content":"    private static final String LINE_BREAK \u003d \"----------------------------------------------------\";"},{"lineNumber":15,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":16,"author":{"gitId":"yyixue"},"content":"    private static final Scanner input \u003d new Scanner(System.in);"},{"lineNumber":17,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":18,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"yyixue"},"content":"     * Shows welcome message to user."},{"lineNumber":20,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"yyixue"},"content":"    public static void showWelcomeMessage() {"},{"lineNumber":22,"author":{"gitId":"yyixue"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":23,"author":{"gitId":"yyixue"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":24,"author":{"gitId":"yyixue"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":25,"author":{"gitId":"yyixue"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":26,"author":{"gitId":"yyixue"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":27,"author":{"gitId":"yyixue"},"content":"        System.out.println(LINE_BREAK);"},{"lineNumber":28,"author":{"gitId":"yyixue"},"content":"        System.out.println(logo);"},{"lineNumber":29,"author":{"gitId":"yyixue"},"content":"        System.out.println(\"Aloha! I\u0027m Duke\");"},{"lineNumber":30,"author":{"gitId":"yyixue"},"content":"        System.out.println(\"What would you like to do today?\");"},{"lineNumber":31,"author":{"gitId":"yyixue"},"content":"        System.out.println(\"Enter \u0027Bye\u0027 when done.\");"},{"lineNumber":32,"author":{"gitId":"yyixue"},"content":"        System.out.println(LINE_BREAK);"},{"lineNumber":33,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":35,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"yyixue"},"content":"     * Shows goodbye message to user."},{"lineNumber":37,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"yyixue"},"content":"    public static void showGoodbyeMessage() {"},{"lineNumber":39,"author":{"gitId":"yyixue"},"content":"        System.out.println(LINE_BREAK);"},{"lineNumber":40,"author":{"gitId":"yyixue"},"content":"        System.out.println(\"Bye! Hope you have a wonderful day.\");"},{"lineNumber":41,"author":{"gitId":"yyixue"},"content":"        System.out.println(LINE_BREAK);"},{"lineNumber":42,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":44,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"yyixue"},"content":"     * Gets user\u0027s input command."},{"lineNumber":46,"author":{"gitId":"yyixue"},"content":"     * Ignores input in the form of whitespaces only or newline."},{"lineNumber":47,"author":{"gitId":"yyixue"},"content":"     * @return String action."},{"lineNumber":48,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"yyixue"},"content":"    public static String getUserCommand() {"},{"lineNumber":50,"author":{"gitId":"yyixue"},"content":"        String action \u003d null;"},{"lineNumber":51,"author":{"gitId":"yyixue"},"content":"        if(!input.hasNext() || (action \u003d input.nextLine()).isEmpty()) System.exit(0);"},{"lineNumber":52,"author":{"gitId":"yyixue"},"content":"        return action;"},{"lineNumber":53,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":55,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"yyixue"},"content":"     * Shows task added message to user."},{"lineNumber":57,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"yyixue"},"content":"    public static void taskAddedMessage(Task t) {"},{"lineNumber":59,"author":{"gitId":"yyixue"},"content":"        System.out.println(LINE_BREAK);"},{"lineNumber":60,"author":{"gitId":"yyixue"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":61,"author":{"gitId":"yyixue"},"content":"        t.toString();"},{"lineNumber":62,"author":{"gitId":"yyixue"},"content":"        System.out.println(\"Now you have \" + TaskList.allTasks.size() + \" tasks in the list.\");"},{"lineNumber":63,"author":{"gitId":"yyixue"},"content":"        System.out.println(LINE_BREAK);"},{"lineNumber":64,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":66,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"yyixue"},"content":"     * Shows entire task list to user."},{"lineNumber":68,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"yyixue"},"content":"    public static void showTaskList() {"},{"lineNumber":70,"author":{"gitId":"yyixue"},"content":"        int taskNum;"},{"lineNumber":71,"author":{"gitId":"yyixue"},"content":"        System.out.println(LINE_BREAK);"},{"lineNumber":72,"author":{"gitId":"yyixue"},"content":"        System.out.println(\"Your current tasks: \");"},{"lineNumber":73,"author":{"gitId":"yyixue"},"content":"        for (int i\u003d0; i \u003c TaskList.allTasks.size(); i++) {"},{"lineNumber":74,"author":{"gitId":"yyixue"},"content":"            if (TaskList.allTasks.get(i) !\u003d null) {"},{"lineNumber":75,"author":{"gitId":"yyixue"},"content":"                taskNum \u003d i + 1;"},{"lineNumber":76,"author":{"gitId":"yyixue"},"content":"                System.out.println(taskNum + \". \" + TaskList.allTasks.get(i).toString());"},{"lineNumber":77,"author":{"gitId":"yyixue"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"yyixue"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"yyixue"},"content":"        System.out.println(LINE_BREAK);"},{"lineNumber":80,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":82,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"yyixue"},"content":"     * Shows user the task he has marked as done."},{"lineNumber":84,"author":{"gitId":"yyixue"},"content":"     * @param taskNum task number of the task the user has marked as done."},{"lineNumber":85,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"yyixue"},"content":"    public static void taskDoneMessage(int taskNum) {"},{"lineNumber":87,"author":{"gitId":"yyixue"},"content":"        System.out.println(\"You\u0027ve completed \" + TaskList.allTasks.get(taskNum).getTask() + \"!\");"},{"lineNumber":88,"author":{"gitId":"yyixue"},"content":"        System.out.println(LINE_BREAK);"},{"lineNumber":89,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":91,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"yyixue"},"content":"     * Shows user the task he has deleted."},{"lineNumber":93,"author":{"gitId":"yyixue"},"content":"     * @param taskNum task number of the task the user has deleted."},{"lineNumber":94,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"yyixue"},"content":"    public static void taskDeleteMessage(int taskNum) {"},{"lineNumber":96,"author":{"gitId":"yyixue"},"content":"        System.out.println(\"Noted. I have removed this task:\");"},{"lineNumber":97,"author":{"gitId":"yyixue"},"content":"        System.out.println(TaskList.allTasks.get(taskNum).toString());"},{"lineNumber":98,"author":{"gitId":"yyixue"},"content":"        System.out.println(\"Now you have \" + (TaskList.allTasks.size() - 1) + \" tasks in the list.\");"},{"lineNumber":99,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":101,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"yyixue"},"content":"     * Informs user that his input command is invalid."},{"lineNumber":103,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"yyixue"},"content":"    public static void showInvalidInputMessage() {"},{"lineNumber":105,"author":{"gitId":"yyixue"},"content":"        System.out.println(LINE_BREAK);"},{"lineNumber":106,"author":{"gitId":"yyixue"},"content":"        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":107,"author":{"gitId":"yyixue"},"content":"        System.out.println(LINE_BREAK);"},{"lineNumber":108,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":110,"author":{"gitId":"yyixue"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"yyixue"},"content":"     * Shows user tasks in his task list that match his keyword."},{"lineNumber":112,"author":{"gitId":"yyixue"},"content":"     * @param matchList List of matched tasks."},{"lineNumber":113,"author":{"gitId":"yyixue"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"yyixue"},"content":"    public static void showMatchedTasks(ArrayList\u003cTask\u003e matchList) {"},{"lineNumber":115,"author":{"gitId":"yyixue"},"content":"        System.out.println(LINE_BREAK);"},{"lineNumber":116,"author":{"gitId":"yyixue"},"content":"        for (int i\u003d0; i \u003c matchList.size(); i++) {"},{"lineNumber":117,"author":{"gitId":"yyixue"},"content":"            int taskNum \u003d i + 1;"},{"lineNumber":118,"author":{"gitId":"yyixue"},"content":"            System.out.println(taskNum + \". \" + matchList.get(i).toString());"},{"lineNumber":119,"author":{"gitId":"yyixue"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"yyixue"},"content":"        System.out.println(LINE_BREAK);"},{"lineNumber":121,"author":{"gitId":"yyixue"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":123,"author":{"gitId":"yyixue"},"content":"}"}],"authorContributionMap":{"yyixue":123}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yyixue"},"content":"1. [E][ ] Attend church service  (at: Mar 02 2021 16:00)"},{"lineNumber":2,"author":{"gitId":"yyixue"},"content":"2. [E][ ] Write daily reflection  (at: 22:00)"},{"lineNumber":3,"author":{"gitId":"yyixue"},"content":"3. [D][ ] Submit research paper  (by: Sep 09 2021 23:59)"},{"lineNumber":4,"author":{"gitId":"yyixue"},"content":"4. [D][ ] Pay school fees  (by: Mar 04 2021)"}],"authorContributionMap":{"yyixue":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"yyixue"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":15,"author":{"gitId":"-"},"content":")"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"yyixue":2,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"yyixue"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"},{"lineNumber":17,"author":{"gitId":"yyixue"},"content":"then"},{"lineNumber":18,"author":{"gitId":"yyixue"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"yyixue"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"yyixue"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":22,"author":{"gitId":"yyixue"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Task.java"},{"lineNumber":23,"author":{"gitId":"yyixue"},"content":"then"},{"lineNumber":24,"author":{"gitId":"yyixue"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":25,"author":{"gitId":"yyixue"},"content":"    exit 1"},{"lineNumber":26,"author":{"gitId":"yyixue"},"content":"fi"},{"lineNumber":27,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":28,"author":{"gitId":"yyixue"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Todo.java"},{"lineNumber":29,"author":{"gitId":"yyixue"},"content":"then"},{"lineNumber":30,"author":{"gitId":"yyixue"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":31,"author":{"gitId":"yyixue"},"content":"    exit 1"},{"lineNumber":32,"author":{"gitId":"yyixue"},"content":"fi"},{"lineNumber":33,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":34,"author":{"gitId":"yyixue"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Event.java"},{"lineNumber":35,"author":{"gitId":"yyixue"},"content":"then"},{"lineNumber":36,"author":{"gitId":"yyixue"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":37,"author":{"gitId":"yyixue"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"yyixue"},"content":"fi"},{"lineNumber":39,"author":{"gitId":"yyixue"},"content":""},{"lineNumber":40,"author":{"gitId":"yyixue"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Deadline.java"},{"lineNumber":41,"author":{"gitId":"-"},"content":"then"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":47,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":50,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":51,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":54,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":55,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":56,"author":{"gitId":"-"},"content":"then"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":59,"author":{"gitId":"-"},"content":"else"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":62,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"yyixue":25,"-":37}}]
