[{"path":".github/ISSUE_TEMPLATE/bug_report.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"---"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":"name: Bug report"},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"about: Create a report to help us improve"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":"title: \u0027\u0027"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"labels: bug"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"assignees: tehtea"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"---"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"**Describe the bug**"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"A clear and concise description of what the bug is."},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"**To Reproduce**"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"Steps to reproduce the behavior:"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"1. Go to \u0027...\u0027"},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"2. Click on \u0027....\u0027"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"3. Scroll down to \u0027....\u0027"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"4. See error"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"**Expected behavior**"},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":"A clear and concise description of what you expected to happen."},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"E.g. Expect that a new popup will appear but it did not."},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":"**Screenshots**"},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":"If applicable, add screenshots to help explain your problem."},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"**Desktop (please complete the following information):**"},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":" - OS: [e.g. iOS]"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":" - Browser [e.g. chrome, safari]"},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":" - Version [e.g. 22]"},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":"**Smartphone (please complete the following information):**"},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":" - Device: [e.g. iPhone6]"},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":" - OS: [e.g. iOS8.1]"},{"lineNumber":35,"author":{"gitId":"tehtea"},"content":" - Browser [e.g. stock browser, safari]"},{"lineNumber":36,"author":{"gitId":"tehtea"},"content":" - Version [e.g. 22]"},{"lineNumber":37,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":38,"author":{"gitId":"tehtea"},"content":"**Additional context**"},{"lineNumber":39,"author":{"gitId":"tehtea"},"content":"Add any other context about the problem here."}],"authorContributionMap":{"tehtea":39}},{"path":".github/ISSUE_TEMPLATE/feature_request.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"---"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":"name: Feature request"},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"about: Suggest an idea for this project"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":"title: \u0027\u0027"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"labels: enhancement"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"assignees: tehtea"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"---"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"**Is your feature request related to a problem? Please describe.**"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"A clear and concise description of what the problem is. Ex. I\u0027m always frustrated when [...]"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"**Describe the solution you\u0027d like**"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"A clear and concise description of what you want to happen."},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"**Describe alternatives you\u0027ve considered**"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"A clear and concise description of any alternative solutions or features you\u0027ve considered."},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"**Additional context**"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"Add any other context or screenshots about the feature request here."}],"authorContributionMap":{"tehtea":20}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"# dukchess.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"1. After that, locate the `src/main/java/dukchess.Duke.java` file, right-click it, and choose `Run dukchess.Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"   "},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":"Notes:"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":"- How to configure Google Style Guide for Intellij: https://medium.com/swlh/configuring-google-style-guide-for-java-for-intellij-c727af4ef248"},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"- How to compile .jar using IntellJ: https://www.jetbrains.com/help/idea/compiling-applications.html#package_into_jar"}],"authorContributionMap":{"tehtea":6,"-":24}},{"path":"data/dukchessData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"[T][ ] buy milk"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":"[E][ ] retire (at: 40)"},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"[D][ ] submit homework (by: never)"}],"authorContributionMap":{"tehtea":3}},{"path":"src/main/java/dukchess/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"import java.util.Locale;"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"import java.util.regex.Matcher;"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"import java.util.regex.Pattern;"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"import dukchess.dao.TaskList;"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.Deadline;"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.Event;"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.Task;"},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.Todo;"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":" * Main application driver class."},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"    private static TaskList tasks;"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":"    private static void initializeDukchess() {"},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":"            String dataDirPath \u003d Paths.get(\"./data\").toString();"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":"            File dataDir \u003d new File(dataDirPath);"},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"            dataDir.mkdir(); // try creating directory. If fail, its okay"},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":"            String duchessDataPath \u003d Paths.get(\"./data/dukchessData.txt\").toString();"},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":"            File dukchessData \u003d new File(duchessDataPath);"},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":"            if (!dukchessData.exists()) { // if file does not exist, create it"},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":"                new FileWriter(dukchessData).close();"},{"lineNumber":35,"author":{"gitId":"tehtea"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"tehtea"},"content":"            tasks \u003d new TaskList(dukchessData);"},{"lineNumber":37,"author":{"gitId":"tehtea"},"content":"        } catch (IOException e) {"},{"lineNumber":38,"author":{"gitId":"tehtea"},"content":"            e.printStackTrace();"},{"lineNumber":39,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":42,"author":{"gitId":"tehtea"},"content":"    private static void printAddedTasks() {"},{"lineNumber":43,"author":{"gitId":"tehtea"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":44,"author":{"gitId":"tehtea"},"content":"            System.out.println(\"No previously added tasks to list Sir/Madam/Other :(\");"},{"lineNumber":45,"author":{"gitId":"tehtea"},"content":"            return;"},{"lineNumber":46,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"tehtea"},"content":"        System.out.println(\"Here are the tasks in your list, Sir/Madam/Other:\");"},{"lineNumber":48,"author":{"gitId":"tehtea"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":49,"author":{"gitId":"tehtea"},"content":"            Task addedTask \u003d tasks.get(i);"},{"lineNumber":50,"author":{"gitId":"tehtea"},"content":"            System.out.printf(\"\u003e\u003e\u003e %d. %s\\n\", i + 1, addedTask.toString());"},{"lineNumber":51,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":54,"author":{"gitId":"tehtea"},"content":"    private static void sayGoodbye() {"},{"lineNumber":55,"author":{"gitId":"tehtea"},"content":"        String goodbyeText \u003d \"Goodbye, hope to see you soon!\";"},{"lineNumber":56,"author":{"gitId":"tehtea"},"content":"        System.out.println(goodbyeText);"},{"lineNumber":57,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":59,"author":{"gitId":"tehtea"},"content":"    private static String setAddedTaskStatus(int taskId, boolean isDone) {"},{"lineNumber":60,"author":{"gitId":"tehtea"},"content":"        int actualTaskId \u003d taskId - 1;"},{"lineNumber":61,"author":{"gitId":"tehtea"},"content":"        if (actualTaskId \u003e\u003d tasks.size() || actualTaskId \u003c 0) {"},{"lineNumber":62,"author":{"gitId":"tehtea"},"content":"            return String.format("},{"lineNumber":63,"author":{"gitId":"tehtea"},"content":"                    \"I\u0027m terribly sorry Sir/Madam/Other :(\\n\""},{"lineNumber":64,"author":{"gitId":"tehtea"},"content":"                            + \"%d is not a valid task id for the current list of tasks.\","},{"lineNumber":65,"author":{"gitId":"tehtea"},"content":"                    taskId);"},{"lineNumber":66,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"tehtea"},"content":"        Task selectedTask \u003d tasks.get(actualTaskId);"},{"lineNumber":68,"author":{"gitId":"tehtea"},"content":"        String originalTaskStatus \u003d selectedTask.toString();"},{"lineNumber":69,"author":{"gitId":"tehtea"},"content":"        selectedTask.setDone(isDone);"},{"lineNumber":70,"author":{"gitId":"tehtea"},"content":"        return String.format(\"Setting to done, original task status: %s\\n\u003e\u003e\u003e New task status: %s\","},{"lineNumber":71,"author":{"gitId":"tehtea"},"content":"                originalTaskStatus, selectedTask.toString());"},{"lineNumber":72,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":74,"author":{"gitId":"tehtea"},"content":"    private static String addTodo(String description) {"},{"lineNumber":75,"author":{"gitId":"tehtea"},"content":"        Todo newTodo \u003d new Todo(description);"},{"lineNumber":76,"author":{"gitId":"tehtea"},"content":"        tasks.add(newTodo);"},{"lineNumber":77,"author":{"gitId":"tehtea"},"content":"        return String.format(\"Gotcha, added this todo: %s\", newTodo.toString());"},{"lineNumber":78,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":80,"author":{"gitId":"tehtea"},"content":"    private static String addDeadline(String description, String by) {"},{"lineNumber":81,"author":{"gitId":"tehtea"},"content":"        Deadline newDeadline \u003d new Deadline(description, by);"},{"lineNumber":82,"author":{"gitId":"tehtea"},"content":"        tasks.add(newDeadline);"},{"lineNumber":83,"author":{"gitId":"tehtea"},"content":"        return String.format(\"Gotcha, added this deadline: %s\", newDeadline.toString());"},{"lineNumber":84,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":86,"author":{"gitId":"tehtea"},"content":"    private static String addEvent(String description, String at) {"},{"lineNumber":87,"author":{"gitId":"tehtea"},"content":"        Event newEvent \u003d new Event(description, at);"},{"lineNumber":88,"author":{"gitId":"tehtea"},"content":"        tasks.add(newEvent);"},{"lineNumber":89,"author":{"gitId":"tehtea"},"content":"        return String.format(\"Gotcha, added this event: %s\", newEvent.toString());"},{"lineNumber":90,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":92,"author":{"gitId":"tehtea"},"content":"    private static String deleteTask(int taskIdToDelete) {"},{"lineNumber":93,"author":{"gitId":"tehtea"},"content":"        try {"},{"lineNumber":94,"author":{"gitId":"tehtea"},"content":"            Task taskToDelete \u003d tasks.get(taskIdToDelete - 1);"},{"lineNumber":95,"author":{"gitId":"tehtea"},"content":"            tasks.remove(taskIdToDelete - 1);"},{"lineNumber":96,"author":{"gitId":"tehtea"},"content":"            return String.format(\"Noted, I\u0027ve removed this task:\\n\" +"},{"lineNumber":97,"author":{"gitId":"tehtea"},"content":"                    \"%s\\n\" +"},{"lineNumber":98,"author":{"gitId":"tehtea"},"content":"                    \"Now, you have %d tasks in the list.\", taskToDelete.toString(), tasks.size());"},{"lineNumber":99,"author":{"gitId":"tehtea"},"content":"        } catch (IndexOutOfBoundsException indexOutOfBoundsException) {"},{"lineNumber":100,"author":{"gitId":"tehtea"},"content":"            return String.format(\"There is no task with id %d at the moment.\", taskIdToDelete);"},{"lineNumber":101,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":104,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"tehtea"},"content":"     * Source: https://stackoverflow.com/questions/31412294/java-check-not-null-empty-else-assign-default-value"},{"lineNumber":106,"author":{"gitId":"tehtea"},"content":"     * Get value of object, and if it is null, set it to the default value."},{"lineNumber":107,"author":{"gitId":"tehtea"},"content":"     * @param defaultValue"},{"lineNumber":108,"author":{"gitId":"tehtea"},"content":"     * @return"},{"lineNumber":109,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"tehtea"},"content":"    public static \u003cT\u003e T getValueOrDefault(T value, T defaultValue) {"},{"lineNumber":111,"author":{"gitId":"tehtea"},"content":"        return value \u003d\u003d null ? defaultValue : value;"},{"lineNumber":112,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":114,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"tehtea"},"content":"     * The main driver function for the application."},{"lineNumber":116,"author":{"gitId":"tehtea"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"tehtea"},"content":"     * @param args command line arguments"},{"lineNumber":118,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":120,"author":{"gitId":"tehtea"},"content":"        initializeDukchess();"},{"lineNumber":121,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":122,"author":{"gitId":"tehtea"},"content":"        String welcomeText \u003d \"Hello, I am a PC assistant\\n\""},{"lineNumber":123,"author":{"gitId":"tehtea"},"content":"                + \"How do you want to set your tasks today?\";"},{"lineNumber":124,"author":{"gitId":"tehtea"},"content":"        System.out.println(welcomeText);"},{"lineNumber":125,"author":{"gitId":"tehtea"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":126,"author":{"gitId":"tehtea"},"content":"        String commandString \u003d scanner.nextLine().toLowerCase(Locale.ROOT).trim();"},{"lineNumber":127,"author":{"gitId":"tehtea"},"content":"        String nextCommand \u003d \"placeholder\";"},{"lineNumber":128,"author":{"gitId":"tehtea"},"content":"        boolean firstCommand \u003d true;"},{"lineNumber":129,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":130,"author":{"gitId":"tehtea"},"content":"        while (!nextCommand.equals(\"bye\")) {"},{"lineNumber":131,"author":{"gitId":"tehtea"},"content":"            if (!firstCommand) {"},{"lineNumber":132,"author":{"gitId":"tehtea"},"content":"                System.out.println(\"What other tasks do you want to do?\");"},{"lineNumber":133,"author":{"gitId":"tehtea"},"content":"                commandString \u003d scanner.nextLine().toLowerCase(Locale.ROOT).trim();"},{"lineNumber":134,"author":{"gitId":"tehtea"},"content":"            }"},{"lineNumber":135,"author":{"gitId":"tehtea"},"content":"            firstCommand \u003d false;"},{"lineNumber":136,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":137,"author":{"gitId":"tehtea"},"content":"            Pattern commandPattern \u003d Pattern.compile(\"(\\\\w+)( .+)?\");"},{"lineNumber":138,"author":{"gitId":"tehtea"},"content":"            Matcher commandMatches \u003d commandPattern.matcher(commandString);"},{"lineNumber":139,"author":{"gitId":"tehtea"},"content":"            if (!commandMatches.matches()) {"},{"lineNumber":140,"author":{"gitId":"tehtea"},"content":"                System.out.println(\"Oof, invalid command :(\");"},{"lineNumber":141,"author":{"gitId":"tehtea"},"content":"                continue;"},{"lineNumber":142,"author":{"gitId":"tehtea"},"content":"            }"},{"lineNumber":143,"author":{"gitId":"tehtea"},"content":"            nextCommand \u003d commandMatches.group(1);"},{"lineNumber":144,"author":{"gitId":"tehtea"},"content":"            String commandArgs \u003d getValueOrDefault(commandMatches.group(2), \"\");"},{"lineNumber":145,"author":{"gitId":"tehtea"},"content":"            commandArgs \u003d commandArgs.trim();"},{"lineNumber":146,"author":{"gitId":"tehtea"},"content":"            switch (nextCommand) {"},{"lineNumber":147,"author":{"gitId":"tehtea"},"content":"            case \"list\":"},{"lineNumber":148,"author":{"gitId":"tehtea"},"content":"                printAddedTasks();"},{"lineNumber":149,"author":{"gitId":"tehtea"},"content":"                continue;"},{"lineNumber":150,"author":{"gitId":"tehtea"},"content":"            case \"bye\":"},{"lineNumber":151,"author":{"gitId":"tehtea"},"content":"                sayGoodbye();"},{"lineNumber":152,"author":{"gitId":"tehtea"},"content":"                tasks.flushTaskList();"},{"lineNumber":153,"author":{"gitId":"tehtea"},"content":"                return;"},{"lineNumber":154,"author":{"gitId":"tehtea"},"content":"            case \"done\":"},{"lineNumber":155,"author":{"gitId":"tehtea"},"content":"                int taskId \u003d Integer.parseInt(commandArgs);"},{"lineNumber":156,"author":{"gitId":"tehtea"},"content":"                String taskStatusAdditionOutcome \u003d setAddedTaskStatus(taskId, true);"},{"lineNumber":157,"author":{"gitId":"tehtea"},"content":"                System.out.println(taskStatusAdditionOutcome);"},{"lineNumber":158,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":159,"author":{"gitId":"tehtea"},"content":"            case \"todo\":"},{"lineNumber":160,"author":{"gitId":"tehtea"},"content":"                if (commandArgs.length() \u003d\u003d 0) {"},{"lineNumber":161,"author":{"gitId":"tehtea"},"content":"                    System.out.println(\"Oops, todo description cannot be empty :(\");"},{"lineNumber":162,"author":{"gitId":"tehtea"},"content":"                    break;"},{"lineNumber":163,"author":{"gitId":"tehtea"},"content":"                }"},{"lineNumber":164,"author":{"gitId":"tehtea"},"content":"                String todoAdditionOutcome \u003d addTodo(commandArgs);"},{"lineNumber":165,"author":{"gitId":"tehtea"},"content":"                System.out.println(todoAdditionOutcome);"},{"lineNumber":166,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":167,"author":{"gitId":"tehtea"},"content":"            case \"deadline\":"},{"lineNumber":168,"author":{"gitId":"tehtea"},"content":"                if (commandArgs.length() \u003d\u003d 0) {"},{"lineNumber":169,"author":{"gitId":"tehtea"},"content":"                    System.out.println(\"Oops, deadline description cannot be empty :(\");"},{"lineNumber":170,"author":{"gitId":"tehtea"},"content":"                    break;"},{"lineNumber":171,"author":{"gitId":"tehtea"},"content":"                }"},{"lineNumber":172,"author":{"gitId":"tehtea"},"content":"                String[] deadlineArgs \u003d commandArgs.split(\" /by \");"},{"lineNumber":173,"author":{"gitId":"tehtea"},"content":"                if (deadlineArgs.length !\u003d 2) {"},{"lineNumber":174,"author":{"gitId":"tehtea"},"content":"                    System.out.println(\"Oops, deadline due date cannot be empty :(\");"},{"lineNumber":175,"author":{"gitId":"tehtea"},"content":"                    break;"},{"lineNumber":176,"author":{"gitId":"tehtea"},"content":"                }"},{"lineNumber":177,"author":{"gitId":"tehtea"},"content":"                String deadlineAdditionOutcome \u003d addDeadline(deadlineArgs[0], deadlineArgs[1]);"},{"lineNumber":178,"author":{"gitId":"tehtea"},"content":"                System.out.println(deadlineAdditionOutcome);"},{"lineNumber":179,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":180,"author":{"gitId":"tehtea"},"content":"            case \"event\":"},{"lineNumber":181,"author":{"gitId":"tehtea"},"content":"                if (commandArgs.length() \u003d\u003d 0) {"},{"lineNumber":182,"author":{"gitId":"tehtea"},"content":"                    System.out.println(\"Oops, event description cannot be empty :(\");"},{"lineNumber":183,"author":{"gitId":"tehtea"},"content":"                    break;"},{"lineNumber":184,"author":{"gitId":"tehtea"},"content":"                }"},{"lineNumber":185,"author":{"gitId":"tehtea"},"content":"                String[] eventArgs \u003d commandArgs.split(\" /at \");"},{"lineNumber":186,"author":{"gitId":"tehtea"},"content":"                if (eventArgs.length !\u003d 2) {"},{"lineNumber":187,"author":{"gitId":"tehtea"},"content":"                    System.out.println(\"Oops, event time cannot be empty :(\");"},{"lineNumber":188,"author":{"gitId":"tehtea"},"content":"                    break;"},{"lineNumber":189,"author":{"gitId":"tehtea"},"content":"                }"},{"lineNumber":190,"author":{"gitId":"tehtea"},"content":"                String eventAdditionOutcome \u003d addEvent(eventArgs[0], eventArgs[1]);"},{"lineNumber":191,"author":{"gitId":"tehtea"},"content":"                System.out.println(eventAdditionOutcome);"},{"lineNumber":192,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":193,"author":{"gitId":"tehtea"},"content":"            case \"delete\":"},{"lineNumber":194,"author":{"gitId":"tehtea"},"content":"                if (commandArgs.length() \u003d\u003d 0) {"},{"lineNumber":195,"author":{"gitId":"tehtea"},"content":"                    System.out.println(\"You have to specify which task to delete!\");"},{"lineNumber":196,"author":{"gitId":"tehtea"},"content":"                    break;"},{"lineNumber":197,"author":{"gitId":"tehtea"},"content":"                }"},{"lineNumber":198,"author":{"gitId":"tehtea"},"content":"                try {"},{"lineNumber":199,"author":{"gitId":"tehtea"},"content":"                    Integer taskIdToDelete \u003d Integer.parseInt(commandArgs);"},{"lineNumber":200,"author":{"gitId":"tehtea"},"content":"                    String deletionOutcome \u003d deleteTask(taskIdToDelete);"},{"lineNumber":201,"author":{"gitId":"tehtea"},"content":"                    System.out.println(deletionOutcome);"},{"lineNumber":202,"author":{"gitId":"tehtea"},"content":"                } catch (NumberFormatException numberFormatException) {"},{"lineNumber":203,"author":{"gitId":"tehtea"},"content":"                    System.out.println(\"Invalid number passed to task deletion command.\");"},{"lineNumber":204,"author":{"gitId":"tehtea"},"content":"                }"},{"lineNumber":205,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":206,"author":{"gitId":"tehtea"},"content":"            default:"},{"lineNumber":207,"author":{"gitId":"tehtea"},"content":"                System.out.println(\"Invalid command :(\");"},{"lineNumber":208,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":209,"author":{"gitId":"tehtea"},"content":"            }"},{"lineNumber":210,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"tehtea":208,"-":4}},{"path":"src/main/java/dukchess/dao/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.dao;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"import java.util.regex.Matcher;"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"import java.util.regex.Pattern;"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.Deadline;"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.Event;"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.Task;"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.Todo;"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"    private File taskFile;"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"    private FileWriter taskFileWriter;"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"    private Scanner taskFileScanner;"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":"    public TaskList(File taskFile) throws IOException {"},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"        super();"},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"        this.taskFile \u003d taskFile;"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":"        this.taskFileScanner \u003d new Scanner(taskFile);"},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":"        initializeFromFile();"},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"        this.taskFileWriter \u003d new FileWriter(taskFile);"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":"    public void flushTaskList() {"},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":"            for (int i \u003d 0; i \u003c this.size(); i++) {"},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":"                Task currentTask \u003d this.get(i);"},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":"                String currentLine \u003d currentTask.toString();"},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":"                taskFileWriter.append(currentLine).append(System.getProperty(\"line.separator\"));"},{"lineNumber":35,"author":{"gitId":"tehtea"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"tehtea"},"content":"            this.taskFileWriter.close();"},{"lineNumber":37,"author":{"gitId":"tehtea"},"content":"            this.taskFileScanner.close();"},{"lineNumber":38,"author":{"gitId":"tehtea"},"content":"        } catch (IOException e) {"},{"lineNumber":39,"author":{"gitId":"tehtea"},"content":"            e.printStackTrace();"},{"lineNumber":40,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":43,"author":{"gitId":"tehtea"},"content":"    private void initializeFromFile() {"},{"lineNumber":44,"author":{"gitId":"tehtea"},"content":"        if (taskFile \u003d\u003d null) {"},{"lineNumber":45,"author":{"gitId":"tehtea"},"content":"            return;"},{"lineNumber":46,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"tehtea"},"content":"        Pattern taskStringPattern \u003d Pattern.compile(\"\\\\[(\\\\w)\\\\]\\\\[(.?)\\\\] ([^(]+)(\\\\((.+)\\\\))?\");"},{"lineNumber":48,"author":{"gitId":"tehtea"},"content":"        while (taskFileScanner.hasNext()) {"},{"lineNumber":49,"author":{"gitId":"tehtea"},"content":"            Task task \u003d null;"},{"lineNumber":50,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":51,"author":{"gitId":"tehtea"},"content":"            String currentTaskString \u003d taskFileScanner.nextLine();"},{"lineNumber":52,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":53,"author":{"gitId":"tehtea"},"content":"            Matcher taskStringMatches \u003d taskStringPattern.matcher(currentTaskString);"},{"lineNumber":54,"author":{"gitId":"tehtea"},"content":"            taskStringMatches.matches();"},{"lineNumber":55,"author":{"gitId":"tehtea"},"content":"            String taskType \u003d taskStringMatches.group(1);"},{"lineNumber":56,"author":{"gitId":"tehtea"},"content":"            boolean isDone \u003d taskStringMatches.group(2).equals(\"X\");"},{"lineNumber":57,"author":{"gitId":"tehtea"},"content":"            String taskDescription \u003d taskStringMatches.group(3).trim();"},{"lineNumber":58,"author":{"gitId":"tehtea"},"content":"            String taskDetails \u003d taskStringMatches.group(5);"},{"lineNumber":59,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":60,"author":{"gitId":"tehtea"},"content":"            switch (taskType) {"},{"lineNumber":61,"author":{"gitId":"tehtea"},"content":"            case \"T\":"},{"lineNumber":62,"author":{"gitId":"tehtea"},"content":"                task \u003d new Todo(taskDescription, isDone);"},{"lineNumber":63,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":64,"author":{"gitId":"tehtea"},"content":"            case \"E\":"},{"lineNumber":65,"author":{"gitId":"tehtea"},"content":"                // TODO: add some checks to this"},{"lineNumber":66,"author":{"gitId":"tehtea"},"content":"                String whenIsEventAt \u003d taskDetails.split(\"at: \")[1];"},{"lineNumber":67,"author":{"gitId":"tehtea"},"content":"                task \u003d new Event(taskDescription, isDone, whenIsEventAt);"},{"lineNumber":68,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":69,"author":{"gitId":"tehtea"},"content":"            case \"D\":"},{"lineNumber":70,"author":{"gitId":"tehtea"},"content":"                // TODO: add some checks to this"},{"lineNumber":71,"author":{"gitId":"tehtea"},"content":"                String whenIsTaskDue \u003d taskDetails.split(\"by: \")[1];"},{"lineNumber":72,"author":{"gitId":"tehtea"},"content":"                task \u003d new Deadline(taskDescription, isDone, whenIsTaskDue);"},{"lineNumber":73,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":74,"author":{"gitId":"tehtea"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"tehtea"},"content":"            super.add(task);"},{"lineNumber":76,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":78}},{"path":"src/main/java/dukchess/entity/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.entity;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":"    private String by;"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":"     * Create a deadline using its description and its due date."},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"     * @param taskDescription"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"     * @param by"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"    public Deadline(String taskDescription, String by) {"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"        super(taskDescription);"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"        this.by \u003d by;"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"    public Deadline(String taskDescription, boolean isDone, String by) {"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"        super(taskDescription, isDone);"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"        this.by \u003d by;"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":"    public String getBy() {"},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"        return by;"},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":"    public void setBy(String by) {"},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"        this.by \u003d by;"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":"        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", by);"},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":33}},{"path":"src/main/java/dukchess/entity/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.entity;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":"    private String at;"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":"     * Create an event based on its task description and when it is at."},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"     * @param taskDescription"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"     * @param at"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"    public Event(String taskDescription, String at) {"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"        super(taskDescription);"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"        this.at \u003d at;"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"    public Event(String taskDescription, boolean isDone, String at) {"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"        super(taskDescription, isDone);"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"        this.at \u003d at;"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"    public String getAt() {"},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"        return at;"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"    public void setAt(String at) {"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"        this.at \u003d at;"},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":"        return \"[E]\" + super.toString() + String.format(\" (at: %s)\", at);"},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":34}},{"path":"src/main/java/dukchess/entity/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.entity;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":" * An dukess.entity representing a Task."},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"    private String taskDescription;"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"    private boolean isDone;"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"    public Task() {"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"    public Task(String taskDescription) {"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"     * Create a Task from its description and whether it is done"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"     * @param taskDescription"},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":"     * @param isDone"},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"    public Task(String taskDescription, boolean isDone) {"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":"    public String getTaskDescription() {"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":"        return taskDescription;"},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":"    public void setTaskDescription(String taskDescription) {"},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":36,"author":{"gitId":"tehtea"},"content":"    public boolean isDone() {"},{"lineNumber":37,"author":{"gitId":"tehtea"},"content":"        return isDone;"},{"lineNumber":38,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":40,"author":{"gitId":"tehtea"},"content":"    public void setDone(boolean done) {"},{"lineNumber":41,"author":{"gitId":"tehtea"},"content":"        isDone \u003d done;"},{"lineNumber":42,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":44,"author":{"gitId":"tehtea"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"tehtea"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"tehtea"},"content":"        String checkMark \u003d isDone ? \"X\" : \" \";"},{"lineNumber":47,"author":{"gitId":"tehtea"},"content":"        return String.format(\"[%s] %s\", checkMark, taskDescription);"},{"lineNumber":48,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":49}},{"path":"src/main/java/dukchess/entity/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.entity;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"    public Todo(String taskDescription) {"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"        super(taskDescription);"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"    public Todo(String taskDescription, boolean isDone) {"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"        super(taskDescription, isDone);"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"todo buy milk"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":"event meeting /at 9.30"},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"deadline retire /by 40"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"list"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"todo"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":"event"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"event meeting"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"deadline"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"deadline retire"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"blah"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"delete 2"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"delete 69"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"bye"}],"authorContributionMap":{"tehtea":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\dukchess\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"java -classpath ..\\bin dukchess.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"tehtea":2,"-":19}}]
