[{"path":".github/ISSUE_TEMPLATE/bug_report.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"---"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":"name: Bug report"},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"about: Create a report to help us improve"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":"title: \u0027\u0027"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"labels: bug"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"assignees: tehtea"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"---"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"**Describe the bug**"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"A clear and concise description of what the bug is."},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"**To Reproduce**"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"Steps to reproduce the behavior:"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"1. Go to \u0027...\u0027"},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"2. Click on \u0027....\u0027"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"3. Scroll down to \u0027....\u0027"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"4. See error"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"**Expected behavior**"},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":"A clear and concise description of what you expected to happen."},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"E.g. Expect that a new popup will appear but it did not."},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":"**Screenshots**"},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":"If applicable, add screenshots to help explain your problem."},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"**Desktop (please complete the following information):**"},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":" - OS: [e.g. iOS]"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":" - Browser [e.g. chrome, safari]"},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":" - Version [e.g. 22]"},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":"**Smartphone (please complete the following information):**"},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":" - Device: [e.g. iPhone6]"},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":" - OS: [e.g. iOS8.1]"},{"lineNumber":35,"author":{"gitId":"tehtea"},"content":" - Browser [e.g. stock browser, safari]"},{"lineNumber":36,"author":{"gitId":"tehtea"},"content":" - Version [e.g. 22]"},{"lineNumber":37,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":38,"author":{"gitId":"tehtea"},"content":"**Additional context**"},{"lineNumber":39,"author":{"gitId":"tehtea"},"content":"Add any other context about the problem here."}],"authorContributionMap":{"tehtea":39}},{"path":".github/ISSUE_TEMPLATE/feature_request.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"---"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":"name: Feature request"},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"about: Suggest an idea for this project"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":"title: \u0027\u0027"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"labels: enhancement"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"assignees: tehtea"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"---"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"**Is your feature request related to a problem? Please describe.**"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"A clear and concise description of what the problem is. Ex. I\u0027m always frustrated when [...]"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"**Describe the solution you\u0027d like**"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"A clear and concise description of what you want to happen."},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"**Describe alternatives you\u0027ve considered**"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"A clear and concise description of any alternative solutions or features you\u0027ve considered."},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"**Additional context**"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"Add any other context or screenshots about the feature request here."}],"authorContributionMap":{"tehtea":20}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"# dukchess.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"1. After that, locate the `src/main/java/dukchess.Duke.java` file, right-click it, and choose `Run dukchess.Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"   "},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":"Notes:"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":"- How to configure Google Style Guide for Intellij: https://medium.com/swlh/configuring-google-style-guide-for-java-for-intellij-c727af4ef248"},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"- How to compile .jar using IntellJ: https://www.jetbrains.com/help/idea/compiling-applications.html#package_into_jar"}],"authorContributionMap":{"tehtea":6,"-":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"### Adding of different types of tasks"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"~.~"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":"Dukchess supports the addition of three types of tasks:"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"- Todo: anything that you must do"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"- Event: anything you must do **at** a certain time"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"- Deadline: anything you must do **by** a certain time"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"### Listing of all tasks added"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"Dukchess lists all the tasks that you have previously "},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"added seamlessly."},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"### Setting the status of each task"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"Dukchess allows you to set whether a task has been"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"completed. If completed / finished, an \u0027X\u0027 will show up"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"in the checkbox beside a task, e.g. `[T][X] buy milk` vs"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"`[T][ ] gonna buy milk soon`"},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"### Deletion of tasks that are no longer valid"},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"Dukchess allows you to delete any tasks that were"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":"previously added. Yay destruction!"},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"### Finding tasks based on one keyword"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"Dukchess allows you to find tasks previously added, using"},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":"a single keyword search. It ain\u0027t google, but its something"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"### Data persistence for tasks"},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":"Dukchess ensures that the state of all tasks added or"},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":"modified will be stored in the filesystem if the program"},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":"is closed gracefully."},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":35,"author":{"gitId":"tehtea"},"content":"Now you won\u0027t have to rely on your brain so much to"},{"lineNumber":36,"author":{"gitId":"tehtea"},"content":"remember things, yay stupidity!"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"tehtea"},"content":"### `list` - List all tasks added"},{"lineNumber":41,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":42,"author":{"gitId":"tehtea"},"content":"Example of usage: `list`"},{"lineNumber":43,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":44,"author":{"gitId":"tehtea"},"content":"Expected outcome (if these three tasks were added prior):"},{"lineNumber":45,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":46,"author":{"gitId":"tehtea"},"content":"```markdown"},{"lineNumber":47,"author":{"gitId":"tehtea"},"content":"Here are the tasks in your list, Sir/Madam/Other:"},{"lineNumber":48,"author":{"gitId":"tehtea"},"content":"\u003e\u003e\u003e 1. [T][X] buy milk"},{"lineNumber":49,"author":{"gitId":"tehtea"},"content":"\u003e\u003e\u003e 2. [E][ ] meeting (at: 9.30)"},{"lineNumber":50,"author":{"gitId":"tehtea"},"content":"\u003e\u003e\u003e 3. [D][ ] retire (by: 40)"},{"lineNumber":51,"author":{"gitId":"tehtea"},"content":"```"},{"lineNumber":52,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":53,"author":{"gitId":"tehtea"},"content":"### `todo` - Add a new todo"},{"lineNumber":54,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":55,"author":{"gitId":"tehtea"},"content":"Example of usage: `todo buy milk`"},{"lineNumber":56,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":57,"author":{"gitId":"tehtea"},"content":"Expected outcome (if these three tasks were added prior):"},{"lineNumber":58,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":59,"author":{"gitId":"tehtea"},"content":"```markdown"},{"lineNumber":60,"author":{"gitId":"tehtea"},"content":"Gotcha, added this todo: [T][ ] buy milk"},{"lineNumber":61,"author":{"gitId":"tehtea"},"content":"```"},{"lineNumber":62,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":63,"author":{"gitId":"tehtea"},"content":"### `event` - Add a new event"},{"lineNumber":64,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":65,"author":{"gitId":"tehtea"},"content":"Syntax: `event \u003cdescription\u003e /at \u003ctiming description\u003e`"},{"lineNumber":66,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":67,"author":{"gitId":"tehtea"},"content":"Example of usage: `event meeting /at 9.30`"},{"lineNumber":68,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":69,"author":{"gitId":"tehtea"},"content":"Expected outcome:"},{"lineNumber":70,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":71,"author":{"gitId":"tehtea"},"content":"```markdown"},{"lineNumber":72,"author":{"gitId":"tehtea"},"content":"Gotcha, added this event: [E][ ] meeting (at: 9.30)"},{"lineNumber":73,"author":{"gitId":"tehtea"},"content":"```"},{"lineNumber":74,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":75,"author":{"gitId":"tehtea"},"content":"### `deadline` - Add a new deadline"},{"lineNumber":76,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":77,"author":{"gitId":"tehtea"},"content":"Syntax: `deadline \u003cdescription\u003e /by \u003cdeadline time description\u003e`"},{"lineNumber":78,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":79,"author":{"gitId":"tehtea"},"content":"Example of usage: `deadline retire /by 40`"},{"lineNumber":80,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":81,"author":{"gitId":"tehtea"},"content":"Expected outcome:"},{"lineNumber":82,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":83,"author":{"gitId":"tehtea"},"content":"```markdown"},{"lineNumber":84,"author":{"gitId":"tehtea"},"content":"Gotcha, added this deadline: [D][ ] retire (by: 40)"},{"lineNumber":85,"author":{"gitId":"tehtea"},"content":"```"},{"lineNumber":86,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":87,"author":{"gitId":"tehtea"},"content":"### `deadline` - Add a new deadline"},{"lineNumber":88,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":89,"author":{"gitId":"tehtea"},"content":"Syntax: `deadline \u003cdescription\u003e /by \u003cdeadline time description\u003e`"},{"lineNumber":90,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":91,"author":{"gitId":"tehtea"},"content":"Example of usage: `deadline retire /by 40`"},{"lineNumber":92,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":93,"author":{"gitId":"tehtea"},"content":"Expected outcome:"},{"lineNumber":94,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":95,"author":{"gitId":"tehtea"},"content":"```markdown"},{"lineNumber":96,"author":{"gitId":"tehtea"},"content":"Gotcha, added this deadline: [D][ ] retire (by: 40)"},{"lineNumber":97,"author":{"gitId":"tehtea"},"content":"```"},{"lineNumber":98,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":99,"author":{"gitId":"tehtea"},"content":"### `done` - Set a task to done"},{"lineNumber":100,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":101,"author":{"gitId":"tehtea"},"content":"Syntax: `done \u003ctask-id\u003e`"},{"lineNumber":102,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":103,"author":{"gitId":"tehtea"},"content":"Example of usage: `done 1`"},{"lineNumber":104,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":105,"author":{"gitId":"tehtea"},"content":"Expected outcome:"},{"lineNumber":106,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":107,"author":{"gitId":"tehtea"},"content":"```markdown"},{"lineNumber":108,"author":{"gitId":"tehtea"},"content":"Setting to done, original task status: [T][ ] buy milk"},{"lineNumber":109,"author":{"gitId":"tehtea"},"content":"\u003e\u003e\u003e New task status: [T][X] buy milk"},{"lineNumber":110,"author":{"gitId":"tehtea"},"content":"```"},{"lineNumber":111,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":112,"author":{"gitId":"tehtea"},"content":"### `delete` - Delete a task"},{"lineNumber":113,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":114,"author":{"gitId":"tehtea"},"content":"Syntax: `delete \u003ctask-id\u003e`"},{"lineNumber":115,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":116,"author":{"gitId":"tehtea"},"content":"Example of usage: `delete 2`"},{"lineNumber":117,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":118,"author":{"gitId":"tehtea"},"content":"Expected outcome:"},{"lineNumber":119,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":120,"author":{"gitId":"tehtea"},"content":"```markdown"},{"lineNumber":121,"author":{"gitId":"tehtea"},"content":"Noted, I\u0027ve removed this task:"},{"lineNumber":122,"author":{"gitId":"tehtea"},"content":"[E][ ] meeting (at: 9.30)"},{"lineNumber":123,"author":{"gitId":"tehtea"},"content":"```"},{"lineNumber":124,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":125,"author":{"gitId":"tehtea"},"content":"### `find` - Find a task using a keyword"},{"lineNumber":126,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":127,"author":{"gitId":"tehtea"},"content":"Syntax: `find \u003ckeyword\u003e`"},{"lineNumber":128,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":129,"author":{"gitId":"tehtea"},"content":"Example of usage: `find retire`"},{"lineNumber":130,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":131,"author":{"gitId":"tehtea"},"content":"Expected outcome:"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"tehtea"},"content":"```markdown"},{"lineNumber":134,"author":{"gitId":"tehtea"},"content":"Noted, I\u0027ve removed this task:"},{"lineNumber":135,"author":{"gitId":"tehtea"},"content":"[E][ ] meeting (at: 9.30)"},{"lineNumber":136,"author":{"gitId":"tehtea"},"content":"```"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"tehtea"},"content":"### `bye` - Close program gracefully"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"tehtea"},"content":"Example of usage: `bye`"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"tehtea"},"content":"```markdown"},{"lineNumber":145,"author":{"gitId":"tehtea"},"content":"Goodbye, hope to see you soon!"},{"lineNumber":146,"author":{"gitId":"tehtea"},"content":"```"}],"authorContributionMap":{"tehtea":133,"-":13}},{"path":"src/main/java/dukchess/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"import dukchess.controller.Controller;"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.TaskList;"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":"import dukchess.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"import dukchess.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":" * Main application driver class."},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"    private void initializeDukchessData() {"},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"            TaskList.setTaskList(Storage.loadData());"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"        } catch (IOException e) {"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"            Ui.printErrorMessage(e);"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":"     * Runs the main Dukchess program."},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"    public void run() {"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"        initializeDukchessData();"},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":"        Ui.printGreeting();"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":"        Controller.runInteractionLoop();"},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"        Ui.sayGoodbye();"},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":"    public static void main(String[] args) throws Exception {"},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":"        new Duke().run();"},{"lineNumber":35,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"tehtea":34,"-":2}},{"path":"src/main/java/dukchess/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.commands;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.Deadline;"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":"import dukchess.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":" * Command for adding a new deadline"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"public class AddDeadlineCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"    private static String addDeadline(String description, String by) {"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"        Deadline newDeadline \u003d new Deadline(description, by);"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"        tasks.add(newDeadline);"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"        return String.format(\"Gotcha, added this deadline: %s\", newDeadline.toString());"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"     * Performs input validation before adding a new deadline to the list of tasks."},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"     * @param commandArgs - expects a two-length array, first element is deadline\u0027s description,"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"     *                    second element is deadline\u0027s due date"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":"    public static void handleAddDeadline(String commandArgs) {"},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"        if (commandArgs.length() \u003d\u003d 0) {"},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"            Ui.printErrorMessage(\"Oops, deadline description cannot be empty :(\");"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":"            return;"},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"        String[] deadlineArgs \u003d commandArgs.split(\" /by \");"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"        if (deadlineArgs.length !\u003d 2) {"},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":"            Ui.printErrorMessage(\"Oops, deadline due date cannot be empty :(\");"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":"            return;"},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":"        String deadlineAdditionOutcome \u003d addDeadline(deadlineArgs[0], deadlineArgs[1]);"},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":"        System.out.println(deadlineAdditionOutcome);"},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":34}},{"path":"src/main/java/dukchess/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.commands;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.Event;"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":"import dukchess.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":" * Command for adding a new events"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"public class AddEventCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"    private static String addEvent(String description, String at) {"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"        Event newEvent \u003d new Event(description, at);"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"        tasks.add(newEvent);"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"        return String.format(\"Gotcha, added this event: %s\", newEvent.toString());"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"     * Performs input validation before adding a new event to the list of tasks."},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"     * @param commandArgs - expects a two-length array, first element is event\u0027s description,"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"     *                    second element is when the event is at"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":"    public static void handleAddEvent(String commandArgs) {"},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"        if (commandArgs.length() \u003d\u003d 0) {"},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"            Ui.printErrorMessage(\"Oops, event description cannot be empty :(\");"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":"            return;"},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"        String[] eventArgs \u003d commandArgs.split(\" /at \");"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"        if (eventArgs.length !\u003d 2) {"},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":"            Ui.printErrorMessage(\"Oops, event time cannot be empty :(\");"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":"            return;"},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":"        String eventAdditionOutcome \u003d addEvent(eventArgs[0], eventArgs[1]);"},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":"        System.out.println(eventAdditionOutcome);"},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":34}},{"path":"src/main/java/dukchess/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.commands;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.Todo;"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":" * Command for adding a new Todo"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"public class AddTodoCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"    private static String addTodo(String description) {"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"        Todo newTodo \u003d new Todo(description);"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"        tasks.add(newTodo);"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"        return String.format(\"Gotcha, added this todo: %s\", newTodo.toString());"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"     * Performs input validation before adding a new to-do to the list of tasks."},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"     * @param todoDescription - the description for the to-do task"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"    public static void handleAddTodo(String todoDescription) {"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"        if (todoDescription.length() \u003d\u003d 0) {"},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":"            System.out.println(\"Oops, todo description cannot be empty :(\");"},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"            return;"},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":"        String todoAdditionOutcome \u003d addTodo(todoDescription);"},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":"        System.out.println(todoAdditionOutcome);"},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":27}},{"path":"src/main/java/dukchess/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.commands;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.Task;"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.TaskList;"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":" * Base class for all commands so each have a reference to list of tasks"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"public abstract class Command {"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"    protected static List\u003cTask\u003e tasks \u003d TaskList.getTasksList();"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":13}},{"path":"src/main/java/dukchess/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.commands;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"import static dukchess.entity.TaskList.deleteTask;"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"import dukchess.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":" * Command for deleting a task"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"     * Performs input validation before deleting a task from the list of tasks."},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"     * @param taskIdString - the task id to be deleted as a string"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"    public static void handleDeleteTask(String taskIdString) {"},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"        if (taskIdString.length() \u003d\u003d 0) {"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"            Ui.printErrorMessage(\"You have to specify which task to delete!\");"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"            return;"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":"            int taskIdToDelete \u003d Integer.parseInt(taskIdString);"},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"            String deletionOutcome \u003d deleteTask(taskIdToDelete);"},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"            System.out.println(deletionOutcome);"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":"        } catch (NumberFormatException numberFormatException) {"},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":"            Ui.printErrorMessage(\"Invalid number passed to task deletion command.\");"},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":29}},{"path":"src/main/java/dukchess/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.commands;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.Task;"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":"import dukchess.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":" * Command for setting a task to done"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"public final class DoneCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"    private static String setAddedTaskStatus(int taskId, boolean isDone) {"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"        int actualTaskId \u003d taskId - 1;"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"        if (actualTaskId \u003e\u003d tasks.size() || actualTaskId \u003c 0) {"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"            return String.format("},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"                    \"I\u0027m terribly sorry Sir/Madam/Other :(\\n\""},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"                            + \"%d is not a valid task id for the current list of tasks.\","},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"                    taskId);"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"        Task selectedTask \u003d tasks.get(actualTaskId);"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"        String originalTaskStatus \u003d selectedTask.toString();"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"        selectedTask.setDone(isDone);"},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":"        return String.format(\"Setting to done, original task status: %s\\n\u003e\u003e\u003e New task status: %s\","},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"                originalTaskStatus, selectedTask.toString());"},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"     * Set a task to done."},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"     * @param taskIdString - A task ID in integer form"},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":"    public static void handleDoneTask(String taskIdString) {"},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":"            int taskId \u003d Integer.parseInt(taskIdString);"},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":"            String taskStatusAdditionOutcome \u003d setAddedTaskStatus(taskId, true);"},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":"            System.out.println(taskStatusAdditionOutcome);"},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":35,"author":{"gitId":"tehtea"},"content":"            Ui.printErrorMessage(\"The task ID provided must be a string.\");"},{"lineNumber":36,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":38}},{"path":"src/main/java/dukchess/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.commands;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"import static dukchess.entity.TaskList.findTask;"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.Task;"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"import dukchess.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":" * Command for finding tasks based on a keyword"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"public class FindCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"     * Performs input validation before finding a task from the list of tasks."},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"     * @param keyword - the keyword to search task list on"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"    public static void handleFindTask(String keyword) {"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"        if (keyword.length() \u003d\u003d 0) {"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"            Ui.printErrorMessage(\"You did not specify the keyword to find!\");"},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":"            return;"},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"        List\u003cTask\u003e searchResults \u003d findTask(keyword);"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":"        if (searchResults.size() \u003d\u003d 0) {"},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":"            Ui.printErrorMessage(String.format(\"Could not find any tasks matching \\\"%s\\\"\", keyword));"},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"            return;"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":"        Ui.printListOfTasks(searchResults);"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":30}},{"path":"src/main/java/dukchess/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.commands;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"import dukchess.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":" * Command for listing all commands"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"public final class ListCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"     * Prints out all added tasks"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"    public static void printAddedTasks() {"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"            System.out.println(\"No previously added tasks to list Sir/Madam/Other :(\");"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"            return;"},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"        System.out.println(\"Here are the tasks in your list, Sir/Madam/Other:\");"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"        Ui.printListOfTasks(tasks);"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":20}},{"path":"src/main/java/dukchess/controller/Controller.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.controller;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"import static dukchess.commands.AddDeadlineCommand.handleAddDeadline;"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":"import static dukchess.commands.AddEventCommand.handleAddEvent;"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"import static dukchess.commands.AddTodoCommand.handleAddTodo;"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"import static dukchess.commands.DeleteCommand.handleDeleteTask;"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":"import static dukchess.commands.DoneCommand.handleDoneTask;"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"import static dukchess.commands.FindCommand.handleFindTask;"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"import static dukchess.commands.ListCommand.printAddedTasks;"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"import static dukchess.parser.Parser.COMMAND_ARGS_INDEX;"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"import static dukchess.parser.Parser.NEXT_COMMAND_INDEX;"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"import static dukchess.parser.Parser.parseInput;"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"import java.util.List;"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"import java.util.Locale;"},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"import java.util.Scanner;"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.TaskList;"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"import dukchess.exceptions.InvalidCommandException;"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"import dukchess.storage.Storage;"},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":"import dukchess.ui.Ui;"},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":" * Delegates business logic from user to individual commands"},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"public class Controller {"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":"     * Executes a given raw input from stdin."},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"     * @param input - raw input string from stdin"},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":"     * @return whether to exit from the interaction loop"},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":"    private static boolean execute(String input) {"},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"tehtea"},"content":"            boolean toExit \u003d false;"},{"lineNumber":36,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":37,"author":{"gitId":"tehtea"},"content":"            List\u003cString\u003e parsedInput \u003d parseInput(input);"},{"lineNumber":38,"author":{"gitId":"tehtea"},"content":"            String nextCommand \u003d parsedInput.get(NEXT_COMMAND_INDEX);"},{"lineNumber":39,"author":{"gitId":"tehtea"},"content":"            String commandArgs \u003d parsedInput.get(COMMAND_ARGS_INDEX);"},{"lineNumber":40,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":41,"author":{"gitId":"tehtea"},"content":"            switch (nextCommand) {"},{"lineNumber":42,"author":{"gitId":"tehtea"},"content":"            case \"bye\":"},{"lineNumber":43,"author":{"gitId":"tehtea"},"content":"                toExit \u003d true;"},{"lineNumber":44,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":45,"author":{"gitId":"tehtea"},"content":"            case \"list\":"},{"lineNumber":46,"author":{"gitId":"tehtea"},"content":"                printAddedTasks();"},{"lineNumber":47,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":48,"author":{"gitId":"tehtea"},"content":"            case \"done\":"},{"lineNumber":49,"author":{"gitId":"tehtea"},"content":"                handleDoneTask(commandArgs);"},{"lineNumber":50,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":51,"author":{"gitId":"tehtea"},"content":"            case \"todo\":"},{"lineNumber":52,"author":{"gitId":"tehtea"},"content":"                handleAddTodo(commandArgs);"},{"lineNumber":53,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":54,"author":{"gitId":"tehtea"},"content":"            case \"deadline\":"},{"lineNumber":55,"author":{"gitId":"tehtea"},"content":"                handleAddDeadline(commandArgs);"},{"lineNumber":56,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":57,"author":{"gitId":"tehtea"},"content":"            case \"event\":"},{"lineNumber":58,"author":{"gitId":"tehtea"},"content":"                handleAddEvent(commandArgs);"},{"lineNumber":59,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":60,"author":{"gitId":"tehtea"},"content":"            case \"delete\":"},{"lineNumber":61,"author":{"gitId":"tehtea"},"content":"                handleDeleteTask(commandArgs);"},{"lineNumber":62,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":63,"author":{"gitId":"tehtea"},"content":"            case \"find\":"},{"lineNumber":64,"author":{"gitId":"tehtea"},"content":"                handleFindTask(commandArgs);"},{"lineNumber":65,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":66,"author":{"gitId":"tehtea"},"content":"            default:"},{"lineNumber":67,"author":{"gitId":"tehtea"},"content":"                throw new InvalidCommandException();"},{"lineNumber":68,"author":{"gitId":"tehtea"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"tehtea"},"content":"            Storage.saveData(TaskList.getTasksList());"},{"lineNumber":70,"author":{"gitId":"tehtea"},"content":"            if (!toExit) {"},{"lineNumber":71,"author":{"gitId":"tehtea"},"content":"                Ui.promptInputAgain();"},{"lineNumber":72,"author":{"gitId":"tehtea"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"tehtea"},"content":"            return toExit;"},{"lineNumber":74,"author":{"gitId":"tehtea"},"content":"        } catch (InvalidCommandException e) {"},{"lineNumber":75,"author":{"gitId":"tehtea"},"content":"            Ui.printErrorMessage(\"Invalid command :(\");"},{"lineNumber":76,"author":{"gitId":"tehtea"},"content":"            Ui.promptInputAgain();"},{"lineNumber":77,"author":{"gitId":"tehtea"},"content":"            return false;"},{"lineNumber":78,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":81,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":82,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"tehtea"},"content":"     * Initiate the loop that prompts for a user\u0027s input and executes commands based on the input."},{"lineNumber":84,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"tehtea"},"content":"    public static void runInteractionLoop() {"},{"lineNumber":86,"author":{"gitId":"tehtea"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":87,"author":{"gitId":"tehtea"},"content":"        String input \u003d in.nextLine().toLowerCase(Locale.ROOT).trim();"},{"lineNumber":88,"author":{"gitId":"tehtea"},"content":"        boolean toExit \u003d execute(input);"},{"lineNumber":89,"author":{"gitId":"tehtea"},"content":"        while (!toExit) {"},{"lineNumber":90,"author":{"gitId":"tehtea"},"content":"            input \u003d in.nextLine().toLowerCase(Locale.ROOT).trim();"},{"lineNumber":91,"author":{"gitId":"tehtea"},"content":"            toExit \u003d execute(input);"},{"lineNumber":92,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"tehtea"},"content":"        in.close();"},{"lineNumber":94,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":95}},{"path":"src/main/java/dukchess/entity/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.entity;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":" * Abstraction of a deadline"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":"    private final String by;"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"     * Create a deadline using its description and its due date."},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"     * @param taskDescription"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"     * @param by"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"    public Deadline(String taskDescription, String by) {"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"        super(taskDescription);"},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"        this.by \u003d by;"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"     * Create a deadline using its description, isDone status, and due date."},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":"     * @param taskDescription"},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"     * @param isDone"},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"     * @param by"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":"    public Deadline(String taskDescription, boolean isDone, String by) {"},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"        super(taskDescription, isDone);"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"        this.by \u003d by;"},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":"        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", by);"},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":34}},{"path":"src/main/java/dukchess/entity/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.entity;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":" * Abstraction of an event"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":"    private final String timeOfEvent;"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"     * Create an event based on its task description and when it is at."},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"     * @param taskDescription"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"     * @param timeOfEvent"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"    public Event(String taskDescription, String timeOfEvent) {"},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"        super(taskDescription);"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"        this.timeOfEvent \u003d timeOfEvent;"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":"     * Create an event using its task description, its isDone status, and when it is at."},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"     * @param taskDescription"},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"     * @param isDone"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":"     * @param timeOfEvent"},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"    public Event(String taskDescription, boolean isDone, String timeOfEvent) {"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"        super(taskDescription, isDone);"},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":"        this.timeOfEvent \u003d timeOfEvent;"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":"    public String toString() {"},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":"        return \"[E]\" + super.toString() + String.format(\" (at: %s)\", timeOfEvent);"},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":35}},{"path":"src/main/java/dukchess/entity/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.entity;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":" * The base Task class for all other types of tasks in the application."},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":" * Can also be a vanilla Task on its own."},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":"public abstract class Task {"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"    private final String taskDescription;"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"    private boolean isDone;"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"    public Task(String taskDescription) {"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"     * Create a Task from its description and whether it is done"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"     * @param taskDescription"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"     * @param isDone"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":"    public Task(String taskDescription, boolean isDone) {"},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"    public String getTaskDescription() {"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"        return taskDescription;"},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"    public void setDone(boolean done) {"},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":"        isDone \u003d done;"},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"tehtea"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"tehtea"},"content":"        String checkMark \u003d isDone ? \"X\" : \" \";"},{"lineNumber":37,"author":{"gitId":"tehtea"},"content":"        return String.format(\"[%s] %s\", checkMark, taskDescription);"},{"lineNumber":38,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":39}},{"path":"src/main/java/dukchess/entity/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.entity;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":" * A Data Access Object class that provides convenience methods for CRUD operations on the list of tasks in the app"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"    private static ArrayList\u003cTask\u003e tasks;"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"    private TaskList() { } // ensure TaskList can never be instantiated"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"     * Set the list of tasks initially"},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"     * @param tasks - list of tasks"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"    public static void setTaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"        if (TaskList.tasks \u003d\u003d null) {"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"            TaskList.tasks \u003d tasks;"},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":"     * Gets the list of tasks in the program at the moment"},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"     * @return a list of tasks"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":"    public static ArrayList\u003cTask\u003e getTasksList() {"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":"        return tasks;"},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":"     * Deletes a task with a given task ID."},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":"     * @param taskIdToDelete - the id of the task to delete"},{"lineNumber":35,"author":{"gitId":"tehtea"},"content":"     * @return the outcome as a message"},{"lineNumber":36,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"tehtea"},"content":"    public static String deleteTask(int taskIdToDelete) {"},{"lineNumber":38,"author":{"gitId":"tehtea"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"tehtea"},"content":"            Task taskToDelete \u003d tasks.get(taskIdToDelete - 1);"},{"lineNumber":40,"author":{"gitId":"tehtea"},"content":"            tasks.remove(taskIdToDelete - 1);"},{"lineNumber":41,"author":{"gitId":"tehtea"},"content":"            return String.format(\"Noted, I\u0027ve removed this task:\\n\""},{"lineNumber":42,"author":{"gitId":"tehtea"},"content":"                    + \"%s\\n\""},{"lineNumber":43,"author":{"gitId":"tehtea"},"content":"                    + \"Now, you have %d tasks in the list.\", taskToDelete.toString(), tasks.size());"},{"lineNumber":44,"author":{"gitId":"tehtea"},"content":"        } catch (IndexOutOfBoundsException indexOutOfBoundsException) {"},{"lineNumber":45,"author":{"gitId":"tehtea"},"content":"            return String.format(\"There is no task with id %d at the moment.\", taskIdToDelete);"},{"lineNumber":46,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":49,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"tehtea"},"content":"     * Finds tasks with a given keyword."},{"lineNumber":51,"author":{"gitId":"tehtea"},"content":"     * @param keyword - the keyword to search tasks on"},{"lineNumber":52,"author":{"gitId":"tehtea"},"content":"     * @return a list of tasks matching the keyword"},{"lineNumber":53,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"tehtea"},"content":"    public static List\u003cTask\u003e findTask(String keyword) {"},{"lineNumber":55,"author":{"gitId":"tehtea"},"content":"        List\u003cTask\u003e searchResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":56,"author":{"gitId":"tehtea"},"content":"        for (Task task: tasks) {"},{"lineNumber":57,"author":{"gitId":"tehtea"},"content":"            if (task.getTaskDescription().contains(keyword)) {"},{"lineNumber":58,"author":{"gitId":"tehtea"},"content":"                searchResults.add(task);"},{"lineNumber":59,"author":{"gitId":"tehtea"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"tehtea"},"content":"        };"},{"lineNumber":61,"author":{"gitId":"tehtea"},"content":"        return searchResults;"},{"lineNumber":62,"author":{"gitId":"tehtea"},"content":"    };"},{"lineNumber":63,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":64,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":64}},{"path":"src/main/java/dukchess/entity/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.entity;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":" * A Todo task"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"    public Todo(String taskDescription) {"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"        super(taskDescription);"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"    public Todo(String taskDescription, boolean isDone) {"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"        super(taskDescription, isDone);"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":20}},{"path":"src/main/java/dukchess/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.exceptions;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":" * Exception to throw when a command is invalid"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":7}},{"path":"src/main/java/dukchess/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.parser;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"import java.util.regex.Matcher;"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":"import java.util.regex.Pattern;"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"import dukchess.exceptions.InvalidCommandException;"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":" * Class that handles the parsing of user input into the command keyword and its corresponding arguments"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"public final class Parser {"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"    public static final int NEXT_COMMAND_INDEX \u003d 0;"},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"    public static final int COMMAND_ARGS_INDEX \u003d 1;"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"     * Source: https://stackoverflow.com/questions/31412294/java-check-not-null-empty-else-assign-default-value"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"     * Get value of object, and if it is null, set it to the default value."},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":"     * @param defaultValue - the default value to set the variable to"},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"     * @return"},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":"    private static \u003cT\u003e T getValueOrDefault(T value, T defaultValue) {"},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":"        return value \u003d\u003d null ? defaultValue : value;"},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":"     * Parses the input by a user into the command to execute, and the arguments for that command."},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"     * @param input"},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":"     * @return nextCommand - the command to execute, commandArgs - the arguments for the command"},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":"     * @throws InvalidCommandException"},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":"    public static List\u003cString\u003e parseInput(String input) throws InvalidCommandException {"},{"lineNumber":35,"author":{"gitId":"tehtea"},"content":"        Pattern commandPattern \u003d Pattern.compile(\"(\\\\w+)( .+)?\");"},{"lineNumber":36,"author":{"gitId":"tehtea"},"content":"        Matcher commandMatches \u003d commandPattern.matcher(input);"},{"lineNumber":37,"author":{"gitId":"tehtea"},"content":"        if (!commandMatches.matches()) {"},{"lineNumber":38,"author":{"gitId":"tehtea"},"content":"            throw new InvalidCommandException();"},{"lineNumber":39,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"tehtea"},"content":"        String nextCommand \u003d commandMatches.group(1);"},{"lineNumber":41,"author":{"gitId":"tehtea"},"content":"        String commandArgs \u003d getValueOrDefault(commandMatches.group(2), \"\");"},{"lineNumber":42,"author":{"gitId":"tehtea"},"content":"        commandArgs \u003d commandArgs.trim();"},{"lineNumber":43,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":44,"author":{"gitId":"tehtea"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(nextCommand, commandArgs));"},{"lineNumber":45,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":46}},{"path":"src/main/java/dukchess/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.storage;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"import java.util.regex.Matcher;"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"import java.util.regex.Pattern;"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.Deadline;"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.Event;"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.Task;"},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.Todo;"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"import dukchess.ui.Ui;"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":" * Class that handles loading and storage of data from disk"},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"public final class Storage {"},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"    private static final Path storageFilePath \u003d Path.of(\"data\" + File.separator + \"data.txt\");"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":"    private static void createStorageFileIfNotFound() throws IOException {"},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"        String dataDirPath \u003d Paths.get(\"data\").toString();"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"        File dataDir \u003d new File(dataDirPath);"},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":"        dataDir.mkdir(); // try creating directory. If fail, its okay"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":"        File storageFile \u003d new File(String.valueOf(storageFilePath));"},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"        if (!storageFile.exists()) { // if file does not exist, create it"},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":"            storageFile.createNewFile();"},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":35,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"tehtea"},"content":"     * Loads data from Duke\u0027s data text file at the start of the program."},{"lineNumber":37,"author":{"gitId":"tehtea"},"content":"     * @return An ArrayList of tasks"},{"lineNumber":38,"author":{"gitId":"tehtea"},"content":"     * @throws IOException"},{"lineNumber":39,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"tehtea"},"content":"    public static ArrayList\u003cTask\u003e loadData() throws IOException {"},{"lineNumber":41,"author":{"gitId":"tehtea"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":42,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":43,"author":{"gitId":"tehtea"},"content":"        Storage.createStorageFileIfNotFound();"},{"lineNumber":44,"author":{"gitId":"tehtea"},"content":"        File storageFile \u003d new File(String.valueOf(storageFilePath));"},{"lineNumber":45,"author":{"gitId":"tehtea"},"content":"        Scanner storageFileScanner \u003d new Scanner(storageFile);"},{"lineNumber":46,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":47,"author":{"gitId":"tehtea"},"content":"        Pattern taskStringPattern \u003d Pattern.compile(\"\\\\[(\\\\w)\\\\]\\\\[(.?)\\\\] ([^(]+)(\\\\((.+)\\\\))?\");"},{"lineNumber":48,"author":{"gitId":"tehtea"},"content":"        while (storageFileScanner.hasNext()) {"},{"lineNumber":49,"author":{"gitId":"tehtea"},"content":"            Task task \u003d null;"},{"lineNumber":50,"author":{"gitId":"tehtea"},"content":"            String currentTaskString \u003d storageFileScanner.nextLine();"},{"lineNumber":51,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":52,"author":{"gitId":"tehtea"},"content":"            Matcher taskStringMatches \u003d taskStringPattern.matcher(currentTaskString);"},{"lineNumber":53,"author":{"gitId":"tehtea"},"content":"            taskStringMatches.matches();"},{"lineNumber":54,"author":{"gitId":"tehtea"},"content":"            String taskType \u003d taskStringMatches.group(1);"},{"lineNumber":55,"author":{"gitId":"tehtea"},"content":"            boolean isDone \u003d taskStringMatches.group(2).equals(\"X\");"},{"lineNumber":56,"author":{"gitId":"tehtea"},"content":"            String taskDescription \u003d taskStringMatches.group(3).trim();"},{"lineNumber":57,"author":{"gitId":"tehtea"},"content":"            String taskDetails \u003d taskStringMatches.group(5);"},{"lineNumber":58,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":59,"author":{"gitId":"tehtea"},"content":"            switch (taskType) {"},{"lineNumber":60,"author":{"gitId":"tehtea"},"content":"            case \"T\":"},{"lineNumber":61,"author":{"gitId":"tehtea"},"content":"                task \u003d new Todo(taskDescription, isDone);"},{"lineNumber":62,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":63,"author":{"gitId":"tehtea"},"content":"            case \"E\":"},{"lineNumber":64,"author":{"gitId":"tehtea"},"content":"                String whenIsEventAt \u003d taskDetails.split(\"at: \")[1];"},{"lineNumber":65,"author":{"gitId":"tehtea"},"content":"                task \u003d new Event(taskDescription, isDone, whenIsEventAt);"},{"lineNumber":66,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":67,"author":{"gitId":"tehtea"},"content":"            case \"D\":"},{"lineNumber":68,"author":{"gitId":"tehtea"},"content":"                String whenIsTaskDue \u003d taskDetails.split(\"by: \")[1];"},{"lineNumber":69,"author":{"gitId":"tehtea"},"content":"                task \u003d new Deadline(taskDescription, isDone, whenIsTaskDue);"},{"lineNumber":70,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":71,"author":{"gitId":"tehtea"},"content":"            default:"},{"lineNumber":72,"author":{"gitId":"tehtea"},"content":"                break;"},{"lineNumber":73,"author":{"gitId":"tehtea"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"tehtea"},"content":"            tasks.add(task);"},{"lineNumber":75,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":77,"author":{"gitId":"tehtea"},"content":"        return tasks;"},{"lineNumber":78,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":80,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"tehtea"},"content":"     * Handles all file saving"},{"lineNumber":82,"author":{"gitId":"tehtea"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"tehtea"},"content":"     * @param tasks Task list to be updated."},{"lineNumber":84,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"tehtea"},"content":"    public static void saveData(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":86,"author":{"gitId":"tehtea"},"content":"        try {"},{"lineNumber":87,"author":{"gitId":"tehtea"},"content":"            FileWriter fileWriter \u003d new FileWriter(String.valueOf(storageFilePath));"},{"lineNumber":88,"author":{"gitId":"tehtea"},"content":"            for (Task task : tasks) {"},{"lineNumber":89,"author":{"gitId":"tehtea"},"content":"                String taskToWrite \u003d task.toString() + \"\\n\";"},{"lineNumber":90,"author":{"gitId":"tehtea"},"content":"                fileWriter.write(taskToWrite);"},{"lineNumber":91,"author":{"gitId":"tehtea"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"tehtea"},"content":"            fileWriter.close();"},{"lineNumber":93,"author":{"gitId":"tehtea"},"content":"        } catch (IOException e) {"},{"lineNumber":94,"author":{"gitId":"tehtea"},"content":"            Ui.printErrorMessage(e);"},{"lineNumber":95,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":97}},{"path":"src/main/java/dukchess/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"package dukchess.ui;"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"import dukchess.entity.Task;"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":" * Class that contains utilites for enhanced user greeting and instructions"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":" */"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"public final class Ui {"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"     * Utility for printing all unexpected exceptions"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"     * @param e - any exception"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"    public static void printErrorMessage(Exception e) {"},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"        System.err.println(\"An unexpected error occurred:\");"},{"lineNumber":17,"author":{"gitId":"tehtea"},"content":"        e.printStackTrace();"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":20,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"tehtea"},"content":"     * Utility for printing an error message"},{"lineNumber":22,"author":{"gitId":"tehtea"},"content":"     * @param customErrorMessage - any error message"},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"tehtea"},"content":"    public static void printErrorMessage(String customErrorMessage) {"},{"lineNumber":25,"author":{"gitId":"tehtea"},"content":"        System.out.println(customErrorMessage);"},{"lineNumber":26,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"tehtea"},"content":"     * Utility for printing a success message"},{"lineNumber":29,"author":{"gitId":"tehtea"},"content":"     * @param successMessage - any success message"},{"lineNumber":30,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"tehtea"},"content":"    public static void printSuccessMessage(String successMessage) {"},{"lineNumber":32,"author":{"gitId":"tehtea"},"content":"        System.out.println(successMessage);"},{"lineNumber":33,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":35,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"tehtea"},"content":"     * Utility function to print a list of tasks"},{"lineNumber":37,"author":{"gitId":"tehtea"},"content":"     * @param tasksToPrint a list of tasks to print"},{"lineNumber":38,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"tehtea"},"content":"    public static void printListOfTasks(List\u003cTask\u003e tasksToPrint) {"},{"lineNumber":40,"author":{"gitId":"tehtea"},"content":"        for (int i \u003d 0; i \u003c tasksToPrint.size(); i++) {"},{"lineNumber":41,"author":{"gitId":"tehtea"},"content":"            Task taskToPrint \u003d tasksToPrint.get(i);"},{"lineNumber":42,"author":{"gitId":"tehtea"},"content":"            System.out.printf(\"\u003e\u003e\u003e %d. %s\\n\", i + 1, taskToPrint.toString());"},{"lineNumber":43,"author":{"gitId":"tehtea"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":46,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"tehtea"},"content":"     * Prints out the initial greeting."},{"lineNumber":48,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"tehtea"},"content":"    public static void printGreeting() {"},{"lineNumber":50,"author":{"gitId":"tehtea"},"content":"        String welcomeText \u003d \"Hello, I am a PC assistant\\n\""},{"lineNumber":51,"author":{"gitId":"tehtea"},"content":"                + \"How do you want to set your tasks today?\";"},{"lineNumber":52,"author":{"gitId":"tehtea"},"content":"        System.out.println(welcomeText);"},{"lineNumber":53,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":55,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"tehtea"},"content":"     * Prints out the goodbye message."},{"lineNumber":57,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"tehtea"},"content":"    public static void sayGoodbye() {"},{"lineNumber":59,"author":{"gitId":"tehtea"},"content":"        String goodbyeText \u003d \"Goodbye, hope to see you soon!\";"},{"lineNumber":60,"author":{"gitId":"tehtea"},"content":"        System.out.println(goodbyeText);"},{"lineNumber":61,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":63,"author":{"gitId":"tehtea"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"tehtea"},"content":"     * Prints out subsequent input prompts."},{"lineNumber":65,"author":{"gitId":"tehtea"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"tehtea"},"content":"    public static void promptInputAgain() {"},{"lineNumber":67,"author":{"gitId":"tehtea"},"content":"        System.out.println(\"What other tasks do you want to do?\");"},{"lineNumber":68,"author":{"gitId":"tehtea"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"tehtea"},"content":""},{"lineNumber":70,"author":{"gitId":"tehtea"},"content":"}"}],"authorContributionMap":{"tehtea":70}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tehtea"},"content":"todo buy milk"},{"lineNumber":2,"author":{"gitId":"tehtea"},"content":"event meeting /at 9.30"},{"lineNumber":3,"author":{"gitId":"tehtea"},"content":"deadline retire /by 40"},{"lineNumber":4,"author":{"gitId":"tehtea"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"tehtea"},"content":"list"},{"lineNumber":6,"author":{"gitId":"tehtea"},"content":"todo"},{"lineNumber":7,"author":{"gitId":"tehtea"},"content":"event"},{"lineNumber":8,"author":{"gitId":"tehtea"},"content":"event meeting"},{"lineNumber":9,"author":{"gitId":"tehtea"},"content":"deadline"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"deadline retire"},{"lineNumber":11,"author":{"gitId":"tehtea"},"content":"blah"},{"lineNumber":12,"author":{"gitId":"tehtea"},"content":"delete 2"},{"lineNumber":13,"author":{"gitId":"tehtea"},"content":"delete 69"},{"lineNumber":14,"author":{"gitId":"tehtea"},"content":"find fakeKeyword"},{"lineNumber":15,"author":{"gitId":"tehtea"},"content":"find retire"},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"bye"}],"authorContributionMap":{"tehtea":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"tehtea"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\dukchess\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"tehtea"},"content":"java -classpath ..\\bin dukchess.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"tehtea":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"tehtea"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/dukchess/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"tehtea"},"content":"java -classpath ../bin dukchess.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"tehtea"},"content":"    rm ./data/*"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":38,"author":{"gitId":"tehtea"},"content":"    rm ./data/*"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":40,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"tehtea":4,"-":36}}]
