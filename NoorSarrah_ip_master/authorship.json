[{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"T \u003d\u003d\u003e [ ] \u003d\u003d\u003e be happy"}],"authorContributionMap":{"NoorSarrah":1}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"public class Deadline extends Task{"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":"    protected String by;"},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"        this.by \u003d by;"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"        return \"\\t[D] \" + super.toString() + \"(\" + \"by:\" + by + \")\";"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"    public String getDescription() {"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"        return this.description;"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"    public String getBy() {"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"        return this.by;"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"    public String stringToSave() {"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"        return \"D \u003d\u003d\u003e \" + getStatusIcon() + \" \u003d\u003d\u003e \" + getDescription() + \" \u003d\u003d\u003e \" + getBy();"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"}"}],"authorContributionMap":{"NoorSarrah":23}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"    //public static Task[] tasks \u003d new Task[100];"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"        // print welcome message"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"-\".repeat(50));"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"\\tHello! I\u0027m Duke\");"},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"\\tWhat can I do for you?\");"},{"lineNumber":25,"author":{"gitId":"NoorSarrah"},"content":"        printDash();"},{"lineNumber":26,"author":{"gitId":"NoorSarrah"},"content":"        String pathOfFile \u003d new File(\"\").getAbsolutePath();"},{"lineNumber":27,"author":{"gitId":"NoorSarrah"},"content":"        File tasksFile \u003d new File(pathOfFile + \"/duke.txt\");"},{"lineNumber":28,"author":{"gitId":"NoorSarrah"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"NoorSarrah"},"content":"            if (tasksFile.createNewFile()) {"},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":"                System.out.println(\"\\tTo save your task locally,\\n\" +"},{"lineNumber":31,"author":{"gitId":"NoorSarrah"},"content":"                        \"\\tA new file has been created at:\\n\\t\" +"},{"lineNumber":32,"author":{"gitId":"NoorSarrah"},"content":"                        tasksFile.getAbsolutePath() + \"\\n\");"},{"lineNumber":33,"author":{"gitId":"NoorSarrah"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"NoorSarrah"},"content":"            uploadTasks(tasksFile.getAbsolutePath());"},{"lineNumber":35,"author":{"gitId":"NoorSarrah"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"\\tThere was an I/O error:\\nBye!\\n\");"},{"lineNumber":37,"author":{"gitId":"NoorSarrah"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"NoorSarrah"},"content":"        Scanner myObj \u003d new Scanner(System.in);"},{"lineNumber":40,"author":{"gitId":"NoorSarrah"},"content":"        String command \u003d myObj.nextLine();"},{"lineNumber":41,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":42,"author":{"gitId":"NoorSarrah"},"content":"        while (!command.equals(\"bye\")) {"},{"lineNumber":43,"author":{"gitId":"NoorSarrah"},"content":"            // prints a checklist"},{"lineNumber":44,"author":{"gitId":"NoorSarrah"},"content":"            if (command.equals(\"list\")) {"},{"lineNumber":45,"author":{"gitId":"NoorSarrah"},"content":"                printList();"},{"lineNumber":46,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":47,"author":{"gitId":"NoorSarrah"},"content":"                // marks current task as completed"},{"lineNumber":48,"author":{"gitId":"NoorSarrah"},"content":"            } else if (command.contains(\"done\")) {"},{"lineNumber":49,"author":{"gitId":"NoorSarrah"},"content":"                taskCompleted(command);"},{"lineNumber":50,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":51,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":52,"author":{"gitId":"NoorSarrah"},"content":"                // adds tasks into list"},{"lineNumber":53,"author":{"gitId":"NoorSarrah"},"content":"            } else if (command.contains(\"delete\")) {"},{"lineNumber":54,"author":{"gitId":"NoorSarrah"},"content":"                deleteTasks(command);"},{"lineNumber":55,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":56,"author":{"gitId":"NoorSarrah"},"content":"                // add tasks to list"},{"lineNumber":57,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":58,"author":{"gitId":"NoorSarrah"},"content":"            } else {"},{"lineNumber":59,"author":{"gitId":"NoorSarrah"},"content":"                addTasks(command);"},{"lineNumber":60,"author":{"gitId":"NoorSarrah"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"NoorSarrah"},"content":"            command \u003d myObj.nextLine();"},{"lineNumber":62,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"NoorSarrah"},"content":"        // exit program"},{"lineNumber":64,"author":{"gitId":"NoorSarrah"},"content":"        printDash();"},{"lineNumber":65,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":66,"author":{"gitId":"NoorSarrah"},"content":"        printDash();"},{"lineNumber":67,"author":{"gitId":"NoorSarrah"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"NoorSarrah"},"content":"            saveTasks(tasksFile.getAbsolutePath());"},{"lineNumber":69,"author":{"gitId":"NoorSarrah"},"content":"        } catch (IOException e) {"},{"lineNumber":70,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"No file was saved due to an I/O error.\\n\");"},{"lineNumber":71,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"NoorSarrah"},"content":"    public static void uploadTasks(String pathOfFile) throws FileNotFoundException {"},{"lineNumber":75,"author":{"gitId":"NoorSarrah"},"content":"        File f \u003d new File(pathOfFile);"},{"lineNumber":76,"author":{"gitId":"NoorSarrah"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":77,"author":{"gitId":"NoorSarrah"},"content":"        while (s.hasNext()) {"},{"lineNumber":78,"author":{"gitId":"NoorSarrah"},"content":"            String[] task \u003d s.nextLine().split(\" \u003d\u003d\u003e \");"},{"lineNumber":79,"author":{"gitId":"NoorSarrah"},"content":"            if (task[0].equals(\"T\")) {"},{"lineNumber":80,"author":{"gitId":"NoorSarrah"},"content":"                tasks.add(new Todo(task[2]));"},{"lineNumber":81,"author":{"gitId":"NoorSarrah"},"content":"            } else if (task[0].equals(\"D\")) {"},{"lineNumber":82,"author":{"gitId":"NoorSarrah"},"content":"                tasks.add(new Deadline(task[2], task[3]));"},{"lineNumber":83,"author":{"gitId":"NoorSarrah"},"content":"            } else {"},{"lineNumber":84,"author":{"gitId":"NoorSarrah"},"content":"                tasks.add(new Event(task[2], task[3]));"},{"lineNumber":85,"author":{"gitId":"NoorSarrah"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":87,"author":{"gitId":"NoorSarrah"},"content":"            if (task[1].equals(\"[X]\")) {"},{"lineNumber":88,"author":{"gitId":"NoorSarrah"},"content":"                tasks.get(tasks.size()-1).markAsDone();"},{"lineNumber":89,"author":{"gitId":"NoorSarrah"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"NoorSarrah"},"content":"    public static void saveTasks(String pathOfFile) throws IOException {"},{"lineNumber":93,"author":{"gitId":"NoorSarrah"},"content":"        FileWriter fw \u003d new FileWriter(pathOfFile);"},{"lineNumber":94,"author":{"gitId":"NoorSarrah"},"content":"        for (Task task : tasks) {"},{"lineNumber":95,"author":{"gitId":"NoorSarrah"},"content":"            fw.write(task.stringToSave());"},{"lineNumber":96,"author":{"gitId":"NoorSarrah"},"content":"            fw.write(System.lineSeparator());"},{"lineNumber":97,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"NoorSarrah"},"content":"        fw.close();"},{"lineNumber":99,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"NoorSarrah"},"content":"    public static void addTasks(String description) {"},{"lineNumber":101,"author":{"gitId":"NoorSarrah"},"content":"        printDash();"},{"lineNumber":102,"author":{"gitId":"NoorSarrah"},"content":"        if (description.contains(\"todo\")) {"},{"lineNumber":103,"author":{"gitId":"NoorSarrah"},"content":"            try {"},{"lineNumber":104,"author":{"gitId":"NoorSarrah"},"content":"                description \u003d description.substring(5);"},{"lineNumber":105,"author":{"gitId":"NoorSarrah"},"content":"                runTodo(description);"},{"lineNumber":106,"author":{"gitId":"NoorSarrah"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":107,"author":{"gitId":"NoorSarrah"},"content":"                System.out.println(\"\\tOOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":108,"author":{"gitId":"NoorSarrah"},"content":"                printDash();"},{"lineNumber":109,"author":{"gitId":"NoorSarrah"},"content":"                return;"},{"lineNumber":110,"author":{"gitId":"NoorSarrah"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"NoorSarrah"},"content":"        } else if (description.contains(\"deadline\")) {"},{"lineNumber":112,"author":{"gitId":"NoorSarrah"},"content":"            try {"},{"lineNumber":113,"author":{"gitId":"NoorSarrah"},"content":"                description \u003d description.substring(9);"},{"lineNumber":114,"author":{"gitId":"NoorSarrah"},"content":"                runDeadline(description);"},{"lineNumber":115,"author":{"gitId":"NoorSarrah"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":116,"author":{"gitId":"NoorSarrah"},"content":"                System.out.println(\"\\tOOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":117,"author":{"gitId":"NoorSarrah"},"content":"                printDash();"},{"lineNumber":118,"author":{"gitId":"NoorSarrah"},"content":"                return;"},{"lineNumber":119,"author":{"gitId":"NoorSarrah"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"NoorSarrah"},"content":"        } else if (description.contains(\"event\")) {"},{"lineNumber":121,"author":{"gitId":"NoorSarrah"},"content":"            try {"},{"lineNumber":122,"author":{"gitId":"NoorSarrah"},"content":"                description \u003d description.substring(6);"},{"lineNumber":123,"author":{"gitId":"NoorSarrah"},"content":"                runEvent(description);"},{"lineNumber":124,"author":{"gitId":"NoorSarrah"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":125,"author":{"gitId":"NoorSarrah"},"content":"                System.out.println(\"\\tOOPS!!! The description of a event cannot be empty\");"},{"lineNumber":126,"author":{"gitId":"NoorSarrah"},"content":"                printDash();"},{"lineNumber":127,"author":{"gitId":"NoorSarrah"},"content":"                return;"},{"lineNumber":128,"author":{"gitId":"NoorSarrah"},"content":"            }"},{"lineNumber":129,"author":{"gitId":"NoorSarrah"},"content":"        } else {"},{"lineNumber":130,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"\\tOOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":131,"author":{"gitId":"NoorSarrah"},"content":"            printDash();"},{"lineNumber":132,"author":{"gitId":"NoorSarrah"},"content":"            return;"},{"lineNumber":133,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task: \");"},{"lineNumber":135,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(tasks.get(tasks.size()-1).toString());"},{"lineNumber":136,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"\\tNow you have \" + tasks.size() + \" tasks in the list\");"},{"lineNumber":137,"author":{"gitId":"NoorSarrah"},"content":"        printDash();"},{"lineNumber":138,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"NoorSarrah"},"content":"    public static void deleteTasks(String command) {"},{"lineNumber":140,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":141,"author":{"gitId":"NoorSarrah"},"content":"        command \u003d command.replace(\"delete\", \" \");"},{"lineNumber":142,"author":{"gitId":"NoorSarrah"},"content":"        command \u003d command.strip();"},{"lineNumber":143,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":144,"author":{"gitId":"NoorSarrah"},"content":"        int count \u003d Integer.parseInt(command);"},{"lineNumber":145,"author":{"gitId":"NoorSarrah"},"content":"        --count; // array starts from 0"},{"lineNumber":146,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task:\\n\" + tasks.get(count).toString());"},{"lineNumber":147,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":148,"author":{"gitId":"NoorSarrah"},"content":"        tasks.remove(tasks.get(count));"},{"lineNumber":149,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"\\tNow you have \" + tasks.size() + \" tasks in the list\");"},{"lineNumber":150,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":152,"author":{"gitId":"NoorSarrah"},"content":"    public static void taskCompleted(String command) {"},{"lineNumber":153,"author":{"gitId":"NoorSarrah"},"content":"        int count \u003d 0;"},{"lineNumber":154,"author":{"gitId":"NoorSarrah"},"content":"        // remove done from string"},{"lineNumber":155,"author":{"gitId":"NoorSarrah"},"content":"        command \u003d command.replace(\"done\", \" \");"},{"lineNumber":156,"author":{"gitId":"NoorSarrah"},"content":"        command \u003d command.strip();"},{"lineNumber":157,"author":{"gitId":"NoorSarrah"},"content":"        count \u003d Integer.parseInt(command);"},{"lineNumber":158,"author":{"gitId":"NoorSarrah"},"content":"        --count; // array starts from 0"},{"lineNumber":159,"author":{"gitId":"NoorSarrah"},"content":"        tasks.get(count).markAsDone();"},{"lineNumber":160,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":161,"author":{"gitId":"NoorSarrah"},"content":"        try {"},{"lineNumber":162,"author":{"gitId":"NoorSarrah"},"content":"            count \u003d Integer.parseInt(command); // convert string 2 into int 2"},{"lineNumber":163,"author":{"gitId":"NoorSarrah"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":164,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"\\tOOPS!!! Please indicate task number\");"},{"lineNumber":165,"author":{"gitId":"NoorSarrah"},"content":"            printDash();"},{"lineNumber":166,"author":{"gitId":"NoorSarrah"},"content":"            return;"},{"lineNumber":167,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"NoorSarrah"},"content":"        try {"},{"lineNumber":169,"author":{"gitId":"NoorSarrah"},"content":"            --count; // array starts from 0"},{"lineNumber":170,"author":{"gitId":"NoorSarrah"},"content":"            tasks.get(count).markAsDone();"},{"lineNumber":171,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"\\tNice! I\u0027ve marked this task as done: \");"},{"lineNumber":172,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(tasks.get(count).toString());"},{"lineNumber":173,"author":{"gitId":"NoorSarrah"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":174,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"\\tOOPS!!! Please enter valid task number\");"},{"lineNumber":175,"author":{"gitId":"NoorSarrah"},"content":"            printDash();"},{"lineNumber":176,"author":{"gitId":"NoorSarrah"},"content":"            return;"},{"lineNumber":177,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":178,"author":{"gitId":"NoorSarrah"},"content":"        printDash();"},{"lineNumber":179,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":181,"author":{"gitId":"NoorSarrah"},"content":"    // print list as a checklist when command\u003dlist"},{"lineNumber":182,"author":{"gitId":"NoorSarrah"},"content":"    public static void printList() {"},{"lineNumber":183,"author":{"gitId":"NoorSarrah"},"content":"        printDash();"},{"lineNumber":184,"author":{"gitId":"NoorSarrah"},"content":"        if (tasks.size() !\u003d 0) {"},{"lineNumber":185,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"\\tHere are the tasks in your list: \");"},{"lineNumber":186,"author":{"gitId":"NoorSarrah"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); ++i) {"},{"lineNumber":187,"author":{"gitId":"NoorSarrah"},"content":"                System.out.println(\"\\t\" + i + \".\" + tasks.get(i - 1).toString());"},{"lineNumber":188,"author":{"gitId":"NoorSarrah"},"content":"            }"},{"lineNumber":189,"author":{"gitId":"NoorSarrah"},"content":"        } else {"},{"lineNumber":190,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"\\tYou do not have any pending task.\");"},{"lineNumber":191,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":192,"author":{"gitId":"NoorSarrah"},"content":"        printDash();"},{"lineNumber":193,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":195,"author":{"gitId":"NoorSarrah"},"content":"    public static void runDeadline(String description) {"},{"lineNumber":196,"author":{"gitId":"NoorSarrah"},"content":"        String[] details \u003d description.split(\" /by\");"},{"lineNumber":197,"author":{"gitId":"NoorSarrah"},"content":"        tasks.add(new Deadline(details[0], details[1]));"},{"lineNumber":198,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":200,"author":{"gitId":"NoorSarrah"},"content":"    public static void runTodo(String description) {"},{"lineNumber":201,"author":{"gitId":"NoorSarrah"},"content":"        tasks.add(new Todo(description));"},{"lineNumber":202,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":204,"author":{"gitId":"NoorSarrah"},"content":"    public static void runEvent(String description) {"},{"lineNumber":205,"author":{"gitId":"NoorSarrah"},"content":"        String[] details \u003d description.split(\" /at\");"},{"lineNumber":206,"author":{"gitId":"NoorSarrah"},"content":"        tasks.add(new Event(details[0], details[1]));"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":209,"author":{"gitId":"NoorSarrah"},"content":"    public static void printDash() {"},{"lineNumber":210,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"-\".repeat(80));"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"NoorSarrah":201,"-":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"public class Event extends Task{"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":"    protected String by;"},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"    public Event(String description, String by) {"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"        this.by \u003d by;"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"        return \"\\t[E]\" + super.toString() + \"(\" + \"at:\" + by + \")\";"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"    public String getDescription() {"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"        return this.description;"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"    public String getBy() {"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"        return this.by;"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":"    public String stringToSave() {"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"        return \"E \u003d\u003d\u003e \" + getStatusIcon() + \" \u003d\u003d\u003e \" + getDescription() + \" \u003d\u003d\u003e \" + getBy();"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"}"}],"authorContributionMap":{"NoorSarrah":22}},{"path":"src/main/java/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"/*public class List {"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":"    private Task[] tasks;"},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"    private static int size;"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"    // list struct"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"    public List() {"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"        this.tasks \u003d new Task[100];"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"        this.size \u003d 0;"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"    // add items to the list"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"    public void addTasks(String description) {"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"        if(description.contains(\"todo\")){"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"            this.tasks[size] \u003d new Task(description);"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"        else if(description.contains(\"deadline\")){"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"            this.tasks[size] \u003d new Deadline(description, \"baa\"); //use substring to put in two arguments"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"        else if(description.contains(\"event\")){"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"            this.tasks[size] \u003d new Event(description, \"boo\"); //use substring to put in two arguments"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"        ++this.size; //increment"},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":26,"author":{"gitId":"NoorSarrah"},"content":"    // mark and display task that is completed"},{"lineNumber":27,"author":{"gitId":"NoorSarrah"},"content":"    public void taskCompleted(String command) {"},{"lineNumber":28,"author":{"gitId":"NoorSarrah"},"content":"        // remove done from string"},{"lineNumber":29,"author":{"gitId":"NoorSarrah"},"content":"        command \u003d command.replace(\"done\", \" \");"},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":"        command \u003d command.strip();"},{"lineNumber":31,"author":{"gitId":"NoorSarrah"},"content":"        // convert string 2 into int 2"},{"lineNumber":32,"author":{"gitId":"NoorSarrah"},"content":"        int count \u003d Integer.parseInt(command);"},{"lineNumber":33,"author":{"gitId":"NoorSarrah"},"content":"        --count; // array starts from 0"},{"lineNumber":34,"author":{"gitId":"NoorSarrah"},"content":"        this.tasks[count].markAsDone();"},{"lineNumber":35,"author":{"gitId":"NoorSarrah"},"content":"        printDash();"},{"lineNumber":36,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":37,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":38,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(this.tasks[count].getStatusIcon());"},{"lineNumber":39,"author":{"gitId":"NoorSarrah"},"content":"        printDash();"},{"lineNumber":40,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":42,"author":{"gitId":"NoorSarrah"},"content":"    // print list as a checklist when command\u003dlist"},{"lineNumber":43,"author":{"gitId":"NoorSarrah"},"content":"    public void printList() {"},{"lineNumber":44,"author":{"gitId":"NoorSarrah"},"content":"        printDash();"},{"lineNumber":45,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"Here are the tasks in your list: \");"},{"lineNumber":46,"author":{"gitId":"NoorSarrah"},"content":"        for (int i \u003d 0; i \u003c size; ++i) {"},{"lineNumber":47,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println((i + 1) + \".\" + \" \" + this.tasks[i]);"},{"lineNumber":48,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"NoorSarrah"},"content":"        printDash();"},{"lineNumber":50,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"NoorSarrah"},"content":"    public void printDash() {"},{"lineNumber":52,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"-\".repeat(50));"},{"lineNumber":53,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":55,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":56,"author":{"gitId":"NoorSarrah"},"content":"}*/"},{"lineNumber":57,"author":{"gitId":"NoorSarrah"},"content":""}],"authorContributionMap":{"NoorSarrah":57}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"        return getStatusIcon() + this.description;"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"        return (isDone ? \"[X]\" : \"[ ]\" ); //return tick or X symbols"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"    public void markAsDone(){"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"        this.isDone \u003d true;"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"    public String stringToSave() {"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"        return \"\";"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"}"}],"authorContributionMap":{"NoorSarrah":24}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"public class Todo extends Task{"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":"    public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"    public String toString() { return \"\\t[T] \" + super.toString();"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"    public String getDescription() {"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"        return this.description;"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"    public String stringToSave() {"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"        return \"T \u003d\u003d\u003e \" + getStatusIcon() + \" \u003d\u003d\u003e \" + getDescription();"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"}"}],"authorContributionMap":{"NoorSarrah":16}}]
