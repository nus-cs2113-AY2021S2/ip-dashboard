[{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ongweisheng"},"content":"0 deadline user guide /by 12pm"},{"lineNumber":2,"author":{"gitId":"ongweisheng"},"content":"0 todo 3 lectures later"}],"authorContributionMap":{"ongweisheng":2}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongweisheng"},"content":"import exceptions.EmptyDescriptionException;"},{"lineNumber":2,"author":{"gitId":"ongweisheng"},"content":"import exceptions.EmptyNumberException;"},{"lineNumber":3,"author":{"gitId":"ongweisheng"},"content":"import task.Deadline;"},{"lineNumber":4,"author":{"gitId":"ongweisheng"},"content":"import task.Event;"},{"lineNumber":5,"author":{"gitId":"ongweisheng"},"content":"import task.Task;"},{"lineNumber":6,"author":{"gitId":"ongweisheng"},"content":"import task.Todo;"},{"lineNumber":7,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":8,"author":{"gitId":"ongweisheng"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"ongweisheng"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":10,"author":{"gitId":"ongweisheng"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"ongweisheng"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"ongweisheng"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"ongweisheng"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":16,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":17,"author":{"gitId":"ongweisheng"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);"},{"lineNumber":18,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":19,"author":{"gitId":"ongweisheng"},"content":"    private static final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":21,"author":{"gitId":"ongweisheng"},"content":"    // These are the prefix strings to define the data type of a command parameter"},{"lineNumber":22,"author":{"gitId":"ongweisheng"},"content":"    private static final String COMMAND_TODO_WORD \u003d \"todo\";"},{"lineNumber":23,"author":{"gitId":"ongweisheng"},"content":"    private static final String COMMAND_EVENT_WORD \u003d \"event\";"},{"lineNumber":24,"author":{"gitId":"ongweisheng"},"content":"    private static final String COMMAND_DEADLINE_WORD \u003d \"deadline\";"},{"lineNumber":25,"author":{"gitId":"ongweisheng"},"content":"    private static final String COMMAND_LIST_WORD \u003d \"list\";"},{"lineNumber":26,"author":{"gitId":"ongweisheng"},"content":"    private static final String COMMAND_EXIT_WORD \u003d \"bye\";"},{"lineNumber":27,"author":{"gitId":"ongweisheng"},"content":"    private static final String COMMAND_DONE_WORD \u003d \"done\";"},{"lineNumber":28,"author":{"gitId":"ongweisheng"},"content":"    private static final String COMMAND_DELETE_WORD \u003d \"delete\";"},{"lineNumber":29,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":30,"author":{"gitId":"ongweisheng"},"content":"    // error messages"},{"lineNumber":31,"author":{"gitId":"ongweisheng"},"content":"    private static final String MESSAGE_DESCRIPTION_EMPTY_TODO \u003d \"The description of a todo cannot be empty.\";"},{"lineNumber":32,"author":{"gitId":"ongweisheng"},"content":"    private static final String MESSAGE_DESCRIPTION_EMPTY_DEADLINE \u003d \"The description of a deadline cannot be empty.\";"},{"lineNumber":33,"author":{"gitId":"ongweisheng"},"content":"    private static final String MESSAGE_DESCRIPTION_EMPTY_EVENT \u003d \"The description of a event cannot be empty.\";"},{"lineNumber":34,"author":{"gitId":"ongweisheng"},"content":"    private static final String MESSAGE_DESCRIPTION_EMPTY_DONE \u003d \"The number of the task to be marked as done cannot be empty.\";"},{"lineNumber":35,"author":{"gitId":"ongweisheng"},"content":"    private static final String MESSAGE_DESCRIPTION_EMPTY_DELETE \u003d \"The number of the task to be deleted cannot be empty.\";"},{"lineNumber":36,"author":{"gitId":"ongweisheng"},"content":"    private static final String MESSAGE_INVALID_COMMAND \u003d \"I\u0027m sorry, but I don\u0027t know what that means.\";"},{"lineNumber":37,"author":{"gitId":"ongweisheng"},"content":"    private static final String MESSAGE_INVALID_DEADLINE \u003d \"No deadline provided or wrong splitter.\";"},{"lineNumber":38,"author":{"gitId":"ongweisheng"},"content":"    private static final String MESSAGE_INVALID_EVENT \u003d \"No event date and time provided or wrong splitter.\";"},{"lineNumber":39,"author":{"gitId":"ongweisheng"},"content":"    private static final String MESSAGE_INVALID_COMMAND_DONE \u003d \"Number not provided for the task to be marked as done.\";"},{"lineNumber":40,"author":{"gitId":"ongweisheng"},"content":"    private static final String MESSAGE_INVALID_NUMBER_DONE \u003d \"Task number does not exist.\";"},{"lineNumber":41,"author":{"gitId":"ongweisheng"},"content":"    private static final String MESSAGE_INVALID_COMMAND_DELETE \u003d \"Number not provided for the task to be deleted.\";"},{"lineNumber":42,"author":{"gitId":"ongweisheng"},"content":"    private static final String MESSAGE_INVALID_NUMBER_DELETE \u003d \"Task number does not exist.\";"},{"lineNumber":43,"author":{"gitId":"ongweisheng"},"content":"    private static final String MESSAGE_SAVE_FILE_LOADED \u003d \"Save file loaded.\";"},{"lineNumber":44,"author":{"gitId":"ongweisheng"},"content":"    private static final String MESSAGE_SAVE_FILE_CREATED \u003d \"Save file created.\";"},{"lineNumber":45,"author":{"gitId":"ongweisheng"},"content":"    private static final String MESSAGE_SAVE_FILE_SAVED \u003d \"File saved.\";"},{"lineNumber":46,"author":{"gitId":"ongweisheng"},"content":"    private static final String MESSAGE_SAVE_FILE_ERROR \u003d \"Error while saving file.\";"},{"lineNumber":47,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":48,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"ongweisheng"},"content":"     * Main entry point of the application."},{"lineNumber":50,"author":{"gitId":"ongweisheng"},"content":"     * Initializes the application and starts the interaction with the user."},{"lineNumber":51,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":53,"author":{"gitId":"ongweisheng"},"content":"        showLogo();"},{"lineNumber":54,"author":{"gitId":"ongweisheng"},"content":"        showGreeting();"},{"lineNumber":55,"author":{"gitId":"ongweisheng"},"content":"        try {"},{"lineNumber":56,"author":{"gitId":"ongweisheng"},"content":"            loadFile();"},{"lineNumber":57,"author":{"gitId":"ongweisheng"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":58,"author":{"gitId":"ongweisheng"},"content":"            // do nothing since no file to load"},{"lineNumber":59,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"ongweisheng"},"content":"        while(true) {"},{"lineNumber":61,"author":{"gitId":"ongweisheng"},"content":"            String userCommand \u003d getUserInput();"},{"lineNumber":62,"author":{"gitId":"ongweisheng"},"content":"            executeCommand(userCommand);"},{"lineNumber":63,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":66,"author":{"gitId":"ongweisheng"},"content":"    private static void loadFile() throws FileNotFoundException {"},{"lineNumber":67,"author":{"gitId":"ongweisheng"},"content":"        File f \u003d new File(\"duke.txt\");"},{"lineNumber":68,"author":{"gitId":"ongweisheng"},"content":"        if (!f.exists()) { // if file does not exist"},{"lineNumber":69,"author":{"gitId":"ongweisheng"},"content":"            throw new FileNotFoundException();"},{"lineNumber":70,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"ongweisheng"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":72,"author":{"gitId":"ongweisheng"},"content":"        while (s.hasNext()) {"},{"lineNumber":73,"author":{"gitId":"ongweisheng"},"content":"            final String input \u003d s.nextLine();"},{"lineNumber":74,"author":{"gitId":"ongweisheng"},"content":"            final String[] commandDoneAndTypeAndParams \u003d splitSaveFileInput(input);"},{"lineNumber":75,"author":{"gitId":"ongweisheng"},"content":"            final String commandDone \u003d commandDoneAndTypeAndParams[0];"},{"lineNumber":76,"author":{"gitId":"ongweisheng"},"content":"            final String commandType \u003d commandDoneAndTypeAndParams[1];"},{"lineNumber":77,"author":{"gitId":"ongweisheng"},"content":"            final String commandArgs \u003d commandDoneAndTypeAndParams[2];"},{"lineNumber":78,"author":{"gitId":"ongweisheng"},"content":"            switch (commandType) {"},{"lineNumber":79,"author":{"gitId":"ongweisheng"},"content":"            case COMMAND_TODO_WORD:"},{"lineNumber":80,"author":{"gitId":"ongweisheng"},"content":"                addTodo(commandDone, commandArgs);"},{"lineNumber":81,"author":{"gitId":"ongweisheng"},"content":"                break;"},{"lineNumber":82,"author":{"gitId":"ongweisheng"},"content":"            case COMMAND_DEADLINE_WORD:"},{"lineNumber":83,"author":{"gitId":"ongweisheng"},"content":"                addDeadline(commandDone, commandArgs);"},{"lineNumber":84,"author":{"gitId":"ongweisheng"},"content":"                break;"},{"lineNumber":85,"author":{"gitId":"ongweisheng"},"content":"            case COMMAND_EVENT_WORD:"},{"lineNumber":86,"author":{"gitId":"ongweisheng"},"content":"                addEvent(commandDone, commandArgs);"},{"lineNumber":87,"author":{"gitId":"ongweisheng"},"content":"                break;"},{"lineNumber":88,"author":{"gitId":"ongweisheng"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(MESSAGE_SAVE_FILE_LOADED);"},{"lineNumber":91,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":93,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"ongweisheng"},"content":"     * Splits save file input into command done, command word and command arguments string"},{"lineNumber":95,"author":{"gitId":"ongweisheng"},"content":"     * @param saveFileInput line of input in duke.txt"},{"lineNumber":96,"author":{"gitId":"ongweisheng"},"content":"     * @return size 3 array; [command done, command type, command arguments]"},{"lineNumber":97,"author":{"gitId":"ongweisheng"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"ongweisheng"},"content":"    private static String[] splitSaveFileInput(String saveFileInput) {"},{"lineNumber":100,"author":{"gitId":"ongweisheng"},"content":"        return saveFileInput.trim().split(\" \", 3);"},{"lineNumber":101,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":103,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"ongweisheng"},"content":"     * add todo from save file"},{"lineNumber":105,"author":{"gitId":"ongweisheng"},"content":"     * @param commandArgs input of todo task"},{"lineNumber":106,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"ongweisheng"},"content":"    private static void addTodo(String commandDone, String commandArgs) {"},{"lineNumber":108,"author":{"gitId":"ongweisheng"},"content":"        Task task \u003d new Todo(commandArgs);"},{"lineNumber":109,"author":{"gitId":"ongweisheng"},"content":"        if (commandDone.equals(\"1\")) {"},{"lineNumber":110,"author":{"gitId":"ongweisheng"},"content":"            task.markAsDone();"},{"lineNumber":111,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"ongweisheng"},"content":"        taskList.add(task);"},{"lineNumber":113,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":115,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"ongweisheng"},"content":"     * add deadline from save file"},{"lineNumber":117,"author":{"gitId":"ongweisheng"},"content":"     * @param commandArgs input of deadline task"},{"lineNumber":118,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"ongweisheng"},"content":"    private static void addDeadline(String commandDone, String commandArgs) {"},{"lineNumber":120,"author":{"gitId":"ongweisheng"},"content":"        final String[] descriptionAndDeadline \u003d splitDescriptionAndDeadline(commandArgs);"},{"lineNumber":121,"author":{"gitId":"ongweisheng"},"content":"        Task task \u003d new Deadline(descriptionAndDeadline[0], descriptionAndDeadline[1]);"},{"lineNumber":122,"author":{"gitId":"ongweisheng"},"content":"        if (commandDone.equals(\"1\")) {"},{"lineNumber":123,"author":{"gitId":"ongweisheng"},"content":"            task.markAsDone();"},{"lineNumber":124,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"ongweisheng"},"content":"        taskList.add(task);"},{"lineNumber":126,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":128,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"ongweisheng"},"content":"     * add event from save file"},{"lineNumber":130,"author":{"gitId":"ongweisheng"},"content":"     * @param commandArgs input of event task"},{"lineNumber":131,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"ongweisheng"},"content":"    private static void addEvent(String commandDone, String commandArgs) {"},{"lineNumber":133,"author":{"gitId":"ongweisheng"},"content":"        final String[] descriptionAndTime \u003d splitDescriptionAndTime(commandArgs);"},{"lineNumber":134,"author":{"gitId":"ongweisheng"},"content":"        Task task \u003d new Event(descriptionAndTime[0], descriptionAndTime[1]);"},{"lineNumber":135,"author":{"gitId":"ongweisheng"},"content":"        if (commandDone.equals(\"1\")) {"},{"lineNumber":136,"author":{"gitId":"ongweisheng"},"content":"            task.markAsDone();"},{"lineNumber":137,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"ongweisheng"},"content":"        taskList.add(task);"},{"lineNumber":139,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":141,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":142,"author":{"gitId":"ongweisheng"},"content":"    private static void showLogo() {"},{"lineNumber":143,"author":{"gitId":"ongweisheng"},"content":"        // logo/loading"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":145,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":146,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":147,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":148,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":152,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":153,"author":{"gitId":"ongweisheng"},"content":"    private static void showGreeting() {"},{"lineNumber":154,"author":{"gitId":"ongweisheng"},"content":"        // greeting"},{"lineNumber":155,"author":{"gitId":"ongweisheng"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";"},{"lineNumber":156,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(greeting);"},{"lineNumber":157,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":159,"author":{"gitId":"ongweisheng"},"content":"    private static String getUserInput() {"},{"lineNumber":160,"author":{"gitId":"ongweisheng"},"content":"        return SCANNER.nextLine();"},{"lineNumber":161,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":163,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":164,"author":{"gitId":"ongweisheng"},"content":"     * Executes the command as specified by the user"},{"lineNumber":165,"author":{"gitId":"ongweisheng"},"content":"     *"},{"lineNumber":166,"author":{"gitId":"ongweisheng"},"content":"     * @param userInputString raw input from user"},{"lineNumber":167,"author":{"gitId":"ongweisheng"},"content":"     * prints out the interaction between the program and the user\u0027s inputs"},{"lineNumber":168,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":169,"author":{"gitId":"ongweisheng"},"content":"    private static void executeCommand(String userInputString) {"},{"lineNumber":170,"author":{"gitId":"ongweisheng"},"content":"        final String[] commandTypeAndParams \u003d splitCommandWordAndArgs(userInputString);"},{"lineNumber":171,"author":{"gitId":"ongweisheng"},"content":"        final String commandType \u003d commandTypeAndParams[0];"},{"lineNumber":172,"author":{"gitId":"ongweisheng"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];"},{"lineNumber":173,"author":{"gitId":"ongweisheng"},"content":"        switch (commandType) {"},{"lineNumber":174,"author":{"gitId":"ongweisheng"},"content":"        case COMMAND_TODO_WORD:"},{"lineNumber":175,"author":{"gitId":"ongweisheng"},"content":"            try {"},{"lineNumber":176,"author":{"gitId":"ongweisheng"},"content":"                executeTodo(commandArgs);"},{"lineNumber":177,"author":{"gitId":"ongweisheng"},"content":"            } catch (EmptyDescriptionException e) {"},{"lineNumber":178,"author":{"gitId":"ongweisheng"},"content":"                System.out.println(MESSAGE_DESCRIPTION_EMPTY_TODO);"},{"lineNumber":179,"author":{"gitId":"ongweisheng"},"content":"            }"},{"lineNumber":180,"author":{"gitId":"ongweisheng"},"content":"            break;"},{"lineNumber":181,"author":{"gitId":"ongweisheng"},"content":"        case COMMAND_DEADLINE_WORD:"},{"lineNumber":182,"author":{"gitId":"ongweisheng"},"content":"            try {"},{"lineNumber":183,"author":{"gitId":"ongweisheng"},"content":"                executeDeadline(commandArgs);"},{"lineNumber":184,"author":{"gitId":"ongweisheng"},"content":"            } catch (EmptyDescriptionException e) {"},{"lineNumber":185,"author":{"gitId":"ongweisheng"},"content":"                System.out.println(MESSAGE_DESCRIPTION_EMPTY_DEADLINE);"},{"lineNumber":186,"author":{"gitId":"ongweisheng"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":187,"author":{"gitId":"ongweisheng"},"content":"                System.out.println(MESSAGE_INVALID_DEADLINE);"},{"lineNumber":188,"author":{"gitId":"ongweisheng"},"content":"            }"},{"lineNumber":189,"author":{"gitId":"ongweisheng"},"content":"            break;"},{"lineNumber":190,"author":{"gitId":"ongweisheng"},"content":"        case COMMAND_EVENT_WORD:"},{"lineNumber":191,"author":{"gitId":"ongweisheng"},"content":"            try {"},{"lineNumber":192,"author":{"gitId":"ongweisheng"},"content":"                executeEvent(commandArgs);"},{"lineNumber":193,"author":{"gitId":"ongweisheng"},"content":"            } catch (EmptyDescriptionException e) {"},{"lineNumber":194,"author":{"gitId":"ongweisheng"},"content":"                System.out.println(MESSAGE_DESCRIPTION_EMPTY_EVENT);"},{"lineNumber":195,"author":{"gitId":"ongweisheng"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":196,"author":{"gitId":"ongweisheng"},"content":"                System.out.println(MESSAGE_INVALID_EVENT);"},{"lineNumber":197,"author":{"gitId":"ongweisheng"},"content":"            }"},{"lineNumber":198,"author":{"gitId":"ongweisheng"},"content":"            break;"},{"lineNumber":199,"author":{"gitId":"ongweisheng"},"content":"        case COMMAND_LIST_WORD:"},{"lineNumber":200,"author":{"gitId":"ongweisheng"},"content":"            executeList();"},{"lineNumber":201,"author":{"gitId":"ongweisheng"},"content":"            break;"},{"lineNumber":202,"author":{"gitId":"ongweisheng"},"content":"        case COMMAND_DONE_WORD:"},{"lineNumber":203,"author":{"gitId":"ongweisheng"},"content":"            try {"},{"lineNumber":204,"author":{"gitId":"ongweisheng"},"content":"                executeDone(commandArgs);"},{"lineNumber":205,"author":{"gitId":"ongweisheng"},"content":"            } catch (EmptyNumberException e) {"},{"lineNumber":206,"author":{"gitId":"ongweisheng"},"content":"                System.out.println(MESSAGE_DESCRIPTION_EMPTY_DONE);"},{"lineNumber":207,"author":{"gitId":"ongweisheng"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":208,"author":{"gitId":"ongweisheng"},"content":"                System.out.println(MESSAGE_INVALID_COMMAND_DONE);"},{"lineNumber":209,"author":{"gitId":"ongweisheng"},"content":"            } catch (NullPointerException e) {"},{"lineNumber":210,"author":{"gitId":"ongweisheng"},"content":"                System.out.println(MESSAGE_INVALID_NUMBER_DONE);"},{"lineNumber":211,"author":{"gitId":"ongweisheng"},"content":"            }"},{"lineNumber":212,"author":{"gitId":"ongweisheng"},"content":"            break;"},{"lineNumber":213,"author":{"gitId":"ongweisheng"},"content":"        case COMMAND_DELETE_WORD:"},{"lineNumber":214,"author":{"gitId":"ongweisheng"},"content":"            try {"},{"lineNumber":215,"author":{"gitId":"ongweisheng"},"content":"                executeDelete(commandArgs);"},{"lineNumber":216,"author":{"gitId":"ongweisheng"},"content":"            } catch (EmptyNumberException e) {"},{"lineNumber":217,"author":{"gitId":"ongweisheng"},"content":"                System.out.println(MESSAGE_DESCRIPTION_EMPTY_DELETE);"},{"lineNumber":218,"author":{"gitId":"ongweisheng"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":219,"author":{"gitId":"ongweisheng"},"content":"                System.out.println(MESSAGE_INVALID_COMMAND_DELETE);"},{"lineNumber":220,"author":{"gitId":"ongweisheng"},"content":"            } catch (NullPointerException e) {"},{"lineNumber":221,"author":{"gitId":"ongweisheng"},"content":"                System.out.println(MESSAGE_INVALID_NUMBER_DELETE);"},{"lineNumber":222,"author":{"gitId":"ongweisheng"},"content":"            }"},{"lineNumber":223,"author":{"gitId":"ongweisheng"},"content":"            break;"},{"lineNumber":224,"author":{"gitId":"ongweisheng"},"content":"        case COMMAND_EXIT_WORD:"},{"lineNumber":225,"author":{"gitId":"ongweisheng"},"content":"            executeExit();"},{"lineNumber":226,"author":{"gitId":"ongweisheng"},"content":"            break;"},{"lineNumber":227,"author":{"gitId":"ongweisheng"},"content":"        default:"},{"lineNumber":228,"author":{"gitId":"ongweisheng"},"content":"            System.out.println(MESSAGE_INVALID_COMMAND);"},{"lineNumber":229,"author":{"gitId":"ongweisheng"},"content":"            break;"},{"lineNumber":230,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":231,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":233,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":234,"author":{"gitId":"ongweisheng"},"content":"     * Splits raw user input into command word and command arguments string"},{"lineNumber":235,"author":{"gitId":"ongweisheng"},"content":"     * @param rawUserInput what the user inputs"},{"lineNumber":236,"author":{"gitId":"ongweisheng"},"content":"     * @return size 2 array; first element is the command type and second element is the arguments string"},{"lineNumber":237,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":238,"author":{"gitId":"ongweisheng"},"content":"    private static String[] splitCommandWordAndArgs(String rawUserInput) {"},{"lineNumber":239,"author":{"gitId":"ongweisheng"},"content":"        final String[] split \u003d rawUserInput.trim().split(\" \", 2);"},{"lineNumber":240,"author":{"gitId":"ongweisheng"},"content":"        return split.length \u003d\u003d 2 ? split : new String[] { split[0] , \"\"};"},{"lineNumber":241,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":242,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":243,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":244,"author":{"gitId":"ongweisheng"},"content":"     * Add task under task.Todo class and feedback display message when task.Todo task added"},{"lineNumber":245,"author":{"gitId":"ongweisheng"},"content":"     * @param commandArgs Description of the todo task"},{"lineNumber":246,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":247,"author":{"gitId":"ongweisheng"},"content":"    private static void executeTodo(String commandArgs) throws EmptyDescriptionException{"},{"lineNumber":248,"author":{"gitId":"ongweisheng"},"content":"        if (commandArgs.equals(\"\")) {"},{"lineNumber":249,"author":{"gitId":"ongweisheng"},"content":"            throw new EmptyDescriptionException();"},{"lineNumber":250,"author":{"gitId":"ongweisheng"},"content":"        } else {"},{"lineNumber":251,"author":{"gitId":"ongweisheng"},"content":"            Task task \u003d new Todo(commandArgs);"},{"lineNumber":252,"author":{"gitId":"ongweisheng"},"content":"            taskList.add(task);"},{"lineNumber":253,"author":{"gitId":"ongweisheng"},"content":"            getMessageForTodo(task);"},{"lineNumber":254,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":255,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":256,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":257,"author":{"gitId":"ongweisheng"},"content":"    private static void getMessageForTodo(Task task) {"},{"lineNumber":258,"author":{"gitId":"ongweisheng"},"content":"        showAddTask();"},{"lineNumber":259,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"  \" + task.toString());"},{"lineNumber":260,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"},{"lineNumber":261,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":262,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":263,"author":{"gitId":"ongweisheng"},"content":"    public static void showAddTask() {"},{"lineNumber":264,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":265,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":266,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":267,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":268,"author":{"gitId":"ongweisheng"},"content":"     * Add task under task.Deadline class and feedback display message when task.Deadline task added"},{"lineNumber":269,"author":{"gitId":"ongweisheng"},"content":"     * @param commandArgs description and deadline of the task"},{"lineNumber":270,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":271,"author":{"gitId":"ongweisheng"},"content":"    private static void executeDeadline(String commandArgs) throws EmptyDescriptionException{"},{"lineNumber":272,"author":{"gitId":"ongweisheng"},"content":"        if (commandArgs.equals(\"\")) {"},{"lineNumber":273,"author":{"gitId":"ongweisheng"},"content":"            throw new EmptyDescriptionException();"},{"lineNumber":274,"author":{"gitId":"ongweisheng"},"content":"        } else {"},{"lineNumber":275,"author":{"gitId":"ongweisheng"},"content":"            final String[] descriptionAndDeadline \u003d splitDescriptionAndDeadline(commandArgs);"},{"lineNumber":276,"author":{"gitId":"ongweisheng"},"content":"            Task task \u003d new Deadline(descriptionAndDeadline[0], descriptionAndDeadline[1]);"},{"lineNumber":277,"author":{"gitId":"ongweisheng"},"content":"            taskList.add(task);"},{"lineNumber":278,"author":{"gitId":"ongweisheng"},"content":"            getMessageForDeadline(task);"},{"lineNumber":279,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":280,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":281,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":282,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":283,"author":{"gitId":"ongweisheng"},"content":"    private static String[] splitDescriptionAndDeadline(String commandArgs) {"},{"lineNumber":284,"author":{"gitId":"ongweisheng"},"content":"        return commandArgs.split(\" /by \");"},{"lineNumber":285,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":286,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":287,"author":{"gitId":"ongweisheng"},"content":"    private static void getMessageForDeadline(Task task) {"},{"lineNumber":288,"author":{"gitId":"ongweisheng"},"content":"        showAddTask();"},{"lineNumber":289,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"  \" + task.toString());"},{"lineNumber":290,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"},{"lineNumber":291,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":292,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":293,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":294,"author":{"gitId":"ongweisheng"},"content":"     * Add task under task.Event class and feedback display message when task.Event task added"},{"lineNumber":295,"author":{"gitId":"ongweisheng"},"content":"     * @param commandArgs description of the event"},{"lineNumber":296,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":297,"author":{"gitId":"ongweisheng"},"content":"    private static void executeEvent(String commandArgs) throws EmptyDescriptionException {"},{"lineNumber":298,"author":{"gitId":"ongweisheng"},"content":"        if (commandArgs.equals(\"\")) {"},{"lineNumber":299,"author":{"gitId":"ongweisheng"},"content":"            throw new EmptyDescriptionException();"},{"lineNumber":300,"author":{"gitId":"ongweisheng"},"content":"        } else {"},{"lineNumber":301,"author":{"gitId":"ongweisheng"},"content":"            final String[] descriptionAndTime \u003d splitDescriptionAndTime(commandArgs);"},{"lineNumber":302,"author":{"gitId":"ongweisheng"},"content":"            Task task \u003d new Event(descriptionAndTime[0], descriptionAndTime[1]);"},{"lineNumber":303,"author":{"gitId":"ongweisheng"},"content":"            taskList.add(task);"},{"lineNumber":304,"author":{"gitId":"ongweisheng"},"content":"            getMessageForEvent(task);"},{"lineNumber":305,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":306,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":307,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":308,"author":{"gitId":"ongweisheng"},"content":"    private static String[] splitDescriptionAndTime(String commandArgs) {"},{"lineNumber":309,"author":{"gitId":"ongweisheng"},"content":"        return commandArgs.split(\" /at \");"},{"lineNumber":310,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":311,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":312,"author":{"gitId":"ongweisheng"},"content":"    private static void getMessageForEvent(Task task) {"},{"lineNumber":313,"author":{"gitId":"ongweisheng"},"content":"        showAddTask();"},{"lineNumber":314,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"  \" + task.toString());"},{"lineNumber":315,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"},{"lineNumber":316,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":317,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":318,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":319,"author":{"gitId":"ongweisheng"},"content":"     * Generate feedback for list of task and task status"},{"lineNumber":320,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":321,"author":{"gitId":"ongweisheng"},"content":"    private static void executeList() {"},{"lineNumber":322,"author":{"gitId":"ongweisheng"},"content":"        showTasksList(taskList);"},{"lineNumber":323,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":324,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":325,"author":{"gitId":"ongweisheng"},"content":"    private static void showTasksList(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":326,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":327,"author":{"gitId":"ongweisheng"},"content":"        int taskCount \u003d 1;"},{"lineNumber":328,"author":{"gitId":"ongweisheng"},"content":"        for (Task task : taskList) {"},{"lineNumber":329,"author":{"gitId":"ongweisheng"},"content":"            System.out.println(taskCount + \".\" + task.toString());"},{"lineNumber":330,"author":{"gitId":"ongweisheng"},"content":"            ++taskCount;"},{"lineNumber":331,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":332,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":333,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":334,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":335,"author":{"gitId":"ongweisheng"},"content":"     * Mark task as done and display message when status of task is changed"},{"lineNumber":336,"author":{"gitId":"ongweisheng"},"content":"     * @param commandArgs number of the task to be marked as done"},{"lineNumber":337,"author":{"gitId":"ongweisheng"},"content":"     * @throws EmptyNumberException when no number provided along with done command"},{"lineNumber":338,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":339,"author":{"gitId":"ongweisheng"},"content":"    private static void executeDone(String commandArgs) throws EmptyNumberException {"},{"lineNumber":340,"author":{"gitId":"ongweisheng"},"content":"        if (commandArgs.equals(\"\")) {"},{"lineNumber":341,"author":{"gitId":"ongweisheng"},"content":"            throw new EmptyNumberException();"},{"lineNumber":342,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":343,"author":{"gitId":"ongweisheng"},"content":"        int taskIndex \u003d Integer.parseInt(commandArgs) - 1; // minus 1 to adhere to array indexing"},{"lineNumber":344,"author":{"gitId":"ongweisheng"},"content":"        Task taskToBeDone \u003d taskList.get(taskIndex);"},{"lineNumber":345,"author":{"gitId":"ongweisheng"},"content":"        taskToBeDone.markAsDone();"},{"lineNumber":346,"author":{"gitId":"ongweisheng"},"content":"        showTaskDone(taskToBeDone);"},{"lineNumber":347,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":348,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":349,"author":{"gitId":"ongweisheng"},"content":"    private static void showTaskDone(Task task) {"},{"lineNumber":350,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":351,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"  \" + task.toString());"},{"lineNumber":352,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":353,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":354,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":355,"author":{"gitId":"ongweisheng"},"content":"     * Delete task and display message when task is deleted"},{"lineNumber":356,"author":{"gitId":"ongweisheng"},"content":"     * @param commandArgs number of the task to be deleted"},{"lineNumber":357,"author":{"gitId":"ongweisheng"},"content":"     * @throws EmptyNumberException when no number provided along with delete command"},{"lineNumber":358,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":359,"author":{"gitId":"ongweisheng"},"content":"    private static void executeDelete(String commandArgs) throws EmptyNumberException {"},{"lineNumber":360,"author":{"gitId":"ongweisheng"},"content":"        if (commandArgs.equals(\"\")) {"},{"lineNumber":361,"author":{"gitId":"ongweisheng"},"content":"            throw new EmptyNumberException();"},{"lineNumber":362,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":363,"author":{"gitId":"ongweisheng"},"content":"        int taskIndex \u003d Integer.parseInt(commandArgs) - 1; // minus 1 to adhere to array indexing"},{"lineNumber":364,"author":{"gitId":"ongweisheng"},"content":"        Task taskToBeDeleted \u003d taskList.get(taskIndex);"},{"lineNumber":365,"author":{"gitId":"ongweisheng"},"content":"        showTaskDelete(taskToBeDeleted);"},{"lineNumber":366,"author":{"gitId":"ongweisheng"},"content":"        taskList.remove(taskIndex);"},{"lineNumber":367,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":368,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":369,"author":{"gitId":"ongweisheng"},"content":"    private static void showTaskDelete(Task task) {"},{"lineNumber":370,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":371,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"  \" + task.toString());"},{"lineNumber":372,"author":{"gitId":"ongweisheng"},"content":"        // (taskList.size() - 1) because task not deleted yet in executeDelete"},{"lineNumber":373,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"Now you have \" + (taskList.size() - 1) + \" tasks in the list.\");"},{"lineNumber":374,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":375,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":376,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":377,"author":{"gitId":"ongweisheng"},"content":"     * exit the program"},{"lineNumber":378,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":379,"author":{"gitId":"ongweisheng"},"content":"    private static void executeExit() {"},{"lineNumber":380,"author":{"gitId":"ongweisheng"},"content":"        try {"},{"lineNumber":381,"author":{"gitId":"ongweisheng"},"content":"            saveFile();"},{"lineNumber":382,"author":{"gitId":"ongweisheng"},"content":"        } catch (IOException e) {"},{"lineNumber":383,"author":{"gitId":"ongweisheng"},"content":"            System.out.println(MESSAGE_SAVE_FILE_ERROR);"},{"lineNumber":384,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":385,"author":{"gitId":"ongweisheng"},"content":"        showGoodbye();"},{"lineNumber":386,"author":{"gitId":"ongweisheng"},"content":"        System.exit(0);"},{"lineNumber":387,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":388,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":389,"author":{"gitId":"ongweisheng"},"content":"    private static void saveFile() throws IOException {"},{"lineNumber":390,"author":{"gitId":"ongweisheng"},"content":"        File f \u003d new File(\"duke.txt\");"},{"lineNumber":391,"author":{"gitId":"ongweisheng"},"content":"        if (f.createNewFile()) {"},{"lineNumber":392,"author":{"gitId":"ongweisheng"},"content":"            System.out.println(MESSAGE_SAVE_FILE_CREATED);"},{"lineNumber":393,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":394,"author":{"gitId":"ongweisheng"},"content":"        FileWriter fw \u003d new FileWriter(\"duke.txt\");"},{"lineNumber":395,"author":{"gitId":"ongweisheng"},"content":"        for (Task task : taskList) {"},{"lineNumber":396,"author":{"gitId":"ongweisheng"},"content":"            fw.write(task.saveToFile());"},{"lineNumber":397,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":398,"author":{"gitId":"ongweisheng"},"content":"        fw.close();"},{"lineNumber":399,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(MESSAGE_SAVE_FILE_SAVED);"},{"lineNumber":400,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":401,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":402,"author":{"gitId":"ongweisheng"},"content":"    private static void showGoodbye() {"},{"lineNumber":403,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":405,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":406,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ongweisheng":395,"-":11}},{"path":"src/main/java/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongweisheng"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":3,"author":{"gitId":"ongweisheng"},"content":"public class EmptyDescriptionException extends Throwable {"},{"lineNumber":4,"author":{"gitId":"ongweisheng"},"content":"    // no other code needed"},{"lineNumber":5,"author":{"gitId":"ongweisheng"},"content":"}"}],"authorContributionMap":{"ongweisheng":5}},{"path":"src/main/java/exceptions/EmptyNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongweisheng"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":3,"author":{"gitId":"ongweisheng"},"content":"public class EmptyNumberException extends Exception{"},{"lineNumber":4,"author":{"gitId":"ongweisheng"},"content":"    // no other code needed"},{"lineNumber":5,"author":{"gitId":"ongweisheng"},"content":"}"}],"authorContributionMap":{"ongweisheng":5}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongweisheng"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":3,"author":{"gitId":"ongweisheng"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":5,"author":{"gitId":"ongweisheng"},"content":"    protected String by;"},{"lineNumber":6,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":7,"author":{"gitId":"ongweisheng"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":8,"author":{"gitId":"ongweisheng"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"ongweisheng"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":12,"author":{"gitId":"ongweisheng"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"ongweisheng"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"ongweisheng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":15,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":17,"author":{"gitId":"ongweisheng"},"content":"    public String saveToFile() {"},{"lineNumber":18,"author":{"gitId":"ongweisheng"},"content":"        String done \u003d \"1\";"},{"lineNumber":19,"author":{"gitId":"ongweisheng"},"content":"        if (isDone) {"},{"lineNumber":20,"author":{"gitId":"ongweisheng"},"content":"            done \u003d \"1\";"},{"lineNumber":21,"author":{"gitId":"ongweisheng"},"content":"        } else {"},{"lineNumber":22,"author":{"gitId":"ongweisheng"},"content":"            done \u003d \"0\";"},{"lineNumber":23,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"ongweisheng"},"content":"        return done + \" deadline \" + description + \" /by \" + by + \"\\n\";"},{"lineNumber":25,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ongweisheng"},"content":"}"}],"authorContributionMap":{"ongweisheng":26}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongweisheng"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":3,"author":{"gitId":"ongweisheng"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":5,"author":{"gitId":"ongweisheng"},"content":"    protected String at;"},{"lineNumber":6,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":7,"author":{"gitId":"ongweisheng"},"content":"    public Event(String description, String at) {"},{"lineNumber":8,"author":{"gitId":"ongweisheng"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"ongweisheng"},"content":"        this.at \u003d at;"},{"lineNumber":10,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":12,"author":{"gitId":"ongweisheng"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"ongweisheng"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"ongweisheng"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":15,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":17,"author":{"gitId":"ongweisheng"},"content":"    public String saveToFile() {"},{"lineNumber":18,"author":{"gitId":"ongweisheng"},"content":"        String done \u003d \"1\";"},{"lineNumber":19,"author":{"gitId":"ongweisheng"},"content":"        if (isDone) {"},{"lineNumber":20,"author":{"gitId":"ongweisheng"},"content":"            done \u003d \"1\";"},{"lineNumber":21,"author":{"gitId":"ongweisheng"},"content":"        } else {"},{"lineNumber":22,"author":{"gitId":"ongweisheng"},"content":"            done \u003d \"0\";"},{"lineNumber":23,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"ongweisheng"},"content":"        return done + \" event \" + description + \" /at \" + at + \"\\n\";"},{"lineNumber":25,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ongweisheng"},"content":"}"}],"authorContributionMap":{"ongweisheng":26}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongweisheng"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":3,"author":{"gitId":"ongweisheng"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"ongweisheng"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"ongweisheng"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"ongweisheng"},"content":"    "},{"lineNumber":7,"author":{"gitId":"ongweisheng"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"ongweisheng"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"ongweisheng"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":12,"author":{"gitId":"ongweisheng"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"ongweisheng"},"content":"        return (isDone ? \"X\" : \" \"); //return X if done else empty space"},{"lineNumber":14,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":16,"author":{"gitId":"ongweisheng"},"content":"    public String getDescription() {"},{"lineNumber":17,"author":{"gitId":"ongweisheng"},"content":"        return description;"},{"lineNumber":18,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":20,"author":{"gitId":"ongweisheng"},"content":"    public void markAsDone() {"},{"lineNumber":21,"author":{"gitId":"ongweisheng"},"content":"        this.isDone \u003d true;"},{"lineNumber":22,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":24,"author":{"gitId":"ongweisheng"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"ongweisheng"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":26,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":28,"author":{"gitId":"ongweisheng"},"content":"    public String saveToFile() {"},{"lineNumber":29,"author":{"gitId":"ongweisheng"},"content":"        return null;"},{"lineNumber":30,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ongweisheng"},"content":"}"}],"authorContributionMap":{"ongweisheng":31}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongweisheng"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":3,"author":{"gitId":"ongweisheng"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":5,"author":{"gitId":"ongweisheng"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"ongweisheng"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":9,"author":{"gitId":"ongweisheng"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"ongweisheng"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"ongweisheng"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":12,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":14,"author":{"gitId":"ongweisheng"},"content":"    public String saveToFile() {"},{"lineNumber":15,"author":{"gitId":"ongweisheng"},"content":"        String done \u003d \"1\";"},{"lineNumber":16,"author":{"gitId":"ongweisheng"},"content":"        if (isDone) {"},{"lineNumber":17,"author":{"gitId":"ongweisheng"},"content":"            done \u003d \"1\";"},{"lineNumber":18,"author":{"gitId":"ongweisheng"},"content":"        } else {"},{"lineNumber":19,"author":{"gitId":"ongweisheng"},"content":"            done \u003d \"0\";"},{"lineNumber":20,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"ongweisheng"},"content":"        return done + \" todo \" + description + \"\\n\";"},{"lineNumber":22,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ongweisheng"},"content":"}"}],"authorContributionMap":{"ongweisheng":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ongweisheng"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"ongweisheng"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"ongweisheng"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"ongweisheng"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"ongweisheng"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"ongweisheng"},"content":"list"},{"lineNumber":7,"author":{"gitId":"ongweisheng"},"content":"delete 3"},{"lineNumber":8,"author":{"gitId":"ongweisheng"},"content":"bye"}],"authorContributionMap":{"ongweisheng":8}}]
