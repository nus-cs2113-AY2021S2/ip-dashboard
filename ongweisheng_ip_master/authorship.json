[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"ongweisheng"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"ongweisheng"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":11,"author":{"gitId":"ongweisheng"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"ongweisheng"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"ongweisheng"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"ongweisheng"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"ongweisheng"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"ongweisheng":9,"-":17}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongweisheng"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":3,"author":{"gitId":"ongweisheng"},"content":"    protected String by;"},{"lineNumber":4,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":5,"author":{"gitId":"ongweisheng"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"ongweisheng"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"ongweisheng"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":10,"author":{"gitId":"ongweisheng"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"ongweisheng"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"ongweisheng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":13,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ongweisheng"},"content":"}"}],"authorContributionMap":{"ongweisheng":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongweisheng"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"ongweisheng"},"content":"import java.util.Arrays;"},{"lineNumber":3,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":6,"author":{"gitId":"ongweisheng"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);"},{"lineNumber":7,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":8,"author":{"gitId":"ongweisheng"},"content":"    private static Task[] taskList \u003d new Task[100];"},{"lineNumber":9,"author":{"gitId":"ongweisheng"},"content":"    private static int count \u003d 0;"},{"lineNumber":10,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":11,"author":{"gitId":"ongweisheng"},"content":"    // These are the prefix strings to define the data type of a command parameter"},{"lineNumber":12,"author":{"gitId":"ongweisheng"},"content":"    private static final String COMMAND_TODO_WORD \u003d \"todo\";"},{"lineNumber":13,"author":{"gitId":"ongweisheng"},"content":"    private static final String COMMAND_EVENT_WORD \u003d \"event\";"},{"lineNumber":14,"author":{"gitId":"ongweisheng"},"content":"    private static final String COMMAND_DEADLINE_WORD \u003d \"deadline\";"},{"lineNumber":15,"author":{"gitId":"ongweisheng"},"content":"    private static final String COMMAND_LIST_WORD \u003d \"list\";"},{"lineNumber":16,"author":{"gitId":"ongweisheng"},"content":"    private static final String COMMAND_EXIT_WORD \u003d \"bye\";"},{"lineNumber":17,"author":{"gitId":"ongweisheng"},"content":"    private static final String COMMAND_DONE_WORD \u003d \"done\";"},{"lineNumber":18,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":19,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"ongweisheng"},"content":"     * Main entry point of the application."},{"lineNumber":21,"author":{"gitId":"ongweisheng"},"content":"     * Initializes the application and starts the interaction with the user."},{"lineNumber":22,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":24,"author":{"gitId":"ongweisheng"},"content":"        showLogo();"},{"lineNumber":25,"author":{"gitId":"ongweisheng"},"content":"        showGreeting();"},{"lineNumber":26,"author":{"gitId":"ongweisheng"},"content":"        while(true) {"},{"lineNumber":27,"author":{"gitId":"ongweisheng"},"content":"            String userCommand \u003d getUserInput();"},{"lineNumber":28,"author":{"gitId":"ongweisheng"},"content":"            executeCommand(userCommand);"},{"lineNumber":29,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"ongweisheng"},"content":"        // handleCommand(); // handle input received"},{"lineNumber":31,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":33,"author":{"gitId":"ongweisheng"},"content":"    private static void printHorizontalLine() {"},{"lineNumber":34,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":35,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":37,"author":{"gitId":"ongweisheng"},"content":"    private static void showLogo() {"},{"lineNumber":38,"author":{"gitId":"ongweisheng"},"content":"        // logo/loading"},{"lineNumber":39,"author":{"gitId":"ongweisheng"},"content":"        printHorizontalLine();"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":48,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":49,"author":{"gitId":"ongweisheng"},"content":"    private static void showGreeting() {"},{"lineNumber":50,"author":{"gitId":"ongweisheng"},"content":"        // greeting"},{"lineNumber":51,"author":{"gitId":"ongweisheng"},"content":"        printHorizontalLine();"},{"lineNumber":52,"author":{"gitId":"ongweisheng"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";"},{"lineNumber":53,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(greeting);"},{"lineNumber":54,"author":{"gitId":"ongweisheng"},"content":"        printHorizontalLine();"},{"lineNumber":55,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":57,"author":{"gitId":"ongweisheng"},"content":"    private static String getUserInput() {"},{"lineNumber":58,"author":{"gitId":"ongweisheng"},"content":"        String inputLine \u003d SCANNER.nextLine();"},{"lineNumber":59,"author":{"gitId":"ongweisheng"},"content":"        return inputLine;"},{"lineNumber":60,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":62,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"ongweisheng"},"content":"     * Executes the command as specified by the user"},{"lineNumber":64,"author":{"gitId":"ongweisheng"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"ongweisheng"},"content":"     * @param userInputString raw input from user"},{"lineNumber":66,"author":{"gitId":"ongweisheng"},"content":"     * prints out the interaction between the program and the user\u0027s inputs"},{"lineNumber":67,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"ongweisheng"},"content":"    private static void executeCommand(String userInputString) {"},{"lineNumber":69,"author":{"gitId":"ongweisheng"},"content":"        final String[] commandTypeAndParams \u003d splitCommandWordAndArgs(userInputString);"},{"lineNumber":70,"author":{"gitId":"ongweisheng"},"content":"        final String commandType \u003d commandTypeAndParams[0];"},{"lineNumber":71,"author":{"gitId":"ongweisheng"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];"},{"lineNumber":72,"author":{"gitId":"ongweisheng"},"content":"        switch (commandType) {"},{"lineNumber":73,"author":{"gitId":"ongweisheng"},"content":"        case COMMAND_TODO_WORD:"},{"lineNumber":74,"author":{"gitId":"ongweisheng"},"content":"            executeTodo(commandArgs);"},{"lineNumber":75,"author":{"gitId":"ongweisheng"},"content":"            break;"},{"lineNumber":76,"author":{"gitId":"ongweisheng"},"content":"        case COMMAND_DEADLINE_WORD:"},{"lineNumber":77,"author":{"gitId":"ongweisheng"},"content":"            executeDeadline(commandArgs);"},{"lineNumber":78,"author":{"gitId":"ongweisheng"},"content":"            break;"},{"lineNumber":79,"author":{"gitId":"ongweisheng"},"content":"        case COMMAND_EVENT_WORD:"},{"lineNumber":80,"author":{"gitId":"ongweisheng"},"content":"            executeEvent(commandArgs);"},{"lineNumber":81,"author":{"gitId":"ongweisheng"},"content":"            break;"},{"lineNumber":82,"author":{"gitId":"ongweisheng"},"content":"        case COMMAND_LIST_WORD:"},{"lineNumber":83,"author":{"gitId":"ongweisheng"},"content":"            executeList();"},{"lineNumber":84,"author":{"gitId":"ongweisheng"},"content":"            break;"},{"lineNumber":85,"author":{"gitId":"ongweisheng"},"content":"        case COMMAND_DONE_WORD:"},{"lineNumber":86,"author":{"gitId":"ongweisheng"},"content":"            executeDone(commandArgs);"},{"lineNumber":87,"author":{"gitId":"ongweisheng"},"content":"            break;"},{"lineNumber":88,"author":{"gitId":"ongweisheng"},"content":"        case COMMAND_EXIT_WORD:"},{"lineNumber":89,"author":{"gitId":"ongweisheng"},"content":"            executeExit();"},{"lineNumber":90,"author":{"gitId":"ongweisheng"},"content":"            break;"},{"lineNumber":91,"author":{"gitId":"ongweisheng"},"content":"        default:"},{"lineNumber":92,"author":{"gitId":"ongweisheng"},"content":"            break;"},{"lineNumber":93,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":96,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"ongweisheng"},"content":"     * Splits raw user input into command word and command arguments string"},{"lineNumber":98,"author":{"gitId":"ongweisheng"},"content":"     * @param rawUserInput"},{"lineNumber":99,"author":{"gitId":"ongweisheng"},"content":"     * @return size 2 array; first elemetn is the command type and second element is the arguments string"},{"lineNumber":100,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"ongweisheng"},"content":"    private static String[] splitCommandWordAndArgs(String rawUserInput) {"},{"lineNumber":102,"author":{"gitId":"ongweisheng"},"content":"        final String[] split \u003d rawUserInput.trim().split(\" \", 2);"},{"lineNumber":103,"author":{"gitId":"ongweisheng"},"content":"        return split.length \u003d\u003d 2 ? split : new String[] { split[0] , \"\"};"},{"lineNumber":104,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":106,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"ongweisheng"},"content":"     * Add task under Todo class and feedback display message when Todo task added"},{"lineNumber":108,"author":{"gitId":"ongweisheng"},"content":"     * @param commandArgs Description of the task"},{"lineNumber":109,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"ongweisheng"},"content":"    private static void executeTodo(String commandArgs) {"},{"lineNumber":111,"author":{"gitId":"ongweisheng"},"content":"        final String description \u003d commandArgs;"},{"lineNumber":112,"author":{"gitId":"ongweisheng"},"content":"        Task task \u003d new Todo(description);"},{"lineNumber":113,"author":{"gitId":"ongweisheng"},"content":"        taskList[count] \u003d task;"},{"lineNumber":114,"author":{"gitId":"ongweisheng"},"content":"        ++count;"},{"lineNumber":115,"author":{"gitId":"ongweisheng"},"content":"        getMessageForTodo(task, count);"},{"lineNumber":116,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":118,"author":{"gitId":"ongweisheng"},"content":"    private static void getMessageForTodo(Task task, int count) {"},{"lineNumber":119,"author":{"gitId":"ongweisheng"},"content":"        printHorizontalLine();"},{"lineNumber":120,"author":{"gitId":"ongweisheng"},"content":"        showAddTask();"},{"lineNumber":121,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"  \" + task.toString());"},{"lineNumber":122,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"Now you have \" + count + \" tasks in the list.\");"},{"lineNumber":123,"author":{"gitId":"ongweisheng"},"content":"        printHorizontalLine();"},{"lineNumber":124,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":126,"author":{"gitId":"ongweisheng"},"content":"    public static void showAddTask() {"},{"lineNumber":127,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":128,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":130,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"ongweisheng"},"content":"     * Add task under Deadline class and feedback display message when Deadline task added"},{"lineNumber":132,"author":{"gitId":"ongweisheng"},"content":"     * @param commandArgs description and deadline of the task"},{"lineNumber":133,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"ongweisheng"},"content":"    private static void executeDeadline(String commandArgs) {"},{"lineNumber":135,"author":{"gitId":"ongweisheng"},"content":"        final String[] descriptionAndDeadline \u003d splitDescriptionAndDeadline(commandArgs);"},{"lineNumber":136,"author":{"gitId":"ongweisheng"},"content":"        Task task \u003d new Deadline(descriptionAndDeadline[0], descriptionAndDeadline[1]);"},{"lineNumber":137,"author":{"gitId":"ongweisheng"},"content":"        taskList[count] \u003d task;"},{"lineNumber":138,"author":{"gitId":"ongweisheng"},"content":"        ++count;"},{"lineNumber":139,"author":{"gitId":"ongweisheng"},"content":"        getMessageForDeadline(task, count);"},{"lineNumber":140,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":142,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":143,"author":{"gitId":"ongweisheng"},"content":"    private static String[] splitDescriptionAndDeadline(String commandArgs) {"},{"lineNumber":144,"author":{"gitId":"ongweisheng"},"content":"        final String[] split \u003d commandArgs.split(\" /by \");"},{"lineNumber":145,"author":{"gitId":"ongweisheng"},"content":"        return split;"},{"lineNumber":146,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":148,"author":{"gitId":"ongweisheng"},"content":"    private static void getMessageForDeadline(Task task, int count) {"},{"lineNumber":149,"author":{"gitId":"ongweisheng"},"content":"        printHorizontalLine();"},{"lineNumber":150,"author":{"gitId":"ongweisheng"},"content":"        showAddTask();"},{"lineNumber":151,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"  \" + task.toString());"},{"lineNumber":152,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"Now you have \" + count + \" tasks in the list.\");"},{"lineNumber":153,"author":{"gitId":"ongweisheng"},"content":"        printHorizontalLine();"},{"lineNumber":154,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":156,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"ongweisheng"},"content":"     * Add task under Event class and feedback display message when Event task added"},{"lineNumber":158,"author":{"gitId":"ongweisheng"},"content":"     * @param commandArgs"},{"lineNumber":159,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"ongweisheng"},"content":"    private static void executeEvent(String commandArgs) {"},{"lineNumber":161,"author":{"gitId":"ongweisheng"},"content":"        final String[] descriptionAndTime \u003d splitDescriptionAndTime(commandArgs);"},{"lineNumber":162,"author":{"gitId":"ongweisheng"},"content":"        Task task \u003d new Event(descriptionAndTime[0], descriptionAndTime[1]);"},{"lineNumber":163,"author":{"gitId":"ongweisheng"},"content":"        taskList[count] \u003d task;"},{"lineNumber":164,"author":{"gitId":"ongweisheng"},"content":"        ++count;"},{"lineNumber":165,"author":{"gitId":"ongweisheng"},"content":"        getMessageForEvent(task, count);"},{"lineNumber":166,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":168,"author":{"gitId":"ongweisheng"},"content":"    private static String[] splitDescriptionAndTime(String commandArgs) {"},{"lineNumber":169,"author":{"gitId":"ongweisheng"},"content":"        final String[] split \u003d commandArgs.split(\" /at \");"},{"lineNumber":170,"author":{"gitId":"ongweisheng"},"content":"        return split;"},{"lineNumber":171,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":173,"author":{"gitId":"ongweisheng"},"content":"    private static void getMessageForEvent(Task task, int count) {"},{"lineNumber":174,"author":{"gitId":"ongweisheng"},"content":"        printHorizontalLine();"},{"lineNumber":175,"author":{"gitId":"ongweisheng"},"content":"        showAddTask();"},{"lineNumber":176,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"  \" + task.toString());"},{"lineNumber":177,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"Now you have \" + count + \" tasks in the list.\");"},{"lineNumber":178,"author":{"gitId":"ongweisheng"},"content":"        printHorizontalLine();"},{"lineNumber":179,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":181,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":182,"author":{"gitId":"ongweisheng"},"content":"     * Generate feedback for list of task and task status"},{"lineNumber":183,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":184,"author":{"gitId":"ongweisheng"},"content":"    private static void executeList() {"},{"lineNumber":185,"author":{"gitId":"ongweisheng"},"content":"        printHorizontalLine();"},{"lineNumber":186,"author":{"gitId":"ongweisheng"},"content":"        showTasksList(taskList);"},{"lineNumber":187,"author":{"gitId":"ongweisheng"},"content":"        printHorizontalLine();"},{"lineNumber":188,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":190,"author":{"gitId":"ongweisheng"},"content":"    private static void showTasksList(Task[] taskList) {"},{"lineNumber":191,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":192,"author":{"gitId":"ongweisheng"},"content":"        int descriptionCount \u003d 1;"},{"lineNumber":193,"author":{"gitId":"ongweisheng"},"content":"        for (Task task : taskList) {"},{"lineNumber":194,"author":{"gitId":"ongweisheng"},"content":"            if (task !\u003d null) {"},{"lineNumber":195,"author":{"gitId":"ongweisheng"},"content":"                System.out.println(descriptionCount + \".\" + task.toString());"},{"lineNumber":196,"author":{"gitId":"ongweisheng"},"content":"                ++descriptionCount;"},{"lineNumber":197,"author":{"gitId":"ongweisheng"},"content":"            }"},{"lineNumber":198,"author":{"gitId":"ongweisheng"},"content":"        }"},{"lineNumber":199,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":201,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":202,"author":{"gitId":"ongweisheng"},"content":"     * Mark task as done and display message when status of task is changed"},{"lineNumber":203,"author":{"gitId":"ongweisheng"},"content":"     * @param commandArgs"},{"lineNumber":204,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":205,"author":{"gitId":"ongweisheng"},"content":"    private static void executeDone(String commandArgs) {"},{"lineNumber":206,"author":{"gitId":"ongweisheng"},"content":"        int taskIndex \u003d Integer.parseInt(commandArgs) - 1; // minus 1 to adhere to array indexing"},{"lineNumber":207,"author":{"gitId":"ongweisheng"},"content":"        Task taskToBeDone \u003d taskList[taskIndex];"},{"lineNumber":208,"author":{"gitId":"ongweisheng"},"content":"        taskToBeDone.markAsDone();"},{"lineNumber":209,"author":{"gitId":"ongweisheng"},"content":"        showTaskDone(taskToBeDone);"},{"lineNumber":210,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":211,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":212,"author":{"gitId":"ongweisheng"},"content":"    private static void showTaskDone(Task task) {"},{"lineNumber":213,"author":{"gitId":"ongweisheng"},"content":"        printHorizontalLine();"},{"lineNumber":214,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":215,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"  \" + task.toString());"},{"lineNumber":216,"author":{"gitId":"ongweisheng"},"content":"        printHorizontalLine();"},{"lineNumber":217,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":219,"author":{"gitId":"ongweisheng"},"content":"    /**"},{"lineNumber":220,"author":{"gitId":"ongweisheng"},"content":"     * exit the program"},{"lineNumber":221,"author":{"gitId":"ongweisheng"},"content":"     */"},{"lineNumber":222,"author":{"gitId":"ongweisheng"},"content":"    private static void executeExit() {"},{"lineNumber":223,"author":{"gitId":"ongweisheng"},"content":"        showGoodbye();"},{"lineNumber":224,"author":{"gitId":"ongweisheng"},"content":"        System.exit(0);"},{"lineNumber":225,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":226,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":227,"author":{"gitId":"ongweisheng"},"content":"    private static void showGoodbye() {"},{"lineNumber":228,"author":{"gitId":"ongweisheng"},"content":"        printHorizontalLine();"},{"lineNumber":229,"author":{"gitId":"ongweisheng"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":230,"author":{"gitId":"ongweisheng"},"content":"        printHorizontalLine();"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ongweisheng":222,"-":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongweisheng"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":3,"author":{"gitId":"ongweisheng"},"content":"    protected String at;"},{"lineNumber":4,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":5,"author":{"gitId":"ongweisheng"},"content":"    public Event(String description, String at) {"},{"lineNumber":6,"author":{"gitId":"ongweisheng"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"ongweisheng"},"content":"        this.at \u003d at;"},{"lineNumber":8,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":10,"author":{"gitId":"ongweisheng"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"ongweisheng"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"ongweisheng"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":13,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ongweisheng"},"content":"}"}],"authorContributionMap":{"ongweisheng":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongweisheng"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"ongweisheng"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"ongweisheng"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"ongweisheng"},"content":"    "},{"lineNumber":5,"author":{"gitId":"ongweisheng"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"ongweisheng"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"ongweisheng"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":10,"author":{"gitId":"ongweisheng"},"content":"    public String getStatusIcon() {"},{"lineNumber":11,"author":{"gitId":"ongweisheng"},"content":"        return (isDone ? \"X\" : \" \"); //return X if done else empty space"},{"lineNumber":12,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":14,"author":{"gitId":"ongweisheng"},"content":"    public String getDescription() {"},{"lineNumber":15,"author":{"gitId":"ongweisheng"},"content":"        return description;"},{"lineNumber":16,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":18,"author":{"gitId":"ongweisheng"},"content":"    public void markAsDone() {"},{"lineNumber":19,"author":{"gitId":"ongweisheng"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":22,"author":{"gitId":"ongweisheng"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"ongweisheng"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":24,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"ongweisheng"},"content":"}"}],"authorContributionMap":{"ongweisheng":25}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongweisheng"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":3,"author":{"gitId":"ongweisheng"},"content":"    public Todo(String description) {"},{"lineNumber":4,"author":{"gitId":"ongweisheng"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"ongweisheng"},"content":""},{"lineNumber":7,"author":{"gitId":"ongweisheng"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"ongweisheng"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"ongweisheng"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"ongweisheng"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ongweisheng"},"content":"}"}],"authorContributionMap":{"ongweisheng":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ongweisheng"},"content":"todo Ong Wei Sheng: Answer CS2113 tutorial questions"},{"lineNumber":2,"author":{"gitId":"ongweisheng"},"content":"deadline weekly CS2113 quiz /by Monday 9pm"},{"lineNumber":3,"author":{"gitId":"ongweisheng"},"content":"list"},{"lineNumber":4,"author":{"gitId":"ongweisheng"},"content":"event CS2113 lecture /at Friday 4 to 6 pm"},{"lineNumber":5,"author":{"gitId":"ongweisheng"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"ongweisheng"},"content":"list"}],"authorContributionMap":{"ongweisheng":6}}]
