[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"CabbageTime"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"CabbageTime"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":11,"author":{"gitId":"CabbageTime"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"CabbageTime"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"CabbageTime"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"CabbageTime"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"CabbageTime"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"CabbageTime":9,"-":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CabbageTime"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"CabbageTime"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"CabbageTime"},"content":"import java.util.Vector;"},{"lineNumber":4,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"CabbageTime"},"content":"    public static void printTasks(List\u003cString\u003e inputs){"},{"lineNumber":7,"author":{"gitId":"CabbageTime"},"content":"        int i \u003d 1;"},{"lineNumber":8,"author":{"gitId":"CabbageTime"},"content":"        for(String input:inputs){"},{"lineNumber":9,"author":{"gitId":"CabbageTime"},"content":"            System.out.println(i + \". \" + input);"},{"lineNumber":10,"author":{"gitId":"CabbageTime"},"content":"            ++i;"},{"lineNumber":11,"author":{"gitId":"CabbageTime"},"content":"        }"},{"lineNumber":12,"author":{"gitId":"CabbageTime"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":15,"author":{"gitId":"CabbageTime"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":16,"author":{"gitId":"CabbageTime"},"content":"        String command \u003d \"\";"},{"lineNumber":17,"author":{"gitId":"CabbageTime"},"content":"        List\u003cString\u003e tasks \u003d new Vector\u003cString\u003e();"},{"lineNumber":18,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":19,"author":{"gitId":"CabbageTime"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" +"},{"lineNumber":20,"author":{"gitId":"CabbageTime"},"content":"                \"What can I do for you?\");"},{"lineNumber":21,"author":{"gitId":"CabbageTime"},"content":"        do{"},{"lineNumber":22,"author":{"gitId":"CabbageTime"},"content":"            command \u003d in.nextLine();"},{"lineNumber":23,"author":{"gitId":"CabbageTime"},"content":"            switch(command){"},{"lineNumber":24,"author":{"gitId":"CabbageTime"},"content":"            case \"list\":"},{"lineNumber":25,"author":{"gitId":"CabbageTime"},"content":"                printTasks(tasks);"},{"lineNumber":26,"author":{"gitId":"CabbageTime"},"content":"                break;"},{"lineNumber":27,"author":{"gitId":"CabbageTime"},"content":"            case \"bye\":"},{"lineNumber":28,"author":{"gitId":"CabbageTime"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":29,"author":{"gitId":"CabbageTime"},"content":"                break;"},{"lineNumber":30,"author":{"gitId":"CabbageTime"},"content":"            default:"},{"lineNumber":31,"author":{"gitId":"CabbageTime"},"content":"                tasks.add(command);"},{"lineNumber":32,"author":{"gitId":"CabbageTime"},"content":"                System.out.println(\"added: \" + command);"},{"lineNumber":33,"author":{"gitId":"CabbageTime"},"content":"                break;"},{"lineNumber":34,"author":{"gitId":"CabbageTime"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"CabbageTime"},"content":"        }while(!command.equals(\"bye\"));"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"CabbageTime":33,"-":4}}]
