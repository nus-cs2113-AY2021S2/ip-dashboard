[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CabbageTime"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"CabbageTime"},"content":"    protected String by;"},{"lineNumber":3,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":4,"author":{"gitId":"CabbageTime"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":5,"author":{"gitId":"CabbageTime"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"CabbageTime"},"content":"        this.by \u003d by;"},{"lineNumber":7,"author":{"gitId":"CabbageTime"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":9,"author":{"gitId":"CabbageTime"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"CabbageTime"},"content":"    public String getDescription() {"},{"lineNumber":11,"author":{"gitId":"CabbageTime"},"content":"        return \"[D][\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (by: \" + by + \")\";"},{"lineNumber":12,"author":{"gitId":"CabbageTime"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"CabbageTime"},"content":"}"}],"authorContributionMap":{"CabbageTime":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CabbageTime"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"CabbageTime"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"CabbageTime"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"CabbageTime"},"content":"import java.util.Vector;"},{"lineNumber":5,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"CabbageTime"},"content":"    public static String lineDivider \u003d \"    ----------------------------------------------\";"},{"lineNumber":8,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":9,"author":{"gitId":"CabbageTime"},"content":"    public static void addMessage(Task task,int size){"},{"lineNumber":10,"author":{"gitId":"CabbageTime"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");"},{"lineNumber":11,"author":{"gitId":"CabbageTime"},"content":"        System.out.println(\"     \" + task.getDescription());"},{"lineNumber":12,"author":{"gitId":"CabbageTime"},"content":"        System.out.println(\"     Now you have \" + size + \" tasks in this list.\");"},{"lineNumber":13,"author":{"gitId":"CabbageTime"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":15,"author":{"gitId":"CabbageTime"},"content":"    public static void takeCommand(String command,List\u003cTask\u003e tasks){"},{"lineNumber":16,"author":{"gitId":"CabbageTime"},"content":"        String[] subStrings \u003d command.split(\" \");"},{"lineNumber":17,"author":{"gitId":"CabbageTime"},"content":"        String description \u003d \"\";"},{"lineNumber":18,"author":{"gitId":"CabbageTime"},"content":"        int slashIndex \u003d command.indexOf(\u0027/\u0027);"},{"lineNumber":19,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":20,"author":{"gitId":"CabbageTime"},"content":"        switch(subStrings[0]){"},{"lineNumber":21,"author":{"gitId":"CabbageTime"},"content":"        case \"list\":"},{"lineNumber":22,"author":{"gitId":"CabbageTime"},"content":"            printTasks(tasks);"},{"lineNumber":23,"author":{"gitId":"CabbageTime"},"content":"            break;"},{"lineNumber":24,"author":{"gitId":"CabbageTime"},"content":"        case \"bye\":"},{"lineNumber":25,"author":{"gitId":"CabbageTime"},"content":"            System.out.println(\"     Bye. Hope to see you again soon!\");"},{"lineNumber":26,"author":{"gitId":"CabbageTime"},"content":"            break;"},{"lineNumber":27,"author":{"gitId":"CabbageTime"},"content":"        case \"done\":"},{"lineNumber":28,"author":{"gitId":"CabbageTime"},"content":"            int taskNo \u003d Integer.parseInt(subStrings[1]);"},{"lineNumber":29,"author":{"gitId":"CabbageTime"},"content":"            Task taskDone \u003d tasks.get(taskNo-1);"},{"lineNumber":30,"author":{"gitId":"CabbageTime"},"content":"            taskDone.markAsDone();"},{"lineNumber":31,"author":{"gitId":"CabbageTime"},"content":"            System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":32,"author":{"gitId":"CabbageTime"},"content":"            System.out.println(\"      [\" + taskDone.getStatusIcon() + \"] \" +"},{"lineNumber":33,"author":{"gitId":"CabbageTime"},"content":"                    taskDone.description);"},{"lineNumber":34,"author":{"gitId":"CabbageTime"},"content":"            tasks.set(taskNo-1, taskDone);"},{"lineNumber":35,"author":{"gitId":"CabbageTime"},"content":"            break;"},{"lineNumber":36,"author":{"gitId":"CabbageTime"},"content":"        case \"todo\":"},{"lineNumber":37,"author":{"gitId":"CabbageTime"},"content":"            description \u003d command.substring(5);"},{"lineNumber":38,"author":{"gitId":"CabbageTime"},"content":"            Todo todo \u003d new Todo(description);"},{"lineNumber":39,"author":{"gitId":"CabbageTime"},"content":"            tasks.add(todo);"},{"lineNumber":40,"author":{"gitId":"CabbageTime"},"content":"            addMessage(todo,tasks.size());"},{"lineNumber":41,"author":{"gitId":"CabbageTime"},"content":"            break;"},{"lineNumber":42,"author":{"gitId":"CabbageTime"},"content":"        case \"deadline\":"},{"lineNumber":43,"author":{"gitId":"CabbageTime"},"content":"            if(slashIndex !\u003d -1) {"},{"lineNumber":44,"author":{"gitId":"CabbageTime"},"content":"                description \u003d command.substring(9, slashIndex-1);"},{"lineNumber":45,"author":{"gitId":"CabbageTime"},"content":"                String by \u003d command.substring(slashIndex+4);"},{"lineNumber":46,"author":{"gitId":"CabbageTime"},"content":"                Deadline deadline \u003d new Deadline(description, by);"},{"lineNumber":47,"author":{"gitId":"CabbageTime"},"content":"                tasks.add(deadline);"},{"lineNumber":48,"author":{"gitId":"CabbageTime"},"content":"                addMessage(deadline,tasks.size());"},{"lineNumber":49,"author":{"gitId":"CabbageTime"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"CabbageTime"},"content":"            break;"},{"lineNumber":51,"author":{"gitId":"CabbageTime"},"content":"        case \"event\":"},{"lineNumber":52,"author":{"gitId":"CabbageTime"},"content":"            if(slashIndex !\u003d -1) {"},{"lineNumber":53,"author":{"gitId":"CabbageTime"},"content":"                description \u003d command.substring(6, slashIndex-1);"},{"lineNumber":54,"author":{"gitId":"CabbageTime"},"content":"                String at \u003d command.substring(slashIndex+4);"},{"lineNumber":55,"author":{"gitId":"CabbageTime"},"content":"                Event event \u003d new Event(description, at);"},{"lineNumber":56,"author":{"gitId":"CabbageTime"},"content":"                tasks.add(event);"},{"lineNumber":57,"author":{"gitId":"CabbageTime"},"content":"                addMessage(event,tasks.size());"},{"lineNumber":58,"author":{"gitId":"CabbageTime"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"CabbageTime"},"content":"            break;"},{"lineNumber":60,"author":{"gitId":"CabbageTime"},"content":"        default:"},{"lineNumber":61,"author":{"gitId":"CabbageTime"},"content":"            break;"},{"lineNumber":62,"author":{"gitId":"CabbageTime"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"CabbageTime"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":65,"author":{"gitId":"CabbageTime"},"content":"    public static void printTasks(List\u003cTask\u003e tasks){"},{"lineNumber":66,"author":{"gitId":"CabbageTime"},"content":"        int i \u003d 1;"},{"lineNumber":67,"author":{"gitId":"CabbageTime"},"content":"        System.out.println(\"     Here are the tasks in your list:\");"},{"lineNumber":68,"author":{"gitId":"CabbageTime"},"content":"        for(Task task:tasks){"},{"lineNumber":69,"author":{"gitId":"CabbageTime"},"content":"            System.out.println(\"     \" + i + \".\" + task.getDescription());"},{"lineNumber":70,"author":{"gitId":"CabbageTime"},"content":"            ++i;"},{"lineNumber":71,"author":{"gitId":"CabbageTime"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"CabbageTime"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":75,"author":{"gitId":"CabbageTime"},"content":"        Scanner in \u003d new Scanner(System.in).useDelimiter(\" \");"},{"lineNumber":76,"author":{"gitId":"CabbageTime"},"content":"        String command \u003d \"\";"},{"lineNumber":77,"author":{"gitId":"CabbageTime"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":78,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":79,"author":{"gitId":"CabbageTime"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" +"},{"lineNumber":80,"author":{"gitId":"CabbageTime"},"content":"                \"What can I do for you?\");"},{"lineNumber":81,"author":{"gitId":"CabbageTime"},"content":"        do{"},{"lineNumber":82,"author":{"gitId":"CabbageTime"},"content":"            command \u003d in.nextLine();"},{"lineNumber":83,"author":{"gitId":"CabbageTime"},"content":"            System.out.println(lineDivider);"},{"lineNumber":84,"author":{"gitId":"CabbageTime"},"content":"            takeCommand(command,tasks);"},{"lineNumber":85,"author":{"gitId":"CabbageTime"},"content":"            System.out.println(lineDivider);"},{"lineNumber":86,"author":{"gitId":"CabbageTime"},"content":"        }while(!command.equals(\"bye\"));"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"CabbageTime":84,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CabbageTime"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"CabbageTime"},"content":"    protected String at;"},{"lineNumber":3,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":4,"author":{"gitId":"CabbageTime"},"content":"    public Event(String description, String at) {"},{"lineNumber":5,"author":{"gitId":"CabbageTime"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"CabbageTime"},"content":"        this.at \u003d at;"},{"lineNumber":7,"author":{"gitId":"CabbageTime"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":9,"author":{"gitId":"CabbageTime"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"CabbageTime"},"content":"    public String getDescription() {"},{"lineNumber":11,"author":{"gitId":"CabbageTime"},"content":"        return \"[E][\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (at: \" + at + \")\";"},{"lineNumber":12,"author":{"gitId":"CabbageTime"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"CabbageTime"},"content":"}"}],"authorContributionMap":{"CabbageTime":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CabbageTime"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"CabbageTime"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"CabbageTime"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":5,"author":{"gitId":"CabbageTime"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"CabbageTime"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"CabbageTime"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"CabbageTime"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":10,"author":{"gitId":"CabbageTime"},"content":"    public String getDescription() {"},{"lineNumber":11,"author":{"gitId":"CabbageTime"},"content":"        return description;"},{"lineNumber":12,"author":{"gitId":"CabbageTime"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":14,"author":{"gitId":"CabbageTime"},"content":"    public String getStatusIcon() {"},{"lineNumber":15,"author":{"gitId":"CabbageTime"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":16,"author":{"gitId":"CabbageTime"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":18,"author":{"gitId":"CabbageTime"},"content":"    public void markAsDone(){"},{"lineNumber":19,"author":{"gitId":"CabbageTime"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"CabbageTime"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"CabbageTime"},"content":"}"}],"authorContributionMap":{"CabbageTime":21}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CabbageTime"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"CabbageTime"},"content":"    public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"CabbageTime"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"CabbageTime"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"CabbageTime"},"content":""},{"lineNumber":6,"author":{"gitId":"CabbageTime"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"CabbageTime"},"content":"    public String getDescription() {"},{"lineNumber":8,"author":{"gitId":"CabbageTime"},"content":"        return \"[T][\" + super.getStatusIcon() + \"] \" + super.getDescription();"},{"lineNumber":9,"author":{"gitId":"CabbageTime"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"CabbageTime"},"content":"}"}],"authorContributionMap":{"CabbageTime":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CabbageTime"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"CabbageTime"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"CabbageTime"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"CabbageTime"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"CabbageTime"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"CabbageTime"},"content":"done 4"},{"lineNumber":7,"author":{"gitId":"CabbageTime"},"content":"todo borrow book"},{"lineNumber":8,"author":{"gitId":"CabbageTime"},"content":"list"},{"lineNumber":9,"author":{"gitId":"CabbageTime"},"content":"deadline return book /by Sunday"},{"lineNumber":10,"author":{"gitId":"CabbageTime"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":11,"author":{"gitId":"CabbageTime"},"content":"deadline do homework /by no idea :-p"}],"authorContributionMap":{"CabbageTime":11}}]
