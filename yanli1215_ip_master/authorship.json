[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"yanli1215"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"yanli1215"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":11,"author":{"gitId":"yanli1215"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"yanli1215"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"yanli1215"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"yanli1215"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"yanli1215"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"yanli1215":9,"-":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanli1215"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":6,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"Hello! I\u0027m Soul, your truly soul mate\");"},{"lineNumber":7,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":8,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":9,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":10,"author":{"gitId":"yanli1215"},"content":"        String line;"},{"lineNumber":11,"author":{"gitId":"yanli1215"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":12,"author":{"gitId":"yanli1215"},"content":"        line \u003d in.nextLine();"},{"lineNumber":13,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":14,"author":{"gitId":"yanli1215"},"content":"        TaskManager tasks \u003d new TaskManager(99);"},{"lineNumber":15,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":16,"author":{"gitId":"yanli1215"},"content":"        while (!line.equals(\"bye\")) {"},{"lineNumber":17,"author":{"gitId":"yanli1215"},"content":"            if(line.equals(\"list\")) {"},{"lineNumber":18,"author":{"gitId":"yanli1215"},"content":"                tasks.listAllTasks();"},{"lineNumber":19,"author":{"gitId":"yanli1215"},"content":"                line \u003d in.nextLine();"},{"lineNumber":20,"author":{"gitId":"yanli1215"},"content":"            } else if(line.matches(\"^\\\\ *(done)\\\\ *[1-9][0-9]*\")){"},{"lineNumber":21,"author":{"gitId":"yanli1215"},"content":"                int taskIndexShow \u003d Integer.parseInt(line.replaceAll(\"[^0-9]\", \"\"));"},{"lineNumber":22,"author":{"gitId":"yanli1215"},"content":"                tasks.markTaskDone(taskIndexShow);"},{"lineNumber":23,"author":{"gitId":"yanli1215"},"content":"                line \u003d in.nextLine();"},{"lineNumber":24,"author":{"gitId":"yanli1215"},"content":"            } else {"},{"lineNumber":25,"author":{"gitId":"yanli1215"},"content":"                tasks.addTask(line);"},{"lineNumber":26,"author":{"gitId":"yanli1215"},"content":"                line \u003d in.nextLine();"},{"lineNumber":27,"author":{"gitId":"yanli1215"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":29,"author":{"gitId":"yanli1215"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":31,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":32,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":33,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":34,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":35,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yanli1215":33,"-":4}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanli1215"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"yanli1215"},"content":"    private String content;"},{"lineNumber":3,"author":{"gitId":"yanli1215"},"content":"    private boolean done;"},{"lineNumber":4,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":5,"author":{"gitId":"yanli1215"},"content":"    public Task(String content) {"},{"lineNumber":6,"author":{"gitId":"yanli1215"},"content":"        this.content \u003d content;"},{"lineNumber":7,"author":{"gitId":"yanli1215"},"content":"        this.done \u003d false;"},{"lineNumber":8,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":10,"author":{"gitId":"yanli1215"},"content":"    public void setContent(String content) {"},{"lineNumber":11,"author":{"gitId":"yanli1215"},"content":"        this.content \u003d content;"},{"lineNumber":12,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":14,"author":{"gitId":"yanli1215"},"content":"    public void setDone(boolean done) {"},{"lineNumber":15,"author":{"gitId":"yanli1215"},"content":"        this.done \u003d done;"},{"lineNumber":16,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":18,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":19,"author":{"gitId":"yanli1215"},"content":"    public String getContent() {"},{"lineNumber":20,"author":{"gitId":"yanli1215"},"content":"        return content;"},{"lineNumber":21,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":23,"author":{"gitId":"yanli1215"},"content":"    public boolean isDone() {"},{"lineNumber":24,"author":{"gitId":"yanli1215"},"content":"        return done;"},{"lineNumber":25,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":27,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":28,"author":{"gitId":"yanli1215"},"content":"    public String getStatusIcon() {"},{"lineNumber":29,"author":{"gitId":"yanli1215"},"content":"        return (done ? \"\\u2718\" : \" \"); //return tick or X symbols"},{"lineNumber":30,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":32,"author":{"gitId":"yanli1215"},"content":"}"}],"authorContributionMap":{"yanli1215":32}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanli1215"},"content":"public class TaskManager {"},{"lineNumber":2,"author":{"gitId":"yanli1215"},"content":"    private Task[] tasks;"},{"lineNumber":3,"author":{"gitId":"yanli1215"},"content":"    private int numOfTasks;"},{"lineNumber":4,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":5,"author":{"gitId":"yanli1215"},"content":"    public TaskManager(int sizeOfTasks) {"},{"lineNumber":6,"author":{"gitId":"yanli1215"},"content":"        this.tasks \u003d new Task[sizeOfTasks];"},{"lineNumber":7,"author":{"gitId":"yanli1215"},"content":"        numOfTasks \u003d 0;"},{"lineNumber":8,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":10,"author":{"gitId":"yanli1215"},"content":"    public void addTask(String content) {"},{"lineNumber":11,"author":{"gitId":"yanli1215"},"content":"        tasks[numOfTasks] \u003d new Task(content);"},{"lineNumber":12,"author":{"gitId":"yanli1215"},"content":"        this.numOfTasks++;"},{"lineNumber":13,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":14,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"added: \" + content);"},{"lineNumber":15,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":16,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":18,"author":{"gitId":"yanli1215"},"content":"    public void markTaskDone(int taskIndexShow) {"},{"lineNumber":19,"author":{"gitId":"yanli1215"},"content":"        if (taskIndexShow \u003e 0 \u0026\u0026 taskIndexShow \u003c\u003d numOfTasks) {"},{"lineNumber":20,"author":{"gitId":"yanli1215"},"content":"            this.tasks[taskIndexShow-1].setDone(true);"},{"lineNumber":21,"author":{"gitId":"yanli1215"},"content":"            System.out.println(\"____________________________________________________________\");"},{"lineNumber":22,"author":{"gitId":"yanli1215"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":23,"author":{"gitId":"yanli1215"},"content":"            System.out.println(\"[\" + tasks[taskIndexShow-1].getStatusIcon() + \"] \" + tasks[taskIndexShow-1].getContent());"},{"lineNumber":24,"author":{"gitId":"yanli1215"},"content":"            System.out.println(\"____________________________________________________________\");"},{"lineNumber":25,"author":{"gitId":"yanli1215"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"yanli1215"},"content":"            System.out.println(\"____________________________________________________________\");"},{"lineNumber":27,"author":{"gitId":"yanli1215"},"content":"            System.out.println(\"No such task found! Please try again\");"},{"lineNumber":28,"author":{"gitId":"yanli1215"},"content":"            System.out.println(\"____________________________________________________________\");"},{"lineNumber":29,"author":{"gitId":"yanli1215"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":32,"author":{"gitId":"yanli1215"},"content":"    public void listAllTasks() {"},{"lineNumber":33,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":34,"author":{"gitId":"yanli1215"},"content":"        for(int i\u003d0; i\u003c this.numOfTasks; i++) {"},{"lineNumber":35,"author":{"gitId":"yanli1215"},"content":"            System.out.println(i+1 + \". [\" + tasks[i].getStatusIcon() + \"]\" + tasks[i].getContent());"},{"lineNumber":36,"author":{"gitId":"yanli1215"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":38,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"yanli1215"},"content":"}"}],"authorContributionMap":{"yanli1215":39}}]
