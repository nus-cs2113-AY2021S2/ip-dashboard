[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"yanli1215"},"content":"    mainClassName \u003d \"duke.Duke\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yanli1215":1,"-":45}},{"path":"src/main/java/duke/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanli1215"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":3,"author":{"gitId":"yanli1215"},"content":"public enum CommandType {"},{"lineNumber":4,"author":{"gitId":"yanli1215"},"content":"    TODO, DEADLINE, EVENT,"},{"lineNumber":5,"author":{"gitId":"yanli1215"},"content":"    DONE, DELETE,"},{"lineNumber":6,"author":{"gitId":"yanli1215"},"content":"    LIST,"},{"lineNumber":7,"author":{"gitId":"yanli1215"},"content":"    EXIT,"},{"lineNumber":8,"author":{"gitId":"yanli1215"},"content":"    UNDEFINED"},{"lineNumber":9,"author":{"gitId":"yanli1215"},"content":"}"}],"authorContributionMap":{"yanli1215":9}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanli1215"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":3,"author":{"gitId":"yanli1215"},"content":"import duke.task.*;"},{"lineNumber":4,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":5,"author":{"gitId":"yanli1215"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"yanli1215"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"yanli1215"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"yanli1215"},"content":"import java.nio.file.Files;"},{"lineNumber":9,"author":{"gitId":"yanli1215"},"content":"import java.nio.file.Path;"},{"lineNumber":10,"author":{"gitId":"yanli1215"},"content":"import java.nio.file.Paths;"},{"lineNumber":11,"author":{"gitId":"yanli1215"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":15,"author":{"gitId":"yanli1215"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);"},{"lineNumber":16,"author":{"gitId":"yanli1215"},"content":"    private static final char INPUT_COMMENT_MARKER \u003d \u0027#\u0027;"},{"lineNumber":17,"author":{"gitId":"yanli1215"},"content":"    private static TaskManager tasks;"},{"lineNumber":18,"author":{"gitId":"yanli1215"},"content":"    private static String filePath;"},{"lineNumber":19,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":20,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":21,"author":{"gitId":"yanli1215"},"content":"    public static void initTaskManager() {"},{"lineNumber":22,"author":{"gitId":"yanli1215"},"content":"         tasks \u003d new TaskManager();"},{"lineNumber":23,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":25,"author":{"gitId":"yanli1215"},"content":"    public static void showHello() {"},{"lineNumber":26,"author":{"gitId":"yanli1215"},"content":"        String logo \u003d \" ____        _\\n\""},{"lineNumber":27,"author":{"gitId":"yanli1215"},"content":"                + \"|  _ \\\\ _   _| | _____\\n\""},{"lineNumber":28,"author":{"gitId":"yanli1215"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":29,"author":{"gitId":"yanli1215"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":30,"author":{"gitId":"yanli1215"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":31,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":32,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":33,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"Hello! I\u0027m duke.Duke, your truly daily helper\");"},{"lineNumber":34,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":35,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":36,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":37,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":39,"author":{"gitId":"yanli1215"},"content":"    public static void showBye() {"},{"lineNumber":40,"author":{"gitId":"yanli1215"},"content":"        showExecuteResult(\"Bye. Hope to see you again soon!\");"},{"lineNumber":41,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":43,"author":{"gitId":"yanli1215"},"content":"    public static void showExecuteResult(String result) {"},{"lineNumber":44,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":45,"author":{"gitId":"yanli1215"},"content":"        System.out.println(result);"},{"lineNumber":46,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":47,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":49,"author":{"gitId":"yanli1215"},"content":"    public static void showAddResult(Task t) {"},{"lineNumber":50,"author":{"gitId":"yanli1215"},"content":"        Duke.showExecuteResult(\"Got it. I\u0027ve added this task:\\n\" + t + \"\\nNow you have \" + (tasks.getNumOfTasks()) + \" tasks in the list.\");"},{"lineNumber":51,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":53,"author":{"gitId":"yanli1215"},"content":"    private static String getUserInput() {"},{"lineNumber":54,"author":{"gitId":"yanli1215"},"content":"        String inputLine \u003d SCANNER.nextLine();"},{"lineNumber":55,"author":{"gitId":"yanli1215"},"content":"        // silently consume all blank and comment lines"},{"lineNumber":56,"author":{"gitId":"yanli1215"},"content":"        while (inputLine.trim().isEmpty() || inputLine.trim().charAt(0) \u003d\u003d INPUT_COMMENT_MARKER) {"},{"lineNumber":57,"author":{"gitId":"yanli1215"},"content":"            inputLine \u003d SCANNER.nextLine();"},{"lineNumber":58,"author":{"gitId":"yanli1215"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"yanli1215"},"content":"        return inputLine;"},{"lineNumber":60,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":62,"author":{"gitId":"yanli1215"},"content":"    public static CommandType getCommandType(String userInputString) {"},{"lineNumber":63,"author":{"gitId":"yanli1215"},"content":"        CommandType commandType;"},{"lineNumber":64,"author":{"gitId":"yanli1215"},"content":"        if(userInputString.equalsIgnoreCase(\"LIST\")) {"},{"lineNumber":65,"author":{"gitId":"yanli1215"},"content":"            commandType \u003d CommandType.LIST;"},{"lineNumber":66,"author":{"gitId":"yanli1215"},"content":"        } else if (userInputString.toUpperCase().matches(\"^(DONE).*$\")) {"},{"lineNumber":67,"author":{"gitId":"yanli1215"},"content":"            commandType \u003d CommandType.DONE;"},{"lineNumber":68,"author":{"gitId":"yanli1215"},"content":"        } else if (userInputString.toUpperCase().matches(\"^(DELETE).*$\")) {"},{"lineNumber":69,"author":{"gitId":"yanli1215"},"content":"            commandType \u003d CommandType.DELETE;"},{"lineNumber":70,"author":{"gitId":"yanli1215"},"content":"        }else if (userInputString.toUpperCase().matches(\"^(TODO).*$\")) {"},{"lineNumber":71,"author":{"gitId":"yanli1215"},"content":"            commandType \u003d CommandType.TODO;"},{"lineNumber":72,"author":{"gitId":"yanli1215"},"content":"        } else if (userInputString.toUpperCase().matches(\"^(DEADLINE).*$\")) {"},{"lineNumber":73,"author":{"gitId":"yanli1215"},"content":"            commandType \u003d CommandType.DEADLINE;"},{"lineNumber":74,"author":{"gitId":"yanli1215"},"content":"        } else if (userInputString.toUpperCase().matches(\"^(EVENT).*$\")) {"},{"lineNumber":75,"author":{"gitId":"yanli1215"},"content":"            commandType \u003d CommandType.EVENT;"},{"lineNumber":76,"author":{"gitId":"yanli1215"},"content":"        } else if (userInputString.equalsIgnoreCase(\"BYE\")) {"},{"lineNumber":77,"author":{"gitId":"yanli1215"},"content":"            commandType \u003d CommandType.EXIT;"},{"lineNumber":78,"author":{"gitId":"yanli1215"},"content":"        } else {"},{"lineNumber":79,"author":{"gitId":"yanli1215"},"content":"            commandType \u003d CommandType.UNDEFINED;"},{"lineNumber":80,"author":{"gitId":"yanli1215"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"yanli1215"},"content":"        return commandType;"},{"lineNumber":82,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":84,"author":{"gitId":"yanli1215"},"content":"    public static void showMessageForInvalidCommandInput() {"},{"lineNumber":85,"author":{"gitId":"yanli1215"},"content":"        showExecuteResult(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(!\");"},{"lineNumber":86,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":88,"author":{"gitId":"yanli1215"},"content":"    public static void executeAddTodo(String userCommand) throws EmptyDescriptionException, IOException {"},{"lineNumber":89,"author":{"gitId":"yanli1215"},"content":"        String[] typeContent \u003d userCommand.split(\"[Tt][Oo][Dd][Oo]\",2);"},{"lineNumber":90,"author":{"gitId":"yanli1215"},"content":"        if (typeContent[1].equals(\"\")) {"},{"lineNumber":91,"author":{"gitId":"yanli1215"},"content":"            throw new EmptyDescriptionException(CommandType.TODO);"},{"lineNumber":92,"author":{"gitId":"yanli1215"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":94,"author":{"gitId":"yanli1215"},"content":"        Todo t \u003d tasks.addTodo(typeContent[1].trim());"},{"lineNumber":95,"author":{"gitId":"yanli1215"},"content":"        showAddResult(t);"},{"lineNumber":96,"author":{"gitId":"yanli1215"},"content":"        tasks.writeToTxt(filePath);"},{"lineNumber":97,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":99,"author":{"gitId":"yanli1215"},"content":"    public static void executeAddDeadline(String userCommand) throws EmptyDescriptionException, IOException {"},{"lineNumber":100,"author":{"gitId":"yanli1215"},"content":"        try {"},{"lineNumber":101,"author":{"gitId":"yanli1215"},"content":"            String[] typeContentBy \u003d userCommand.trim().split(\"[Dd][Ee][Aa][Dd][Ll][Ii][Nn][Ee]\", 2);"},{"lineNumber":102,"author":{"gitId":"yanli1215"},"content":"            String[] contentBy \u003d typeContentBy[1].trim().split(\"/[Bb][Yy]\", 2);"},{"lineNumber":103,"author":{"gitId":"yanli1215"},"content":"            if (contentBy[0].trim().equals(\"\") || contentBy[1].trim().equals(\"\")) {"},{"lineNumber":104,"author":{"gitId":"yanli1215"},"content":"                throw new EmptyDescriptionException(CommandType.DEADLINE);"},{"lineNumber":105,"author":{"gitId":"yanli1215"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"yanli1215"},"content":"            Deadline d \u003d tasks.addDeadline(contentBy[0].trim(), contentBy[1].trim());"},{"lineNumber":107,"author":{"gitId":"yanli1215"},"content":"            showAddResult(d);"},{"lineNumber":108,"author":{"gitId":"yanli1215"},"content":"            tasks.writeToTxt(filePath);"},{"lineNumber":109,"author":{"gitId":"yanli1215"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":110,"author":{"gitId":"yanli1215"},"content":"            showExecuteResult(\"OOPS!!! No /by founded in the command\");"},{"lineNumber":111,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":112,"author":{"gitId":"yanli1215"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":114,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":116,"author":{"gitId":"yanli1215"},"content":"    public static void executeAddEvent(String userCommand) throws EmptyDescriptionException, IOException {"},{"lineNumber":117,"author":{"gitId":"yanli1215"},"content":"        try {"},{"lineNumber":118,"author":{"gitId":"yanli1215"},"content":"            String[] typeContentAt\u003d userCommand.trim().split(\"[Ee][Vv][Ee][Nn][Tt]\", 2);"},{"lineNumber":119,"author":{"gitId":"yanli1215"},"content":"            String[] contentAt \u003d typeContentAt[1].trim().split(\"/[Aa][Tt]\", 2);"},{"lineNumber":120,"author":{"gitId":"yanli1215"},"content":"            if (contentAt[0].trim().equals(\"\") || contentAt[1].trim().equals(\"\")) {"},{"lineNumber":121,"author":{"gitId":"yanli1215"},"content":"                throw new EmptyDescriptionException(CommandType.EVENT);"},{"lineNumber":122,"author":{"gitId":"yanli1215"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"yanli1215"},"content":"            Event e \u003d tasks.addEvent(contentAt[0].trim(), contentAt[1].trim());"},{"lineNumber":124,"author":{"gitId":"yanli1215"},"content":"            showAddResult(e);"},{"lineNumber":125,"author":{"gitId":"yanli1215"},"content":"            tasks.writeToTxt(filePath);"},{"lineNumber":126,"author":{"gitId":"yanli1215"},"content":"        } catch (IndexOutOfBoundsException e){"},{"lineNumber":127,"author":{"gitId":"yanli1215"},"content":"            showExecuteResult(\"OOPS!!! No /at founded in the command\");"},{"lineNumber":128,"author":{"gitId":"yanli1215"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":130,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":132,"author":{"gitId":"yanli1215"},"content":"    public static void executeList(String userCommand) {"},{"lineNumber":133,"author":{"gitId":"yanli1215"},"content":"        tasks.listAllTasks();"},{"lineNumber":134,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":136,"author":{"gitId":"yanli1215"},"content":"    public static void executeDone(String userCommand) throws EmptyDescriptionException, IOException {"},{"lineNumber":137,"author":{"gitId":"yanli1215"},"content":"        try{"},{"lineNumber":138,"author":{"gitId":"yanli1215"},"content":"            String[] typeIndex \u003d userCommand.split(\"[Dd][Oo][Nn][Ee]\",2);"},{"lineNumber":139,"author":{"gitId":"yanli1215"},"content":"            int taskIndexShow \u003d Integer.parseInt(typeIndex[1].trim());"},{"lineNumber":140,"author":{"gitId":"yanli1215"},"content":"            if(taskIndexShow \u003c\u003d 0 || taskIndexShow \u003e tasks.getNumOfTasks()) {"},{"lineNumber":141,"author":{"gitId":"yanli1215"},"content":"                throw new EmptyDescriptionException(CommandType.DONE);"},{"lineNumber":142,"author":{"gitId":"yanli1215"},"content":"            }"},{"lineNumber":143,"author":{"gitId":"yanli1215"},"content":"            tasks.markTaskDone(taskIndexShow);"},{"lineNumber":144,"author":{"gitId":"yanli1215"},"content":"            tasks.writeToTxt(filePath);"},{"lineNumber":145,"author":{"gitId":"yanli1215"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":146,"author":{"gitId":"yanli1215"},"content":"            throw new EmptyDescriptionException(CommandType.DONE);"},{"lineNumber":147,"author":{"gitId":"yanli1215"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":150,"author":{"gitId":"yanli1215"},"content":"    public static void executeDELETE(String userCommand) throws EmptyDescriptionException, IOException {"},{"lineNumber":151,"author":{"gitId":"yanli1215"},"content":"        try{"},{"lineNumber":152,"author":{"gitId":"yanli1215"},"content":"            String[] typeIndex \u003d userCommand.split(\"[Dd][Ee][Ll][Ee][Tt][Ee]\",2);"},{"lineNumber":153,"author":{"gitId":"yanli1215"},"content":"            int taskIndexShow \u003d Integer.parseInt(typeIndex[1].trim());"},{"lineNumber":154,"author":{"gitId":"yanli1215"},"content":"            if(taskIndexShow \u003c\u003d 0 || taskIndexShow \u003e tasks.getNumOfTasks()) {"},{"lineNumber":155,"author":{"gitId":"yanli1215"},"content":"                throw new EmptyDescriptionException(CommandType.DELETE);"},{"lineNumber":156,"author":{"gitId":"yanli1215"},"content":"            }"},{"lineNumber":157,"author":{"gitId":"yanli1215"},"content":"            tasks.deleteTask(taskIndexShow);"},{"lineNumber":158,"author":{"gitId":"yanli1215"},"content":"            tasks.writeToTxt(filePath);"},{"lineNumber":159,"author":{"gitId":"yanli1215"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":160,"author":{"gitId":"yanli1215"},"content":"            throw new EmptyDescriptionException(CommandType.DELETE);"},{"lineNumber":161,"author":{"gitId":"yanli1215"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":164,"author":{"gitId":"yanli1215"},"content":"    private static void executeExitProgramRequest() {"},{"lineNumber":165,"author":{"gitId":"yanli1215"},"content":"        showBye();"},{"lineNumber":166,"author":{"gitId":"yanli1215"},"content":"        System.exit(0);"},{"lineNumber":167,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":169,"author":{"gitId":"yanli1215"},"content":"    public static void executeCommand(String userInputString) throws IOException {"},{"lineNumber":170,"author":{"gitId":"yanli1215"},"content":"        CommandType type \u003d getCommandType(userInputString);"},{"lineNumber":171,"author":{"gitId":"yanli1215"},"content":"        try {"},{"lineNumber":172,"author":{"gitId":"yanli1215"},"content":"            switch (type) {"},{"lineNumber":173,"author":{"gitId":"yanli1215"},"content":"            case TODO:"},{"lineNumber":174,"author":{"gitId":"yanli1215"},"content":"                executeAddTodo(userInputString);"},{"lineNumber":175,"author":{"gitId":"yanli1215"},"content":"                return;"},{"lineNumber":176,"author":{"gitId":"yanli1215"},"content":"            case DEADLINE:"},{"lineNumber":177,"author":{"gitId":"yanli1215"},"content":"                executeAddDeadline(userInputString);"},{"lineNumber":178,"author":{"gitId":"yanli1215"},"content":"                return;"},{"lineNumber":179,"author":{"gitId":"yanli1215"},"content":"            case EVENT:"},{"lineNumber":180,"author":{"gitId":"yanli1215"},"content":"                executeAddEvent(userInputString);"},{"lineNumber":181,"author":{"gitId":"yanli1215"},"content":"                return;"},{"lineNumber":182,"author":{"gitId":"yanli1215"},"content":"            case LIST:"},{"lineNumber":183,"author":{"gitId":"yanli1215"},"content":"                executeList(userInputString);"},{"lineNumber":184,"author":{"gitId":"yanli1215"},"content":"                return;"},{"lineNumber":185,"author":{"gitId":"yanli1215"},"content":"            case DONE:"},{"lineNumber":186,"author":{"gitId":"yanli1215"},"content":"                executeDone(userInputString);"},{"lineNumber":187,"author":{"gitId":"yanli1215"},"content":"                return;"},{"lineNumber":188,"author":{"gitId":"yanli1215"},"content":"            case DELETE:"},{"lineNumber":189,"author":{"gitId":"yanli1215"},"content":"                executeDELETE(userInputString);"},{"lineNumber":190,"author":{"gitId":"yanli1215"},"content":"                return;"},{"lineNumber":191,"author":{"gitId":"yanli1215"},"content":"            case EXIT:"},{"lineNumber":192,"author":{"gitId":"yanli1215"},"content":"                executeExitProgramRequest();"},{"lineNumber":193,"author":{"gitId":"yanli1215"},"content":"                return;"},{"lineNumber":194,"author":{"gitId":"yanli1215"},"content":"            default:"},{"lineNumber":195,"author":{"gitId":"yanli1215"},"content":"                showMessageForInvalidCommandInput();"},{"lineNumber":196,"author":{"gitId":"yanli1215"},"content":"                return;"},{"lineNumber":197,"author":{"gitId":"yanli1215"},"content":"            }"},{"lineNumber":198,"author":{"gitId":"yanli1215"},"content":"        } catch (EmptyDescriptionException e) {"},{"lineNumber":199,"author":{"gitId":"yanli1215"},"content":"            e.showMessage();"},{"lineNumber":200,"author":{"gitId":"yanli1215"},"content":"            return;"},{"lineNumber":201,"author":{"gitId":"yanli1215"},"content":"        }"},{"lineNumber":202,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":203,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":205,"author":{"gitId":"yanli1215"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":206,"author":{"gitId":"yanli1215"},"content":"        File f \u003d loadFile();"},{"lineNumber":207,"author":{"gitId":"yanli1215"},"content":"        initTaskManager();"},{"lineNumber":208,"author":{"gitId":"yanli1215"},"content":"        loadData(f);"},{"lineNumber":209,"author":{"gitId":"yanli1215"},"content":"        showHello();"},{"lineNumber":210,"author":{"gitId":"yanli1215"},"content":"        while (true) {"},{"lineNumber":211,"author":{"gitId":"yanli1215"},"content":"            String userCommand \u003d getUserInput();"},{"lineNumber":212,"author":{"gitId":"yanli1215"},"content":"            executeCommand(userCommand.trim());"},{"lineNumber":213,"author":{"gitId":"yanli1215"},"content":"        }"},{"lineNumber":214,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":215,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":216,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":218,"author":{"gitId":"yanli1215"},"content":"    private static void loadData(File f) throws FileNotFoundException {"},{"lineNumber":219,"author":{"gitId":"yanli1215"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":220,"author":{"gitId":"yanli1215"},"content":"        while (s.hasNext()){"},{"lineNumber":221,"author":{"gitId":"yanli1215"},"content":"            tasks.addFromTXT(s.nextLine());"},{"lineNumber":222,"author":{"gitId":"yanli1215"},"content":"        }"},{"lineNumber":223,"author":{"gitId":"yanli1215"},"content":"        s.close();"},{"lineNumber":224,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":225,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":226,"author":{"gitId":"yanli1215"},"content":"    private static File loadFile() {"},{"lineNumber":227,"author":{"gitId":"yanli1215"},"content":"        String localDir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":228,"author":{"gitId":"yanli1215"},"content":"        Path dirPath \u003d Paths.get(localDir, \"data\");"},{"lineNumber":229,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":230,"author":{"gitId":"yanli1215"},"content":"        if(!Files.exists(dirPath)) {"},{"lineNumber":231,"author":{"gitId":"yanli1215"},"content":"            try {"},{"lineNumber":232,"author":{"gitId":"yanli1215"},"content":"                Files.createDirectory(dirPath);"},{"lineNumber":233,"author":{"gitId":"yanli1215"},"content":"            } catch (IOException e) {"},{"lineNumber":234,"author":{"gitId":"yanli1215"},"content":"                System.err.println(\"Failed to create directory \u0027data\u0027!\" + e.getMessage());"},{"lineNumber":235,"author":{"gitId":"yanli1215"},"content":"            }"},{"lineNumber":236,"author":{"gitId":"yanli1215"},"content":"        }"},{"lineNumber":237,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":238,"author":{"gitId":"yanli1215"},"content":"        filePath \u003d localDir + File.separator + \"data\" + File.separator + \"duke.txt\";"},{"lineNumber":239,"author":{"gitId":"yanli1215"},"content":"        File f \u003d new File(filePath);"},{"lineNumber":240,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":241,"author":{"gitId":"yanli1215"},"content":"        if(!f.exists()) {"},{"lineNumber":242,"author":{"gitId":"yanli1215"},"content":"            try {"},{"lineNumber":243,"author":{"gitId":"yanli1215"},"content":"                f.createNewFile();"},{"lineNumber":244,"author":{"gitId":"yanli1215"},"content":"            } catch (IOException e) {"},{"lineNumber":245,"author":{"gitId":"yanli1215"},"content":"                e.printStackTrace();"},{"lineNumber":246,"author":{"gitId":"yanli1215"},"content":"            }"},{"lineNumber":247,"author":{"gitId":"yanli1215"},"content":"        }"},{"lineNumber":248,"author":{"gitId":"yanli1215"},"content":"        return f;"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yanli1215":247,"-":3}},{"path":"src/main/java/duke/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanli1215"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":3,"author":{"gitId":"yanli1215"},"content":"public class EmptyDescriptionException extends Exception{"},{"lineNumber":4,"author":{"gitId":"yanli1215"},"content":"    private CommandType commandType;"},{"lineNumber":5,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":6,"author":{"gitId":"yanli1215"},"content":"    public EmptyDescriptionException(CommandType commandType) {"},{"lineNumber":7,"author":{"gitId":"yanli1215"},"content":"        this.commandType \u003d commandType;"},{"lineNumber":8,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":10,"author":{"gitId":"yanli1215"},"content":"    public CommandType getCommandType() {"},{"lineNumber":11,"author":{"gitId":"yanli1215"},"content":"        return commandType;"},{"lineNumber":12,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":14,"author":{"gitId":"yanli1215"},"content":"    public void setCommandType(CommandType commandType) {"},{"lineNumber":15,"author":{"gitId":"yanli1215"},"content":"        this.commandType \u003d commandType;"},{"lineNumber":16,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":18,"author":{"gitId":"yanli1215"},"content":"    public void showMessage() {"},{"lineNumber":19,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":20,"author":{"gitId":"yanli1215"},"content":"        switch (commandType) {"},{"lineNumber":21,"author":{"gitId":"yanli1215"},"content":"        case DONE:"},{"lineNumber":22,"author":{"gitId":"yanli1215"},"content":"        case DELETE:"},{"lineNumber":23,"author":{"gitId":"yanli1215"},"content":"            System.out.println(\"OOPS!!! The task ID that you \" + this.commandType + \" is invalid.\");"},{"lineNumber":24,"author":{"gitId":"yanli1215"},"content":"            break;"},{"lineNumber":25,"author":{"gitId":"yanli1215"},"content":"        case TODO:"},{"lineNumber":26,"author":{"gitId":"yanli1215"},"content":"        case DEADLINE:"},{"lineNumber":27,"author":{"gitId":"yanli1215"},"content":"        case EVENT:"},{"lineNumber":28,"author":{"gitId":"yanli1215"},"content":"            System.out.println(\"OOPS!!! The description of a \" + this.commandType + \" cannot be empty.\");"},{"lineNumber":29,"author":{"gitId":"yanli1215"},"content":"            break;"},{"lineNumber":30,"author":{"gitId":"yanli1215"},"content":"        default:"},{"lineNumber":31,"author":{"gitId":"yanli1215"},"content":"            return;"},{"lineNumber":32,"author":{"gitId":"yanli1215"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":34,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":36,"author":{"gitId":"yanli1215"},"content":"}"}],"authorContributionMap":{"yanli1215":36}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanli1215"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":3,"author":{"gitId":"yanli1215"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":5,"author":{"gitId":"yanli1215"},"content":"    protected String by;"},{"lineNumber":6,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":7,"author":{"gitId":"yanli1215"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":8,"author":{"gitId":"yanli1215"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"yanli1215"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":12,"author":{"gitId":"yanli1215"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"yanli1215"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"yanli1215"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":15,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":17,"author":{"gitId":"yanli1215"},"content":"    public String strAddToTxt() { return \"D\" + super.strAddToTxt() + \" | \" + by; }"},{"lineNumber":18,"author":{"gitId":"yanli1215"},"content":"}"}],"authorContributionMap":{"yanli1215":18}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanli1215"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":3,"author":{"gitId":"yanli1215"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":5,"author":{"gitId":"yanli1215"},"content":"    protected String at;"},{"lineNumber":6,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":7,"author":{"gitId":"yanli1215"},"content":"    public Event(String content, String at) {"},{"lineNumber":8,"author":{"gitId":"yanli1215"},"content":"        super(content);"},{"lineNumber":9,"author":{"gitId":"yanli1215"},"content":"        this.at \u003d at;"},{"lineNumber":10,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":12,"author":{"gitId":"yanli1215"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"yanli1215"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"yanli1215"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":15,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":17,"author":{"gitId":"yanli1215"},"content":"    public String strAddToTxt() { return \"E\" + super.strAddToTxt() + \" | \" + at; }"},{"lineNumber":18,"author":{"gitId":"yanli1215"},"content":"}"}],"authorContributionMap":{"yanli1215":18}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanli1215"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":3,"author":{"gitId":"yanli1215"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"yanli1215"},"content":"    private String content;"},{"lineNumber":5,"author":{"gitId":"yanli1215"},"content":"    private boolean isDone;"},{"lineNumber":6,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":7,"author":{"gitId":"yanli1215"},"content":"    public Task(String content) {"},{"lineNumber":8,"author":{"gitId":"yanli1215"},"content":"        this.content \u003d content;"},{"lineNumber":9,"author":{"gitId":"yanli1215"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":12,"author":{"gitId":"yanli1215"},"content":"    public void setContent(String content) {"},{"lineNumber":13,"author":{"gitId":"yanli1215"},"content":"        this.content \u003d content;"},{"lineNumber":14,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":16,"author":{"gitId":"yanli1215"},"content":"    public void setDone(boolean done) {"},{"lineNumber":17,"author":{"gitId":"yanli1215"},"content":"        this.isDone \u003d done;"},{"lineNumber":18,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":20,"author":{"gitId":"yanli1215"},"content":"    public String getContent() {"},{"lineNumber":21,"author":{"gitId":"yanli1215"},"content":"        return content;"},{"lineNumber":22,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":24,"author":{"gitId":"yanli1215"},"content":"    public boolean isDone() {"},{"lineNumber":25,"author":{"gitId":"yanli1215"},"content":"        return isDone;"},{"lineNumber":26,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":28,"author":{"gitId":"yanli1215"},"content":"    public String getStatusIcon() {"},{"lineNumber":29,"author":{"gitId":"yanli1215"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":30,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"yanli1215"},"content":"    public String getStatusNum() {"},{"lineNumber":32,"author":{"gitId":"yanli1215"},"content":"        return (isDone ? \"1\" : \"0\");"},{"lineNumber":33,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":35,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":36,"author":{"gitId":"yanli1215"},"content":"    public String toString() {"},{"lineNumber":37,"author":{"gitId":"yanli1215"},"content":"        return \"[\" + getStatusIcon() + \"]\" + content;"},{"lineNumber":38,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":40,"author":{"gitId":"yanli1215"},"content":"    public String strAddToTxt() { return \" | \" + getStatusNum() + \" | \" + content; }"},{"lineNumber":41,"author":{"gitId":"yanli1215"},"content":"}"}],"authorContributionMap":{"yanli1215":41}},{"path":"src/main/java/duke/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanli1215"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":3,"author":{"gitId":"yanli1215"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"yanli1215"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"yanli1215"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"yanli1215"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":8,"author":{"gitId":"yanli1215"},"content":"public class TaskManager {"},{"lineNumber":9,"author":{"gitId":"yanli1215"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":11,"author":{"gitId":"yanli1215"},"content":"    public TaskManager() {"},{"lineNumber":12,"author":{"gitId":"yanli1215"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":15,"author":{"gitId":"yanli1215"},"content":"    public int getNumOfTasks() {"},{"lineNumber":16,"author":{"gitId":"yanli1215"},"content":"        return tasks.size();"},{"lineNumber":17,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":19,"author":{"gitId":"yanli1215"},"content":"    // add"},{"lineNumber":20,"author":{"gitId":"yanli1215"},"content":"    public Todo addTodo(String content) {"},{"lineNumber":21,"author":{"gitId":"yanli1215"},"content":"        Task taskAdded \u003d new Todo(content);"},{"lineNumber":22,"author":{"gitId":"yanli1215"},"content":"        tasks.add(taskAdded);"},{"lineNumber":23,"author":{"gitId":"yanli1215"},"content":"        return (Todo) taskAdded;"},{"lineNumber":24,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":26,"author":{"gitId":"yanli1215"},"content":"    public Deadline addDeadline(String content, String by) {"},{"lineNumber":27,"author":{"gitId":"yanli1215"},"content":"        Task taskAdded \u003d new Deadline(content, by);"},{"lineNumber":28,"author":{"gitId":"yanli1215"},"content":"        tasks.add(taskAdded);"},{"lineNumber":29,"author":{"gitId":"yanli1215"},"content":"        return (Deadline) taskAdded;"},{"lineNumber":30,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":32,"author":{"gitId":"yanli1215"},"content":"    public Event addEvent(String content, String at) {"},{"lineNumber":33,"author":{"gitId":"yanli1215"},"content":"        Task taskAdded \u003d new Event(content, at);"},{"lineNumber":34,"author":{"gitId":"yanli1215"},"content":"        tasks.add(taskAdded);"},{"lineNumber":35,"author":{"gitId":"yanli1215"},"content":"        return (Event) taskAdded;"},{"lineNumber":36,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"yanli1215"},"content":"    // done"},{"lineNumber":38,"author":{"gitId":"yanli1215"},"content":"    public void markTaskDone(int taskIndexShow) {"},{"lineNumber":39,"author":{"gitId":"yanli1215"},"content":"        tasks.get(taskIndexShow - 1).setDone(true);"},{"lineNumber":40,"author":{"gitId":"yanli1215"},"content":"        Duke.showExecuteResult(\"Nice! I\u0027ve marked this task as done:\\n\" + tasks.get(taskIndexShow - 1));"},{"lineNumber":41,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":43,"author":{"gitId":"yanli1215"},"content":"    // list"},{"lineNumber":44,"author":{"gitId":"yanli1215"},"content":"    public void listAllTasks() {"},{"lineNumber":45,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":46,"author":{"gitId":"yanli1215"},"content":"        for(int i\u003d0; i\u003c tasks.size() ; i++) {"},{"lineNumber":47,"author":{"gitId":"yanli1215"},"content":"            System.out.println(i+1 + \". \" + tasks.get(i));"},{"lineNumber":48,"author":{"gitId":"yanli1215"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"yanli1215"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":50,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":52,"author":{"gitId":"yanli1215"},"content":"    //delete"},{"lineNumber":53,"author":{"gitId":"yanli1215"},"content":"    public void deleteTask(int taskIndexShow){"},{"lineNumber":54,"author":{"gitId":"yanli1215"},"content":"        Task temp \u003d tasks.get(taskIndexShow - 1);"},{"lineNumber":55,"author":{"gitId":"yanli1215"},"content":"        tasks.remove(taskIndexShow - 1);"},{"lineNumber":56,"author":{"gitId":"yanli1215"},"content":"        Duke.showExecuteResult(\"Noted. I\u0027ve removed this task: \\n\" + temp + \"\\nNow you have \" + getNumOfTasks() + \" tasks in the list.\");"},{"lineNumber":57,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":59,"author":{"gitId":"yanli1215"},"content":"    public void addFromTXT(String line) {"},{"lineNumber":60,"author":{"gitId":"yanli1215"},"content":"        String[] tasksInTXT \u003d line.split(\"\\\\|\");"},{"lineNumber":61,"author":{"gitId":"yanli1215"},"content":"        String taskType \u003d tasksInTXT[0].trim();"},{"lineNumber":62,"author":{"gitId":"yanli1215"},"content":"        String taskDone \u003d tasksInTXT[1].trim();"},{"lineNumber":63,"author":{"gitId":"yanli1215"},"content":"        String taskDescription \u003d tasksInTXT[2].trim();"},{"lineNumber":64,"author":{"gitId":"yanli1215"},"content":"        switch (taskType) {"},{"lineNumber":65,"author":{"gitId":"yanli1215"},"content":"            case \"T\":"},{"lineNumber":66,"author":{"gitId":"yanli1215"},"content":"                Todo t \u003d addTodo(taskDescription);"},{"lineNumber":67,"author":{"gitId":"yanli1215"},"content":"                if(taskDone.equals(\"1\")) {"},{"lineNumber":68,"author":{"gitId":"yanli1215"},"content":"                    t.setDone(true);"},{"lineNumber":69,"author":{"gitId":"yanli1215"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"yanli1215"},"content":"                return;"},{"lineNumber":71,"author":{"gitId":"yanli1215"},"content":"            case \"D\":"},{"lineNumber":72,"author":{"gitId":"yanli1215"},"content":"                Deadline d \u003d addDeadline(taskDescription,tasksInTXT[3].trim());"},{"lineNumber":73,"author":{"gitId":"yanli1215"},"content":"                if(taskDone.equals(\"1\")) {"},{"lineNumber":74,"author":{"gitId":"yanli1215"},"content":"                    d.setDone(true);"},{"lineNumber":75,"author":{"gitId":"yanli1215"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"yanli1215"},"content":"                return;"},{"lineNumber":77,"author":{"gitId":"yanli1215"},"content":"            case \"E\":"},{"lineNumber":78,"author":{"gitId":"yanli1215"},"content":"                Event e \u003d addEvent(taskDescription,tasksInTXT[3].trim());"},{"lineNumber":79,"author":{"gitId":"yanli1215"},"content":"                if(taskDone.equals(\"1\")) {"},{"lineNumber":80,"author":{"gitId":"yanli1215"},"content":"                    e.setDone(true);"},{"lineNumber":81,"author":{"gitId":"yanli1215"},"content":"                }"},{"lineNumber":82,"author":{"gitId":"yanli1215"},"content":"                return;"},{"lineNumber":83,"author":{"gitId":"yanli1215"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":85,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":87,"author":{"gitId":"yanli1215"},"content":"    public void writeToTxt(String filePath) throws IOException {"},{"lineNumber":88,"author":{"gitId":"yanli1215"},"content":"        FileWriter fw \u003d new FileWriter(filePath, false);"},{"lineNumber":89,"author":{"gitId":"yanli1215"},"content":"        for(Task t : tasks) {"},{"lineNumber":90,"author":{"gitId":"yanli1215"},"content":"            fw.write(t.strAddToTxt());"},{"lineNumber":91,"author":{"gitId":"yanli1215"},"content":"            fw.write(\"\\n\");"},{"lineNumber":92,"author":{"gitId":"yanli1215"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"yanli1215"},"content":"        fw.close();"},{"lineNumber":94,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"yanli1215"},"content":"}"}],"authorContributionMap":{"yanli1215":95}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yanli1215"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":3,"author":{"gitId":"yanli1215"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":5,"author":{"gitId":"yanli1215"},"content":"public class Todo extends Task {"},{"lineNumber":6,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":7,"author":{"gitId":"yanli1215"},"content":"    public Todo(String content) {"},{"lineNumber":8,"author":{"gitId":"yanli1215"},"content":"        super(content);"},{"lineNumber":9,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":11,"author":{"gitId":"yanli1215"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"yanli1215"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"yanli1215"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":14,"author":{"gitId":"yanli1215"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yanli1215"},"content":""},{"lineNumber":16,"author":{"gitId":"yanli1215"},"content":"    public String strAddToTxt() { return \"T\" + super.strAddToTxt(); }"},{"lineNumber":17,"author":{"gitId":"yanli1215"},"content":"}"}],"authorContributionMap":{"yanli1215":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yanli1215"},"content":"todo task1"},{"lineNumber":2,"author":{"gitId":"yanli1215"},"content":"toDO   task2"},{"lineNumber":3,"author":{"gitId":"yanli1215"},"content":"EVENT PLAY /AT 3PM"},{"lineNumber":4,"author":{"gitId":"yanli1215"},"content":"event"},{"lineNumber":5,"author":{"gitId":"yanli1215"},"content":"event   /at 3pm"},{"lineNumber":6,"author":{"gitId":"yanli1215"},"content":"event   study   /at 4pm"},{"lineNumber":7,"author":{"gitId":"yanli1215"},"content":"deadline"},{"lineNumber":8,"author":{"gitId":"yanli1215"},"content":"deadline  /by"},{"lineNumber":9,"author":{"gitId":"yanli1215"},"content":"deadline  submit   /by 10am"},{"lineNumber":10,"author":{"gitId":"yanli1215"},"content":"list"},{"lineNumber":11,"author":{"gitId":"yanli1215"},"content":"done"},{"lineNumber":12,"author":{"gitId":"yanli1215"},"content":"done6"},{"lineNumber":13,"author":{"gitId":"yanli1215"},"content":"doNE 4"},{"lineNumber":14,"author":{"gitId":"yanli1215"},"content":"lIst"},{"lineNumber":15,"author":{"gitId":"yanli1215"},"content":"bye"}],"authorContributionMap":{"yanli1215":15}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"yanli1215"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"yanli1215":1,"-":37}}]
