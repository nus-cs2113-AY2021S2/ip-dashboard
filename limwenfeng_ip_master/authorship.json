[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limwenfeng"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"limwenfeng"},"content":"import Duke.TodoException;"},{"lineNumber":3,"author":{"gitId":"limwenfeng"},"content":"import Duke.InvalidCommandException;"},{"lineNumber":4,"author":{"gitId":"limwenfeng"},"content":"import Duke.Task;"},{"lineNumber":5,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"limwenfeng"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":8,"author":{"gitId":"limwenfeng"},"content":"    private static final Task[] tasksList \u003d new Task[100];"},{"lineNumber":9,"author":{"gitId":"limwenfeng"},"content":"    private static int tasksCount \u003d 0;"},{"lineNumber":10,"author":{"gitId":"limwenfeng"},"content":"    public static final String LOGO \u003d \" ____        _        \\n\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"limwenfeng"},"content":"        sendWelcomeMessage();"},{"lineNumber":17,"author":{"gitId":"limwenfeng"},"content":"        printLine();"},{"lineNumber":18,"author":{"gitId":"limwenfeng"},"content":"        while(true) {"},{"lineNumber":19,"author":{"gitId":"limwenfeng"},"content":"            String[] listOfUserInputs \u003d getUserInput();"},{"lineNumber":20,"author":{"gitId":"limwenfeng"},"content":"            String userCommand \u003d listOfUserInputs[0];"},{"lineNumber":21,"author":{"gitId":"limwenfeng"},"content":"            String inputDetails \u003d listOfUserInputs[1];"},{"lineNumber":22,"author":{"gitId":"limwenfeng"},"content":"            if (userCommand.equalsIgnoreCase(\"bye\")){"},{"lineNumber":23,"author":{"gitId":"limwenfeng"},"content":"                exitDuke();"},{"lineNumber":24,"author":{"gitId":"limwenfeng"},"content":"                break;"},{"lineNumber":25,"author":{"gitId":"limwenfeng"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"limwenfeng"},"content":"            if (userCommand.equalsIgnoreCase(\"list\")){"},{"lineNumber":27,"author":{"gitId":"limwenfeng"},"content":"                listOutTasks();"},{"lineNumber":28,"author":{"gitId":"limwenfeng"},"content":"            } else if (userCommand.equalsIgnoreCase(\"done\" )) {"},{"lineNumber":29,"author":{"gitId":"limwenfeng"},"content":"                markTaskAsDone(inputDetails);"},{"lineNumber":30,"author":{"gitId":"limwenfeng"},"content":"            } else  {"},{"lineNumber":31,"author":{"gitId":"limwenfeng"},"content":"                if (!isValidCommand(userCommand)) {"},{"lineNumber":32,"author":{"gitId":"limwenfeng"},"content":"                    continue;"},{"lineNumber":33,"author":{"gitId":"limwenfeng"},"content":"                }"},{"lineNumber":34,"author":{"gitId":"limwenfeng"},"content":"                //process Todo, event or deadline"},{"lineNumber":35,"author":{"gitId":"limwenfeng"},"content":"                processCommandWithException(userCommand, inputDetails);"},{"lineNumber":36,"author":{"gitId":"limwenfeng"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"limwenfeng"},"content":"            printLine();"},{"lineNumber":38,"author":{"gitId":"limwenfeng"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":41,"author":{"gitId":"limwenfeng"},"content":"    private static void processCommandWithException(String userCommand, String inputDetails) {"},{"lineNumber":42,"author":{"gitId":"limwenfeng"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"limwenfeng"},"content":"            processUserRequest(userCommand, inputDetails);"},{"lineNumber":44,"author":{"gitId":"limwenfeng"},"content":"        } catch (TodoException e) {"},{"lineNumber":45,"author":{"gitId":"limwenfeng"},"content":"            printLine();"},{"lineNumber":46,"author":{"gitId":"limwenfeng"},"content":"            System.out.println(e.sendErrorMessage());"},{"lineNumber":47,"author":{"gitId":"limwenfeng"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":50,"author":{"gitId":"limwenfeng"},"content":"    private static boolean isValidCommand(String userCommand) {"},{"lineNumber":51,"author":{"gitId":"limwenfeng"},"content":"        boolean isValid \u003d true;"},{"lineNumber":52,"author":{"gitId":"limwenfeng"},"content":"        try {"},{"lineNumber":53,"author":{"gitId":"limwenfeng"},"content":"            isValidInput(userCommand);"},{"lineNumber":54,"author":{"gitId":"limwenfeng"},"content":"        } catch (InvalidCommandException e) {"},{"lineNumber":55,"author":{"gitId":"limwenfeng"},"content":"            printLine();"},{"lineNumber":56,"author":{"gitId":"limwenfeng"},"content":"            System.out.println(e.sendErrorMessage());"},{"lineNumber":57,"author":{"gitId":"limwenfeng"},"content":"            printLine();"},{"lineNumber":58,"author":{"gitId":"limwenfeng"},"content":"            isValid \u003d false;"},{"lineNumber":59,"author":{"gitId":"limwenfeng"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"limwenfeng"},"content":"        return isValid;"},{"lineNumber":61,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":63,"author":{"gitId":"limwenfeng"},"content":"    private static void isValidInput(String userCommand) throws InvalidCommandException {"},{"lineNumber":64,"author":{"gitId":"limwenfeng"},"content":"        var isValid \u003d userCommand.equalsIgnoreCase(\"todo\") | userCommand.equalsIgnoreCase(\"deadline\") | userCommand.equalsIgnoreCase(\"event\");"},{"lineNumber":65,"author":{"gitId":"limwenfeng"},"content":"        if (!isValid) {"},{"lineNumber":66,"author":{"gitId":"limwenfeng"},"content":"            throw new InvalidCommandException();"},{"lineNumber":67,"author":{"gitId":"limwenfeng"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":70,"author":{"gitId":"limwenfeng"},"content":"    private static void sendWelcomeMessage() {"},{"lineNumber":71,"author":{"gitId":"limwenfeng"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);"},{"lineNumber":72,"author":{"gitId":"limwenfeng"},"content":"        printLine();"},{"lineNumber":73,"author":{"gitId":"limwenfeng"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":74,"author":{"gitId":"limwenfeng"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":75,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":77,"author":{"gitId":"limwenfeng"},"content":"    private static void processUserRequest(String userCommand, String inputDetails) throws TodoException {"},{"lineNumber":78,"author":{"gitId":"limwenfeng"},"content":"        if (inputDetails.equalsIgnoreCase(\"filler\") \u0026 userCommand.equalsIgnoreCase(\"todo\")) {"},{"lineNumber":79,"author":{"gitId":"limwenfeng"},"content":"            throw new TodoException();"},{"lineNumber":80,"author":{"gitId":"limwenfeng"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"limwenfeng"},"content":"        printLine();"},{"lineNumber":82,"author":{"gitId":"limwenfeng"},"content":"        printLine();"},{"lineNumber":83,"author":{"gitId":"limwenfeng"},"content":"        tasksList[tasksCount] \u003d new Task(inputDetails, userCommand);"},{"lineNumber":84,"author":{"gitId":"limwenfeng"},"content":"        Task selectedTask \u003d tasksList[tasksCount];"},{"lineNumber":85,"author":{"gitId":"limwenfeng"},"content":"        tasksCount++;"},{"lineNumber":86,"author":{"gitId":"limwenfeng"},"content":"        notifyUser(selectedTask);"},{"lineNumber":87,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":89,"author":{"gitId":"limwenfeng"},"content":"    private static void notifyUser(Task selectedTask) {"},{"lineNumber":90,"author":{"gitId":"limwenfeng"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":91,"author":{"gitId":"limwenfeng"},"content":"        System.out.println(\"  \" + selectedTask.getTaskType() + selectedTask.getStatusIcon() + \" \" + selectedTask.getDescription());"},{"lineNumber":92,"author":{"gitId":"limwenfeng"},"content":"        System.out.println(\"Now you have \" + tasksCount + \" tasks in the list.\");"},{"lineNumber":93,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":95,"author":{"gitId":"limwenfeng"},"content":"    private static void markTaskAsDone(String s) {"},{"lineNumber":96,"author":{"gitId":"limwenfeng"},"content":"        int taskNumber \u003d Integer.parseInt(s);"},{"lineNumber":97,"author":{"gitId":"limwenfeng"},"content":"        taskNumber--;"},{"lineNumber":98,"author":{"gitId":"limwenfeng"},"content":"        Task selectedTask \u003d tasksList[taskNumber];"},{"lineNumber":99,"author":{"gitId":"limwenfeng"},"content":"        selectedTask.markAsDone();"},{"lineNumber":100,"author":{"gitId":"limwenfeng"},"content":"        System.out.println(\"Nice! Following task is now marked as done:\");"},{"lineNumber":101,"author":{"gitId":"limwenfeng"},"content":"        System.out.println(\"[X] \" + selectedTask.getDescription());"},{"lineNumber":102,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":104,"author":{"gitId":"limwenfeng"},"content":"    private static void exitDuke() {"},{"lineNumber":105,"author":{"gitId":"limwenfeng"},"content":"        printLine();"},{"lineNumber":106,"author":{"gitId":"limwenfeng"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":107,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":109,"author":{"gitId":"limwenfeng"},"content":"    private static void printLine() {"},{"lineNumber":110,"author":{"gitId":"limwenfeng"},"content":"        System.out.println(\"---------------------------------------------------\");"},{"lineNumber":111,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":113,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":114,"author":{"gitId":"limwenfeng"},"content":"    private static String[] getUserInput() {"},{"lineNumber":115,"author":{"gitId":"limwenfeng"},"content":"        String userInput \u003d scanner.nextLine();"},{"lineNumber":116,"author":{"gitId":"limwenfeng"},"content":"        String[] listOfInputs \u003d userInput.split(\" \", 2);"},{"lineNumber":117,"author":{"gitId":"limwenfeng"},"content":"        if (listOfInputs.length \u003d\u003d 1) {"},{"lineNumber":118,"author":{"gitId":"limwenfeng"},"content":"            listOfInputs \u003d new String[]{userInput, \"filler\"};"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"limwenfeng"},"content":"        return listOfInputs;"},{"lineNumber":121,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":123,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":124,"author":{"gitId":"limwenfeng"},"content":"    private static void listOutTasks() {"},{"lineNumber":125,"author":{"gitId":"limwenfeng"},"content":"        printLine();"},{"lineNumber":126,"author":{"gitId":"limwenfeng"},"content":"        int i \u003d 0;"},{"lineNumber":127,"author":{"gitId":"limwenfeng"},"content":"        while (i \u003c tasksCount) {"},{"lineNumber":128,"author":{"gitId":"limwenfeng"},"content":"            Task selectedTask \u003d tasksList[i];"},{"lineNumber":129,"author":{"gitId":"limwenfeng"},"content":"            i++;"},{"lineNumber":130,"author":{"gitId":"limwenfeng"},"content":"            System.out.println(i + \". \" + selectedTask.getTaskType() + selectedTask.getStatusIcon() + \" \" + selectedTask.getDescription());"},{"lineNumber":131,"author":{"gitId":"limwenfeng"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"limwenfeng":124,"-":9}},{"path":"src/main/java/Duke/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limwenfeng"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":3,"author":{"gitId":"limwenfeng"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":4,"author":{"gitId":"limwenfeng"},"content":"    private String errorMessage;"},{"lineNumber":5,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":6,"author":{"gitId":"limwenfeng"},"content":"    public InvalidCommandException() {"},{"lineNumber":7,"author":{"gitId":"limwenfeng"},"content":"        this.errorMessage \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"},{"lineNumber":8,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":10,"author":{"gitId":"limwenfeng"},"content":"    public String sendErrorMessage() {"},{"lineNumber":11,"author":{"gitId":"limwenfeng"},"content":"        return this.errorMessage;"},{"lineNumber":12,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"limwenfeng"},"content":"}"}],"authorContributionMap":{"limwenfeng":13}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limwenfeng"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":3,"author":{"gitId":"limwenfeng"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"limwenfeng"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"limwenfeng"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"limwenfeng"},"content":"    protected String taskType;"},{"lineNumber":7,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":8,"author":{"gitId":"limwenfeng"},"content":"    public Task(String description, String taskType) {"},{"lineNumber":9,"author":{"gitId":"limwenfeng"},"content":"        if (taskType.equalsIgnoreCase(\"event\")) {"},{"lineNumber":10,"author":{"gitId":"limwenfeng"},"content":"            String[] listOfInputs \u003d description.split(\"/at\",2);"},{"lineNumber":11,"author":{"gitId":"limwenfeng"},"content":"            description \u003d listOfInputs[0] + \" (at:\" + listOfInputs[1] + \")\";"},{"lineNumber":12,"author":{"gitId":"limwenfeng"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"limwenfeng"},"content":"        if (taskType.equalsIgnoreCase(\"deadline\")) {"},{"lineNumber":14,"author":{"gitId":"limwenfeng"},"content":"            String[] listOfInputs \u003d description.split(\"/by\",2);"},{"lineNumber":15,"author":{"gitId":"limwenfeng"},"content":"            description \u003d listOfInputs[0] + \" (by:\" + listOfInputs[1] + \")\";"},{"lineNumber":16,"author":{"gitId":"limwenfeng"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"limwenfeng"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"limwenfeng"},"content":"        this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"limwenfeng"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":20,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":22,"author":{"gitId":"limwenfeng"},"content":"    public String getStatusIcon() {"},{"lineNumber":23,"author":{"gitId":"limwenfeng"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");"},{"lineNumber":24,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":26,"author":{"gitId":"limwenfeng"},"content":"    public void markAsDone() {"},{"lineNumber":27,"author":{"gitId":"limwenfeng"},"content":"        this.isDone \u003d true;"},{"lineNumber":28,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":30,"author":{"gitId":"limwenfeng"},"content":"    public String getTaskType() {"},{"lineNumber":31,"author":{"gitId":"limwenfeng"},"content":"        if (this.taskType.equalsIgnoreCase(\"todo\")) {"},{"lineNumber":32,"author":{"gitId":"limwenfeng"},"content":"            return \"[T]\";"},{"lineNumber":33,"author":{"gitId":"limwenfeng"},"content":"        } else if (this.taskType.equalsIgnoreCase(\"deadline\")) {"},{"lineNumber":34,"author":{"gitId":"limwenfeng"},"content":"            return \"[D]\";"},{"lineNumber":35,"author":{"gitId":"limwenfeng"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"limwenfeng"},"content":"            return \"[E]\";"},{"lineNumber":37,"author":{"gitId":"limwenfeng"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":40,"author":{"gitId":"limwenfeng"},"content":"    public String getDescription() {"},{"lineNumber":41,"author":{"gitId":"limwenfeng"},"content":"        return this.description;"},{"lineNumber":42,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"limwenfeng"},"content":"}"}],"authorContributionMap":{"limwenfeng":43}},{"path":"src/main/java/Duke/TodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limwenfeng"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":3,"author":{"gitId":"limwenfeng"},"content":"public class TodoException extends Exception {"},{"lineNumber":4,"author":{"gitId":"limwenfeng"},"content":"    private String errorMessage;"},{"lineNumber":5,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":6,"author":{"gitId":"limwenfeng"},"content":"    public TodoException() {"},{"lineNumber":7,"author":{"gitId":"limwenfeng"},"content":"        this.errorMessage \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";"},{"lineNumber":8,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":10,"author":{"gitId":"limwenfeng"},"content":"    public String sendErrorMessage() {"},{"lineNumber":11,"author":{"gitId":"limwenfeng"},"content":"        return this.errorMessage;"},{"lineNumber":12,"author":{"gitId":"limwenfeng"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":14,"author":{"gitId":"limwenfeng"},"content":"}"},{"lineNumber":15,"author":{"gitId":"limwenfeng"},"content":""},{"lineNumber":16,"author":{"gitId":"limwenfeng"},"content":""}],"authorContributionMap":{"limwenfeng":16}}]
