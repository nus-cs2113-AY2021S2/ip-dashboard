[{"path":"Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"oscarlai1998"},"content":"[ ] event football /at friday 2pm"},{"lineNumber":2,"author":{"gitId":"oscarlai1998"},"content":"[✓] todo eat"},{"lineNumber":3,"author":{"gitId":"oscarlai1998"},"content":"[ ] deadline cs2101 project /by fri"}],"authorContributionMap":{"oscarlai1998":3}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"oscarlai1998"},"content":"# Oscar Lai Duke Project - Alfred"},{"lineNumber":7,"author":{"gitId":"oscarlai1998"},"content":"Latest Update: 14 Feb 2021"}],"authorContributionMap":{"oscarlai1998":2,"-":5}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oscarlai1998"},"content":"import error.DoneCheckedException;"},{"lineNumber":2,"author":{"gitId":"oscarlai1998"},"content":"import error.ListEmptyException;"},{"lineNumber":3,"author":{"gitId":"oscarlai1998"},"content":"import error.WrongFormatException;"},{"lineNumber":4,"author":{"gitId":"oscarlai1998"},"content":"import task.Deadline;"},{"lineNumber":5,"author":{"gitId":"oscarlai1998"},"content":"import task.Event;"},{"lineNumber":6,"author":{"gitId":"oscarlai1998"},"content":"import task.Task;"},{"lineNumber":7,"author":{"gitId":"oscarlai1998"},"content":"import task.Todo;"},{"lineNumber":8,"author":{"gitId":"oscarlai1998"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"oscarlai1998"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":10,"author":{"gitId":"oscarlai1998"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"oscarlai1998"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"oscarlai1998"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"oscarlai1998"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":16,"author":{"gitId":"oscarlai1998"},"content":"    public static final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"oscarlai1998"},"content":"    private static int listCounter \u003d 0;"},{"lineNumber":18,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":19,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"oscarlai1998"},"content":"     * Loop through all possible commands"},{"lineNumber":21,"author":{"gitId":"oscarlai1998"},"content":"     * Possible Commands:"},{"lineNumber":22,"author":{"gitId":"oscarlai1998"},"content":"     * Todo, event, Deadline, help, list, done, bye"},{"lineNumber":23,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"oscarlai1998"},"content":"    private static void loop() {"},{"lineNumber":25,"author":{"gitId":"oscarlai1998"},"content":"        Scanner line \u003d new Scanner(System.in);"},{"lineNumber":26,"author":{"gitId":"oscarlai1998"},"content":"        while (line.hasNextLine()) {"},{"lineNumber":27,"author":{"gitId":"oscarlai1998"},"content":"            String input \u003d line.nextLine();"},{"lineNumber":28,"author":{"gitId":"oscarlai1998"},"content":"            try{"},{"lineNumber":29,"author":{"gitId":"oscarlai1998"},"content":"                if (listCounter\u003e\u003d100) {"},{"lineNumber":30,"author":{"gitId":"oscarlai1998"},"content":"                    throw new IndexOutOfBoundsException();"},{"lineNumber":31,"author":{"gitId":"oscarlai1998"},"content":"                }"},{"lineNumber":32,"author":{"gitId":"oscarlai1998"},"content":"                if (input.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":33,"author":{"gitId":"oscarlai1998"},"content":"                    saveFile();"},{"lineNumber":34,"author":{"gitId":"oscarlai1998"},"content":"                    PrintOutput.printExit();"},{"lineNumber":35,"author":{"gitId":"oscarlai1998"},"content":"                    System.exit(1);"},{"lineNumber":36,"author":{"gitId":"oscarlai1998"},"content":"                } else if (input.equalsIgnoreCase(\"help\")) {"},{"lineNumber":37,"author":{"gitId":"oscarlai1998"},"content":"                    System.out.println(PrintOutput.HELP_MESSAGE);"},{"lineNumber":38,"author":{"gitId":"oscarlai1998"},"content":"                } else if (input.toLowerCase().startsWith(\"done\")) {"},{"lineNumber":39,"author":{"gitId":"oscarlai1998"},"content":"                    doneTask(input);"},{"lineNumber":40,"author":{"gitId":"oscarlai1998"},"content":"                } else if (input.equalsIgnoreCase(\"list\")) {"},{"lineNumber":41,"author":{"gitId":"oscarlai1998"},"content":"                    printList();"},{"lineNumber":42,"author":{"gitId":"oscarlai1998"},"content":"                } else if (input.toLowerCase().startsWith(\"todo\")) {"},{"lineNumber":43,"author":{"gitId":"oscarlai1998"},"content":"                    addTodo(input);"},{"lineNumber":44,"author":{"gitId":"oscarlai1998"},"content":"                } else if (input.toLowerCase().startsWith(\"deadline\")) {"},{"lineNumber":45,"author":{"gitId":"oscarlai1998"},"content":"                    addDeadline(input);"},{"lineNumber":46,"author":{"gitId":"oscarlai1998"},"content":"                } else if (input.toLowerCase().startsWith(\"event\")) {"},{"lineNumber":47,"author":{"gitId":"oscarlai1998"},"content":"                    addEvent(input);"},{"lineNumber":48,"author":{"gitId":"oscarlai1998"},"content":"                } else if (input.toLowerCase().startsWith(\"delete\")){"},{"lineNumber":49,"author":{"gitId":"oscarlai1998"},"content":"                    deleteTask(input);"},{"lineNumber":50,"author":{"gitId":"oscarlai1998"},"content":"                } else {"},{"lineNumber":51,"author":{"gitId":"oscarlai1998"},"content":"                    checkError(\"INVALID_COMMAND\");"},{"lineNumber":52,"author":{"gitId":"oscarlai1998"},"content":"                }"},{"lineNumber":53,"author":{"gitId":"oscarlai1998"},"content":"            } catch (IndexOutOfBoundsException | IOException e) {"},{"lineNumber":54,"author":{"gitId":"oscarlai1998"},"content":"                checkError(\"LIST_FULL\");"},{"lineNumber":55,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":59,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"oscarlai1998"},"content":"     * Main Function"},{"lineNumber":61,"author":{"gitId":"oscarlai1998"},"content":"     * Loads Duke.txt File to Start Program and loop through commands"},{"lineNumber":62,"author":{"gitId":"oscarlai1998"},"content":"     * Error if Duke.txt Not Found"},{"lineNumber":63,"author":{"gitId":"oscarlai1998"},"content":"     * @param args - argument"},{"lineNumber":64,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":66,"author":{"gitId":"oscarlai1998"},"content":"        PrintOutput.printGreeting();"},{"lineNumber":67,"author":{"gitId":"oscarlai1998"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"oscarlai1998"},"content":"            loadFile();"},{"lineNumber":69,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"Duke.txt successfully loaded!\");"},{"lineNumber":70,"author":{"gitId":"oscarlai1998"},"content":"            PrintOutput.printBorder();"},{"lineNumber":71,"author":{"gitId":"oscarlai1998"},"content":"            loop();"},{"lineNumber":72,"author":{"gitId":"oscarlai1998"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":73,"author":{"gitId":"oscarlai1998"},"content":"            checkError(\"FILE_NOT_FOUND\");"},{"lineNumber":74,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":76,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":78,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"oscarlai1998"},"content":"     * Add new task to Timetable"},{"lineNumber":80,"author":{"gitId":"oscarlai1998"},"content":"     * @param input - name of task"},{"lineNumber":81,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"oscarlai1998"},"content":"    private static void addTodo(String input) {"},{"lineNumber":83,"author":{"gitId":"oscarlai1998"},"content":"        try{"},{"lineNumber":84,"author":{"gitId":"oscarlai1998"},"content":"            if (input.equals(\"todo\")) {"},{"lineNumber":85,"author":{"gitId":"oscarlai1998"},"content":"                throw new WrongFormatException();"},{"lineNumber":86,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"oscarlai1998"},"content":"            String command \u003d input.substring(5);"},{"lineNumber":88,"author":{"gitId":"oscarlai1998"},"content":"            if (command.isBlank()) {"},{"lineNumber":89,"author":{"gitId":"oscarlai1998"},"content":"                throw new WrongFormatException();"},{"lineNumber":90,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"oscarlai1998"},"content":"            Todo t \u003d new Todo(command);"},{"lineNumber":92,"author":{"gitId":"oscarlai1998"},"content":"            list.add(t);"},{"lineNumber":93,"author":{"gitId":"oscarlai1998"},"content":"            listCounter ++;"},{"lineNumber":94,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"I have added [\" + t.getType() + \"][\""},{"lineNumber":95,"author":{"gitId":"oscarlai1998"},"content":"                    + t.getStatusIcon() + \"] \\\"\""},{"lineNumber":96,"author":{"gitId":"oscarlai1998"},"content":"                    + t.getName() + \"\\\" \" + \"to the List!\");"},{"lineNumber":97,"author":{"gitId":"oscarlai1998"},"content":"            printNoOfTask();"},{"lineNumber":98,"author":{"gitId":"oscarlai1998"},"content":"        } catch(WrongFormatException e) {"},{"lineNumber":99,"author":{"gitId":"oscarlai1998"},"content":"            checkError(\"INVALID_FORMAT\");"},{"lineNumber":100,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":103,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"oscarlai1998"},"content":"     * Add deadline to list"},{"lineNumber":105,"author":{"gitId":"oscarlai1998"},"content":"     * @param input - add Deadline"},{"lineNumber":106,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"oscarlai1998"},"content":"    private static void addDeadline(String input) {"},{"lineNumber":108,"author":{"gitId":"oscarlai1998"},"content":"        try{"},{"lineNumber":109,"author":{"gitId":"oscarlai1998"},"content":"            if (input.equals(\"deadline\")) {"},{"lineNumber":110,"author":{"gitId":"oscarlai1998"},"content":"                throw new WrongFormatException();"},{"lineNumber":111,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"oscarlai1998"},"content":"            String command \u003d input.substring(9);"},{"lineNumber":113,"author":{"gitId":"oscarlai1998"},"content":"            if (!command.contains(\" /by \")) {"},{"lineNumber":114,"author":{"gitId":"oscarlai1998"},"content":"                throw new WrongFormatException();"},{"lineNumber":115,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":116,"author":{"gitId":"oscarlai1998"},"content":"            String[] parts \u003d command.split(\" /by \");"},{"lineNumber":117,"author":{"gitId":"oscarlai1998"},"content":"            String description \u003d parts[0];"},{"lineNumber":118,"author":{"gitId":"oscarlai1998"},"content":"            String date \u003d parts[1];"},{"lineNumber":119,"author":{"gitId":"oscarlai1998"},"content":"            Deadline t \u003d new Deadline(description,date);"},{"lineNumber":120,"author":{"gitId":"oscarlai1998"},"content":"            list.add(t);"},{"lineNumber":121,"author":{"gitId":"oscarlai1998"},"content":"            listCounter ++;"},{"lineNumber":122,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"I have added [\" + t.getType() + \"][\""},{"lineNumber":123,"author":{"gitId":"oscarlai1998"},"content":"                    + t.getStatusIcon() + \"] \\\"\""},{"lineNumber":124,"author":{"gitId":"oscarlai1998"},"content":"                    + t.getName() + t.getDate() + \"\\\"\" + \" to the List!\");"},{"lineNumber":125,"author":{"gitId":"oscarlai1998"},"content":"            printNoOfTask();"},{"lineNumber":126,"author":{"gitId":"oscarlai1998"},"content":"        } catch (WrongFormatException e) {"},{"lineNumber":127,"author":{"gitId":"oscarlai1998"},"content":"            checkError(\"INVALID_FORMAT\");"},{"lineNumber":128,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":131,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":132,"author":{"gitId":"oscarlai1998"},"content":"     * Add event to list"},{"lineNumber":133,"author":{"gitId":"oscarlai1998"},"content":"     * @param input - add event"},{"lineNumber":134,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"oscarlai1998"},"content":"    private static void addEvent(String input){"},{"lineNumber":136,"author":{"gitId":"oscarlai1998"},"content":"        try {"},{"lineNumber":137,"author":{"gitId":"oscarlai1998"},"content":"            if (input.equals(\"event\")) {"},{"lineNumber":138,"author":{"gitId":"oscarlai1998"},"content":"                throw new WrongFormatException();"},{"lineNumber":139,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":140,"author":{"gitId":"oscarlai1998"},"content":"            String command \u003d input.substring(6);"},{"lineNumber":141,"author":{"gitId":"oscarlai1998"},"content":"            if (!command.contains(\" /at \")) {"},{"lineNumber":142,"author":{"gitId":"oscarlai1998"},"content":"                throw new WrongFormatException();"},{"lineNumber":143,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":144,"author":{"gitId":"oscarlai1998"},"content":"            String[] parts \u003d command.split(\" /at \");"},{"lineNumber":145,"author":{"gitId":"oscarlai1998"},"content":"            String description \u003d parts[0];"},{"lineNumber":146,"author":{"gitId":"oscarlai1998"},"content":"            String date \u003d parts[1];"},{"lineNumber":147,"author":{"gitId":"oscarlai1998"},"content":"            Event t \u003d new Event(description,date);"},{"lineNumber":148,"author":{"gitId":"oscarlai1998"},"content":"            list.add(t);"},{"lineNumber":149,"author":{"gitId":"oscarlai1998"},"content":"            listCounter ++;"},{"lineNumber":150,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"I have added [\" + t.getType() + \"][\""},{"lineNumber":151,"author":{"gitId":"oscarlai1998"},"content":"                    + t.getStatusIcon() + \"] \\\"\""},{"lineNumber":152,"author":{"gitId":"oscarlai1998"},"content":"                    + t.getName() + t.getDate() + \"\\\"\" + \" to the List!\");"},{"lineNumber":153,"author":{"gitId":"oscarlai1998"},"content":"            printNoOfTask();"},{"lineNumber":154,"author":{"gitId":"oscarlai1998"},"content":"        } catch (WrongFormatException e) {"},{"lineNumber":155,"author":{"gitId":"oscarlai1998"},"content":"            checkError(\"INVALID_FORMAT\");"},{"lineNumber":156,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":159,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":160,"author":{"gitId":"oscarlai1998"},"content":"     * Check if done command is valid"},{"lineNumber":161,"author":{"gitId":"oscarlai1998"},"content":"     * @param input - index of task"},{"lineNumber":162,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"oscarlai1998"},"content":"    private static void doneTask(String input) {"},{"lineNumber":164,"author":{"gitId":"oscarlai1998"},"content":"        try{"},{"lineNumber":165,"author":{"gitId":"oscarlai1998"},"content":"            if (input.equalsIgnoreCase(\"done\")) {"},{"lineNumber":166,"author":{"gitId":"oscarlai1998"},"content":"                throw new WrongFormatException();"},{"lineNumber":167,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":168,"author":{"gitId":"oscarlai1998"},"content":"            if (!input.substring(5).matches(\"[0-9]+\")) {"},{"lineNumber":169,"author":{"gitId":"oscarlai1998"},"content":"                throw new WrongFormatException();"},{"lineNumber":170,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":171,"author":{"gitId":"oscarlai1998"},"content":"            int index \u003d Integer.parseInt(input.substring(5));"},{"lineNumber":172,"author":{"gitId":"oscarlai1998"},"content":"            if (index \u003e listCounter) {"},{"lineNumber":173,"author":{"gitId":"oscarlai1998"},"content":"                throw new IndexOutOfBoundsException();"},{"lineNumber":174,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":175,"author":{"gitId":"oscarlai1998"},"content":"            checkTask(index - 1);"},{"lineNumber":176,"author":{"gitId":"oscarlai1998"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":177,"author":{"gitId":"oscarlai1998"},"content":"            checkError(\"INDEX_EXCEEDS_LIST\");"},{"lineNumber":178,"author":{"gitId":"oscarlai1998"},"content":"        } catch (WrongFormatException e) {"},{"lineNumber":179,"author":{"gitId":"oscarlai1998"},"content":"            checkError(\"WRONG_DONE_FORMAT\");"},{"lineNumber":180,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":183,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":184,"author":{"gitId":"oscarlai1998"},"content":"     * Delete task from the list"},{"lineNumber":185,"author":{"gitId":"oscarlai1998"},"content":"     * @param input - Command"},{"lineNumber":186,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":187,"author":{"gitId":"oscarlai1998"},"content":"    private static void deleteTask(String input){"},{"lineNumber":188,"author":{"gitId":"oscarlai1998"},"content":"        try {"},{"lineNumber":189,"author":{"gitId":"oscarlai1998"},"content":"            if (input.equalsIgnoreCase(\"delete\")) {"},{"lineNumber":190,"author":{"gitId":"oscarlai1998"},"content":"                throw new WrongFormatException();"},{"lineNumber":191,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":192,"author":{"gitId":"oscarlai1998"},"content":"            if (input.substring(7).matches(\"0\")) {"},{"lineNumber":193,"author":{"gitId":"oscarlai1998"},"content":"                throw new WrongFormatException();"},{"lineNumber":194,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":195,"author":{"gitId":"oscarlai1998"},"content":"            if (!input.substring(7).matches(\"[0-9]+\")) {"},{"lineNumber":196,"author":{"gitId":"oscarlai1998"},"content":"                throw new WrongFormatException();"},{"lineNumber":197,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":198,"author":{"gitId":"oscarlai1998"},"content":"            int index \u003d Integer.parseInt(input.substring(7)) - 1;"},{"lineNumber":199,"author":{"gitId":"oscarlai1998"},"content":"            if (index + 1 \u003e listCounter) {"},{"lineNumber":200,"author":{"gitId":"oscarlai1998"},"content":"                throw new IndexOutOfBoundsException();"},{"lineNumber":201,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":202,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":203,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"Noted! I will delete this at once!\");"},{"lineNumber":204,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"[\" + list.get(index).getType() + \"] [\""},{"lineNumber":205,"author":{"gitId":"oscarlai1998"},"content":"                    + list.get(index).getStatusIcon() + \"] \" + list.get(index).getName()"},{"lineNumber":206,"author":{"gitId":"oscarlai1998"},"content":"                    + list.get(index).getDate());"},{"lineNumber":207,"author":{"gitId":"oscarlai1998"},"content":"            list.remove(index);"},{"lineNumber":208,"author":{"gitId":"oscarlai1998"},"content":"            listCounter--;"},{"lineNumber":209,"author":{"gitId":"oscarlai1998"},"content":"            printNoOfTask();"},{"lineNumber":210,"author":{"gitId":"oscarlai1998"},"content":"        } catch (WrongFormatException e) {"},{"lineNumber":211,"author":{"gitId":"oscarlai1998"},"content":"            checkError(\"WRONG_DELETE_FORMAT\");"},{"lineNumber":212,"author":{"gitId":"oscarlai1998"},"content":"        } catch (IndexOutOfBoundsException e){"},{"lineNumber":213,"author":{"gitId":"oscarlai1998"},"content":"            checkError(\"DELETE_EMPTY_LIST\");"},{"lineNumber":214,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":217,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":218,"author":{"gitId":"oscarlai1998"},"content":"     * Check respective task as done"},{"lineNumber":219,"author":{"gitId":"oscarlai1998"},"content":"     * @param index - index of list"},{"lineNumber":220,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":221,"author":{"gitId":"oscarlai1998"},"content":"    private static void checkTask(int index){"},{"lineNumber":222,"author":{"gitId":"oscarlai1998"},"content":"        try{"},{"lineNumber":223,"author":{"gitId":"oscarlai1998"},"content":"            if (list.get(index).checkIsDone()) {"},{"lineNumber":224,"author":{"gitId":"oscarlai1998"},"content":"                throw new DoneCheckedException();"},{"lineNumber":225,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":226,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"Good Job, I will mark this as done!\");"},{"lineNumber":227,"author":{"gitId":"oscarlai1998"},"content":"            list.get(index).markAsDone();"},{"lineNumber":228,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"[\" + list.get(index).getType() + \"] [\""},{"lineNumber":229,"author":{"gitId":"oscarlai1998"},"content":"                    + list.get(index).getStatusIcon() + \"] \" + list.get(index).getName()"},{"lineNumber":230,"author":{"gitId":"oscarlai1998"},"content":"                    + list.get(index).getDate());"},{"lineNumber":231,"author":{"gitId":"oscarlai1998"},"content":"            PrintOutput.printBorder();"},{"lineNumber":232,"author":{"gitId":"oscarlai1998"},"content":"        } catch (DoneCheckedException e) {"},{"lineNumber":233,"author":{"gitId":"oscarlai1998"},"content":"            checkError(\"DONE_CHECKED_ERROR\");"},{"lineNumber":234,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":235,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":237,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":238,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":239,"author":{"gitId":"oscarlai1998"},"content":"     * Print the number of task in list"},{"lineNumber":240,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":241,"author":{"gitId":"oscarlai1998"},"content":"    private static void printNoOfTask() {"},{"lineNumber":242,"author":{"gitId":"oscarlai1998"},"content":"        System.out.print(\"You have \" + listCounter + \" task\");"},{"lineNumber":243,"author":{"gitId":"oscarlai1998"},"content":"        if (listCounter \u003e 1) {"},{"lineNumber":244,"author":{"gitId":"oscarlai1998"},"content":"            System.out.print(\"s\");"},{"lineNumber":245,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"oscarlai1998"},"content":"        System.out.print(\" in total!\\n\");"},{"lineNumber":247,"author":{"gitId":"oscarlai1998"},"content":"        PrintOutput.printBorder();"},{"lineNumber":248,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":249,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":250,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":251,"author":{"gitId":"oscarlai1998"},"content":"     * Print List"},{"lineNumber":252,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":253,"author":{"gitId":"oscarlai1998"},"content":"    private static void printList(){"},{"lineNumber":254,"author":{"gitId":"oscarlai1998"},"content":"        try {"},{"lineNumber":255,"author":{"gitId":"oscarlai1998"},"content":"            if (!(listCounter\u003e0)) {"},{"lineNumber":256,"author":{"gitId":"oscarlai1998"},"content":"                throw new ListEmptyException();"},{"lineNumber":257,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":258,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\" LIST\");"},{"lineNumber":259,"author":{"gitId":"oscarlai1998"},"content":"            for (int i \u003d 0; i \u003c listCounter; i++) {"},{"lineNumber":260,"author":{"gitId":"oscarlai1998"},"content":"                System.out.println(i + 1 +  \". [\" + list.get(i).getType() +  \"] \" + \"[\""},{"lineNumber":261,"author":{"gitId":"oscarlai1998"},"content":"                        + list.get(i).getStatusIcon() + \"] \" + list.get(i).getName()"},{"lineNumber":262,"author":{"gitId":"oscarlai1998"},"content":"                        + list.get(i).getDate());"},{"lineNumber":263,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":264,"author":{"gitId":"oscarlai1998"},"content":"            PrintOutput.printBorder();"},{"lineNumber":265,"author":{"gitId":"oscarlai1998"},"content":"        } catch (ListEmptyException e) {"},{"lineNumber":266,"author":{"gitId":"oscarlai1998"},"content":"            checkError(\"EMPTY_LIST\");"},{"lineNumber":267,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":268,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":269,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":270,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":271,"author":{"gitId":"oscarlai1998"},"content":"     * Method to load Duke.txt"},{"lineNumber":272,"author":{"gitId":"oscarlai1998"},"content":"     * Throws Exception if Duke.txt not Found"},{"lineNumber":273,"author":{"gitId":"oscarlai1998"},"content":"     * @throws FileNotFoundException - File Not Found Exception"},{"lineNumber":274,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":275,"author":{"gitId":"oscarlai1998"},"content":"    private static void loadFile() throws FileNotFoundException {"},{"lineNumber":276,"author":{"gitId":"oscarlai1998"},"content":"        File file \u003d new File(\"Duke.txt\");"},{"lineNumber":277,"author":{"gitId":"oscarlai1998"},"content":"        if (!file.exists()) {"},{"lineNumber":278,"author":{"gitId":"oscarlai1998"},"content":"            throw new FileNotFoundException();"},{"lineNumber":279,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":280,"author":{"gitId":"oscarlai1998"},"content":"        Scanner line \u003d new Scanner(file);"},{"lineNumber":281,"author":{"gitId":"oscarlai1998"},"content":"        while (line.hasNext()) {"},{"lineNumber":282,"author":{"gitId":"oscarlai1998"},"content":"            String input \u003d line.nextLine();"},{"lineNumber":283,"author":{"gitId":"oscarlai1998"},"content":"            if (input.toLowerCase().substring(4).startsWith(\"todo\")) {"},{"lineNumber":284,"author":{"gitId":"oscarlai1998"},"content":"                importTodo(input);"},{"lineNumber":285,"author":{"gitId":"oscarlai1998"},"content":"            } else if (input.toLowerCase().substring(4).startsWith(\"deadline\")) {"},{"lineNumber":286,"author":{"gitId":"oscarlai1998"},"content":"                importDeadline(input);"},{"lineNumber":287,"author":{"gitId":"oscarlai1998"},"content":"            } else if (input.toLowerCase().substring(4).startsWith(\"event\")) {"},{"lineNumber":288,"author":{"gitId":"oscarlai1998"},"content":"                importEvent(input);"},{"lineNumber":289,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":290,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":291,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":292,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":293,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":294,"author":{"gitId":"oscarlai1998"},"content":"     * Imports todo from Duke.txt to Program"},{"lineNumber":295,"author":{"gitId":"oscarlai1998"},"content":"     * @param input - Command"},{"lineNumber":296,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":297,"author":{"gitId":"oscarlai1998"},"content":"    private static void importTodo(String input) {"},{"lineNumber":298,"author":{"gitId":"oscarlai1998"},"content":"        try{"},{"lineNumber":299,"author":{"gitId":"oscarlai1998"},"content":"            if (input.substring(4).equals(\"todo\")) {"},{"lineNumber":300,"author":{"gitId":"oscarlai1998"},"content":"                throw new WrongFormatException();"},{"lineNumber":301,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":302,"author":{"gitId":"oscarlai1998"},"content":"            String command \u003d input.substring(9);"},{"lineNumber":303,"author":{"gitId":"oscarlai1998"},"content":"            if (command.isBlank()) {"},{"lineNumber":304,"author":{"gitId":"oscarlai1998"},"content":"                throw new WrongFormatException();"},{"lineNumber":305,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":306,"author":{"gitId":"oscarlai1998"},"content":"            Todo t \u003d new Todo(command);"},{"lineNumber":307,"author":{"gitId":"oscarlai1998"},"content":"            list.add(t);"},{"lineNumber":308,"author":{"gitId":"oscarlai1998"},"content":"            listCounter ++;"},{"lineNumber":309,"author":{"gitId":"oscarlai1998"},"content":"            if (input.charAt(1) \u003d\u003d \u0027\\u2713\u0027) {"},{"lineNumber":310,"author":{"gitId":"oscarlai1998"},"content":"                t.markAsDone();"},{"lineNumber":311,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":312,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"Imported \\\"Todo: \" + t.getName()"},{"lineNumber":313,"author":{"gitId":"oscarlai1998"},"content":"                    + \"\\\" from Duke.txt!\");"},{"lineNumber":314,"author":{"gitId":"oscarlai1998"},"content":"            PrintOutput.printBorder();"},{"lineNumber":315,"author":{"gitId":"oscarlai1998"},"content":"        } catch(WrongFormatException e) {"},{"lineNumber":316,"author":{"gitId":"oscarlai1998"},"content":"            checkError(\"INVALID_FORMAT\");"},{"lineNumber":317,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":318,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":319,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":320,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":321,"author":{"gitId":"oscarlai1998"},"content":"     * Imports Deadline from Duke.txt to Program"},{"lineNumber":322,"author":{"gitId":"oscarlai1998"},"content":"     * @param input - Command"},{"lineNumber":323,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":324,"author":{"gitId":"oscarlai1998"},"content":"    private static void importDeadline(String input) {"},{"lineNumber":325,"author":{"gitId":"oscarlai1998"},"content":"        try{"},{"lineNumber":326,"author":{"gitId":"oscarlai1998"},"content":"            if (input.substring(4).equals(\"deadline\")) {"},{"lineNumber":327,"author":{"gitId":"oscarlai1998"},"content":"                throw new WrongFormatException();"},{"lineNumber":328,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":329,"author":{"gitId":"oscarlai1998"},"content":"            String command \u003d input.substring(13);"},{"lineNumber":330,"author":{"gitId":"oscarlai1998"},"content":"            if (!command.contains(\" /by \")) {"},{"lineNumber":331,"author":{"gitId":"oscarlai1998"},"content":"                throw new WrongFormatException();"},{"lineNumber":332,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":333,"author":{"gitId":"oscarlai1998"},"content":"            String[] parts \u003d command.split(\" /by \");"},{"lineNumber":334,"author":{"gitId":"oscarlai1998"},"content":"            String description \u003d parts[0];"},{"lineNumber":335,"author":{"gitId":"oscarlai1998"},"content":"            String date \u003d parts[1];"},{"lineNumber":336,"author":{"gitId":"oscarlai1998"},"content":"            Deadline t \u003d new Deadline(description,date);"},{"lineNumber":337,"author":{"gitId":"oscarlai1998"},"content":"            list.add(t);"},{"lineNumber":338,"author":{"gitId":"oscarlai1998"},"content":"            listCounter ++;"},{"lineNumber":339,"author":{"gitId":"oscarlai1998"},"content":"            if (input.charAt(1) \u003d\u003d \u0027\\u2713\u0027) {"},{"lineNumber":340,"author":{"gitId":"oscarlai1998"},"content":"                t.markAsDone();"},{"lineNumber":341,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":342,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"Imported \\\"Deadline: \" + t.getName()"},{"lineNumber":343,"author":{"gitId":"oscarlai1998"},"content":"                    + \"\\\" from Duke.txt!\");"},{"lineNumber":344,"author":{"gitId":"oscarlai1998"},"content":"            PrintOutput.printBorder();"},{"lineNumber":345,"author":{"gitId":"oscarlai1998"},"content":"        } catch (WrongFormatException e) {"},{"lineNumber":346,"author":{"gitId":"oscarlai1998"},"content":"            checkError(\"INVALID_FORMAT\");"},{"lineNumber":347,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":348,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":349,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":350,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":351,"author":{"gitId":"oscarlai1998"},"content":"     * Imports Event from Duke.txt to Program"},{"lineNumber":352,"author":{"gitId":"oscarlai1998"},"content":"     * @param input - Command"},{"lineNumber":353,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":354,"author":{"gitId":"oscarlai1998"},"content":"    private static void importEvent(String input) {"},{"lineNumber":355,"author":{"gitId":"oscarlai1998"},"content":"        try {"},{"lineNumber":356,"author":{"gitId":"oscarlai1998"},"content":"            if (input.equals(\"event\")) {"},{"lineNumber":357,"author":{"gitId":"oscarlai1998"},"content":"                throw new WrongFormatException();"},{"lineNumber":358,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":359,"author":{"gitId":"oscarlai1998"},"content":"            String command \u003d input.substring(10);"},{"lineNumber":360,"author":{"gitId":"oscarlai1998"},"content":"            if (!command.contains(\" /at \")) {"},{"lineNumber":361,"author":{"gitId":"oscarlai1998"},"content":"                throw new WrongFormatException();"},{"lineNumber":362,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":363,"author":{"gitId":"oscarlai1998"},"content":"            String[] parts \u003d command.split(\" /at \");"},{"lineNumber":364,"author":{"gitId":"oscarlai1998"},"content":"            String description \u003d parts[0];"},{"lineNumber":365,"author":{"gitId":"oscarlai1998"},"content":"            String date \u003d parts[1];"},{"lineNumber":366,"author":{"gitId":"oscarlai1998"},"content":"            Event t \u003d new Event(description, date);"},{"lineNumber":367,"author":{"gitId":"oscarlai1998"},"content":"            list.add(t);"},{"lineNumber":368,"author":{"gitId":"oscarlai1998"},"content":"            listCounter++;"},{"lineNumber":369,"author":{"gitId":"oscarlai1998"},"content":"            if (input.charAt(1) \u003d\u003d \u0027\\u2713\u0027) {"},{"lineNumber":370,"author":{"gitId":"oscarlai1998"},"content":"                t.markAsDone();"},{"lineNumber":371,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":372,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"Imported \\\"Event: \" + t.getName()"},{"lineNumber":373,"author":{"gitId":"oscarlai1998"},"content":"                    + \"\\\" from Duke.txt!\");"},{"lineNumber":374,"author":{"gitId":"oscarlai1998"},"content":"            PrintOutput.printBorder();"},{"lineNumber":375,"author":{"gitId":"oscarlai1998"},"content":"        } catch (WrongFormatException e) {"},{"lineNumber":376,"author":{"gitId":"oscarlai1998"},"content":"            checkError(\"INVALID_FORMAT\");"},{"lineNumber":377,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":378,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":379,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":380,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":381,"author":{"gitId":"oscarlai1998"},"content":"     * Method to update Duke.txt"},{"lineNumber":382,"author":{"gitId":"oscarlai1998"},"content":"     * Throws Exception if Duke.txt not found"},{"lineNumber":383,"author":{"gitId":"oscarlai1998"},"content":"     * @throws IOException - IO Exception Error"},{"lineNumber":384,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":385,"author":{"gitId":"oscarlai1998"},"content":"    private static void saveFile() throws IOException {"},{"lineNumber":386,"author":{"gitId":"oscarlai1998"},"content":"        File file \u003d new File(\"Duke.txt\");"},{"lineNumber":387,"author":{"gitId":"oscarlai1998"},"content":"        if (!file.exists()){"},{"lineNumber":388,"author":{"gitId":"oscarlai1998"},"content":"            if(!file.createNewFile()) {"},{"lineNumber":389,"author":{"gitId":"oscarlai1998"},"content":"                throw new IOException();"},{"lineNumber":390,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":391,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":392,"author":{"gitId":"oscarlai1998"},"content":"        FileWriter fw \u003d new FileWriter(\"Duke.txt\");"},{"lineNumber":393,"author":{"gitId":"oscarlai1998"},"content":"        for(int i \u003d 0; i\u003c listCounter; i++) {"},{"lineNumber":394,"author":{"gitId":"oscarlai1998"},"content":"            fw.write(list.get(i).outputData());"},{"lineNumber":395,"author":{"gitId":"oscarlai1998"},"content":"            fw.write(\"\\n\");"},{"lineNumber":396,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":397,"author":{"gitId":"oscarlai1998"},"content":"        fw.close();"},{"lineNumber":398,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":399,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":400,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":401,"author":{"gitId":"oscarlai1998"},"content":"     * Check Error Method"},{"lineNumber":402,"author":{"gitId":"oscarlai1998"},"content":"     * Returns error code message"},{"lineNumber":403,"author":{"gitId":"oscarlai1998"},"content":"     * @param ERROR_MESSAGE - Error Message"},{"lineNumber":404,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":405,"author":{"gitId":"oscarlai1998"},"content":"    private static void checkError(String ERROR_MESSAGE) {"},{"lineNumber":406,"author":{"gitId":"oscarlai1998"},"content":"        switch (ERROR_MESSAGE) {"},{"lineNumber":407,"author":{"gitId":"oscarlai1998"},"content":"        case \"WRONG_DONE_FORMAT\":"},{"lineNumber":408,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"Error! You must enter an integer after\""},{"lineNumber":409,"author":{"gitId":"oscarlai1998"},"content":"                    + \" \\\"done\\\"!\");"},{"lineNumber":410,"author":{"gitId":"oscarlai1998"},"content":"            PrintOutput.printBorder();"},{"lineNumber":411,"author":{"gitId":"oscarlai1998"},"content":"            break;"},{"lineNumber":412,"author":{"gitId":"oscarlai1998"},"content":"        case \"INDEX_EXCEEDS_LIST\":"},{"lineNumber":413,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"Error! You do not have that \""},{"lineNumber":414,"author":{"gitId":"oscarlai1998"},"content":"                    + \"many items in your list!\");"},{"lineNumber":415,"author":{"gitId":"oscarlai1998"},"content":"            PrintOutput.printBorder();"},{"lineNumber":416,"author":{"gitId":"oscarlai1998"},"content":"            break;"},{"lineNumber":417,"author":{"gitId":"oscarlai1998"},"content":"        case \"EMPTY_LIST\":"},{"lineNumber":418,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"Your list is empty! Add something!\");"},{"lineNumber":419,"author":{"gitId":"oscarlai1998"},"content":"            PrintOutput.printBorder();"},{"lineNumber":420,"author":{"gitId":"oscarlai1998"},"content":"            break;"},{"lineNumber":421,"author":{"gitId":"oscarlai1998"},"content":"        case \"DONE_CHECKED_ERROR\":"},{"lineNumber":422,"author":{"gitId":"oscarlai1998"},"content":"             System.out.println(\"You have already marked it as Done!\");"},{"lineNumber":423,"author":{"gitId":"oscarlai1998"},"content":"             PrintOutput.printBorder();"},{"lineNumber":424,"author":{"gitId":"oscarlai1998"},"content":"             break;"},{"lineNumber":425,"author":{"gitId":"oscarlai1998"},"content":"        case \"INVALID_FORMAT\":"},{"lineNumber":426,"author":{"gitId":"oscarlai1998"},"content":"             System.out.println(\"¯\\\\_(ツ)_/¯ That is an invalid format!\");"},{"lineNumber":427,"author":{"gitId":"oscarlai1998"},"content":"             System.out.println(\"Enter HELP for commands!\");"},{"lineNumber":428,"author":{"gitId":"oscarlai1998"},"content":"             PrintOutput.printBorder();"},{"lineNumber":429,"author":{"gitId":"oscarlai1998"},"content":"             break;"},{"lineNumber":430,"author":{"gitId":"oscarlai1998"},"content":"        case \"LIST_FULL\":"},{"lineNumber":431,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"List is full!\");"},{"lineNumber":432,"author":{"gitId":"oscarlai1998"},"content":"            PrintOutput.printBorder();"},{"lineNumber":433,"author":{"gitId":"oscarlai1998"},"content":"            break;"},{"lineNumber":434,"author":{"gitId":"oscarlai1998"},"content":"        case \"WRONG_DELETE_FORMAT\":"},{"lineNumber":435,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"Error! You must enter a valid integer after\""},{"lineNumber":436,"author":{"gitId":"oscarlai1998"},"content":"                    + \" \\\"delete\\\"!\");"},{"lineNumber":437,"author":{"gitId":"oscarlai1998"},"content":"            PrintOutput.printBorder();"},{"lineNumber":438,"author":{"gitId":"oscarlai1998"},"content":"            break;"},{"lineNumber":439,"author":{"gitId":"oscarlai1998"},"content":"        case \"DELETE_EMPTY_LIST\":"},{"lineNumber":440,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"Error! You cannot delete what does not exist!\");"},{"lineNumber":441,"author":{"gitId":"oscarlai1998"},"content":"            PrintOutput.printBorder();"},{"lineNumber":442,"author":{"gitId":"oscarlai1998"},"content":"            break;"},{"lineNumber":443,"author":{"gitId":"oscarlai1998"},"content":"        case \"INVALID_COMMAND\":"},{"lineNumber":444,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"¯\\\\_(ツ)_/¯ That is an invalid command!\");"},{"lineNumber":445,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"Enter \\\"HELP\\\" for commands!\");"},{"lineNumber":446,"author":{"gitId":"oscarlai1998"},"content":"            PrintOutput.printBorder();"},{"lineNumber":447,"author":{"gitId":"oscarlai1998"},"content":"            break;"},{"lineNumber":448,"author":{"gitId":"oscarlai1998"},"content":"        case \"FILE_NOT_FOUND\":"},{"lineNumber":449,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"Duke.txt not found in directory. \""},{"lineNumber":450,"author":{"gitId":"oscarlai1998"},"content":"                    + \"Please try again!\");"},{"lineNumber":451,"author":{"gitId":"oscarlai1998"},"content":"            PrintOutput.printBorder();"},{"lineNumber":452,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":454,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"oscarlai1998":450,"-":4}},{"path":"src/main/java/PrintOutput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oscarlai1998"},"content":"public class PrintOutput {"},{"lineNumber":2,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":3,"author":{"gitId":"oscarlai1998"},"content":"    public static final String BORDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"},{"lineNumber":4,"author":{"gitId":"oscarlai1998"},"content":"    public static final String HELP_MESSAGE \u003d \" HELP COMMANDS\\n\""},{"lineNumber":5,"author":{"gitId":"oscarlai1998"},"content":"        + \"todo: adds to list\\n\""},{"lineNumber":6,"author":{"gitId":"oscarlai1998"},"content":"        + \" Example: todo sleep\\n\\n\""},{"lineNumber":7,"author":{"gitId":"oscarlai1998"},"content":"        + \"deadline: adds to list\\n\""},{"lineNumber":8,"author":{"gitId":"oscarlai1998"},"content":"        + \" Example: deadline homework /by tomorrow\\n\\n\""},{"lineNumber":9,"author":{"gitId":"oscarlai1998"},"content":"        + \"event: adds to list\\n\""},{"lineNumber":10,"author":{"gitId":"oscarlai1998"},"content":"        + \" Example: event block event /at tuesday\\n\\n\""},{"lineNumber":11,"author":{"gitId":"oscarlai1998"},"content":"        + \"List: view list\\n\""},{"lineNumber":12,"author":{"gitId":"oscarlai1998"},"content":"        + \" Example: list\\n\\n\""},{"lineNumber":13,"author":{"gitId":"oscarlai1998"},"content":"        + \"Help: view help commands\\n\""},{"lineNumber":14,"author":{"gitId":"oscarlai1998"},"content":"        + \" Example: Help\\n\\n\""},{"lineNumber":15,"author":{"gitId":"oscarlai1998"},"content":"        + \"Done: check task as done\\n\""},{"lineNumber":16,"author":{"gitId":"oscarlai1998"},"content":"        + \" Example: Done 2\\n\\n\""},{"lineNumber":17,"author":{"gitId":"oscarlai1998"},"content":"        + \"Delete: deletes task from list\\n\""},{"lineNumber":18,"author":{"gitId":"oscarlai1998"},"content":"        + \" Example: delete 2\\n\\n\""},{"lineNumber":19,"author":{"gitId":"oscarlai1998"},"content":"        + \"Duke.txt Format: \\n\""},{"lineNumber":20,"author":{"gitId":"oscarlai1998"},"content":"        + \"[✓] todo gym\\n\""},{"lineNumber":21,"author":{"gitId":"oscarlai1998"},"content":"        + \"[✓] deadline project meeting /by 21st feb\\n\""},{"lineNumber":22,"author":{"gitId":"oscarlai1998"},"content":"        + \"[ ] event football /at friday 2pm\\n\\n\""},{"lineNumber":23,"author":{"gitId":"oscarlai1998"},"content":"        + \"Bye:  terminate program\\n\""},{"lineNumber":24,"author":{"gitId":"oscarlai1998"},"content":"        + \" Example: bye\\n\\n\""},{"lineNumber":25,"author":{"gitId":"oscarlai1998"},"content":"        + BORDER;"},{"lineNumber":26,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":27,"author":{"gitId":"oscarlai1998"},"content":"    public static void printGreeting() {"},{"lineNumber":28,"author":{"gitId":"oscarlai1998"},"content":"        String alfred \u003d \"⊂_ ヽ\\n\""},{"lineNumber":29,"author":{"gitId":"oscarlai1998"},"content":"            + \"　 ＼ ＼ ^^^^^^\\n\""},{"lineNumber":30,"author":{"gitId":"oscarlai1998"},"content":"            + \"　　 ＼ ( ͡° ͜ʖ ͡°) ...what can I do for you?\\n\""},{"lineNumber":31,"author":{"gitId":"oscarlai1998"},"content":"            + \"　　　 \u003e　   ⌒ ヽ\\n\""},{"lineNumber":32,"author":{"gitId":"oscarlai1998"},"content":"            + \"　　　/ 　 へ   ＼\\n\""},{"lineNumber":33,"author":{"gitId":"oscarlai1998"},"content":"            + \"　　 / # /　 ＼ ＼...check out my six pack tho.\\n\""},{"lineNumber":34,"author":{"gitId":"oscarlai1998"},"content":"            + \"　　(　  (ヽ　　ヽ _ つ\\n\""},{"lineNumber":35,"author":{"gitId":"oscarlai1998"},"content":"            + \"   |  　| \\\\\\n\""},{"lineNumber":36,"author":{"gitId":"oscarlai1998"},"content":"            + \"　  | 丿 ＼ ⌒)...Enter HELP for command list!\\n\""},{"lineNumber":37,"author":{"gitId":"oscarlai1998"},"content":"            + \"　  | |　　) /\\n\""},{"lineNumber":38,"author":{"gitId":"oscarlai1998"},"content":"            + \"   ノ )　　Lﾉ\\n\""},{"lineNumber":39,"author":{"gitId":"oscarlai1998"},"content":"            + \"  (_／\";"},{"lineNumber":40,"author":{"gitId":"oscarlai1998"},"content":"        printBorder();"},{"lineNumber":41,"author":{"gitId":"oscarlai1998"},"content":"        System.out.println(\"Welcome to Duke v1.0 ----------- Latest Update: 14/2/21\");"},{"lineNumber":42,"author":{"gitId":"oscarlai1998"},"content":"        System.out.println(\"Developed by: Oscar Lai\");"},{"lineNumber":43,"author":{"gitId":"oscarlai1998"},"content":"        printBorder();"},{"lineNumber":44,"author":{"gitId":"oscarlai1998"},"content":"        System.out.println(\"Good Day, I\u0027m Alfred.\\n\" + alfred);"},{"lineNumber":45,"author":{"gitId":"oscarlai1998"},"content":"        printBorder();"},{"lineNumber":46,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":48,"author":{"gitId":"oscarlai1998"},"content":"    public static void printExit() {"},{"lineNumber":49,"author":{"gitId":"oscarlai1998"},"content":"        String wave \u003d \" __      __\\n\""},{"lineNumber":50,"author":{"gitId":"oscarlai1998"},"content":"            + \"( _\\\\    /_ )\\n\""},{"lineNumber":51,"author":{"gitId":"oscarlai1998"},"content":"            + \" \\\\ _\\\\  /_ /\\n\""},{"lineNumber":52,"author":{"gitId":"oscarlai1998"},"content":"            + \"  \\\\ _\\\\/_ /_ _\\n\""},{"lineNumber":53,"author":{"gitId":"oscarlai1998"},"content":"            + \"  |_____/_/ /|\\n\""},{"lineNumber":54,"author":{"gitId":"oscarlai1998"},"content":"            + \"  (  (_)__)J-)\\n\""},{"lineNumber":55,"author":{"gitId":"oscarlai1998"},"content":"            + \"  (  /`.,   /\\n\""},{"lineNumber":56,"author":{"gitId":"oscarlai1998"},"content":"            + \"   \\\\/  ;   /\\n\""},{"lineNumber":57,"author":{"gitId":"oscarlai1998"},"content":"            + \"    | \u003d\u003d\u003d |See you again!\\n\";"},{"lineNumber":58,"author":{"gitId":"oscarlai1998"},"content":"        System.out.println(\"Pleasure serving you...\\n\" + wave);"},{"lineNumber":59,"author":{"gitId":"oscarlai1998"},"content":"        System.out.println(\"Duke.txt file Updated!\");"},{"lineNumber":60,"author":{"gitId":"oscarlai1998"},"content":"        printBorder();"},{"lineNumber":61,"author":{"gitId":"oscarlai1998"},"content":"        System.out.println(\"Developed by: Oscar Lai\\n\""},{"lineNumber":62,"author":{"gitId":"oscarlai1998"},"content":"                + \"Version 1.0\");"},{"lineNumber":63,"author":{"gitId":"oscarlai1998"},"content":"        printBorder();"},{"lineNumber":64,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":66,"author":{"gitId":"oscarlai1998"},"content":"    public static void printBorder() {"},{"lineNumber":67,"author":{"gitId":"oscarlai1998"},"content":"        System.out.println(BORDER);"},{"lineNumber":68,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"oscarlai1998"},"content":"}"}],"authorContributionMap":{"oscarlai1998":69}},{"path":"src/main/java/error/DoneCheckedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oscarlai1998"},"content":"package error;"},{"lineNumber":2,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":3,"author":{"gitId":"oscarlai1998"},"content":"public class DoneCheckedException extends Exception {"},{"lineNumber":4,"author":{"gitId":"oscarlai1998"},"content":"}"}],"authorContributionMap":{"oscarlai1998":4}},{"path":"src/main/java/error/ListEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oscarlai1998"},"content":"package error;"},{"lineNumber":2,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":3,"author":{"gitId":"oscarlai1998"},"content":"public class ListEmptyException extends Exception {"},{"lineNumber":4,"author":{"gitId":"oscarlai1998"},"content":"}"}],"authorContributionMap":{"oscarlai1998":4}},{"path":"src/main/java/error/WrongFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oscarlai1998"},"content":"package error;"},{"lineNumber":2,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":3,"author":{"gitId":"oscarlai1998"},"content":"public class WrongFormatException extends Exception {"},{"lineNumber":4,"author":{"gitId":"oscarlai1998"},"content":"}"}],"authorContributionMap":{"oscarlai1998":4}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oscarlai1998"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":3,"author":{"gitId":"oscarlai1998"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":5,"author":{"gitId":"oscarlai1998"},"content":"    protected String by;"},{"lineNumber":6,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":7,"author":{"gitId":"oscarlai1998"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":8,"author":{"gitId":"oscarlai1998"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"oscarlai1998"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":12,"author":{"gitId":"oscarlai1998"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"oscarlai1998"},"content":"    public String getType(){"},{"lineNumber":14,"author":{"gitId":"oscarlai1998"},"content":"        return \"D\";"},{"lineNumber":15,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":17,"author":{"gitId":"oscarlai1998"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"oscarlai1998"},"content":"    public String getDate() {"},{"lineNumber":19,"author":{"gitId":"oscarlai1998"},"content":"        return \" (by: \" + by + \")\";"},{"lineNumber":20,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":22,"author":{"gitId":"oscarlai1998"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"oscarlai1998"},"content":"    public String outputData() {"},{"lineNumber":24,"author":{"gitId":"oscarlai1998"},"content":"        return \"[\" + getStatusIcon() + \"] \" + \"deadline \" + getName() + \" /by \" + by;"},{"lineNumber":25,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"oscarlai1998"},"content":"}"}],"authorContributionMap":{"oscarlai1998":26}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oscarlai1998"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":3,"author":{"gitId":"oscarlai1998"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":5,"author":{"gitId":"oscarlai1998"},"content":"    protected String at;"},{"lineNumber":6,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":7,"author":{"gitId":"oscarlai1998"},"content":"    public Event(String description, String by) {"},{"lineNumber":8,"author":{"gitId":"oscarlai1998"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"oscarlai1998"},"content":"        this.at \u003d by;"},{"lineNumber":10,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":12,"author":{"gitId":"oscarlai1998"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"oscarlai1998"},"content":"    public String getType(){"},{"lineNumber":14,"author":{"gitId":"oscarlai1998"},"content":"        return \"E\";"},{"lineNumber":15,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":17,"author":{"gitId":"oscarlai1998"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"oscarlai1998"},"content":"    public String getDate() {"},{"lineNumber":19,"author":{"gitId":"oscarlai1998"},"content":"        return \" (at: \" + at + \")\";"},{"lineNumber":20,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":22,"author":{"gitId":"oscarlai1998"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"oscarlai1998"},"content":"    public String outputData() {"},{"lineNumber":24,"author":{"gitId":"oscarlai1998"},"content":"        return \"[\" + getStatusIcon() + \"] \" + \"event \" + getName() + \" /at \" + at;"},{"lineNumber":25,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"oscarlai1998"},"content":"}"}],"authorContributionMap":{"oscarlai1998":26}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oscarlai1998"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":3,"author":{"gitId":"oscarlai1998"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"oscarlai1998"},"content":"    private final String name;"},{"lineNumber":5,"author":{"gitId":"oscarlai1998"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":7,"author":{"gitId":"oscarlai1998"},"content":"    public Task(String name) {"},{"lineNumber":8,"author":{"gitId":"oscarlai1998"},"content":"        this.name \u003d name;"},{"lineNumber":9,"author":{"gitId":"oscarlai1998"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":12,"author":{"gitId":"oscarlai1998"},"content":"    public void markAsDone(){"},{"lineNumber":13,"author":{"gitId":"oscarlai1998"},"content":"        isDone \u003d true;"},{"lineNumber":14,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":16,"author":{"gitId":"oscarlai1998"},"content":"    public boolean checkIsDone(){"},{"lineNumber":17,"author":{"gitId":"oscarlai1998"},"content":"        return isDone;"},{"lineNumber":18,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":20,"author":{"gitId":"oscarlai1998"},"content":"    public String getName() {"},{"lineNumber":21,"author":{"gitId":"oscarlai1998"},"content":"        return name;"},{"lineNumber":22,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":24,"author":{"gitId":"oscarlai1998"},"content":"    public String getType(){"},{"lineNumber":25,"author":{"gitId":"oscarlai1998"},"content":"        return \"\";"},{"lineNumber":26,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":28,"author":{"gitId":"oscarlai1998"},"content":"    public String getDate(){"},{"lineNumber":29,"author":{"gitId":"oscarlai1998"},"content":"        return \"\";"},{"lineNumber":30,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":32,"author":{"gitId":"oscarlai1998"},"content":"    public String getStatusIcon() {"},{"lineNumber":33,"author":{"gitId":"oscarlai1998"},"content":"        return (isDone ? \"\\u2713\" : \" \"); //return tick as done and empty as not done"},{"lineNumber":34,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":36,"author":{"gitId":"oscarlai1998"},"content":"    abstract public String outputData();"},{"lineNumber":37,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":38,"author":{"gitId":"oscarlai1998"},"content":"}"}],"authorContributionMap":{"oscarlai1998":38}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oscarlai1998"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":3,"author":{"gitId":"oscarlai1998"},"content":"import task.Task;"},{"lineNumber":4,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":5,"author":{"gitId":"oscarlai1998"},"content":"public class Todo extends Task {"},{"lineNumber":6,"author":{"gitId":"oscarlai1998"},"content":"    public Todo(String description){"},{"lineNumber":7,"author":{"gitId":"oscarlai1998"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":10,"author":{"gitId":"oscarlai1998"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"oscarlai1998"},"content":"    public String getType(){"},{"lineNumber":12,"author":{"gitId":"oscarlai1998"},"content":"        return \"T\";"},{"lineNumber":13,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":15,"author":{"gitId":"oscarlai1998"},"content":"    public String getDate(){"},{"lineNumber":16,"author":{"gitId":"oscarlai1998"},"content":"        return \"\";"},{"lineNumber":17,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":19,"author":{"gitId":"oscarlai1998"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"oscarlai1998"},"content":"    public String outputData() {"},{"lineNumber":21,"author":{"gitId":"oscarlai1998"},"content":"        return \"[\" + getStatusIcon() + \"] \" + \"todo \" + getName() ;"},{"lineNumber":22,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"oscarlai1998"},"content":"}"},{"lineNumber":24,"author":{"gitId":"oscarlai1998"},"content":""}],"authorContributionMap":{"oscarlai1998":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"oscarlai1998"},"content":"help"},{"lineNumber":2,"author":{"gitId":"oscarlai1998"},"content":"blah"},{"lineNumber":3,"author":{"gitId":"oscarlai1998"},"content":"list"},{"lineNumber":4,"author":{"gitId":"oscarlai1998"},"content":"todo"},{"lineNumber":5,"author":{"gitId":"oscarlai1998"},"content":"todo sleep"},{"lineNumber":6,"author":{"gitId":"oscarlai1998"},"content":"deadline homework /by tomorrow"},{"lineNumber":7,"author":{"gitId":"oscarlai1998"},"content":"event birthday /at friday"},{"lineNumber":8,"author":{"gitId":"oscarlai1998"},"content":"done"},{"lineNumber":9,"author":{"gitId":"oscarlai1998"},"content":"done 2"},{"lineNumber":10,"author":{"gitId":"oscarlai1998"},"content":"done 2"},{"lineNumber":11,"author":{"gitId":"oscarlai1998"},"content":"done 4"},{"lineNumber":12,"author":{"gitId":"oscarlai1998"},"content":"list"},{"lineNumber":13,"author":{"gitId":"oscarlai1998"},"content":"bye"}],"authorContributionMap":{"oscarlai1998":13}}]
