[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"oscarlai1998"},"content":"# Oscar Lai Duke Project - Alfred"},{"lineNumber":7,"author":{"gitId":"oscarlai1998"},"content":"Latest Update: 30-Jan [Level-4]"}],"authorContributionMap":{"oscarlai1998":2,"-":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oscarlai1998"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":3,"author":{"gitId":"oscarlai1998"},"content":"    protected String by;"},{"lineNumber":4,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":5,"author":{"gitId":"oscarlai1998"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"oscarlai1998"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"oscarlai1998"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":10,"author":{"gitId":"oscarlai1998"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"oscarlai1998"},"content":"    public String getType(){"},{"lineNumber":12,"author":{"gitId":"oscarlai1998"},"content":"        return \"D\";"},{"lineNumber":13,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":15,"author":{"gitId":"oscarlai1998"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"oscarlai1998"},"content":"    public String getDate() {"},{"lineNumber":17,"author":{"gitId":"oscarlai1998"},"content":"        return \" (by: \" + by + \")\";"},{"lineNumber":18,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"oscarlai1998"},"content":"}"}],"authorContributionMap":{"oscarlai1998":19}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oscarlai1998"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"oscarlai1998"},"content":"    public static int MAX_SIZE \u003d 100;"},{"lineNumber":5,"author":{"gitId":"oscarlai1998"},"content":"    public static Task[] list \u003d new Task[MAX_SIZE];"},{"lineNumber":6,"author":{"gitId":"oscarlai1998"},"content":"    private static int LIST_COUNTER \u003d 0;"},{"lineNumber":7,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":8,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"oscarlai1998"},"content":"     * Loop through all possible commands with error code"},{"lineNumber":10,"author":{"gitId":"oscarlai1998"},"content":"     * Possible Commands:"},{"lineNumber":11,"author":{"gitId":"oscarlai1998"},"content":"     * Todo, event, Deadline, help, list, done, bye"},{"lineNumber":12,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"oscarlai1998"},"content":"    public static void loop() {"},{"lineNumber":14,"author":{"gitId":"oscarlai1998"},"content":"        while (true) {"},{"lineNumber":15,"author":{"gitId":"oscarlai1998"},"content":"            String input \u003d readInput();"},{"lineNumber":16,"author":{"gitId":"oscarlai1998"},"content":"            if (input.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":17,"author":{"gitId":"oscarlai1998"},"content":"                printExit();"},{"lineNumber":18,"author":{"gitId":"oscarlai1998"},"content":"                System.exit(1);"},{"lineNumber":19,"author":{"gitId":"oscarlai1998"},"content":"            } else if (input.equalsIgnoreCase(\"help\")) {"},{"lineNumber":20,"author":{"gitId":"oscarlai1998"},"content":"                System.out.println(HELP_MESSAGE);"},{"lineNumber":21,"author":{"gitId":"oscarlai1998"},"content":"            } else if (input.toLowerCase().startsWith(\"done\")) {"},{"lineNumber":22,"author":{"gitId":"oscarlai1998"},"content":"                if (input.equalsIgnoreCase(\"done\")) {"},{"lineNumber":23,"author":{"gitId":"oscarlai1998"},"content":"                    error(1);"},{"lineNumber":24,"author":{"gitId":"oscarlai1998"},"content":"                    continue;"},{"lineNumber":25,"author":{"gitId":"oscarlai1998"},"content":"                }"},{"lineNumber":26,"author":{"gitId":"oscarlai1998"},"content":"                if (input.substring(5).matches(\"[0-9]+\")) {"},{"lineNumber":27,"author":{"gitId":"oscarlai1998"},"content":"                    int index \u003d Integer.parseInt(input.substring(5));"},{"lineNumber":28,"author":{"gitId":"oscarlai1998"},"content":"                    if (index \u003e LIST_COUNTER) {"},{"lineNumber":29,"author":{"gitId":"oscarlai1998"},"content":"                        error(2);"},{"lineNumber":30,"author":{"gitId":"oscarlai1998"},"content":"                        continue;"},{"lineNumber":31,"author":{"gitId":"oscarlai1998"},"content":"                    }"},{"lineNumber":32,"author":{"gitId":"oscarlai1998"},"content":"                    doneTask(index - 1);"},{"lineNumber":33,"author":{"gitId":"oscarlai1998"},"content":"                } else if (input.substring(5).isBlank()) {"},{"lineNumber":34,"author":{"gitId":"oscarlai1998"},"content":"                    error(1);"},{"lineNumber":35,"author":{"gitId":"oscarlai1998"},"content":"                } else {"},{"lineNumber":36,"author":{"gitId":"oscarlai1998"},"content":"                    error(1);"},{"lineNumber":37,"author":{"gitId":"oscarlai1998"},"content":"                }"},{"lineNumber":38,"author":{"gitId":"oscarlai1998"},"content":"            } else if (input.equalsIgnoreCase(\"list\")) {"},{"lineNumber":39,"author":{"gitId":"oscarlai1998"},"content":"                printList();"},{"lineNumber":40,"author":{"gitId":"oscarlai1998"},"content":"            } else if (input.toLowerCase().startsWith(\"todo\")){"},{"lineNumber":41,"author":{"gitId":"oscarlai1998"},"content":"                addTodo(input.substring(5));"},{"lineNumber":42,"author":{"gitId":"oscarlai1998"},"content":"            } else if (input.toLowerCase().startsWith(\"deadline\")){"},{"lineNumber":43,"author":{"gitId":"oscarlai1998"},"content":"                addDeadline(input.substring(9));"},{"lineNumber":44,"author":{"gitId":"oscarlai1998"},"content":"            } else if (input.toLowerCase().startsWith(\"event\")){"},{"lineNumber":45,"author":{"gitId":"oscarlai1998"},"content":"                addEvent(input.substring(6));"},{"lineNumber":46,"author":{"gitId":"oscarlai1998"},"content":"            } else {"},{"lineNumber":47,"author":{"gitId":"oscarlai1998"},"content":"                System.out.println(\" ¯\\\\_(ツ)_/¯ You have an Invalid Command!\");"},{"lineNumber":48,"author":{"gitId":"oscarlai1998"},"content":"                System.out.println(\"Enter \\\"HELP\\\" for help!\");"},{"lineNumber":49,"author":{"gitId":"oscarlai1998"},"content":"                printBorder();"},{"lineNumber":50,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":54,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"oscarlai1998"},"content":"     * Main Function"},{"lineNumber":56,"author":{"gitId":"oscarlai1998"},"content":"     * To Print Greeting as Default then loop function"},{"lineNumber":57,"author":{"gitId":"oscarlai1998"},"content":"     * @param args - argument"},{"lineNumber":58,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":60,"author":{"gitId":"oscarlai1998"},"content":"        printGreeting();"},{"lineNumber":61,"author":{"gitId":"oscarlai1998"},"content":"        loop();"},{"lineNumber":62,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":64,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"oscarlai1998"},"content":"     * Add new task to Timetable"},{"lineNumber":66,"author":{"gitId":"oscarlai1998"},"content":"     * @param command - name of task"},{"lineNumber":67,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"oscarlai1998"},"content":"    public static void addTodo(String command) {"},{"lineNumber":69,"author":{"gitId":"oscarlai1998"},"content":"        if(!command.isBlank()){"},{"lineNumber":70,"author":{"gitId":"oscarlai1998"},"content":"            Todo t \u003d new Todo(command);"},{"lineNumber":71,"author":{"gitId":"oscarlai1998"},"content":"            list[LIST_COUNTER] \u003d t;"},{"lineNumber":72,"author":{"gitId":"oscarlai1998"},"content":"            LIST_COUNTER +\u003d 1;"},{"lineNumber":73,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"I have added [\" + t.getType() + \"][\""},{"lineNumber":74,"author":{"gitId":"oscarlai1998"},"content":"                + t.getStatusIcon() + \"] \\\"\""},{"lineNumber":75,"author":{"gitId":"oscarlai1998"},"content":"                + t.getName() + \"\\\" \" + \"to the List!\");"},{"lineNumber":76,"author":{"gitId":"oscarlai1998"},"content":"            printNoOfTask();"},{"lineNumber":77,"author":{"gitId":"oscarlai1998"},"content":"        } else{"},{"lineNumber":78,"author":{"gitId":"oscarlai1998"},"content":"            error(5);"},{"lineNumber":79,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":82,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"oscarlai1998"},"content":"     * Add deadline to list"},{"lineNumber":84,"author":{"gitId":"oscarlai1998"},"content":"     * @param command - add Deadline"},{"lineNumber":85,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"oscarlai1998"},"content":"    public static void addDeadline(String command) {"},{"lineNumber":87,"author":{"gitId":"oscarlai1998"},"content":"        if(command.contains(\"/by\")) {"},{"lineNumber":88,"author":{"gitId":"oscarlai1998"},"content":"            String[] parts \u003d command.split(\" /by \");"},{"lineNumber":89,"author":{"gitId":"oscarlai1998"},"content":"            String description \u003d parts[0];"},{"lineNumber":90,"author":{"gitId":"oscarlai1998"},"content":"            String date \u003d parts[1];"},{"lineNumber":91,"author":{"gitId":"oscarlai1998"},"content":"            Deadline t \u003d new Deadline(description,date);"},{"lineNumber":92,"author":{"gitId":"oscarlai1998"},"content":"            list[LIST_COUNTER] \u003d t;"},{"lineNumber":93,"author":{"gitId":"oscarlai1998"},"content":"            LIST_COUNTER +\u003d 1;"},{"lineNumber":94,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"I have added [\" + t.getType() + \"][\""},{"lineNumber":95,"author":{"gitId":"oscarlai1998"},"content":"                + t.getStatusIcon() + \"] \\\"\""},{"lineNumber":96,"author":{"gitId":"oscarlai1998"},"content":"                + t.getName() + t.getDate() + \"\\\"\" + \" to the List!\");"},{"lineNumber":97,"author":{"gitId":"oscarlai1998"},"content":"            printNoOfTask();"},{"lineNumber":98,"author":{"gitId":"oscarlai1998"},"content":"        } else {"},{"lineNumber":99,"author":{"gitId":"oscarlai1998"},"content":"            error(5);"},{"lineNumber":100,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":103,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"oscarlai1998"},"content":"     * Add event to list"},{"lineNumber":105,"author":{"gitId":"oscarlai1998"},"content":"     * @param command - add event"},{"lineNumber":106,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"oscarlai1998"},"content":"    public static void addEvent(String command){"},{"lineNumber":108,"author":{"gitId":"oscarlai1998"},"content":"        if(command.contains (\"/at\")){"},{"lineNumber":109,"author":{"gitId":"oscarlai1998"},"content":"            String[] parts \u003d command.split(\" /at \");"},{"lineNumber":110,"author":{"gitId":"oscarlai1998"},"content":"            String description \u003d parts[0];"},{"lineNumber":111,"author":{"gitId":"oscarlai1998"},"content":"            String date \u003d parts[1];"},{"lineNumber":112,"author":{"gitId":"oscarlai1998"},"content":"            Event t \u003d new Event(description,date);"},{"lineNumber":113,"author":{"gitId":"oscarlai1998"},"content":"            list[LIST_COUNTER] \u003d t;"},{"lineNumber":114,"author":{"gitId":"oscarlai1998"},"content":"            LIST_COUNTER +\u003d 1;"},{"lineNumber":115,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"I have added [\" + t.getType() + \"][\""},{"lineNumber":116,"author":{"gitId":"oscarlai1998"},"content":"                + t.getStatusIcon() + \"] \\\"\""},{"lineNumber":117,"author":{"gitId":"oscarlai1998"},"content":"                + t.getName() + t.getDate() + \"\\\"\" + \" to the List!\");"},{"lineNumber":118,"author":{"gitId":"oscarlai1998"},"content":"            printNoOfTask();"},{"lineNumber":119,"author":{"gitId":"oscarlai1998"},"content":"        } else {"},{"lineNumber":120,"author":{"gitId":"oscarlai1998"},"content":"            error(5);"},{"lineNumber":121,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":124,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"oscarlai1998"},"content":"     * Check task as completed"},{"lineNumber":126,"author":{"gitId":"oscarlai1998"},"content":"     * @param index - index of task"},{"lineNumber":127,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"oscarlai1998"},"content":"    private static void doneTask(int index) {"},{"lineNumber":129,"author":{"gitId":"oscarlai1998"},"content":"        if (list[index].isDone) {"},{"lineNumber":130,"author":{"gitId":"oscarlai1998"},"content":"            error(4);"},{"lineNumber":131,"author":{"gitId":"oscarlai1998"},"content":"        } else {"},{"lineNumber":132,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"Good Job, I will mark this as done!\");"},{"lineNumber":133,"author":{"gitId":"oscarlai1998"},"content":"            list[index].markAsDone();"},{"lineNumber":134,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\"[\" + list[index].getType() + \"] [\""},{"lineNumber":135,"author":{"gitId":"oscarlai1998"},"content":"                + list[index].getStatusIcon() + \"] \" + list[index].getName()"},{"lineNumber":136,"author":{"gitId":"oscarlai1998"},"content":"                + list[index].getDate());"},{"lineNumber":137,"author":{"gitId":"oscarlai1998"},"content":"            printBorder();"},{"lineNumber":138,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":141,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":142,"author":{"gitId":"oscarlai1998"},"content":"     * Print the number of task in list"},{"lineNumber":143,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"oscarlai1998"},"content":"    public static void printNoOfTask() {"},{"lineNumber":145,"author":{"gitId":"oscarlai1998"},"content":"        System.out.print(\"You have \" + LIST_COUNTER + \" task\");"},{"lineNumber":146,"author":{"gitId":"oscarlai1998"},"content":"        if(LIST_COUNTER \u003e 1){"},{"lineNumber":147,"author":{"gitId":"oscarlai1998"},"content":"            System.out.print(\"s\");"},{"lineNumber":148,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"oscarlai1998"},"content":"        System.out.print(\" in total!\\n\");"},{"lineNumber":150,"author":{"gitId":"oscarlai1998"},"content":"        printBorder();"},{"lineNumber":151,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":153,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":154,"author":{"gitId":"oscarlai1998"},"content":"     * print List"},{"lineNumber":155,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":156,"author":{"gitId":"oscarlai1998"},"content":"    public static void printList(){"},{"lineNumber":157,"author":{"gitId":"oscarlai1998"},"content":"        if (LIST_COUNTER \u003e 0) {"},{"lineNumber":158,"author":{"gitId":"oscarlai1998"},"content":"            System.out.println(\" LIST\");"},{"lineNumber":159,"author":{"gitId":"oscarlai1998"},"content":"            for (int i \u003d 0; i \u003c LIST_COUNTER; i++) {"},{"lineNumber":160,"author":{"gitId":"oscarlai1998"},"content":"                System.out.println(i + 1 +  \". [\" + list[i].getType() +  \"] \" + \"[\""},{"lineNumber":161,"author":{"gitId":"oscarlai1998"},"content":"                    +list[i].getStatusIcon() + \"] \" + list[i].getName()"},{"lineNumber":162,"author":{"gitId":"oscarlai1998"},"content":"                    + list[i].getDate());"},{"lineNumber":163,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":164,"author":{"gitId":"oscarlai1998"},"content":"            printBorder();"},{"lineNumber":165,"author":{"gitId":"oscarlai1998"},"content":"        } else {"},{"lineNumber":166,"author":{"gitId":"oscarlai1998"},"content":"            error(3);"},{"lineNumber":167,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":170,"author":{"gitId":"oscarlai1998"},"content":"    private static final String BORDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"},{"lineNumber":171,"author":{"gitId":"oscarlai1998"},"content":"    private static final String HELP_MESSAGE \u003d \" HELP COMMANDS\\n\""},{"lineNumber":172,"author":{"gitId":"oscarlai1998"},"content":"        + \"todo: adds to list\\n\""},{"lineNumber":173,"author":{"gitId":"oscarlai1998"},"content":"        + \" Example: todo sleep\\n\\n\""},{"lineNumber":174,"author":{"gitId":"oscarlai1998"},"content":"        + \"deadline: adds to list\\n\""},{"lineNumber":175,"author":{"gitId":"oscarlai1998"},"content":"        + \" Example: deadline homework /by tomorrow\\n\\n\""},{"lineNumber":176,"author":{"gitId":"oscarlai1998"},"content":"        + \"event: adds to list\\n\""},{"lineNumber":177,"author":{"gitId":"oscarlai1998"},"content":"        + \" Example: event block event /at tuesday\\n\\n\""},{"lineNumber":178,"author":{"gitId":"oscarlai1998"},"content":"        + \"List: view list\\n\""},{"lineNumber":179,"author":{"gitId":"oscarlai1998"},"content":"        + \" Example: list\\n\\n\""},{"lineNumber":180,"author":{"gitId":"oscarlai1998"},"content":"        + \"Help: view help commands\\n\""},{"lineNumber":181,"author":{"gitId":"oscarlai1998"},"content":"        + \" Example: Help\\n\\n\""},{"lineNumber":182,"author":{"gitId":"oscarlai1998"},"content":"        + \"Done: check task as done\\n\""},{"lineNumber":183,"author":{"gitId":"oscarlai1998"},"content":"        + \" Example: Done 2\\n\\n\""},{"lineNumber":184,"author":{"gitId":"oscarlai1998"},"content":"        + \"Bye:  terminate program\\n\""},{"lineNumber":185,"author":{"gitId":"oscarlai1998"},"content":"        + \" Example: bye\\n\\n\""},{"lineNumber":186,"author":{"gitId":"oscarlai1998"},"content":"        + BORDER;"},{"lineNumber":187,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":188,"author":{"gitId":"oscarlai1998"},"content":"    public static void printGreeting() {"},{"lineNumber":189,"author":{"gitId":"oscarlai1998"},"content":"        String alfred \u003d \"⊂_ヽ\\n\""},{"lineNumber":190,"author":{"gitId":"oscarlai1998"},"content":"            + \"　 ＼ ＼ what\\n\""},{"lineNumber":191,"author":{"gitId":"oscarlai1998"},"content":"            + \"　　  ＼ ( ͡° ͜ʖ ͡°) can I \\n\""},{"lineNumber":192,"author":{"gitId":"oscarlai1998"},"content":"            + \"　　　 \u003e　   ⌒    ヽ\\n\""},{"lineNumber":193,"author":{"gitId":"oscarlai1998"},"content":"            + \"　　　/ 　   へ      ＼\\n\""},{"lineNumber":194,"author":{"gitId":"oscarlai1998"},"content":"            + \"　　/　　  /　  ＼   do for you?\\n\""},{"lineNumber":195,"author":{"gitId":"oscarlai1998"},"content":"            + \"　　(　  (ヽ　　    ヽ _   つ\\n\""},{"lineNumber":196,"author":{"gitId":"oscarlai1998"},"content":"            + \"   |  　| \\\\ \\n\""},{"lineNumber":197,"author":{"gitId":"oscarlai1998"},"content":"            + \"　  | 丿 ＼ ⌒)\\n\""},{"lineNumber":198,"author":{"gitId":"oscarlai1998"},"content":"            + \"　  | |　　) /\\n\""},{"lineNumber":199,"author":{"gitId":"oscarlai1998"},"content":"            + \"   ノ )　　Lﾉ \\n\""},{"lineNumber":200,"author":{"gitId":"oscarlai1998"},"content":"            + \"  (_／\";"},{"lineNumber":201,"author":{"gitId":"oscarlai1998"},"content":"        printBorder();"},{"lineNumber":202,"author":{"gitId":"oscarlai1998"},"content":"        System.out.println(\"Good Day, I\u0027m Alfred.\\n\" + alfred);"},{"lineNumber":203,"author":{"gitId":"oscarlai1998"},"content":"        System.out.println(\"Enter HELP for commands\");"},{"lineNumber":204,"author":{"gitId":"oscarlai1998"},"content":"        printBorder();"},{"lineNumber":205,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":207,"author":{"gitId":"oscarlai1998"},"content":"    public static void printExit() {"},{"lineNumber":208,"author":{"gitId":"oscarlai1998"},"content":"        String wave \u003d \" __      __\\n\""},{"lineNumber":209,"author":{"gitId":"oscarlai1998"},"content":"            + \"( _\\\\    /_ )\\n\""},{"lineNumber":210,"author":{"gitId":"oscarlai1998"},"content":"            + \" \\\\ _\\\\  /_ / \\n\""},{"lineNumber":211,"author":{"gitId":"oscarlai1998"},"content":"            + \"  \\\\ _\\\\/_ /_ _\\n\""},{"lineNumber":212,"author":{"gitId":"oscarlai1998"},"content":"            + \"  |_____/_/ /|\\n\""},{"lineNumber":213,"author":{"gitId":"oscarlai1998"},"content":"            + \"  (  (_)__)J-)\\n\""},{"lineNumber":214,"author":{"gitId":"oscarlai1998"},"content":"            + \"  (  /`.,   /\\n\""},{"lineNumber":215,"author":{"gitId":"oscarlai1998"},"content":"            + \"   \\\\/  ;   /\\n\""},{"lineNumber":216,"author":{"gitId":"oscarlai1998"},"content":"            + \"    | \u003d\u003d\u003d |See you again!\""},{"lineNumber":217,"author":{"gitId":"oscarlai1998"},"content":"            + \"Developed by: Oscar Lai\\n\""},{"lineNumber":218,"author":{"gitId":"oscarlai1998"},"content":"            + \"Version 1.4\";"},{"lineNumber":219,"author":{"gitId":"oscarlai1998"},"content":"        printBorder();"},{"lineNumber":220,"author":{"gitId":"oscarlai1998"},"content":"        System.out.println(\"Pleasure serving you...\\n\" + wave);"},{"lineNumber":221,"author":{"gitId":"oscarlai1998"},"content":"        printBorder();"},{"lineNumber":222,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":224,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":225,"author":{"gitId":"oscarlai1998"},"content":"     * Read Input"},{"lineNumber":226,"author":{"gitId":"oscarlai1998"},"content":"     * @return input as String"},{"lineNumber":227,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":228,"author":{"gitId":"oscarlai1998"},"content":"    public static String readInput() {"},{"lineNumber":229,"author":{"gitId":"oscarlai1998"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":230,"author":{"gitId":"oscarlai1998"},"content":"        return in.nextLine();"},{"lineNumber":231,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":233,"author":{"gitId":"oscarlai1998"},"content":"    public static void printBorder() {"},{"lineNumber":234,"author":{"gitId":"oscarlai1998"},"content":"        System.out.println(BORDER);"},{"lineNumber":235,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":237,"author":{"gitId":"oscarlai1998"},"content":"    /**"},{"lineNumber":238,"author":{"gitId":"oscarlai1998"},"content":"     * Returns error code message"},{"lineNumber":239,"author":{"gitId":"oscarlai1998"},"content":"     * Error Code 1: done command in wrong format"},{"lineNumber":240,"author":{"gitId":"oscarlai1998"},"content":"     * Error Code 2: done Index is more than size of array"},{"lineNumber":241,"author":{"gitId":"oscarlai1998"},"content":"     * Error Code 3: Timetable is empty"},{"lineNumber":242,"author":{"gitId":"oscarlai1998"},"content":"     * Error Code 4: Task already marked done"},{"lineNumber":243,"author":{"gitId":"oscarlai1998"},"content":"     * Error Code 5: Invalid Command format"},{"lineNumber":244,"author":{"gitId":"oscarlai1998"},"content":"     * @param code - error code"},{"lineNumber":245,"author":{"gitId":"oscarlai1998"},"content":"     */"},{"lineNumber":246,"author":{"gitId":"oscarlai1998"},"content":"    public static void error(int code) {"},{"lineNumber":247,"author":{"gitId":"oscarlai1998"},"content":"        switch (code) {"},{"lineNumber":248,"author":{"gitId":"oscarlai1998"},"content":"            case 1:"},{"lineNumber":249,"author":{"gitId":"oscarlai1998"},"content":"                System.out.println(\"Error! You must enter an integer after\""},{"lineNumber":250,"author":{"gitId":"oscarlai1998"},"content":"                    + \" \\\"done\\\"!\");"},{"lineNumber":251,"author":{"gitId":"oscarlai1998"},"content":"                printBorder();"},{"lineNumber":252,"author":{"gitId":"oscarlai1998"},"content":"                break;"},{"lineNumber":253,"author":{"gitId":"oscarlai1998"},"content":"            case 2:"},{"lineNumber":254,"author":{"gitId":"oscarlai1998"},"content":"                System.out.println(\"Error! You do not have that \""},{"lineNumber":255,"author":{"gitId":"oscarlai1998"},"content":"                    + \"many items in your list!\");"},{"lineNumber":256,"author":{"gitId":"oscarlai1998"},"content":"                printBorder();"},{"lineNumber":257,"author":{"gitId":"oscarlai1998"},"content":"                break;"},{"lineNumber":258,"author":{"gitId":"oscarlai1998"},"content":"            case 3:"},{"lineNumber":259,"author":{"gitId":"oscarlai1998"},"content":"                System.out.println(\"Your list is empty! Add something!\");"},{"lineNumber":260,"author":{"gitId":"oscarlai1998"},"content":"                printBorder();"},{"lineNumber":261,"author":{"gitId":"oscarlai1998"},"content":"                break;"},{"lineNumber":262,"author":{"gitId":"oscarlai1998"},"content":"            case 4:"},{"lineNumber":263,"author":{"gitId":"oscarlai1998"},"content":"                System.out.println(\"You have already marked it as Done!\");"},{"lineNumber":264,"author":{"gitId":"oscarlai1998"},"content":"                printBorder();"},{"lineNumber":265,"author":{"gitId":"oscarlai1998"},"content":"                break;"},{"lineNumber":266,"author":{"gitId":"oscarlai1998"},"content":"            case 5:"},{"lineNumber":267,"author":{"gitId":"oscarlai1998"},"content":"                System.out.println(\"Invalid format!\");"},{"lineNumber":268,"author":{"gitId":"oscarlai1998"},"content":"                System.out.println(\"Enter HELP for commands!\");"},{"lineNumber":269,"author":{"gitId":"oscarlai1998"},"content":"                printBorder();"},{"lineNumber":270,"author":{"gitId":"oscarlai1998"},"content":"                break;"},{"lineNumber":271,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"oscarlai1998":269,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oscarlai1998"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":3,"author":{"gitId":"oscarlai1998"},"content":"    protected String at;"},{"lineNumber":4,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":5,"author":{"gitId":"oscarlai1998"},"content":"    public Event(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"oscarlai1998"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"oscarlai1998"},"content":"        this.at \u003d by;"},{"lineNumber":8,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":10,"author":{"gitId":"oscarlai1998"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"oscarlai1998"},"content":"    public String getType(){"},{"lineNumber":12,"author":{"gitId":"oscarlai1998"},"content":"        return \"E\";"},{"lineNumber":13,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":15,"author":{"gitId":"oscarlai1998"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"oscarlai1998"},"content":"    public String getDate() {"},{"lineNumber":17,"author":{"gitId":"oscarlai1998"},"content":"        return \" (at: \" + at + \")\";"},{"lineNumber":18,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"oscarlai1998"},"content":"}"}],"authorContributionMap":{"oscarlai1998":19}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oscarlai1998"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"oscarlai1998"},"content":"    private final String name;"},{"lineNumber":3,"author":{"gitId":"oscarlai1998"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":5,"author":{"gitId":"oscarlai1998"},"content":"    public Task(String name) {"},{"lineNumber":6,"author":{"gitId":"oscarlai1998"},"content":"        this.name \u003d name;"},{"lineNumber":7,"author":{"gitId":"oscarlai1998"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":10,"author":{"gitId":"oscarlai1998"},"content":"    public void markAsDone(){"},{"lineNumber":11,"author":{"gitId":"oscarlai1998"},"content":"        isDone \u003d true;"},{"lineNumber":12,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":14,"author":{"gitId":"oscarlai1998"},"content":"    public String getName() {"},{"lineNumber":15,"author":{"gitId":"oscarlai1998"},"content":"        return name;"},{"lineNumber":16,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":18,"author":{"gitId":"oscarlai1998"},"content":"    public String getType(){"},{"lineNumber":19,"author":{"gitId":"oscarlai1998"},"content":"        return \"\";"},{"lineNumber":20,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":22,"author":{"gitId":"oscarlai1998"},"content":"    public String getDate(){"},{"lineNumber":23,"author":{"gitId":"oscarlai1998"},"content":"        return \"\";"},{"lineNumber":24,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":26,"author":{"gitId":"oscarlai1998"},"content":"    public String getStatusIcon() {"},{"lineNumber":27,"author":{"gitId":"oscarlai1998"},"content":"        return (isDone ? \"\\u2713\" : \" \"); //return tick as done and empty as not done"},{"lineNumber":28,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":30,"author":{"gitId":"oscarlai1998"},"content":"}"}],"authorContributionMap":{"oscarlai1998":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oscarlai1998"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"oscarlai1998"},"content":"    public Todo(String description){"},{"lineNumber":3,"author":{"gitId":"oscarlai1998"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":6,"author":{"gitId":"oscarlai1998"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"oscarlai1998"},"content":"    public String getType(){"},{"lineNumber":8,"author":{"gitId":"oscarlai1998"},"content":"        return \"T\";"},{"lineNumber":9,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":11,"author":{"gitId":"oscarlai1998"},"content":"    public String getDate(){"},{"lineNumber":12,"author":{"gitId":"oscarlai1998"},"content":"        return \"\";"},{"lineNumber":13,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"oscarlai1998"},"content":"}"},{"lineNumber":15,"author":{"gitId":"oscarlai1998"},"content":""}],"authorContributionMap":{"oscarlai1998":15}}]
