[{"path":"src/main/java/jarvis/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.EmptyListException;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.HandleException;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.InvalidCommandException;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.InvalidTaskException;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.storage.TextManager;"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.ui.JarvisUi;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    public static final JarvisUi jarvis \u003d new JarvisUi();"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"     * Entry point of the JARVIS application."},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"     * Initialises JARVIS and starts the interaction with the user."},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    public static void main(String[] args) throws InterruptedException {"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"        jarvis.startJarvis();"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"            TextManager.printFileContents();"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"            jarvis.printDivider();"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        } catch (FileNotFoundException exception) {"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"            HandleException.handleFileNotFoundException();"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"        while (true) {"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"            try {"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"                TextManager.writeToFile(jarvis.performTask());"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"            } catch (InvalidCommandException exception) {"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"                HandleException.handleInvalidCommandException();"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"            } catch (IOException exception) {"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"                System.out.println(\"\\tSomething went wrong: \" + exception.getMessage());"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"                jarvis.printDivider();"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"            } catch (EmptyListException exception) {"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"                HandleException.handleEmptyListException();"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"            } catch (InvalidTaskException exception) {"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"                HandleException.handleInvalidTaskException();"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"iamakilahamed":44,"-":3}},{"path":"src/main/java/jarvis/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.commands;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.Duke;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.EmptyListException;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.InvalidTaskException;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.parser.Parser;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.tasklist.TaskList;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":" * Contains methods to run the commands"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"public class Command {"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    private static void addSuccessMessage(Task task) {"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\t\\t\" + task.toString());"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tNow you have \" + TaskList.getSize() + \" tasks in the list.\");"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"    // Terminates JARVIS program"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"    public static void exitJarvis() {"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tGoodbye, sir.\");"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        System.exit(1);"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"    // adds Todo task to the ArrayList"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"    public static void runTodo(String userInput) {"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"        Task todo \u003d Parser.parseStringToTodo(userInput);"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"        TaskList.addToTasks(todo);"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"        addSuccessMessage(todo);"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"    // adds Deadline task to the ArrayList"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"    public static void runDeadline(String userInput) {"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"        Task deadline \u003d Parser.parseStringToDeadline(userInput);"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"        TaskList.addToTasks(deadline);"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"        addSuccessMessage(deadline);"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"    // adds Event task to the ArrayList"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"    public static void runEvent(String userInput) {"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"        Task event \u003d Parser.parseStringToEvent(userInput);"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"        TaskList.addToTasks(event);"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"        addSuccessMessage(event);"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"    // prints out the entire list of tasks"},{"lineNumber":53,"author":{"gitId":"iamakilahamed"},"content":"    public static void runList() throws EmptyListException {"},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":"        if (TaskList.getSize() !\u003d 0) {"},{"lineNumber":55,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tHere are the tasks in your list, sir:\");"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"            for (int i \u003d 0; i \u003c TaskList.getSize(); i++) {"},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"                Task task \u003d TaskList.getTaskWithIndex(i);"},{"lineNumber":58,"author":{"gitId":"iamakilahamed"},"content":"                System.out.println(String.format(\"\\t\\t%d. \", i + 1) + task.toString());"},{"lineNumber":59,"author":{"gitId":"iamakilahamed"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"iamakilahamed"},"content":"            Duke.jarvis.printDivider();"},{"lineNumber":61,"author":{"gitId":"iamakilahamed"},"content":"        } else {    // if there is no task in the ArrayList, throw EmptyListException"},{"lineNumber":62,"author":{"gitId":"iamakilahamed"},"content":"            throw new EmptyListException();"},{"lineNumber":63,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":66,"author":{"gitId":"iamakilahamed"},"content":"    // marks the task as done if the task exist"},{"lineNumber":67,"author":{"gitId":"iamakilahamed"},"content":"    public static void runDone(String command) throws InvalidTaskException {"},{"lineNumber":68,"author":{"gitId":"iamakilahamed"},"content":"        String description \u003d command.replaceFirst(\"done \", \"\");"},{"lineNumber":69,"author":{"gitId":"iamakilahamed"},"content":"        int taskNumber \u003d Integer.parseInt(description.substring(0, 1));"},{"lineNumber":70,"author":{"gitId":"iamakilahamed"},"content":"        if (taskNumber \u003c\u003d TaskList.getSize()) {"},{"lineNumber":71,"author":{"gitId":"iamakilahamed"},"content":"            Task task \u003d TaskList.getTaskWithIndex(taskNumber - 1);"},{"lineNumber":72,"author":{"gitId":"iamakilahamed"},"content":"            task.setTaskStatus(true);"},{"lineNumber":73,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tWell done, sir! I\u0027ve marked this task as done:\");"},{"lineNumber":74,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\t\\t\" + task.toString());"},{"lineNumber":75,"author":{"gitId":"iamakilahamed"},"content":"            Duke.jarvis.printDivider();"},{"lineNumber":76,"author":{"gitId":"iamakilahamed"},"content":"        } else {    // if the task is not in the ArrayList, throw InvalidTaskException"},{"lineNumber":77,"author":{"gitId":"iamakilahamed"},"content":"            throw new InvalidTaskException();"},{"lineNumber":78,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":81,"author":{"gitId":"iamakilahamed"},"content":"    // removes the task from the list if exist"},{"lineNumber":82,"author":{"gitId":"iamakilahamed"},"content":"    public static void runDelete(String command) throws InvalidTaskException {"},{"lineNumber":83,"author":{"gitId":"iamakilahamed"},"content":"        String description \u003d command.replaceFirst(\"delete \", \"\");"},{"lineNumber":84,"author":{"gitId":"iamakilahamed"},"content":"        int taskNumber \u003d Integer.parseInt(description.substring(0, 1));"},{"lineNumber":85,"author":{"gitId":"iamakilahamed"},"content":"        if (taskNumber \u003c\u003d TaskList.getSize()) {"},{"lineNumber":86,"author":{"gitId":"iamakilahamed"},"content":"            Task task \u003d TaskList.getTaskWithIndex(taskNumber - 1);"},{"lineNumber":87,"author":{"gitId":"iamakilahamed"},"content":"            TaskList.removeFromTasks(task);"},{"lineNumber":88,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tNoted, sir! I\u0027ve removed this task:\");"},{"lineNumber":89,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\t\\t\" + task.toString());"},{"lineNumber":90,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tNow you have \" + TaskList.getSize() + \" tasks in the list.\");"},{"lineNumber":91,"author":{"gitId":"iamakilahamed"},"content":"            Duke.jarvis.printDivider();"},{"lineNumber":92,"author":{"gitId":"iamakilahamed"},"content":"        } else {    // if the task is not in the ArrayList, throw InvalidTaskException"},{"lineNumber":93,"author":{"gitId":"iamakilahamed"},"content":"            throw new InvalidTaskException();"},{"lineNumber":94,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":97,"author":{"gitId":"iamakilahamed"},"content":"    // finds task that contains the keyword in the description"},{"lineNumber":98,"author":{"gitId":"iamakilahamed"},"content":"    public static void runFind(String command) {"},{"lineNumber":99,"author":{"gitId":"iamakilahamed"},"content":"        String keyword \u003d Parser.parseFindCommand(command);"},{"lineNumber":100,"author":{"gitId":"iamakilahamed"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d TaskList.getTasksWithKeyword(keyword);"},{"lineNumber":101,"author":{"gitId":"iamakilahamed"},"content":"        if (matchingTasks.size() !\u003d 0) {"},{"lineNumber":102,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tHere are the matching tasks in your list sir:\");"},{"lineNumber":103,"author":{"gitId":"iamakilahamed"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {"},{"lineNumber":104,"author":{"gitId":"iamakilahamed"},"content":"                Task task \u003d TaskList.getTaskWithIndex(i);"},{"lineNumber":105,"author":{"gitId":"iamakilahamed"},"content":"                System.out.println(String.format(\"\\t\\t%d. \", i + 1) + task.toString());"},{"lineNumber":106,"author":{"gitId":"iamakilahamed"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"iamakilahamed"},"content":"        } else {"},{"lineNumber":108,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tUnfortunately, I could not find any tasks containing \" + \"\\\"\"+keyword+\"\\\".\");"},{"lineNumber":109,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":111,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":112}},{"path":"src/main/java/jarvis/exception/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.exception;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"public class EmptyListException extends Exception{"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":4}},{"path":"src/main/java/jarvis/exception/HandleException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.exception;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.Duke;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":" * Manages exceptions"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"public class HandleException {"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    /** handles situation when task is invalid */"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    public static void handleInvalidTaskException() {"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tSorry, sir.\");"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tNo such task was found in the list.\");"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tWould you like to add the task instead?\");"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    /** handles situation when {@code tasks} list is empty */"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    public static void handleEmptyListException() {"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tYou do not have any pending task, sir.\");"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"    /** handles situation when the text file is not found */"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"    public static void handleFileNotFoundException() {"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tUnfortunately, I could not detect any files in the database!\");"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tBut don\u0027t worry sir.\");"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tI will create the files you might be needing later.\");"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"    /** handle situation when user enters an invalid command */"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"    public static void handleInvalidCommandException() {"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tSorry, sir. I do not recognise this command.\");"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":37}},{"path":"src/main/java/jarvis/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.exception;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":4}},{"path":"src/main/java/jarvis/exception/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.exception;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"public class InvalidTaskException extends Exception{"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":4}},{"path":"src/main/java/jarvis/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.parser;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Event;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Todo;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":" * Parses user input."},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"public class Parser {"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"     * Parses user input into {@code Todo} object."},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"     * @param userInput command entered by the user."},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"     * @return a {@code Todo} object."},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    public static Todo parseStringToTodo(String userInput) {"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"        String description \u003d userInput.replaceFirst(\"todo \", \"\");"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"        return new Todo(description);"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"     * Parses user input into {@code Deadline} object"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"     * @param userInput command entered by the user."},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"     * @return a {@code Deadline} object."},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"    public static Deadline parseStringToDeadline(String userInput) {"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"        String task \u003d userInput.replaceFirst(\"deadline \", \"\");"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"        String[] details \u003d task.split(\"/by\", 2);"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"        String description \u003d details[0];"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"        String by \u003d details[1];"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"        return new Deadline(description, by);"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"     * Parses user input into {@code Event} object."},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"     * @param userInput command entered by the user."},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"     * @return a {@code Event} object."},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"    public static Event parseStringToEvent(String userInput) {"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"        String task \u003d userInput.replaceFirst(\"event \", \"\");"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"        String[] details \u003d task.split(\"/at\", 2);"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"        String description \u003d details[0];"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"        String at \u003d details[1];"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"        return new Event(description, at);"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"     * Parses user input to obtain the keyword for finding tasks"},{"lineNumber":53,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":"     * @param userInput command entered by the user."},{"lineNumber":55,"author":{"gitId":"iamakilahamed"},"content":"     * @return the keyword"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"    public static String parseFindCommand(String userInput) {"},{"lineNumber":58,"author":{"gitId":"iamakilahamed"},"content":"        return userInput.replaceFirst(\"find \", \"\");"},{"lineNumber":59,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":60}},{"path":"src/main/java/jarvis/storage/TextDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.storage;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Event;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Todo;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":" * Decodes the text file into a {@code Task} object."},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"public class TextDecoder {"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    private static final int TASK_TYPE_INDEX \u003d 1;"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    private static final int TASK_STATUS_INDEX \u003d 4;"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    private static final int TASK_DESCRIPTION_START_INDEX \u003d 7;"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"     * Decodes the text into a {@code Task} object."},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"     * @param encodedTask task details in String format."},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"     * @return {@code Task} object."},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    public static Task decodeTaskFromString(String encodedTask){"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"        String taskDescription \u003d encodedTask.substring(TASK_DESCRIPTION_START_INDEX);"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"        Task task \u003d new Task(taskDescription);"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"        char taskType \u003d encodedTask.charAt(TASK_TYPE_INDEX);"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"        switch (taskType) {"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        case \u0027T\u0027:"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"            task \u003d new Todo(taskDescription);"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"            task.setTaskStatus(encodedTask.charAt(TASK_STATUS_INDEX) !\u003d \u0027 \u0027);"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"            break;"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"        case \u0027D\u0027:"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"            String[] detailsDeadline \u003d taskDescription.split(\"\\\\(by:\", 2);"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"            String descriptionDeadline \u003d detailsDeadline[0];"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"            String by \u003d detailsDeadline[1].replace(\")\", \"\");"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"            task \u003d new Deadline(descriptionDeadline, by);"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"            task.setTaskStatus(encodedTask.charAt(TASK_STATUS_INDEX) !\u003d \u0027 \u0027);"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"            break;"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"        case \u0027E\u0027:"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"            String[] detailsEvent \u003d taskDescription.split(\"\\\\(at:\", 2);"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"            String descriptionEvent \u003d detailsEvent[0];"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"            String at \u003d detailsEvent[1].replace(\")\", \"\");"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"            task \u003d new Event(descriptionEvent, at);"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"            task.setTaskStatus(encodedTask.charAt(TASK_STATUS_INDEX) !\u003d \u0027 \u0027);"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"            break;"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"        return task;"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":49}},{"path":"src/main/java/jarvis/storage/TextEncoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.storage;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":" * Encodes the {@code Task} object into a text file for storage."},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"public class TextEncoder {"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"     * Encodes {@code Task} object into a string."},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"     * @param task {@code Task} object to encode."},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"     * @return the string format of {@code Task} object."},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    public static String encodeTaskToString(Task task) {"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        return task.toString();"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":19}},{"path":"src/main/java/jarvis/storage/TextManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.storage;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.tasklist.TaskList;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import java.io.FileWriter;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":" * Manages the writing and reading of the text file."},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"public class TextManager {"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"     * Print contents in the text file and adds into {@code tasks}."},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"     * @throws FileNotFoundException if file is not found."},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    public static void printFileContents() throws FileNotFoundException {"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"        File file \u003d new File(\"jarvis.txt\");"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"        Scanner scanner \u003d new Scanner(file);"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"        if (scanner.hasNext()) {"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tHere\u0027s the tasks in your list, sir: \");"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tYou do not have any pending task, sir.\");"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"        while (scanner.hasNext()) {"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"            String encodedTask \u003d scanner.nextLine();"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\t\\t\" + encodedTask);"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"            TaskList.addToTasks(TextDecoder.decodeTaskFromString(encodedTask));"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"     * Write contents in the {@code tasks} list into the text file."},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"     * @param tasks the list of tasks to write into the text file."},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"     * @throws IOException if an input or output exception occurred."},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"    public static void writeToFile(ArrayList\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"        FileWriter fileWriter \u003d new FileWriter(\"jarvis.txt\");"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"        for (Task task : tasks) {"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"            fileWriter.write(TextEncoder.encodeTaskToString(task) + System.lineSeparator());"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"        fileWriter.close();"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":51}},{"path":"src/main/java/jarvis/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.task;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"    protected  String by;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":15}},{"path":"src/main/java/jarvis/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.task;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"    public Event(String description, String at) {"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"        this.at \u003d at;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"        return \"[E]\" + super.toString() + \"(at:\" + at + \")\";"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":15}},{"path":"src/main/java/jarvis/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.task;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    public String getTaskStatus() {"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"        return (isDone ? \"X\" : \" \");    // return X (done) or space (not done)"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    public void setTaskStatus(boolean isDone) {"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"    public String getTaskDescription() {"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"        return description;"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"        return \"[\" + getTaskStatus() + \"] \" + description;"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":28}},{"path":"src/main/java/jarvis/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.task;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"    public Todo(String description) {"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":12}},{"path":"src/main/java/jarvis/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.tasklist;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":" * Contains the task list."},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":" * Contains methods to manipulate and get information about the task list"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"public class TaskList {"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    // returns the list"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        return tasks;"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"    // adds a task into the list"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    public static void addToTasks(Task task) {"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"        tasks.add(task);"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"    // removes a task from the list"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"    public static void removeFromTasks(Task task) {"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"        tasks.remove(task);"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"    // returns the task at a specific index"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"    public static Task getTaskWithIndex(int index) {"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"        return tasks.get(index);"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"    // returns the size of the list"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"    public static int getSize() {"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"        return tasks.size();"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"    // returns an ArrayList that has tasks that matches the keyword"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"    public static ArrayList\u003cTask\u003e getTasksWithKeyword(String keyword) {"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"        for (Task task : tasks) {"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"            if (task.getTaskDescription().contains(keyword)) {"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"                matchingTasks.add(task);"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"        return matchingTasks;"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":50}},{"path":"src/main/java/jarvis/ui/JarvisUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.ui;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.commands.Command;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.EmptyListException;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.InvalidCommandException;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.InvalidTaskException;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.tasklist.TaskList;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"import java.util.concurrent.TimeUnit;"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":" * UI of JARVIS application."},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"public class JarvisUi {"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    private final Scanner in \u003d new Scanner(System.in);    // create Scanner object"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    public JarvisUi() {}"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    public void printDivider() {"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"        String DIVIDER \u003d \"--------------------------------------------------------------------------------------------\";"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"    // initialisation of JARVIS"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"    public void startJarvis() throws InterruptedException {"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"        int DELAY \u003d 500;    // 0.5 seconds delay"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"        printDivider();"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"Importing all preferences from home interface.\");"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"        TimeUnit.MILLISECONDS.sleep(DELAY);"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"Synchronising from the cloud.\");"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"        TimeUnit.MILLISECONDS.sleep(DELAY);"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"Systems are now fully operational.\");"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"        TimeUnit.MILLISECONDS.sleep(DELAY);"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"        System.out.print(\"Initialising\");"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"        TimeUnit.MILLISECONDS.sleep(DELAY);"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"        for (int i \u003d 0; i \u003c\u003d 2; i++) {"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"            System.out.print(\".\");"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"            TimeUnit.MILLISECONDS.sleep(DELAY);"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println();"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"        printDivider();"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tHello, sir. J.A.R.V.I.S at your service.\");"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"        printDivider();"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"    public ArrayList\u003cTask\u003e performTask() throws InvalidCommandException, EmptyListException, InvalidTaskException {"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"        String userInput \u003d in.nextLine();"},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"        if (userInput.startsWith(\"bye\")) {    // bye"},{"lineNumber":53,"author":{"gitId":"iamakilahamed"},"content":"            Command.exitJarvis();"},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":"        } else if (userInput.startsWith(\"todo\")) {     // todo"},{"lineNumber":55,"author":{"gitId":"iamakilahamed"},"content":"            Command.runTodo(userInput);"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"        } else if (userInput.startsWith(\"deadline\")) {    // deadline"},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"            Command.runDeadline(userInput);"},{"lineNumber":58,"author":{"gitId":"iamakilahamed"},"content":"        } else if (userInput.startsWith(\"event\")) {    // event"},{"lineNumber":59,"author":{"gitId":"iamakilahamed"},"content":"            Command.runEvent(userInput);"},{"lineNumber":60,"author":{"gitId":"iamakilahamed"},"content":"        } else if (userInput.startsWith(\"list\")) {    // list"},{"lineNumber":61,"author":{"gitId":"iamakilahamed"},"content":"            Command.runList();"},{"lineNumber":62,"author":{"gitId":"iamakilahamed"},"content":"        } else if (userInput.startsWith(\"done\")) {    // done"},{"lineNumber":63,"author":{"gitId":"iamakilahamed"},"content":"            Command.runDone(userInput);"},{"lineNumber":64,"author":{"gitId":"iamakilahamed"},"content":"        } else if (userInput.startsWith(\"delete\")) {  // delete"},{"lineNumber":65,"author":{"gitId":"iamakilahamed"},"content":"            Command.runDelete(userInput);"},{"lineNumber":66,"author":{"gitId":"iamakilahamed"},"content":"        } else if (userInput.startsWith(\"find\")) {"},{"lineNumber":67,"author":{"gitId":"iamakilahamed"},"content":"            Command.runFind(userInput);"},{"lineNumber":68,"author":{"gitId":"iamakilahamed"},"content":"        } else {    // if invalid command, throw InvalidCommandException"},{"lineNumber":69,"author":{"gitId":"iamakilahamed"},"content":"            throw new InvalidCommandException();"},{"lineNumber":70,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"iamakilahamed"},"content":"        return TaskList.getTaskList();"},{"lineNumber":72,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":73}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"hi"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"list"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"done 1"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"delete 1"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"todo read book"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"deadline return book /by June 6th"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"done 1"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"done 2"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"todo join sports club"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"todo borrow book"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"done 4"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"list"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"delete 3"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"list"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"bye"}],"authorContributionMap":{"iamakilahamed":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\jarvis\\*.java ..\\src\\main\\java\\jarvis\\task\\*.java ..\\src\\main\\java\\jarvis\\exception\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"java -classpath ..\\bin jarvis.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"iamakilahamed":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ..\\src\\main\\java\\jarvis\\*.java ..\\src\\main\\java\\jarvis\\task\\*.java ..\\src\\main\\java\\jarvis\\exception\\*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"java -classpath ../bin jarvis.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"iamakilahamed":2,"-":36}}]
