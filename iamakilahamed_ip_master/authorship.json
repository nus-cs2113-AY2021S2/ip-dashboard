[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"iamakilahamed":9,"-":17}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"    protected  String by;"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"        this.by \u003d by;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"    public static void main(String[] args) throws InterruptedException {"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"        Jarvis jarvis \u003d new Jarvis();"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"        jarvis.startJarvis();"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"        jarvis.performTask();"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"iamakilahamed":4,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"public class Event extends Task{"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"    protected String at;"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"    public Event(String description, String at) {"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"        this.at \u003d at;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"        return \"[E]\" + super.toString() + \"(at:\" + at + \")\";"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":13}},{"path":"src/main/java/Jarvis.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"import java.util.concurrent.TimeUnit;"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"public class Jarvis {"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"    private final Scanner in \u003d new Scanner(System.in);    // create Scanner object"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    private final String DIVIDER \u003d \"------------------------------------------------\";"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"    ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();   // create ArrayList to store all the tasks"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    public Jarvis() {}"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    // initialisation of JARVIS (just for fun)"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    public void startJarvis() throws InterruptedException {"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"Importing all preferences from home interface.\");"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"        int DELAY \u003d 500;    // 0.5 seconds delay"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        TimeUnit.MILLISECONDS.sleep(DELAY);"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"Systems are now fully operational.\");"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"        TimeUnit.MILLISECONDS.sleep(DELAY);"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"        System.out.print(\"Initialising\");"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"        TimeUnit.MILLISECONDS.sleep(DELAY);"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"        for (int i \u003d 0; i \u003c\u003d 2; i++) {"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"            System.out.print(\".\");"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"            TimeUnit.MILLISECONDS.sleep(DELAY);"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println();"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tHello, sir. J.A.R.V.I.S at your service.\");"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"    // print these if task is successfully added in the ArrayList"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"    public void addSuccess(Task task) {"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\t\\t\" + task.toString());"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tNow you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"    // JARVIS stops running"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"    public void exitJarvis() {"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tGoodbye, sir.\");"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"    // adds Todo task to the ArrayList"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"    public void runTodo(String command) {"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"        String description \u003d command.replaceFirst(\"todo \", \"\");"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"        Task todo \u003d new Todo(description);"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"        tasks.add(todo);"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"        addSuccess(todo);"},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":"    // adds Deadline task to the ArrayList"},{"lineNumber":55,"author":{"gitId":"iamakilahamed"},"content":"    public void runDeadline(String command) {"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"        String task \u003d command.replaceFirst(\"deadline \", \"\");"},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"        String[] details \u003d task.split(\"/by\", 2);"},{"lineNumber":58,"author":{"gitId":"iamakilahamed"},"content":"        String description \u003d details[0];"},{"lineNumber":59,"author":{"gitId":"iamakilahamed"},"content":"        String by \u003d details[1];"},{"lineNumber":60,"author":{"gitId":"iamakilahamed"},"content":"        Task deadline \u003d new Deadline(description, by);"},{"lineNumber":61,"author":{"gitId":"iamakilahamed"},"content":"        tasks.add(deadline);"},{"lineNumber":62,"author":{"gitId":"iamakilahamed"},"content":"        addSuccess(deadline);"},{"lineNumber":63,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":65,"author":{"gitId":"iamakilahamed"},"content":"    // adds Event task to the ArrayList"},{"lineNumber":66,"author":{"gitId":"iamakilahamed"},"content":"    public void runEvent(String command) {"},{"lineNumber":67,"author":{"gitId":"iamakilahamed"},"content":"        String task \u003d command.replaceFirst(\"event \", \"\");"},{"lineNumber":68,"author":{"gitId":"iamakilahamed"},"content":"        String[] details \u003d task.split(\"/at\", 2);"},{"lineNumber":69,"author":{"gitId":"iamakilahamed"},"content":"        String description \u003d details[0];"},{"lineNumber":70,"author":{"gitId":"iamakilahamed"},"content":"        String at \u003d details[1];"},{"lineNumber":71,"author":{"gitId":"iamakilahamed"},"content":"        Task event \u003d new Event(description, at);"},{"lineNumber":72,"author":{"gitId":"iamakilahamed"},"content":"        tasks.add(event);"},{"lineNumber":73,"author":{"gitId":"iamakilahamed"},"content":"        addSuccess(event);"},{"lineNumber":74,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":76,"author":{"gitId":"iamakilahamed"},"content":"    // prints out the entire list of tasks"},{"lineNumber":77,"author":{"gitId":"iamakilahamed"},"content":"    public void runList() {"},{"lineNumber":78,"author":{"gitId":"iamakilahamed"},"content":"        if (tasks.size() !\u003d 0) {"},{"lineNumber":79,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tHere are the tasks in your list, sir:\");"},{"lineNumber":80,"author":{"gitId":"iamakilahamed"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":81,"author":{"gitId":"iamakilahamed"},"content":"                Task task \u003d tasks.get(i);"},{"lineNumber":82,"author":{"gitId":"iamakilahamed"},"content":"                System.out.println(String.format(\"\\t\\t%d. \", i + 1) + task.toString());"},{"lineNumber":83,"author":{"gitId":"iamakilahamed"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"iamakilahamed"},"content":"        } else {    // if there is no task in the ArrayList"},{"lineNumber":85,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tYou do not have any pending task, sir.\");"},{"lineNumber":86,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":88,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":90,"author":{"gitId":"iamakilahamed"},"content":"    // marks the task as done if the task exist"},{"lineNumber":91,"author":{"gitId":"iamakilahamed"},"content":"    public void runDone(String command) {"},{"lineNumber":92,"author":{"gitId":"iamakilahamed"},"content":"        String description \u003d command.replaceFirst(\"done \", \"\");"},{"lineNumber":93,"author":{"gitId":"iamakilahamed"},"content":"        int taskNumber \u003d Integer.parseInt(description.substring(0, 1));"},{"lineNumber":94,"author":{"gitId":"iamakilahamed"},"content":"        if (taskNumber \u003c\u003d tasks.size()) {"},{"lineNumber":95,"author":{"gitId":"iamakilahamed"},"content":"            Task task \u003d tasks.get(taskNumber - 1);"},{"lineNumber":96,"author":{"gitId":"iamakilahamed"},"content":"            task.setTaskStatus(true);"},{"lineNumber":97,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tWell done, sir! I\u0027ve marked this task as done:\");"},{"lineNumber":98,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\t\\t\" + task.toString());"},{"lineNumber":99,"author":{"gitId":"iamakilahamed"},"content":"        } else {    // if the task is not in the ArrayList"},{"lineNumber":100,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tSorry, sir.\");"},{"lineNumber":101,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tI am unable to retrieve the information from the database.\");"},{"lineNumber":102,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tWould you like to add the task instead, sir?\");"},{"lineNumber":103,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":105,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":107,"author":{"gitId":"iamakilahamed"},"content":"    // Echo back to user"},{"lineNumber":108,"author":{"gitId":"iamakilahamed"},"content":"    public void runEcho(String command) {"},{"lineNumber":109,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\t\" + command);"},{"lineNumber":110,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":111,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":113,"author":{"gitId":"iamakilahamed"},"content":"    // JARVIS main task manager"},{"lineNumber":114,"author":{"gitId":"iamakilahamed"},"content":"    public void performTask() {"},{"lineNumber":115,"author":{"gitId":"iamakilahamed"},"content":"        while (true) {"},{"lineNumber":116,"author":{"gitId":"iamakilahamed"},"content":"            String command \u003d in.nextLine();"},{"lineNumber":117,"author":{"gitId":"iamakilahamed"},"content":"            if (command.startsWith(\"bye\")) {    // bye"},{"lineNumber":118,"author":{"gitId":"iamakilahamed"},"content":"                exitJarvis();"},{"lineNumber":119,"author":{"gitId":"iamakilahamed"},"content":"                return;"},{"lineNumber":120,"author":{"gitId":"iamakilahamed"},"content":"            } else if (command.startsWith(\"todo\")) {     // todo"},{"lineNumber":121,"author":{"gitId":"iamakilahamed"},"content":"                runTodo(command);"},{"lineNumber":122,"author":{"gitId":"iamakilahamed"},"content":"            } else if (command.startsWith(\"deadline\")) {    // deadline"},{"lineNumber":123,"author":{"gitId":"iamakilahamed"},"content":"                runDeadline(command);"},{"lineNumber":124,"author":{"gitId":"iamakilahamed"},"content":"            } else if (command.startsWith(\"event\")) {    // event"},{"lineNumber":125,"author":{"gitId":"iamakilahamed"},"content":"                runEvent(command);"},{"lineNumber":126,"author":{"gitId":"iamakilahamed"},"content":"            } else if (command.startsWith(\"list\")) {    // list"},{"lineNumber":127,"author":{"gitId":"iamakilahamed"},"content":"                runList();"},{"lineNumber":128,"author":{"gitId":"iamakilahamed"},"content":"            } else if (command.startsWith(\"done\")) {    // done"},{"lineNumber":129,"author":{"gitId":"iamakilahamed"},"content":"                runDone(command);"},{"lineNumber":130,"author":{"gitId":"iamakilahamed"},"content":"            } else {    // echo"},{"lineNumber":131,"author":{"gitId":"iamakilahamed"},"content":"                runEcho(command);"},{"lineNumber":132,"author":{"gitId":"iamakilahamed"},"content":"            }"},{"lineNumber":133,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":135}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    public String getTaskStatus() {"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"        return (isDone ? \"X\" : \" \");    // return X (done) or space (not done)"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    public void setTaskStatus(boolean isDone) {"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"        return \"[\" + getTaskStatus() + \"] \" + description;"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":22}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"public class Todo extends Task{"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"    public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"hi"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"list"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"done 1"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"todo borrow book"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"list"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"deadline return book /by Sunday"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"list"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"list"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"done 2"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"list"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"done 3"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"list"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"bye"}],"authorContributionMap":{"iamakilahamed":15}}]
