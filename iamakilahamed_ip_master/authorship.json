[{"path":"src/main/java/jarvis/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.InvalidCommandException;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Deadline;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Event;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Todo;"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import java.io.File;"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"import java.io.FileWriter;"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"import java.util.Scanner;"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    private static final Jarvis jarvis \u003d new Jarvis();"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    // MAIN program"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"    public static void main(String[] args) throws InterruptedException {"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"        jarvis.startJarvis();"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"            printFileContents();"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"            jarvis.printDivider();"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"        } catch (FileNotFoundException exception) {"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tUnfortunately, I could not detect any files in the database!\");"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tBut don\u0027t worry sir.\");"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tI will create the files you might be needing later.\");"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"            jarvis.printDivider();"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"        while (true) {"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"            try {"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"                writeToFile(jarvis.performTask());"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"            } catch (InvalidCommandException exception) {"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"                System.out.println(\"\\tSorry, sir. I do not recognise this command.\");"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"                jarvis.printDivider();"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"            } catch (IOException exception) {"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"                System.out.println(\"\\tSomething went wrong: \" + exception.getMessage());"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"                jarvis.printDivider();"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"    // Writing into a text file"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"    private static void writeToFile(ArrayList\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"        FileWriter fileWriter \u003d new FileWriter(\"jarvis.txt\");"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"        for (Task task : tasks) {"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"            fileWriter.write(task.toString() + System.lineSeparator());"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"        fileWriter.close();"},{"lineNumber":53,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":55,"author":{"gitId":"iamakilahamed"},"content":"    // Reading contents in the text file"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"    private static void printFileContents() throws FileNotFoundException {"},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"        File file \u003d new File(\"jarvis.txt\");"},{"lineNumber":58,"author":{"gitId":"iamakilahamed"},"content":"        Scanner scanner \u003d new Scanner(file);"},{"lineNumber":59,"author":{"gitId":"iamakilahamed"},"content":"        if (scanner.hasNext()) {"},{"lineNumber":60,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tHere\u0027s the tasks in your list, sir: \");"},{"lineNumber":61,"author":{"gitId":"iamakilahamed"},"content":"        } else {"},{"lineNumber":62,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tYou do not have any pending task, sir.\");"},{"lineNumber":63,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"iamakilahamed"},"content":"        while (scanner.hasNext()) {"},{"lineNumber":65,"author":{"gitId":"iamakilahamed"},"content":"            String line \u003d scanner.nextLine();"},{"lineNumber":66,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\t\\t\" + line);"},{"lineNumber":67,"author":{"gitId":"iamakilahamed"},"content":"            toTaskList(line);"},{"lineNumber":68,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":71,"author":{"gitId":"iamakilahamed"},"content":"    // Method to convert a string to a Task object and add it to the ArrayList"},{"lineNumber":72,"author":{"gitId":"iamakilahamed"},"content":"    private static void toTaskList(String line) {"},{"lineNumber":73,"author":{"gitId":"iamakilahamed"},"content":"        int taskIndex \u003d 1;"},{"lineNumber":74,"author":{"gitId":"iamakilahamed"},"content":"        int statusIndex \u003d 4;"},{"lineNumber":75,"author":{"gitId":"iamakilahamed"},"content":"        int descriptionStartIndex \u003d 7;"},{"lineNumber":76,"author":{"gitId":"iamakilahamed"},"content":"        char taskType \u003d line.charAt(taskIndex);"},{"lineNumber":77,"author":{"gitId":"iamakilahamed"},"content":"        switch (taskType) {"},{"lineNumber":78,"author":{"gitId":"iamakilahamed"},"content":"        case \u0027T\u0027:"},{"lineNumber":79,"author":{"gitId":"iamakilahamed"},"content":"            String descriptionTodo \u003d line.substring(descriptionStartIndex);"},{"lineNumber":80,"author":{"gitId":"iamakilahamed"},"content":"            Task todo \u003d new Todo(descriptionTodo);"},{"lineNumber":81,"author":{"gitId":"iamakilahamed"},"content":"            todo.setTaskStatus(line.charAt(statusIndex) !\u003d \u0027 \u0027);"},{"lineNumber":82,"author":{"gitId":"iamakilahamed"},"content":"            jarvis.tasks.add(todo);"},{"lineNumber":83,"author":{"gitId":"iamakilahamed"},"content":"            break;"},{"lineNumber":84,"author":{"gitId":"iamakilahamed"},"content":"        case \u0027D\u0027:"},{"lineNumber":85,"author":{"gitId":"iamakilahamed"},"content":"            String taskDeadline \u003d line.substring(descriptionStartIndex);"},{"lineNumber":86,"author":{"gitId":"iamakilahamed"},"content":"            String[] detailsDeadline \u003d taskDeadline.split(\"\\\\(by:\", 2);"},{"lineNumber":87,"author":{"gitId":"iamakilahamed"},"content":"            String descriptionDeadline \u003d detailsDeadline[0];"},{"lineNumber":88,"author":{"gitId":"iamakilahamed"},"content":"            String by \u003d detailsDeadline[1].replace(\")\", \"\");"},{"lineNumber":89,"author":{"gitId":"iamakilahamed"},"content":"            Task deadline \u003d new Deadline(descriptionDeadline, by);"},{"lineNumber":90,"author":{"gitId":"iamakilahamed"},"content":"            deadline.setTaskStatus(line.charAt(statusIndex) !\u003d \u0027 \u0027);"},{"lineNumber":91,"author":{"gitId":"iamakilahamed"},"content":"            jarvis.tasks.add(deadline);"},{"lineNumber":92,"author":{"gitId":"iamakilahamed"},"content":"            break;"},{"lineNumber":93,"author":{"gitId":"iamakilahamed"},"content":"        case \u0027E\u0027:"},{"lineNumber":94,"author":{"gitId":"iamakilahamed"},"content":"            String taskEvent \u003d line.substring(descriptionStartIndex);"},{"lineNumber":95,"author":{"gitId":"iamakilahamed"},"content":"            String[] detailsEvent \u003d taskEvent.split(\"\\\\(at:\", 2);"},{"lineNumber":96,"author":{"gitId":"iamakilahamed"},"content":"            String descriptionEvent \u003d detailsEvent[0];"},{"lineNumber":97,"author":{"gitId":"iamakilahamed"},"content":"            String at \u003d detailsEvent[1].replace(\")\", \"\");"},{"lineNumber":98,"author":{"gitId":"iamakilahamed"},"content":"            Task event \u003d new Event(descriptionEvent, at);"},{"lineNumber":99,"author":{"gitId":"iamakilahamed"},"content":"            event.setTaskStatus(line.charAt(statusIndex) !\u003d \u0027 \u0027);"},{"lineNumber":100,"author":{"gitId":"iamakilahamed"},"content":"            jarvis.tasks.add(event);"},{"lineNumber":101,"author":{"gitId":"iamakilahamed"},"content":"            break;"},{"lineNumber":102,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"iamakilahamed":101,"-":3}},{"path":"src/main/java/jarvis/Jarvis.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.EmptyListException;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.InvalidCommandException;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.InvalidTaskException;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Deadline;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Event;"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Todo;"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"import java.util.concurrent.TimeUnit;"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"public class Jarvis {"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    private final Scanner in \u003d new Scanner(System.in);    // create Scanner object"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();   // create ArrayList to store all the tasks"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    public Jarvis() {}"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    public void printDivider() {"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"        String DIVIDER \u003d \"--------------------------------------------------------------------------------------------\";"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"    // initialisation of JARVIS (just for fun)"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"    public void startJarvis() throws InterruptedException {"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        int DELAY \u003d 500;    // 0.5 seconds delay"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"        printDivider();"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"Importing all preferences from home interface.\");"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"        TimeUnit.MILLISECONDS.sleep(DELAY);"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"Synchronising from the cloud.\");"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"        TimeUnit.MILLISECONDS.sleep(DELAY);"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"Systems are now fully operational.\");"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"        TimeUnit.MILLISECONDS.sleep(DELAY);"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"        System.out.print(\"Initialising\");"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"        TimeUnit.MILLISECONDS.sleep(DELAY);"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"        for (int i \u003d 0; i \u003c\u003d 2; i++) {"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"            System.out.print(\".\");"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"            TimeUnit.MILLISECONDS.sleep(DELAY);"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println();"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"        printDivider();"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tHello, sir. J.A.R.V.I.S at your service.\");"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"        printDivider();"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"    // print these if task is successfully added in the ArrayList"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"    public void addSuccess(Task task) {"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\t\\t\" + task.toString());"},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tNow you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":53,"author":{"gitId":"iamakilahamed"},"content":"        printDivider();"},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"    // JARVIS stops running"},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"    public void exitJarvis() {"},{"lineNumber":58,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tGoodbye, sir.\");"},{"lineNumber":59,"author":{"gitId":"iamakilahamed"},"content":"        printDivider();"},{"lineNumber":60,"author":{"gitId":"iamakilahamed"},"content":"        System.exit(1);"},{"lineNumber":61,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":63,"author":{"gitId":"iamakilahamed"},"content":"    // adds Todo task to the ArrayList"},{"lineNumber":64,"author":{"gitId":"iamakilahamed"},"content":"    public void runTodo(String command) {"},{"lineNumber":65,"author":{"gitId":"iamakilahamed"},"content":"        String description \u003d command.replaceFirst(\"todo \", \"\");"},{"lineNumber":66,"author":{"gitId":"iamakilahamed"},"content":"        Task todo \u003d new Todo(description);"},{"lineNumber":67,"author":{"gitId":"iamakilahamed"},"content":"        tasks.add(todo);"},{"lineNumber":68,"author":{"gitId":"iamakilahamed"},"content":"        addSuccess(todo);"},{"lineNumber":69,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":71,"author":{"gitId":"iamakilahamed"},"content":"    // adds Deadline task to the ArrayList"},{"lineNumber":72,"author":{"gitId":"iamakilahamed"},"content":"    public void runDeadline(String command) {"},{"lineNumber":73,"author":{"gitId":"iamakilahamed"},"content":"        String task \u003d command.replaceFirst(\"deadline \", \"\");"},{"lineNumber":74,"author":{"gitId":"iamakilahamed"},"content":"        String[] details \u003d task.split(\"/by\", 2);"},{"lineNumber":75,"author":{"gitId":"iamakilahamed"},"content":"        String description \u003d details[0];"},{"lineNumber":76,"author":{"gitId":"iamakilahamed"},"content":"        String by \u003d details[1];"},{"lineNumber":77,"author":{"gitId":"iamakilahamed"},"content":"        Task deadline \u003d new Deadline(description, by);"},{"lineNumber":78,"author":{"gitId":"iamakilahamed"},"content":"        tasks.add(deadline);"},{"lineNumber":79,"author":{"gitId":"iamakilahamed"},"content":"        addSuccess(deadline);"},{"lineNumber":80,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":82,"author":{"gitId":"iamakilahamed"},"content":"    // adds Event task to the ArrayList"},{"lineNumber":83,"author":{"gitId":"iamakilahamed"},"content":"    public void runEvent(String command) {"},{"lineNumber":84,"author":{"gitId":"iamakilahamed"},"content":"        String task \u003d command.replaceFirst(\"event \", \"\");"},{"lineNumber":85,"author":{"gitId":"iamakilahamed"},"content":"        String[] details \u003d task.split(\"/at\", 2);"},{"lineNumber":86,"author":{"gitId":"iamakilahamed"},"content":"        String description \u003d details[0];"},{"lineNumber":87,"author":{"gitId":"iamakilahamed"},"content":"        String at \u003d details[1];"},{"lineNumber":88,"author":{"gitId":"iamakilahamed"},"content":"        Task event \u003d new Event(description, at);"},{"lineNumber":89,"author":{"gitId":"iamakilahamed"},"content":"        tasks.add(event);"},{"lineNumber":90,"author":{"gitId":"iamakilahamed"},"content":"        addSuccess(event);"},{"lineNumber":91,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":93,"author":{"gitId":"iamakilahamed"},"content":"    // prints out the entire list of tasks"},{"lineNumber":94,"author":{"gitId":"iamakilahamed"},"content":"    public void runList() throws EmptyListException {"},{"lineNumber":95,"author":{"gitId":"iamakilahamed"},"content":"        if (tasks.size() !\u003d 0) {"},{"lineNumber":96,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tHere are the tasks in your list, sir:\");"},{"lineNumber":97,"author":{"gitId":"iamakilahamed"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":98,"author":{"gitId":"iamakilahamed"},"content":"                Task task \u003d tasks.get(i);"},{"lineNumber":99,"author":{"gitId":"iamakilahamed"},"content":"                System.out.println(String.format(\"\\t\\t%d. \", i + 1) + task.toString());"},{"lineNumber":100,"author":{"gitId":"iamakilahamed"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"iamakilahamed"},"content":"            printDivider();"},{"lineNumber":102,"author":{"gitId":"iamakilahamed"},"content":"        } else {    // if there is no task in the ArrayList, throw EmptyListException"},{"lineNumber":103,"author":{"gitId":"iamakilahamed"},"content":"            throw new EmptyListException();"},{"lineNumber":104,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":107,"author":{"gitId":"iamakilahamed"},"content":"    // marks the task as done if the task exist"},{"lineNumber":108,"author":{"gitId":"iamakilahamed"},"content":"    public void runDone(String command) throws InvalidTaskException {"},{"lineNumber":109,"author":{"gitId":"iamakilahamed"},"content":"        String description \u003d command.replaceFirst(\"done \", \"\");"},{"lineNumber":110,"author":{"gitId":"iamakilahamed"},"content":"        int taskNumber \u003d Integer.parseInt(description.substring(0, 1));"},{"lineNumber":111,"author":{"gitId":"iamakilahamed"},"content":"        if (taskNumber \u003c\u003d tasks.size()) {"},{"lineNumber":112,"author":{"gitId":"iamakilahamed"},"content":"            Task task \u003d tasks.get(taskNumber - 1);"},{"lineNumber":113,"author":{"gitId":"iamakilahamed"},"content":"            task.setTaskStatus(true);"},{"lineNumber":114,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tWell done, sir! I\u0027ve marked this task as done:\");"},{"lineNumber":115,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\t\\t\" + task.toString());"},{"lineNumber":116,"author":{"gitId":"iamakilahamed"},"content":"            printDivider();"},{"lineNumber":117,"author":{"gitId":"iamakilahamed"},"content":"        } else {    // if the task is not in the ArrayList, throw InvalidTaskException"},{"lineNumber":118,"author":{"gitId":"iamakilahamed"},"content":"            throw new InvalidTaskException();"},{"lineNumber":119,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":122,"author":{"gitId":"iamakilahamed"},"content":"    // handles InvalidTaskException"},{"lineNumber":123,"author":{"gitId":"iamakilahamed"},"content":"    public void handleInvalidTaskException() {"},{"lineNumber":124,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tSorry, sir.\");"},{"lineNumber":125,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tNo such task was found in the list.\");"},{"lineNumber":126,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tWould you like to add the task instead?\");"},{"lineNumber":127,"author":{"gitId":"iamakilahamed"},"content":"        printDivider();"},{"lineNumber":128,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":130,"author":{"gitId":"iamakilahamed"},"content":"    // handles EmptyListException"},{"lineNumber":131,"author":{"gitId":"iamakilahamed"},"content":"    public void handleEmptyListException() {"},{"lineNumber":132,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tYou do not have any pending task, sir.\");"},{"lineNumber":133,"author":{"gitId":"iamakilahamed"},"content":"        printDivider();"},{"lineNumber":134,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":136,"author":{"gitId":"iamakilahamed"},"content":"    // removes the task from the list if exist"},{"lineNumber":137,"author":{"gitId":"iamakilahamed"},"content":"    public void runDelete(String command) throws InvalidTaskException {"},{"lineNumber":138,"author":{"gitId":"iamakilahamed"},"content":"        String description \u003d command.replaceFirst(\"delete \", \"\");"},{"lineNumber":139,"author":{"gitId":"iamakilahamed"},"content":"        int taskNumber \u003d Integer.parseInt(description.substring(0, 1));"},{"lineNumber":140,"author":{"gitId":"iamakilahamed"},"content":"        if (taskNumber \u003c\u003d tasks.size()) {"},{"lineNumber":141,"author":{"gitId":"iamakilahamed"},"content":"            Task task \u003d tasks.get(taskNumber - 1);"},{"lineNumber":142,"author":{"gitId":"iamakilahamed"},"content":"            tasks.remove(task);"},{"lineNumber":143,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tNoted, sir! I\u0027ve removed this task:\");"},{"lineNumber":144,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\t\\t\" + task.toString());"},{"lineNumber":145,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tNow you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":146,"author":{"gitId":"iamakilahamed"},"content":"            printDivider();"},{"lineNumber":147,"author":{"gitId":"iamakilahamed"},"content":"        } else {    // if the task is not in the ArrayList, throw InvalidTaskException"},{"lineNumber":148,"author":{"gitId":"iamakilahamed"},"content":"            throw new InvalidTaskException();"},{"lineNumber":149,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":152,"author":{"gitId":"iamakilahamed"},"content":"    // JARVIS main task manager"},{"lineNumber":153,"author":{"gitId":"iamakilahamed"},"content":"    public ArrayList\u003cTask\u003e performTask() throws InvalidCommandException {"},{"lineNumber":154,"author":{"gitId":"iamakilahamed"},"content":"        String command \u003d in.nextLine();"},{"lineNumber":155,"author":{"gitId":"iamakilahamed"},"content":"        if (command.startsWith(\"bye\")) {    // bye"},{"lineNumber":156,"author":{"gitId":"iamakilahamed"},"content":"            exitJarvis();"},{"lineNumber":157,"author":{"gitId":"iamakilahamed"},"content":"        } else if (command.startsWith(\"todo\")) {     // todo"},{"lineNumber":158,"author":{"gitId":"iamakilahamed"},"content":"            runTodo(command);"},{"lineNumber":159,"author":{"gitId":"iamakilahamed"},"content":"        } else if (command.startsWith(\"deadline\")) {    // deadline"},{"lineNumber":160,"author":{"gitId":"iamakilahamed"},"content":"            runDeadline(command);"},{"lineNumber":161,"author":{"gitId":"iamakilahamed"},"content":"        } else if (command.startsWith(\"event\")) {    // event"},{"lineNumber":162,"author":{"gitId":"iamakilahamed"},"content":"            runEvent(command);"},{"lineNumber":163,"author":{"gitId":"iamakilahamed"},"content":"        } else if (command.startsWith(\"list\")) {    // list"},{"lineNumber":164,"author":{"gitId":"iamakilahamed"},"content":"            try {"},{"lineNumber":165,"author":{"gitId":"iamakilahamed"},"content":"                runList();"},{"lineNumber":166,"author":{"gitId":"iamakilahamed"},"content":"            } catch (EmptyListException exception) {"},{"lineNumber":167,"author":{"gitId":"iamakilahamed"},"content":"                handleEmptyListException();"},{"lineNumber":168,"author":{"gitId":"iamakilahamed"},"content":"            }"},{"lineNumber":169,"author":{"gitId":"iamakilahamed"},"content":"        } else if (command.startsWith(\"done\")) {    // done"},{"lineNumber":170,"author":{"gitId":"iamakilahamed"},"content":"            try {"},{"lineNumber":171,"author":{"gitId":"iamakilahamed"},"content":"                runDone(command);"},{"lineNumber":172,"author":{"gitId":"iamakilahamed"},"content":"            } catch (InvalidTaskException exception) {"},{"lineNumber":173,"author":{"gitId":"iamakilahamed"},"content":"                handleInvalidTaskException();"},{"lineNumber":174,"author":{"gitId":"iamakilahamed"},"content":"            }"},{"lineNumber":175,"author":{"gitId":"iamakilahamed"},"content":"        } else if (command.startsWith(\"delete\")) {"},{"lineNumber":176,"author":{"gitId":"iamakilahamed"},"content":"            try {"},{"lineNumber":177,"author":{"gitId":"iamakilahamed"},"content":"                runDelete(command);"},{"lineNumber":178,"author":{"gitId":"iamakilahamed"},"content":"            } catch (InvalidTaskException exception) {"},{"lineNumber":179,"author":{"gitId":"iamakilahamed"},"content":"                handleInvalidTaskException();"},{"lineNumber":180,"author":{"gitId":"iamakilahamed"},"content":"            }"},{"lineNumber":181,"author":{"gitId":"iamakilahamed"},"content":"        } else {    // if invalid command, throw InvalidCommandException"},{"lineNumber":182,"author":{"gitId":"iamakilahamed"},"content":"            throw new InvalidCommandException();"},{"lineNumber":183,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":184,"author":{"gitId":"iamakilahamed"},"content":"        return tasks;"},{"lineNumber":185,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":186}},{"path":"src/main/java/jarvis/exception/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.exception;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"public class EmptyListException extends Exception{"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":4}},{"path":"src/main/java/jarvis/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.exception;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":4}},{"path":"src/main/java/jarvis/exception/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.exception;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"public class InvalidTaskException extends Exception{"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":4}},{"path":"src/main/java/jarvis/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.task;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"    protected  String by;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":15}},{"path":"src/main/java/jarvis/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.task;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"public class Event extends Task{"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"    public Event(String description, String at) {"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"        this.at \u003d at;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"        return \"[E]\" + super.toString() + \"(at:\" + at + \")\";"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":15}},{"path":"src/main/java/jarvis/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.task;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    public String getTaskStatus() {"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"        return (isDone ? \"X\" : \" \");    // return X (done) or space (not done)"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    public void setTaskStatus(boolean isDone) {"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"        return \"[\" + getTaskStatus() + \"] \" + description;"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":24}},{"path":"src/main/java/jarvis/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.task;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"public class Todo extends Task{"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"    public Todo(String description) {"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"hi"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"list"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"done 1"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"delete 1"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"todo read book"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"deadline return book /by June 6th"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"done 1"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"done 2"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"todo join sports club"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"todo borrow book"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"done 4"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"list"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"delete 3"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"list"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"bye"}],"authorContributionMap":{"iamakilahamed":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\jarvis\\*.java ..\\src\\main\\java\\jarvis\\task\\*.java ..\\src\\main\\java\\jarvis\\exception\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"java -classpath ..\\bin jarvis.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"iamakilahamed":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ..\\src\\main\\java\\jarvis\\*.java ..\\src\\main\\java\\jarvis\\task\\*.java ..\\src\\main\\java\\jarvis\\exception\\*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"java -classpath ../bin jarvis.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"iamakilahamed":2,"-":36}}]
