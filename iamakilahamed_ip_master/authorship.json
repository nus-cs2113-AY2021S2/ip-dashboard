[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"# _J.A.R.V.I.S._"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"_J.A.R.V.I.S._ (_JARVIS_) is a **cross-platform desktop task manager app, optimized for use via a Command Line Interface (CLI)**. "},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"If you can type fast, _JARVIS_ can manage your tasks faster than traditional Graphical User Interface (GUI) apps."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"## Setting up _JARVIS_"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"**Prerequisites:** Ensure that you have **Java 11** or above installed in your Computer."},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"Set up _JARVIS_ as follows:"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"1. Create an empty folder you want to use as the _home folder_ for _JARVIS_."},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"1. Download the latest `JARVIS.jar` from [here](https://github.com/iamakilahamed/ip/releases)."},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"1. Copy the jar file to the folder you created earlier."},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"1. Open a command window to that folder."},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"1. Run the command `java -jar JARVIS.jar` (i.e., run the command in the same folder as the jar file)."},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"1. If the setup is correct, you should see something like the output below after approximately 5 seconds."},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"   --------------------------------------------------------------------------------------------"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"   Importing all preferences from home interface."},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"   Synchronising from the cloud."},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"   Systems are now fully operational."},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"   Initialising..."},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"   --------------------------------------------------------------------------------------------"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"       Hello, sir. J.A.R.V.I.S. at your service."},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"   --------------------------------------------------------------------------------------------"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"       Unfortunately, I could not detect any files in the database!"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"       But don\u0027t worry sir."},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"       I will create the files you might be needing later."},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"   --------------------------------------------------------------------------------------------"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"1. Type the command in the command window and press Enter to execute it. Refer [here](https://iamakilahamed.github.io/ip/) "},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"   for a detailed user guide."}],"authorContributionMap":{"iamakilahamed":26,"-":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"# _J.A.R.V.I.S._ User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"_J.A.R.V.I.S._ (_JARVIS_) is a **cross-platform desktop task manager app, optimized for use via a Command Line Interface (CLI)**."},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"If you can type fast, _JARVIS_ can manage your tasks faster than traditional Graphical User Interface (GUI) apps."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"----"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"### Table of Contents"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"* [Quick start](README.md#quick-start)"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"    - [For new user](README.md#for-new-user)"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    - [For existing user](README.md#for-existing-user)"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"* [Features](README.md#features)"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    - [Adding a todo task : `todo`](README.md#adding-a-todo-task--todo)"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    - [Adding a deadline task : `deadline`](README.md#adding-a-deadline-task--deadline)"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    - [Adding an event task : `event`](README.md#adding-an-event-task--event)"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    - [Deleting a task : `delete`](README.md#deleting-a-task--delete)"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    - [Marking a task as done : `done`](README.md#marking-a-task-as-done--done)"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    - [Viewing all the tasks : `list`](README.md#viewing-all-the-tasks--list)"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    - [Searching tasks by a keyword : `find`](README.md#searching-tasks-by-a-keyword--find)"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    - [Exiting _JARVIS_ : `bye`](README.md#exiting-jarvis--bye)"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"* [FAQ](README.md#faq)"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"* [Command summary](README.md#command-summary)"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"---"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"## Quick start"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"\u003e **Prerequisites:** Ensure that you have **Java 11** or above installed in your Computer."},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"### For new user"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"Set up _JARVIS_ as follows:"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"1. Create an empty folder you want to use as the _home folder_ for _JARVIS_."},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"1. Download the latest `JARVIS.jar` from [here](https://github.com/iamakilahamed/ip/releases)."},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"1. Copy the jar file to the folder you created earlier."},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"1. Open a command window to that folder."},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"1. Run the command `java -jar JARVIS.jar` (i.e., run the command in the same folder as the jar file)."},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"1. If the setup is correct, you should see something like the output below after approximately 5 seconds."},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"   ```"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"   --------------------------------------------------------------------------------------------"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"   Importing all preferences from home interface."},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"   Synchronising from the cloud."},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"   Systems are now fully operational."},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"   Initialising..."},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"   --------------------------------------------------------------------------------------------"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"       Hello, sir. J.A.R.V.I.S. at your service."},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"   --------------------------------------------------------------------------------------------"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"       Unfortunately, I could not detect any files in the database!"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"       But don\u0027t worry sir."},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"       I will create the files you might be needing later."},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"   --------------------------------------------------------------------------------------------"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"   ```"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"1. Type the command in the command window and press Enter to execute it. Refer to "},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"   [Features](README.md#features) below for details of each command.   "},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":"### For existing user"},{"lineNumber":55,"author":{"gitId":"iamakilahamed"},"content":"Open _JARVIS_ as follows:"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"1. Open a command window to the _home folder_ where you have copied `JARVIS.jar`."},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"1. Run the command `java -jar JARVIS.jar` (i.e, run the command in the same folder as the jar file)."},{"lineNumber":58,"author":{"gitId":"iamakilahamed"},"content":"1. If you already have a `jarvis.txt` in the folder containing the jar file, you should see something like the output "},{"lineNumber":59,"author":{"gitId":"iamakilahamed"},"content":"  below after approximately 5 seconds."},{"lineNumber":60,"author":{"gitId":"iamakilahamed"},"content":"   "},{"lineNumber":61,"author":{"gitId":"iamakilahamed"},"content":"   ```"},{"lineNumber":62,"author":{"gitId":"iamakilahamed"},"content":"   --------------------------------------------------------------------------------------------"},{"lineNumber":63,"author":{"gitId":"iamakilahamed"},"content":"   Importing all preferences from home interface."},{"lineNumber":64,"author":{"gitId":"iamakilahamed"},"content":"   Synchronising from the cloud."},{"lineNumber":65,"author":{"gitId":"iamakilahamed"},"content":"   Systems are now fully operational."},{"lineNumber":66,"author":{"gitId":"iamakilahamed"},"content":"   Initialising..."},{"lineNumber":67,"author":{"gitId":"iamakilahamed"},"content":"   --------------------------------------------------------------------------------------------"},{"lineNumber":68,"author":{"gitId":"iamakilahamed"},"content":"       Hello, sir. J.A.R.V.I.S. at your service."},{"lineNumber":69,"author":{"gitId":"iamakilahamed"},"content":"   --------------------------------------------------------------------------------------------"},{"lineNumber":70,"author":{"gitId":"iamakilahamed"},"content":"       Here\u0027s the tasks in your list, sir: "},{"lineNumber":71,"author":{"gitId":"iamakilahamed"},"content":"           [T][ ] task 1"},{"lineNumber":72,"author":{"gitId":"iamakilahamed"},"content":"           [D][ ] task 2 (by: date and time)"},{"lineNumber":73,"author":{"gitId":"iamakilahamed"},"content":"           [E][ ] task 3 (at: location, date and time)"},{"lineNumber":74,"author":{"gitId":"iamakilahamed"},"content":"   --------------------------------------------------------------------------------------------"},{"lineNumber":75,"author":{"gitId":"iamakilahamed"},"content":"   ```"},{"lineNumber":76,"author":{"gitId":"iamakilahamed"},"content":"   However, if you do not have a `jarvis.txt` in the folder containing the jar file, you should see something like the"},{"lineNumber":77,"author":{"gitId":"iamakilahamed"},"content":"   output below after approximately 5 seconds."},{"lineNumber":78,"author":{"gitId":"iamakilahamed"},"content":"   "},{"lineNumber":79,"author":{"gitId":"iamakilahamed"},"content":"   ```"},{"lineNumber":80,"author":{"gitId":"iamakilahamed"},"content":"   --------------------------------------------------------------------------------------------"},{"lineNumber":81,"author":{"gitId":"iamakilahamed"},"content":"   Importing all preferences from home interface."},{"lineNumber":82,"author":{"gitId":"iamakilahamed"},"content":"   Synchronising from the cloud."},{"lineNumber":83,"author":{"gitId":"iamakilahamed"},"content":"   Systems are now fully operational."},{"lineNumber":84,"author":{"gitId":"iamakilahamed"},"content":"   Initialising..."},{"lineNumber":85,"author":{"gitId":"iamakilahamed"},"content":"   --------------------------------------------------------------------------------------------"},{"lineNumber":86,"author":{"gitId":"iamakilahamed"},"content":"       Hello, sir. J.A.R.V.I.S. at your service."},{"lineNumber":87,"author":{"gitId":"iamakilahamed"},"content":"   --------------------------------------------------------------------------------------------"},{"lineNumber":88,"author":{"gitId":"iamakilahamed"},"content":"       You do not have any pending task, sir."},{"lineNumber":89,"author":{"gitId":"iamakilahamed"},"content":"   --------------------------------------------------------------------------------------------"},{"lineNumber":90,"author":{"gitId":"iamakilahamed"},"content":"   ```"},{"lineNumber":91,"author":{"gitId":"iamakilahamed"},"content":"1. Type the command in the command window and press Enter to execute it. Refer to "},{"lineNumber":92,"author":{"gitId":"iamakilahamed"},"content":"   [Features](README.md#features) below for details of each command."},{"lineNumber":93,"author":{"gitId":"iamakilahamed"},"content":"   "},{"lineNumber":94,"author":{"gitId":"iamakilahamed"},"content":"--- "},{"lineNumber":95,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":96,"author":{"gitId":"iamakilahamed"},"content":"\u003e **Note:**"},{"lineNumber":97,"author":{"gitId":"iamakilahamed"},"content":"\u003e * Command should always be in `lower_case`. It is always the first word supplied by the user."},{"lineNumber":98,"author":{"gitId":"iamakilahamed"},"content":"\u003e "},{"lineNumber":99,"author":{"gitId":"iamakilahamed"},"content":"\u003e   e.g. `list`, `todo TASK` and `delete 3`."},{"lineNumber":100,"author":{"gitId":"iamakilahamed"},"content":"\u003e "},{"lineNumber":101,"author":{"gitId":"iamakilahamed"},"content":"\u003e "},{"lineNumber":102,"author":{"gitId":"iamakilahamed"},"content":"\u003e * Words in `UPPER_CASE` are the parameters to be supplied by the user."},{"lineNumber":103,"author":{"gitId":"iamakilahamed"},"content":"\u003e"},{"lineNumber":104,"author":{"gitId":"iamakilahamed"},"content":"\u003e   e.g. in `todo TASK`, `TASK` is a parameter which can be used as `todo task 1`."},{"lineNumber":105,"author":{"gitId":"iamakilahamed"},"content":"\u003e "},{"lineNumber":106,"author":{"gitId":"iamakilahamed"},"content":"\u003e "},{"lineNumber":107,"author":{"gitId":"iamakilahamed"},"content":"\u003e * Extraneous parameters for commands that do not take in parameters (such as `list` and `bye`) will be ignored. "},{"lineNumber":108,"author":{"gitId":"iamakilahamed"},"content":"\u003e "},{"lineNumber":109,"author":{"gitId":"iamakilahamed"},"content":"\u003e    e.g. if the command specifies `bye 123`, it will be interpreted as `bye`."},{"lineNumber":110,"author":{"gitId":"iamakilahamed"},"content":"\u003e "},{"lineNumber":111,"author":{"gitId":"iamakilahamed"},"content":"\u003e "},{"lineNumber":112,"author":{"gitId":"iamakilahamed"},"content":"\u003e * Whenever the task list is updated, `jarvis.txt` will be automatically updated if it already exists in the same"},{"lineNumber":113,"author":{"gitId":"iamakilahamed"},"content":"\u003e   directory as the `JARVIS.jar` file. If `jarvis.txt` is missing, it will be automatically created within the same"},{"lineNumber":114,"author":{"gitId":"iamakilahamed"},"content":"\u003e   directory as the jar file."},{"lineNumber":115,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":116,"author":{"gitId":"iamakilahamed"},"content":"### Adding a todo task : `todo`"},{"lineNumber":117,"author":{"gitId":"iamakilahamed"},"content":"Adds a todo task to the task list."},{"lineNumber":118,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":119,"author":{"gitId":"iamakilahamed"},"content":"Format: `todo TASK_DESCRIPTION`"},{"lineNumber":120,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":121,"author":{"gitId":"iamakilahamed"},"content":"Example: `todo read book`"},{"lineNumber":122,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":123,"author":{"gitId":"iamakilahamed"},"content":"Expected outcome:"},{"lineNumber":124,"author":{"gitId":"iamakilahamed"},"content":"```"},{"lineNumber":125,"author":{"gitId":"iamakilahamed"},"content":"    Got it. I\u0027ve added this task:"},{"lineNumber":126,"author":{"gitId":"iamakilahamed"},"content":"        [T][ ] read book"},{"lineNumber":127,"author":{"gitId":"iamakilahamed"},"content":"    Now you have 1 tasks in the list."},{"lineNumber":128,"author":{"gitId":"iamakilahamed"},"content":"--------------------------------------------------------------------------------------------"},{"lineNumber":129,"author":{"gitId":"iamakilahamed"},"content":"```"},{"lineNumber":130,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":131,"author":{"gitId":"iamakilahamed"},"content":"### Adding a deadline task : `deadline`"},{"lineNumber":132,"author":{"gitId":"iamakilahamed"},"content":"Adds a deadline task to the task list."},{"lineNumber":133,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":134,"author":{"gitId":"iamakilahamed"},"content":"Format: `deadline TASK_DESCRIPTION /by DETAILS`"},{"lineNumber":135,"author":{"gitId":"iamakilahamed"},"content":"* `DETAILS` can be in any format and order."},{"lineNumber":136,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":137,"author":{"gitId":"iamakilahamed"},"content":"Example: `deadline complete assignment /by 6 March 2021, 2359`"},{"lineNumber":138,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":139,"author":{"gitId":"iamakilahamed"},"content":"Expected outcome:"},{"lineNumber":140,"author":{"gitId":"iamakilahamed"},"content":"```"},{"lineNumber":141,"author":{"gitId":"iamakilahamed"},"content":"    Got it. I\u0027ve added this task:"},{"lineNumber":142,"author":{"gitId":"iamakilahamed"},"content":"        [D][ ] complete assignment (by: 6 March 2021, 2359)"},{"lineNumber":143,"author":{"gitId":"iamakilahamed"},"content":"    Now you have 2 tasks in the list."},{"lineNumber":144,"author":{"gitId":"iamakilahamed"},"content":"--------------------------------------------------------------------------------------------"},{"lineNumber":145,"author":{"gitId":"iamakilahamed"},"content":"```"},{"lineNumber":146,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":147,"author":{"gitId":"iamakilahamed"},"content":"### Adding an event task : `event`"},{"lineNumber":148,"author":{"gitId":"iamakilahamed"},"content":"Adds an event task to the task list."},{"lineNumber":149,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":150,"author":{"gitId":"iamakilahamed"},"content":"Format: `event TASK_DESCRIPTION /at DETAILS`"},{"lineNumber":151,"author":{"gitId":"iamakilahamed"},"content":"* Similar to `deadline`, `DETAILS` can be in any format and order."},{"lineNumber":152,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":153,"author":{"gitId":"iamakilahamed"},"content":"Example: `event project meeting /at NUS, 25 Feb 2021, 2-4pm`"},{"lineNumber":154,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":155,"author":{"gitId":"iamakilahamed"},"content":"Expected outcome:"},{"lineNumber":156,"author":{"gitId":"iamakilahamed"},"content":"```"},{"lineNumber":157,"author":{"gitId":"iamakilahamed"},"content":"    Got it. I\u0027ve added this task:"},{"lineNumber":158,"author":{"gitId":"iamakilahamed"},"content":"        [E][ ] project meeting (at: NUS, 25 Feb 2021, 2-4pm)"},{"lineNumber":159,"author":{"gitId":"iamakilahamed"},"content":"    Now you have 3 tasks in the list."},{"lineNumber":160,"author":{"gitId":"iamakilahamed"},"content":"--------------------------------------------------------------------------------------------"},{"lineNumber":161,"author":{"gitId":"iamakilahamed"},"content":"```"},{"lineNumber":162,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":163,"author":{"gitId":"iamakilahamed"},"content":"### Deleting a task : `delete`"},{"lineNumber":164,"author":{"gitId":"iamakilahamed"},"content":"Deletes the specified task from the task list."},{"lineNumber":165,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":166,"author":{"gitId":"iamakilahamed"},"content":"Format: `delete INDEX`"},{"lineNumber":167,"author":{"gitId":"iamakilahamed"},"content":"* Deletes the task at the specified `INDEX`."},{"lineNumber":168,"author":{"gitId":"iamakilahamed"},"content":"* The `INDEX` refers to the index number shown in the displayed task list."},{"lineNumber":169,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":170,"author":{"gitId":"iamakilahamed"},"content":"Example: `delete 2`"},{"lineNumber":171,"author":{"gitId":"iamakilahamed"},"content":"* Deletes the 2nd task in the task list."},{"lineNumber":172,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":173,"author":{"gitId":"iamakilahamed"},"content":"Expected outcome:"},{"lineNumber":174,"author":{"gitId":"iamakilahamed"},"content":"```"},{"lineNumber":175,"author":{"gitId":"iamakilahamed"},"content":"    Noted, sir! I\u0027ve removed this task:"},{"lineNumber":176,"author":{"gitId":"iamakilahamed"},"content":"        [D][ ] complete assignment (by: 6 March 2021, 2359)"},{"lineNumber":177,"author":{"gitId":"iamakilahamed"},"content":"    Now you have 2 tasks in the list."},{"lineNumber":178,"author":{"gitId":"iamakilahamed"},"content":"--------------------------------------------------------------------------------------------"},{"lineNumber":179,"author":{"gitId":"iamakilahamed"},"content":"```"},{"lineNumber":180,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":181,"author":{"gitId":"iamakilahamed"},"content":"### Marking a task as done : `done`"},{"lineNumber":182,"author":{"gitId":"iamakilahamed"},"content":"Marks the task at the specified `INDEX` as done with `X`."},{"lineNumber":183,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":184,"author":{"gitId":"iamakilahamed"},"content":"Format: `done INDEX`"},{"lineNumber":185,"author":{"gitId":"iamakilahamed"},"content":"* Marks the task at the specified `INDEX` with `X`."},{"lineNumber":186,"author":{"gitId":"iamakilahamed"},"content":"* The `INDEX` refers to the index number shown in the displayed task list."},{"lineNumber":187,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":188,"author":{"gitId":"iamakilahamed"},"content":"Example: `done 2`"},{"lineNumber":189,"author":{"gitId":"iamakilahamed"},"content":"* Marks the 2nd task in the task list as done with `X`."},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":192,"author":{"gitId":"iamakilahamed"},"content":"```"},{"lineNumber":193,"author":{"gitId":"iamakilahamed"},"content":"    Well done, sir! I\u0027ve marked this task as done:"},{"lineNumber":194,"author":{"gitId":"iamakilahamed"},"content":"        [E][X] project meeting (at: NUS, 25 Feb 2021, 2-4pm)"},{"lineNumber":195,"author":{"gitId":"iamakilahamed"},"content":"--------------------------------------------------------------------------------------------"},{"lineNumber":196,"author":{"gitId":"iamakilahamed"},"content":"```"},{"lineNumber":197,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":198,"author":{"gitId":"iamakilahamed"},"content":"### Viewing all the tasks : `list`"},{"lineNumber":199,"author":{"gitId":"iamakilahamed"},"content":"Shows a list of all the tasks in the task list."},{"lineNumber":200,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":201,"author":{"gitId":"iamakilahamed"},"content":"Format: `list`"},{"lineNumber":202,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":203,"author":{"gitId":"iamakilahamed"},"content":"Example: `list`"},{"lineNumber":204,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":205,"author":{"gitId":"iamakilahamed"},"content":"Expected outcome:"},{"lineNumber":206,"author":{"gitId":"iamakilahamed"},"content":"```"},{"lineNumber":207,"author":{"gitId":"iamakilahamed"},"content":"    Here are the tasks in your list, sir:"},{"lineNumber":208,"author":{"gitId":"iamakilahamed"},"content":"        1. [T][ ] read book"},{"lineNumber":209,"author":{"gitId":"iamakilahamed"},"content":"        2. [E][X] project meeting (at: NUS, 25 Feb 2021, 2-4pm)"},{"lineNumber":210,"author":{"gitId":"iamakilahamed"},"content":"--------------------------------------------------------------------------------------------"},{"lineNumber":211,"author":{"gitId":"iamakilahamed"},"content":"```"},{"lineNumber":212,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":213,"author":{"gitId":"iamakilahamed"},"content":"### Searching tasks by a keyword : `find`"},{"lineNumber":214,"author":{"gitId":"iamakilahamed"},"content":"Finds tasks which descriptions contain the given keyword."},{"lineNumber":215,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":216,"author":{"gitId":"iamakilahamed"},"content":"Format: `find KEYWORD`"},{"lineNumber":217,"author":{"gitId":"iamakilahamed"},"content":"* The search is case-sensitive. e.g. `BOOKS` will not match `book`"},{"lineNumber":218,"author":{"gitId":"iamakilahamed"},"content":"* Only the description is searched."},{"lineNumber":219,"author":{"gitId":"iamakilahamed"},"content":"* Partial words will be matched. e.g. `meet` will match `meeting`"},{"lineNumber":220,"author":{"gitId":"iamakilahamed"},"content":"* All tasks matching with the given keyword will be returned."},{"lineNumber":221,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":222,"author":{"gitId":"iamakilahamed"},"content":"Example: `find meet`"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"iamakilahamed"},"content":"Expected outcome:"},{"lineNumber":225,"author":{"gitId":"iamakilahamed"},"content":"```"},{"lineNumber":226,"author":{"gitId":"iamakilahamed"},"content":"        1. [E][X] project meeting (at: NUS, 25 Feb 2021, 2-4pm)"},{"lineNumber":227,"author":{"gitId":"iamakilahamed"},"content":"--------------------------------------------------------------------------------------------"},{"lineNumber":228,"author":{"gitId":"iamakilahamed"},"content":"```"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"iamakilahamed"},"content":"### Exiting JARVIS : `bye`"},{"lineNumber":231,"author":{"gitId":"iamakilahamed"},"content":"Exits the program."},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"iamakilahamed"},"content":"Format: `bye`"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"iamakilahamed"},"content":"Example: `bye`"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"iamakilahamed"},"content":"Expected outcome:"},{"lineNumber":238,"author":{"gitId":"iamakilahamed"},"content":"```"},{"lineNumber":239,"author":{"gitId":"iamakilahamed"},"content":"    Goodbye, sir."},{"lineNumber":240,"author":{"gitId":"iamakilahamed"},"content":"--------------------------------------------------------------------------------------------"},{"lineNumber":241,"author":{"gitId":"iamakilahamed"},"content":"```"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"iamakilahamed"},"content":"---"},{"lineNumber":244,"author":{"gitId":"iamakilahamed"},"content":"## FAQ"},{"lineNumber":245,"author":{"gitId":"iamakilahamed"},"content":"**Q:** How do I transfer my data to another computer?"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"iamakilahamed"},"content":"**A:** The `jarvis.txt` is a text file and can be easily transferred from one computer to another through cloud-based "},{"lineNumber":248,"author":{"gitId":"iamakilahamed"},"content":"       storage platforms like Google Drive for example. To install JARVIS, follow steps 1 to 3 of "},{"lineNumber":249,"author":{"gitId":"iamakilahamed"},"content":"       [For new user](README.md#for-new-user) or you can directly download the latest `JARVIS.jar` "},{"lineNumber":250,"author":{"gitId":"iamakilahamed"},"content":"       [here](https://github.com/iamakilahamed/ip/releases) if you are an experienced JARVIS user."},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"iamakilahamed"},"content":"---"},{"lineNumber":253,"author":{"gitId":"iamakilahamed"},"content":"## Command summary"},{"lineNumber":254,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":255,"author":{"gitId":"iamakilahamed"},"content":"Action | Format, Examples"},{"lineNumber":256,"author":{"gitId":"iamakilahamed"},"content":"--- | ---"},{"lineNumber":257,"author":{"gitId":"iamakilahamed"},"content":"Add Todo | `todo TASK_DESCRIPTION` e.g. `todo read book`"},{"lineNumber":258,"author":{"gitId":"iamakilahamed"},"content":"Add Deadline | `deadline TASK_DESCRIPTION /by DETAILS` e.g. `deadline complete assignment /by 6 March 2021, 2359` "},{"lineNumber":259,"author":{"gitId":"iamakilahamed"},"content":"Add Event | `event TASK_DESCRIPTION /at DETAILS` e.g. `event project meeting /at NUS, 25 Feb 2021, 2-4pm`"},{"lineNumber":260,"author":{"gitId":"iamakilahamed"},"content":"Delete | `delete INDEX` e.g. `delete 2`"},{"lineNumber":261,"author":{"gitId":"iamakilahamed"},"content":"Mark as done | `done INDEX` e.g. `done 2`"},{"lineNumber":262,"author":{"gitId":"iamakilahamed"},"content":"List | `list`"},{"lineNumber":263,"author":{"gitId":"iamakilahamed"},"content":"Find | `find KEYWORD` e.g. `find meet`"},{"lineNumber":264,"author":{"gitId":"iamakilahamed"},"content":"Exit | `bye`"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"iamakilahamed"},"content":"---"}],"authorContributionMap":{"iamakilahamed":247,"-":19}},{"path":"src/main/java/jarvis/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.*;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.storage.TextManager;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.ui.JarvisUi;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":" * Entry point of the JARVIS program."},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":" * Initialises the program and starts the interaction with the user."},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    public static final JarvisUi jarvis \u003d new JarvisUi();"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    public static void main(String[] args) throws InterruptedException {"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"        jarvis.startJarvis();"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"        /* Reads jarvis.txt file if it exists in the folder */"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"            TextManager.printFileContents();"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"            jarvis.printDivider();"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"        } catch (FileNotFoundException exception) {"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"            ExceptionHandler.handleFileNotFoundException();"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"        /*"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"         * JARVIS program gets commands from user and executes it."},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"         * jarvis.txt file is written whenever the list is updated."},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"         */"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"        while (true) {"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"            try {"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"                TextManager.writeToFile(jarvis.performTask());"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"            } catch (InvalidCommandException exception) {"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"                ExceptionHandler.handleInvalidCommandException();"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"            } catch (IOException exception) {"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"                ExceptionHandler.handleIOException(exception);"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"            } catch (EmptyListException exception) {"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"                ExceptionHandler.handleEmptyListException();"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"            } catch (InvalidTaskException exception) {"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"                ExceptionHandler.handleInvalidTaskException();"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"            } catch (EmptyDescriptionException exception) {"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"                ExceptionHandler.handleEmptyDescriptionException();"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"            } catch (EmptyKeywordException exception) {"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"                ExceptionHandler.handleEmptyKeywordException();"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"            } catch (NoMatchException exception) {"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"                ExceptionHandler.handleNoMatchException();"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"            } catch (EmptyTaskIdException exception) {"},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"                ExceptionHandler.handleEmptyTaskIdException();"},{"lineNumber":53,"author":{"gitId":"iamakilahamed"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"iamakilahamed":53,"-":3}},{"path":"src/main/java/jarvis/commands/AddDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.commands;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.EmptyDescriptionException;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"public class AddDeadline extends Command {"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"     * Adds a deadline task to the list"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"     * @param userInput string entered by the user"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"     * @throws EmptyDescriptionException when description of the deadline task is empty"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    public static void execute(String userInput) throws EmptyDescriptionException {"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        Task deadline \u003d Parser.parseStringToDeadline(userInput);"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        TaskList.addToTasks(deadline);"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"        addSuccessMessage(deadline);"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":21}},{"path":"src/main/java/jarvis/commands/AddEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.commands;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.EmptyDescriptionException;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"public class AddEvent extends Command {"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"     * Adds an event task to the list"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"     * @param userInput string entered by the user"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"     * @throws EmptyDescriptionException when description of the event task is empty"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    public static void execute(String userInput) throws EmptyDescriptionException {"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        Task deadline \u003d Parser.parseStringToEvent(userInput);"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        TaskList.addToTasks(deadline);"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"        addSuccessMessage(deadline);"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":21}},{"path":"src/main/java/jarvis/commands/AddTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.commands;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.EmptyDescriptionException;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"public class AddTodo extends Command {"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"     * Adds a todo task to the list"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"     * @param userInput string entered by the user"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"     * @throws EmptyDescriptionException when description of the event task is empty"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    public static void execute(String userInput) throws EmptyDescriptionException {"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        Task deadline \u003d Parser.parseStringToTodo(userInput);"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        TaskList.addToTasks(deadline);"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"        addSuccessMessage(deadline);"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":21}},{"path":"src/main/java/jarvis/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.commands;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.Duke;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"public abstract class Command {"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"     * Prints a message when a task is added to the list"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"     * @param task the task to be added into the list"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    protected static void addSuccessMessage(Task task) {"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\t\\t\" + task.toString());"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tNow you have \" + TaskList.getSize() + \" tasks in the list.\");"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":20}},{"path":"src/main/java/jarvis/commands/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.commands;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.Duke;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.EmptyTaskIdException;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.InvalidTaskException;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.parser.Parser;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"public class Delete extends Command{"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"     * Removes a task from the list if it exist"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"     * @param command command entered by the user"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"     * @throws EmptyTaskIdException if task number is not stated by the user"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"     * @throws InvalidTaskException if the task is not in the list"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    public static void execute(String command) throws InvalidTaskException, EmptyTaskIdException {"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"        int taskNumber \u003d Integer.parseInt(Parser.parseToGetTaskId(command));"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"        if (taskNumber \u003e TaskList.getSize()) {"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"            throw new InvalidTaskException();"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"        Task task \u003d TaskList.getTaskWithIndex(taskNumber - 1);"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"        TaskList.removeFromTasks(task);"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tNoted, sir! I\u0027ve removed this task:\");"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\t\\t\" + task.toString());"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tNow you have \" + TaskList.getSize() + \" tasks in the list.\");"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":31}},{"path":"src/main/java/jarvis/commands/Done.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.commands;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.Duke;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.EmptyTaskIdException;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.InvalidTaskException;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.parser.Parser;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"public class Done extends Command {"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"     * Marks a task as done if it exists"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"     * @param command command entered by the user"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"     * @throws EmptyTaskIdException if task number is not stated by the user"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"     * @throws InvalidTaskException if the task is not in the list"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    public static void execute(String command) throws InvalidTaskException, EmptyTaskIdException {"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"        int taskNumber \u003d Integer.parseInt(Parser.parseToGetTaskId(command));"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"        if (taskNumber \u003e TaskList.getSize()) {"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"            throw new InvalidTaskException();"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"        Task task \u003d TaskList.getTaskWithIndex(taskNumber - 1);"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"        task.setTaskStatus(true);"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tWell done, sir! I\u0027ve marked this task as done:\");"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\t\\t\" + task.toString());"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":30}},{"path":"src/main/java/jarvis/commands/ExitJarvis.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.commands;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.Duke;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"public class ExitJarvis extends Command {"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    /** Terminates JARVIS program */"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"    public static void execute() {"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tGoodbye, sir.\");"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"        System.exit(0);"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":13}},{"path":"src/main/java/jarvis/commands/Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.commands;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.Duke;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.EmptyKeywordException;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.NoMatchException;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.parser.Parser;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"public class Find extends Command {"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"     * Searches for the tasks in the list that contain the keyword in the description"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"     * @param command command entered by the user"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"     * @throws EmptyKeywordException if no keyword is stated by the user"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"     * @throws NoMatchException if no task that matches the keyword was found"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    public static void execute(String command) throws EmptyKeywordException, NoMatchException {"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"        String keyword \u003d Parser.parseFindCommand(command);"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"        int matchingTaskCount \u003d 0;"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"        for (Task task : TaskList.getTaskList()) {"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"            if (task.getTaskDescription().contains(keyword)) {"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"                System.out.println(String.format(\"\\t\\t%d. \", matchingTaskCount + 1) + task.toString());"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"                ++matchingTaskCount;"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        if (matchingTaskCount \u003d\u003d 0) {"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"            throw new NoMatchException();"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":33}},{"path":"src/main/java/jarvis/commands/Help.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.commands;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"public class Help extends Command {"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"    private static void print(String sentence) {"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(sentence);"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"    public static void execute() {"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"        print(\"\\tPerhaps this will help you in getting started sir:\");"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"        print(\"\\t\\t1. todo \u003cdescription\u003e                   - Adds a new Todo task\");"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"        print(\"\\t\\t2. deadline \u003cdescription\u003e /by \u003cdetails\u003e - Adds a new Deadline task\");"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"        print(\"\\t\\t3. event \u003cdescription\u003e /at \u003cdetails\u003e    - Adds a new Event task\");"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"        print(\"\\t\\t4. delete \u003ctask number\u003e                 - Deletes the task\");"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"        print(\"\\t\\t5. done \u003ctask number\u003e                   - Marks the task as done\");"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"        print(\"\\t\\t6. list                                 - Displays all the tasks\");"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        print(\"\\t\\t7. find \u003ckeyword\u003e                       - Search for all the tasks with the keyword\");"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        print(\"\\t\\t8. bye                                  - Exits JARVIS\");"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":20}},{"path":"src/main/java/jarvis/commands/ListTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.commands;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.Duke;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.EmptyListException;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"public class ListTasks extends Command {"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"     * Prints out all the tasks in the list"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"     * @throws EmptyListException if there is no task in the list"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    public static void execute() throws EmptyListException {"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"        if (TaskList.getSize() \u003d\u003d 0) {"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"            throw new EmptyListException();"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tHere are the tasks in your list, sir:\");"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"        for (int i \u003d 0; i \u003c TaskList.getSize(); i++) {"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"            Task task \u003d TaskList.getTaskWithIndex(i);"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(String.format(\"\\t\\t%d. \", i + 1) + task.toString());"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":26}},{"path":"src/main/java/jarvis/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.exception;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":" * Signals that the user did not provide any description after entering the todo, deadline or event command"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"public class EmptyDescriptionException extends Exception {"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":7}},{"path":"src/main/java/jarvis/exception/EmptyKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.exception;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":" * Signals that the user did not did not enter the keyword after entering the find command"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"public class EmptyKeywordException extends Exception {"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":7}},{"path":"src/main/java/jarvis/exception/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.exception;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":" * Signals that the list is empty."},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"public class EmptyListException extends Exception{"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":7}},{"path":"src/main/java/jarvis/exception/EmptyTaskIdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.exception;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":" * Signals that the user did not provide the task ID after entering the done or delete command"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"public class EmptyTaskIdException extends Exception {"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":7}},{"path":"src/main/java/jarvis/exception/ExceptionHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.exception;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.Duke;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.commands.Help;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":" * Manages exceptions"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"public class ExceptionHandler {"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    /** Handles situation when task is invalid */"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    public static void handleInvalidTaskException() {"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tSorry sir, no such task was found in the list.\");"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    /** Handles situation when list is empty */"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    public static void handleEmptyListException() {"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tYou do not have any pending task, sir.\");"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    /** Handles situation when the text file is not found */"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"    public static void handleFileNotFoundException() {"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tUnfortunately, I could not detect any files in the database!\");"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tBut don\u0027t worry sir.\");"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tI will create the files you might be needing later.\");"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"    /** Handles situation when user enters an invalid command */"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"    public static void handleInvalidCommandException() {"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tSorry sir, I do not recognise this command.\");"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"        Help.execute();"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"    /** Handles IOException situations */"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"    public static void handleIOException(Exception exception) {"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tSomething went wrong sir: \" + exception.getMessage());"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"    /** Handles situation when user forgets to enter the task description */"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"    public static void handleEmptyDescriptionException() {"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tSorry sir, you need to include a description of the task as well.\");"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"    /** Handles situation when user forgets to enter a keyword */"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"    public static void handleEmptyKeywordException() {"},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tSorry sir, you need to include a keyword so that I can filter out the required tasks.\");"},{"lineNumber":53,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"    /** Handles situation when no task in the list matches the keyword given by the user */"},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"    public static void handleNoMatchException() {"},{"lineNumber":58,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tThere no task in the list that matches your search, sir.\");"},{"lineNumber":59,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":60,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":62,"author":{"gitId":"iamakilahamed"},"content":"    /** Handles situation when user forgets to provide the task number */"},{"lineNumber":63,"author":{"gitId":"iamakilahamed"},"content":"    public static void handleEmptyTaskIdException() {"},{"lineNumber":64,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tSorry sir, you need to include the task ID too.\");"},{"lineNumber":65,"author":{"gitId":"iamakilahamed"},"content":"        Duke.jarvis.printDivider();"},{"lineNumber":66,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":67}},{"path":"src/main/java/jarvis/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.exception;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":" * Signals that some given command by the user is invalid"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":7}},{"path":"src/main/java/jarvis/exception/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.exception;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":" * Signals that a task is not in the list."},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"public class InvalidTaskException extends Exception{"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":7}},{"path":"src/main/java/jarvis/exception/NoMatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.exception;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":" * Signals that no match was found when trying to find tasks using keyword"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"public class NoMatchException extends Exception {"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":7}},{"path":"src/main/java/jarvis/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.parser;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.EmptyDescriptionException;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.EmptyKeywordException;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.EmptyTaskIdException;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Deadline;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Event;"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Todo;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":" * Parses user input."},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"public class Parser {"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    private static String[] splitUserInput(String userInput) {"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"        String[] command \u003d userInput.split(\" \", 2);"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        return command.length \u003d\u003d 2 ? command : new String[] {command[0], \"\"};"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"     * Parses user input into a Todo object."},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"     * @param userInput command entered by the user."},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"     * @return a Todo object."},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"     * @throws EmptyDescriptionException if task description is empty."},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"    public static Todo parseStringToTodo(String userInput) throws EmptyDescriptionException {"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        String[] command \u003d splitUserInput(userInput);"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"        String description \u003d command[1];"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"        if (description.equals(\"\")) {"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"            throw new EmptyDescriptionException();"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"        return new Todo(description);"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"     * Parses user input into a Deadline object"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"     * @param userInput command entered by the user."},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"     * @return a Deadline object."},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"     * @throws EmptyDescriptionException if task description is empty."},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"    public static Deadline parseStringToDeadline(String userInput) throws EmptyDescriptionException {"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"        String[] command \u003d splitUserInput(userInput);"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"        String description \u003d command[1];"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"        if (description.equals(\"\")) {"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"            throw new EmptyDescriptionException();"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"        String[] descriptionArray \u003d description.split(\"/by \", 2);"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"        String details \u003d descriptionArray[0];"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"        String by \u003d descriptionArray[1];"},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"        return new Deadline(details, by);"},{"lineNumber":53,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":55,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"     * Parses user input into an Event object."},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"iamakilahamed"},"content":"     * @param userInput command entered by the user."},{"lineNumber":59,"author":{"gitId":"iamakilahamed"},"content":"     * @return an Event object."},{"lineNumber":60,"author":{"gitId":"iamakilahamed"},"content":"     * @throws EmptyDescriptionException if task description is empty."},{"lineNumber":61,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"iamakilahamed"},"content":"    public static Event parseStringToEvent(String userInput) throws EmptyDescriptionException {"},{"lineNumber":63,"author":{"gitId":"iamakilahamed"},"content":"        String[] command \u003d splitUserInput(userInput);"},{"lineNumber":64,"author":{"gitId":"iamakilahamed"},"content":"        String description \u003d command[1];"},{"lineNumber":65,"author":{"gitId":"iamakilahamed"},"content":"        if (description.equals(\"\")) {"},{"lineNumber":66,"author":{"gitId":"iamakilahamed"},"content":"            throw new EmptyDescriptionException();"},{"lineNumber":67,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"iamakilahamed"},"content":"        String[] descriptionArray \u003d description.split(\"/at \", 2);"},{"lineNumber":69,"author":{"gitId":"iamakilahamed"},"content":"        String details \u003d descriptionArray[0];"},{"lineNumber":70,"author":{"gitId":"iamakilahamed"},"content":"        String at \u003d descriptionArray[1];"},{"lineNumber":71,"author":{"gitId":"iamakilahamed"},"content":"        return new Event(details, at);"},{"lineNumber":72,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":74,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"iamakilahamed"},"content":"     * Parses user input to obtain the keyword for finding tasks"},{"lineNumber":76,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"iamakilahamed"},"content":"     * @param userInput command entered by the user."},{"lineNumber":78,"author":{"gitId":"iamakilahamed"},"content":"     * @return the keyword that is used to search in the list"},{"lineNumber":79,"author":{"gitId":"iamakilahamed"},"content":"     * @throws EmptyKeywordException if keyword is missing"},{"lineNumber":80,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"iamakilahamed"},"content":"    public static String parseFindCommand(String userInput) throws EmptyKeywordException {"},{"lineNumber":82,"author":{"gitId":"iamakilahamed"},"content":"        String[] command \u003d splitUserInput(userInput);"},{"lineNumber":83,"author":{"gitId":"iamakilahamed"},"content":"        if (command[1].equals(\"\")) {"},{"lineNumber":84,"author":{"gitId":"iamakilahamed"},"content":"            throw new EmptyKeywordException();"},{"lineNumber":85,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"iamakilahamed"},"content":"        return command[1];"},{"lineNumber":87,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":89,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"iamakilahamed"},"content":"     * Parses user input to obtain the task ID"},{"lineNumber":91,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"iamakilahamed"},"content":"     * @param userInput command entered by the user."},{"lineNumber":93,"author":{"gitId":"iamakilahamed"},"content":"     * @return task ID in the list"},{"lineNumber":94,"author":{"gitId":"iamakilahamed"},"content":"     * @throws EmptyTaskIdException if keyword is missing"},{"lineNumber":95,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"iamakilahamed"},"content":"    public static String parseToGetTaskId(String userInput) throws EmptyTaskIdException {"},{"lineNumber":97,"author":{"gitId":"iamakilahamed"},"content":"        String[] command \u003d splitUserInput(userInput);"},{"lineNumber":98,"author":{"gitId":"iamakilahamed"},"content":"        if (command[1].equals(\"\")) {"},{"lineNumber":99,"author":{"gitId":"iamakilahamed"},"content":"            throw new EmptyTaskIdException();"},{"lineNumber":100,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"iamakilahamed"},"content":"        return command[1];"},{"lineNumber":102,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":103}},{"path":"src/main/java/jarvis/storage/TextDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.storage;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Event;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Todo;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":" * Decodes the text file into a Task object."},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"public class TextDecoder {"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    private static final int TASK_TYPE_INDEX \u003d 1;"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    private static final int TASK_STATUS_INDEX \u003d 4;"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    private static final int TASK_DESCRIPTION_START_INDEX \u003d 7;"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"     * Decodes the text into a Task object."},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"     * @param encodedTask task details in String format."},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"     * @return a Task object."},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    public static Task decodeTaskFromString(String encodedTask){"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"        String taskDescription \u003d encodedTask.substring(TASK_DESCRIPTION_START_INDEX);"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"        Task task \u003d new Task(taskDescription);"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"        char taskType \u003d encodedTask.charAt(TASK_TYPE_INDEX);"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"        switch (taskType) {"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        case \u0027T\u0027:"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"            task \u003d new Todo(taskDescription);"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"            task.setTaskStatus(encodedTask.charAt(TASK_STATUS_INDEX) !\u003d \u0027 \u0027);"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"            break;"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"        case \u0027D\u0027:"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"            String[] detailsDeadline \u003d taskDescription.split(\"\\\\(by: \", 2);"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"            String descriptionDeadline \u003d detailsDeadline[0];"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"            String by \u003d detailsDeadline[1].replace(\")\", \"\");"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"            task \u003d new Deadline(descriptionDeadline, by);"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"            task.setTaskStatus(encodedTask.charAt(TASK_STATUS_INDEX) !\u003d \u0027 \u0027);"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"            break;"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"        case \u0027E\u0027:"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"            String[] detailsEvent \u003d taskDescription.split(\"\\\\(at: \", 2);"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"            String descriptionEvent \u003d detailsEvent[0];"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"            String at \u003d detailsEvent[1].replace(\")\", \"\");"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"            task \u003d new Event(descriptionEvent, at);"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"            task.setTaskStatus(encodedTask.charAt(TASK_STATUS_INDEX) !\u003d \u0027 \u0027);"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"            break;"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"        return task;"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":49}},{"path":"src/main/java/jarvis/storage/TextEncoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.storage;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":" * Encodes a Task object into a text file for storage."},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"public class TextEncoder {"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"     * Encodes a Task object into a string."},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"     * @param task Task object to encode."},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"     * @return the string format of the Task object."},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    public static String encodeTaskToString(Task task) {"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        return task.toString();"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":19}},{"path":"src/main/java/jarvis/storage/TextManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.storage;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import java.io.FileWriter;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":" * Manages the writing and reading of the text file."},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"public class TextManager {"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"     * Print contents in the text file and adds into list."},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"     * @throws FileNotFoundException if file is not found."},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    public static void printFileContents() throws FileNotFoundException {"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"        File file \u003d new File(\"jarvis.txt\");"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"        Scanner scanner \u003d new Scanner(file);"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"        if (scanner.hasNext()) {"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tHere\u0027s the tasks in your list, sir: \");"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\tYou do not have any pending task, sir.\");"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"        while (scanner.hasNext()) {"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"            String encodedTask \u003d scanner.nextLine();"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"            System.out.println(\"\\t\\t\" + encodedTask);"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"            TaskList.addToTasks(TextDecoder.decodeTaskFromString(encodedTask));"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"     * Write contents in the list into the text file."},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"     * @param tasks the list of tasks to write into the text file."},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"     * @throws IOException if an input or output exception occurred."},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"    public static void writeToFile(ArrayList\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"        FileWriter fileWriter \u003d new FileWriter(\"jarvis.txt\");"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"        for (Task task : tasks) {"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"            fileWriter.write(TextEncoder.encodeTaskToString(task) + System.lineSeparator());"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"        fileWriter.close();"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":51}},{"path":"src/main/java/jarvis/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.task;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":" * Represents a deadline task"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"    protected  String by;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"        this.by \u003d by;"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":19}},{"path":"src/main/java/jarvis/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.task;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":" * Represents an event task"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"    protected String at;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    public Event(String description, String at) {"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"        this.at \u003d at;"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":19}},{"path":"src/main/java/jarvis/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.task;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":" * Represents a general task"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"    protected String description;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    public Task(String description) {"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"        this.description \u003d description;"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"        this.isDone \u003d false;"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    public String getTaskStatus() {"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"    public void setTaskStatus(boolean isDone) {"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"    public String getTaskDescription() {"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"        return description;"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"        return \"[\" + getTaskStatus() + \"] \" + description;"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":32}},{"path":"src/main/java/jarvis/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.task;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":" * Contains the task list."},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":" * Contains methods to manipulate and get information about the task list"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"        return tasks;"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    public static void addToTasks(Task task) {"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        tasks.add(task);"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    public static void removeFromTasks(Task task) {"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"        tasks.remove(task);"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"    /** returns the task at a specific index in the tasks list */"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"    public static Task getTaskWithIndex(int index) {"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"        return tasks.get(index);"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"    public static int getSize() {"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"        return tasks.size();"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":33}},{"path":"src/main/java/jarvis/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.task;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":" * Represents a todo task"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"    public Todo(String description) {"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":16}},{"path":"src/main/java/jarvis/ui/JarvisUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package jarvis.ui;"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.commands.*;"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.exception.*;"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.Task;"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import jarvis.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"import java.util.concurrent.TimeUnit;"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":" * UI of JARVIS application."},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":" */"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"public class JarvisUi {"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    private final Scanner in \u003d new Scanner(System.in);"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    public JarvisUi() {}"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    public void printDivider() {"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"        String DIVIDER \u003d \"--------------------------------------------------------------------------------------------\";"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"    /** Prints a welcome message */"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"    public void startJarvis() throws InterruptedException {"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        int DELAY \u003d 500;    // 0.5 seconds delay"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"        printDivider();"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"Importing all preferences from home interface.\");"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"        TimeUnit.MILLISECONDS.sleep(DELAY);"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"Synchronising from the cloud.\");"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"        TimeUnit.MILLISECONDS.sleep(DELAY);"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"Systems are now fully operational.\");"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"        TimeUnit.MILLISECONDS.sleep(DELAY);"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"        System.out.print(\"Initialising\");"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"        TimeUnit.MILLISECONDS.sleep(DELAY);"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"        for (int i \u003d 0; i \u003c\u003d 2; i++) {"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"            System.out.print(\".\");"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"            TimeUnit.MILLISECONDS.sleep(DELAY);"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println();"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"        printDivider();"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"\\tHello, sir. J.A.R.V.I.S. at your service.\");"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"        printDivider();"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":""},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"     * Executes the command depending on user input"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"     * @return the list of tasks"},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"     * @throws InvalidCommandException if the command provided by the user is invalid"},{"lineNumber":53,"author":{"gitId":"iamakilahamed"},"content":"     * @throws EmptyListException if the list is empty"},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":"     * @throws InvalidTaskException if the task is not in the list"},{"lineNumber":55,"author":{"gitId":"iamakilahamed"},"content":"     * @throws EmptyDescriptionException if the task description is not given by the user"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"     * @throws EmptyTaskIdException if the task number is not given by the user"},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"     * @throws NoMatchException if no tasks in the list matches the keyword provided by the user"},{"lineNumber":58,"author":{"gitId":"iamakilahamed"},"content":"     * @throws EmptyKeywordException if the keyword is not provided by the user"},{"lineNumber":59,"author":{"gitId":"iamakilahamed"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"iamakilahamed"},"content":"    public ArrayList\u003cTask\u003e performTask() throws InvalidCommandException, EmptyListException, InvalidTaskException,"},{"lineNumber":61,"author":{"gitId":"iamakilahamed"},"content":"            EmptyDescriptionException, EmptyTaskIdException, NoMatchException, EmptyKeywordException {"},{"lineNumber":62,"author":{"gitId":"iamakilahamed"},"content":"        String userInput \u003d in.nextLine();"},{"lineNumber":63,"author":{"gitId":"iamakilahamed"},"content":"        if (userInput.startsWith(\"bye\")) {"},{"lineNumber":64,"author":{"gitId":"iamakilahamed"},"content":"            ExitJarvis.execute();"},{"lineNumber":65,"author":{"gitId":"iamakilahamed"},"content":"        } else if (userInput.startsWith(\"todo\")) {"},{"lineNumber":66,"author":{"gitId":"iamakilahamed"},"content":"            AddTodo.execute(userInput);"},{"lineNumber":67,"author":{"gitId":"iamakilahamed"},"content":"        } else if (userInput.startsWith(\"deadline\")) {"},{"lineNumber":68,"author":{"gitId":"iamakilahamed"},"content":"            AddDeadline.execute(userInput);"},{"lineNumber":69,"author":{"gitId":"iamakilahamed"},"content":"        } else if (userInput.startsWith(\"event\")) {"},{"lineNumber":70,"author":{"gitId":"iamakilahamed"},"content":"            AddEvent.execute(userInput);"},{"lineNumber":71,"author":{"gitId":"iamakilahamed"},"content":"        } else if (userInput.startsWith(\"list\")) {"},{"lineNumber":72,"author":{"gitId":"iamakilahamed"},"content":"            ListTasks.execute();"},{"lineNumber":73,"author":{"gitId":"iamakilahamed"},"content":"        } else if (userInput.startsWith(\"done\")) {"},{"lineNumber":74,"author":{"gitId":"iamakilahamed"},"content":"            Done.execute(userInput);"},{"lineNumber":75,"author":{"gitId":"iamakilahamed"},"content":"        } else if (userInput.startsWith(\"delete\")) {"},{"lineNumber":76,"author":{"gitId":"iamakilahamed"},"content":"            Delete.execute(userInput);"},{"lineNumber":77,"author":{"gitId":"iamakilahamed"},"content":"        } else if (userInput.startsWith(\"find\")) {"},{"lineNumber":78,"author":{"gitId":"iamakilahamed"},"content":"            Find.execute(userInput);"},{"lineNumber":79,"author":{"gitId":"iamakilahamed"},"content":"        } else {"},{"lineNumber":80,"author":{"gitId":"iamakilahamed"},"content":"            throw new InvalidCommandException();"},{"lineNumber":81,"author":{"gitId":"iamakilahamed"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"iamakilahamed"},"content":"        return TaskList.getTaskList();"},{"lineNumber":83,"author":{"gitId":"iamakilahamed"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"iamakilahamed"},"content":"}"}],"authorContributionMap":{"iamakilahamed":84}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"hi"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"list"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"done 1"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"delete 1"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"todo read book"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"deadline return book /by June 6th"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"done 1"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"done 2"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"todo join sports club"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"todo borrow book"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"done 4"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"list"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"delete 3"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"list"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"bye"}],"authorContributionMap":{"iamakilahamed":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\jarvis\\*.java ..\\src\\main\\java\\jarvis\\task\\*.java ..\\src\\main\\java\\jarvis\\exception\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"java -classpath ..\\bin jarvis.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"iamakilahamed":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ..\\src\\main\\java\\jarvis\\*.java ..\\src\\main\\java\\jarvis\\task\\*.java ..\\src\\main\\java\\jarvis\\exception\\*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"java -classpath ../bin jarvis.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"iamakilahamed":2,"-":36}}]
