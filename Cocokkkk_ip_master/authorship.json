[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"# Duke User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"Duke is an application project that is designed to help users to keep track different types of tasks. For example: todos, deadlines and events."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":"## Quick Start"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":"1. Ensure you have Java 11 or above installed in your computer."},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":"1. Download Duke file"},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":"1. Go to `/ip/src/main/java`"},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":"1. In command line key in:"},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":"   ```"},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":"   javac ip/duke/Duke.java"},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":"   java ip/duke/Duke   "},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":"   ```"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":"## Setting Up in IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":21,"author":{"gitId":"Cocokkkk"},"content":"   1.Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":22,"author":{"gitId":"Cocokkkk"},"content":"   1.If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":23,"author":{"gitId":"Cocokkkk"},"content":"   1.Click \u0027OK\u0027"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":25,"author":{"gitId":"Cocokkkk"},"content":"   1. Click `Open or Import`"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":29,"author":{"gitId":"Cocokkkk"},"content":"1. After that, locate the `src/main/java/ip.duke.Duke.java` file, right-click it, and choose `Run ip.duke.Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":34,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":35,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":39,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":40,"author":{"gitId":"Cocokkkk"},"content":"## Using Duke Project"},{"lineNumber":41,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":42,"author":{"gitId":"Cocokkkk"},"content":"### Help"},{"lineNumber":43,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":44,"author":{"gitId":"Cocokkkk"},"content":"* Display all acceptable commands"},{"lineNumber":45,"author":{"gitId":"Cocokkkk"},"content":"* Format: `help`"},{"lineNumber":46,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":47,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":48,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":49,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":50,"author":{"gitId":"Cocokkkk"},"content":"Here are some available commands and their corresponding input format: "},{"lineNumber":51,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":52,"author":{"gitId":"Cocokkkk"},"content":"list: Display all tasks in the list."},{"lineNumber":53,"author":{"gitId":"Cocokkkk"},"content":"Format: list"},{"lineNumber":54,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":55,"author":{"gitId":"Cocokkkk"},"content":"todo: Add a todo task."},{"lineNumber":56,"author":{"gitId":"Cocokkkk"},"content":"Format: todo read a book"},{"lineNumber":57,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":58,"author":{"gitId":"Cocokkkk"},"content":"deadline: Add a deadline task."},{"lineNumber":59,"author":{"gitId":"Cocokkkk"},"content":"Format: deadline submit a report /by 05 Mar"},{"lineNumber":60,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":61,"author":{"gitId":"Cocokkkk"},"content":"event: Add an event task."},{"lineNumber":62,"author":{"gitId":"Cocokkkk"},"content":"Format: event project meeting /at Mon 2-4pm"},{"lineNumber":63,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":64,"author":{"gitId":"Cocokkkk"},"content":"done: Mark a task as done."},{"lineNumber":65,"author":{"gitId":"Cocokkkk"},"content":"Format: done 1"},{"lineNumber":66,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":67,"author":{"gitId":"Cocokkkk"},"content":"find: find all tasks contain the input keyword"},{"lineNumber":68,"author":{"gitId":"Cocokkkk"},"content":"Format: find book"},{"lineNumber":69,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":70,"author":{"gitId":"Cocokkkk"},"content":"date: find all tasks occurring the specific date"},{"lineNumber":71,"author":{"gitId":"Cocokkkk"},"content":"Format: date 2021-02-28"},{"lineNumber":72,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":73,"author":{"gitId":"Cocokkkk"},"content":"bye: Exit the program."},{"lineNumber":74,"author":{"gitId":"Cocokkkk"},"content":"Format: bye"},{"lineNumber":75,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":76,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":77,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":78,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":79,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":80,"author":{"gitId":"Cocokkkk"},"content":"### Todo"},{"lineNumber":81,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":82,"author":{"gitId":"Cocokkkk"},"content":"* Adds a todo task which has no time limit to finish"},{"lineNumber":83,"author":{"gitId":"Cocokkkk"},"content":"* Format: `todo DESCRIPTION`"},{"lineNumber":84,"author":{"gitId":"Cocokkkk"},"content":"* Example: `todo read a book`"},{"lineNumber":85,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":86,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":87,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":88,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":89,"author":{"gitId":"Cocokkkk"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":90,"author":{"gitId":"Cocokkkk"},"content":"[T][‚úò] read a book"},{"lineNumber":91,"author":{"gitId":"Cocokkkk"},"content":"Now you have 1 tasks in the list. "},{"lineNumber":92,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":93,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":94,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":95,"author":{"gitId":"Cocokkkk"},"content":" Exception:"},{"lineNumber":96,"author":{"gitId":"Cocokkkk"},"content":"* No Todo DESCRIPTION"},{"lineNumber":97,"author":{"gitId":"Cocokkkk"},"content":"* Example: `todo`"},{"lineNumber":98,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":99,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":100,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":101,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":102,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The description of a todo cannot be empty."},{"lineNumber":103,"author":{"gitId":"Cocokkkk"},"content":"Please input again!:)"},{"lineNumber":104,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":105,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":106,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":107,"author":{"gitId":"Cocokkkk"},"content":"### Deadline"},{"lineNumber":108,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":109,"author":{"gitId":"Cocokkkk"},"content":"* Adds a deadline task which has to be completed before a given time"},{"lineNumber":110,"author":{"gitId":"Cocokkkk"},"content":"* FormatÔºö`deadline DESCRIPTION /by BYTIME`"},{"lineNumber":111,"author":{"gitId":"Cocokkkk"},"content":"* Example: `deadline submit a report /by 05 Mar`"},{"lineNumber":112,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":113,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":114,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":115,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":116,"author":{"gitId":"Cocokkkk"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":117,"author":{"gitId":"Cocokkkk"},"content":"[D][‚úò] submit a report (by: 05 Mar)"},{"lineNumber":118,"author":{"gitId":"Cocokkkk"},"content":"Now you have 2 tasks in the list. "},{"lineNumber":119,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":120,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":121,"author":{"gitId":"Cocokkkk"},"content":"Exception 1:"},{"lineNumber":122,"author":{"gitId":"Cocokkkk"},"content":"* No Deadline DESCRIPTION"},{"lineNumber":123,"author":{"gitId":"Cocokkkk"},"content":"* Example: `deadline`"},{"lineNumber":124,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":125,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":126,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":127,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":128,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The description of a deadline cannot be empty."},{"lineNumber":129,"author":{"gitId":"Cocokkkk"},"content":"Please input again!:)"},{"lineNumber":130,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":131,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":132,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":133,"author":{"gitId":"Cocokkkk"},"content":"Exception 2:"},{"lineNumber":134,"author":{"gitId":"Cocokkkk"},"content":"* No Deadline TIME"},{"lineNumber":135,"author":{"gitId":"Cocokkkk"},"content":"* Example: `deadline submit a report`"},{"lineNumber":136,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":137,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":138,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":139,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":140,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The time of the Deadline task is missing."},{"lineNumber":141,"author":{"gitId":"Cocokkkk"},"content":"Please complete the time information. :)"},{"lineNumber":142,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":143,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":144,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":145,"author":{"gitId":"Cocokkkk"},"content":"### Event"},{"lineNumber":146,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":147,"author":{"gitId":"Cocokkkk"},"content":"* Adds an event task which will start at a given time"},{"lineNumber":148,"author":{"gitId":"Cocokkkk"},"content":"* FormatÔºö`event DESCRIPTION /by ATTIME`"},{"lineNumber":149,"author":{"gitId":"Cocokkkk"},"content":"* Example: `event project group meeting /at 2-4 pm Sunday`"},{"lineNumber":150,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":151,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":152,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":153,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":154,"author":{"gitId":"Cocokkkk"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":155,"author":{"gitId":"Cocokkkk"},"content":"[E][‚úò] group meeting (at: 11am Thursday)"},{"lineNumber":156,"author":{"gitId":"Cocokkkk"},"content":"Now you have 3 tasks in the list. "},{"lineNumber":157,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":158,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":159,"author":{"gitId":"Cocokkkk"},"content":"Exception 1:"},{"lineNumber":160,"author":{"gitId":"Cocokkkk"},"content":"* No Event DESCRIPTION"},{"lineNumber":161,"author":{"gitId":"Cocokkkk"},"content":"* Example: `event`"},{"lineNumber":162,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":163,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":164,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":165,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":166,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The description of an event cannot be empty."},{"lineNumber":167,"author":{"gitId":"Cocokkkk"},"content":"Please input again!:)"},{"lineNumber":168,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":169,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":170,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":171,"author":{"gitId":"Cocokkkk"},"content":"Exception 2:"},{"lineNumber":172,"author":{"gitId":"Cocokkkk"},"content":"* No Event TIME"},{"lineNumber":173,"author":{"gitId":"Cocokkkk"},"content":"* Example: `event group meeting`"},{"lineNumber":174,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":175,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":176,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":177,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":178,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The time of the Event task is missing."},{"lineNumber":179,"author":{"gitId":"Cocokkkk"},"content":"Please complete the time information. :)"},{"lineNumber":180,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":181,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":182,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":183,"author":{"gitId":"Cocokkkk"},"content":"### List"},{"lineNumber":184,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":185,"author":{"gitId":"Cocokkkk"},"content":"* Display all recorded tasks in the list"},{"lineNumber":186,"author":{"gitId":"Cocokkkk"},"content":"* Format: `list`"},{"lineNumber":187,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":188,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":189,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":190,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":191,"author":{"gitId":"Cocokkkk"},"content":"Here are the tasks in your list: "},{"lineNumber":192,"author":{"gitId":"Cocokkkk"},"content":"1. [T][‚úò] read a book"},{"lineNumber":193,"author":{"gitId":"Cocokkkk"},"content":"2. [D][‚úò] submit a report (by: 05 Mar)"},{"lineNumber":194,"author":{"gitId":"Cocokkkk"},"content":"3. [E][‚úò] project group meeting (at: 2-4 pm Sunday)"},{"lineNumber":195,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":196,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":197,"author":{"gitId":"Cocokkkk"},"content":"Exception:"},{"lineNumber":198,"author":{"gitId":"Cocokkkk"},"content":"* The list is empty"},{"lineNumber":199,"author":{"gitId":"Cocokkkk"},"content":"* Example: `list`"},{"lineNumber":200,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":201,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":202,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":203,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":204,"author":{"gitId":"Cocokkkk"},"content":"The list is empty."},{"lineNumber":205,"author":{"gitId":"Cocokkkk"},"content":"You can add your task now! :)"},{"lineNumber":206,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":207,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":208,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":209,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":210,"author":{"gitId":"Cocokkkk"},"content":"### Done"},{"lineNumber":211,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":212,"author":{"gitId":"Cocokkkk"},"content":"* Marks a certain task to be done"},{"lineNumber":213,"author":{"gitId":"Cocokkkk"},"content":"* Format: `done INDEX`"},{"lineNumber":214,"author":{"gitId":"Cocokkkk"},"content":"* Example: `done 1`"},{"lineNumber":215,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":216,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":217,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":218,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":219,"author":{"gitId":"Cocokkkk"},"content":"Nice! I\u0027ve marked this task as done: "},{"lineNumber":220,"author":{"gitId":"Cocokkkk"},"content":"[T][‚úì] read a book"},{"lineNumber":221,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":222,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":223,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":224,"author":{"gitId":"Cocokkkk"},"content":"Exception 1:"},{"lineNumber":225,"author":{"gitId":"Cocokkkk"},"content":"* No done INDEX"},{"lineNumber":226,"author":{"gitId":"Cocokkkk"},"content":"* Example: `done`"},{"lineNumber":227,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":228,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":229,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":230,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":231,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The description of a done cannot be empty."},{"lineNumber":232,"author":{"gitId":"Cocokkkk"},"content":"Please input again!:)"},{"lineNumber":233,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":234,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":235,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":236,"author":{"gitId":"Cocokkkk"},"content":"Exception 2:"},{"lineNumber":237,"author":{"gitId":"Cocokkkk"},"content":"* The given done INDEX is out of bound"},{"lineNumber":238,"author":{"gitId":"Cocokkkk"},"content":"* Example: `done 5`"},{"lineNumber":239,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":240,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":241,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":242,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":243,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The done index is not valid."},{"lineNumber":244,"author":{"gitId":"Cocokkkk"},"content":"Please input again.:)"},{"lineNumber":245,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":246,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":247,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":248,"author":{"gitId":"Cocokkkk"},"content":"Exception 3:"},{"lineNumber":249,"author":{"gitId":"Cocokkkk"},"content":"* The list is empty"},{"lineNumber":250,"author":{"gitId":"Cocokkkk"},"content":"* Example: `done 5`"},{"lineNumber":251,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":252,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":253,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":254,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":255,"author":{"gitId":"Cocokkkk"},"content":"The list is empty."},{"lineNumber":256,"author":{"gitId":"Cocokkkk"},"content":"You can add your task now! :)"},{"lineNumber":257,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":258,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":259,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":260,"author":{"gitId":"Cocokkkk"},"content":"### Delete"},{"lineNumber":261,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":262,"author":{"gitId":"Cocokkkk"},"content":"* Deletes a certain task"},{"lineNumber":263,"author":{"gitId":"Cocokkkk"},"content":"* Format: \u0027delete INDEX\u0027"},{"lineNumber":264,"author":{"gitId":"Cocokkkk"},"content":"* Example: `delete 2`"},{"lineNumber":265,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":266,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":267,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":268,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":269,"author":{"gitId":"Cocokkkk"},"content":"Noted. I\u0027ve removed this task: "},{"lineNumber":270,"author":{"gitId":"Cocokkkk"},"content":"[D][‚úò] submit a report (by: 05 Mar)"},{"lineNumber":271,"author":{"gitId":"Cocokkkk"},"content":"Now you have 2 tasks in the list."},{"lineNumber":272,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":273,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":274,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":275,"author":{"gitId":"Cocokkkk"},"content":"Exception 1:"},{"lineNumber":276,"author":{"gitId":"Cocokkkk"},"content":"* No delete INDEX"},{"lineNumber":277,"author":{"gitId":"Cocokkkk"},"content":"* Example: `delete`"},{"lineNumber":278,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":279,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":280,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":281,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":282,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The description of a delete cannot be empty."},{"lineNumber":283,"author":{"gitId":"Cocokkkk"},"content":"Please input again!:)"},{"lineNumber":284,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":285,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":286,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":287,"author":{"gitId":"Cocokkkk"},"content":"Exception 2:"},{"lineNumber":288,"author":{"gitId":"Cocokkkk"},"content":"* The given delete INDEX is out of bound"},{"lineNumber":289,"author":{"gitId":"Cocokkkk"},"content":"* Example: `delete 5`"},{"lineNumber":290,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":291,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":292,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":293,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":294,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The delete index is not valid."},{"lineNumber":295,"author":{"gitId":"Cocokkkk"},"content":"Please input again.:)"},{"lineNumber":296,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":297,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":298,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":299,"author":{"gitId":"Cocokkkk"},"content":"Exception 3:"},{"lineNumber":300,"author":{"gitId":"Cocokkkk"},"content":"* The list is empty"},{"lineNumber":301,"author":{"gitId":"Cocokkkk"},"content":"* Example: `delete 5`"},{"lineNumber":302,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":303,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":304,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":305,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":306,"author":{"gitId":"Cocokkkk"},"content":"The list is empty."},{"lineNumber":307,"author":{"gitId":"Cocokkkk"},"content":"You can add your task now! :)"},{"lineNumber":308,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":309,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":310,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":311,"author":{"gitId":"Cocokkkk"},"content":"### Find"},{"lineNumber":312,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":313,"author":{"gitId":"Cocokkkk"},"content":"* Finds the tasks that contains the certain keyword given by user"},{"lineNumber":314,"author":{"gitId":"Cocokkkk"},"content":"* Format: `find KEYWORD`"},{"lineNumber":315,"author":{"gitId":"Cocokkkk"},"content":"* Example: `find book`"},{"lineNumber":316,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":317,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":318,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":319,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":320,"author":{"gitId":"Cocokkkk"},"content":"Here are the matching tasks in your list: "},{"lineNumber":321,"author":{"gitId":"Cocokkkk"},"content":"1. [T][‚úì] read a book"},{"lineNumber":322,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":323,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":324,"author":{"gitId":"Cocokkkk"},"content":"Exception 1:"},{"lineNumber":325,"author":{"gitId":"Cocokkkk"},"content":"* No find DESCRIPTION"},{"lineNumber":326,"author":{"gitId":"Cocokkkk"},"content":"* Example: `find`"},{"lineNumber":327,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":328,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":329,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":330,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":331,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The description of a find cannot be empty."},{"lineNumber":332,"author":{"gitId":"Cocokkkk"},"content":"Please input again!:)"},{"lineNumber":333,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":334,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":335,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":336,"author":{"gitId":"Cocokkkk"},"content":"Exception 2:"},{"lineNumber":337,"author":{"gitId":"Cocokkkk"},"content":"* The list is empty"},{"lineNumber":338,"author":{"gitId":"Cocokkkk"},"content":"* Example: `find book`"},{"lineNumber":339,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":340,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":341,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":342,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":343,"author":{"gitId":"Cocokkkk"},"content":"The list is empty."},{"lineNumber":344,"author":{"gitId":"Cocokkkk"},"content":"You can add your task now! :)"},{"lineNumber":345,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":346,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":347,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":348,"author":{"gitId":"Cocokkkk"},"content":"### Date"},{"lineNumber":349,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":350,"author":{"gitId":"Cocokkkk"},"content":"* Finds all the tasks that are relevant to the specific date"},{"lineNumber":351,"author":{"gitId":"Cocokkkk"},"content":"* Format: `date [yyy-mm-dd]`"},{"lineNumber":352,"author":{"gitId":"Cocokkkk"},"content":"* Example: `date 2020-02-28 12:23`"},{"lineNumber":353,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":354,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":355,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":356,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":357,"author":{"gitId":"Cocokkkk"},"content":"Here are the tasks occurring on this specific date: "},{"lineNumber":358,"author":{"gitId":"Cocokkkk"},"content":"1. [D][‚úò] return a book(by: Feb 28 2021 12:23)"},{"lineNumber":359,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":360,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":361,"author":{"gitId":"Cocokkkk"},"content":"Exception 1:"},{"lineNumber":362,"author":{"gitId":"Cocokkkk"},"content":"* No date DESCRIPTION"},{"lineNumber":363,"author":{"gitId":"Cocokkkk"},"content":"* Example: `date`"},{"lineNumber":364,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":365,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":366,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":367,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":368,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The description of a date cannot be empty."},{"lineNumber":369,"author":{"gitId":"Cocokkkk"},"content":"Please input again!:)"},{"lineNumber":370,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":371,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":372,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":373,"author":{"gitId":"Cocokkkk"},"content":"Exception 2:"},{"lineNumber":374,"author":{"gitId":"Cocokkkk"},"content":"* The date format is incorrect"},{"lineNumber":375,"author":{"gitId":"Cocokkkk"},"content":"* Example: `date 123`"},{"lineNumber":376,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":377,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":378,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":379,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":380,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The date is not valid"},{"lineNumber":381,"author":{"gitId":"Cocokkkk"},"content":"Please follow the format YYYY-MM-DD and input again.:)"},{"lineNumber":382,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":383,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":384,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":385,"author":{"gitId":"Cocokkkk"},"content":"Exception 3:"},{"lineNumber":386,"author":{"gitId":"Cocokkkk"},"content":"* The list is empty"},{"lineNumber":387,"author":{"gitId":"Cocokkkk"},"content":"* Example: `date 2020-12-21`"},{"lineNumber":388,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":389,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":390,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":391,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":392,"author":{"gitId":"Cocokkkk"},"content":"The list is empty."},{"lineNumber":393,"author":{"gitId":"Cocokkkk"},"content":"You can add your task now! :)"},{"lineNumber":394,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":395,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":396,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":397,"author":{"gitId":"Cocokkkk"},"content":"### Bye"},{"lineNumber":398,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":399,"author":{"gitId":"Cocokkkk"},"content":"* Exits this running program"},{"lineNumber":400,"author":{"gitId":"Cocokkkk"},"content":"* Format: `bye`"},{"lineNumber":401,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":402,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":403,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":404,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":405,"author":{"gitId":"Cocokkkk"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":406,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":407,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":408,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":409,"author":{"gitId":"Cocokkkk"},"content":"#### Exception"},{"lineNumber":410,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":411,"author":{"gitId":"Cocokkkk"},"content":"* The command is not acceptable by Duke"},{"lineNumber":412,"author":{"gitId":"Cocokkkk"},"content":"* Example: `balh` or `hi`"},{"lineNumber":413,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":414,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":415,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":416,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":417,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("},{"lineNumber":418,"author":{"gitId":"Cocokkkk"},"content":"Please input again!:)"},{"lineNumber":419,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":420,"author":{"gitId":"Cocokkkk"},"content":"```"}],"authorContributionMap":{"-":21,"Cocokkkk":399}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"# Duke User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"Duke is an application project that is designed to help users to keep track different types of tasks. For example: todos, deadlines and events."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":"## Quick Start"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":"1. Ensure you have Java 11 or above installed in your computer."},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":"1. Download Duke file"},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":"1. Go to `/ip/src/main/java`"},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":"1. In command line key in:"},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":"   ```"},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":"   javac ip/duke/Duke.java"},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":"   java ip/duke/Duke   "},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":"   ```"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":"## Setting Up in IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"Cocokkkk"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":20,"author":{"gitId":"Cocokkkk"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":21,"author":{"gitId":"Cocokkkk"},"content":"   1.Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":22,"author":{"gitId":"Cocokkkk"},"content":"   1.If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":23,"author":{"gitId":"Cocokkkk"},"content":"   1.Click \u0027OK\u0027"},{"lineNumber":24,"author":{"gitId":"Cocokkkk"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":25,"author":{"gitId":"Cocokkkk"},"content":"   1. Click `Open or Import`"},{"lineNumber":26,"author":{"gitId":"Cocokkkk"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":27,"author":{"gitId":"Cocokkkk"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":28,"author":{"gitId":"Cocokkkk"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":29,"author":{"gitId":"Cocokkkk"},"content":"1. After that, locate the `src/main/java/ip.duke.Duke.java` file, right-click it, and choose `Run ip.duke.Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"Cocokkkk"},"content":"   ```"},{"lineNumber":32,"author":{"gitId":"Cocokkkk"},"content":"   Hello from"},{"lineNumber":33,"author":{"gitId":"Cocokkkk"},"content":"    ____        _        "},{"lineNumber":34,"author":{"gitId":"Cocokkkk"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":35,"author":{"gitId":"Cocokkkk"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":36,"author":{"gitId":"Cocokkkk"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":37,"author":{"gitId":"Cocokkkk"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":38,"author":{"gitId":"Cocokkkk"},"content":"   ```"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"Cocokkkk"},"content":"## Using Duke Project"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"Cocokkkk"},"content":"### Help"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"Cocokkkk"},"content":"* Display all acceptable commands"},{"lineNumber":45,"author":{"gitId":"Cocokkkk"},"content":"* Format: `help`"},{"lineNumber":46,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":47,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":48,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":49,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":50,"author":{"gitId":"Cocokkkk"},"content":"Here are some available commands and their corresponding input format: "},{"lineNumber":51,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":52,"author":{"gitId":"Cocokkkk"},"content":"list: Display all tasks in the list."},{"lineNumber":53,"author":{"gitId":"Cocokkkk"},"content":"Format: list"},{"lineNumber":54,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":55,"author":{"gitId":"Cocokkkk"},"content":"todo: Add a todo task."},{"lineNumber":56,"author":{"gitId":"Cocokkkk"},"content":"Format: todo read a book"},{"lineNumber":57,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":58,"author":{"gitId":"Cocokkkk"},"content":"deadline: Add a deadline task."},{"lineNumber":59,"author":{"gitId":"Cocokkkk"},"content":"Format: deadline submit a report /by 05 Mar"},{"lineNumber":60,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":61,"author":{"gitId":"Cocokkkk"},"content":"event: Add an event task."},{"lineNumber":62,"author":{"gitId":"Cocokkkk"},"content":"Format: event project meeting /at Mon 2-4pm"},{"lineNumber":63,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":64,"author":{"gitId":"Cocokkkk"},"content":"done: Mark a task as done."},{"lineNumber":65,"author":{"gitId":"Cocokkkk"},"content":"Format: done 1"},{"lineNumber":66,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":67,"author":{"gitId":"Cocokkkk"},"content":"find: find all tasks contain the input keyword"},{"lineNumber":68,"author":{"gitId":"Cocokkkk"},"content":"Format: find book"},{"lineNumber":69,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":70,"author":{"gitId":"Cocokkkk"},"content":"date: find all tasks occurring the specific date"},{"lineNumber":71,"author":{"gitId":"Cocokkkk"},"content":"Format: date 2021-02-28"},{"lineNumber":72,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":73,"author":{"gitId":"Cocokkkk"},"content":"bye: Exit the program."},{"lineNumber":74,"author":{"gitId":"Cocokkkk"},"content":"Format: bye"},{"lineNumber":75,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":76,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":77,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":78,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":79,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":80,"author":{"gitId":"Cocokkkk"},"content":"### Todo"},{"lineNumber":81,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":82,"author":{"gitId":"Cocokkkk"},"content":"* Adds a todo task which has no time limit to finish"},{"lineNumber":83,"author":{"gitId":"Cocokkkk"},"content":"* Format: `todo DESCRIPTION`"},{"lineNumber":84,"author":{"gitId":"Cocokkkk"},"content":"* Example: `todo read a book`"},{"lineNumber":85,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":86,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":87,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":88,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":89,"author":{"gitId":"Cocokkkk"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":90,"author":{"gitId":"Cocokkkk"},"content":"[T][‚úò] read a book"},{"lineNumber":91,"author":{"gitId":"Cocokkkk"},"content":"Now you have 1 tasks in the list. "},{"lineNumber":92,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":93,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":94,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":95,"author":{"gitId":"Cocokkkk"},"content":" Exception:"},{"lineNumber":96,"author":{"gitId":"Cocokkkk"},"content":"* No Todo DESCRIPTION"},{"lineNumber":97,"author":{"gitId":"Cocokkkk"},"content":"* Example: `todo`"},{"lineNumber":98,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":99,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":100,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":101,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":102,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The description of a todo cannot be empty."},{"lineNumber":103,"author":{"gitId":"Cocokkkk"},"content":"Please input again!:)"},{"lineNumber":104,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":105,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":106,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":107,"author":{"gitId":"Cocokkkk"},"content":"### Deadline"},{"lineNumber":108,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":109,"author":{"gitId":"Cocokkkk"},"content":"* Adds a deadline task which has to be completed before a given time"},{"lineNumber":110,"author":{"gitId":"Cocokkkk"},"content":"* FormatÔºö`deadline DESCRIPTION /by BYTIME`"},{"lineNumber":111,"author":{"gitId":"Cocokkkk"},"content":"* Example 1: `deadline submit a report /by 2020-12-21 12:45`"},{"lineNumber":112,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output 1:"},{"lineNumber":113,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":114,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":115,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":116,"author":{"gitId":"Cocokkkk"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":117,"author":{"gitId":"Cocokkkk"},"content":"[D][‚úò] submit a report (by: Dec 21 2020  12:45)"},{"lineNumber":118,"author":{"gitId":"Cocokkkk"},"content":"Now you have 2 tasks in the list. "},{"lineNumber":119,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":120,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":121,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":122,"author":{"gitId":"Cocokkkk"},"content":"* Example 2: `deadline submit a report /by Sunday`"},{"lineNumber":123,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output 2:"},{"lineNumber":124,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":125,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":126,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":127,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The date is not valid"},{"lineNumber":128,"author":{"gitId":"Cocokkkk"},"content":"Please follow the format YYYY-MM-DD and input again.:)"},{"lineNumber":129,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":130,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":131,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":132,"author":{"gitId":"Cocokkkk"},"content":"Exception 1:"},{"lineNumber":133,"author":{"gitId":"Cocokkkk"},"content":"* No Deadline DESCRIPTION"},{"lineNumber":134,"author":{"gitId":"Cocokkkk"},"content":"* Example: `deadline`"},{"lineNumber":135,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":136,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":137,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":138,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":139,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The description of a deadline cannot be empty."},{"lineNumber":140,"author":{"gitId":"Cocokkkk"},"content":"Please input again!:)"},{"lineNumber":141,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":142,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":143,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":144,"author":{"gitId":"Cocokkkk"},"content":"Exception 2:"},{"lineNumber":145,"author":{"gitId":"Cocokkkk"},"content":"* No Deadline TIME"},{"lineNumber":146,"author":{"gitId":"Cocokkkk"},"content":"* Example: `deadline submit a report`"},{"lineNumber":147,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":148,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":149,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":150,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":151,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The time of the Deadline task is missing."},{"lineNumber":152,"author":{"gitId":"Cocokkkk"},"content":"Please complete the time information. :)"},{"lineNumber":153,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":154,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":155,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":156,"author":{"gitId":"Cocokkkk"},"content":"### Event"},{"lineNumber":157,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":158,"author":{"gitId":"Cocokkkk"},"content":"* Adds an event task which will start at a given time"},{"lineNumber":159,"author":{"gitId":"Cocokkkk"},"content":"* FormatÔºö`event DESCRIPTION /by ATTIME`"},{"lineNumber":160,"author":{"gitId":"Cocokkkk"},"content":"* Example 1: `event project group meeting /at 2021-12-21 23:59`"},{"lineNumber":161,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output 1:"},{"lineNumber":162,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":163,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":164,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":165,"author":{"gitId":"Cocokkkk"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":166,"author":{"gitId":"Cocokkkk"},"content":"[E][‚úò] project group meeting (at: Dec 21 2021  23:59)"},{"lineNumber":167,"author":{"gitId":"Cocokkkk"},"content":"Now you have 3 tasks in the list. "},{"lineNumber":168,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":169,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":170,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":171,"author":{"gitId":"Cocokkkk"},"content":"* Example 2: `event project group meeting /at Sunday`"},{"lineNumber":172,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output 2:"},{"lineNumber":173,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":174,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":175,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":176,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The date is not valid"},{"lineNumber":177,"author":{"gitId":"Cocokkkk"},"content":"Please follow the format YYYY-MM-DD and input again.:)"},{"lineNumber":178,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":179,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":180,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":181,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":182,"author":{"gitId":"Cocokkkk"},"content":"Exception 1:"},{"lineNumber":183,"author":{"gitId":"Cocokkkk"},"content":"* No Event DESCRIPTION"},{"lineNumber":184,"author":{"gitId":"Cocokkkk"},"content":"* Example: `event`"},{"lineNumber":185,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":186,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":187,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":188,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":189,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The description of an event cannot be empty."},{"lineNumber":190,"author":{"gitId":"Cocokkkk"},"content":"Please input again!:)"},{"lineNumber":191,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":192,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":193,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":194,"author":{"gitId":"Cocokkkk"},"content":"Exception 2:"},{"lineNumber":195,"author":{"gitId":"Cocokkkk"},"content":"* No Event TIME"},{"lineNumber":196,"author":{"gitId":"Cocokkkk"},"content":"* Example: `event group meeting`"},{"lineNumber":197,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":198,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":199,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":200,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":201,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The time of the Event task is missing."},{"lineNumber":202,"author":{"gitId":"Cocokkkk"},"content":"Please complete the time information. :)"},{"lineNumber":203,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":204,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":205,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":206,"author":{"gitId":"Cocokkkk"},"content":"### List"},{"lineNumber":207,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":208,"author":{"gitId":"Cocokkkk"},"content":"* Display all recorded tasks in the list"},{"lineNumber":209,"author":{"gitId":"Cocokkkk"},"content":"* Format: `list`"},{"lineNumber":210,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":211,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":212,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":213,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":214,"author":{"gitId":"Cocokkkk"},"content":"Here are the tasks in your list: "},{"lineNumber":215,"author":{"gitId":"Cocokkkk"},"content":"1. [T][‚úò] read a book"},{"lineNumber":216,"author":{"gitId":"Cocokkkk"},"content":"2. [D][‚úò] submit a report (by: 05 Mar)"},{"lineNumber":217,"author":{"gitId":"Cocokkkk"},"content":"3. [E][‚úò] project group meeting (at: 2-4 pm Sunday)"},{"lineNumber":218,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":219,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":220,"author":{"gitId":"Cocokkkk"},"content":"Exception:"},{"lineNumber":221,"author":{"gitId":"Cocokkkk"},"content":"* The list is empty"},{"lineNumber":222,"author":{"gitId":"Cocokkkk"},"content":"* Example: `list`"},{"lineNumber":223,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":224,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":225,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":226,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":227,"author":{"gitId":"Cocokkkk"},"content":"The list is empty."},{"lineNumber":228,"author":{"gitId":"Cocokkkk"},"content":"You can add your task now! :)"},{"lineNumber":229,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":230,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":231,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":232,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":233,"author":{"gitId":"Cocokkkk"},"content":"### Done"},{"lineNumber":234,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":235,"author":{"gitId":"Cocokkkk"},"content":"* Marks a certain task to be done"},{"lineNumber":236,"author":{"gitId":"Cocokkkk"},"content":"* Format: `done INDEX`"},{"lineNumber":237,"author":{"gitId":"Cocokkkk"},"content":"* Example: `done 1`"},{"lineNumber":238,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":239,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":240,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":241,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":242,"author":{"gitId":"Cocokkkk"},"content":"Nice! I\u0027ve marked this task as done: "},{"lineNumber":243,"author":{"gitId":"Cocokkkk"},"content":"[T][‚úì] read a book"},{"lineNumber":244,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":245,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":246,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":247,"author":{"gitId":"Cocokkkk"},"content":"Exception 1:"},{"lineNumber":248,"author":{"gitId":"Cocokkkk"},"content":"* No done INDEX"},{"lineNumber":249,"author":{"gitId":"Cocokkkk"},"content":"* Example: `done`"},{"lineNumber":250,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":251,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":252,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":253,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":254,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The description of a done cannot be empty."},{"lineNumber":255,"author":{"gitId":"Cocokkkk"},"content":"Please input again!:)"},{"lineNumber":256,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":257,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":258,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":259,"author":{"gitId":"Cocokkkk"},"content":"Exception 2:"},{"lineNumber":260,"author":{"gitId":"Cocokkkk"},"content":"* The given done INDEX is out of bound"},{"lineNumber":261,"author":{"gitId":"Cocokkkk"},"content":"* Example: `done 5`"},{"lineNumber":262,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":263,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":264,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":265,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":266,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The done index is not valid."},{"lineNumber":267,"author":{"gitId":"Cocokkkk"},"content":"Please input again.:)"},{"lineNumber":268,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":269,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":270,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":271,"author":{"gitId":"Cocokkkk"},"content":"Exception 3:"},{"lineNumber":272,"author":{"gitId":"Cocokkkk"},"content":"* The list is empty"},{"lineNumber":273,"author":{"gitId":"Cocokkkk"},"content":"* Example: `done 5`"},{"lineNumber":274,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":275,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":276,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":277,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":278,"author":{"gitId":"Cocokkkk"},"content":"The list is empty."},{"lineNumber":279,"author":{"gitId":"Cocokkkk"},"content":"You can add your task now! :)"},{"lineNumber":280,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":281,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":282,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":283,"author":{"gitId":"Cocokkkk"},"content":"### Delete"},{"lineNumber":284,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":285,"author":{"gitId":"Cocokkkk"},"content":"* Deletes a certain task"},{"lineNumber":286,"author":{"gitId":"Cocokkkk"},"content":"* Format: \u0027delete INDEX\u0027"},{"lineNumber":287,"author":{"gitId":"Cocokkkk"},"content":"* Example: `delete 2`"},{"lineNumber":288,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":289,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":290,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":291,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":292,"author":{"gitId":"Cocokkkk"},"content":"Noted. I\u0027ve removed this task: "},{"lineNumber":293,"author":{"gitId":"Cocokkkk"},"content":"[D][‚úò] submit a report (by: 05 Mar)"},{"lineNumber":294,"author":{"gitId":"Cocokkkk"},"content":"Now you have 2 tasks in the list."},{"lineNumber":295,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":296,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":297,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":298,"author":{"gitId":"Cocokkkk"},"content":"Exception 1:"},{"lineNumber":299,"author":{"gitId":"Cocokkkk"},"content":"* No delete INDEX"},{"lineNumber":300,"author":{"gitId":"Cocokkkk"},"content":"* Example: `delete`"},{"lineNumber":301,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":302,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":303,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":304,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":305,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The description of a delete cannot be empty."},{"lineNumber":306,"author":{"gitId":"Cocokkkk"},"content":"Please input again!:)"},{"lineNumber":307,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":308,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":309,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":310,"author":{"gitId":"Cocokkkk"},"content":"Exception 2:"},{"lineNumber":311,"author":{"gitId":"Cocokkkk"},"content":"* The given delete INDEX is out of bound"},{"lineNumber":312,"author":{"gitId":"Cocokkkk"},"content":"* Example: `delete 5`"},{"lineNumber":313,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":314,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":315,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":316,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":317,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The delete index is not valid."},{"lineNumber":318,"author":{"gitId":"Cocokkkk"},"content":"Please input again.:)"},{"lineNumber":319,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":320,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":321,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":322,"author":{"gitId":"Cocokkkk"},"content":"Exception 3:"},{"lineNumber":323,"author":{"gitId":"Cocokkkk"},"content":"* The list is empty"},{"lineNumber":324,"author":{"gitId":"Cocokkkk"},"content":"* Example: `delete 5`"},{"lineNumber":325,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":326,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":327,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":328,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":329,"author":{"gitId":"Cocokkkk"},"content":"The list is empty."},{"lineNumber":330,"author":{"gitId":"Cocokkkk"},"content":"You can add your task now! :)"},{"lineNumber":331,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":332,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":333,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":334,"author":{"gitId":"Cocokkkk"},"content":"### Find"},{"lineNumber":335,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":336,"author":{"gitId":"Cocokkkk"},"content":"* Finds the tasks that contains the certain keyword given by user"},{"lineNumber":337,"author":{"gitId":"Cocokkkk"},"content":"* Format: `find KEYWORD`"},{"lineNumber":338,"author":{"gitId":"Cocokkkk"},"content":"* Example: `find book`"},{"lineNumber":339,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output 1:"},{"lineNumber":340,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":341,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":342,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":343,"author":{"gitId":"Cocokkkk"},"content":"Here are the matching tasks in your list: "},{"lineNumber":344,"author":{"gitId":"Cocokkkk"},"content":"1. [T][‚úì] read a book"},{"lineNumber":345,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":346,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":347,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":348,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output 2:"},{"lineNumber":349,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":350,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":351,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":352,"author":{"gitId":"Cocokkkk"},"content":"There is no matching task in your list."},{"lineNumber":353,"author":{"gitId":"Cocokkkk"},"content":"Please input another keyword! :)"},{"lineNumber":354,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":355,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":356,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":357,"author":{"gitId":"Cocokkkk"},"content":"Exception 1:"},{"lineNumber":358,"author":{"gitId":"Cocokkkk"},"content":"* No find DESCRIPTION"},{"lineNumber":359,"author":{"gitId":"Cocokkkk"},"content":"* Example: `find`"},{"lineNumber":360,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":361,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":362,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":363,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":364,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The description of a find cannot be empty."},{"lineNumber":365,"author":{"gitId":"Cocokkkk"},"content":"Please input again!:)"},{"lineNumber":366,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":367,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":368,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":369,"author":{"gitId":"Cocokkkk"},"content":"Exception 2:"},{"lineNumber":370,"author":{"gitId":"Cocokkkk"},"content":"* The list is empty"},{"lineNumber":371,"author":{"gitId":"Cocokkkk"},"content":"* Example: `find book`"},{"lineNumber":372,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":373,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":374,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":375,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":376,"author":{"gitId":"Cocokkkk"},"content":"The list is empty."},{"lineNumber":377,"author":{"gitId":"Cocokkkk"},"content":"You can add your task now! :)"},{"lineNumber":378,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":379,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":380,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":381,"author":{"gitId":"Cocokkkk"},"content":"### Date"},{"lineNumber":382,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":383,"author":{"gitId":"Cocokkkk"},"content":"* Finds all the tasks that are relevant to the specific date"},{"lineNumber":384,"author":{"gitId":"Cocokkkk"},"content":"* Format: `date [yyy-mm-dd]`"},{"lineNumber":385,"author":{"gitId":"Cocokkkk"},"content":"* Example: `date 2020-02-28 12:23`"},{"lineNumber":386,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output 1:"},{"lineNumber":387,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":388,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":389,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":390,"author":{"gitId":"Cocokkkk"},"content":"Here are the tasks occurring on this specific date: "},{"lineNumber":391,"author":{"gitId":"Cocokkkk"},"content":"1. [D][‚úò] return a book(by: Feb 28 2021 12:23)"},{"lineNumber":392,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":393,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":394,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":395,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output 2:"},{"lineNumber":396,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":397,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":398,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":399,"author":{"gitId":"Cocokkkk"},"content":"There is no task occurring on this specific date."},{"lineNumber":400,"author":{"gitId":"Cocokkkk"},"content":"Please input another date! :)"},{"lineNumber":401,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":402,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":403,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":404,"author":{"gitId":"Cocokkkk"},"content":"Exception 1:"},{"lineNumber":405,"author":{"gitId":"Cocokkkk"},"content":"* No date DESCRIPTION"},{"lineNumber":406,"author":{"gitId":"Cocokkkk"},"content":"* Example: `date`"},{"lineNumber":407,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":408,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":409,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":410,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":411,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The description of a date cannot be empty."},{"lineNumber":412,"author":{"gitId":"Cocokkkk"},"content":"Please input again!:)"},{"lineNumber":413,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":414,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":415,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":416,"author":{"gitId":"Cocokkkk"},"content":"Exception 2:"},{"lineNumber":417,"author":{"gitId":"Cocokkkk"},"content":"* The date format is incorrect"},{"lineNumber":418,"author":{"gitId":"Cocokkkk"},"content":"* Example: `date 123`"},{"lineNumber":419,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":420,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":421,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":422,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":423,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! The date is not valid"},{"lineNumber":424,"author":{"gitId":"Cocokkkk"},"content":"Please follow the format YYYY-MM-DD and input again.:)"},{"lineNumber":425,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":426,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":427,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":428,"author":{"gitId":"Cocokkkk"},"content":"Exception 3:"},{"lineNumber":429,"author":{"gitId":"Cocokkkk"},"content":"* The list is empty"},{"lineNumber":430,"author":{"gitId":"Cocokkkk"},"content":"* Example: `date 2020-12-21`"},{"lineNumber":431,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":432,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":433,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":434,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":435,"author":{"gitId":"Cocokkkk"},"content":"The list is empty."},{"lineNumber":436,"author":{"gitId":"Cocokkkk"},"content":"You can add your task now! :)"},{"lineNumber":437,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":438,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":439,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":440,"author":{"gitId":"Cocokkkk"},"content":"### Bye"},{"lineNumber":441,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":442,"author":{"gitId":"Cocokkkk"},"content":"* Exits this running program"},{"lineNumber":443,"author":{"gitId":"Cocokkkk"},"content":"* Format: `bye`"},{"lineNumber":444,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":445,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":446,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":447,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":448,"author":{"gitId":"Cocokkkk"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":449,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":450,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":451,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":452,"author":{"gitId":"Cocokkkk"},"content":"#### Exception"},{"lineNumber":453,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":454,"author":{"gitId":"Cocokkkk"},"content":"* The command is not acceptable by Duke"},{"lineNumber":455,"author":{"gitId":"Cocokkkk"},"content":"* Example: `balh` or `hi`"},{"lineNumber":456,"author":{"gitId":"Cocokkkk"},"content":"* Example of expected output:"},{"lineNumber":457,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":458,"author":{"gitId":"Cocokkkk"},"content":"```"},{"lineNumber":459,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":460,"author":{"gitId":"Cocokkkk"},"content":"üôÅ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("},{"lineNumber":461,"author":{"gitId":"Cocokkkk"},"content":"Please input again!:)"},{"lineNumber":462,"author":{"gitId":"Cocokkkk"},"content":"___________________________________________"},{"lineNumber":463,"author":{"gitId":"Cocokkkk"},"content":"```"}],"authorContributionMap":{"-":9,"Cocokkkk":454}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"T | 0 | go home"}],"authorContributionMap":{"Cocokkkk":1}},{"path":"src/main/java/ip/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":" * Represents the whole Duke project"},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":" * Builds a Java project named Duke to store tasks in a given address."},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":" * a Duke(filepath) object represents a Duke project"},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":" * that store all task information in file at the path of filepath"},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":16,"author":{"gitId":"Cocokkkk"},"content":"    private Storage storage;"},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":"    private TaskList tasks;"},{"lineNumber":18,"author":{"gitId":"Cocokkkk"},"content":"    private Ui ui;"},{"lineNumber":19,"author":{"gitId":"Cocokkkk"},"content":"    private static final String filePath \u003d \"data/duke.txt\";"},{"lineNumber":20,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":21,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":22,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Cocokkkk"},"content":"     * The constructor for a Duke object, returns nothing"},{"lineNumber":24,"author":{"gitId":"Cocokkkk"},"content":"     * loading the task information that already exist in the file"},{"lineNumber":25,"author":{"gitId":"Cocokkkk"},"content":"     * which is written by previous runs"},{"lineNumber":26,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"Cocokkkk"},"content":"     * @param filePath the address of the file storing all task information into a certain taskList"},{"lineNumber":28,"author":{"gitId":"Cocokkkk"},"content":"     * @throws IOException the exception that occurs when encountered with problems in writing to"},{"lineNumber":29,"author":{"gitId":"Cocokkkk"},"content":"     *                     or reading from a file"},{"lineNumber":30,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Cocokkkk"},"content":"    public Duke(String filePath) {"},{"lineNumber":32,"author":{"gitId":"Cocokkkk"},"content":"        ui \u003d new Ui();"},{"lineNumber":33,"author":{"gitId":"Cocokkkk"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":34,"author":{"gitId":"Cocokkkk"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"Cocokkkk"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":36,"author":{"gitId":"Cocokkkk"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"Cocokkkk"},"content":"            ui.showLoadingError();"},{"lineNumber":38,"author":{"gitId":"Cocokkkk"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":39,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":42,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Cocokkkk"},"content":"     * Runs the Duke program."},{"lineNumber":44,"author":{"gitId":"Cocokkkk"},"content":"     * Starts the program by printing greeting information."},{"lineNumber":45,"author":{"gitId":"Cocokkkk"},"content":"     * The program continues running to get and handle the commands from user inputs until"},{"lineNumber":46,"author":{"gitId":"Cocokkkk"},"content":"     * the user input is an instruction (bye)"},{"lineNumber":47,"author":{"gitId":"Cocokkkk"},"content":"     * The program helps to store all task information into a specific file"},{"lineNumber":48,"author":{"gitId":"Cocokkkk"},"content":"     * The program ends when receives a \"bye\" instruction"},{"lineNumber":49,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"Cocokkkk"},"content":"     * @throws DukeException when the command received in is incomplete or different from any acceptable commands"},{"lineNumber":51,"author":{"gitId":"Cocokkkk"},"content":"     * @throws IOException   the exception that occurs when encountered with problems in writing to"},{"lineNumber":52,"author":{"gitId":"Cocokkkk"},"content":"     *                       or reading from a file"},{"lineNumber":53,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"Cocokkkk"},"content":"    public void run() throws IOException {"},{"lineNumber":55,"author":{"gitId":"Cocokkkk"},"content":"        Ui.printGreetings();"},{"lineNumber":56,"author":{"gitId":"Cocokkkk"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":57,"author":{"gitId":"Cocokkkk"},"content":"        String userCommand \u003d in.nextLine();"},{"lineNumber":58,"author":{"gitId":"Cocokkkk"},"content":"        while (!userCommand.equals(\"bye\")) {"},{"lineNumber":59,"author":{"gitId":"Cocokkkk"},"content":"            try {"},{"lineNumber":60,"author":{"gitId":"Cocokkkk"},"content":"                Parser.parseCommand(userCommand);"},{"lineNumber":61,"author":{"gitId":"Cocokkkk"},"content":"            } catch (DukeException e) {"},{"lineNumber":62,"author":{"gitId":"Cocokkkk"},"content":"                Ui.printInvalidInputWarnings(userCommand);"},{"lineNumber":63,"author":{"gitId":"Cocokkkk"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"Cocokkkk"},"content":"            userCommand \u003d in.nextLine();"},{"lineNumber":65,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":67,"author":{"gitId":"Cocokkkk"},"content":"        Storage.save();"},{"lineNumber":68,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":69,"author":{"gitId":"Cocokkkk"},"content":"        exit();"},{"lineNumber":70,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":72,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"Cocokkkk"},"content":"     * Exits the program by printing a bye message."},{"lineNumber":74,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"Cocokkkk"},"content":"    private void exit() {"},{"lineNumber":76,"author":{"gitId":"Cocokkkk"},"content":"        ui.printBye();"},{"lineNumber":77,"author":{"gitId":"Cocokkkk"},"content":"        System.exit(0);"},{"lineNumber":78,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":80,"author":{"gitId":"Cocokkkk"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":81,"author":{"gitId":"Cocokkkk"},"content":"        new Duke(filePath).run();"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":3,"Cocokkkk":80}},{"path":"src/main/java/ip/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.exception.*;"},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":"    private static final int ONE_SPACE_LENGTH \u003d 1;"},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":"    private static final int START_POSITION \u003d 0;"},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":"     * Parses the user\u0027s input into a format that can be recognized by the Duke project program."},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":"     * Apart from \"help\" \"list\" and \"bye\" commands, all other valid commands must be followed by further information."},{"lineNumber":14,"author":{"gitId":"Cocokkkk"},"content":"     * If the input is not an acceptable command or cannot be recognized correctly by this program"},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":"     * it will throw a DukeException."},{"lineNumber":16,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":"     * @param input the string input by user, which is regarded as a command"},{"lineNumber":18,"author":{"gitId":"Cocokkkk"},"content":"     * @throws DukeException an exception that occurs when an invalid command is input"},{"lineNumber":19,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Cocokkkk"},"content":"    public static void parseCommand(String input) throws DukeException {"},{"lineNumber":21,"author":{"gitId":"Cocokkkk"},"content":"        int lengthOfCommandType \u003d 0;"},{"lineNumber":22,"author":{"gitId":"Cocokkkk"},"content":"        String commandType;"},{"lineNumber":23,"author":{"gitId":"Cocokkkk"},"content":"        if (input.equals(\"help\") || input.equals(\"list\") || input.equals(\"bye\")) {"},{"lineNumber":24,"author":{"gitId":"Cocokkkk"},"content":"            commandType \u003d input;"},{"lineNumber":25,"author":{"gitId":"Cocokkkk"},"content":"        } else if (!input.contains(\" \")) {"},{"lineNumber":26,"author":{"gitId":"Cocokkkk"},"content":"            throw new DukeException();"},{"lineNumber":27,"author":{"gitId":"Cocokkkk"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"Cocokkkk"},"content":"            lengthOfCommandType \u003d input.indexOf(\u0027 \u0027);"},{"lineNumber":29,"author":{"gitId":"Cocokkkk"},"content":"            commandType \u003d input.substring(START_POSITION, lengthOfCommandType);"},{"lineNumber":30,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"Cocokkkk"},"content":"        String commandContent \u003d input.substring(lengthOfCommandType + ONE_SPACE_LENGTH);"},{"lineNumber":32,"author":{"gitId":"Cocokkkk"},"content":"        switch (commandType) {"},{"lineNumber":33,"author":{"gitId":"Cocokkkk"},"content":"        case \"help\":"},{"lineNumber":34,"author":{"gitId":"Cocokkkk"},"content":"            parseHelpCommand();"},{"lineNumber":35,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":36,"author":{"gitId":"Cocokkkk"},"content":"        case \"todo\":"},{"lineNumber":37,"author":{"gitId":"Cocokkkk"},"content":"            parseTodoCommand(commandContent);"},{"lineNumber":38,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":39,"author":{"gitId":"Cocokkkk"},"content":"        case \"deadline\":"},{"lineNumber":40,"author":{"gitId":"Cocokkkk"},"content":"            parseDeadlineCommand(commandContent);"},{"lineNumber":41,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":42,"author":{"gitId":"Cocokkkk"},"content":"        case \"event\":"},{"lineNumber":43,"author":{"gitId":"Cocokkkk"},"content":"            parseEventCommand(commandContent);"},{"lineNumber":44,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":45,"author":{"gitId":"Cocokkkk"},"content":"        case \"list\":"},{"lineNumber":46,"author":{"gitId":"Cocokkkk"},"content":"            parseListCommand();"},{"lineNumber":47,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":48,"author":{"gitId":"Cocokkkk"},"content":"        case \"done\":"},{"lineNumber":49,"author":{"gitId":"Cocokkkk"},"content":"            parseDoneCommand(commandContent);"},{"lineNumber":50,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":51,"author":{"gitId":"Cocokkkk"},"content":"        case \"delete\":"},{"lineNumber":52,"author":{"gitId":"Cocokkkk"},"content":"            parseDeleteCommand(commandContent);"},{"lineNumber":53,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":54,"author":{"gitId":"Cocokkkk"},"content":"        case \"find\":"},{"lineNumber":55,"author":{"gitId":"Cocokkkk"},"content":"            parseFindCommand(commandContent);"},{"lineNumber":56,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":57,"author":{"gitId":"Cocokkkk"},"content":"        case \"date\":"},{"lineNumber":58,"author":{"gitId":"Cocokkkk"},"content":"            parseDateCommand(commandContent);"},{"lineNumber":59,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":60,"author":{"gitId":"Cocokkkk"},"content":"        default:"},{"lineNumber":61,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":62,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":65,"author":{"gitId":"Cocokkkk"},"content":"    private static void parseHelpCommand() {"},{"lineNumber":66,"author":{"gitId":"Cocokkkk"},"content":"        Ui.printHelpMessage();"},{"lineNumber":67,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":69,"author":{"gitId":"Cocokkkk"},"content":"    private static void parseTodoCommand(String description) {"},{"lineNumber":70,"author":{"gitId":"Cocokkkk"},"content":"        TaskList.updateTodo(description);"},{"lineNumber":71,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":73,"author":{"gitId":"Cocokkkk"},"content":"    private static void parseDeadlineCommand(String commandContent) {"},{"lineNumber":74,"author":{"gitId":"Cocokkkk"},"content":"        try {"},{"lineNumber":75,"author":{"gitId":"Cocokkkk"},"content":"            TaskList.updateDeadline(commandContent);"},{"lineNumber":76,"author":{"gitId":"Cocokkkk"},"content":"        } catch (TimeException e) {"},{"lineNumber":77,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printDeadlineMissingMessage();"},{"lineNumber":78,"author":{"gitId":"Cocokkkk"},"content":"        } catch (DateException e) {"},{"lineNumber":79,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printDateInvalidMessage();"},{"lineNumber":80,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":83,"author":{"gitId":"Cocokkkk"},"content":"    private static void parseEventCommand(String commandContent) {"},{"lineNumber":84,"author":{"gitId":"Cocokkkk"},"content":"        try {"},{"lineNumber":85,"author":{"gitId":"Cocokkkk"},"content":"            TaskList.updateEvent(commandContent);"},{"lineNumber":86,"author":{"gitId":"Cocokkkk"},"content":"        } catch (TimeException e) {"},{"lineNumber":87,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printEventTimeMissingMessage();"},{"lineNumber":88,"author":{"gitId":"Cocokkkk"},"content":"        } catch (DateException e) {"},{"lineNumber":89,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printDateInvalidMessage();"},{"lineNumber":90,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":93,"author":{"gitId":"Cocokkkk"},"content":"    private static void parseListCommand() {"},{"lineNumber":94,"author":{"gitId":"Cocokkkk"},"content":"        TaskList.getCompleteList();"},{"lineNumber":95,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":97,"author":{"gitId":"Cocokkkk"},"content":"    private static void parseDoneCommand(String commandContent) {"},{"lineNumber":98,"author":{"gitId":"Cocokkkk"},"content":"        int doneIndex \u003d Integer.parseInt(commandContent);"},{"lineNumber":99,"author":{"gitId":"Cocokkkk"},"content":"        try {"},{"lineNumber":100,"author":{"gitId":"Cocokkkk"},"content":"            TaskList.markDone(doneIndex);"},{"lineNumber":101,"author":{"gitId":"Cocokkkk"},"content":"        } catch (IndexException e) {"},{"lineNumber":102,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printDoneInvalidMessage();"},{"lineNumber":103,"author":{"gitId":"Cocokkkk"},"content":"        } catch (ListException e) {"},{"lineNumber":104,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printEmptyListMessage();"},{"lineNumber":105,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":108,"author":{"gitId":"Cocokkkk"},"content":"    private static void parseDeleteCommand(String commandContent) {"},{"lineNumber":109,"author":{"gitId":"Cocokkkk"},"content":"        int deletedIndex \u003d Integer.parseInt(commandContent);"},{"lineNumber":110,"author":{"gitId":"Cocokkkk"},"content":"        try {"},{"lineNumber":111,"author":{"gitId":"Cocokkkk"},"content":"            TaskList.deleteTask(deletedIndex);"},{"lineNumber":112,"author":{"gitId":"Cocokkkk"},"content":"        } catch (IndexException e) {"},{"lineNumber":113,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printDeletedInvalidMessage();"},{"lineNumber":114,"author":{"gitId":"Cocokkkk"},"content":"        } catch (ListException e) {"},{"lineNumber":115,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printEmptyListMessage();"},{"lineNumber":116,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":119,"author":{"gitId":"Cocokkkk"},"content":"    private static void parseFindCommand(String commandContent) {"},{"lineNumber":120,"author":{"gitId":"Cocokkkk"},"content":"        try {"},{"lineNumber":121,"author":{"gitId":"Cocokkkk"},"content":"            TaskList.getFoundTask(commandContent);"},{"lineNumber":122,"author":{"gitId":"Cocokkkk"},"content":"        } catch (ListException e) {"},{"lineNumber":123,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printEmptyListMessage();"},{"lineNumber":124,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":127,"author":{"gitId":"Cocokkkk"},"content":"    private static void parseDateCommand(String commandContent) {"},{"lineNumber":128,"author":{"gitId":"Cocokkkk"},"content":"        try {"},{"lineNumber":129,"author":{"gitId":"Cocokkkk"},"content":"            TaskList.getDateTask(commandContent);"},{"lineNumber":130,"author":{"gitId":"Cocokkkk"},"content":"        } catch (DateException e) {"},{"lineNumber":131,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printDateInvalidMessage();"},{"lineNumber":132,"author":{"gitId":"Cocokkkk"},"content":"        } catch (ListException e) {"},{"lineNumber":133,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printEmptyListMessage();"},{"lineNumber":134,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":137,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":137}},{"path":"src/main/java/ip/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":"import java.io.File;"},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":"import java.io.FileWriter;"},{"lineNumber":14,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"Cocokkkk"},"content":" * Represents an object that deals with loading information from a file"},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":" * as well as writing information into it"},{"lineNumber":18,"author":{"gitId":"Cocokkkk"},"content":" * A Storage(filepath) object corresponds to an object that can read and write"},{"lineNumber":19,"author":{"gitId":"Cocokkkk"},"content":" * into the file at the path given by filepath"},{"lineNumber":20,"author":{"gitId":"Cocokkkk"},"content":" */"},{"lineNumber":21,"author":{"gitId":"Cocokkkk"},"content":"public class Storage {"},{"lineNumber":22,"author":{"gitId":"Cocokkkk"},"content":"    public static String filePath;"},{"lineNumber":23,"author":{"gitId":"Cocokkkk"},"content":"    public static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"Cocokkkk"},"content":"    private static final int ONE_INDEX \u003d 1;"},{"lineNumber":25,"author":{"gitId":"Cocokkkk"},"content":"    private static final int ONE_SPACE_LENGTH \u003d 1;"},{"lineNumber":26,"author":{"gitId":"Cocokkkk"},"content":"    private static final int TWO_SPACE_LENGTH \u003d 2;"},{"lineNumber":27,"author":{"gitId":"Cocokkkk"},"content":"    private static final int START_POSITION \u003d 0;"},{"lineNumber":28,"author":{"gitId":"Cocokkkk"},"content":"    private static final int TYPE_POSITION \u003d 1;"},{"lineNumber":29,"author":{"gitId":"Cocokkkk"},"content":"    private static final int STATUS_POSITION \u003d 4;"},{"lineNumber":30,"author":{"gitId":"Cocokkkk"},"content":"    private static final int CONTENT_POSITION \u003d 8;"},{"lineNumber":31,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":32,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":33,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Cocokkkk"},"content":"     * Constructs a Storage object to access the data in the given address."},{"lineNumber":35,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"Cocokkkk"},"content":"     * @param filePath the String given to find the path of the file."},{"lineNumber":37,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Cocokkkk"},"content":"    public Storage(String filePath) {"},{"lineNumber":39,"author":{"gitId":"Cocokkkk"},"content":"        Storage.filePath \u003d filePath;"},{"lineNumber":40,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":42,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Cocokkkk"},"content":"     * Loads the data stored in the given file address and re-formats them into a task list."},{"lineNumber":44,"author":{"gitId":"Cocokkkk"},"content":"     * If the file does not exist, create a new file to store the task information"},{"lineNumber":45,"author":{"gitId":"Cocokkkk"},"content":"     * The stored data may contain three types todo, deadline, and event with their corresponding task status."},{"lineNumber":46,"author":{"gitId":"Cocokkkk"},"content":"     * no parameters"},{"lineNumber":47,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"Cocokkkk"},"content":"     * @return the task list that read from that file"},{"lineNumber":49,"author":{"gitId":"Cocokkkk"},"content":"     * @throws IOException an exception occurs when encountered with problems reading into the file"},{"lineNumber":50,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"Cocokkkk"},"content":"    public static ArrayList\u003cTask\u003e load() throws IOException {"},{"lineNumber":52,"author":{"gitId":"Cocokkkk"},"content":"        File dataFile \u003d new File(filePath);"},{"lineNumber":53,"author":{"gitId":"Cocokkkk"},"content":"        if (dataFile.createNewFile()) {"},{"lineNumber":54,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printLine();"},{"lineNumber":55,"author":{"gitId":"Cocokkkk"},"content":"            System.out.println(\"Since the file does not exist, I have created a new one.\");"},{"lineNumber":56,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printLine();"},{"lineNumber":57,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"Cocokkkk"},"content":"        Scanner dataScanner \u003d new Scanner(dataFile);"},{"lineNumber":59,"author":{"gitId":"Cocokkkk"},"content":"        while (dataScanner.hasNext()) {"},{"lineNumber":60,"author":{"gitId":"Cocokkkk"},"content":"            String data \u003d dataScanner.nextLine();"},{"lineNumber":61,"author":{"gitId":"Cocokkkk"},"content":"            String type \u003d data.substring(START_POSITION, TYPE_POSITION);"},{"lineNumber":62,"author":{"gitId":"Cocokkkk"},"content":"            boolean isDone \u003d data.charAt(STATUS_POSITION) \u003d\u003d \u00271\u0027;"},{"lineNumber":63,"author":{"gitId":"Cocokkkk"},"content":"            String content \u003d data.substring(CONTENT_POSITION);"},{"lineNumber":64,"author":{"gitId":"Cocokkkk"},"content":"            String description \u003d content;"},{"lineNumber":65,"author":{"gitId":"Cocokkkk"},"content":"            String byTime;"},{"lineNumber":66,"author":{"gitId":"Cocokkkk"},"content":"            String atTime;"},{"lineNumber":67,"author":{"gitId":"Cocokkkk"},"content":"            int separatePoint \u003d content.length() - ONE_SPACE_LENGTH;"},{"lineNumber":68,"author":{"gitId":"Cocokkkk"},"content":"            if (content.contains(\"|\")) {"},{"lineNumber":69,"author":{"gitId":"Cocokkkk"},"content":"                separatePoint \u003d content.indexOf(\"|\");"},{"lineNumber":70,"author":{"gitId":"Cocokkkk"},"content":"                description \u003d content.substring(START_POSITION, separatePoint - ONE_SPACE_LENGTH);"},{"lineNumber":71,"author":{"gitId":"Cocokkkk"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"Cocokkkk"},"content":"            switch (type) {"},{"lineNumber":73,"author":{"gitId":"Cocokkkk"},"content":"            case \"T\":"},{"lineNumber":74,"author":{"gitId":"Cocokkkk"},"content":"                fileUpdateTodo(list, description, isDone);"},{"lineNumber":75,"author":{"gitId":"Cocokkkk"},"content":"                break;"},{"lineNumber":76,"author":{"gitId":"Cocokkkk"},"content":"            case \"D\":"},{"lineNumber":77,"author":{"gitId":"Cocokkkk"},"content":"                byTime \u003d content.substring(separatePoint + TWO_SPACE_LENGTH);"},{"lineNumber":78,"author":{"gitId":"Cocokkkk"},"content":"                fileUpdateDeadline(list, description, byTime, isDone);"},{"lineNumber":79,"author":{"gitId":"Cocokkkk"},"content":"                break;"},{"lineNumber":80,"author":{"gitId":"Cocokkkk"},"content":"            case \"E\":"},{"lineNumber":81,"author":{"gitId":"Cocokkkk"},"content":"                atTime \u003d content.substring(separatePoint + TWO_SPACE_LENGTH);"},{"lineNumber":82,"author":{"gitId":"Cocokkkk"},"content":"                fileUpdateEvent(list, description, atTime, isDone);"},{"lineNumber":83,"author":{"gitId":"Cocokkkk"},"content":"                break;"},{"lineNumber":84,"author":{"gitId":"Cocokkkk"},"content":"            default:"},{"lineNumber":85,"author":{"gitId":"Cocokkkk"},"content":"                break;"},{"lineNumber":86,"author":{"gitId":"Cocokkkk"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"Cocokkkk"},"content":"        return list;"},{"lineNumber":89,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":91,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"Cocokkkk"},"content":"     * Update a todo type task read from the file to the task list."},{"lineNumber":93,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"Cocokkkk"},"content":"     * @param list        the list that stores all the tasks"},{"lineNumber":95,"author":{"gitId":"Cocokkkk"},"content":"     * @param description the string that describe this todo task"},{"lineNumber":96,"author":{"gitId":"Cocokkkk"},"content":"     * @param isDone      the status of this todo tasks"},{"lineNumber":97,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"Cocokkkk"},"content":"    public static void fileUpdateTodo(ArrayList\u003cTask\u003e list, String description, boolean isDone) {"},{"lineNumber":99,"author":{"gitId":"Cocokkkk"},"content":"        list.add(new Todo(description));"},{"lineNumber":100,"author":{"gitId":"Cocokkkk"},"content":"        list.get(list.size() - ONE_INDEX).setDone(isDone);"},{"lineNumber":101,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":103,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"Cocokkkk"},"content":"     * Update a deadline type task read from the file to the task list."},{"lineNumber":105,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"Cocokkkk"},"content":"     * @param list        the list that stores all the tasks"},{"lineNumber":107,"author":{"gitId":"Cocokkkk"},"content":"     * @param description the string that describe this todo task"},{"lineNumber":108,"author":{"gitId":"Cocokkkk"},"content":"     * @param byTime      the string representing the latest time the task should be done"},{"lineNumber":109,"author":{"gitId":"Cocokkkk"},"content":"     * @param isDone      the status of this todo tasks"},{"lineNumber":110,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"Cocokkkk"},"content":"    public static void fileUpdateDeadline(ArrayList\u003cTask\u003e list, String description, String byTime, boolean isDone) {"},{"lineNumber":112,"author":{"gitId":"Cocokkkk"},"content":"        list.add(new Deadline(description, byTime));"},{"lineNumber":113,"author":{"gitId":"Cocokkkk"},"content":"        list.get(list.size() - ONE_INDEX).setDone(isDone);"},{"lineNumber":114,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":116,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"Cocokkkk"},"content":"     * Update an event type task read from the file to the task list."},{"lineNumber":118,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"Cocokkkk"},"content":"     * @param list        the list that stores all the tasks"},{"lineNumber":120,"author":{"gitId":"Cocokkkk"},"content":"     * @param description the string that describe this todo task"},{"lineNumber":121,"author":{"gitId":"Cocokkkk"},"content":"     * @param atTime      the string representing the time the task should start"},{"lineNumber":122,"author":{"gitId":"Cocokkkk"},"content":"     * @param isDone      the status of this todo tasks"},{"lineNumber":123,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":124,"author":{"gitId":"Cocokkkk"},"content":"    public static void fileUpdateEvent(ArrayList\u003cTask\u003e list, String description, String atTime, boolean isDone) {"},{"lineNumber":125,"author":{"gitId":"Cocokkkk"},"content":"        list.add(new Event(description, atTime));"},{"lineNumber":126,"author":{"gitId":"Cocokkkk"},"content":"        list.get(list.size() - ONE_INDEX).setDone(isDone);"},{"lineNumber":127,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":129,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"Cocokkkk"},"content":"     * Save the updated task list information as data format"},{"lineNumber":131,"author":{"gitId":"Cocokkkk"},"content":"     * back to the given file address whenever the task list changes."},{"lineNumber":132,"author":{"gitId":"Cocokkkk"},"content":"     * returns nothing"},{"lineNumber":133,"author":{"gitId":"Cocokkkk"},"content":"     * if the ArrayList is empty, nothing will be written"},{"lineNumber":134,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":135,"author":{"gitId":"Cocokkkk"},"content":"     * @throws IOException an exception occurs when encountered with problems writing to the file"},{"lineNumber":136,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"Cocokkkk"},"content":"    public static void save() throws IOException {"},{"lineNumber":138,"author":{"gitId":"Cocokkkk"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":139,"author":{"gitId":"Cocokkkk"},"content":"        for (int i \u003d 0; i \u003c TaskList.getSize(); i++) {"},{"lineNumber":140,"author":{"gitId":"Cocokkkk"},"content":"            fw.write(TaskList.getList().get(i).toDataString() + \"\\n\");"},{"lineNumber":141,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"Cocokkkk"},"content":"        fw.close();"},{"lineNumber":143,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":144}},{"path":"src/main/java/ip/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.exception.*;"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.task.Deadline;"},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.task.Event;"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.task.Todo;"},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":"import java.time.LocalDate;"},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":"public class TaskList {"},{"lineNumber":14,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":"    private static final int ONE_INDEX \u003d 1;"},{"lineNumber":16,"author":{"gitId":"Cocokkkk"},"content":"    private static final int START_POSITION \u003d 0;"},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":"    private static final int SHORT_LINE1_POSITION \u003d 4;"},{"lineNumber":18,"author":{"gitId":"Cocokkkk"},"content":"    private static final int SHORT_LINE2_POSITION \u003d 7;"},{"lineNumber":19,"author":{"gitId":"Cocokkkk"},"content":"    private static final int DATE_LENGTH \u003d 10;"},{"lineNumber":20,"author":{"gitId":"Cocokkkk"},"content":"    private static final int BY_SPACE_LENGTH \u003d 4;"},{"lineNumber":21,"author":{"gitId":"Cocokkkk"},"content":"    private static final int BY_SPACE_SLASH_LENGTH \u003d 5;"},{"lineNumber":22,"author":{"gitId":"Cocokkkk"},"content":"    private static final int AT_SPACE_LENGTH \u003d 4;"},{"lineNumber":23,"author":{"gitId":"Cocokkkk"},"content":"    private static final int AT_SPACE_SLASH_LENGTH \u003d 5;"},{"lineNumber":24,"author":{"gitId":"Cocokkkk"},"content":"    private static final int TIME_POSITION \u003d 10;"},{"lineNumber":25,"author":{"gitId":"Cocokkkk"},"content":"    private static final String SPACE \u003d \" \";"},{"lineNumber":26,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":27,"author":{"gitId":"Cocokkkk"},"content":"    public static ArrayList\u003cTask\u003e list;"},{"lineNumber":28,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":29,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Cocokkkk"},"content":"     * Constructs a new task list if there is no data stored in the given address."},{"lineNumber":31,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Cocokkkk"},"content":"    public TaskList() {"},{"lineNumber":33,"author":{"gitId":"Cocokkkk"},"content":"        list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":36,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"Cocokkkk"},"content":"     * Constructs a task list by reading from the file in the given address."},{"lineNumber":38,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"Cocokkkk"},"content":"     * @param list the task list that is read from the file in the given address"},{"lineNumber":40,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"Cocokkkk"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {"},{"lineNumber":42,"author":{"gitId":"Cocokkkk"},"content":"        TaskList.list \u003d list;"},{"lineNumber":43,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":45,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"Cocokkkk"},"content":"     * Updates a Todo type task into the task list"},{"lineNumber":47,"author":{"gitId":"Cocokkkk"},"content":"     * and confirms the operation by printing a confirmation message"},{"lineNumber":48,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"Cocokkkk"},"content":"     * @param description the description of this Todo task obtained by parsing the user\u0027s input command"},{"lineNumber":50,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"Cocokkkk"},"content":"    public static void updateTodo(String description) {"},{"lineNumber":52,"author":{"gitId":"Cocokkkk"},"content":"        list.add(new Todo(description));"},{"lineNumber":53,"author":{"gitId":"Cocokkkk"},"content":"        Ui.printRecordMessage(list.get(list.size() - ONE_INDEX));"},{"lineNumber":54,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":56,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"Cocokkkk"},"content":"     * Updates a Deadline type task into the task list"},{"lineNumber":58,"author":{"gitId":"Cocokkkk"},"content":"     * and confirms the operation by printing a confirmation message"},{"lineNumber":59,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"Cocokkkk"},"content":"     * @throws TimeException an exception occurs if the due time of this Deadline task is missing"},{"lineNumber":61,"author":{"gitId":"Cocokkkk"},"content":"     * @throws DateException an exception occurs if the date format is not correct"},{"lineNumber":62,"author":{"gitId":"Cocokkkk"},"content":"     * @oaram commandContent the user input content of this Deadline task"},{"lineNumber":63,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"Cocokkkk"},"content":"    public static void updateDeadline(String commandContent) throws TimeException, DateException {"},{"lineNumber":65,"author":{"gitId":"Cocokkkk"},"content":"        if (!commandContent.contains(\"/\") || !commandContent.contains(\"by\")) {"},{"lineNumber":66,"author":{"gitId":"Cocokkkk"},"content":"            throw new TimeException();"},{"lineNumber":67,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"Cocokkkk"},"content":"        int byTimePosition \u003d commandContent.indexOf(\"/\") + BY_SPACE_LENGTH;"},{"lineNumber":69,"author":{"gitId":"Cocokkkk"},"content":"        String description \u003d commandContent.substring(START_POSITION, byTimePosition - BY_SPACE_SLASH_LENGTH);"},{"lineNumber":70,"author":{"gitId":"Cocokkkk"},"content":"        String byTime \u003d commandContent.substring(byTimePosition);"},{"lineNumber":71,"author":{"gitId":"Cocokkkk"},"content":"        if (byTime.length() \u003c DATE_LENGTH ||"},{"lineNumber":72,"author":{"gitId":"Cocokkkk"},"content":"                byTime.charAt(SHORT_LINE1_POSITION) !\u003d (\u0027-\u0027) ||"},{"lineNumber":73,"author":{"gitId":"Cocokkkk"},"content":"                byTime.charAt(SHORT_LINE2_POSITION) !\u003d (\u0027-\u0027)"},{"lineNumber":74,"author":{"gitId":"Cocokkkk"},"content":"        ) {"},{"lineNumber":75,"author":{"gitId":"Cocokkkk"},"content":"            throw new DateException();"},{"lineNumber":76,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"Cocokkkk"},"content":"        String theDay;"},{"lineNumber":78,"author":{"gitId":"Cocokkkk"},"content":"        String theTime;"},{"lineNumber":79,"author":{"gitId":"Cocokkkk"},"content":"        LocalDate date \u003d LocalDate.parse(byTime.substring(START_POSITION, DATE_LENGTH));"},{"lineNumber":80,"author":{"gitId":"Cocokkkk"},"content":"        theDay \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":81,"author":{"gitId":"Cocokkkk"},"content":"        theTime \u003d byTime.substring(TIME_POSITION);"},{"lineNumber":82,"author":{"gitId":"Cocokkkk"},"content":"        byTime \u003d theDay + SPACE + theTime;"},{"lineNumber":83,"author":{"gitId":"Cocokkkk"},"content":"        list.add(new Deadline(description, byTime));"},{"lineNumber":84,"author":{"gitId":"Cocokkkk"},"content":"        Ui.printRecordMessage(list.get(list.size() - ONE_INDEX));"},{"lineNumber":85,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":87,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"Cocokkkk"},"content":"     * Updates an Event type task into the task list"},{"lineNumber":89,"author":{"gitId":"Cocokkkk"},"content":"     * and confirms the operation by printing a confirmation message"},{"lineNumber":90,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"Cocokkkk"},"content":"     * @param commandContent the user input content of this Event task"},{"lineNumber":92,"author":{"gitId":"Cocokkkk"},"content":"     * @throws TimeException an exception occurs if the start time of this Event task is missing"},{"lineNumber":93,"author":{"gitId":"Cocokkkk"},"content":"     * @throws DateException an exception occurs if the date format is not correct"},{"lineNumber":94,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"Cocokkkk"},"content":"    public static void updateEvent(String commandContent) throws TimeException, DateException {"},{"lineNumber":96,"author":{"gitId":"Cocokkkk"},"content":"        if (!commandContent.contains(\"/\") || !commandContent.contains(\"at\")) {"},{"lineNumber":97,"author":{"gitId":"Cocokkkk"},"content":"            throw new TimeException();"},{"lineNumber":98,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"Cocokkkk"},"content":"        int atTimePosition \u003d commandContent.indexOf(\"/\") + AT_SPACE_LENGTH;"},{"lineNumber":100,"author":{"gitId":"Cocokkkk"},"content":"        String description \u003d commandContent.substring(START_POSITION, atTimePosition - AT_SPACE_SLASH_LENGTH);"},{"lineNumber":101,"author":{"gitId":"Cocokkkk"},"content":"        String atTime \u003d commandContent.substring(atTimePosition);"},{"lineNumber":102,"author":{"gitId":"Cocokkkk"},"content":"        if (atTime.length() \u003c DATE_LENGTH ||"},{"lineNumber":103,"author":{"gitId":"Cocokkkk"},"content":"                atTime.charAt(SHORT_LINE1_POSITION) !\u003d (\u0027-\u0027)"},{"lineNumber":104,"author":{"gitId":"Cocokkkk"},"content":"                || atTime.charAt(SHORT_LINE2_POSITION) !\u003d (\u0027-\u0027)"},{"lineNumber":105,"author":{"gitId":"Cocokkkk"},"content":"        ) {"},{"lineNumber":106,"author":{"gitId":"Cocokkkk"},"content":"            throw new DateException();"},{"lineNumber":107,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"Cocokkkk"},"content":"        String theDay;"},{"lineNumber":109,"author":{"gitId":"Cocokkkk"},"content":"        String theTime;"},{"lineNumber":110,"author":{"gitId":"Cocokkkk"},"content":"        LocalDate date \u003d LocalDate.parse(atTime.substring(START_POSITION, DATE_LENGTH));"},{"lineNumber":111,"author":{"gitId":"Cocokkkk"},"content":"        theDay \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":112,"author":{"gitId":"Cocokkkk"},"content":"        theTime \u003d atTime.substring(TIME_POSITION);"},{"lineNumber":113,"author":{"gitId":"Cocokkkk"},"content":"        atTime \u003d theDay + SPACE + theTime;"},{"lineNumber":114,"author":{"gitId":"Cocokkkk"},"content":"        list.add(new Event(description, atTime));"},{"lineNumber":115,"author":{"gitId":"Cocokkkk"},"content":"        Ui.printRecordMessage(list.get(list.size() - ONE_INDEX));"},{"lineNumber":116,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":118,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"Cocokkkk"},"content":"     * Marks the indicated user\u0027s input task as done"},{"lineNumber":120,"author":{"gitId":"Cocokkkk"},"content":"     * and confirms the marking operation by printing a confirmation message."},{"lineNumber":121,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":122,"author":{"gitId":"Cocokkkk"},"content":"     * @param doneIndex the index of the task that to be marked as done"},{"lineNumber":123,"author":{"gitId":"Cocokkkk"},"content":"     * @throws IndexException an exception occurs if the user input index"},{"lineNumber":124,"author":{"gitId":"Cocokkkk"},"content":"     *                        of the task to be mark as done is out of the range of the task list"},{"lineNumber":125,"author":{"gitId":"Cocokkkk"},"content":"     * @throws ListException  an exception occurs if there is no task in the task list"},{"lineNumber":126,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"Cocokkkk"},"content":"    public static void markDone(int doneIndex) throws IndexException, ListException {"},{"lineNumber":128,"author":{"gitId":"Cocokkkk"},"content":"        if (list.size() \u003d\u003d 0) {"},{"lineNumber":129,"author":{"gitId":"Cocokkkk"},"content":"            throw new ListException();"},{"lineNumber":130,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"Cocokkkk"},"content":"        if (doneIndex \u003e\u003d list.size() + 1 || doneIndex \u003c\u003d 0) {"},{"lineNumber":132,"author":{"gitId":"Cocokkkk"},"content":"            throw new IndexException();"},{"lineNumber":133,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"Cocokkkk"},"content":"        Task doneTask \u003d list.get(doneIndex - ONE_INDEX);"},{"lineNumber":135,"author":{"gitId":"Cocokkkk"},"content":"        doneTask.setDone(true);"},{"lineNumber":136,"author":{"gitId":"Cocokkkk"},"content":"        list.set(doneIndex - ONE_INDEX, doneTask);"},{"lineNumber":137,"author":{"gitId":"Cocokkkk"},"content":"        Ui.printDoneMessage(doneTask);"},{"lineNumber":138,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":140,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"Cocokkkk"},"content":"     * Deletes the indicated user\u0027s input task from the task list"},{"lineNumber":142,"author":{"gitId":"Cocokkkk"},"content":"     * and confirms the marking operation by printing a confirmation message."},{"lineNumber":143,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":144,"author":{"gitId":"Cocokkkk"},"content":"     * @param deletedIndex the index of the task that to be deleted"},{"lineNumber":145,"author":{"gitId":"Cocokkkk"},"content":"     * @throws DukeException an exception occurs if the user input index"},{"lineNumber":146,"author":{"gitId":"Cocokkkk"},"content":"     *                       of the task to deleted is out of the range of the task list"},{"lineNumber":147,"author":{"gitId":"Cocokkkk"},"content":"     * @throws ListException an exception occurs if there is no task in the task list"},{"lineNumber":148,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"Cocokkkk"},"content":"    public static void deleteTask(int deletedIndex) throws IndexException, ListException {"},{"lineNumber":150,"author":{"gitId":"Cocokkkk"},"content":"        if (list.size() \u003d\u003d 0) {"},{"lineNumber":151,"author":{"gitId":"Cocokkkk"},"content":"            throw new ListException();"},{"lineNumber":152,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"Cocokkkk"},"content":"        if (deletedIndex \u003e\u003d list.size() + 1 || deletedIndex \u003c\u003d 0) {"},{"lineNumber":154,"author":{"gitId":"Cocokkkk"},"content":"            throw new IndexException();"},{"lineNumber":155,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"Cocokkkk"},"content":"        Task deletedTask \u003d list.get(deletedIndex - ONE_INDEX);"},{"lineNumber":157,"author":{"gitId":"Cocokkkk"},"content":"        Ui.printDeletedMessage(deletedTask);"},{"lineNumber":158,"author":{"gitId":"Cocokkkk"},"content":"        list.remove(deletedIndex - ONE_INDEX);"},{"lineNumber":159,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":161,"author":{"gitId":"Cocokkkk"},"content":"    public static int getSize() {"},{"lineNumber":162,"author":{"gitId":"Cocokkkk"},"content":"        return list.size();"},{"lineNumber":163,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":165,"author":{"gitId":"Cocokkkk"},"content":"    public static ArrayList\u003cTask\u003e getList() {"},{"lineNumber":166,"author":{"gitId":"Cocokkkk"},"content":"        return list;"},{"lineNumber":167,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":169,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":170,"author":{"gitId":"Cocokkkk"},"content":"     * Prints all tasks in the task list if the list is not empty"},{"lineNumber":171,"author":{"gitId":"Cocokkkk"},"content":"     * Prints a message to tell the user the list is empty if there is no task in the task list"},{"lineNumber":172,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":173,"author":{"gitId":"Cocokkkk"},"content":"    public static void getCompleteList() {"},{"lineNumber":174,"author":{"gitId":"Cocokkkk"},"content":"        if (list.size() \u003d\u003d 0) {"},{"lineNumber":175,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printEmptyListMessage();"},{"lineNumber":176,"author":{"gitId":"Cocokkkk"},"content":"        } else {"},{"lineNumber":177,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printList(list);"},{"lineNumber":178,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":181,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":182,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":183,"author":{"gitId":"Cocokkkk"},"content":"     * Obtains the tasks that contains the keyword that input by user and stores them in another task list."},{"lineNumber":184,"author":{"gitId":"Cocokkkk"},"content":"     * Prints the new task list obtained before if the new task list is not empty"},{"lineNumber":185,"author":{"gitId":"Cocokkkk"},"content":"     * Prints a message if there is no matching task in the list so the new task list is empty"},{"lineNumber":186,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":187,"author":{"gitId":"Cocokkkk"},"content":"     * @param keywordToFind the keyword that the user want all the matching tasks to contain"},{"lineNumber":188,"author":{"gitId":"Cocokkkk"},"content":"     * @throws ListException an exception occurs when there is no task in the task list"},{"lineNumber":189,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":190,"author":{"gitId":"Cocokkkk"},"content":"    public static void getFoundTask(String keywordToFind) throws ListException {"},{"lineNumber":191,"author":{"gitId":"Cocokkkk"},"content":"        if (list.size() \u003d\u003d 0) {"},{"lineNumber":192,"author":{"gitId":"Cocokkkk"},"content":"            throw new ListException();"},{"lineNumber":193,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":194,"author":{"gitId":"Cocokkkk"},"content":"        ArrayList\u003cTask\u003e foundList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":195,"author":{"gitId":"Cocokkkk"},"content":"        for (Task task : list) {"},{"lineNumber":196,"author":{"gitId":"Cocokkkk"},"content":"            if (task.getDescription().contains(keywordToFind)) {"},{"lineNumber":197,"author":{"gitId":"Cocokkkk"},"content":"                foundList.add(task);"},{"lineNumber":198,"author":{"gitId":"Cocokkkk"},"content":"            }"},{"lineNumber":199,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"Cocokkkk"},"content":"        if (foundList.size() !\u003d 0) {"},{"lineNumber":201,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printFoundList(foundList);"},{"lineNumber":202,"author":{"gitId":"Cocokkkk"},"content":"        } else {"},{"lineNumber":203,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printEmptyMessage();"},{"lineNumber":204,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":207,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":208,"author":{"gitId":"Cocokkkk"},"content":"     * Obtains the tasks that contains the date that input by user and stores them in another task list."},{"lineNumber":209,"author":{"gitId":"Cocokkkk"},"content":"     * Prints the new list obtained before if the new task list is not empty"},{"lineNumber":210,"author":{"gitId":"Cocokkkk"},"content":"     * Prints a message if there is no matching task in the list so the new list is empty"},{"lineNumber":211,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":212,"author":{"gitId":"Cocokkkk"},"content":"     * @param commandContent the description of the date type"},{"lineNumber":213,"author":{"gitId":"Cocokkkk"},"content":"     * @throws DateException an exception occurs if the user input date is not follow the correct format"},{"lineNumber":214,"author":{"gitId":"Cocokkkk"},"content":"     * @throws ListException an exception occurs if there is no task in the task list"},{"lineNumber":215,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":216,"author":{"gitId":"Cocokkkk"},"content":"    public static void getDateTask(String commandContent) throws DateException, ListException {"},{"lineNumber":217,"author":{"gitId":"Cocokkkk"},"content":"        if (list.size() \u003d\u003d 0) {"},{"lineNumber":218,"author":{"gitId":"Cocokkkk"},"content":"            throw new ListException();"},{"lineNumber":219,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":220,"author":{"gitId":"Cocokkkk"},"content":"        if (commandContent.length() \u003c DATE_LENGTH ||"},{"lineNumber":221,"author":{"gitId":"Cocokkkk"},"content":"                commandContent.charAt(SHORT_LINE1_POSITION) !\u003d (\u0027-\u0027) ||"},{"lineNumber":222,"author":{"gitId":"Cocokkkk"},"content":"                commandContent.charAt(SHORT_LINE2_POSITION) !\u003d (\u0027-\u0027)"},{"lineNumber":223,"author":{"gitId":"Cocokkkk"},"content":"        ) {"},{"lineNumber":224,"author":{"gitId":"Cocokkkk"},"content":"            throw new DateException();"},{"lineNumber":225,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"Cocokkkk"},"content":"        String dateToFind \u003d commandContent.substring(START_POSITION, DATE_LENGTH);"},{"lineNumber":227,"author":{"gitId":"Cocokkkk"},"content":"        LocalDate date \u003d LocalDate.parse(dateToFind);"},{"lineNumber":228,"author":{"gitId":"Cocokkkk"},"content":"        dateToFind \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":229,"author":{"gitId":"Cocokkkk"},"content":"        ArrayList\u003cTask\u003e dateList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":230,"author":{"gitId":"Cocokkkk"},"content":"        for (Task task : list) {"},{"lineNumber":231,"author":{"gitId":"Cocokkkk"},"content":"            if (task.toString().contains(dateToFind)) {"},{"lineNumber":232,"author":{"gitId":"Cocokkkk"},"content":"                dateList.add(task);"},{"lineNumber":233,"author":{"gitId":"Cocokkkk"},"content":"            }"},{"lineNumber":234,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":235,"author":{"gitId":"Cocokkkk"},"content":"        if (dateList.size() !\u003d 0) {"},{"lineNumber":236,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printDateList(dateList);"},{"lineNumber":237,"author":{"gitId":"Cocokkkk"},"content":"        } else {"},{"lineNumber":238,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printNoMessage();"},{"lineNumber":239,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":240,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":241,"author":{"gitId":"Cocokkkk"},"content":"}"},{"lineNumber":242,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":243,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":244,"author":{"gitId":"Cocokkkk"},"content":""}],"authorContributionMap":{"Cocokkkk":244}},{"path":"src/main/java/ip/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":"public class Ui {"},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":"     * Prints the Duke logo and the greeting message when the program starts to run."},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":"    public static void printGreetings() {"},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":14,"author":{"gitId":"Cocokkkk"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":16,"author":{"gitId":"Cocokkkk"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":18,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":19,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":20,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"},{"lineNumber":21,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":22,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":24,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Cocokkkk"},"content":"     * Prints an error message when there is no data stored in the text file to be loaded."},{"lineNumber":26,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Cocokkkk"},"content":"    public static void showLoadingError() {"},{"lineNumber":28,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":29,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"There is no existing data to load... \");"},{"lineNumber":30,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":31,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":33,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Cocokkkk"},"content":"     * Prints the corresponding error message for different type of invalid inputs."},{"lineNumber":35,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"Cocokkkk"},"content":"     * @param input the invalid input which is not a command or does not provide enough information"},{"lineNumber":37,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Cocokkkk"},"content":"    public static void printInvalidInputWarnings(String input) {"},{"lineNumber":39,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":40,"author":{"gitId":"Cocokkkk"},"content":"        switch (input) {"},{"lineNumber":41,"author":{"gitId":"Cocokkkk"},"content":"        case \"todo\":"},{"lineNumber":42,"author":{"gitId":"Cocokkkk"},"content":"        case \"deadline\":"},{"lineNumber":43,"author":{"gitId":"Cocokkkk"},"content":"        case \"done\":"},{"lineNumber":44,"author":{"gitId":"Cocokkkk"},"content":"        case \"delete\":"},{"lineNumber":45,"author":{"gitId":"Cocokkkk"},"content":"        case \"find\":"},{"lineNumber":46,"author":{"gitId":"Cocokkkk"},"content":"        case \"date\":"},{"lineNumber":47,"author":{"gitId":"Cocokkkk"},"content":"            System.out.println(\"üôÅ OOPS!!! The description of a \" + input + \" cannot be empty.\");"},{"lineNumber":48,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":49,"author":{"gitId":"Cocokkkk"},"content":"        case \"event\":"},{"lineNumber":50,"author":{"gitId":"Cocokkkk"},"content":"            System.out.println(\"üôÅ OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":51,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":52,"author":{"gitId":"Cocokkkk"},"content":"        default:"},{"lineNumber":53,"author":{"gitId":"Cocokkkk"},"content":"            System.out.println(\"üôÅ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":54,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":55,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Please input again!:)\");"},{"lineNumber":57,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":58,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":60,"author":{"gitId":"Cocokkkk"},"content":"    public static void printLine() {"},{"lineNumber":61,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"___________________________________________\");"},{"lineNumber":62,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":64,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"Cocokkkk"},"content":"     * Prints all acceptable commands and the input examples of this project"},{"lineNumber":66,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"Cocokkkk"},"content":"    public static void printHelpMessage() {"},{"lineNumber":68,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":69,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Here are some available commands and their corresponding input format: \");"},{"lineNumber":70,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println("},{"lineNumber":71,"author":{"gitId":"Cocokkkk"},"content":"                \"\\nlist: Display all tasks in the list.\" +"},{"lineNumber":72,"author":{"gitId":"Cocokkkk"},"content":"                        \"\\nFormat: list\\n\" +"},{"lineNumber":73,"author":{"gitId":"Cocokkkk"},"content":"                        \"\\ntodo: Add a todo task.\" +"},{"lineNumber":74,"author":{"gitId":"Cocokkkk"},"content":"                        \"\\nFormat: todo read a book\\n\" +"},{"lineNumber":75,"author":{"gitId":"Cocokkkk"},"content":"                        \"\\ndeadline: Add a deadline task.\" +"},{"lineNumber":76,"author":{"gitId":"Cocokkkk"},"content":"                        \"\\nFormat: deadline submit a report /by 05 Mar\\n\" +"},{"lineNumber":77,"author":{"gitId":"Cocokkkk"},"content":"                        \"\\nevent: Add an event task.\" +"},{"lineNumber":78,"author":{"gitId":"Cocokkkk"},"content":"                        \"\\nFormat: event project meeting /at Mon 2-4pm\\n\" +"},{"lineNumber":79,"author":{"gitId":"Cocokkkk"},"content":"                        \"\\ndone: Mark a task as done.\" +"},{"lineNumber":80,"author":{"gitId":"Cocokkkk"},"content":"                        \"\\nFormat: done 1\\n\" +"},{"lineNumber":81,"author":{"gitId":"Cocokkkk"},"content":"                        \"\\nfind: find all tasks contain the input keyword\" +"},{"lineNumber":82,"author":{"gitId":"Cocokkkk"},"content":"                        \"\\nFormat: find book\\n\" +"},{"lineNumber":83,"author":{"gitId":"Cocokkkk"},"content":"                        \"\\ndate: find all tasks occurring the specific date\" +"},{"lineNumber":84,"author":{"gitId":"Cocokkkk"},"content":"                        \"\\nFormat: date 2021-02-28\\n\" +"},{"lineNumber":85,"author":{"gitId":"Cocokkkk"},"content":"                        \"\\nbye: Exit the program.\" +"},{"lineNumber":86,"author":{"gitId":"Cocokkkk"},"content":"                        \"\\nFormat: bye\\n\");"},{"lineNumber":87,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":88,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":90,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"Cocokkkk"},"content":"     * Prints a message to confirm the task updated successfully by printing the formatted task"},{"lineNumber":92,"author":{"gitId":"Cocokkkk"},"content":"     * and the current number of tasks in the updated task list."},{"lineNumber":93,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"Cocokkkk"},"content":"     * @param task the new task to be updated into the task list"},{"lineNumber":95,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"Cocokkkk"},"content":"    public static void printRecordMessage(Task task) {"},{"lineNumber":97,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":98,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":99,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(task.toString());"},{"lineNumber":100,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Now you have \" + (TaskList.getSize()) + \" tasks in the list. \");"},{"lineNumber":101,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":102,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":104,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"Cocokkkk"},"content":"     * Prints a warning message when user forgets to input the time of the Deadline task"},{"lineNumber":106,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"Cocokkkk"},"content":"    public static void printDeadlineMissingMessage() {"},{"lineNumber":108,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":109,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"üôÅ OOPS!!! The time of the Deadline task is missing.\");"},{"lineNumber":110,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Please complete the time information. :)\");"},{"lineNumber":111,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":112,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":114,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"Cocokkkk"},"content":"     * Prints a warning message when user forgets to input the time of the Event task"},{"lineNumber":116,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"Cocokkkk"},"content":"    public static void printEventTimeMissingMessage() {"},{"lineNumber":118,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":119,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"üôÅ OOPS!!! The time of the Event task is missing.\");"},{"lineNumber":120,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Please complete the time information. :)\");"},{"lineNumber":121,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":122,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":124,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"Cocokkkk"},"content":"     * Prints all the tasks in the list."},{"lineNumber":126,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":127,"author":{"gitId":"Cocokkkk"},"content":"     * @param list the task list to be displayed"},{"lineNumber":128,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"Cocokkkk"},"content":"    public static void printList(ArrayList\u003cTask\u003e list) {"},{"lineNumber":130,"author":{"gitId":"Cocokkkk"},"content":"        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"},{"lineNumber":131,"author":{"gitId":"Cocokkkk"},"content":"            System.out.println(i + \". \" + list.get(i - 1).toString());"},{"lineNumber":132,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":134,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":136,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"Cocokkkk"},"content":"     * Prints a message when there is no task in the task list"},{"lineNumber":138,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"Cocokkkk"},"content":"    public static void printEmptyListMessage() {"},{"lineNumber":140,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":141,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"The list is empty.\");"},{"lineNumber":142,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"You can add your task now! :)\");"},{"lineNumber":143,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":144,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":146,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"Cocokkkk"},"content":"     * Prints the list of tasks that matches the find input."},{"lineNumber":148,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":149,"author":{"gitId":"Cocokkkk"},"content":"     * @param foundList the list of tasks that contains the finding keyword"},{"lineNumber":150,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"Cocokkkk"},"content":"    public static void printFoundList(ArrayList\u003cTask\u003e foundList) {"},{"lineNumber":152,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":153,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");"},{"lineNumber":154,"author":{"gitId":"Cocokkkk"},"content":"        printList(foundList);"},{"lineNumber":155,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":157,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":158,"author":{"gitId":"Cocokkkk"},"content":"     * Prints the list of tasks that matches the find input."},{"lineNumber":159,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":160,"author":{"gitId":"Cocokkkk"},"content":"     * @param dateList the list of tasks that contains the finding keyword"},{"lineNumber":161,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":162,"author":{"gitId":"Cocokkkk"},"content":"    public static void printDateList(ArrayList\u003cTask\u003e dateList) {"},{"lineNumber":163,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":164,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Here are the tasks occurring on this specific date: \");"},{"lineNumber":165,"author":{"gitId":"Cocokkkk"},"content":"        printList(dateList);"},{"lineNumber":166,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":168,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":169,"author":{"gitId":"Cocokkkk"},"content":"     * Prints a message to confirm marking a task as done successfully by printing the formatted task"},{"lineNumber":170,"author":{"gitId":"Cocokkkk"},"content":"     * and the updated task status."},{"lineNumber":171,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":172,"author":{"gitId":"Cocokkkk"},"content":"     * @param task the task to be marked as done"},{"lineNumber":173,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":174,"author":{"gitId":"Cocokkkk"},"content":"    public static void printDoneMessage(Task task) {"},{"lineNumber":175,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":176,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":177,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(task.toString());"},{"lineNumber":178,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":179,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":181,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":182,"author":{"gitId":"Cocokkkk"},"content":"     * Prints a message if the given index to mark as done does not exist in the list"},{"lineNumber":183,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":184,"author":{"gitId":"Cocokkkk"},"content":"    public static void printDoneInvalidMessage() {"},{"lineNumber":185,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":186,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"üôÅ OOPS!!! The done index is not valid.\");"},{"lineNumber":187,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Please input again.:)\");"},{"lineNumber":188,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":189,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":191,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":192,"author":{"gitId":"Cocokkkk"},"content":"     * Prints a message to confirm deleting a task successfully by printing the formatted task"},{"lineNumber":193,"author":{"gitId":"Cocokkkk"},"content":"     * and the current number of tasks in the task list."},{"lineNumber":194,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":195,"author":{"gitId":"Cocokkkk"},"content":"     * @param task the task to be marked as done"},{"lineNumber":196,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":197,"author":{"gitId":"Cocokkkk"},"content":"    public static void printDeletedMessage(Task task) {"},{"lineNumber":198,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":199,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":200,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(task.toString());"},{"lineNumber":201,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Now you have \" + (TaskList.getSize() - 1) + \" tasks in the list.\");"},{"lineNumber":202,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":203,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":205,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":206,"author":{"gitId":"Cocokkkk"},"content":"     * Prints a message if the given index to mark as done does not exist in the list"},{"lineNumber":207,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":208,"author":{"gitId":"Cocokkkk"},"content":"    public static void printDeletedInvalidMessage() {"},{"lineNumber":209,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":210,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"üôÅ OOPS!!! The delete index is not valid.\");"},{"lineNumber":211,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Please input again.:)\");"},{"lineNumber":212,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":213,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":215,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":216,"author":{"gitId":"Cocokkkk"},"content":"     * Prints an error message if the task matches the find input cannot be found."},{"lineNumber":217,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":218,"author":{"gitId":"Cocokkkk"},"content":"    public static void printEmptyMessage() {"},{"lineNumber":219,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":220,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"There is no matching task in your list.\");"},{"lineNumber":221,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Please input another keyword! :)\");"},{"lineNumber":222,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":223,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":225,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":226,"author":{"gitId":"Cocokkkk"},"content":"     * Prints an warning message if the user input date is not follow the correct format."},{"lineNumber":227,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":228,"author":{"gitId":"Cocokkkk"},"content":"    public static void printDateInvalidMessage() {"},{"lineNumber":229,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":230,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"üôÅ OOPS!!! The date is not valid\");"},{"lineNumber":231,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Please follow the format YYYY-MM-DD and input again.:)\");"},{"lineNumber":232,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":233,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":234,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":235,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":236,"author":{"gitId":"Cocokkkk"},"content":"     * Prints an error message if the task matches the find input cannot be found."},{"lineNumber":237,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":238,"author":{"gitId":"Cocokkkk"},"content":"    public static void printNoMessage() {"},{"lineNumber":239,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":240,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"There is no task occurring on this specific date.\");"},{"lineNumber":241,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Please input another date! :)\");"},{"lineNumber":242,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":243,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":245,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":246,"author":{"gitId":"Cocokkkk"},"content":"     * Prints the bye message before the program ends."},{"lineNumber":247,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":248,"author":{"gitId":"Cocokkkk"},"content":"    public static void printBye() {"},{"lineNumber":249,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":250,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":251,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":252,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":253,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":254,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":254}},{"path":"src/main/java/ip/duke/exception/DateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke.exception;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":" * Represents all possible exceptions when incorrect format of the date is typed"},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":"public class DateException extends Exception {"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":7}},{"path":"src/main/java/ip/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke.exception;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":" * Represents all possible exceptions when incomplete or incorrect command is typed in"},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":" * description gives details of exceptions"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":"public class DukeException extends Exception {"},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":8}},{"path":"src/main/java/ip/duke/exception/IndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke.exception;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":" * Represents all possible exceptions when invalid or incorrect index is typed in"},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":" * description gives details of exceptions"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":"public class IndexException extends Exception {"},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":8}},{"path":"src/main/java/ip/duke/exception/ListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke.exception;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":" * Represents all possible exceptions when the task list is empty"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":" */"},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":"public class ListException extends Exception {"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":6}},{"path":"src/main/java/ip/duke/exception/TimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke.exception;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":" * Represents all possible exceptions when there is incomplete time information"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":" * when a Deadline or Event task is given by user"},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":"public class TimeException extends Exception{"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":7}},{"path":"src/main/java/ip/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke.task;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":" * Represents a type of task with description and a deadline (date or time)"},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":" * status is undone unless marked done by the user"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":"    protected String by;"},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":"        this.by \u003d by;"},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"Cocokkkk"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"},{"lineNumber":18,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":20,"author":{"gitId":"Cocokkkk"},"content":"    public String toDataString() {"},{"lineNumber":21,"author":{"gitId":"Cocokkkk"},"content":"        return \"D\" + super.toDataString() + \" | \" + by;"},{"lineNumber":22,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":24,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":24}},{"path":"src/main/java/ip/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke.task;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":" * Represents a type of task with description and a startTime (date or time)"},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":" * status is undone by default unless marked done by the user"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":"    protected String at;"},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":"    public Event(String description, String at) {"},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":"        this.at \u003d at;"},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":16,"author":{"gitId":"Cocokkkk"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"Cocokkkk"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";"},{"lineNumber":19,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":21,"author":{"gitId":"Cocokkkk"},"content":"    public String toDataString() {"},{"lineNumber":22,"author":{"gitId":"Cocokkkk"},"content":"        return \"E\" + super.toDataString() + \" | \" + at;"},{"lineNumber":23,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":25,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":25}},{"path":"src/main/java/ip/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke.task;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":" * Represents all types of tasks"},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":" * parent class of Todo/Deadline/Event"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":" * includes description only"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":" * status is undone by default unless marked done by user"},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":"public abstract class Task {"},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":"    public String description;"},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":"    public boolean isDone;"},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Cocokkkk"},"content":"     * Constructs a Task object with a given description and a default task status of undone."},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"Cocokkkk"},"content":"     * @param description the string given to describe this task"},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Cocokkkk"},"content":"    public Task(String description) {"},{"lineNumber":19,"author":{"gitId":"Cocokkkk"},"content":"        this.description \u003d description;"},{"lineNumber":20,"author":{"gitId":"Cocokkkk"},"content":"        this.isDone \u003d false;"},{"lineNumber":21,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":23,"author":{"gitId":"Cocokkkk"},"content":"    public void setDone(boolean isDone) {"},{"lineNumber":24,"author":{"gitId":"Cocokkkk"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":25,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":27,"author":{"gitId":"Cocokkkk"},"content":"    public String getDescription() {"},{"lineNumber":28,"author":{"gitId":"Cocokkkk"},"content":"        return description;"},{"lineNumber":29,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":31,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":32,"author":{"gitId":"Cocokkkk"},"content":"    public String getStatusIcon() {"},{"lineNumber":33,"author":{"gitId":"Cocokkkk"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":34,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":36,"author":{"gitId":"Cocokkkk"},"content":"    public String getStatusNum() {"},{"lineNumber":37,"author":{"gitId":"Cocokkkk"},"content":"        return (isDone ? \"1\" : \"0\");"},{"lineNumber":38,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":40,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":41,"author":{"gitId":"Cocokkkk"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Cocokkkk"},"content":"     * Returns the string format of the task to output the task when the program is running."},{"lineNumber":44,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"Cocokkkk"},"content":"     * @return the string format of this task with its status and description for output"},{"lineNumber":46,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Cocokkkk"},"content":"    public String toString() {"},{"lineNumber":48,"author":{"gitId":"Cocokkkk"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":49,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":51,"author":{"gitId":"Cocokkkk"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"Cocokkkk"},"content":"     * Returns the string format of the task to write the task into the file."},{"lineNumber":53,"author":{"gitId":"Cocokkkk"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"Cocokkkk"},"content":"     * @return the string format of this task with its status and description for data saving"},{"lineNumber":55,"author":{"gitId":"Cocokkkk"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"Cocokkkk"},"content":"    public String toDataString() {"},{"lineNumber":57,"author":{"gitId":"Cocokkkk"},"content":"        return \" | \" + getStatusNum() + \" | \" + description;"},{"lineNumber":58,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":60,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":60}},{"path":"src/main/java/ip/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke.task;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":" * Represents a type of task with description only"},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":" * without any date/time"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":" * status is undone by default unless user marks it as done"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":"public class Todo extends Task {"},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":"    public Todo(String description) {"},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":14,"author":{"gitId":"Cocokkkk"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"Cocokkkk"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":19,"author":{"gitId":"Cocokkkk"},"content":"    public String toDataString() {"},{"lineNumber":20,"author":{"gitId":"Cocokkkk"},"content":"        return \"T\" + super.toDataString();"},{"lineNumber":21,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":23,"author":{"gitId":"Cocokkkk"},"content":"    public String getDate() {"},{"lineNumber":24,"author":{"gitId":"Cocokkkk"},"content":"        return null;"},{"lineNumber":25,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":"bye"}],"authorContributionMap":{"Cocokkkk":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\ip\\duke\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"Cocokkkk"},"content":"java -classpath ..\\bin ip.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":19,"Cocokkkk":2}}]
