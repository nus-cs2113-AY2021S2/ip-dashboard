[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"# ip.duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":"1. After that, locate the `src/main/java/ip.duke.Duke.java` file, right-click it, and choose `Run ip.duke.Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"-":24,"Cocokkkk":2}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"D | 1 | submit a report | Sunday"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":"E | 0 | project meeting | Monday"}],"authorContributionMap":{"Cocokkkk":2}},{"path":"src/main/java/ip/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":"    private Storage storage;"},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":"    private TaskList tasks;"},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":"    private Ui ui;"},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":"    public Duke(String filePath) {"},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":"        ui \u003d new Ui();"},{"lineNumber":14,"author":{"gitId":"Cocokkkk"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":"        try {"},{"lineNumber":16,"author":{"gitId":"Cocokkkk"},"content":"            tasks \u003d new TaskList(storage.loadData());"},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":"        } catch (IOException e) {"},{"lineNumber":18,"author":{"gitId":"Cocokkkk"},"content":"            ui.showLoadingError();"},{"lineNumber":19,"author":{"gitId":"Cocokkkk"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":23,"author":{"gitId":"Cocokkkk"},"content":"    public void run() throws IOException {"},{"lineNumber":24,"author":{"gitId":"Cocokkkk"},"content":"        start();"},{"lineNumber":25,"author":{"gitId":"Cocokkkk"},"content":"        runUntilExit();"},{"lineNumber":26,"author":{"gitId":"Cocokkkk"},"content":"        exit();"},{"lineNumber":27,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":29,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":30,"author":{"gitId":"Cocokkkk"},"content":"    private void start() {"},{"lineNumber":31,"author":{"gitId":"Cocokkkk"},"content":"        ui.printGreetings();"},{"lineNumber":32,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":34,"author":{"gitId":"Cocokkkk"},"content":"    private void runUntilExit() throws IOException {"},{"lineNumber":35,"author":{"gitId":"Cocokkkk"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":36,"author":{"gitId":"Cocokkkk"},"content":"        String commandText;"},{"lineNumber":37,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":38,"author":{"gitId":"Cocokkkk"},"content":"        do {"},{"lineNumber":39,"author":{"gitId":"Cocokkkk"},"content":"            commandText \u003d in.nextLine();"},{"lineNumber":40,"author":{"gitId":"Cocokkkk"},"content":"            try {"},{"lineNumber":41,"author":{"gitId":"Cocokkkk"},"content":"                Parser.parseCommand(commandText);"},{"lineNumber":42,"author":{"gitId":"Cocokkkk"},"content":"            } catch (DukeException e) {"},{"lineNumber":43,"author":{"gitId":"Cocokkkk"},"content":"                ui.printInvalidInputWarnings(commandText);"},{"lineNumber":44,"author":{"gitId":"Cocokkkk"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"Cocokkkk"},"content":"        } while (!commandText.equals(\"bye\"));"},{"lineNumber":46,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":47,"author":{"gitId":"Cocokkkk"},"content":"        storage.saveData();"},{"lineNumber":48,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":50,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":51,"author":{"gitId":"Cocokkkk"},"content":"    private void exit() {"},{"lineNumber":52,"author":{"gitId":"Cocokkkk"},"content":"        ui.printBye();"},{"lineNumber":53,"author":{"gitId":"Cocokkkk"},"content":"        System.exit(0);"},{"lineNumber":54,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":56,"author":{"gitId":"Cocokkkk"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":57,"author":{"gitId":"Cocokkkk"},"content":"        new Duke(\"data/duke.txt\").run();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":3,"Cocokkkk":56}},{"path":"src/main/java/ip/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"public class DukeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":4}},{"path":"src/main/java/ip/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"public class Parser {"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":"    public static void parseCommand(String input) throws DukeException {"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":"        int lengthOfCommandType \u003d 0;"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":"        String commandType;"},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":"        if (input.equals(\"help\") || input.equals(\"list\") || input.equals(\"bye\")) {"},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":"            commandType \u003d input;"},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":"        } else if (!input.contains(\" \")) {"},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":"            throw new DukeException();"},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":"        } else {"},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":"            lengthOfCommandType \u003d input.indexOf(\u0027 \u0027);"},{"lineNumber":14,"author":{"gitId":"Cocokkkk"},"content":"            commandType \u003d input.substring(0, lengthOfCommandType);"},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"Cocokkkk"},"content":"        String commandContent \u003d input.substring(lengthOfCommandType + 1);"},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":"        switch (commandType) {"},{"lineNumber":18,"author":{"gitId":"Cocokkkk"},"content":"        case \"todo\":"},{"lineNumber":19,"author":{"gitId":"Cocokkkk"},"content":"            parseTodoCommand(commandContent);"},{"lineNumber":20,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":21,"author":{"gitId":"Cocokkkk"},"content":"        case \"deadline\":"},{"lineNumber":22,"author":{"gitId":"Cocokkkk"},"content":"            parseDeadlineCommand(commandContent);"},{"lineNumber":23,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":24,"author":{"gitId":"Cocokkkk"},"content":"        case \"event\":"},{"lineNumber":25,"author":{"gitId":"Cocokkkk"},"content":"            parseEventCommand(commandContent);"},{"lineNumber":26,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":27,"author":{"gitId":"Cocokkkk"},"content":"        case \"list\":"},{"lineNumber":28,"author":{"gitId":"Cocokkkk"},"content":"            parseListCommand();"},{"lineNumber":29,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":30,"author":{"gitId":"Cocokkkk"},"content":"        case \"done\":"},{"lineNumber":31,"author":{"gitId":"Cocokkkk"},"content":"            parseDoneCommand(commandContent);"},{"lineNumber":32,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":33,"author":{"gitId":"Cocokkkk"},"content":"        case \"delete\":"},{"lineNumber":34,"author":{"gitId":"Cocokkkk"},"content":"            parseDeleteCommand(commandContent);"},{"lineNumber":35,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":36,"author":{"gitId":"Cocokkkk"},"content":"        default:"},{"lineNumber":37,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":38,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":41,"author":{"gitId":"Cocokkkk"},"content":"    private static void parseTodoCommand(String description) {"},{"lineNumber":42,"author":{"gitId":"Cocokkkk"},"content":"        TaskList.updateTodo(description);"},{"lineNumber":43,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":45,"author":{"gitId":"Cocokkkk"},"content":"    private static void parseDeadlineCommand(String commandContent) {"},{"lineNumber":46,"author":{"gitId":"Cocokkkk"},"content":"        int byTimePosition \u003d commandContent.indexOf(\"/\") + 4;"},{"lineNumber":47,"author":{"gitId":"Cocokkkk"},"content":"        String description \u003d commandContent.substring(0, byTimePosition - 5);"},{"lineNumber":48,"author":{"gitId":"Cocokkkk"},"content":"        String byTime \u003d commandContent.substring(byTimePosition);"},{"lineNumber":49,"author":{"gitId":"Cocokkkk"},"content":"        TaskList.updateDeadline(description, byTime);"},{"lineNumber":50,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":52,"author":{"gitId":"Cocokkkk"},"content":"    private static void parseEventCommand(String commandContent) {"},{"lineNumber":53,"author":{"gitId":"Cocokkkk"},"content":"        int atTimePosition \u003d commandContent.indexOf(\"/\") + 4;"},{"lineNumber":54,"author":{"gitId":"Cocokkkk"},"content":"        String description \u003d commandContent.substring(0, atTimePosition - 5);"},{"lineNumber":55,"author":{"gitId":"Cocokkkk"},"content":"        String atTime \u003d commandContent.substring(atTimePosition);"},{"lineNumber":56,"author":{"gitId":"Cocokkkk"},"content":"        TaskList.updateEvent(description, atTime);"},{"lineNumber":57,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":59,"author":{"gitId":"Cocokkkk"},"content":"    private static void parseListCommand() {"},{"lineNumber":60,"author":{"gitId":"Cocokkkk"},"content":"        TaskList.getCompleteList();"},{"lineNumber":61,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":63,"author":{"gitId":"Cocokkkk"},"content":"    private static void parseDoneCommand(String commandContent) {"},{"lineNumber":64,"author":{"gitId":"Cocokkkk"},"content":"        int doneIndex \u003d Integer.parseInt(commandContent);"},{"lineNumber":65,"author":{"gitId":"Cocokkkk"},"content":"        TaskList.markDone(doneIndex);"},{"lineNumber":66,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":68,"author":{"gitId":"Cocokkkk"},"content":"    private static void parseDeleteCommand(String commandContent) {"},{"lineNumber":69,"author":{"gitId":"Cocokkkk"},"content":"        int deletedIndex \u003d Integer.parseInt(commandContent);"},{"lineNumber":70,"author":{"gitId":"Cocokkkk"},"content":"        TaskList.deleteTask(deletedIndex);"},{"lineNumber":71,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":72}},{"path":"src/main/java/ip/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":"import java.io.File;"},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":"import java.io.FileWriter;"},{"lineNumber":14,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"Cocokkkk"},"content":"    public static String filePath;"},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":"    public static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":19,"author":{"gitId":"Cocokkkk"},"content":"    public Storage(String filePath) {"},{"lineNumber":20,"author":{"gitId":"Cocokkkk"},"content":"        Storage.filePath \u003d filePath;"},{"lineNumber":21,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":23,"author":{"gitId":"Cocokkkk"},"content":"    public static ArrayList\u003cTask\u003e loadData() throws IOException {"},{"lineNumber":24,"author":{"gitId":"Cocokkkk"},"content":"        File dataFile \u003d new File(filePath);"},{"lineNumber":25,"author":{"gitId":"Cocokkkk"},"content":"        if (dataFile.createNewFile()) {"},{"lineNumber":26,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printLine();"},{"lineNumber":27,"author":{"gitId":"Cocokkkk"},"content":"            System.out.println(\"Since the file does not exist, I have created a new one.\");"},{"lineNumber":28,"author":{"gitId":"Cocokkkk"},"content":"            Ui.printLine();"},{"lineNumber":29,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Cocokkkk"},"content":"        Scanner dataScanner \u003d new Scanner(dataFile);"},{"lineNumber":31,"author":{"gitId":"Cocokkkk"},"content":"        while (dataScanner.hasNext()) {"},{"lineNumber":32,"author":{"gitId":"Cocokkkk"},"content":"            String data \u003d dataScanner.nextLine();"},{"lineNumber":33,"author":{"gitId":"Cocokkkk"},"content":"            String type \u003d data.substring(0, 1);"},{"lineNumber":34,"author":{"gitId":"Cocokkkk"},"content":"            boolean isDone \u003d data.charAt(4) \u003d\u003d \u00271\u0027;"},{"lineNumber":35,"author":{"gitId":"Cocokkkk"},"content":"            String content \u003d data.substring(8);"},{"lineNumber":36,"author":{"gitId":"Cocokkkk"},"content":"            String description \u003d content;"},{"lineNumber":37,"author":{"gitId":"Cocokkkk"},"content":"            String byTime;"},{"lineNumber":38,"author":{"gitId":"Cocokkkk"},"content":"            String atTime;"},{"lineNumber":39,"author":{"gitId":"Cocokkkk"},"content":"            int separatePoint \u003d content.length() - 1;"},{"lineNumber":40,"author":{"gitId":"Cocokkkk"},"content":"            if (content.contains(\"|\")) {"},{"lineNumber":41,"author":{"gitId":"Cocokkkk"},"content":"                separatePoint \u003d content.indexOf(\"|\");"},{"lineNumber":42,"author":{"gitId":"Cocokkkk"},"content":"                description \u003d content.substring(0, separatePoint - 1);"},{"lineNumber":43,"author":{"gitId":"Cocokkkk"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"Cocokkkk"},"content":"            switch (type) {"},{"lineNumber":45,"author":{"gitId":"Cocokkkk"},"content":"            case \"T\":"},{"lineNumber":46,"author":{"gitId":"Cocokkkk"},"content":"                fileUpdateTodo(list, description, isDone);"},{"lineNumber":47,"author":{"gitId":"Cocokkkk"},"content":"                break;"},{"lineNumber":48,"author":{"gitId":"Cocokkkk"},"content":"            case \"D\":"},{"lineNumber":49,"author":{"gitId":"Cocokkkk"},"content":"                byTime \u003d content.substring(separatePoint + 2);"},{"lineNumber":50,"author":{"gitId":"Cocokkkk"},"content":"                fileUpdateDeadline(list, description, byTime, isDone);"},{"lineNumber":51,"author":{"gitId":"Cocokkkk"},"content":"                break;"},{"lineNumber":52,"author":{"gitId":"Cocokkkk"},"content":"            case \"E\":"},{"lineNumber":53,"author":{"gitId":"Cocokkkk"},"content":"                atTime \u003d content.substring(separatePoint + 2);"},{"lineNumber":54,"author":{"gitId":"Cocokkkk"},"content":"                fileUpdateEvent(list, description, atTime, isDone);"},{"lineNumber":55,"author":{"gitId":"Cocokkkk"},"content":"                break;"},{"lineNumber":56,"author":{"gitId":"Cocokkkk"},"content":"            default:"},{"lineNumber":57,"author":{"gitId":"Cocokkkk"},"content":"                break;"},{"lineNumber":58,"author":{"gitId":"Cocokkkk"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"Cocokkkk"},"content":"        return list;"},{"lineNumber":61,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":63,"author":{"gitId":"Cocokkkk"},"content":"    public static void fileUpdateTodo(ArrayList\u003cTask\u003e list, String description, boolean isDone) {"},{"lineNumber":64,"author":{"gitId":"Cocokkkk"},"content":"        list.add(new Todo(description));"},{"lineNumber":65,"author":{"gitId":"Cocokkkk"},"content":"        list.get(list.size() - 1).setDone(isDone);"},{"lineNumber":66,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":68,"author":{"gitId":"Cocokkkk"},"content":"    public static void fileUpdateDeadline(ArrayList\u003cTask\u003e list, String description, String byTime, boolean isDone) {"},{"lineNumber":69,"author":{"gitId":"Cocokkkk"},"content":"        list.add(new Deadline(description, byTime));"},{"lineNumber":70,"author":{"gitId":"Cocokkkk"},"content":"        list.get(list.size() - 1).setDone(isDone);"},{"lineNumber":71,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":73,"author":{"gitId":"Cocokkkk"},"content":"    public static void fileUpdateEvent(ArrayList\u003cTask\u003e list, String description, String atTime, boolean isDone) {"},{"lineNumber":74,"author":{"gitId":"Cocokkkk"},"content":"        list.add(new Event(description, atTime));"},{"lineNumber":75,"author":{"gitId":"Cocokkkk"},"content":"        list.get(list.size() - 1).setDone(isDone);"},{"lineNumber":76,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":78,"author":{"gitId":"Cocokkkk"},"content":"    public static void saveData() throws IOException {"},{"lineNumber":79,"author":{"gitId":"Cocokkkk"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":80,"author":{"gitId":"Cocokkkk"},"content":"        for (int i \u003d 0; i \u003c TaskList.getSize(); i++) {"},{"lineNumber":81,"author":{"gitId":"Cocokkkk"},"content":"            fw.write(TaskList.getList().get(i).toDataString() + \"\\n\");"},{"lineNumber":82,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"Cocokkkk"},"content":"        fw.close();"},{"lineNumber":84,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":85}},{"path":"src/main/java/ip/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":"    public static ArrayList\u003cTask\u003e list;"},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":"    public TaskList() {"},{"lineNumber":14,"author":{"gitId":"Cocokkkk"},"content":"        list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {"},{"lineNumber":18,"author":{"gitId":"Cocokkkk"},"content":"        TaskList.list \u003d list;"},{"lineNumber":19,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":21,"author":{"gitId":"Cocokkkk"},"content":"    public static void updateTodo(String description) {"},{"lineNumber":22,"author":{"gitId":"Cocokkkk"},"content":"        list.add(new Todo(description));"},{"lineNumber":23,"author":{"gitId":"Cocokkkk"},"content":"        Ui.printRecordMessage(list.get(list.size() - 1));"},{"lineNumber":24,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":26,"author":{"gitId":"Cocokkkk"},"content":"    public static void updateDeadline(String description, String byTime) {"},{"lineNumber":27,"author":{"gitId":"Cocokkkk"},"content":"        list.add(new Deadline(description, byTime));"},{"lineNumber":28,"author":{"gitId":"Cocokkkk"},"content":"        Ui.printRecordMessage(list.get(list.size() - 1));"},{"lineNumber":29,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":31,"author":{"gitId":"Cocokkkk"},"content":"    public static void updateEvent(String description, String atTime) {"},{"lineNumber":32,"author":{"gitId":"Cocokkkk"},"content":"        list.add(new Event(description, atTime));"},{"lineNumber":33,"author":{"gitId":"Cocokkkk"},"content":"        Ui.printRecordMessage(list.get(list.size() - 1));"},{"lineNumber":34,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":36,"author":{"gitId":"Cocokkkk"},"content":"    public static void markDone(int doneIndex) {"},{"lineNumber":37,"author":{"gitId":"Cocokkkk"},"content":"        Task doneTask \u003d list.get(doneIndex - 1);"},{"lineNumber":38,"author":{"gitId":"Cocokkkk"},"content":"        doneTask.setDone(true);"},{"lineNumber":39,"author":{"gitId":"Cocokkkk"},"content":"        list.set(doneIndex - 1, doneTask);"},{"lineNumber":40,"author":{"gitId":"Cocokkkk"},"content":"        Ui.printDoneMessage(doneTask);"},{"lineNumber":41,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":43,"author":{"gitId":"Cocokkkk"},"content":"    public static void deleteTask(int deletedIndex) {"},{"lineNumber":44,"author":{"gitId":"Cocokkkk"},"content":"        Task deletedTask \u003d list.get(deletedIndex - 1);"},{"lineNumber":45,"author":{"gitId":"Cocokkkk"},"content":"        Ui.printDeletedMessage(deletedTask);"},{"lineNumber":46,"author":{"gitId":"Cocokkkk"},"content":"        list.remove(deletedIndex - 1);"},{"lineNumber":47,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":49,"author":{"gitId":"Cocokkkk"},"content":"    public static int getSize() {"},{"lineNumber":50,"author":{"gitId":"Cocokkkk"},"content":"        return list.size();"},{"lineNumber":51,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":53,"author":{"gitId":"Cocokkkk"},"content":"    public static ArrayList\u003cTask\u003e getList() {"},{"lineNumber":54,"author":{"gitId":"Cocokkkk"},"content":"        return list;"},{"lineNumber":55,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":57,"author":{"gitId":"Cocokkkk"},"content":"    public static void getCompleteList() {"},{"lineNumber":58,"author":{"gitId":"Cocokkkk"},"content":"        Ui.printList(list);"},{"lineNumber":59,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":61,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":61}},{"path":"src/main/java/ip/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"import ip.duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":"public class Ui {"},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":"    public static void printGreetings() {"},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":14,"author":{"gitId":"Cocokkkk"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":16,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"},{"lineNumber":18,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":19,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":21,"author":{"gitId":"Cocokkkk"},"content":"    public static void showLoadingError() {"},{"lineNumber":22,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":23,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"There is no existing data to load... \");"},{"lineNumber":24,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":25,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":27,"author":{"gitId":"Cocokkkk"},"content":"    public static void printInvalidInputWarnings(String input) {"},{"lineNumber":28,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":29,"author":{"gitId":"Cocokkkk"},"content":"        switch (input) {"},{"lineNumber":30,"author":{"gitId":"Cocokkkk"},"content":"        case \"todo\":"},{"lineNumber":31,"author":{"gitId":"Cocokkkk"},"content":"        case \"deadline\":"},{"lineNumber":32,"author":{"gitId":"Cocokkkk"},"content":"        case \"done\":"},{"lineNumber":33,"author":{"gitId":"Cocokkkk"},"content":"        case \"delete\":"},{"lineNumber":34,"author":{"gitId":"Cocokkkk"},"content":"            System.out.println(\"🙁 OOPS!!! The description of a \" + input + \" cannot be empty.\");"},{"lineNumber":35,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":36,"author":{"gitId":"Cocokkkk"},"content":"        case \"event\":"},{"lineNumber":37,"author":{"gitId":"Cocokkkk"},"content":"            System.out.println(\"🙁 OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":38,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":39,"author":{"gitId":"Cocokkkk"},"content":"        default:"},{"lineNumber":40,"author":{"gitId":"Cocokkkk"},"content":"            System.out.println(\"🙁 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":41,"author":{"gitId":"Cocokkkk"},"content":"            break;"},{"lineNumber":42,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Please input again!:)\");"},{"lineNumber":44,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":45,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":47,"author":{"gitId":"Cocokkkk"},"content":"    public static void printLine() {"},{"lineNumber":48,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"___________________________________________\");"},{"lineNumber":49,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":51,"author":{"gitId":"Cocokkkk"},"content":"    public static void printRecordMessage(Task task) {"},{"lineNumber":52,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":53,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":54,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(task.toString());"},{"lineNumber":55,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Now you have \" + (TaskList.getSize()) + \" tasks in the list. \");"},{"lineNumber":56,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":57,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":59,"author":{"gitId":"Cocokkkk"},"content":"    public static void printList(ArrayList\u003cTask\u003e list) {"},{"lineNumber":60,"author":{"gitId":"Cocokkkk"},"content":"        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"},{"lineNumber":61,"author":{"gitId":"Cocokkkk"},"content":"            System.out.println(i + \". \" + list.get(i - 1).toString());"},{"lineNumber":62,"author":{"gitId":"Cocokkkk"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":64,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":66,"author":{"gitId":"Cocokkkk"},"content":"    public static void printDoneMessage(Task task) {"},{"lineNumber":67,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":68,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":69,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(task.toString());"},{"lineNumber":70,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":71,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":73,"author":{"gitId":"Cocokkkk"},"content":"    public static void printDeletedMessage(Task task) {"},{"lineNumber":74,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":75,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":76,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(task.toString());"},{"lineNumber":77,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Now you have \" + (TaskList.getSize() - 1) + \" tasks in the list.\");"},{"lineNumber":78,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":79,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":81,"author":{"gitId":"Cocokkkk"},"content":"    public static void printBye() {"},{"lineNumber":82,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":83,"author":{"gitId":"Cocokkkk"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":84,"author":{"gitId":"Cocokkkk"},"content":"        printLine();"},{"lineNumber":85,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":87,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":87}},{"path":"src/main/java/ip/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke.task;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":"    protected String by;"},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"},{"lineNumber":14,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":16,"author":{"gitId":"Cocokkkk"},"content":"    public String toDataString() {"},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":"        return \"D\" + super.toDataString() + \" | \" + by;"},{"lineNumber":18,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":19}},{"path":"src/main/java/ip/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke.task;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":"    public Event(String description, String at) {"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":"        this.at \u003d at;"},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"Cocokkkk"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";"},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":"    public String toDataString() {"},{"lineNumber":18,"author":{"gitId":"Cocokkkk"},"content":"        return \"E\" + super.toDataString() + \" | \" + at;"},{"lineNumber":19,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":20}},{"path":"src/main/java/ip/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke.task;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":"    public String description;"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":"    public boolean isDone;"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":"    public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":"    public void setDone(boolean isDone) {"},{"lineNumber":14,"author":{"gitId":"Cocokkkk"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":"    public String getStatusIcon() {"},{"lineNumber":18,"author":{"gitId":"Cocokkkk"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":19,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":21,"author":{"gitId":"Cocokkkk"},"content":"    public String getStatusNum() {"},{"lineNumber":22,"author":{"gitId":"Cocokkkk"},"content":"        return (isDone ? \"1\" : \"0\");"},{"lineNumber":23,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":25,"author":{"gitId":"Cocokkkk"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"Cocokkkk"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"Cocokkkk"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":28,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":30,"author":{"gitId":"Cocokkkk"},"content":"    public String toDataString() {"},{"lineNumber":31,"author":{"gitId":"Cocokkkk"},"content":"        return \" | \" + getStatusNum() + \" | \" + description;"},{"lineNumber":32,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":34,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":34}},{"path":"src/main/java/ip/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"package ip.duke.task;"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":9,"author":{"gitId":"Cocokkkk"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"Cocokkkk"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":12,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Cocokkkk"},"content":""},{"lineNumber":14,"author":{"gitId":"Cocokkkk"},"content":"    public String toDataString() {"},{"lineNumber":15,"author":{"gitId":"Cocokkkk"},"content":"        return \"T\" + super.toDataString();"},{"lineNumber":16,"author":{"gitId":"Cocokkkk"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Cocokkkk"},"content":"}"}],"authorContributionMap":{"Cocokkkk":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Cocokkkk"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"Cocokkkk"},"content":"deadline do homework /by Sunday"},{"lineNumber":3,"author":{"gitId":"Cocokkkk"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"Cocokkkk"},"content":"event"},{"lineNumber":5,"author":{"gitId":"Cocokkkk"},"content":"list"},{"lineNumber":6,"author":{"gitId":"Cocokkkk"},"content":"bye"}],"authorContributionMap":{"Cocokkkk":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"Cocokkkk"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\ip\\duke\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"Cocokkkk"},"content":"java -classpath ..\\bin ip.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":19,"Cocokkkk":2}}]
