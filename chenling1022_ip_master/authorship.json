[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chenling1022"},"content":"# Duke User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"chenling1022"},"content":"Duke is a personal assistant that allows users to add, delete, check and find tasks. The tasks added will be saved to a text file named **testduke.txt**. "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":27,"author":{"gitId":"chenling1022"},"content":"# User guide"},{"lineNumber":28,"author":{"gitId":"chenling1022"},"content":"## Features"},{"lineNumber":29,"author":{"gitId":"chenling1022"},"content":"### **todo** "},{"lineNumber":30,"author":{"gitId":"chenling1022"},"content":"#### to add a *todo* task into a task list, no date/time needed."},{"lineNumber":31,"author":{"gitId":"chenling1022"},"content":"### **event** "},{"lineNumber":32,"author":{"gitId":"chenling1022"},"content":"####to add a *event* task into a task list, date/time needs to be specified in the format of [event description]/at [date/time]."},{"lineNumber":33,"author":{"gitId":"chenling1022"},"content":"### **deadline** "},{"lineNumber":34,"author":{"gitId":"chenling1022"},"content":"#### to add a *deadline* task into a task list, date/time needs to be specified in the format of [deadline description]/by [date/time],"},{"lineNumber":35,"author":{"gitId":"chenling1022"},"content":"### **delete** "},{"lineNumber":36,"author":{"gitId":"chenling1022"},"content":"#### to delete a task in the task list that the user previously added in. Format: delete [task number]."},{"lineNumber":37,"author":{"gitId":"chenling1022"},"content":"### **done** "},{"lineNumber":38,"author":{"gitId":"chenling1022"},"content":"#### to mark a task as done, this will be reflected as a tick. Format: done [task number]."},{"lineNumber":39,"author":{"gitId":"chenling1022"},"content":"### **list**"},{"lineNumber":40,"author":{"gitId":"chenling1022"},"content":"#### to list out all available tasks that the user has added inside."},{"lineNumber":41,"author":{"gitId":"chenling1022"},"content":"### **find**"},{"lineNumber":42,"author":{"gitId":"chenling1022"},"content":"#### to search for all tasks in the list and find the task that contains the user\u0027s input keyword. Format: find [keyword]."},{"lineNumber":43,"author":{"gitId":"chenling1022"},"content":"### **bye**"},{"lineNumber":44,"author":{"gitId":"chenling1022"},"content":"#### to end the program "},{"lineNumber":45,"author":{"gitId":"chenling1022"},"content":"### to take note: "},{"lineNumber":46,"author":{"gitId":"chenling1022"},"content":"#### 1.the file is loaded automatically everytime the user runs the program"},{"lineNumber":47,"author":{"gitId":"chenling1022"},"content":"#### 2.the tasks added throughout the run of the program will be stored into the file "},{"lineNumber":48,"author":{"gitId":"chenling1022"},"content":"#### 3.after the user inputs \"bye\", the file is automatically cleared to a blank text file, and the user needs to rerun the program"},{"lineNumber":49,"author":{"gitId":"chenling1022"},"content":"#### 4.feel free to explore all functions of Duke! "},{"lineNumber":50,"author":{"gitId":"chenling1022"},"content":""}],"authorContributionMap":{"chenling1022":26,"-":24}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chenling1022"},"content":"[N] jdekfe"}],"authorContributionMap":{"chenling1022":1}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenling1022"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"chenling1022"},"content":" * A list of all commands names"},{"lineNumber":3,"author":{"gitId":"chenling1022"},"content":" */"},{"lineNumber":4,"author":{"gitId":"chenling1022"},"content":"public enum Command {"},{"lineNumber":5,"author":{"gitId":"chenling1022"},"content":"    BYE, LIST, DONE, TODO, EVENT, DEADLINE, INVALID,DELETE,FIND"},{"lineNumber":6,"author":{"gitId":"chenling1022"},"content":"}"}],"authorContributionMap":{"chenling1022":6}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenling1022"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"chenling1022"},"content":" * Child class Deadline inherited from parent class Task"},{"lineNumber":3,"author":{"gitId":"chenling1022"},"content":" */"},{"lineNumber":4,"author":{"gitId":"chenling1022"},"content":"public class Deadline extends Task{"},{"lineNumber":5,"author":{"gitId":"chenling1022"},"content":"    public String by;"},{"lineNumber":6,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":7,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"chenling1022"},"content":"     * Constructor of the class"},{"lineNumber":9,"author":{"gitId":"chenling1022"},"content":"     * @param description"},{"lineNumber":10,"author":{"gitId":"chenling1022"},"content":"     * @param by"},{"lineNumber":11,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"chenling1022"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":13,"author":{"gitId":"chenling1022"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"chenling1022"},"content":"        this.by \u003d by;"},{"lineNumber":15,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"chenling1022"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"chenling1022"},"content":"     * Change the description to a proper format"},{"lineNumber":19,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"chenling1022"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"chenling1022"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";"},{"lineNumber":22,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":24,"author":{"gitId":"chenling1022"},"content":"}"}],"authorContributionMap":{"chenling1022":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":2,"author":{"gitId":"chenling1022"},"content":"import java.awt.*;"},{"lineNumber":3,"author":{"gitId":"chenling1022"},"content":"import java.util.*;"},{"lineNumber":4,"author":{"gitId":"chenling1022"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"chenling1022"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"chenling1022"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"chenling1022"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":8,"author":{"gitId":"chenling1022"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":10,"author":{"gitId":"chenling1022"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"chenling1022"},"content":" * Represents the main class Duke."},{"lineNumber":12,"author":{"gitId":"chenling1022"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"chenling1022"},"content":"    private static Ui ui \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"chenling1022"},"content":"    private static TaskList tasks \u003d new TaskList();"},{"lineNumber":16,"author":{"gitId":"chenling1022"},"content":"    private static Parser parser \u003d new Parser();"},{"lineNumber":17,"author":{"gitId":"chenling1022"},"content":"    private static Storage storage \u003d new Storage();"},{"lineNumber":18,"author":{"gitId":"chenling1022"},"content":"    private static String user_input;"},{"lineNumber":19,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":20,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"chenling1022"},"content":"     * Prints out the welcome message."},{"lineNumber":22,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"chenling1022"},"content":"    public static void show_welcome_msg() {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":26,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":27,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":30,"author":{"gitId":"chenling1022"},"content":"        System.out.println(\"____________________________________________________________\\n\" +"},{"lineNumber":31,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":32,"author":{"gitId":"chenling1022"},"content":"                \" Hello! I\u0027m Duke\\n\" +"},{"lineNumber":33,"author":{"gitId":"chenling1022"},"content":"                \" What can I do for you?\\n\" +"},{"lineNumber":34,"author":{"gitId":"chenling1022"},"content":"                \"____________________________________________________________\\n\");"},{"lineNumber":35,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":37,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"chenling1022"},"content":"     * Prints out the bye message."},{"lineNumber":39,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"chenling1022"},"content":"    public static void show_exit_msg() {"},{"lineNumber":41,"author":{"gitId":"chenling1022"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\");"},{"lineNumber":42,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":44,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"chenling1022"},"content":"     * Ensembles all methods that each user-command requires."},{"lineNumber":46,"author":{"gitId":"chenling1022"},"content":"     * @param input user input"},{"lineNumber":47,"author":{"gitId":"chenling1022"},"content":"     * @param c class command"},{"lineNumber":48,"author":{"gitId":"chenling1022"},"content":"     * @throws InvalidCommandException"},{"lineNumber":49,"author":{"gitId":"chenling1022"},"content":"     * @throws EmptyInputException"},{"lineNumber":50,"author":{"gitId":"chenling1022"},"content":"     * @throws InvalidEventException"},{"lineNumber":51,"author":{"gitId":"chenling1022"},"content":"     * @throws InvalidDeadlineException"},{"lineNumber":52,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"chenling1022"},"content":"    public static void executeCommand(String input, Command c) throws InvalidCommandException, EmptyInputException, InvalidEventException, InvalidDeadlineException {"},{"lineNumber":54,"author":{"gitId":"chenling1022"},"content":"        switch (c) {"},{"lineNumber":55,"author":{"gitId":"chenling1022"},"content":"            case LIST:"},{"lineNumber":56,"author":{"gitId":"chenling1022"},"content":"                tasks.listTaskMsg();"},{"lineNumber":57,"author":{"gitId":"chenling1022"},"content":"                tasks.enumerateTasks();"},{"lineNumber":58,"author":{"gitId":"chenling1022"},"content":"                break;"},{"lineNumber":59,"author":{"gitId":"chenling1022"},"content":"            case DONE:"},{"lineNumber":60,"author":{"gitId":"chenling1022"},"content":"                tasks.markAsDone(input);"},{"lineNumber":61,"author":{"gitId":"chenling1022"},"content":"                break;"},{"lineNumber":62,"author":{"gitId":"chenling1022"},"content":"            case TODO:"},{"lineNumber":63,"author":{"gitId":"chenling1022"},"content":"                parser.checkValidInput(input, c);"},{"lineNumber":64,"author":{"gitId":"chenling1022"},"content":"                ui.plusNumOfGoals();"},{"lineNumber":65,"author":{"gitId":"chenling1022"},"content":"                tasks.addNewTodo(input);"},{"lineNumber":66,"author":{"gitId":"chenling1022"},"content":"                tasks.repeatTaskAdded();"},{"lineNumber":67,"author":{"gitId":"chenling1022"},"content":"                break;"},{"lineNumber":68,"author":{"gitId":"chenling1022"},"content":"            case EVENT:"},{"lineNumber":69,"author":{"gitId":"chenling1022"},"content":"                parser.checkValidInput(input, c);"},{"lineNumber":70,"author":{"gitId":"chenling1022"},"content":"                ui.plusNumOfGoals();"},{"lineNumber":71,"author":{"gitId":"chenling1022"},"content":"                tasks.addNewEvent(input);"},{"lineNumber":72,"author":{"gitId":"chenling1022"},"content":"                tasks.repeatTaskAdded();"},{"lineNumber":73,"author":{"gitId":"chenling1022"},"content":"                break;"},{"lineNumber":74,"author":{"gitId":"chenling1022"},"content":"            case DEADLINE:"},{"lineNumber":75,"author":{"gitId":"chenling1022"},"content":"                parser.checkValidInput(input, c);"},{"lineNumber":76,"author":{"gitId":"chenling1022"},"content":"                ui.plusNumOfGoals();"},{"lineNumber":77,"author":{"gitId":"chenling1022"},"content":"                tasks.addNewDeadline(input);"},{"lineNumber":78,"author":{"gitId":"chenling1022"},"content":"                tasks.repeatTaskAdded();"},{"lineNumber":79,"author":{"gitId":"chenling1022"},"content":"                break;"},{"lineNumber":80,"author":{"gitId":"chenling1022"},"content":"            case DELETE:"},{"lineNumber":81,"author":{"gitId":"chenling1022"},"content":"                tasks.deleteTask(user_input);"},{"lineNumber":82,"author":{"gitId":"chenling1022"},"content":"                break;"},{"lineNumber":83,"author":{"gitId":"chenling1022"},"content":"            case FIND:"},{"lineNumber":84,"author":{"gitId":"chenling1022"},"content":"                tasks.findTasks(user_input);"},{"lineNumber":85,"author":{"gitId":"chenling1022"},"content":"                break;"},{"lineNumber":86,"author":{"gitId":"chenling1022"},"content":"            case INVALID:"},{"lineNumber":87,"author":{"gitId":"chenling1022"},"content":"                throw new InvalidCommandException();"},{"lineNumber":88,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":89,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":92,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"chenling1022"},"content":"     * main method"},{"lineNumber":94,"author":{"gitId":"chenling1022"},"content":"     * @param args"},{"lineNumber":95,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"chenling1022"},"content":"    public static void main(String[] args) {"},{"lineNumber":97,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":98,"author":{"gitId":"chenling1022"},"content":"        show_welcome_msg();"},{"lineNumber":99,"author":{"gitId":"chenling1022"},"content":"        Command command;"},{"lineNumber":100,"author":{"gitId":"chenling1022"},"content":"        storage.loadFile();"},{"lineNumber":101,"author":{"gitId":"chenling1022"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":102,"author":{"gitId":"chenling1022"},"content":"        user_input \u003d ui.getString(in);"},{"lineNumber":103,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":104,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":105,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":106,"author":{"gitId":"chenling1022"},"content":"        while (!parser.isBye(user_input)) {"},{"lineNumber":107,"author":{"gitId":"chenling1022"},"content":"            if (parser.isList(user_input)) {"},{"lineNumber":108,"author":{"gitId":"chenling1022"},"content":"                command \u003d Command.LIST;"},{"lineNumber":109,"author":{"gitId":"chenling1022"},"content":"            } else if (parser.isDone(user_input)) {"},{"lineNumber":110,"author":{"gitId":"chenling1022"},"content":"                command \u003d Command.DONE;"},{"lineNumber":111,"author":{"gitId":"chenling1022"},"content":"            } else if (parser.isTodo(user_input)) {"},{"lineNumber":112,"author":{"gitId":"chenling1022"},"content":"                command \u003d Command.TODO;"},{"lineNumber":113,"author":{"gitId":"chenling1022"},"content":"            } else if (parser.isEvent(user_input)) {"},{"lineNumber":114,"author":{"gitId":"chenling1022"},"content":"                command \u003d Command.EVENT;"},{"lineNumber":115,"author":{"gitId":"chenling1022"},"content":"            } else if (parser.isDeadline(user_input)) {"},{"lineNumber":116,"author":{"gitId":"chenling1022"},"content":"                command \u003d Command.DEADLINE;"},{"lineNumber":117,"author":{"gitId":"chenling1022"},"content":"            } else if (parser.isDelete(user_input)) {"},{"lineNumber":118,"author":{"gitId":"chenling1022"},"content":"                command \u003d Command.DELETE;"},{"lineNumber":119,"author":{"gitId":"chenling1022"},"content":"            } else if (parser.isFind(user_input)){"},{"lineNumber":120,"author":{"gitId":"chenling1022"},"content":"                command \u003dCommand.FIND;"},{"lineNumber":121,"author":{"gitId":"chenling1022"},"content":"            } else {"},{"lineNumber":122,"author":{"gitId":"chenling1022"},"content":"                command \u003d Command.INVALID;"},{"lineNumber":123,"author":{"gitId":"chenling1022"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":125,"author":{"gitId":"chenling1022"},"content":"            try {"},{"lineNumber":126,"author":{"gitId":"chenling1022"},"content":"                executeCommand(user_input, command);"},{"lineNumber":127,"author":{"gitId":"chenling1022"},"content":"            } catch (InvalidCommandException e) {"},{"lineNumber":128,"author":{"gitId":"chenling1022"},"content":"                System.out.println(\"Oh no! I\u0027m sorry, but I don\u0027t know what that means, please try again! \");"},{"lineNumber":129,"author":{"gitId":"chenling1022"},"content":"            } catch (EmptyInputException e) {"},{"lineNumber":130,"author":{"gitId":"chenling1022"},"content":"                System.out.println(\"The description of a new task cannot be empty.\");"},{"lineNumber":131,"author":{"gitId":"chenling1022"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":132,"author":{"gitId":"chenling1022"},"content":"                System.out.println(\" Add time for new Event or Deadline with \u0027/at\u0027 or \u0027/by\u0027!!\");"},{"lineNumber":133,"author":{"gitId":"chenling1022"},"content":"            } catch (InvalidEventException e) {"},{"lineNumber":134,"author":{"gitId":"chenling1022"},"content":"                System.out.println(\" Add time for new Event with keyword \u0027/at\u0027!!\");"},{"lineNumber":135,"author":{"gitId":"chenling1022"},"content":"            } catch (InvalidDeadlineException e) {"},{"lineNumber":136,"author":{"gitId":"chenling1022"},"content":"                System.out.println(\"Add time for new Deadline with keyword \u0027/by\u0027!!\");"},{"lineNumber":137,"author":{"gitId":"chenling1022"},"content":"            }"},{"lineNumber":138,"author":{"gitId":"chenling1022"},"content":"            user_input \u003d ui.getString(in);"},{"lineNumber":139,"author":{"gitId":"chenling1022"},"content":"            storage.changeFile(ui.num_of_goals);"},{"lineNumber":140,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"chenling1022"},"content":"        show_exit_msg();"},{"lineNumber":142,"author":{"gitId":"chenling1022"},"content":"        storage.clearFile();"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"chenling1022"},"content":"}"}],"authorContributionMap":{"chenling1022":136,"-":8}},{"path":"src/main/java/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":2,"author":{"gitId":"chenling1022"},"content":"public class DukeExceptions extends Exception{"},{"lineNumber":3,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":4,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":5,"author":{"gitId":"chenling1022"},"content":"}"}],"authorContributionMap":{"chenling1022":5}},{"path":"src/main/java/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenling1022"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"chenling1022"},"content":" * Identified the exception of empty input"},{"lineNumber":3,"author":{"gitId":"chenling1022"},"content":" */"},{"lineNumber":4,"author":{"gitId":"chenling1022"},"content":"public class EmptyInputException extends Exception{"},{"lineNumber":5,"author":{"gitId":"chenling1022"},"content":"}"}],"authorContributionMap":{"chenling1022":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenling1022"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"chenling1022"},"content":" * Child class Event inherited from parent class Task"},{"lineNumber":3,"author":{"gitId":"chenling1022"},"content":" */"},{"lineNumber":4,"author":{"gitId":"chenling1022"},"content":"public class Event extends Task{"},{"lineNumber":5,"author":{"gitId":"chenling1022"},"content":"    public String at;"},{"lineNumber":6,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":7,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"chenling1022"},"content":"     * Constructor of the main class"},{"lineNumber":9,"author":{"gitId":"chenling1022"},"content":"     * @param description"},{"lineNumber":10,"author":{"gitId":"chenling1022"},"content":"     * @param at"},{"lineNumber":11,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"chenling1022"},"content":"    public Event(String description, String at) {"},{"lineNumber":13,"author":{"gitId":"chenling1022"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"chenling1022"},"content":"        this.at \u003d at;"},{"lineNumber":15,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":17,"author":{"gitId":"chenling1022"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"chenling1022"},"content":"     * Change the description to a proper format"},{"lineNumber":20,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"chenling1022"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"chenling1022"},"content":"        return \"[E]\" + super.toString() + \"(at:\" + at + \")\";"},{"lineNumber":23,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"chenling1022"},"content":"}"}],"authorContributionMap":{"chenling1022":24}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenling1022"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"chenling1022"},"content":" * Check whether command input is valid"},{"lineNumber":3,"author":{"gitId":"chenling1022"},"content":" */"},{"lineNumber":4,"author":{"gitId":"chenling1022"},"content":"public class InvalidCommandException extends Exception{"},{"lineNumber":5,"author":{"gitId":"chenling1022"},"content":"}"}],"authorContributionMap":{"chenling1022":5}},{"path":"src/main/java/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenling1022"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"chenling1022"},"content":" * Identified the exception of invalid deadline input"},{"lineNumber":3,"author":{"gitId":"chenling1022"},"content":" */"},{"lineNumber":4,"author":{"gitId":"chenling1022"},"content":"public class InvalidDeadlineException extends Exception{"},{"lineNumber":5,"author":{"gitId":"chenling1022"},"content":"}"}],"authorContributionMap":{"chenling1022":5}},{"path":"src/main/java/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenling1022"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"chenling1022"},"content":" * Identified the exception of invalid event input"},{"lineNumber":3,"author":{"gitId":"chenling1022"},"content":" */"},{"lineNumber":4,"author":{"gitId":"chenling1022"},"content":"public class InvalidEventException extends Exception{"},{"lineNumber":5,"author":{"gitId":"chenling1022"},"content":"}"}],"authorContributionMap":{"chenling1022":5}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenling1022"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"chenling1022"},"content":" * To check user\u0027s input is valid"},{"lineNumber":3,"author":{"gitId":"chenling1022"},"content":" */"},{"lineNumber":4,"author":{"gitId":"chenling1022"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":6,"author":{"gitId":"chenling1022"},"content":"    public Parser(){};"},{"lineNumber":7,"author":{"gitId":"chenling1022"},"content":"    public static Ui ui \u003d new Ui();"},{"lineNumber":8,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":9,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"chenling1022"},"content":"     * Check the list command is proper"},{"lineNumber":11,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":12,"author":{"gitId":"chenling1022"},"content":"     * @return true if it is valid and false otherwise"},{"lineNumber":13,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"chenling1022"},"content":"    public static boolean isList(String user_input) {"},{"lineNumber":15,"author":{"gitId":"chenling1022"},"content":"        if (user_input.equals(\"list\")) {"},{"lineNumber":16,"author":{"gitId":"chenling1022"},"content":"            return true;"},{"lineNumber":17,"author":{"gitId":"chenling1022"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"chenling1022"},"content":"            return false;"},{"lineNumber":19,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":22,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"chenling1022"},"content":"     * Check the todo command is proper"},{"lineNumber":24,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":25,"author":{"gitId":"chenling1022"},"content":"     * @return true if it is valid and false otherwise"},{"lineNumber":26,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"chenling1022"},"content":"    public static boolean isTodo(String user_input) {"},{"lineNumber":28,"author":{"gitId":"chenling1022"},"content":"        if (user_input.length() \u003e 4) {"},{"lineNumber":29,"author":{"gitId":"chenling1022"},"content":"            if (user_input.substring(0, 4).equals(\"todo\")) {"},{"lineNumber":30,"author":{"gitId":"chenling1022"},"content":"                return true;"},{"lineNumber":31,"author":{"gitId":"chenling1022"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"chenling1022"},"content":"        return false;"},{"lineNumber":34,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":36,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"chenling1022"},"content":"     * Check the done command is proper"},{"lineNumber":38,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":39,"author":{"gitId":"chenling1022"},"content":"     * @return true if it is valid and false otherwise"},{"lineNumber":40,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"chenling1022"},"content":"    public static boolean isDone(String user_input) {"},{"lineNumber":42,"author":{"gitId":"chenling1022"},"content":"        if (user_input.length() \u003e 4) {"},{"lineNumber":43,"author":{"gitId":"chenling1022"},"content":"            if (user_input.substring(0, 4).equals(\"done\")) {"},{"lineNumber":44,"author":{"gitId":"chenling1022"},"content":"                return true;"},{"lineNumber":45,"author":{"gitId":"chenling1022"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"chenling1022"},"content":"        return false;"},{"lineNumber":48,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":50,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":51,"author":{"gitId":"chenling1022"},"content":"    private static boolean emptyInput(String user_input, Command command) {"},{"lineNumber":52,"author":{"gitId":"chenling1022"},"content":"        switch (command) {"},{"lineNumber":53,"author":{"gitId":"chenling1022"},"content":"            case TODO:"},{"lineNumber":54,"author":{"gitId":"chenling1022"},"content":"                return (user_input.substring(ui.TODO_START, user_input.length()).strip().equals(\"\"));"},{"lineNumber":55,"author":{"gitId":"chenling1022"},"content":"            case EVENT:"},{"lineNumber":56,"author":{"gitId":"chenling1022"},"content":"                return user_input.substring(ui.EVENT_START, getDeadlineIndex(user_input)).strip().equals(\"\");"},{"lineNumber":57,"author":{"gitId":"chenling1022"},"content":"            case DEADLINE:"},{"lineNumber":58,"author":{"gitId":"chenling1022"},"content":"                return (user_input.substring(ui.DEADLINE_START, getDeadlineIndex(user_input)).strip().equals(\"\"));"},{"lineNumber":59,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"chenling1022"},"content":"        return false;"},{"lineNumber":61,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"chenling1022"},"content":"     * Check the delete command is proper"},{"lineNumber":64,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":65,"author":{"gitId":"chenling1022"},"content":"     * @return true if it is valid and false otherwise"},{"lineNumber":66,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"chenling1022"},"content":"    public static boolean isDelete(String user_input) {"},{"lineNumber":68,"author":{"gitId":"chenling1022"},"content":"        if (user_input.length() \u003e 6) {"},{"lineNumber":69,"author":{"gitId":"chenling1022"},"content":"            if (user_input.substring(0, 6).equals(\"delete\")) {"},{"lineNumber":70,"author":{"gitId":"chenling1022"},"content":"                return true;"},{"lineNumber":71,"author":{"gitId":"chenling1022"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"chenling1022"},"content":"        return false;"},{"lineNumber":74,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":76,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"chenling1022"},"content":"     * Check the event command is proper"},{"lineNumber":78,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":79,"author":{"gitId":"chenling1022"},"content":"     * @return true if it is valid and false otherwise"},{"lineNumber":80,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"chenling1022"},"content":"   public static boolean isEvent(String user_input) {"},{"lineNumber":82,"author":{"gitId":"chenling1022"},"content":"        if (user_input.length() \u003e 5) {"},{"lineNumber":83,"author":{"gitId":"chenling1022"},"content":"            if (user_input.substring(0, 5).equals(\"event\")) {"},{"lineNumber":84,"author":{"gitId":"chenling1022"},"content":"                return true;"},{"lineNumber":85,"author":{"gitId":"chenling1022"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"chenling1022"},"content":"        return false;"},{"lineNumber":88,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":90,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"chenling1022"},"content":"     * Check the deadline command is proper"},{"lineNumber":92,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":93,"author":{"gitId":"chenling1022"},"content":"     * @return true if it is valid and false otherwise"},{"lineNumber":94,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"chenling1022"},"content":"    public static boolean isDeadline(String user_input) {"},{"lineNumber":96,"author":{"gitId":"chenling1022"},"content":"        if (user_input.length() \u003e 8) {"},{"lineNumber":97,"author":{"gitId":"chenling1022"},"content":"            if (user_input.substring(0, 8).equals(\"deadline\")) {"},{"lineNumber":98,"author":{"gitId":"chenling1022"},"content":"                return true;"},{"lineNumber":99,"author":{"gitId":"chenling1022"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"chenling1022"},"content":"        return false;"},{"lineNumber":102,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":104,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"chenling1022"},"content":"     * Get the index of the task that the user inputs as done"},{"lineNumber":106,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":107,"author":{"gitId":"chenling1022"},"content":"     * @return the index"},{"lineNumber":108,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"chenling1022"},"content":"    public static int getDoneTaskIndex(String user_input) {"},{"lineNumber":110,"author":{"gitId":"chenling1022"},"content":"        int taskIndex \u003d Integer.parseInt(user_input.substring(ui.DONE_START, user_input.length()));"},{"lineNumber":111,"author":{"gitId":"chenling1022"},"content":"        return taskIndex;"},{"lineNumber":112,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"chenling1022"},"content":"     * Check the bye command is proper"},{"lineNumber":115,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":116,"author":{"gitId":"chenling1022"},"content":"     * @return true if it is valid and false otherwise"},{"lineNumber":117,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"chenling1022"},"content":"    public static boolean isBye(String user_input) {"},{"lineNumber":119,"author":{"gitId":"chenling1022"},"content":"        if (user_input.equals(\"bye\")) {"},{"lineNumber":120,"author":{"gitId":"chenling1022"},"content":"            return true;"},{"lineNumber":121,"author":{"gitId":"chenling1022"},"content":"        } else {"},{"lineNumber":122,"author":{"gitId":"chenling1022"},"content":"            return false;"},{"lineNumber":123,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":126,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"chenling1022"},"content":"     * Check the find command is proper"},{"lineNumber":128,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":129,"author":{"gitId":"chenling1022"},"content":"     * @return true if it is valid and false otherwise"},{"lineNumber":130,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"chenling1022"},"content":"    public static boolean isFind(String user_input){"},{"lineNumber":132,"author":{"gitId":"chenling1022"},"content":"        if (user_input.length() \u003e 4) {"},{"lineNumber":133,"author":{"gitId":"chenling1022"},"content":"            if (user_input.substring(0, 4).equals(\"find\")) {"},{"lineNumber":134,"author":{"gitId":"chenling1022"},"content":"                return true;"},{"lineNumber":135,"author":{"gitId":"chenling1022"},"content":"            }"},{"lineNumber":136,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"chenling1022"},"content":"        return false;"},{"lineNumber":138,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":140,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"chenling1022"},"content":"     * Get the index of the time specified"},{"lineNumber":142,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":143,"author":{"gitId":"chenling1022"},"content":"     * @return the index of the time"},{"lineNumber":144,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":145,"author":{"gitId":"chenling1022"},"content":"    public static int getDeadlineIndex(String user_input) {"},{"lineNumber":146,"author":{"gitId":"chenling1022"},"content":"        int index \u003d user_input.indexOf(\u0027/\u0027);"},{"lineNumber":147,"author":{"gitId":"chenling1022"},"content":"        return index;"},{"lineNumber":148,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":150,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":151,"author":{"gitId":"chenling1022"},"content":"     * Get the deadline of the task"},{"lineNumber":152,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":153,"author":{"gitId":"chenling1022"},"content":"     * @return string deadline of the task. e.g. 4pm."},{"lineNumber":154,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":155,"author":{"gitId":"chenling1022"},"content":"    public static String getDeadline(String user_input) {"},{"lineNumber":156,"author":{"gitId":"chenling1022"},"content":"        int timeIndex \u003d getDeadlineIndex(user_input);"},{"lineNumber":157,"author":{"gitId":"chenling1022"},"content":"        String deadline \u003d user_input.substring(timeIndex + 3, user_input.length());"},{"lineNumber":158,"author":{"gitId":"chenling1022"},"content":"        return deadline;"},{"lineNumber":159,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":161,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":162,"author":{"gitId":"chenling1022"},"content":"     * Check whether the input event time is valid"},{"lineNumber":163,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":164,"author":{"gitId":"chenling1022"},"content":"     * @return true if it is valid and false otherwise"},{"lineNumber":165,"author":{"gitId":"chenling1022"},"content":"     * @throws InvalidEventException"},{"lineNumber":166,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"chenling1022"},"content":"    protected static boolean validEventTime(String user_input) throws InvalidEventException {"},{"lineNumber":168,"author":{"gitId":"chenling1022"},"content":"        if (user_input.substring(getDeadlineIndex(user_input), getDeadlineIndex(user_input) + 3).equals(\"/at\")) {"},{"lineNumber":169,"author":{"gitId":"chenling1022"},"content":"            return true;"},{"lineNumber":170,"author":{"gitId":"chenling1022"},"content":"        } else {"},{"lineNumber":171,"author":{"gitId":"chenling1022"},"content":"            return false;"},{"lineNumber":172,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":175,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":176,"author":{"gitId":"chenling1022"},"content":"     * Check whether the input deadline time is valid"},{"lineNumber":177,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":178,"author":{"gitId":"chenling1022"},"content":"     * @return true if it is valid and false otherwise"},{"lineNumber":179,"author":{"gitId":"chenling1022"},"content":"     * @throws InvalidDeadlineException"},{"lineNumber":180,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":181,"author":{"gitId":"chenling1022"},"content":"    protected static boolean validDeadlineTime(String user_input) throws InvalidDeadlineException {"},{"lineNumber":182,"author":{"gitId":"chenling1022"},"content":"        if (user_input.substring(getDeadlineIndex(user_input), getDeadlineIndex(user_input) + 3).equals(\"/by\")) {"},{"lineNumber":183,"author":{"gitId":"chenling1022"},"content":"            return true;"},{"lineNumber":184,"author":{"gitId":"chenling1022"},"content":"        } else {"},{"lineNumber":185,"author":{"gitId":"chenling1022"},"content":"            return false;"},{"lineNumber":186,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":189,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":190,"author":{"gitId":"chenling1022"},"content":"     * Check whether the input is valid"},{"lineNumber":191,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":192,"author":{"gitId":"chenling1022"},"content":"     * @param command"},{"lineNumber":193,"author":{"gitId":"chenling1022"},"content":"     * @throws EmptyInputException"},{"lineNumber":194,"author":{"gitId":"chenling1022"},"content":"     * @throws InvalidEventException"},{"lineNumber":195,"author":{"gitId":"chenling1022"},"content":"     * @throws InvalidDeadlineException"},{"lineNumber":196,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":197,"author":{"gitId":"chenling1022"},"content":"    protected static void checkValidInput(String user_input, Command command) throws EmptyInputException, InvalidEventException, InvalidDeadlineException {"},{"lineNumber":198,"author":{"gitId":"chenling1022"},"content":"        if (emptyInput(user_input, command)) {"},{"lineNumber":199,"author":{"gitId":"chenling1022"},"content":"            throw new EmptyInputException();"},{"lineNumber":200,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":201,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":202,"author":{"gitId":"chenling1022"},"content":"        switch (command) {"},{"lineNumber":203,"author":{"gitId":"chenling1022"},"content":"            case EVENT:"},{"lineNumber":204,"author":{"gitId":"chenling1022"},"content":"                if (validEventTime(user_input)) {"},{"lineNumber":205,"author":{"gitId":"chenling1022"},"content":"                    break;"},{"lineNumber":206,"author":{"gitId":"chenling1022"},"content":"                } else {"},{"lineNumber":207,"author":{"gitId":"chenling1022"},"content":"                    throw new InvalidEventException();"},{"lineNumber":208,"author":{"gitId":"chenling1022"},"content":"                }"},{"lineNumber":209,"author":{"gitId":"chenling1022"},"content":"            case DEADLINE:"},{"lineNumber":210,"author":{"gitId":"chenling1022"},"content":"                if (validDeadlineTime(user_input)) {"},{"lineNumber":211,"author":{"gitId":"chenling1022"},"content":"                    break;"},{"lineNumber":212,"author":{"gitId":"chenling1022"},"content":"                } else {"},{"lineNumber":213,"author":{"gitId":"chenling1022"},"content":"                    throw new InvalidDeadlineException();"},{"lineNumber":214,"author":{"gitId":"chenling1022"},"content":"                }"},{"lineNumber":215,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":216,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":218,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":219,"author":{"gitId":"chenling1022"},"content":"}"}],"authorContributionMap":{"chenling1022":219}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenling1022"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"chenling1022"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"chenling1022"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"chenling1022"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"chenling1022"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":7,"author":{"gitId":"chenling1022"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"chenling1022"},"content":" * File handling"},{"lineNumber":9,"author":{"gitId":"chenling1022"},"content":" */"},{"lineNumber":10,"author":{"gitId":"chenling1022"},"content":"public class Storage {"},{"lineNumber":11,"author":{"gitId":"chenling1022"},"content":"    private static TaskList tasks \u003d new TaskList();"},{"lineNumber":12,"author":{"gitId":"chenling1022"},"content":"    private static Task[] t \u003d tasks.getTasks();"},{"lineNumber":13,"author":{"gitId":"chenling1022"},"content":"    private static Ui ui \u003d new Ui();"},{"lineNumber":14,"author":{"gitId":"chenling1022"},"content":"    private static String filePath;"},{"lineNumber":15,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":16,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"chenling1022"},"content":"     * constructor of the class"},{"lineNumber":18,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"chenling1022"},"content":"    public Storage(){}"},{"lineNumber":20,"author":{"gitId":"chenling1022"},"content":"    private static void printFileContents(String filePath) throws FileNotFoundException {"},{"lineNumber":21,"author":{"gitId":"chenling1022"},"content":"        File f \u003d new File(filePath); // create a File for the given file path"},{"lineNumber":22,"author":{"gitId":"chenling1022"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":23,"author":{"gitId":"chenling1022"},"content":"        while (s.hasNext()) {"},{"lineNumber":24,"author":{"gitId":"chenling1022"},"content":"            System.out.println(s.nextLine());"},{"lineNumber":25,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":28,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":29,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":30,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"chenling1022"},"content":"     * Load file from local drive"},{"lineNumber":32,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":34,"author":{"gitId":"chenling1022"},"content":"    public static void createFile(){"},{"lineNumber":35,"author":{"gitId":"chenling1022"},"content":"        System.out.println(\"Creating file...\");"},{"lineNumber":36,"author":{"gitId":"chenling1022"},"content":"        File tempDir \u003d new File(System.getProperty(\"user.dir\"));"},{"lineNumber":37,"author":{"gitId":"chenling1022"},"content":"        File f \u003d new File(tempDir,\"duke.txt\");"},{"lineNumber":38,"author":{"gitId":"chenling1022"},"content":"        System.out.println(\"File is created at \"+ f.getAbsoluteFile());"},{"lineNumber":39,"author":{"gitId":"chenling1022"},"content":"        filePath \u003d f.getAbsolutePath();"},{"lineNumber":40,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":42,"author":{"gitId":"chenling1022"},"content":"    public static void loadFile() {"},{"lineNumber":43,"author":{"gitId":"chenling1022"},"content":"        String dir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":44,"author":{"gitId":"chenling1022"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"chenling1022"},"content":"            printFileContents(dir+\"duke.txt\");"},{"lineNumber":46,"author":{"gitId":"chenling1022"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":47,"author":{"gitId":"chenling1022"},"content":"            createFile();"},{"lineNumber":48,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":50,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":52,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":53,"author":{"gitId":"chenling1022"},"content":"    public static void clearFile(){"},{"lineNumber":54,"author":{"gitId":"chenling1022"},"content":"        try{"},{"lineNumber":55,"author":{"gitId":"chenling1022"},"content":"            writeToFile(filePath, \" \");"},{"lineNumber":56,"author":{"gitId":"chenling1022"},"content":"        }catch(IOException e){"},{"lineNumber":57,"author":{"gitId":"chenling1022"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());"},{"lineNumber":58,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":60,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"chenling1022"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {"},{"lineNumber":62,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":63,"author":{"gitId":"chenling1022"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":64,"author":{"gitId":"chenling1022"},"content":"        fw.write(textToAdd);"},{"lineNumber":65,"author":{"gitId":"chenling1022"},"content":"        fw.close();"},{"lineNumber":66,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":68,"author":{"gitId":"chenling1022"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException {"},{"lineNumber":69,"author":{"gitId":"chenling1022"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"},{"lineNumber":70,"author":{"gitId":"chenling1022"},"content":"        fw.write(textToAppend);"},{"lineNumber":71,"author":{"gitId":"chenling1022"},"content":"        fw.close();"},{"lineNumber":72,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":74,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":75,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"chenling1022"},"content":"     * Write to file or append to file"},{"lineNumber":77,"author":{"gitId":"chenling1022"},"content":"     * @param num total number of tasks"},{"lineNumber":78,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"chenling1022"},"content":"    public static void changeFile(int num) {"},{"lineNumber":80,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":81,"author":{"gitId":"chenling1022"},"content":"        if(num\u003e\u003d1){"},{"lineNumber":82,"author":{"gitId":"chenling1022"},"content":"            try{"},{"lineNumber":83,"author":{"gitId":"chenling1022"},"content":"                writeToFile(filePath,\"[\" + t[1].getStatusIcon() + \"] \" + t[1].getDescription() + \"\\n\");"},{"lineNumber":84,"author":{"gitId":"chenling1022"},"content":"            }catch (IOException e){"},{"lineNumber":85,"author":{"gitId":"chenling1022"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());"},{"lineNumber":86,"author":{"gitId":"chenling1022"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":88,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":90,"author":{"gitId":"chenling1022"},"content":"        for (int i \u003d 2; i \u003c\u003d num; i++) {"},{"lineNumber":91,"author":{"gitId":"chenling1022"},"content":"            try {"},{"lineNumber":92,"author":{"gitId":"chenling1022"},"content":"                    appendToFile(filePath, \"[\" + t[i].getStatusIcon() + \"] \" + t[i].getDescription() + \"\\n\");"},{"lineNumber":93,"author":{"gitId":"chenling1022"},"content":"            } catch (IOException e) {"},{"lineNumber":94,"author":{"gitId":"chenling1022"},"content":"                    System.out.println(\"Something went wrong: \" + e.getMessage());"},{"lineNumber":95,"author":{"gitId":"chenling1022"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":98,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":99,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":100,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":101,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":102,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":103,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":104,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":106,"author":{"gitId":"chenling1022"},"content":"}"}],"authorContributionMap":{"chenling1022":106}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenling1022"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"chenling1022"},"content":" * information about a task"},{"lineNumber":3,"author":{"gitId":"chenling1022"},"content":" */"},{"lineNumber":4,"author":{"gitId":"chenling1022"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"chenling1022"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"chenling1022"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":8,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"chenling1022"},"content":"     * Constructor"},{"lineNumber":10,"author":{"gitId":"chenling1022"},"content":"     * @param description"},{"lineNumber":11,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"chenling1022"},"content":"    public Task(String description) {"},{"lineNumber":13,"author":{"gitId":"chenling1022"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"chenling1022"},"content":"        this.isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"chenling1022"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":16,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":18,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"chenling1022"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"chenling1022"},"content":"     * @return Y if it is done and N if it is not done"},{"lineNumber":21,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"chenling1022"},"content":"    public String getStatusIcon() {"},{"lineNumber":23,"author":{"gitId":"chenling1022"},"content":"        return (isDone ? \"Y\" : \"N\");"},{"lineNumber":24,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"chenling1022"},"content":"    public void setStatusIcon(String status){"},{"lineNumber":26,"author":{"gitId":"chenling1022"},"content":"        if(status.equals(\"Y\")){"},{"lineNumber":27,"author":{"gitId":"chenling1022"},"content":"            this.isDone \u003d true;"},{"lineNumber":28,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"chenling1022"},"content":"        else{"},{"lineNumber":30,"author":{"gitId":"chenling1022"},"content":"            this.isDone \u003d false;"},{"lineNumber":31,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":34,"author":{"gitId":"chenling1022"},"content":"    public void setDescription(String description){"},{"lineNumber":35,"author":{"gitId":"chenling1022"},"content":"        this.description \u003d description;"},{"lineNumber":36,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":38,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"chenling1022"},"content":"     * @return description of the task"},{"lineNumber":40,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"chenling1022"},"content":"    public String getDescription() {"},{"lineNumber":42,"author":{"gitId":"chenling1022"},"content":"        return description;"},{"lineNumber":43,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":45,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"chenling1022"},"content":"     * mark a task as done"},{"lineNumber":47,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"chenling1022"},"content":"    public void markAsDone() {"},{"lineNumber":49,"author":{"gitId":"chenling1022"},"content":"        isDone \u003d true;"},{"lineNumber":50,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":52,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"chenling1022"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"chenling1022"},"content":"     * @return a proper format"},{"lineNumber":55,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"chenling1022"},"content":"    public String toString() {"},{"lineNumber":57,"author":{"gitId":"chenling1022"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \" + description);"},{"lineNumber":58,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"chenling1022"},"content":"}"}],"authorContributionMap":{"chenling1022":59}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenling1022"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"chenling1022"},"content":" * Store the list of tasks"},{"lineNumber":3,"author":{"gitId":"chenling1022"},"content":" */"},{"lineNumber":4,"author":{"gitId":"chenling1022"},"content":"public class TaskList {"},{"lineNumber":5,"author":{"gitId":"chenling1022"},"content":"    public static Task t[] \u003d new Task[100];"},{"lineNumber":6,"author":{"gitId":"chenling1022"},"content":"    public static Parser parser \u003d new Parser();"},{"lineNumber":7,"author":{"gitId":"chenling1022"},"content":"    public static Ui ui \u003d new Ui();"},{"lineNumber":8,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":9,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"chenling1022"},"content":"     * Constructor of the class"},{"lineNumber":11,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"chenling1022"},"content":"    public TaskList(){"},{"lineNumber":13,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":15,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"chenling1022"},"content":"     * @return the list of stored tasks"},{"lineNumber":17,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"chenling1022"},"content":"    protected Task[] getTasks(){"},{"lineNumber":19,"author":{"gitId":"chenling1022"},"content":"        return t;"},{"lineNumber":20,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":22,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"chenling1022"},"content":"     * Delete the task from the stored list"},{"lineNumber":24,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":25,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"chenling1022"},"content":"    protected static void deleteTask(String user_input) {"},{"lineNumber":27,"author":{"gitId":"chenling1022"},"content":"        if (parser.isDelete(user_input)) {"},{"lineNumber":28,"author":{"gitId":"chenling1022"},"content":"            int spaceIndex \u003d user_input.indexOf(\u0027 \u0027);"},{"lineNumber":29,"author":{"gitId":"chenling1022"},"content":"            String deleteString \u003d user_input.substring(spaceIndex + 1);"},{"lineNumber":30,"author":{"gitId":"chenling1022"},"content":"            int deleteIndex \u003d Integer.parseInt(deleteString);"},{"lineNumber":31,"author":{"gitId":"chenling1022"},"content":"            System.out.println(\"I have deleted this task for you: \");"},{"lineNumber":32,"author":{"gitId":"chenling1022"},"content":"            System.out.println(\"[\" + t[deleteIndex].getStatusIcon() + \"] \" + t[deleteIndex].getDescription() + \"\\n\");"},{"lineNumber":33,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":34,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":35,"author":{"gitId":"chenling1022"},"content":"            for (int i \u003d deleteIndex; i \u003c t.length - 1; i++) {"},{"lineNumber":36,"author":{"gitId":"chenling1022"},"content":"                    t[i] \u003d t[i + 1];"},{"lineNumber":37,"author":{"gitId":"chenling1022"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":39,"author":{"gitId":"chenling1022"},"content":"            ui.num_of_goals--;"},{"lineNumber":40,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":41,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":44,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"chenling1022"},"content":"     * Message to show to users after adding a task"},{"lineNumber":46,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"chenling1022"},"content":"    protected static void repeatTaskAdded() {"},{"lineNumber":48,"author":{"gitId":"chenling1022"},"content":"        System.out.println(t[ui.num_of_goals]);"},{"lineNumber":49,"author":{"gitId":"chenling1022"},"content":"        System.out.println(\"Now you have \" + ui.num_of_goals + \" tasks in the list.\");"},{"lineNumber":50,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":52,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"chenling1022"},"content":"     * Mark a specific task as done"},{"lineNumber":54,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":55,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"chenling1022"},"content":"    protected static void markAsDone(String user_input) {"},{"lineNumber":57,"author":{"gitId":"chenling1022"},"content":"        int doneTaskIndex \u003d parser.getDoneTaskIndex(user_input);"},{"lineNumber":58,"author":{"gitId":"chenling1022"},"content":"        t[doneTaskIndex].markAsDone();"},{"lineNumber":59,"author":{"gitId":"chenling1022"},"content":"        doneMessage(doneTaskIndex);"},{"lineNumber":60,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":62,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"chenling1022"},"content":"     * add a new task to the task list"},{"lineNumber":64,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":65,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"chenling1022"},"content":"    protected static void addNewTask(String user_input) {"},{"lineNumber":67,"author":{"gitId":"chenling1022"},"content":"        t[ui.num_of_goals] \u003d new Task(user_input);"},{"lineNumber":68,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":70,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":71,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"chenling1022"},"content":"     * add a new deadline task"},{"lineNumber":73,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":74,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"chenling1022"},"content":"    protected static void addNewDeadline(String user_input) {"},{"lineNumber":76,"author":{"gitId":"chenling1022"},"content":"        t[ui.num_of_goals] \u003d new Deadline(user_input.substring(ui.DEADLINE_START, parser.getDeadlineIndex(user_input)), parser.getDeadline(user_input));"},{"lineNumber":77,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":79,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"chenling1022"},"content":"     * add a new event task"},{"lineNumber":81,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":82,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"chenling1022"},"content":"    protected static void addNewEvent(String user_input) {"},{"lineNumber":84,"author":{"gitId":"chenling1022"},"content":"        t[ui.num_of_goals] \u003d new Event(user_input.substring(ui.EVENT_START, parser.getDeadlineIndex(user_input)), parser.getDeadline(user_input));"},{"lineNumber":85,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":87,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"chenling1022"},"content":"     * add a new todo task"},{"lineNumber":89,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":90,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"chenling1022"},"content":"    protected static void addNewTodo(String user_input) {"},{"lineNumber":92,"author":{"gitId":"chenling1022"},"content":"        t[ui.num_of_goals] \u003d new Todo(user_input.substring(ui.TODO_START, user_input.length()));"},{"lineNumber":93,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":95,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"chenling1022"},"content":"     * print the message to user showing that task is added"},{"lineNumber":97,"author":{"gitId":"chenling1022"},"content":"     * @param taskIndex"},{"lineNumber":98,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"chenling1022"},"content":"    protected static void doneMessage(int taskIndex) {"},{"lineNumber":100,"author":{"gitId":"chenling1022"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":101,"author":{"gitId":"chenling1022"},"content":"        System.out.println(\"[\" + t[taskIndex].getStatusIcon() + \"] \" + t[taskIndex].getDescription() + \"\\n\");"},{"lineNumber":102,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":104,"author":{"gitId":"chenling1022"},"content":"    protected static void listTaskMsg() {"},{"lineNumber":105,"author":{"gitId":"chenling1022"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":106,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":108,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"chenling1022"},"content":"     * Print the list of all tasks"},{"lineNumber":110,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"chenling1022"},"content":"    protected static void enumerateTasks() {"},{"lineNumber":112,"author":{"gitId":"chenling1022"},"content":"        for (int i \u003d 0; i \u003c ui.num_of_goals; i++) {"},{"lineNumber":113,"author":{"gitId":"chenling1022"},"content":"            System.out.println((i + 1) + \".\" + t[i + 1].toString());"},{"lineNumber":114,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":117,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":118,"author":{"gitId":"chenling1022"},"content":"     * Find the task as specified in the input"},{"lineNumber":119,"author":{"gitId":"chenling1022"},"content":"     * @param user_input"},{"lineNumber":120,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"chenling1022"},"content":"    protected static void findTasks(String user_input){"},{"lineNumber":122,"author":{"gitId":"chenling1022"},"content":"        if(parser.isFind(user_input)){"},{"lineNumber":123,"author":{"gitId":"chenling1022"},"content":"            String taskname \u003d user_input.substring(ui.FIND_START, user_input.length());"},{"lineNumber":124,"author":{"gitId":"chenling1022"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":125,"author":{"gitId":"chenling1022"},"content":"            for (int i\u003d1;i\u003c\u003dui.num_of_goals;i++){"},{"lineNumber":126,"author":{"gitId":"chenling1022"},"content":"                if(t[i].getDescription().contains(taskname)){"},{"lineNumber":127,"author":{"gitId":"chenling1022"},"content":"                    System.out.println((i) + \".\" + t[i].toString());"},{"lineNumber":128,"author":{"gitId":"chenling1022"},"content":"                }"},{"lineNumber":129,"author":{"gitId":"chenling1022"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"chenling1022"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"chenling1022"},"content":"}"}],"authorContributionMap":{"chenling1022":132}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenling1022"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"chenling1022"},"content":" * Child class Todo inherited from parent class Task"},{"lineNumber":3,"author":{"gitId":"chenling1022"},"content":" */"},{"lineNumber":4,"author":{"gitId":"chenling1022"},"content":"public class Todo extends Task{"},{"lineNumber":5,"author":{"gitId":"chenling1022"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"chenling1022"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":9,"author":{"gitId":"chenling1022"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"chenling1022"},"content":"     * Change to proper format"},{"lineNumber":12,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"chenling1022"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"chenling1022"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":15,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"chenling1022"},"content":"}"}],"authorContributionMap":{"chenling1022":16}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chenling1022"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":3,"author":{"gitId":"chenling1022"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"chenling1022"},"content":" * Take in user input"},{"lineNumber":5,"author":{"gitId":"chenling1022"},"content":" */"},{"lineNumber":6,"author":{"gitId":"chenling1022"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"chenling1022"},"content":"    protected static int num_of_goals \u003d 0;"},{"lineNumber":8,"author":{"gitId":"chenling1022"},"content":"    public static Scanner in \u003d new Scanner(System.in);"},{"lineNumber":9,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":10,"author":{"gitId":"chenling1022"},"content":"    public static final int DONE_START \u003d 5;"},{"lineNumber":11,"author":{"gitId":"chenling1022"},"content":"    public static final int TODO_START \u003d 5;"},{"lineNumber":12,"author":{"gitId":"chenling1022"},"content":"    public static final int EVENT_START \u003d 6;"},{"lineNumber":13,"author":{"gitId":"chenling1022"},"content":"    public static final int DEADLINE_START \u003d 9;"},{"lineNumber":14,"author":{"gitId":"chenling1022"},"content":"    public static final int FIND_START \u003d5;"},{"lineNumber":15,"author":{"gitId":"chenling1022"},"content":"    public TaskList tasks \u003d new TaskList();"},{"lineNumber":16,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":17,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"chenling1022"},"content":"     * Constructor of the class"},{"lineNumber":19,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"chenling1022"},"content":"    public Ui() {"},{"lineNumber":21,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":23,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"chenling1022"},"content":"     * Take in user input and convert into string"},{"lineNumber":25,"author":{"gitId":"chenling1022"},"content":"     * @param in Scanner"},{"lineNumber":26,"author":{"gitId":"chenling1022"},"content":"     * @return string user input"},{"lineNumber":27,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"chenling1022"},"content":"    protected static String getString(Scanner in) {"},{"lineNumber":29,"author":{"gitId":"chenling1022"},"content":"        String user_input;"},{"lineNumber":30,"author":{"gitId":"chenling1022"},"content":"        user_input \u003d in.nextLine();"},{"lineNumber":31,"author":{"gitId":"chenling1022"},"content":"        return user_input;"},{"lineNumber":32,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":33,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":35,"author":{"gitId":"chenling1022"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"chenling1022"},"content":"     * Increment of total number of tasks stored"},{"lineNumber":37,"author":{"gitId":"chenling1022"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"chenling1022"},"content":"    protected static void plusNumOfGoals() {"},{"lineNumber":39,"author":{"gitId":"chenling1022"},"content":"        num_of_goals++;"},{"lineNumber":40,"author":{"gitId":"chenling1022"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"chenling1022"},"content":"}"},{"lineNumber":42,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":43,"author":{"gitId":"chenling1022"},"content":""},{"lineNumber":44,"author":{"gitId":"chenling1022"},"content":""}],"authorContributionMap":{"chenling1022":44}}]
