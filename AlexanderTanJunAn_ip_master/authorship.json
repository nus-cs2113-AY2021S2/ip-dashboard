[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"# User Guide"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"Duke is a desktop app for managing your todos, events and deadlines, optimised for use via a Command Line Interface(CLI)."},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"* [Features](#features)"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"  * [Adding todos, deadlines and events](#1-adding-todos-deadlines-and-events)"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"    * [Adding a todo](#adding-a-todo-todo)"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"    * [Adding a deadline](#adding-a-deadline-deadline)"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"    * [Adding an event](#adding-an-event-event)"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"  * [Deleting a task](#2-deleting-todos-deadlines-and-events-delete)"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"  * [Listing all tasks](#3-listing-all-tasks-list)"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"  * [Marking task as done](#4-marking-task-as-done-done)"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"  * [Seaching for specified keyword](#5-searching-for-specified-keyword-find)"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"  * [Exiting the program](#6-exiting-the-program-bye)"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"* [Saving the data](#saving-the-data)"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"* [Editing the data](#editing-the-data)"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"* [FAQ](#faq)"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"## Features "},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"### 1. Adding todos, deadlines and events"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":"Adding tasks."},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Usage"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Adding a todo: `todo`"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"Adds a todo into the task list"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"Format: `todo [task name]`"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"Example of usage: "},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"`todo read book`"},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":"Expected outcome:"},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t[T][✘] read book"},{"lineNumber":67,"author":{"gitId":"AlexanderTanJunAn"},"content":"Now you have 8 tasks in the list."},{"lineNumber":68,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":69,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":70,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Adding a deadline: `deadline`"},{"lineNumber":71,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":72,"author":{"gitId":"AlexanderTanJunAn"},"content":"Adds a task with a deadline into the task list"},{"lineNumber":73,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":74,"author":{"gitId":"AlexanderTanJunAn"},"content":"Format: `deadline [task name] /by [date/time]`"},{"lineNumber":75,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":76,"author":{"gitId":"AlexanderTanJunAn"},"content":"Example of usage:"},{"lineNumber":77,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":78,"author":{"gitId":"AlexanderTanJunAn"},"content":"`deadline return book /by Sunday 7pm`"},{"lineNumber":79,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":80,"author":{"gitId":"AlexanderTanJunAn"},"content":"Expected outcome:"},{"lineNumber":81,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":82,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":83,"author":{"gitId":"AlexanderTanJunAn"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":84,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t[D][✘] return book (by: Sunday 7pm)"},{"lineNumber":85,"author":{"gitId":"AlexanderTanJunAn"},"content":"Now you have 9 tasks in the list."},{"lineNumber":86,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":87,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":88,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Adding an event: `event`"},{"lineNumber":89,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":90,"author":{"gitId":"AlexanderTanJunAn"},"content":"Adds an event into the task list"},{"lineNumber":91,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":92,"author":{"gitId":"AlexanderTanJunAn"},"content":"Format: `event [event name] /at [date/time]`"},{"lineNumber":93,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":94,"author":{"gitId":"AlexanderTanJunAn"},"content":"Example of usage:"},{"lineNumber":95,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":96,"author":{"gitId":"AlexanderTanJunAn"},"content":"`event project meeting /at Monday 7-8pm`"},{"lineNumber":97,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":98,"author":{"gitId":"AlexanderTanJunAn"},"content":"Expected outcome:"},{"lineNumber":99,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":100,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":101,"author":{"gitId":"AlexanderTanJunAn"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":102,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t[E][✘] project meeting (at: Monday 7-8pm)"},{"lineNumber":103,"author":{"gitId":"AlexanderTanJunAn"},"content":"Now you have 10 tasks in the list."},{"lineNumber":104,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":105,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":106,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":107,"author":{"gitId":"AlexanderTanJunAn"},"content":"### 2. Deleting todos, deadlines and events: `delete`"},{"lineNumber":108,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":109,"author":{"gitId":"AlexanderTanJunAn"},"content":"Deletes a task at the given index"},{"lineNumber":110,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":111,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Usage"},{"lineNumber":112,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":113,"author":{"gitId":"AlexanderTanJunAn"},"content":"Format: `delete [index]`"},{"lineNumber":114,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":115,"author":{"gitId":"AlexanderTanJunAn"},"content":"Example of usage:"},{"lineNumber":116,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":117,"author":{"gitId":"AlexanderTanJunAn"},"content":"`delete 4`"},{"lineNumber":118,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":119,"author":{"gitId":"AlexanderTanJunAn"},"content":"Expected outcome:"},{"lineNumber":120,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":121,"author":{"gitId":"AlexanderTanJunAn"},"content":"`Done! One less worry for you :)`"},{"lineNumber":122,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":123,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":124,"author":{"gitId":"AlexanderTanJunAn"},"content":"### 3. Listing all tasks: `list`"},{"lineNumber":125,"author":{"gitId":"AlexanderTanJunAn"},"content":"For a quick overview on all added tasks, printed in chronological order."},{"lineNumber":126,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":127,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Usage"},{"lineNumber":128,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":129,"author":{"gitId":"AlexanderTanJunAn"},"content":"Example of usage:"},{"lineNumber":130,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":131,"author":{"gitId":"AlexanderTanJunAn"},"content":"`list`"},{"lineNumber":132,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":133,"author":{"gitId":"AlexanderTanJunAn"},"content":"Expected outcome:"},{"lineNumber":134,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":135,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":136,"author":{"gitId":"AlexanderTanJunAn"},"content":"Here are the tasks in your list:"},{"lineNumber":137,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t1. [T][✘] 1"},{"lineNumber":138,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t2. [T][✘] 3"},{"lineNumber":139,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t3. [E][✘] 4 (at: Wednesday)"},{"lineNumber":140,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t4. [D][✘] return book (by: June 6th)"},{"lineNumber":141,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t5. [E][✘] project meeting (at: Sunday)"},{"lineNumber":142,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t6. [T][✘] run"},{"lineNumber":143,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t7. [T][✘] study book"},{"lineNumber":144,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t8. [T][✘] read book"},{"lineNumber":145,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":146,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":147,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":148,"author":{"gitId":"AlexanderTanJunAn"},"content":"### 4. Marking task as done: `done`"},{"lineNumber":149,"author":{"gitId":"AlexanderTanJunAn"},"content":"To signal that task is completed"},{"lineNumber":150,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":151,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Usage"},{"lineNumber":152,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":153,"author":{"gitId":"AlexanderTanJunAn"},"content":"Format: `done [index]`"},{"lineNumber":154,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":155,"author":{"gitId":"AlexanderTanJunAn"},"content":"Example of usage:"},{"lineNumber":156,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":157,"author":{"gitId":"AlexanderTanJunAn"},"content":"`done 4`"},{"lineNumber":158,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":159,"author":{"gitId":"AlexanderTanJunAn"},"content":"Expected outcome:"},{"lineNumber":160,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":161,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":162,"author":{"gitId":"AlexanderTanJunAn"},"content":"Here are the tasks in your list:"},{"lineNumber":163,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t1. [T][✘] 1"},{"lineNumber":164,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t2. [T][✘] 3"},{"lineNumber":165,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t3. [E][✘] 4 (at: Wednesday)"},{"lineNumber":166,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t4. [D][✓] return book (by: June 6th)"},{"lineNumber":167,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t5. [E][✘] project meeting (at: Sunday)"},{"lineNumber":168,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t6. [T][✘] run"},{"lineNumber":169,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t7. [T][✘] study book"},{"lineNumber":170,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t8. [T][✘] read book`"},{"lineNumber":171,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":172,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":173,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":174,"author":{"gitId":"AlexanderTanJunAn"},"content":"### 5. Searching for specified keyword: `find`"},{"lineNumber":175,"author":{"gitId":"AlexanderTanJunAn"},"content":"Will search through task list for all tasks with specified keyword"},{"lineNumber":176,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":177,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Usage"},{"lineNumber":178,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":179,"author":{"gitId":"AlexanderTanJunAn"},"content":"Format: `find [keyword]`"},{"lineNumber":180,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":181,"author":{"gitId":"AlexanderTanJunAn"},"content":"Example of usage:"},{"lineNumber":182,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":183,"author":{"gitId":"AlexanderTanJunAn"},"content":"`find book`"},{"lineNumber":184,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":185,"author":{"gitId":"AlexanderTanJunAn"},"content":"Expected outcome:"},{"lineNumber":186,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":187,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":188,"author":{"gitId":"AlexanderTanJunAn"},"content":"Here are the matching tasks in your list:"},{"lineNumber":189,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t1. [D][✓] return book (by: June 6th)"},{"lineNumber":190,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t2. [T][✘] study book"},{"lineNumber":191,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t3. [T][✓] read book`"},{"lineNumber":192,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":193,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":194,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":195,"author":{"gitId":"AlexanderTanJunAn"},"content":"### 6. Exiting the program: `bye`"},{"lineNumber":196,"author":{"gitId":"AlexanderTanJunAn"},"content":"Exits the program"},{"lineNumber":197,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":198,"author":{"gitId":"AlexanderTanJunAn"},"content":"Format: `bye`"},{"lineNumber":199,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":200,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":201,"author":{"gitId":"AlexanderTanJunAn"},"content":"## Saving the data"},{"lineNumber":202,"author":{"gitId":"AlexanderTanJunAn"},"content":"Duke automatically saves the data after each and every command, ensuring that data is always up to date. There is no need to save manually."},{"lineNumber":203,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":204,"author":{"gitId":"AlexanderTanJunAn"},"content":"## Editing the data"},{"lineNumber":205,"author":{"gitId":"AlexanderTanJunAn"},"content":"Duke data is automatically saved as a textfile, `Duke.txt` at the location of `Duke.jar`. Advanced users are welcome to directly edit the textfile."},{"lineNumber":206,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":207,"author":{"gitId":"AlexanderTanJunAn"},"content":"## FAQ"},{"lineNumber":208,"author":{"gitId":"AlexanderTanJunAn"},"content":"**Q:** How do I transfer data between computers?"},{"lineNumber":209,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":210,"author":{"gitId":"AlexanderTanJunAn"},"content":"**A:** To transfer data between computers, move the `Duke.txt` file from one computer to the other. Ensure the file is in the same folder as `Duke.jar`."}],"authorContributionMap":{"-":26,"AlexanderTanJunAn":184}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"Duke is a desktop app for managing your todos, events and deadlines, optimised for use via a Command Line Interface(CLI)."},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"* [Features](#features)"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"  * [Adding todos, deadlines and events](#1-adding-todos-deadlines-and-events)"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"    * [Adding a todo](#adding-a-todo-todo)"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"    * [Adding a deadline](#adding-a-deadline-deadline)"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"    * [Adding an event](#adding-an-event-event)"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"  * [Deleting a task](#2-deleting-todos-deadlines-and-events-delete)"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"  * [Listing all tasks](#3-listing-all-tasks-list)"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"  * [Marking task as done](#4-marking-task-as-done-done)"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"  * [Seaching for specified keyword](#5-searching-for-specified-keyword-find)"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"  * [Exiting the program](#6-exiting-the-program-bye)"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"* [Saving the data](#saving-the-data)"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"* [Editing the data](#editing-the-data)"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"* [FAQ](#faq)"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"### 1. Adding todos, deadlines and events"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"Adding tasks."},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Usage"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Adding a todo: `todo`"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"Adds a todo into the task list"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"Format: `todo [task name]`"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"`todo read book`"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t[T][✘] read book"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"Now you have 8 tasks in the list."},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Adding a deadline: `deadline`"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"Adds a task with a deadline into the task list"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"Format: `deadline [task name] /by [date/time]`"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"Example of usage:"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"`deadline return book /by Sunday 7pm`"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"Expected outcome:"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t[D][✘] return book (by: Sunday 7pm)"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"Now you have 9 tasks in the list."},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Adding an event: `event`"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"Adds an event into the task list"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"Format: `event [event name] /at [date/time]`"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":67,"author":{"gitId":"AlexanderTanJunAn"},"content":"Example of usage:"},{"lineNumber":68,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":69,"author":{"gitId":"AlexanderTanJunAn"},"content":"`event project meeting /at Monday 7-8pm`"},{"lineNumber":70,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":71,"author":{"gitId":"AlexanderTanJunAn"},"content":"Expected outcome:"},{"lineNumber":72,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":73,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":74,"author":{"gitId":"AlexanderTanJunAn"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":75,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t[E][✘] project meeting (at: Monday 7-8pm)"},{"lineNumber":76,"author":{"gitId":"AlexanderTanJunAn"},"content":"Now you have 10 tasks in the list."},{"lineNumber":77,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":78,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":79,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":80,"author":{"gitId":"AlexanderTanJunAn"},"content":"### 2. Deleting todos, deadlines and events: `delete`"},{"lineNumber":81,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":82,"author":{"gitId":"AlexanderTanJunAn"},"content":"Deletes a task at the given index"},{"lineNumber":83,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":84,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Usage"},{"lineNumber":85,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":86,"author":{"gitId":"AlexanderTanJunAn"},"content":"Format: `delete [index]`"},{"lineNumber":87,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":88,"author":{"gitId":"AlexanderTanJunAn"},"content":"Example of usage:"},{"lineNumber":89,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":90,"author":{"gitId":"AlexanderTanJunAn"},"content":"`delete 4`"},{"lineNumber":91,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":92,"author":{"gitId":"AlexanderTanJunAn"},"content":"Expected outcome:"},{"lineNumber":93,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":94,"author":{"gitId":"AlexanderTanJunAn"},"content":"`Done! One less worry for you :)`"},{"lineNumber":95,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":96,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":97,"author":{"gitId":"AlexanderTanJunAn"},"content":"### 3. Listing all tasks: `list`"},{"lineNumber":98,"author":{"gitId":"AlexanderTanJunAn"},"content":"For a quick overview on all added tasks, printed in chronological order."},{"lineNumber":99,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":100,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Usage"},{"lineNumber":101,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":102,"author":{"gitId":"AlexanderTanJunAn"},"content":"Example of usage:"},{"lineNumber":103,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":104,"author":{"gitId":"AlexanderTanJunAn"},"content":"`list`"},{"lineNumber":105,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":106,"author":{"gitId":"AlexanderTanJunAn"},"content":"Expected outcome:"},{"lineNumber":107,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":108,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":109,"author":{"gitId":"AlexanderTanJunAn"},"content":"Here are the tasks in your list:"},{"lineNumber":110,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t1. [T][✘] 1"},{"lineNumber":111,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t2. [T][✘] 3"},{"lineNumber":112,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t3. [E][✘] 4 (at: Wednesday)"},{"lineNumber":113,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t4. [D][✘] return book (by: June 6th)"},{"lineNumber":114,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t5. [E][✘] project meeting (at: Sunday)"},{"lineNumber":115,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t6. [T][✘] run"},{"lineNumber":116,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t7. [T][✘] study book"},{"lineNumber":117,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t8. [T][✘] read book"},{"lineNumber":118,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":119,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":120,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":121,"author":{"gitId":"AlexanderTanJunAn"},"content":"### 4. Marking task as done: `done`"},{"lineNumber":122,"author":{"gitId":"AlexanderTanJunAn"},"content":"To signal that task is completed"},{"lineNumber":123,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":124,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Usage"},{"lineNumber":125,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":126,"author":{"gitId":"AlexanderTanJunAn"},"content":"Format: `done [index]`"},{"lineNumber":127,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":128,"author":{"gitId":"AlexanderTanJunAn"},"content":"Example of usage:"},{"lineNumber":129,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":130,"author":{"gitId":"AlexanderTanJunAn"},"content":"`done 4`"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":135,"author":{"gitId":"AlexanderTanJunAn"},"content":"Here are the tasks in your list:"},{"lineNumber":136,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t1. [T][✘] 1"},{"lineNumber":137,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t2. [T][✘] 3"},{"lineNumber":138,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t3. [E][✘] 4 (at: Wednesday)"},{"lineNumber":139,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t4. [D][✓] return book (by: June 6th)"},{"lineNumber":140,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t5. [E][✘] project meeting (at: Sunday)"},{"lineNumber":141,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t6. [T][✘] run"},{"lineNumber":142,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t7. [T][✘] study book"},{"lineNumber":143,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t8. [T][✘] read book`"},{"lineNumber":144,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":145,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":146,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":147,"author":{"gitId":"AlexanderTanJunAn"},"content":"### 5. Searching for specified keyword: `find`"},{"lineNumber":148,"author":{"gitId":"AlexanderTanJunAn"},"content":"Will search through task list for all tasks with specified keyword"},{"lineNumber":149,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":150,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Usage"},{"lineNumber":151,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":152,"author":{"gitId":"AlexanderTanJunAn"},"content":"Format: `find [keyword]`"},{"lineNumber":153,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":154,"author":{"gitId":"AlexanderTanJunAn"},"content":"Example of usage:"},{"lineNumber":155,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":156,"author":{"gitId":"AlexanderTanJunAn"},"content":"`find book`"},{"lineNumber":157,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":158,"author":{"gitId":"AlexanderTanJunAn"},"content":"Expected outcome:"},{"lineNumber":159,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":160,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":161,"author":{"gitId":"AlexanderTanJunAn"},"content":"Here are the matching tasks in your list:"},{"lineNumber":162,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t1. [D][✓] return book (by: June 6th)"},{"lineNumber":163,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t2. [T][✘] study book"},{"lineNumber":164,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t3. [T][✓] read book`"},{"lineNumber":165,"author":{"gitId":"AlexanderTanJunAn"},"content":"```"},{"lineNumber":166,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":167,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":168,"author":{"gitId":"AlexanderTanJunAn"},"content":"### 6. Exiting the program: `bye`"},{"lineNumber":169,"author":{"gitId":"AlexanderTanJunAn"},"content":"Exits the program"},{"lineNumber":170,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":171,"author":{"gitId":"AlexanderTanJunAn"},"content":"Format: `bye`"},{"lineNumber":172,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":173,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":174,"author":{"gitId":"AlexanderTanJunAn"},"content":"## Saving the data"},{"lineNumber":175,"author":{"gitId":"AlexanderTanJunAn"},"content":"Duke automatically saves the data after each and every command, ensuring that data is always up to date. There is no need to save manually."},{"lineNumber":176,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":177,"author":{"gitId":"AlexanderTanJunAn"},"content":"## Editing the data"},{"lineNumber":178,"author":{"gitId":"AlexanderTanJunAn"},"content":"Duke data is automatically saved as a textfile, `Duke.txt` at the location of `Duke.jar`. Advanced users are welcome to directly edit the textfile."},{"lineNumber":179,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":180,"author":{"gitId":"AlexanderTanJunAn"},"content":"## FAQ"},{"lineNumber":181,"author":{"gitId":"AlexanderTanJunAn"},"content":"**Q:** How do I transfer data between computers?"},{"lineNumber":182,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":183,"author":{"gitId":"AlexanderTanJunAn"},"content":"**A:** To transfer data between computers, move the `Duke.txt` file from one computer to the other. Ensure the file is in the same folder as `Duke.jar`."}],"authorContributionMap":{"-":17,"AlexanderTanJunAn":166}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import duke.TaskList.TaskActions;"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import duke.exceptions.EmptyListException;"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import duke.exceptions.TaskDoneException;"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"import duke.parser.Parser;"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"import duke.storage.StorageFile;"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"import duke.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"import duke.task.Event;"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"import duke.task.Task;"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"import duke.task.Todo;"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"import duke.ui.TextUI;"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.ArrayList;"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.List;"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":" * Entry point of the Duke application."},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":" * Initializes the application and starts the interaction with the user."},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":" */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private TextUI ui;"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private Parser parser;"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private StorageFile storage;"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private TaskActions actions;"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"    List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"    List\u003cTask\u003e findTasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static void main(String[] args) {"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"        new Duke().run();"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /** Runs the program until termination */"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void run() {"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"        start();"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"        runCommandLoopUntilExit();"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"        exit();"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /** Sets up the required objects, loads up the data from the storage file, and prints the welcome message. */"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private void start() {"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.ui \u003d new TextUI();"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.parser \u003d new Parser();"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.storage \u003d new StorageFile();"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.actions \u003d new TaskActions();"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"        ui.welcomeMessage();"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"        storage.load(tasks);"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /** Reads the user command and executes it, until exit command is issued */"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private void runCommandLoopUntilExit() {"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int taskCounter \u003d tasks.size();"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"        boolean isOn \u003d true;"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"        while(isOn) {"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"            String line;"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"            line \u003d parser.getUserInput().trim();"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"            int commandIndex \u003d line.indexOf(\u0027 \u0027);"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":"            int timeIndex \u003d line.indexOf(\u0027/\u0027);"},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"            String command \u003d parser.getFirstWord(line);"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if (line.equals(\"bye\")) {"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":"                isOn \u003d false;"},{"lineNumber":67,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } else if (line.equals(\"list\")) {"},{"lineNumber":68,"author":{"gitId":"AlexanderTanJunAn"},"content":"                actions.listTasks(tasks);"},{"lineNumber":69,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } else if (command.equals(\"done\")) {"},{"lineNumber":70,"author":{"gitId":"AlexanderTanJunAn"},"content":"                try {"},{"lineNumber":71,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    int index \u003d parser.getIndexOfTask(line);"},{"lineNumber":72,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    actions.markAsDone(tasks, index);"},{"lineNumber":73,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    storage.writeToFile(tasks);"},{"lineNumber":74,"author":{"gitId":"AlexanderTanJunAn"},"content":"                } catch (EmptyListException e) {"},{"lineNumber":75,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    System.out.println(\"\\tIm afraid the item does not exist!\");"},{"lineNumber":76,"author":{"gitId":"AlexanderTanJunAn"},"content":"                } catch (TaskDoneException e) {"},{"lineNumber":77,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    System.out.println(\"\\tTask has already been completed!\");"},{"lineNumber":78,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }"},{"lineNumber":79,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } else if (command.equals(\"delete\")) {"},{"lineNumber":80,"author":{"gitId":"AlexanderTanJunAn"},"content":"                try {"},{"lineNumber":81,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    int index \u003d parser.getIndexOfTask(line);"},{"lineNumber":82,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    actions.deleteTask(tasks, index);"},{"lineNumber":83,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    taskCounter--;"},{"lineNumber":84,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    storage.writeToFile(tasks);"},{"lineNumber":85,"author":{"gitId":"AlexanderTanJunAn"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":86,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    System.out.println(\"\\tYou can\u0027t delete something that does not exist!\");"},{"lineNumber":87,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } else if (command.equals(\"todo\")) {"},{"lineNumber":89,"author":{"gitId":"AlexanderTanJunAn"},"content":"                try {"},{"lineNumber":90,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    String task \u003d line.substring(commandIndex + 1);"},{"lineNumber":91,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    tasks.add(new Todo(task));"},{"lineNumber":92,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":93,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    ui.printAddedTask(tasks, taskCounter);"},{"lineNumber":94,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    taskCounter++;"},{"lineNumber":95,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    storage.writeToFile(tasks);"},{"lineNumber":96,"author":{"gitId":"AlexanderTanJunAn"},"content":"                } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":97,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    System.out.println(\"\\tAre you sure you have nothing to do? :)\");"},{"lineNumber":98,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }"},{"lineNumber":99,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } else if (command.equals(\"deadline\")) {"},{"lineNumber":100,"author":{"gitId":"AlexanderTanJunAn"},"content":"                try {"},{"lineNumber":101,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    String task \u003d line.substring(commandIndex + 1, timeIndex - 1);"},{"lineNumber":102,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    String time \u003d line.substring(timeIndex + 4);"},{"lineNumber":103,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    tasks.add(new Deadline(task, time));"},{"lineNumber":104,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":105,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    ui.printAddedTask(tasks, taskCounter);"},{"lineNumber":106,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    taskCounter++;"},{"lineNumber":107,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    storage.writeToFile(tasks);"},{"lineNumber":108,"author":{"gitId":"AlexanderTanJunAn"},"content":"                } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":109,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    System.out.println(\"\\tAre you sure you have no deadlines to meet? :)\");"},{"lineNumber":110,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }"},{"lineNumber":111,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } else if (command.equals(\"event\")) {"},{"lineNumber":112,"author":{"gitId":"AlexanderTanJunAn"},"content":"                try {"},{"lineNumber":113,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    String task \u003d line.substring(commandIndex + 1, timeIndex - 1);"},{"lineNumber":114,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    String time \u003d line.substring(timeIndex + 4);"},{"lineNumber":115,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    tasks.add(new Event(task, time));"},{"lineNumber":116,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":117,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    ui.printAddedTask(tasks, taskCounter);"},{"lineNumber":118,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    taskCounter++;"},{"lineNumber":119,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    storage.writeToFile(tasks);"},{"lineNumber":120,"author":{"gitId":"AlexanderTanJunAn"},"content":"                } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":121,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    System.out.println(\"\\tAre you sure you have nothing going on? :)\");"},{"lineNumber":122,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }"},{"lineNumber":123,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } else if (command.equals(\"find\")){"},{"lineNumber":124,"author":{"gitId":"AlexanderTanJunAn"},"content":"                String search \u003d line.substring(commandIndex + 1);"},{"lineNumber":125,"author":{"gitId":"AlexanderTanJunAn"},"content":"                actions.findTask(tasks, findTasks, search);"},{"lineNumber":126,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } else {"},{"lineNumber":127,"author":{"gitId":"AlexanderTanJunAn"},"content":"                System.out.println(\"\\tI am afraid a computer program is not able to understand what you\u0027re saying!\");"},{"lineNumber":128,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":129,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":132,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private void exit() {"},{"lineNumber":133,"author":{"gitId":"AlexanderTanJunAn"},"content":"        storage.writeToFile(tasks);"},{"lineNumber":134,"author":{"gitId":"AlexanderTanJunAn"},"content":"        ui.showExitMessage();"},{"lineNumber":135,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":133,"-":3}},{"path":"src/main/java/duke/TaskList/TaskActions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package duke.TaskList;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import duke.exceptions.EmptyListException;"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import duke.exceptions.TaskDoneException;"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class TaskActions {"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Prints all tasks"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param tasks List of all tasks"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void listTasks(List\u003cTask\u003e tasks) {"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int i \u003d 0;"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.println(\"\\tWow! You have time on your hands! Go do something you enjoy :)\");"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.println(\"\\tHere are the tasks in your list:\");"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"            while (i \u003c tasks.size()) {"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"                int num \u003d i + 1;"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"                System.out.println(\"\\t\" + num + \". \" + tasks.get(i).toString());"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"                i++;"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Marks specific task as done"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param tasks List of all tasks and index of specified task."},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @throws EmptyListException when tasklist is empty"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @throws TaskDoneException when task is already marked as done"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void markAsDone(List\u003cTask\u003e tasks, int index) throws EmptyListException, TaskDoneException {"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"            throw new EmptyListException();"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else if (tasks.get(index).isDone()) {"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"            throw new TaskDoneException();"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"            tasks.get(index).markAsDone();"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.println(\"\\t\\t\" + tasks.get(index).toString());"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Deletes specific task"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param tasks List of all tasks and index of specified task"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void deleteTask(List\u003cTask\u003e tasks, int index) {"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"        tasks.remove(index);"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"\\tDone! One less worry for you :)\");"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Finds and prints all tasks with user specified keyword"},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param tasks List of all tasks"},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param findTasks List of tasks with specified keyword"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param word Keyword to search"},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void findTask(List\u003cTask\u003e tasks, List\u003cTask\u003e findTasks, String word) {"},{"lineNumber":67,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int i \u003d 0;"},{"lineNumber":68,"author":{"gitId":"AlexanderTanJunAn"},"content":"        findTasks.clear();"},{"lineNumber":69,"author":{"gitId":"AlexanderTanJunAn"},"content":"        for (Task t : tasks) {"},{"lineNumber":70,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if (t.getTask().contains(word)) {"},{"lineNumber":71,"author":{"gitId":"AlexanderTanJunAn"},"content":"                findTasks.add(t);"},{"lineNumber":72,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (findTasks.size() \u003d\u003d 0) {"},{"lineNumber":75,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.println(\"\\tNo matching tasks found!\");"},{"lineNumber":76,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else {"},{"lineNumber":77,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.println(\"\\tHere are the matching tasks in your list:\");"},{"lineNumber":78,"author":{"gitId":"AlexanderTanJunAn"},"content":"            while (i \u003c findTasks.size()) {"},{"lineNumber":79,"author":{"gitId":"AlexanderTanJunAn"},"content":"                int num \u003d i + 1;"},{"lineNumber":80,"author":{"gitId":"AlexanderTanJunAn"},"content":"                System.out.println(\"\\t\" + num + \". \" + findTasks.get(i).toString());"},{"lineNumber":81,"author":{"gitId":"AlexanderTanJunAn"},"content":"                i++;"},{"lineNumber":82,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"AlexanderTanJunAn"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":85}},{"path":"src/main/java/duke/exceptions/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":" * Signals that list is empty when user tries to access with index"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":" */"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class EmptyListException extends Exception {"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":7}},{"path":"src/main/java/duke/exceptions/TaskDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":" * Signals that some task is already done when it tried to mark it as done again"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":" */"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class TaskDoneException extends Exception{"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Gets user input"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @return User input"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getUserInput() {"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return in.nextLine();"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Returns the command of user"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param text User input"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @return First word of user input"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getFirstWord(String text) {"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int index \u003d text.indexOf(\u0027 \u0027);"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (index \u003e -1) {"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"            return text.substring(0, index).trim();"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"            return text;"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Returns index of task if delete/done command is inputted"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param text User input"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @return Index of task"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public int getIndexOfTask(String text) {"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String[] parts \u003d text.split(\"(?\u003c\u003d\\\\D)(?\u003d\\\\d)\");"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return Integer.parseInt(parts[1]) - 1;"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":46}},{"path":"src/main/java/duke/storage/StorageFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.io.FileInputStream;"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class StorageFile {"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /** Creates new file */"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private static void createFile() {"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"            File file \u003d new File(\"duke.txt\");"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if (file.createNewFile()) {}"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (IOException e) {"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"            e.printStackTrace();"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Reads contents of file and processes it"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param tasks List of all tasks"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private static void readFile(List\u003cTask\u003e tasks) {"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"            FileInputStream file \u003d new FileInputStream(\"duke.txt\");"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"            Scanner sc \u003d new Scanner(file);"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"                String line \u003d sc.nextLine();"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"                String[] parts \u003d line.split(\"\\\\|\", 0);"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"                String type \u003d parts[0];"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"                String isDone \u003d parts[1];"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"                String task \u003d parts[2];"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"                if (type.equals(\"T\")) {"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    Task t \u003d new Todo(task);"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    tasks.add(t);"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    if (isDone.equals(\"1\")) {"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"                        t.markAsDone();"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    }"},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"                } else if (type.equals(\"D\")) {"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    String time \u003d parts[3];"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    Deadline t \u003d new Deadline(task, time);"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    tasks.add(t);"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    if (isDone.equals(\"1\")) {"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"                        t.markAsDone();"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    }"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"                } else {"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    String time \u003d parts[3];"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    Event t \u003d new Event(task, time);"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    tasks.add(t);"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    if (isDone.equals(\"1\")) {"},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"                        t.markAsDone();"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    }"},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (IOException e) {"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":"            e.printStackTrace();"},{"lineNumber":67,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":70,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Modifies textfile"},{"lineNumber":72,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param tasks List of all tasks"},{"lineNumber":74,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void writeToFile(List\u003cTask\u003e tasks) {"},{"lineNumber":76,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {"},{"lineNumber":77,"author":{"gitId":"AlexanderTanJunAn"},"content":"            File file \u003d new File(\"duke.txt\");"},{"lineNumber":78,"author":{"gitId":"AlexanderTanJunAn"},"content":"            FileWriter writer \u003d new FileWriter(file);"},{"lineNumber":79,"author":{"gitId":"AlexanderTanJunAn"},"content":"            for (Task t : tasks) {"},{"lineNumber":80,"author":{"gitId":"AlexanderTanJunAn"},"content":"                if (t instanceof Todo) {"},{"lineNumber":81,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    writer.write(t.getType() + \"|\" + t.getTextIcon().trim() + \"|\" + t.getTask().trim());"},{"lineNumber":82,"author":{"gitId":"AlexanderTanJunAn"},"content":"                } else {"},{"lineNumber":83,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    writer.write(t.getType() + \"|\" + t.getTextIcon().trim() + \"|\" + t.getTask().trim() + \"|\" + t.getTime().trim());"},{"lineNumber":84,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }"},{"lineNumber":85,"author":{"gitId":"AlexanderTanJunAn"},"content":"                writer.write(\"\\r\\n\");"},{"lineNumber":86,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"AlexanderTanJunAn"},"content":"            writer.close();"},{"lineNumber":88,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (IOException e) {"},{"lineNumber":89,"author":{"gitId":"AlexanderTanJunAn"},"content":"            e.printStackTrace();"},{"lineNumber":90,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":93,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Creates new file if does not exist. Then reads file for saved data"},{"lineNumber":95,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param tasks List of all tasks"},{"lineNumber":97,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void load(List\u003cTask\u003e tasks) {"},{"lineNumber":99,"author":{"gitId":"AlexanderTanJunAn"},"content":"        createFile();"},{"lineNumber":100,"author":{"gitId":"AlexanderTanJunAn"},"content":"        readFile(tasks);"},{"lineNumber":101,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"AlexanderTanJunAn"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":102}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":" * Represents a task with a deadline in the task list"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":" */"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"    protected String by;"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.by \u003d by;"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getTime() { return this.by; }"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getType() { return \"D\"; }"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":" * Represents an event task in the task list"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":" */"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"    protected String time;"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public Event(String description, String time) {"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.time \u003d time;"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getTime() { return this.time; }"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getType() { return \"E\"; }"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":" * Represents a task in the task list"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":" */"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public Task(String description) {"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.description \u003d description;"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getStatusIcon() {"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getTextIcon() { return (isDone ? \"1\" :\" 0\"); }"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void markAsDone() {"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.isDone \u003d true;"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public boolean isDone() { return isDone; }"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getTask() {"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return description;"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getType() { return null; }"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getTime() { return null; }"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getTask();"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":38}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":" * Represents a todo task in the task list"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":" */"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public Todo(String description) {"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getType() { return \"T\"; }"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":19}},{"path":"src/main/java/duke/ui/TextUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class TextUI {"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /** Initial welcome message shown to user upon starting the program */"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void welcomeMessage() {"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"\");"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /** Exit message printed when user types exit command */"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void showExitMessage() {"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"\\tBye fellow coder! Hope to see you again soon!\");"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Confirmation of added task"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param tasks List of all tasks"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param taskCounter Counter that stores the current index of the list"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void printAddedTask(List\u003cTask\u003e tasks, int taskCounter) {"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"\\t\" + tasks.get(taskCounter).toString());"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int counter \u003d taskCounter + 1;"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"Now you have \" + counter + \" tasks in the list.\\n\");"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"todo borrow book"}],"authorContributionMap":{"AlexanderTanJunAn":1}}]
