[{"path":"src/main/java/duke/command/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinNgWK"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"KevinNgWK"},"content":"import duke.task.*;"},{"lineNumber":3,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":4,"author":{"gitId":"KevinNgWK"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"KevinNgWK"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"KevinNgWK"},"content":"import java.util.*;"},{"lineNumber":7,"author":{"gitId":"KevinNgWK"},"content":"import java.io.File;"},{"lineNumber":8,"author":{"gitId":"KevinNgWK"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":9,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"KevinNgWK"},"content":"    private static final String lineSpacing \u003d \"\\t----------------------------------\";"},{"lineNumber":12,"author":{"gitId":"KevinNgWK"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"KevinNgWK"},"content":"    private static final String filePath \u003d \"./src/main/java/duke/data/tasks.txt\";"},{"lineNumber":14,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":22,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":23,"author":{"gitId":"KevinNgWK"},"content":"        initialGreetings();"},{"lineNumber":24,"author":{"gitId":"KevinNgWK"},"content":"        readFileTasks();"},{"lineNumber":25,"author":{"gitId":"KevinNgWK"},"content":"        echo(); // Method contains main while loop"},{"lineNumber":26,"author":{"gitId":"KevinNgWK"},"content":"        finalGreetings();"},{"lineNumber":27,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":29,"author":{"gitId":"KevinNgWK"},"content":"    public static void initialGreetings() {"},{"lineNumber":30,"author":{"gitId":"KevinNgWK"},"content":"        String greetings \u003d \"\\tHello! I\u0027m Duke\\n\" + \"\\tWhat can I do for you?\\n\\n\";"},{"lineNumber":31,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(lineSpacing);"},{"lineNumber":32,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(greetings);"},{"lineNumber":33,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(lineSpacing);"},{"lineNumber":34,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":36,"author":{"gitId":"KevinNgWK"},"content":"    public static void finalGreetings() {"},{"lineNumber":37,"author":{"gitId":"KevinNgWK"},"content":"        String exitStatements \u003d \"\\tBye. Hope to see you again soon!\\n\";"},{"lineNumber":38,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(lineSpacing);"},{"lineNumber":39,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(exitStatements);"},{"lineNumber":40,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(lineSpacing);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":43,"author":{"gitId":"KevinNgWK"},"content":"    public static void readFileTasks() {"},{"lineNumber":44,"author":{"gitId":"KevinNgWK"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"KevinNgWK"},"content":"            File myTasks \u003d new File(filePath);"},{"lineNumber":46,"author":{"gitId":"KevinNgWK"},"content":"            Scanner taskReader \u003d new Scanner(myTasks);"},{"lineNumber":47,"author":{"gitId":"KevinNgWK"},"content":"            while (taskReader.hasNextLine()) {"},{"lineNumber":48,"author":{"gitId":"KevinNgWK"},"content":"                String task \u003d taskReader.nextLine();"},{"lineNumber":49,"author":{"gitId":"KevinNgWK"},"content":"                initialiseTask(task);"},{"lineNumber":50,"author":{"gitId":"KevinNgWK"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"KevinNgWK"},"content":"            taskReader.close();"},{"lineNumber":52,"author":{"gitId":"KevinNgWK"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":53,"author":{"gitId":"KevinNgWK"},"content":"            System.out.println(\"File path was not found! No previous tasks were read\");"},{"lineNumber":54,"author":{"gitId":"KevinNgWK"},"content":"        } catch (DukeExceptions e) {"},{"lineNumber":55,"author":{"gitId":"KevinNgWK"},"content":"            System.out.println(\"Tasks were not formatted properly when writing into file!\");"},{"lineNumber":56,"author":{"gitId":"KevinNgWK"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":59,"author":{"gitId":"KevinNgWK"},"content":"    public static void writeFileTasks() {"},{"lineNumber":60,"author":{"gitId":"KevinNgWK"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"KevinNgWK"},"content":"            FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":62,"author":{"gitId":"KevinNgWK"},"content":"            for (Task task: tasks) {"},{"lineNumber":63,"author":{"gitId":"KevinNgWK"},"content":"                String textToAdd \u003d task.formatTaskToWrite();"},{"lineNumber":64,"author":{"gitId":"KevinNgWK"},"content":"                fw.write(textToAdd + \"\\n\");"},{"lineNumber":65,"author":{"gitId":"KevinNgWK"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"KevinNgWK"},"content":"            fw.close();"},{"lineNumber":67,"author":{"gitId":"KevinNgWK"},"content":"        } catch (IOException e) {"},{"lineNumber":68,"author":{"gitId":"KevinNgWK"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());"},{"lineNumber":69,"author":{"gitId":"KevinNgWK"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":72,"author":{"gitId":"KevinNgWK"},"content":"    public static void initialiseTask(String task) throws DukeExceptions {"},{"lineNumber":73,"author":{"gitId":"KevinNgWK"},"content":"        List\u003cString\u003e taskList \u003d Arrays.asList(task.split(\"\u003cseparator\u003e\"));"},{"lineNumber":74,"author":{"gitId":"KevinNgWK"},"content":"        String taskType \u003d taskList.get(0);"},{"lineNumber":75,"author":{"gitId":"KevinNgWK"},"content":"        switch (taskType) {"},{"lineNumber":76,"author":{"gitId":"KevinNgWK"},"content":"        case \"todo\":"},{"lineNumber":77,"author":{"gitId":"KevinNgWK"},"content":"            if (taskList.size() !\u003d 3) {"},{"lineNumber":78,"author":{"gitId":"KevinNgWK"},"content":"                throw new DukeExceptions();"},{"lineNumber":79,"author":{"gitId":"KevinNgWK"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"KevinNgWK"},"content":"            String todoName \u003d taskList.get(1);"},{"lineNumber":81,"author":{"gitId":"KevinNgWK"},"content":"            boolean todoIsCompleted \u003d Boolean.parseBoolean(taskList.get(2));"},{"lineNumber":82,"author":{"gitId":"KevinNgWK"},"content":"            ToDo newTodo \u003d new ToDo(todoName, taskType);"},{"lineNumber":83,"author":{"gitId":"KevinNgWK"},"content":"            newTodo.setIsCompleted(todoIsCompleted);"},{"lineNumber":84,"author":{"gitId":"KevinNgWK"},"content":"            tasks.add(newTodo);"},{"lineNumber":85,"author":{"gitId":"KevinNgWK"},"content":"            break;"},{"lineNumber":86,"author":{"gitId":"KevinNgWK"},"content":"        case \"deadline\":"},{"lineNumber":87,"author":{"gitId":"KevinNgWK"},"content":"            if (taskList.size() !\u003d 4) {"},{"lineNumber":88,"author":{"gitId":"KevinNgWK"},"content":"                throw new DukeExceptions();"},{"lineNumber":89,"author":{"gitId":"KevinNgWK"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"KevinNgWK"},"content":"            String deadlineName \u003d taskList.get(1);"},{"lineNumber":91,"author":{"gitId":"KevinNgWK"},"content":"            String deadlineTimeConstraint \u003d taskList.get(2);"},{"lineNumber":92,"author":{"gitId":"KevinNgWK"},"content":"            boolean deadlineIsCompleted \u003d Boolean.parseBoolean(taskList.get(3));"},{"lineNumber":93,"author":{"gitId":"KevinNgWK"},"content":"            Deadline newDeadline \u003d new Deadline(deadlineName, taskType, deadlineTimeConstraint);"},{"lineNumber":94,"author":{"gitId":"KevinNgWK"},"content":"            newDeadline.setIsCompleted(deadlineIsCompleted);"},{"lineNumber":95,"author":{"gitId":"KevinNgWK"},"content":"            tasks.add(newDeadline);"},{"lineNumber":96,"author":{"gitId":"KevinNgWK"},"content":"            break;"},{"lineNumber":97,"author":{"gitId":"KevinNgWK"},"content":"        case \"event\":"},{"lineNumber":98,"author":{"gitId":"KevinNgWK"},"content":"            if (taskList.size() !\u003d 4) {"},{"lineNumber":99,"author":{"gitId":"KevinNgWK"},"content":"                throw new DukeExceptions();"},{"lineNumber":100,"author":{"gitId":"KevinNgWK"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"KevinNgWK"},"content":"            String eventName \u003d taskList.get(1);"},{"lineNumber":102,"author":{"gitId":"KevinNgWK"},"content":"            String eventTimeConstraint \u003d taskList.get(2);"},{"lineNumber":103,"author":{"gitId":"KevinNgWK"},"content":"            boolean eventIsCompleted \u003d Boolean.parseBoolean(taskList.get(3));"},{"lineNumber":104,"author":{"gitId":"KevinNgWK"},"content":"            Event newEvent \u003d new Event(eventName, taskType, eventTimeConstraint);"},{"lineNumber":105,"author":{"gitId":"KevinNgWK"},"content":"            newEvent.setIsCompleted(eventIsCompleted);"},{"lineNumber":106,"author":{"gitId":"KevinNgWK"},"content":"            tasks.add(newEvent);"},{"lineNumber":107,"author":{"gitId":"KevinNgWK"},"content":"            break;"},{"lineNumber":108,"author":{"gitId":"KevinNgWK"},"content":"        default:"},{"lineNumber":109,"author":{"gitId":"KevinNgWK"},"content":"            throw new DukeExceptions();"},{"lineNumber":110,"author":{"gitId":"KevinNgWK"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":113,"author":{"gitId":"KevinNgWK"},"content":"    public static void echo() {"},{"lineNumber":114,"author":{"gitId":"KevinNgWK"},"content":"        String line;"},{"lineNumber":115,"author":{"gitId":"KevinNgWK"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":116,"author":{"gitId":"KevinNgWK"},"content":"        line \u003d in.nextLine();"},{"lineNumber":117,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":118,"author":{"gitId":"KevinNgWK"},"content":"        while (!line.equals(\"bye\")) {"},{"lineNumber":119,"author":{"gitId":"KevinNgWK"},"content":"            parseUserCommands(line);"},{"lineNumber":120,"author":{"gitId":"KevinNgWK"},"content":"            writeFileTasks();"},{"lineNumber":121,"author":{"gitId":"KevinNgWK"},"content":"            line \u003d in.nextLine();"},{"lineNumber":122,"author":{"gitId":"KevinNgWK"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":125,"author":{"gitId":"KevinNgWK"},"content":"    public static void parseUserCommands(String line) {"},{"lineNumber":126,"author":{"gitId":"KevinNgWK"},"content":"        if (line.equals(\"\")) {"},{"lineNumber":127,"author":{"gitId":"KevinNgWK"},"content":"            return;"},{"lineNumber":128,"author":{"gitId":"KevinNgWK"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":130,"author":{"gitId":"KevinNgWK"},"content":"        List\u003cString\u003e userCommands \u003d Arrays.asList(line.split(\" \"));"},{"lineNumber":131,"author":{"gitId":"KevinNgWK"},"content":"        if (userCommands.size() \u003c 1) {"},{"lineNumber":132,"author":{"gitId":"KevinNgWK"},"content":"            return;"},{"lineNumber":133,"author":{"gitId":"KevinNgWK"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":135,"author":{"gitId":"KevinNgWK"},"content":"        if (userCommands.get(0).equals(\"list\")) {"},{"lineNumber":136,"author":{"gitId":"KevinNgWK"},"content":"            displayTaskList();"},{"lineNumber":137,"author":{"gitId":"KevinNgWK"},"content":"        } else if (userCommands.get(0).equals(\"done\")) {"},{"lineNumber":138,"author":{"gitId":"KevinNgWK"},"content":"            markCompletedTasks(userCommands.subList(1, userCommands.size()));"},{"lineNumber":139,"author":{"gitId":"KevinNgWK"},"content":"        } else if (userCommands.get(0).equals(\"delete\")) {"},{"lineNumber":140,"author":{"gitId":"KevinNgWK"},"content":"            deleteTask(userCommands.subList(1, userCommands.size()));"},{"lineNumber":141,"author":{"gitId":"KevinNgWK"},"content":"        } else {"},{"lineNumber":142,"author":{"gitId":"KevinNgWK"},"content":"            try {"},{"lineNumber":143,"author":{"gitId":"KevinNgWK"},"content":"                appendNewTask(userCommands);"},{"lineNumber":144,"author":{"gitId":"KevinNgWK"},"content":"            } catch (DukeExceptions e) {"},{"lineNumber":145,"author":{"gitId":"KevinNgWK"},"content":"                System.out.println(\"Invalid instructions detected in the following line: \" + line);"},{"lineNumber":146,"author":{"gitId":"KevinNgWK"},"content":"                System.out.println(\"Clarification on the use of this app can be found ...\");"},{"lineNumber":147,"author":{"gitId":"KevinNgWK"},"content":"                System.out.println(lineSpacing);"},{"lineNumber":148,"author":{"gitId":"KevinNgWK"},"content":"            }"},{"lineNumber":149,"author":{"gitId":"KevinNgWK"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":152,"author":{"gitId":"KevinNgWK"},"content":"    public static void displayTaskList() {"},{"lineNumber":153,"author":{"gitId":"KevinNgWK"},"content":"        int counter \u003d 0;"},{"lineNumber":154,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(lineSpacing);"},{"lineNumber":155,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");"},{"lineNumber":156,"author":{"gitId":"KevinNgWK"},"content":"        while (counter \u003c tasks.size()) {"},{"lineNumber":157,"author":{"gitId":"KevinNgWK"},"content":"            Task task \u003d tasks.get(counter);"},{"lineNumber":158,"author":{"gitId":"KevinNgWK"},"content":"            System.out.print(\"\\t\" + (counter+1) + \".\");"},{"lineNumber":159,"author":{"gitId":"KevinNgWK"},"content":"            task.printTask();"},{"lineNumber":160,"author":{"gitId":"KevinNgWK"},"content":"            counter ++;"},{"lineNumber":161,"author":{"gitId":"KevinNgWK"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(lineSpacing);"},{"lineNumber":163,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":165,"author":{"gitId":"KevinNgWK"},"content":"    public static void markCompletedTasks(List\u003cString\u003e taskIndexes) {"},{"lineNumber":166,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(lineSpacing);"},{"lineNumber":167,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"},{"lineNumber":168,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":169,"author":{"gitId":"KevinNgWK"},"content":"        for (String index: taskIndexes) {"},{"lineNumber":170,"author":{"gitId":"KevinNgWK"},"content":"            int indexInt;"},{"lineNumber":171,"author":{"gitId":"KevinNgWK"},"content":"            try {"},{"lineNumber":172,"author":{"gitId":"KevinNgWK"},"content":"                indexInt \u003d Integer.parseInt(index) - 1;"},{"lineNumber":173,"author":{"gitId":"KevinNgWK"},"content":"                if (indexInt \u003e\u003d tasks.size()){"},{"lineNumber":174,"author":{"gitId":"KevinNgWK"},"content":"                    throw new DukeExceptions();"},{"lineNumber":175,"author":{"gitId":"KevinNgWK"},"content":"                }"},{"lineNumber":176,"author":{"gitId":"KevinNgWK"},"content":"                else {"},{"lineNumber":177,"author":{"gitId":"KevinNgWK"},"content":"                    tasks.get(indexInt).setIsCompleted(true);"},{"lineNumber":178,"author":{"gitId":"KevinNgWK"},"content":"                    System.out.print(\"\\t\");"},{"lineNumber":179,"author":{"gitId":"KevinNgWK"},"content":"                    tasks.get(indexInt).printTask();"},{"lineNumber":180,"author":{"gitId":"KevinNgWK"},"content":"                }"},{"lineNumber":181,"author":{"gitId":"KevinNgWK"},"content":"            } catch (DukeExceptions e) {"},{"lineNumber":182,"author":{"gitId":"KevinNgWK"},"content":"                System.out.println(\"\\tTask number \" + index + \" does not exist\");"},{"lineNumber":183,"author":{"gitId":"KevinNgWK"},"content":"                System.out.println(lineSpacing);"},{"lineNumber":184,"author":{"gitId":"KevinNgWK"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":185,"author":{"gitId":"KevinNgWK"},"content":"                System.out.println(\"\\tInvalid Expression! Must provide task numbers (\" + index + \")\");"},{"lineNumber":186,"author":{"gitId":"KevinNgWK"},"content":"                System.out.println(lineSpacing);"},{"lineNumber":187,"author":{"gitId":"KevinNgWK"},"content":"            }"},{"lineNumber":188,"author":{"gitId":"KevinNgWK"},"content":"        }"},{"lineNumber":189,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(lineSpacing);"},{"lineNumber":190,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":192,"author":{"gitId":"KevinNgWK"},"content":"    public static void appendNewTask(List\u003cString\u003e userCommands) throws DukeExceptions{"},{"lineNumber":193,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(lineSpacing);"},{"lineNumber":194,"author":{"gitId":"KevinNgWK"},"content":"        switch (userCommands.get(0)) {"},{"lineNumber":195,"author":{"gitId":"KevinNgWK"},"content":"        case \"todo\":"},{"lineNumber":196,"author":{"gitId":"KevinNgWK"},"content":"            List\u003cString\u003e taskNameTodo \u003d userCommands.subList(1, userCommands.size());"},{"lineNumber":197,"author":{"gitId":"KevinNgWK"},"content":"            tasks.add(new ToDo("},{"lineNumber":198,"author":{"gitId":"KevinNgWK"},"content":"                    String.join(\" \", taskNameTodo),"},{"lineNumber":199,"author":{"gitId":"KevinNgWK"},"content":"                    userCommands.get(0)"},{"lineNumber":200,"author":{"gitId":"KevinNgWK"},"content":"            ));"},{"lineNumber":201,"author":{"gitId":"KevinNgWK"},"content":"            System.out.println(\"\\tGot it. I\u0027ve added this task: \");"},{"lineNumber":202,"author":{"gitId":"KevinNgWK"},"content":"            break;"},{"lineNumber":203,"author":{"gitId":"KevinNgWK"},"content":"        case \"deadline\":"},{"lineNumber":204,"author":{"gitId":"KevinNgWK"},"content":"            int indexDeadline \u003d userCommands.indexOf(\"/by\");"},{"lineNumber":205,"author":{"gitId":"KevinNgWK"},"content":"            if (indexDeadline \u003d\u003d -1) {"},{"lineNumber":206,"author":{"gitId":"KevinNgWK"},"content":"                throw new DukeExceptions();"},{"lineNumber":207,"author":{"gitId":"KevinNgWK"},"content":"            }"},{"lineNumber":208,"author":{"gitId":"KevinNgWK"},"content":"            List\u003cString\u003e taskNameDeadline \u003d userCommands.subList(1, indexDeadline);"},{"lineNumber":209,"author":{"gitId":"KevinNgWK"},"content":"            List\u003cString\u003e timeConstraintDeadline \u003d userCommands.subList(indexDeadline+1, userCommands.size());"},{"lineNumber":210,"author":{"gitId":"KevinNgWK"},"content":"            tasks.add(new Deadline("},{"lineNumber":211,"author":{"gitId":"KevinNgWK"},"content":"                    String.join(\" \", taskNameDeadline),"},{"lineNumber":212,"author":{"gitId":"KevinNgWK"},"content":"                    userCommands.get(0),"},{"lineNumber":213,"author":{"gitId":"KevinNgWK"},"content":"                    String.join(\" \", timeConstraintDeadline)"},{"lineNumber":214,"author":{"gitId":"KevinNgWK"},"content":"            ));"},{"lineNumber":215,"author":{"gitId":"KevinNgWK"},"content":"            System.out.println(\"\\tGot it. I\u0027ve added this task: \");"},{"lineNumber":216,"author":{"gitId":"KevinNgWK"},"content":"            break;"},{"lineNumber":217,"author":{"gitId":"KevinNgWK"},"content":"        case \"event\":"},{"lineNumber":218,"author":{"gitId":"KevinNgWK"},"content":"            int indexEvent \u003d userCommands.indexOf(\"/at\");"},{"lineNumber":219,"author":{"gitId":"KevinNgWK"},"content":"            if (indexEvent \u003d\u003d -1) {"},{"lineNumber":220,"author":{"gitId":"KevinNgWK"},"content":"                throw new DukeExceptions();"},{"lineNumber":221,"author":{"gitId":"KevinNgWK"},"content":"            }"},{"lineNumber":222,"author":{"gitId":"KevinNgWK"},"content":"            List\u003cString\u003e taskNameEvent \u003d userCommands.subList(1, indexEvent);"},{"lineNumber":223,"author":{"gitId":"KevinNgWK"},"content":"            List\u003cString\u003e timeConstraintEvent \u003d userCommands.subList(indexEvent+1, userCommands.size());"},{"lineNumber":224,"author":{"gitId":"KevinNgWK"},"content":"            tasks.add(new Event("},{"lineNumber":225,"author":{"gitId":"KevinNgWK"},"content":"                    String.join(\" \", taskNameEvent),"},{"lineNumber":226,"author":{"gitId":"KevinNgWK"},"content":"                    userCommands.get(0),"},{"lineNumber":227,"author":{"gitId":"KevinNgWK"},"content":"                    String.join(\" \", timeConstraintEvent)"},{"lineNumber":228,"author":{"gitId":"KevinNgWK"},"content":"            ));"},{"lineNumber":229,"author":{"gitId":"KevinNgWK"},"content":"            System.out.println(\"\\tGot it. I\u0027ve added this task: \");"},{"lineNumber":230,"author":{"gitId":"KevinNgWK"},"content":"            break;"},{"lineNumber":231,"author":{"gitId":"KevinNgWK"},"content":"        default:"},{"lineNumber":232,"author":{"gitId":"KevinNgWK"},"content":"            throw new DukeExceptions();"},{"lineNumber":233,"author":{"gitId":"KevinNgWK"},"content":"        }"},{"lineNumber":234,"author":{"gitId":"KevinNgWK"},"content":"        System.out.print(\"\\t  \");"},{"lineNumber":235,"author":{"gitId":"KevinNgWK"},"content":"        tasks.get(tasks.size()-1).printTask();"},{"lineNumber":236,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(\"\\tNow you have \" + tasks.size() + \" tasks in the list\");"},{"lineNumber":237,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(lineSpacing);"},{"lineNumber":238,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":239,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":240,"author":{"gitId":"KevinNgWK"},"content":"    public static void deleteTask(List\u003cString\u003e taskIndexes) {"},{"lineNumber":241,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(lineSpacing);"},{"lineNumber":242,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");"},{"lineNumber":243,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":244,"author":{"gitId":"KevinNgWK"},"content":"        List\u003cInteger\u003e tasksIndexToDelete \u003d new ArrayList\u003c\u003e();"},{"lineNumber":245,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":246,"author":{"gitId":"KevinNgWK"},"content":"        for (String index: taskIndexes) {"},{"lineNumber":247,"author":{"gitId":"KevinNgWK"},"content":"            int indexInt;"},{"lineNumber":248,"author":{"gitId":"KevinNgWK"},"content":"            try {"},{"lineNumber":249,"author":{"gitId":"KevinNgWK"},"content":"                indexInt \u003d Integer.parseInt(index) - 1;"},{"lineNumber":250,"author":{"gitId":"KevinNgWK"},"content":"                if (indexInt \u003e\u003d tasks.size()){"},{"lineNumber":251,"author":{"gitId":"KevinNgWK"},"content":"                    throw new DukeExceptions();"},{"lineNumber":252,"author":{"gitId":"KevinNgWK"},"content":"                }"},{"lineNumber":253,"author":{"gitId":"KevinNgWK"},"content":"                else {"},{"lineNumber":254,"author":{"gitId":"KevinNgWK"},"content":"                    Task deletedTask \u003d tasks.get(indexInt);"},{"lineNumber":255,"author":{"gitId":"KevinNgWK"},"content":"                    System.out.print(\"\\t\");"},{"lineNumber":256,"author":{"gitId":"KevinNgWK"},"content":"                    tasks.get(indexInt).printTask();"},{"lineNumber":257,"author":{"gitId":"KevinNgWK"},"content":"                    tasksIndexToDelete.add(indexInt);"},{"lineNumber":258,"author":{"gitId":"KevinNgWK"},"content":"                }"},{"lineNumber":259,"author":{"gitId":"KevinNgWK"},"content":"            } catch (DukeExceptions e) {"},{"lineNumber":260,"author":{"gitId":"KevinNgWK"},"content":"                System.out.println(\"\\tTask number \" + index + \" does not exist\");"},{"lineNumber":261,"author":{"gitId":"KevinNgWK"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":262,"author":{"gitId":"KevinNgWK"},"content":"                System.out.println(\"\\tInvalid Expression! Must provide task numbers (\" + index + \")\");"},{"lineNumber":263,"author":{"gitId":"KevinNgWK"},"content":"            }"},{"lineNumber":264,"author":{"gitId":"KevinNgWK"},"content":"        }"},{"lineNumber":265,"author":{"gitId":"KevinNgWK"},"content":"        Collections.sort(tasksIndexToDelete, Collections.reverseOrder());"},{"lineNumber":266,"author":{"gitId":"KevinNgWK"},"content":"        for (Integer index: tasksIndexToDelete) {"},{"lineNumber":267,"author":{"gitId":"KevinNgWK"},"content":"            tasks.remove((int)index);"},{"lineNumber":268,"author":{"gitId":"KevinNgWK"},"content":"        }"},{"lineNumber":269,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(\"\\tNow you have \" + tasks.size() + \" tasks in the list\");"},{"lineNumber":270,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(lineSpacing);"},{"lineNumber":271,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"KevinNgWK":262,"-":10}},{"path":"src/main/java/duke/command/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinNgWK"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"KevinNgWK"},"content":"public class DukeExceptions extends Exception {"},{"lineNumber":3,"author":{"gitId":"KevinNgWK"},"content":"    // Exception when invalid instructions are provided"},{"lineNumber":4,"author":{"gitId":"KevinNgWK"},"content":"}"}],"authorContributionMap":{"KevinNgWK":4}},{"path":"src/main/java/duke/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KevinNgWK"},"content":"todo\u003cseparator\u003eSay Hi to Sheryll\u003cseparator\u003efalse"},{"lineNumber":2,"author":{"gitId":"KevinNgWK"},"content":"event\u003cseparator\u003edrink water\u003cseparator\u003etonight\u003cseparator\u003etrue"},{"lineNumber":3,"author":{"gitId":"KevinNgWK"},"content":"deadline\u003cseparator\u003efinish homework\u003cseparator\u003etonight as well\u003cseparator\u003efalse"}],"authorContributionMap":{"KevinNgWK":3}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinNgWK"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":3,"author":{"gitId":"KevinNgWK"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"KevinNgWK"},"content":"    protected String timeConstraint;"},{"lineNumber":5,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":6,"author":{"gitId":"KevinNgWK"},"content":"    public Deadline(String taskName, String taskType, String timeConstraint) {"},{"lineNumber":7,"author":{"gitId":"KevinNgWK"},"content":"        super(taskName, taskType);"},{"lineNumber":8,"author":{"gitId":"KevinNgWK"},"content":"        this.timeConstraint \u003d timeConstraint;"},{"lineNumber":9,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":11,"author":{"gitId":"KevinNgWK"},"content":"    public String getTimeConstraint() { return timeConstraint; }"},{"lineNumber":12,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":13,"author":{"gitId":"KevinNgWK"},"content":"    public void setTimeConstraint(String timeConstraint) { this.timeConstraint \u003d timeConstraint; }"},{"lineNumber":14,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":15,"author":{"gitId":"KevinNgWK"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"KevinNgWK"},"content":"    public void printTask() {"},{"lineNumber":17,"author":{"gitId":"KevinNgWK"},"content":"        String output;"},{"lineNumber":18,"author":{"gitId":"KevinNgWK"},"content":"        if (isCompleted) {"},{"lineNumber":19,"author":{"gitId":"KevinNgWK"},"content":"            output \u003d \"[D][X] \" + taskName;"},{"lineNumber":20,"author":{"gitId":"KevinNgWK"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"KevinNgWK"},"content":"            output \u003d \"[D][ ] \" + taskName;"},{"lineNumber":22,"author":{"gitId":"KevinNgWK"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"KevinNgWK"},"content":"        output +\u003d \" (by: \" + timeConstraint + \")\";"},{"lineNumber":24,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(output);"},{"lineNumber":25,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":27,"author":{"gitId":"KevinNgWK"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"KevinNgWK"},"content":"    public String formatTaskToWrite() {"},{"lineNumber":29,"author":{"gitId":"KevinNgWK"},"content":"        String formattedTask;"},{"lineNumber":30,"author":{"gitId":"KevinNgWK"},"content":"        formattedTask \u003d String.join("},{"lineNumber":31,"author":{"gitId":"KevinNgWK"},"content":"                \"\u003cseparator\u003e\","},{"lineNumber":32,"author":{"gitId":"KevinNgWK"},"content":"                taskType,"},{"lineNumber":33,"author":{"gitId":"KevinNgWK"},"content":"                taskName,"},{"lineNumber":34,"author":{"gitId":"KevinNgWK"},"content":"                timeConstraint,"},{"lineNumber":35,"author":{"gitId":"KevinNgWK"},"content":"                String.valueOf(isCompleted)"},{"lineNumber":36,"author":{"gitId":"KevinNgWK"},"content":"        );"},{"lineNumber":37,"author":{"gitId":"KevinNgWK"},"content":"        return formattedTask;"},{"lineNumber":38,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"KevinNgWK"},"content":"}"}],"authorContributionMap":{"KevinNgWK":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinNgWK"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":3,"author":{"gitId":"KevinNgWK"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"KevinNgWK"},"content":"    protected String timeConstraint;"},{"lineNumber":5,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":6,"author":{"gitId":"KevinNgWK"},"content":"    public Event(String taskName, String taskType, String timeConstraint) {"},{"lineNumber":7,"author":{"gitId":"KevinNgWK"},"content":"        super(taskName, taskType);"},{"lineNumber":8,"author":{"gitId":"KevinNgWK"},"content":"        this.timeConstraint \u003d timeConstraint;"},{"lineNumber":9,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":11,"author":{"gitId":"KevinNgWK"},"content":"    public String getTimeConstraint() { return timeConstraint; }"},{"lineNumber":12,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":13,"author":{"gitId":"KevinNgWK"},"content":"    public void setTimeConstraint(String timeConstraint) { this.timeConstraint \u003d timeConstraint; }"},{"lineNumber":14,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":15,"author":{"gitId":"KevinNgWK"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"KevinNgWK"},"content":"    public void printTask() {"},{"lineNumber":17,"author":{"gitId":"KevinNgWK"},"content":"        String output;"},{"lineNumber":18,"author":{"gitId":"KevinNgWK"},"content":"        if (isCompleted) {"},{"lineNumber":19,"author":{"gitId":"KevinNgWK"},"content":"            output \u003d \"[E][X] \" + taskName;"},{"lineNumber":20,"author":{"gitId":"KevinNgWK"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"KevinNgWK"},"content":"            output \u003d \"[E][ ] \" + taskName;"},{"lineNumber":22,"author":{"gitId":"KevinNgWK"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"KevinNgWK"},"content":"        output +\u003d \" (at: \" + timeConstraint + \")\";"},{"lineNumber":24,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(output);"},{"lineNumber":25,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":27,"author":{"gitId":"KevinNgWK"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"KevinNgWK"},"content":"    public String formatTaskToWrite() {"},{"lineNumber":29,"author":{"gitId":"KevinNgWK"},"content":"        String formattedTask;"},{"lineNumber":30,"author":{"gitId":"KevinNgWK"},"content":"        formattedTask \u003d String.join("},{"lineNumber":31,"author":{"gitId":"KevinNgWK"},"content":"                \"\u003cseparator\u003e\","},{"lineNumber":32,"author":{"gitId":"KevinNgWK"},"content":"                taskType,"},{"lineNumber":33,"author":{"gitId":"KevinNgWK"},"content":"                taskName,"},{"lineNumber":34,"author":{"gitId":"KevinNgWK"},"content":"                timeConstraint,"},{"lineNumber":35,"author":{"gitId":"KevinNgWK"},"content":"                String.valueOf(isCompleted)"},{"lineNumber":36,"author":{"gitId":"KevinNgWK"},"content":"        );"},{"lineNumber":37,"author":{"gitId":"KevinNgWK"},"content":"        return formattedTask;"},{"lineNumber":38,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"KevinNgWK"},"content":"}"}],"authorContributionMap":{"KevinNgWK":39}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinNgWK"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":3,"author":{"gitId":"KevinNgWK"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"KevinNgWK"},"content":"    protected String taskName;"},{"lineNumber":5,"author":{"gitId":"KevinNgWK"},"content":"    protected String taskType;"},{"lineNumber":6,"author":{"gitId":"KevinNgWK"},"content":"    protected boolean isCompleted;"},{"lineNumber":7,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":8,"author":{"gitId":"KevinNgWK"},"content":"    public Task(String taskName, String taskType) {"},{"lineNumber":9,"author":{"gitId":"KevinNgWK"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":10,"author":{"gitId":"KevinNgWK"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":11,"author":{"gitId":"KevinNgWK"},"content":"        this.isCompleted \u003d false;"},{"lineNumber":12,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":14,"author":{"gitId":"KevinNgWK"},"content":"    public String getTaskName() { return taskName; }"},{"lineNumber":15,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":16,"author":{"gitId":"KevinNgWK"},"content":"    public void setTaskName(String taskName) { this.taskName \u003d taskName; }"},{"lineNumber":17,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":18,"author":{"gitId":"KevinNgWK"},"content":"    public String getTaskType() { return taskType; }"},{"lineNumber":19,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":20,"author":{"gitId":"KevinNgWK"},"content":"    public void setTaskType(String taskType) { this.taskType \u003d taskType; }"},{"lineNumber":21,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":22,"author":{"gitId":"KevinNgWK"},"content":"    public boolean getIsCompleted() { return isCompleted; }"},{"lineNumber":23,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":24,"author":{"gitId":"KevinNgWK"},"content":"    public void setIsCompleted(boolean isCompleted) { this.isCompleted \u003d isCompleted; }"},{"lineNumber":25,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":26,"author":{"gitId":"KevinNgWK"},"content":"    public abstract void printTask();"},{"lineNumber":27,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":28,"author":{"gitId":"KevinNgWK"},"content":"    public abstract String formatTaskToWrite();"},{"lineNumber":29,"author":{"gitId":"KevinNgWK"},"content":"}"}],"authorContributionMap":{"KevinNgWK":29}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinNgWK"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":3,"author":{"gitId":"KevinNgWK"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":5,"author":{"gitId":"KevinNgWK"},"content":"    public ToDo(String taskName, String taskType) {"},{"lineNumber":6,"author":{"gitId":"KevinNgWK"},"content":"        super(taskName, taskType);"},{"lineNumber":7,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":9,"author":{"gitId":"KevinNgWK"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"KevinNgWK"},"content":"    public void printTask() {"},{"lineNumber":11,"author":{"gitId":"KevinNgWK"},"content":"        String output;"},{"lineNumber":12,"author":{"gitId":"KevinNgWK"},"content":"        if (isCompleted) {"},{"lineNumber":13,"author":{"gitId":"KevinNgWK"},"content":"            output \u003d \"[T][X] \" + taskName;"},{"lineNumber":14,"author":{"gitId":"KevinNgWK"},"content":"        } else {"},{"lineNumber":15,"author":{"gitId":"KevinNgWK"},"content":"            output \u003d \"[T][ ] \" + taskName;"},{"lineNumber":16,"author":{"gitId":"KevinNgWK"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"KevinNgWK"},"content":"        System.out.println(output);"},{"lineNumber":18,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"KevinNgWK"},"content":""},{"lineNumber":20,"author":{"gitId":"KevinNgWK"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"KevinNgWK"},"content":"    public String formatTaskToWrite() {"},{"lineNumber":22,"author":{"gitId":"KevinNgWK"},"content":"        String formattedTask;"},{"lineNumber":23,"author":{"gitId":"KevinNgWK"},"content":"        formattedTask \u003d String.join("},{"lineNumber":24,"author":{"gitId":"KevinNgWK"},"content":"                \"\u003cseparator\u003e\","},{"lineNumber":25,"author":{"gitId":"KevinNgWK"},"content":"                taskType,"},{"lineNumber":26,"author":{"gitId":"KevinNgWK"},"content":"                taskName,"},{"lineNumber":27,"author":{"gitId":"KevinNgWK"},"content":"                String.valueOf(isCompleted)"},{"lineNumber":28,"author":{"gitId":"KevinNgWK"},"content":"        );"},{"lineNumber":29,"author":{"gitId":"KevinNgWK"},"content":"        return formattedTask;"},{"lineNumber":30,"author":{"gitId":"KevinNgWK"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"KevinNgWK"},"content":"}"},{"lineNumber":32,"author":{"gitId":"KevinNgWK"},"content":""}],"authorContributionMap":{"KevinNgWK":32}}]
