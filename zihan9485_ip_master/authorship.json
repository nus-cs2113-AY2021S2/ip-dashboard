[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"zihan9485"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"zihan9485"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":11,"author":{"gitId":"zihan9485"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"zihan9485"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"zihan9485"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"zihan9485"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"zihan9485"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"zihan9485":9,"-":17}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihan9485"},"content":"public class Deadline extends Task{"},{"lineNumber":2,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":3,"author":{"gitId":"zihan9485"},"content":"    protected String by;"},{"lineNumber":4,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":5,"author":{"gitId":"zihan9485"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"zihan9485"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"zihan9485"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"zihan9485"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":10,"author":{"gitId":"zihan9485"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"zihan9485"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"zihan9485"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":13,"author":{"gitId":"zihan9485"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"zihan9485"},"content":"}"}],"authorContributionMap":{"zihan9485":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihan9485"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":2,"author":{"gitId":"zihan9485"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":12,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":13,"author":{"gitId":"zihan9485"},"content":"        //Level 0: Greet"},{"lineNumber":14,"author":{"gitId":"zihan9485"},"content":"        lineBreak();"},{"lineNumber":15,"author":{"gitId":"zihan9485"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":16,"author":{"gitId":"zihan9485"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":17,"author":{"gitId":"zihan9485"},"content":"        lineBreak();"},{"lineNumber":18,"author":{"gitId":"zihan9485"},"content":"        //TODO: Refactor and Extract Method"},{"lineNumber":19,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":20,"author":{"gitId":"zihan9485"},"content":"        //Level 3: Mark as Done"},{"lineNumber":21,"author":{"gitId":"zihan9485"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":22,"author":{"gitId":"zihan9485"},"content":"        String userInput;"},{"lineNumber":23,"author":{"gitId":"zihan9485"},"content":"        Task[] taskList \u003d new Task[100]; //TODO: Remove magic literals, refactor and extract constant"},{"lineNumber":24,"author":{"gitId":"zihan9485"},"content":"        int listCount \u003d 0;"},{"lineNumber":25,"author":{"gitId":"zihan9485"},"content":"        //TODO: Edit to coincide with SLAP abstraction"},{"lineNumber":26,"author":{"gitId":"zihan9485"},"content":"        while (true){"},{"lineNumber":27,"author":{"gitId":"zihan9485"},"content":"            userInput \u003d in.nextLine();"},{"lineNumber":28,"author":{"gitId":"zihan9485"},"content":"            if (userInput.equals(\"list\")){"},{"lineNumber":29,"author":{"gitId":"zihan9485"},"content":"                lineBreak();"},{"lineNumber":30,"author":{"gitId":"zihan9485"},"content":"                System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":31,"author":{"gitId":"zihan9485"},"content":"                for (int i \u003d 0; i \u003c listCount; i++){"},{"lineNumber":32,"author":{"gitId":"zihan9485"},"content":"                    Task currentTask \u003d taskList[i];"},{"lineNumber":33,"author":{"gitId":"zihan9485"},"content":"                    System.out.println(i+1 + \".\" + currentTask.toString());"},{"lineNumber":34,"author":{"gitId":"zihan9485"},"content":"                }"},{"lineNumber":35,"author":{"gitId":"zihan9485"},"content":"                lineBreak();"},{"lineNumber":36,"author":{"gitId":"zihan9485"},"content":"                continue;"},{"lineNumber":37,"author":{"gitId":"zihan9485"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":39,"author":{"gitId":"zihan9485"},"content":"            if (userInput.startsWith(\"done\")) {"},{"lineNumber":40,"author":{"gitId":"zihan9485"},"content":"                String[] words \u003d userInput.split(\" \");"},{"lineNumber":41,"author":{"gitId":"zihan9485"},"content":"                Task currentTask \u003d taskList[Integer.parseInt(words[1]) - 1];"},{"lineNumber":42,"author":{"gitId":"zihan9485"},"content":"                currentTask.markAsDone();"},{"lineNumber":43,"author":{"gitId":"zihan9485"},"content":"                lineBreak();"},{"lineNumber":44,"author":{"gitId":"zihan9485"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":45,"author":{"gitId":"zihan9485"},"content":"                System.out.println(\"  \" + currentTask.toString());"},{"lineNumber":46,"author":{"gitId":"zihan9485"},"content":"                lineBreak();"},{"lineNumber":47,"author":{"gitId":"zihan9485"},"content":"                continue;"},{"lineNumber":48,"author":{"gitId":"zihan9485"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":50,"author":{"gitId":"zihan9485"},"content":"            if (userInput.equals(\"bye\")) {"},{"lineNumber":51,"author":{"gitId":"zihan9485"},"content":"                break;"},{"lineNumber":52,"author":{"gitId":"zihan9485"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":54,"author":{"gitId":"zihan9485"},"content":"            lineBreak();"},{"lineNumber":55,"author":{"gitId":"zihan9485"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":56,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":57,"author":{"gitId":"zihan9485"},"content":"            if (userInput.startsWith(\"todo\")) {"},{"lineNumber":58,"author":{"gitId":"zihan9485"},"content":"                taskList[listCount++] \u003d new Todo(userInput.substring(5));"},{"lineNumber":59,"author":{"gitId":"zihan9485"},"content":"            } else if (userInput.startsWith(\"deadline\")) {"},{"lineNumber":60,"author":{"gitId":"zihan9485"},"content":"                int dividerPosition \u003d userInput.indexOf(\"/by\");"},{"lineNumber":61,"author":{"gitId":"zihan9485"},"content":"                String by \u003d userInput.substring(dividerPosition + 4);"},{"lineNumber":62,"author":{"gitId":"zihan9485"},"content":"                taskList[listCount++] \u003d new Deadline(userInput.substring(9, dividerPosition - 1), by);"},{"lineNumber":63,"author":{"gitId":"zihan9485"},"content":"            } else if (userInput.startsWith(\"event\")) {"},{"lineNumber":64,"author":{"gitId":"zihan9485"},"content":"                int dividerPosition \u003d userInput.indexOf(\"/at\");"},{"lineNumber":65,"author":{"gitId":"zihan9485"},"content":"                String by \u003d userInput.substring(dividerPosition + 4);"},{"lineNumber":66,"author":{"gitId":"zihan9485"},"content":"                taskList[listCount++] \u003d new Event(userInput.substring(6, dividerPosition - 1), by);"},{"lineNumber":67,"author":{"gitId":"zihan9485"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":69,"author":{"gitId":"zihan9485"},"content":"            System.out.println(\"  \" + taskList[listCount - 1].toString());"},{"lineNumber":70,"author":{"gitId":"zihan9485"},"content":"            System.out.println(\"Now you have \" + listCount + \" tasks in the list.\");"},{"lineNumber":71,"author":{"gitId":"zihan9485"},"content":"            lineBreak();"},{"lineNumber":72,"author":{"gitId":"zihan9485"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":74,"author":{"gitId":"zihan9485"},"content":"        lineBreak();"},{"lineNumber":75,"author":{"gitId":"zihan9485"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":76,"author":{"gitId":"zihan9485"},"content":"        lineBreak();"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":79,"author":{"gitId":"zihan9485"},"content":"    public static void lineBreak() {"},{"lineNumber":80,"author":{"gitId":"zihan9485"},"content":"        final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";"},{"lineNumber":81,"author":{"gitId":"zihan9485"},"content":"        System.out.println(HORIZONTAL_LINE);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zihan9485":72,"-":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihan9485"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":3,"author":{"gitId":"zihan9485"},"content":"    protected String at;"},{"lineNumber":4,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":5,"author":{"gitId":"zihan9485"},"content":"    public Event(String description, String at) {"},{"lineNumber":6,"author":{"gitId":"zihan9485"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"zihan9485"},"content":"        this.at \u003d at;"},{"lineNumber":8,"author":{"gitId":"zihan9485"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":10,"author":{"gitId":"zihan9485"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"zihan9485"},"content":"    public String toString(){"},{"lineNumber":12,"author":{"gitId":"zihan9485"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":13,"author":{"gitId":"zihan9485"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"zihan9485"},"content":"}"}],"authorContributionMap":{"zihan9485":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihan9485"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"zihan9485"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"zihan9485"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":5,"author":{"gitId":"zihan9485"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"zihan9485"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"zihan9485"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"zihan9485"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":10,"author":{"gitId":"zihan9485"},"content":"    public String getStatusIcon() {"},{"lineNumber":11,"author":{"gitId":"zihan9485"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":12,"author":{"gitId":"zihan9485"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":14,"author":{"gitId":"zihan9485"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"zihan9485"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"zihan9485"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;"},{"lineNumber":17,"author":{"gitId":"zihan9485"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":19,"author":{"gitId":"zihan9485"},"content":"    public void markAsDone() {"},{"lineNumber":20,"author":{"gitId":"zihan9485"},"content":"        isDone \u003d true;"},{"lineNumber":21,"author":{"gitId":"zihan9485"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"zihan9485"},"content":"}"}],"authorContributionMap":{"zihan9485":22}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zihan9485"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":3,"author":{"gitId":"zihan9485"},"content":"    public Todo(String description) {"},{"lineNumber":4,"author":{"gitId":"zihan9485"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"zihan9485"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"zihan9485"},"content":""},{"lineNumber":7,"author":{"gitId":"zihan9485"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"zihan9485"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"zihan9485"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"zihan9485"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"zihan9485"},"content":"}"}],"authorContributionMap":{"zihan9485":11}}]
