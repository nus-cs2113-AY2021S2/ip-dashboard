[{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BlubberMonster"},"content":"T |  read book"}],"authorContributionMap":{"BlubberMonster":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BlubberMonster"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":3,"author":{"gitId":"BlubberMonster"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"BlubberMonster"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"BlubberMonster"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"BlubberMonster"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"BlubberMonster"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":8,"author":{"gitId":"BlubberMonster"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"BlubberMonster"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"BlubberMonster"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitId":"BlubberMonster"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":12,"author":{"gitId":"BlubberMonster"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"BlubberMonster"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":16,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":17,"author":{"gitId":"BlubberMonster"},"content":"    static final String LINE_DIVIDER \u003d \"____________________________________________________________\";"},{"lineNumber":18,"author":{"gitId":"BlubberMonster"},"content":"    static String by;"},{"lineNumber":19,"author":{"gitId":"BlubberMonster"},"content":"    static String at;"},{"lineNumber":20,"author":{"gitId":"BlubberMonster"},"content":"    static ArrayList \u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"BlubberMonster"},"content":"    static ArrayList \u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();"},{"lineNumber":22,"author":{"gitId":"BlubberMonster"},"content":"    static int numberOfTasks \u003d 0;"},{"lineNumber":23,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":24,"author":{"gitId":"BlubberMonster"},"content":"    public static void printDone(int description) {"},{"lineNumber":25,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"This task has been done. Good job!\");"},{"lineNumber":26,"author":{"gitId":"BlubberMonster"},"content":"        tasks.get(description).printDescription();"},{"lineNumber":27,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"\\n\" + LINE_DIVIDER);"},{"lineNumber":28,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":30,"author":{"gitId":"BlubberMonster"},"content":"    public static void printDeleted() {"},{"lineNumber":31,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"The task has been deleted.\");"},{"lineNumber":32,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":33,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":35,"author":{"gitId":"BlubberMonster"},"content":"    public static void printTotalTasks() {"},{"lineNumber":36,"author":{"gitId":"BlubberMonster"},"content":"        if (numberOfTasks \u003e\u003d 2) {"},{"lineNumber":37,"author":{"gitId":"BlubberMonster"},"content":"            System.out.println(numberOfTasks + \"  tasks left in the list\");"},{"lineNumber":38,"author":{"gitId":"BlubberMonster"},"content":"        } else if (numberOfTasks \u003d\u003d 1) {"},{"lineNumber":39,"author":{"gitId":"BlubberMonster"},"content":"            System.out.println(\"Only 1 task in the list\");"},{"lineNumber":40,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":42,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":44,"author":{"gitId":"BlubberMonster"},"content":"    public static void executeTodo(String command) {"},{"lineNumber":45,"author":{"gitId":"BlubberMonster"},"content":"        tasks.add(new Todo(command.replaceFirst(\"todo\", \"\")));"},{"lineNumber":46,"author":{"gitId":"BlubberMonster"},"content":"        Todo.printTodoDescription();"},{"lineNumber":47,"author":{"gitId":"BlubberMonster"},"content":"        keywords.add(\"T\");"},{"lineNumber":48,"author":{"gitId":"BlubberMonster"},"content":"        tasks.get(numberOfTasks++).printDescription();"},{"lineNumber":49,"author":{"gitId":"BlubberMonster"},"content":"        System.out.print(\"\\n\");"},{"lineNumber":50,"author":{"gitId":"BlubberMonster"},"content":"        printTotalTasks();"},{"lineNumber":51,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":52,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":54,"author":{"gitId":"BlubberMonster"},"content":"    public static void executeDeadline(String command) {"},{"lineNumber":55,"author":{"gitId":"BlubberMonster"},"content":"        try {"},{"lineNumber":56,"author":{"gitId":"BlubberMonster"},"content":"            by \u003d command.substring(command.indexOf(\"/\") + 3);"},{"lineNumber":57,"author":{"gitId":"BlubberMonster"},"content":"            command \u003d command.substring(8, command.indexOf(\"/\"));"},{"lineNumber":58,"author":{"gitId":"BlubberMonster"},"content":"            tasks.add(new Deadline(command, by));"},{"lineNumber":59,"author":{"gitId":"BlubberMonster"},"content":"            Deadline.printDeadlineDescription();"},{"lineNumber":60,"author":{"gitId":"BlubberMonster"},"content":"            keywords.add(\"D\");"},{"lineNumber":61,"author":{"gitId":"BlubberMonster"},"content":"            tasks.get(numberOfTasks++).printDescription();"},{"lineNumber":62,"author":{"gitId":"BlubberMonster"},"content":"            System.out.println(\"(by:\" + by + \")\");"},{"lineNumber":63,"author":{"gitId":"BlubberMonster"},"content":"            printTotalTasks();"},{"lineNumber":64,"author":{"gitId":"BlubberMonster"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":65,"author":{"gitId":"BlubberMonster"},"content":"            DukeException.deadlineIsEmpty();"},{"lineNumber":66,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":69,"author":{"gitId":"BlubberMonster"},"content":"    public static void executeEvent(String command) {"},{"lineNumber":70,"author":{"gitId":"BlubberMonster"},"content":"        try {"},{"lineNumber":71,"author":{"gitId":"BlubberMonster"},"content":"            at \u003d command.substring(command.indexOf(\"/\") + 3);"},{"lineNumber":72,"author":{"gitId":"BlubberMonster"},"content":"            command \u003d command.substring(5, command.indexOf(\"/\"));"},{"lineNumber":73,"author":{"gitId":"BlubberMonster"},"content":"            tasks.add(new Event(command, at));"},{"lineNumber":74,"author":{"gitId":"BlubberMonster"},"content":"            Event.printEventDescription();"},{"lineNumber":75,"author":{"gitId":"BlubberMonster"},"content":"            keywords.add(\"E\");"},{"lineNumber":76,"author":{"gitId":"BlubberMonster"},"content":"            tasks.get(numberOfTasks++).printDescription();"},{"lineNumber":77,"author":{"gitId":"BlubberMonster"},"content":"            System.out.println(\"(at:\" + at + \")\");"},{"lineNumber":78,"author":{"gitId":"BlubberMonster"},"content":"            printTotalTasks();"},{"lineNumber":79,"author":{"gitId":"BlubberMonster"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":80,"author":{"gitId":"BlubberMonster"},"content":"            DukeException.eventIsEmpty();"},{"lineNumber":81,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":84,"author":{"gitId":"BlubberMonster"},"content":"    public static void executeDone(String command) {"},{"lineNumber":85,"author":{"gitId":"BlubberMonster"},"content":"        String[] words;"},{"lineNumber":86,"author":{"gitId":"BlubberMonster"},"content":"        words \u003d command.split(\" \");"},{"lineNumber":87,"author":{"gitId":"BlubberMonster"},"content":"        tasks.get(Integer.parseInt(words[1]) - 1).markAsDone();"},{"lineNumber":88,"author":{"gitId":"BlubberMonster"},"content":"        printDone(Integer.parseInt(words[1]) - 1);"},{"lineNumber":89,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":91,"author":{"gitId":"BlubberMonster"},"content":"    public static void executeDelete(String command) {"},{"lineNumber":92,"author":{"gitId":"BlubberMonster"},"content":"        String[] words;"},{"lineNumber":93,"author":{"gitId":"BlubberMonster"},"content":"        words \u003d command.split(\" \");"},{"lineNumber":94,"author":{"gitId":"BlubberMonster"},"content":"        tasks.remove(Integer.parseInt(words[1]) - 1);"},{"lineNumber":95,"author":{"gitId":"BlubberMonster"},"content":"        printDeleted();"},{"lineNumber":96,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":98,"author":{"gitId":"BlubberMonster"},"content":"    public static void listTasks() throws IndexOutOfBoundsException {"},{"lineNumber":99,"author":{"gitId":"BlubberMonster"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":100,"author":{"gitId":"BlubberMonster"},"content":"            throw new IndexOutOfBoundsException();"},{"lineNumber":101,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"BlubberMonster"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); ++i) {"},{"lineNumber":103,"author":{"gitId":"BlubberMonster"},"content":"            System.out.print(i + \". \");"},{"lineNumber":104,"author":{"gitId":"BlubberMonster"},"content":"            switch (keywords.get(i - 1)) {"},{"lineNumber":105,"author":{"gitId":"BlubberMonster"},"content":"            case \"T\":"},{"lineNumber":106,"author":{"gitId":"BlubberMonster"},"content":"                System.out.print(\"[T]\");"},{"lineNumber":107,"author":{"gitId":"BlubberMonster"},"content":"                tasks.get(i - 1).printDescription();"},{"lineNumber":108,"author":{"gitId":"BlubberMonster"},"content":"                System.out.print(\"\\n\");"},{"lineNumber":109,"author":{"gitId":"BlubberMonster"},"content":"                break;"},{"lineNumber":110,"author":{"gitId":"BlubberMonster"},"content":"            case \"D\":"},{"lineNumber":111,"author":{"gitId":"BlubberMonster"},"content":"                System.out.print(\"[D]\");"},{"lineNumber":112,"author":{"gitId":"BlubberMonster"},"content":"                tasks.get(i - 1).printDescription();"},{"lineNumber":113,"author":{"gitId":"BlubberMonster"},"content":"                System.out.println(\"(by:\" + by + \")\");"},{"lineNumber":114,"author":{"gitId":"BlubberMonster"},"content":"                break;"},{"lineNumber":115,"author":{"gitId":"BlubberMonster"},"content":"            case \"E\":"},{"lineNumber":116,"author":{"gitId":"BlubberMonster"},"content":"                System.out.print(\"[E]\");"},{"lineNumber":117,"author":{"gitId":"BlubberMonster"},"content":"                tasks.get(i - 1).printDescription();"},{"lineNumber":118,"author":{"gitId":"BlubberMonster"},"content":"                System.out.println(\"(at:\" + at + \")\");"},{"lineNumber":119,"author":{"gitId":"BlubberMonster"},"content":"                break;"},{"lineNumber":120,"author":{"gitId":"BlubberMonster"},"content":"            }"},{"lineNumber":121,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":123,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":125,"author":{"gitId":"BlubberMonster"},"content":"    public static void saveData() {"},{"lineNumber":126,"author":{"gitId":"BlubberMonster"},"content":"        try {"},{"lineNumber":127,"author":{"gitId":"BlubberMonster"},"content":"            File path \u003d new File(\"duke.txt\");"},{"lineNumber":128,"author":{"gitId":"BlubberMonster"},"content":"            FileWriter fw \u003d new FileWriter(path);"},{"lineNumber":129,"author":{"gitId":"BlubberMonster"},"content":"            for (int i \u003d 0; i \u003c numberOfTasks; ++i) {"},{"lineNumber":130,"author":{"gitId":"BlubberMonster"},"content":"                fw.write(keywords.get(i) + \" | \" + tasks.get(i).getDescription());"},{"lineNumber":131,"author":{"gitId":"BlubberMonster"},"content":"                if (keywords.get(i) \u003d\u003d \"E\") {"},{"lineNumber":132,"author":{"gitId":"BlubberMonster"},"content":"                    fw.write(\" | \" + at);"},{"lineNumber":133,"author":{"gitId":"BlubberMonster"},"content":"                } else if (keywords.get(i) \u003d\u003d \"D\") {"},{"lineNumber":134,"author":{"gitId":"BlubberMonster"},"content":"                    fw.write(\" | \" + by);"},{"lineNumber":135,"author":{"gitId":"BlubberMonster"},"content":"                }"},{"lineNumber":136,"author":{"gitId":"BlubberMonster"},"content":"                fw.write(System.lineSeparator());"},{"lineNumber":137,"author":{"gitId":"BlubberMonster"},"content":"            }"},{"lineNumber":138,"author":{"gitId":"BlubberMonster"},"content":"            fw.close();"},{"lineNumber":139,"author":{"gitId":"BlubberMonster"},"content":"        } catch (IOException e) {"},{"lineNumber":140,"author":{"gitId":"BlubberMonster"},"content":"            System.out.println(\"Error occurred in saving\");"},{"lineNumber":141,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":144,"author":{"gitId":"BlubberMonster"},"content":"    public static void loadData() throws FileNotFoundException, NoSuchElementException {"},{"lineNumber":145,"author":{"gitId":"BlubberMonster"},"content":"        String command;"},{"lineNumber":146,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"Loading data....\");"},{"lineNumber":147,"author":{"gitId":"BlubberMonster"},"content":"        File f \u003d new File(\"duke.txt\");"},{"lineNumber":148,"author":{"gitId":"BlubberMonster"},"content":"        Scanner input \u003d new Scanner(f);"},{"lineNumber":149,"author":{"gitId":"BlubberMonster"},"content":"        if (!input.hasNextLine()) {"},{"lineNumber":150,"author":{"gitId":"BlubberMonster"},"content":"            return;"},{"lineNumber":151,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"BlubberMonster"},"content":"        command \u003d input.nextLine();"},{"lineNumber":153,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":154,"author":{"gitId":"BlubberMonster"},"content":"        while (!command.equals(\"bye\")) {"},{"lineNumber":155,"author":{"gitId":"BlubberMonster"},"content":"            // makes the input case-insensitive"},{"lineNumber":156,"author":{"gitId":"BlubberMonster"},"content":"            command \u003d command.toLowerCase();"},{"lineNumber":157,"author":{"gitId":"BlubberMonster"},"content":"            if (command.equals(\"list\")) {"},{"lineNumber":158,"author":{"gitId":"BlubberMonster"},"content":"                try {"},{"lineNumber":159,"author":{"gitId":"BlubberMonster"},"content":"                    listTasks();"},{"lineNumber":160,"author":{"gitId":"BlubberMonster"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":161,"author":{"gitId":"BlubberMonster"},"content":"                    System.out.println(\"List is empty!\");"},{"lineNumber":162,"author":{"gitId":"BlubberMonster"},"content":"                }"},{"lineNumber":163,"author":{"gitId":"BlubberMonster"},"content":"            } else if (command.contains(\"done\")) {"},{"lineNumber":164,"author":{"gitId":"BlubberMonster"},"content":"                executeDone(command);"},{"lineNumber":165,"author":{"gitId":"BlubberMonster"},"content":"            } else if (command.contains(\"delete\")) {"},{"lineNumber":166,"author":{"gitId":"BlubberMonster"},"content":"                executeDelete(command);"},{"lineNumber":167,"author":{"gitId":"BlubberMonster"},"content":"            }"},{"lineNumber":168,"author":{"gitId":"BlubberMonster"},"content":"            else if (command.contains(\"todo\")) {"},{"lineNumber":169,"author":{"gitId":"BlubberMonster"},"content":"                if (!DukeException.checkTodo(command)) {"},{"lineNumber":170,"author":{"gitId":"BlubberMonster"},"content":"                    executeTodo(command);"},{"lineNumber":171,"author":{"gitId":"BlubberMonster"},"content":"                }"},{"lineNumber":172,"author":{"gitId":"BlubberMonster"},"content":"            } else if (command.contains(\"deadline\")) {"},{"lineNumber":173,"author":{"gitId":"BlubberMonster"},"content":"                executeDeadline(command);"},{"lineNumber":174,"author":{"gitId":"BlubberMonster"},"content":"            } else if (command.contains(\"event\")) {"},{"lineNumber":175,"author":{"gitId":"BlubberMonster"},"content":"                executeEvent(command);"},{"lineNumber":176,"author":{"gitId":"BlubberMonster"},"content":"            } else {"},{"lineNumber":177,"author":{"gitId":"BlubberMonster"},"content":"                DukeException.commandIsInvalid();"},{"lineNumber":178,"author":{"gitId":"BlubberMonster"},"content":"            }"},{"lineNumber":179,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":180,"author":{"gitId":"BlubberMonster"},"content":"            try {"},{"lineNumber":181,"author":{"gitId":"BlubberMonster"},"content":"                command \u003d input.nextLine();"},{"lineNumber":182,"author":{"gitId":"BlubberMonster"},"content":"            } catch (NoSuchElementException e) {"},{"lineNumber":183,"author":{"gitId":"BlubberMonster"},"content":"                break;"},{"lineNumber":184,"author":{"gitId":"BlubberMonster"},"content":"            }"},{"lineNumber":185,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":188,"author":{"gitId":"BlubberMonster"},"content":"    public static void processCommands() {"},{"lineNumber":189,"author":{"gitId":"BlubberMonster"},"content":"        String command;"},{"lineNumber":190,"author":{"gitId":"BlubberMonster"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":191,"author":{"gitId":"BlubberMonster"},"content":"        if (!in.hasNextLine()) {"},{"lineNumber":192,"author":{"gitId":"BlubberMonster"},"content":"            return;"},{"lineNumber":193,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":194,"author":{"gitId":"BlubberMonster"},"content":"        command \u003d in.nextLine();"},{"lineNumber":195,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":196,"author":{"gitId":"BlubberMonster"},"content":"        while (!command.equals(\"bye\")) {"},{"lineNumber":197,"author":{"gitId":"BlubberMonster"},"content":"            // makes the input case-insensitive"},{"lineNumber":198,"author":{"gitId":"BlubberMonster"},"content":"            command \u003d command.toLowerCase();"},{"lineNumber":199,"author":{"gitId":"BlubberMonster"},"content":"            if (command.equals(\"list\")) {"},{"lineNumber":200,"author":{"gitId":"BlubberMonster"},"content":"                try {"},{"lineNumber":201,"author":{"gitId":"BlubberMonster"},"content":"                    listTasks();"},{"lineNumber":202,"author":{"gitId":"BlubberMonster"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":203,"author":{"gitId":"BlubberMonster"},"content":"                    System.out.println(\"List is empty!\");"},{"lineNumber":204,"author":{"gitId":"BlubberMonster"},"content":"                }"},{"lineNumber":205,"author":{"gitId":"BlubberMonster"},"content":"            } else if (command.contains(\"done\")) {"},{"lineNumber":206,"author":{"gitId":"BlubberMonster"},"content":"                executeDone(command);"},{"lineNumber":207,"author":{"gitId":"BlubberMonster"},"content":"            } else if (command.contains(\"delete\")) {"},{"lineNumber":208,"author":{"gitId":"BlubberMonster"},"content":"                executeDelete(command);"},{"lineNumber":209,"author":{"gitId":"BlubberMonster"},"content":"            }"},{"lineNumber":210,"author":{"gitId":"BlubberMonster"},"content":"            else if (command.contains(\"todo\")) {"},{"lineNumber":211,"author":{"gitId":"BlubberMonster"},"content":"                if (!DukeException.checkTodo(command)) {"},{"lineNumber":212,"author":{"gitId":"BlubberMonster"},"content":"                    executeTodo(command);"},{"lineNumber":213,"author":{"gitId":"BlubberMonster"},"content":"                }"},{"lineNumber":214,"author":{"gitId":"BlubberMonster"},"content":"            } else if (command.contains(\"deadline\")) {"},{"lineNumber":215,"author":{"gitId":"BlubberMonster"},"content":"                executeDeadline(command);"},{"lineNumber":216,"author":{"gitId":"BlubberMonster"},"content":"            } else if (command.contains(\"event\")) {"},{"lineNumber":217,"author":{"gitId":"BlubberMonster"},"content":"                executeEvent(command);"},{"lineNumber":218,"author":{"gitId":"BlubberMonster"},"content":"            } else {"},{"lineNumber":219,"author":{"gitId":"BlubberMonster"},"content":"                DukeException.commandIsInvalid();"},{"lineNumber":220,"author":{"gitId":"BlubberMonster"},"content":"            }"},{"lineNumber":221,"author":{"gitId":"BlubberMonster"},"content":"            try {"},{"lineNumber":222,"author":{"gitId":"BlubberMonster"},"content":"                command \u003d in.nextLine();"},{"lineNumber":223,"author":{"gitId":"BlubberMonster"},"content":"            } catch (NoSuchElementException e) {"},{"lineNumber":224,"author":{"gitId":"BlubberMonster"},"content":"                break;"},{"lineNumber":225,"author":{"gitId":"BlubberMonster"},"content":"            }"},{"lineNumber":226,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":227,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":229,"author":{"gitId":"BlubberMonster"},"content":"    public static void main(String[] args) {"},{"lineNumber":230,"author":{"gitId":"BlubberMonster"},"content":"        UserInterface.printHello();"},{"lineNumber":231,"author":{"gitId":"BlubberMonster"},"content":"        try {"},{"lineNumber":232,"author":{"gitId":"BlubberMonster"},"content":"            loadData();"},{"lineNumber":233,"author":{"gitId":"BlubberMonster"},"content":"        } catch (NoSuchElementException  | FileNotFoundException e) {"},{"lineNumber":234,"author":{"gitId":"BlubberMonster"},"content":"            System.out.println(\"Error in loading\");"},{"lineNumber":235,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":236,"author":{"gitId":"BlubberMonster"},"content":"        processCommands();"},{"lineNumber":237,"author":{"gitId":"BlubberMonster"},"content":"        saveData();"},{"lineNumber":238,"author":{"gitId":"BlubberMonster"},"content":"        UserInterface.printBye();"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}"},{"lineNumber":241,"author":{"gitId":"BlubberMonster"},"content":""}],"authorContributionMap":{"BlubberMonster":238,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BlubberMonster"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":3,"author":{"gitId":"BlubberMonster"},"content":"public class DukeException {"},{"lineNumber":4,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":5,"author":{"gitId":"BlubberMonster"},"content":"    public static boolean checkTodo(String command) {"},{"lineNumber":6,"author":{"gitId":"BlubberMonster"},"content":"        boolean checkIfEmpty \u003d false;"},{"lineNumber":7,"author":{"gitId":"BlubberMonster"},"content":"        if (command.length() \u003d\u003d 4) {"},{"lineNumber":8,"author":{"gitId":"BlubberMonster"},"content":"            System.out.println(\"Woopies! The description of a todo cannot be empty.\");"},{"lineNumber":9,"author":{"gitId":"BlubberMonster"},"content":"            checkIfEmpty \u003d true;"},{"lineNumber":10,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":11,"author":{"gitId":"BlubberMonster"},"content":"        return checkIfEmpty;"},{"lineNumber":12,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":14,"author":{"gitId":"BlubberMonster"},"content":"    public static void eventIsEmpty() {"},{"lineNumber":15,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"Woopsies! The description of an event cannot be empty.\");"},{"lineNumber":16,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":18,"author":{"gitId":"BlubberMonster"},"content":"    public static void deadlineIsEmpty() {"},{"lineNumber":19,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"Hey! The deadline is empty!!\");"},{"lineNumber":20,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":22,"author":{"gitId":"BlubberMonster"},"content":"    public static void commandIsInvalid() {"},{"lineNumber":23,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"Invalid command! Please try again.\");"},{"lineNumber":24,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":26,"author":{"gitId":"BlubberMonster"},"content":"    public static void listIsEmpty() {"},{"lineNumber":27,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"Please enter a task!\");"},{"lineNumber":28,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"BlubberMonster"},"content":"}"}],"authorContributionMap":{"BlubberMonster":29}},{"path":"src/main/java/duke/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BlubberMonster"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":3,"author":{"gitId":"BlubberMonster"},"content":"public class UserInterface {"},{"lineNumber":4,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":5,"author":{"gitId":"BlubberMonster"},"content":"    static final String LINE_DIVIDER \u003d \"____________________________________________________________\";"},{"lineNumber":6,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":7,"author":{"gitId":"BlubberMonster"},"content":"    public static void printBye() {"},{"lineNumber":8,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":9,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":10,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":12,"author":{"gitId":"BlubberMonster"},"content":"    public static void printHello() {"},{"lineNumber":13,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"Hi! I\u0027m Duke (:\");"},{"lineNumber":14,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"What can I do for you today?\");"},{"lineNumber":15,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":16,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"BlubberMonster"},"content":"}"}],"authorContributionMap":{"BlubberMonster":17}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BlubberMonster"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":3,"author":{"gitId":"BlubberMonster"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":5,"author":{"gitId":"BlubberMonster"},"content":"    protected String by;"},{"lineNumber":6,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":7,"author":{"gitId":"BlubberMonster"},"content":"    public Deadline(String description, String by){"},{"lineNumber":8,"author":{"gitId":"BlubberMonster"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"BlubberMonster"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":12,"author":{"gitId":"BlubberMonster"},"content":"    public static void printDeadlineDescription() {"},{"lineNumber":13,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"Gotcha! I\u0027ve added this task:\");"},{"lineNumber":14,"author":{"gitId":"BlubberMonster"},"content":"        System.out.print(\"[D]\");"},{"lineNumber":15,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"BlubberMonster"},"content":"}"}],"authorContributionMap":{"BlubberMonster":16}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BlubberMonster"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":3,"author":{"gitId":"BlubberMonster"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":5,"author":{"gitId":"BlubberMonster"},"content":"    String by;"},{"lineNumber":6,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":7,"author":{"gitId":"BlubberMonster"},"content":"    public Event(String description, String by) {"},{"lineNumber":8,"author":{"gitId":"BlubberMonster"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"BlubberMonster"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":12,"author":{"gitId":"BlubberMonster"},"content":"    public static void printEventDescription() {"},{"lineNumber":13,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"Gotcha! I\u0027ve added this task:\");"},{"lineNumber":14,"author":{"gitId":"BlubberMonster"},"content":"        System.out.print(\"[E]\");"},{"lineNumber":15,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"BlubberMonster"},"content":"}"}],"authorContributionMap":{"BlubberMonster":16}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BlubberMonster"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":3,"author":{"gitId":"BlubberMonster"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":5,"author":{"gitId":"BlubberMonster"},"content":"    protected Boolean isDone;"},{"lineNumber":6,"author":{"gitId":"BlubberMonster"},"content":"    protected String description;"},{"lineNumber":7,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":8,"author":{"gitId":"BlubberMonster"},"content":"    public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"BlubberMonster"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"BlubberMonster"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":13,"author":{"gitId":"BlubberMonster"},"content":"    public String getDescription() {"},{"lineNumber":14,"author":{"gitId":"BlubberMonster"},"content":"        return description;"},{"lineNumber":15,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":17,"author":{"gitId":"BlubberMonster"},"content":"    public void printStatus() {"},{"lineNumber":18,"author":{"gitId":"BlubberMonster"},"content":"        if (isDone) {"},{"lineNumber":19,"author":{"gitId":"BlubberMonster"},"content":"            System.out.print(\"[X]\");"},{"lineNumber":20,"author":{"gitId":"BlubberMonster"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"BlubberMonster"},"content":"            System.out.print(\"[ ]\");"},{"lineNumber":22,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":25,"author":{"gitId":"BlubberMonster"},"content":"    public void printDescription() {"},{"lineNumber":26,"author":{"gitId":"BlubberMonster"},"content":"        printStatus();"},{"lineNumber":27,"author":{"gitId":"BlubberMonster"},"content":"        System.out.print(description);"},{"lineNumber":28,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":30,"author":{"gitId":"BlubberMonster"},"content":"    public void markAsDone() {"},{"lineNumber":31,"author":{"gitId":"BlubberMonster"},"content":"        this.isDone \u003d true;"},{"lineNumber":32,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":34,"author":{"gitId":"BlubberMonster"},"content":"}"},{"lineNumber":35,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":36,"author":{"gitId":"BlubberMonster"},"content":""}],"authorContributionMap":{"BlubberMonster":36}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BlubberMonster"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":3,"author":{"gitId":"BlubberMonster"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":5,"author":{"gitId":"BlubberMonster"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"BlubberMonster"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":9,"author":{"gitId":"BlubberMonster"},"content":"    public static void printTodoDescription() {"},{"lineNumber":10,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"Gotcha! I\u0027ve added this task:\");"},{"lineNumber":11,"author":{"gitId":"BlubberMonster"},"content":"        System.out.print(\"[T]\");"},{"lineNumber":12,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":14,"author":{"gitId":"BlubberMonster"},"content":"}"},{"lineNumber":15,"author":{"gitId":"BlubberMonster"},"content":""}],"authorContributionMap":{"BlubberMonster":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BlubberMonster"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"BlubberMonster"},"content":"event eat lunch with friends /at nus"},{"lineNumber":3,"author":{"gitId":"BlubberMonster"},"content":"list"},{"lineNumber":4,"author":{"gitId":"BlubberMonster"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"BlubberMonster"},"content":"list"},{"lineNumber":6,"author":{"gitId":"BlubberMonster"},"content":"delete 2"},{"lineNumber":7,"author":{"gitId":"BlubberMonster"},"content":"list"},{"lineNumber":8,"author":{"gitId":"BlubberMonster"},"content":"abracadabra"},{"lineNumber":9,"author":{"gitId":"BlubberMonster"},"content":"bye"}],"authorContributionMap":{"BlubberMonster":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"BlubberMonster"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"BlubberMonster":1,"-":20}}]
