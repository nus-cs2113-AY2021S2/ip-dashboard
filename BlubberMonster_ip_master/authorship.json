[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BlubberMonster"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":3,"author":{"gitId":"BlubberMonster"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"BlubberMonster"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"BlubberMonster"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"BlubberMonster"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"BlubberMonster"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":11,"author":{"gitId":"BlubberMonster"},"content":"    static final String LINE_DIVIDER \u003d \"____________________________________________________________\";"},{"lineNumber":12,"author":{"gitId":"BlubberMonster"},"content":"    static String by;"},{"lineNumber":13,"author":{"gitId":"BlubberMonster"},"content":"    static String at;"},{"lineNumber":14,"author":{"gitId":"BlubberMonster"},"content":"    static Task[] tasks \u003d new Task[100];"},{"lineNumber":15,"author":{"gitId":"BlubberMonster"},"content":"    static String[] keywords \u003d new String[100];"},{"lineNumber":16,"author":{"gitId":"BlubberMonster"},"content":"    static int numberOfTasks \u003d 0;"},{"lineNumber":17,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":18,"author":{"gitId":"BlubberMonster"},"content":"    public static void printDone(int description) {"},{"lineNumber":19,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":20,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"This task has been done. Good job!\");"},{"lineNumber":21,"author":{"gitId":"BlubberMonster"},"content":"        tasks[description].printDescription();"},{"lineNumber":22,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"\\n\" + LINE_DIVIDER);"},{"lineNumber":23,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":25,"author":{"gitId":"BlubberMonster"},"content":"    public static void printTotalTasks() {"},{"lineNumber":26,"author":{"gitId":"BlubberMonster"},"content":"        if (numberOfTasks \u003e\u003d 2) {"},{"lineNumber":27,"author":{"gitId":"BlubberMonster"},"content":"            System.out.println(numberOfTasks + \" tasks left in the list\");"},{"lineNumber":28,"author":{"gitId":"BlubberMonster"},"content":"        } else if (numberOfTasks \u003d\u003d 1) {"},{"lineNumber":29,"author":{"gitId":"BlubberMonster"},"content":"            System.out.println(\"Only 1 task in the list\");"},{"lineNumber":30,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":33,"author":{"gitId":"BlubberMonster"},"content":"    public static void executeTodo(String command) {"},{"lineNumber":34,"author":{"gitId":"BlubberMonster"},"content":"        tasks[numberOfTasks] \u003d new Todo(command.replaceFirst(\"todo\", \"\"));"},{"lineNumber":35,"author":{"gitId":"BlubberMonster"},"content":"        Todo.printTodoDescription();"},{"lineNumber":36,"author":{"gitId":"BlubberMonster"},"content":"        keywords[numberOfTasks] \u003d \"T\";"},{"lineNumber":37,"author":{"gitId":"BlubberMonster"},"content":"        tasks[numberOfTasks++].printDescription();"},{"lineNumber":38,"author":{"gitId":"BlubberMonster"},"content":"        System.out.print(\"\\n\");"},{"lineNumber":39,"author":{"gitId":"BlubberMonster"},"content":"        printTotalTasks();"},{"lineNumber":40,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":42,"author":{"gitId":"BlubberMonster"},"content":"    public static void executeDeadline(String command) {"},{"lineNumber":43,"author":{"gitId":"BlubberMonster"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"BlubberMonster"},"content":"            by \u003d command.substring(command.indexOf(\"/\") + 3);"},{"lineNumber":45,"author":{"gitId":"BlubberMonster"},"content":"            command \u003d command.substring(8, command.indexOf(\"/\"));"},{"lineNumber":46,"author":{"gitId":"BlubberMonster"},"content":"            tasks[numberOfTasks] \u003d new Deadline(command, by);"},{"lineNumber":47,"author":{"gitId":"BlubberMonster"},"content":"            Deadline.printDeadlineDescription();"},{"lineNumber":48,"author":{"gitId":"BlubberMonster"},"content":"            keywords[numberOfTasks] \u003d \"D\";"},{"lineNumber":49,"author":{"gitId":"BlubberMonster"},"content":"            tasks[numberOfTasks++].printDescription();"},{"lineNumber":50,"author":{"gitId":"BlubberMonster"},"content":"            System.out.println(\"(by:\" + by + \")\");"},{"lineNumber":51,"author":{"gitId":"BlubberMonster"},"content":"            printTotalTasks();"},{"lineNumber":52,"author":{"gitId":"BlubberMonster"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":53,"author":{"gitId":"BlubberMonster"},"content":"            DukeException.deadlineIsEmpty();"},{"lineNumber":54,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":57,"author":{"gitId":"BlubberMonster"},"content":"    public static void executeEvent(String command) {"},{"lineNumber":58,"author":{"gitId":"BlubberMonster"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"BlubberMonster"},"content":"            at \u003d command.substring(command.indexOf(\"/\") + 3);"},{"lineNumber":60,"author":{"gitId":"BlubberMonster"},"content":"            command \u003d command.substring(5, command.indexOf(\"/\"));"},{"lineNumber":61,"author":{"gitId":"BlubberMonster"},"content":"            tasks[numberOfTasks] \u003d new Event(command, at);"},{"lineNumber":62,"author":{"gitId":"BlubberMonster"},"content":"            Event.printEventDescription();"},{"lineNumber":63,"author":{"gitId":"BlubberMonster"},"content":"            keywords[numberOfTasks] \u003d \"E\";"},{"lineNumber":64,"author":{"gitId":"BlubberMonster"},"content":"            tasks[numberOfTasks++].printDescription();"},{"lineNumber":65,"author":{"gitId":"BlubberMonster"},"content":"            System.out.println(\"(at:\" + at + \")\");"},{"lineNumber":66,"author":{"gitId":"BlubberMonster"},"content":"            printTotalTasks();"},{"lineNumber":67,"author":{"gitId":"BlubberMonster"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":68,"author":{"gitId":"BlubberMonster"},"content":"            DukeException.eventIsEmpty();"},{"lineNumber":69,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":72,"author":{"gitId":"BlubberMonster"},"content":"    public static void executeDone(String command) {"},{"lineNumber":73,"author":{"gitId":"BlubberMonster"},"content":"        String[] words;"},{"lineNumber":74,"author":{"gitId":"BlubberMonster"},"content":"        words \u003d command.split(\" \");"},{"lineNumber":75,"author":{"gitId":"BlubberMonster"},"content":"        tasks[Integer.parseInt(words[1]) - 1].markAsDone();"},{"lineNumber":76,"author":{"gitId":"BlubberMonster"},"content":"        printDone(Integer.parseInt(words[1]) - 1);"},{"lineNumber":77,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":79,"author":{"gitId":"BlubberMonster"},"content":"    public static void listTasks() throws ArrayIndexOutOfBoundsException {"},{"lineNumber":80,"author":{"gitId":"BlubberMonster"},"content":"        if (numberOfTasks \u003d\u003d 0) {"},{"lineNumber":81,"author":{"gitId":"BlubberMonster"},"content":"            throw new ArrayIndexOutOfBoundsException();"},{"lineNumber":82,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"BlubberMonster"},"content":"        for (int i \u003d 1; i \u003c\u003d numberOfTasks; ++i) {"},{"lineNumber":84,"author":{"gitId":"BlubberMonster"},"content":"            System.out.print(i + \".\");"},{"lineNumber":85,"author":{"gitId":"BlubberMonster"},"content":"            switch (keywords[i - 1]) {"},{"lineNumber":86,"author":{"gitId":"BlubberMonster"},"content":"            case \"T\":"},{"lineNumber":87,"author":{"gitId":"BlubberMonster"},"content":"                System.out.print(\"[T]\");"},{"lineNumber":88,"author":{"gitId":"BlubberMonster"},"content":"                tasks[i - 1].printDescription();"},{"lineNumber":89,"author":{"gitId":"BlubberMonster"},"content":"                System.out.print(\"\\n\");"},{"lineNumber":90,"author":{"gitId":"BlubberMonster"},"content":"                break;"},{"lineNumber":91,"author":{"gitId":"BlubberMonster"},"content":"            case \"D\":"},{"lineNumber":92,"author":{"gitId":"BlubberMonster"},"content":"                System.out.print(\"[D]\");"},{"lineNumber":93,"author":{"gitId":"BlubberMonster"},"content":"                tasks[i - 1].printDescription();"},{"lineNumber":94,"author":{"gitId":"BlubberMonster"},"content":"                System.out.println(\"(by:\" + by + \")\");"},{"lineNumber":95,"author":{"gitId":"BlubberMonster"},"content":"                break;"},{"lineNumber":96,"author":{"gitId":"BlubberMonster"},"content":"            case \"E\":"},{"lineNumber":97,"author":{"gitId":"BlubberMonster"},"content":"                System.out.print(\"[E]\");"},{"lineNumber":98,"author":{"gitId":"BlubberMonster"},"content":"                tasks[i - 1].printDescription();"},{"lineNumber":99,"author":{"gitId":"BlubberMonster"},"content":"                System.out.println(\"(at:\" + at + \")\");"},{"lineNumber":100,"author":{"gitId":"BlubberMonster"},"content":"                break;"},{"lineNumber":101,"author":{"gitId":"BlubberMonster"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":105,"author":{"gitId":"BlubberMonster"},"content":"    public static void main(String[] args) {"},{"lineNumber":106,"author":{"gitId":"BlubberMonster"},"content":"        String command;"},{"lineNumber":107,"author":{"gitId":"BlubberMonster"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":108,"author":{"gitId":"BlubberMonster"},"content":"        UserInterface.printHello();"},{"lineNumber":109,"author":{"gitId":"BlubberMonster"},"content":"        command \u003d in.nextLine();"},{"lineNumber":110,"author":{"gitId":"BlubberMonster"},"content":"        do {"},{"lineNumber":111,"author":{"gitId":"BlubberMonster"},"content":"            // makes the input case-insensitive"},{"lineNumber":112,"author":{"gitId":"BlubberMonster"},"content":"            command \u003d command.toLowerCase();"},{"lineNumber":113,"author":{"gitId":"BlubberMonster"},"content":"            if (command.equals(\"list\")) {"},{"lineNumber":114,"author":{"gitId":"BlubberMonster"},"content":"                try {"},{"lineNumber":115,"author":{"gitId":"BlubberMonster"},"content":"                    listTasks();"},{"lineNumber":116,"author":{"gitId":"BlubberMonster"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":117,"author":{"gitId":"BlubberMonster"},"content":"                    DukeException.listIsEmpty();"},{"lineNumber":118,"author":{"gitId":"BlubberMonster"},"content":"                }"},{"lineNumber":119,"author":{"gitId":"BlubberMonster"},"content":"            } else if (command.contains(\"done\")) {"},{"lineNumber":120,"author":{"gitId":"BlubberMonster"},"content":"                executeDone(command);"},{"lineNumber":121,"author":{"gitId":"BlubberMonster"},"content":"            } else if (command.contains(\"todo\")) {"},{"lineNumber":122,"author":{"gitId":"BlubberMonster"},"content":"                if (!DukeException.checkTodo(command)) {"},{"lineNumber":123,"author":{"gitId":"BlubberMonster"},"content":"                    executeTodo(command);"},{"lineNumber":124,"author":{"gitId":"BlubberMonster"},"content":"                }"},{"lineNumber":125,"author":{"gitId":"BlubberMonster"},"content":"            } else if (command.contains(\"deadline\")) {"},{"lineNumber":126,"author":{"gitId":"BlubberMonster"},"content":"                executeDeadline(command);"},{"lineNumber":127,"author":{"gitId":"BlubberMonster"},"content":"            } else if (command.contains(\"event\")) {"},{"lineNumber":128,"author":{"gitId":"BlubberMonster"},"content":"                executeEvent(command);"},{"lineNumber":129,"author":{"gitId":"BlubberMonster"},"content":"            } else {"},{"lineNumber":130,"author":{"gitId":"BlubberMonster"},"content":"                DukeException.commandIsInvalid();"},{"lineNumber":131,"author":{"gitId":"BlubberMonster"},"content":"            }"},{"lineNumber":132,"author":{"gitId":"BlubberMonster"},"content":"            command \u003d in.nextLine();"},{"lineNumber":133,"author":{"gitId":"BlubberMonster"},"content":"        } while(!command.equals(\"bye\"));"},{"lineNumber":134,"author":{"gitId":"BlubberMonster"},"content":"        UserInterface.printBye();"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}"},{"lineNumber":137,"author":{"gitId":"BlubberMonster"},"content":""}],"authorContributionMap":{"BlubberMonster":134,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BlubberMonster"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":3,"author":{"gitId":"BlubberMonster"},"content":"public class DukeException {"},{"lineNumber":4,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":5,"author":{"gitId":"BlubberMonster"},"content":"    public static boolean checkTodo(String command) {"},{"lineNumber":6,"author":{"gitId":"BlubberMonster"},"content":"        boolean checkIfEmpty \u003d false;"},{"lineNumber":7,"author":{"gitId":"BlubberMonster"},"content":"        if (command.length() \u003d\u003d 4) {"},{"lineNumber":8,"author":{"gitId":"BlubberMonster"},"content":"            System.out.println(\"Woopies! The description of a todo cannot be empty.\");"},{"lineNumber":9,"author":{"gitId":"BlubberMonster"},"content":"            checkIfEmpty \u003d true;"},{"lineNumber":10,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":11,"author":{"gitId":"BlubberMonster"},"content":"        return checkIfEmpty;"},{"lineNumber":12,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":14,"author":{"gitId":"BlubberMonster"},"content":"    public static void eventIsEmpty() {"},{"lineNumber":15,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"Woopsies! The description of an event cannot be empty.\");"},{"lineNumber":16,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":18,"author":{"gitId":"BlubberMonster"},"content":"    public static void deadlineIsEmpty() {"},{"lineNumber":19,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"Hey! The deadline is empty!!\");"},{"lineNumber":20,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":22,"author":{"gitId":"BlubberMonster"},"content":"    public static void commandIsInvalid() {"},{"lineNumber":23,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"Invalid command! Please try again.\");"},{"lineNumber":24,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":26,"author":{"gitId":"BlubberMonster"},"content":"    public static void listIsEmpty() {"},{"lineNumber":27,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"Please enter a task!\");"},{"lineNumber":28,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"BlubberMonster"},"content":"}"}],"authorContributionMap":{"BlubberMonster":29}},{"path":"src/main/java/duke/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BlubberMonster"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":3,"author":{"gitId":"BlubberMonster"},"content":"public class UserInterface {"},{"lineNumber":4,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":5,"author":{"gitId":"BlubberMonster"},"content":"    static final String LINE_DIVIDER \u003d \"____________________________________________________________\";"},{"lineNumber":6,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":7,"author":{"gitId":"BlubberMonster"},"content":"    public static void printBye() {"},{"lineNumber":8,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":9,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");"},{"lineNumber":10,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":11,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":13,"author":{"gitId":"BlubberMonster"},"content":"    public static void printHello() {"},{"lineNumber":14,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":15,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"    Hi! I\u0027m Duke (:\");"},{"lineNumber":16,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"    What can I do for you today?\");"},{"lineNumber":17,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(LINE_DIVIDER);"},{"lineNumber":18,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"BlubberMonster"},"content":"}"}],"authorContributionMap":{"BlubberMonster":19}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BlubberMonster"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":3,"author":{"gitId":"BlubberMonster"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":5,"author":{"gitId":"BlubberMonster"},"content":"    protected String by;"},{"lineNumber":6,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":7,"author":{"gitId":"BlubberMonster"},"content":"    public Deadline(String description, String by){"},{"lineNumber":8,"author":{"gitId":"BlubberMonster"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"BlubberMonster"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":12,"author":{"gitId":"BlubberMonster"},"content":"    public static void printDeadlineDescription() {"},{"lineNumber":13,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"Gotcha! I\u0027ve added this task:\");"},{"lineNumber":14,"author":{"gitId":"BlubberMonster"},"content":"        System.out.print(\"[D]\");"},{"lineNumber":15,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"BlubberMonster"},"content":"}"}],"authorContributionMap":{"BlubberMonster":16}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BlubberMonster"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":3,"author":{"gitId":"BlubberMonster"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":5,"author":{"gitId":"BlubberMonster"},"content":"    String by;"},{"lineNumber":6,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":7,"author":{"gitId":"BlubberMonster"},"content":"    public Event(String description, String by) {"},{"lineNumber":8,"author":{"gitId":"BlubberMonster"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"BlubberMonster"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":12,"author":{"gitId":"BlubberMonster"},"content":"    public static void printEventDescription() {"},{"lineNumber":13,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"Gotcha! I\u0027ve added this task:\");"},{"lineNumber":14,"author":{"gitId":"BlubberMonster"},"content":"        System.out.print(\"[E]\");"},{"lineNumber":15,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"BlubberMonster"},"content":"}"}],"authorContributionMap":{"BlubberMonster":16}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BlubberMonster"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":3,"author":{"gitId":"BlubberMonster"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":5,"author":{"gitId":"BlubberMonster"},"content":"    protected Boolean isDone;"},{"lineNumber":6,"author":{"gitId":"BlubberMonster"},"content":"    protected String description;"},{"lineNumber":7,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":8,"author":{"gitId":"BlubberMonster"},"content":"    public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"BlubberMonster"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"BlubberMonster"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":13,"author":{"gitId":"BlubberMonster"},"content":"    public void printStatus() {"},{"lineNumber":14,"author":{"gitId":"BlubberMonster"},"content":"        if (isDone) {"},{"lineNumber":15,"author":{"gitId":"BlubberMonster"},"content":"            System.out.print(\"[X]\");"},{"lineNumber":16,"author":{"gitId":"BlubberMonster"},"content":"        } else {"},{"lineNumber":17,"author":{"gitId":"BlubberMonster"},"content":"            System.out.print(\"[ ]\");"},{"lineNumber":18,"author":{"gitId":"BlubberMonster"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":21,"author":{"gitId":"BlubberMonster"},"content":"    public void printDescription() {"},{"lineNumber":22,"author":{"gitId":"BlubberMonster"},"content":"        printStatus();"},{"lineNumber":23,"author":{"gitId":"BlubberMonster"},"content":"        System.out.print(description);"},{"lineNumber":24,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":26,"author":{"gitId":"BlubberMonster"},"content":"    public void markAsDone() {"},{"lineNumber":27,"author":{"gitId":"BlubberMonster"},"content":"        this.isDone \u003d true;"},{"lineNumber":28,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":30,"author":{"gitId":"BlubberMonster"},"content":"}"},{"lineNumber":31,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":32,"author":{"gitId":"BlubberMonster"},"content":""}],"authorContributionMap":{"BlubberMonster":32}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BlubberMonster"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":3,"author":{"gitId":"BlubberMonster"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":5,"author":{"gitId":"BlubberMonster"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"BlubberMonster"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":9,"author":{"gitId":"BlubberMonster"},"content":"    public static void printTodoDescription() {"},{"lineNumber":10,"author":{"gitId":"BlubberMonster"},"content":"        System.out.println(\"Gotcha! I\u0027ve added this task:\");"},{"lineNumber":11,"author":{"gitId":"BlubberMonster"},"content":"        System.out.print(\"[T]\");"},{"lineNumber":12,"author":{"gitId":"BlubberMonster"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"BlubberMonster"},"content":""},{"lineNumber":14,"author":{"gitId":"BlubberMonster"},"content":"}"},{"lineNumber":15,"author":{"gitId":"BlubberMonster"},"content":""}],"authorContributionMap":{"BlubberMonster":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BlubberMonster"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"BlubberMonster"},"content":"event eat lunch with friends /at nus"}],"authorContributionMap":{"BlubberMonster":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"BlubberMonster"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"BlubberMonster":1,"-":20}}]
