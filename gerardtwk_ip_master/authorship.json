[{"path":"saveFile.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"T | 1 | hello"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"D | 1 | deadline | 8pm"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"E | 1 | event | 10pm"}],"authorContributionMap":{"gerardtwk":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"    private String by;"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"        this.by \u003d by;"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"    public String getSaveString() {"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"        return \"D | \" + super.getSaveString() + \" | \" + this.by;"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by);"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"gerardtwk":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"import java.io.FileWriter;"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"    private static final String SAVE_FILE_PATH \u003d \"saveFile.txt\";"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"    private static final File SAVE_FILE \u003d new File(SAVE_FILE_PATH);"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\";"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"    private static final ArrayList\u003cTask\u003e STORED_TASKS \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"        loadDataFromFile();"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"        welcomeMsg();"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"        String command;"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"        do {"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"            command \u003d getCommandFromUser();"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"            handleCommand(command);"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"        } while (!command.equals(\"bye\"));"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"        SCANNER.close();"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"    public static void loadDataFromFile() {"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"            Scanner saveFileScanner \u003d new Scanner(SAVE_FILE);"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"            while (saveFileScanner.hasNextLine()) {"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"                String[] taskInfo \u003d saveFileScanner.nextLine().split(\" \\\\| \");"},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":"                Task currentTask;"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"                if (taskInfo[0].equals(\"T\")) {"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"                    currentTask \u003d new Todo(taskInfo[2]);"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"                    if (taskInfo[1].equals(\"1\")) {"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"                        currentTask.markAsDone();"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"                    }"},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":"                } else if (taskInfo[0].equals(\"D\")) {"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"                    currentTask \u003d new Deadline(taskInfo[2], taskInfo[3]);"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"                    if (taskInfo[1].equals(\"1\")) {"},{"lineNumber":40,"author":{"gitId":"gerardtwk"},"content":"                        currentTask.markAsDone();"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"                    }"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"                } else {"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"                    currentTask \u003d new Event(taskInfo[2], taskInfo[3]);"},{"lineNumber":44,"author":{"gitId":"gerardtwk"},"content":"                    if (taskInfo[1].equals(\"1\")) {"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"                        currentTask.markAsDone();"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":"                    }"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"                }"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"                STORED_TASKS.add(currentTask);"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"            saveFileScanner.close();"},{"lineNumber":51,"author":{"gitId":"gerardtwk"},"content":"        } catch (Exception e) {"},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"            e.printStackTrace();"},{"lineNumber":53,"author":{"gitId":"gerardtwk"},"content":"            System.out.println(DIVIDER);"},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"            System.out.println(\"oops, something went wrong...\");"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"            System.out.println(DIVIDER);"},{"lineNumber":56,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":59,"author":{"gitId":"gerardtwk"},"content":"    public static void saveDataToFile() {"},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"gerardtwk"},"content":"            FileWriter saveFileWriter \u003d new FileWriter(SAVE_FILE);"},{"lineNumber":62,"author":{"gitId":"gerardtwk"},"content":"            for (int i \u003d 0; i \u003c STORED_TASKS.size(); i++) {"},{"lineNumber":63,"author":{"gitId":"gerardtwk"},"content":"                Task currentTask \u003d STORED_TASKS.get(i);"},{"lineNumber":64,"author":{"gitId":"gerardtwk"},"content":"                System.out.println(currentTask.getSaveString());"},{"lineNumber":65,"author":{"gitId":"gerardtwk"},"content":"                saveFileWriter.write(currentTask.getSaveString() + \"\\n\");"},{"lineNumber":66,"author":{"gitId":"gerardtwk"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"gerardtwk"},"content":"            saveFileWriter.flush();"},{"lineNumber":68,"author":{"gitId":"gerardtwk"},"content":"            saveFileWriter.close();"},{"lineNumber":69,"author":{"gitId":"gerardtwk"},"content":"        } catch (Exception e) {"},{"lineNumber":70,"author":{"gitId":"gerardtwk"},"content":"            e.printStackTrace();"},{"lineNumber":71,"author":{"gitId":"gerardtwk"},"content":"            System.out.println(DIVIDER);"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":"            System.out.println(\"oops, something went wrong...\");"},{"lineNumber":73,"author":{"gitId":"gerardtwk"},"content":"            System.out.println(DIVIDER);"},{"lineNumber":74,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":77,"author":{"gitId":"gerardtwk"},"content":"    public static void welcomeMsg() {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":80,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":81,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":82,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":83,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":84,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(logo);"},{"lineNumber":85,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":86,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":87,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":88,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":90,"author":{"gitId":"gerardtwk"},"content":"    public static String getCommandFromUser() {"},{"lineNumber":91,"author":{"gitId":"gerardtwk"},"content":"        return SCANNER.nextLine().strip().toLowerCase();"},{"lineNumber":92,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":94,"author":{"gitId":"gerardtwk"},"content":"    public static void handleCommand(String command) {"},{"lineNumber":95,"author":{"gitId":"gerardtwk"},"content":"        try {"},{"lineNumber":96,"author":{"gitId":"gerardtwk"},"content":"            if (command.startsWith(\"todo\")) {"},{"lineNumber":97,"author":{"gitId":"gerardtwk"},"content":"                storeTodoTask(command);"},{"lineNumber":98,"author":{"gitId":"gerardtwk"},"content":"            } else if (command.startsWith(\"deadline\")) {"},{"lineNumber":99,"author":{"gitId":"gerardtwk"},"content":"                storeDeadlineTask(command);"},{"lineNumber":100,"author":{"gitId":"gerardtwk"},"content":"            } else if (command.startsWith(\"event\")) {"},{"lineNumber":101,"author":{"gitId":"gerardtwk"},"content":"                storeEventTask(command);"},{"lineNumber":102,"author":{"gitId":"gerardtwk"},"content":"            } else if (command.equals(\"list\")) {"},{"lineNumber":103,"author":{"gitId":"gerardtwk"},"content":"                displayStoredTasks();"},{"lineNumber":104,"author":{"gitId":"gerardtwk"},"content":"            } else if (command.startsWith(\"done\")) {"},{"lineNumber":105,"author":{"gitId":"gerardtwk"},"content":"                markTaskAsDone(command);"},{"lineNumber":106,"author":{"gitId":"gerardtwk"},"content":"            } else if (command.startsWith(\"delete\")) {"},{"lineNumber":107,"author":{"gitId":"gerardtwk"},"content":"                deleteTask(command);"},{"lineNumber":108,"author":{"gitId":"gerardtwk"},"content":"            } else if (command.equals(\"bye\")) {"},{"lineNumber":109,"author":{"gitId":"gerardtwk"},"content":"                exitMsg();"},{"lineNumber":110,"author":{"gitId":"gerardtwk"},"content":"            } else {"},{"lineNumber":111,"author":{"gitId":"gerardtwk"},"content":"                invalidCommand();"},{"lineNumber":112,"author":{"gitId":"gerardtwk"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"gerardtwk"},"content":"        } catch (DukeException e) {"},{"lineNumber":114,"author":{"gitId":"gerardtwk"},"content":"            errorMsg(e);"},{"lineNumber":115,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":118,"author":{"gitId":"gerardtwk"},"content":"    public static void storeTodoTask(String command) throws DukeException {"},{"lineNumber":119,"author":{"gitId":"gerardtwk"},"content":"        if (command.equals(\"todo\")) {"},{"lineNumber":120,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":121,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":123,"author":{"gitId":"gerardtwk"},"content":"        if (!command.startsWith(\"todo \")) {"},{"lineNumber":124,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"☹ OOPS!!! The correct syntax for todo command is: \u0027todo task_description\u0027\");"},{"lineNumber":125,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":127,"author":{"gitId":"gerardtwk"},"content":"        String description \u003d command.substring(5).strip();"},{"lineNumber":128,"author":{"gitId":"gerardtwk"},"content":"        storeTask(new Todo(description));"},{"lineNumber":129,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":131,"author":{"gitId":"gerardtwk"},"content":"    public static void storeDeadlineTask(String command) throws DukeException {"},{"lineNumber":132,"author":{"gitId":"gerardtwk"},"content":"        if (command.equals(\"deadline\")) {"},{"lineNumber":133,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":134,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":136,"author":{"gitId":"gerardtwk"},"content":"        if (!command.startsWith(\"deadline \")) {"},{"lineNumber":137,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"☹ OOPS!!! The correct syntax for deadline command is: \" +"},{"lineNumber":138,"author":{"gitId":"gerardtwk"},"content":"                    \"\u0027deadline task_description /by due_date\u0027\");"},{"lineNumber":139,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":141,"author":{"gitId":"gerardtwk"},"content":"        String request \u003d command.substring(9).strip();"},{"lineNumber":142,"author":{"gitId":"gerardtwk"},"content":"        int indexOfBy \u003d request.indexOf(\" /by \");"},{"lineNumber":143,"author":{"gitId":"gerardtwk"},"content":"        if (indexOfBy \u003d\u003d -1) {"},{"lineNumber":144,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"☹ OOPS!!! The correct syntax for deadline command is: \" +"},{"lineNumber":145,"author":{"gitId":"gerardtwk"},"content":"                    \"\u0027deadline task_description /by due_date\u0027\");"},{"lineNumber":146,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":148,"author":{"gitId":"gerardtwk"},"content":"        String description \u003d request.substring(0, indexOfBy).strip();"},{"lineNumber":149,"author":{"gitId":"gerardtwk"},"content":"        String by \u003d request.substring(indexOfBy + 4).strip();"},{"lineNumber":150,"author":{"gitId":"gerardtwk"},"content":"        storeTask(new Deadline(description, by));"},{"lineNumber":151,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":153,"author":{"gitId":"gerardtwk"},"content":"    public static void storeEventTask(String command) throws DukeException {"},{"lineNumber":154,"author":{"gitId":"gerardtwk"},"content":"        if (command.equals(\"event\")) {"},{"lineNumber":155,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":156,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":158,"author":{"gitId":"gerardtwk"},"content":"        if (!command.startsWith(\"event \")) {"},{"lineNumber":159,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"☹ OOPS!!! The correct syntax for event command is: \" +"},{"lineNumber":160,"author":{"gitId":"gerardtwk"},"content":"                    \"\u0027event task_description /at timeframe\u0027\");"},{"lineNumber":161,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":163,"author":{"gitId":"gerardtwk"},"content":"        String request \u003d command.substring(6).strip();"},{"lineNumber":164,"author":{"gitId":"gerardtwk"},"content":"        int indexOfAt \u003d request.indexOf(\" /at \");"},{"lineNumber":165,"author":{"gitId":"gerardtwk"},"content":"        if (indexOfAt \u003d\u003d -1) {"},{"lineNumber":166,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"☹ OOPS!!! The correct syntax for event command is: \" +"},{"lineNumber":167,"author":{"gitId":"gerardtwk"},"content":"                    \"\u0027event task_description /at timeframe\u0027\");"},{"lineNumber":168,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":169,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":170,"author":{"gitId":"gerardtwk"},"content":"        String description \u003d request.substring(0, indexOfAt).strip();"},{"lineNumber":171,"author":{"gitId":"gerardtwk"},"content":"        String at \u003d request.substring(indexOfAt + 4).strip();"},{"lineNumber":172,"author":{"gitId":"gerardtwk"},"content":"        storeTask(new Event(description, at));"},{"lineNumber":173,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":175,"author":{"gitId":"gerardtwk"},"content":"    public static void storeTask(Task taskToStore) {"},{"lineNumber":176,"author":{"gitId":"gerardtwk"},"content":"        STORED_TASKS.add(taskToStore);"},{"lineNumber":177,"author":{"gitId":"gerardtwk"},"content":"        saveDataToFile();"},{"lineNumber":178,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":179,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");"},{"lineNumber":180,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"   \" + taskToStore);"},{"lineNumber":181,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\" Now you have \" + STORED_TASKS.size() + \" tasks in the list.\");"},{"lineNumber":182,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":183,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":185,"author":{"gitId":"gerardtwk"},"content":"    public static void displayStoredTasks() {"},{"lineNumber":186,"author":{"gitId":"gerardtwk"},"content":"        if (STORED_TASKS.size() \u003d\u003d 0) {"},{"lineNumber":187,"author":{"gitId":"gerardtwk"},"content":"            System.out.println(DIVIDER);"},{"lineNumber":188,"author":{"gitId":"gerardtwk"},"content":"            System.out.println(\" You have no tasks in your list! :)\");"},{"lineNumber":189,"author":{"gitId":"gerardtwk"},"content":"            System.out.println(DIVIDER);"},{"lineNumber":190,"author":{"gitId":"gerardtwk"},"content":"            return;"},{"lineNumber":191,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":192,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":193,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":194,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\" Here are the tasks in your list:\");"},{"lineNumber":195,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c STORED_TASKS.size(); i++) {"},{"lineNumber":196,"author":{"gitId":"gerardtwk"},"content":"            Task currentTask \u003d STORED_TASKS.get(i);"},{"lineNumber":197,"author":{"gitId":"gerardtwk"},"content":"            System.out.printf(\" %d.%s\\n\", (i + 1), currentTask);"},{"lineNumber":198,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":199,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":200,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":202,"author":{"gitId":"gerardtwk"},"content":"    public static void markTaskAsDone(String command) throws DukeException {"},{"lineNumber":203,"author":{"gitId":"gerardtwk"},"content":"        if (command.equals(\"done\")) {"},{"lineNumber":204,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"☹ OOPS!!! The task number of a done command cannot be empty.\");"},{"lineNumber":205,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":206,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":207,"author":{"gitId":"gerardtwk"},"content":"        if (!command.startsWith(\"done \")) {"},{"lineNumber":208,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"☹ OOPS!!! The correct syntax for done command is: \u0027done task_number\u0027\");"},{"lineNumber":209,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":210,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":211,"author":{"gitId":"gerardtwk"},"content":"        String taskNumber \u003d command.substring(5).strip();"},{"lineNumber":212,"author":{"gitId":"gerardtwk"},"content":"        int indexOfTaskToMark;"},{"lineNumber":213,"author":{"gitId":"gerardtwk"},"content":"        try {"},{"lineNumber":214,"author":{"gitId":"gerardtwk"},"content":"            indexOfTaskToMark \u003d Integer.parseInt(taskNumber) - 1;"},{"lineNumber":215,"author":{"gitId":"gerardtwk"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":216,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"☹ OOPS!!! The correct syntax for done command is: \u0027done task_number\u0027\");"},{"lineNumber":217,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":218,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":219,"author":{"gitId":"gerardtwk"},"content":"        if (indexOfTaskToMark \u003e\u003d STORED_TASKS.size() || indexOfTaskToMark \u003c 0) {"},{"lineNumber":220,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"☹ OOPS!!! You entered an invalid task number!\");"},{"lineNumber":221,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":222,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":223,"author":{"gitId":"gerardtwk"},"content":"        Task taskToMark \u003d STORED_TASKS.get(indexOfTaskToMark);"},{"lineNumber":224,"author":{"gitId":"gerardtwk"},"content":"        taskToMark.markAsDone();"},{"lineNumber":225,"author":{"gitId":"gerardtwk"},"content":"        saveDataToFile();"},{"lineNumber":226,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":227,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":228,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"   \" + taskToMark);"},{"lineNumber":229,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":230,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":232,"author":{"gitId":"gerardtwk"},"content":"    public static void deleteTask(String command) throws DukeException {"},{"lineNumber":233,"author":{"gitId":"gerardtwk"},"content":"        if (command.equals(\"delete\")) {"},{"lineNumber":234,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"☹ OOPS!!! The task number of a delete command cannot be empty.\");"},{"lineNumber":235,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":236,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":237,"author":{"gitId":"gerardtwk"},"content":"        if (!command.startsWith(\"delete \")) {"},{"lineNumber":238,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"☹ OOPS!!! The correct syntax for delete command is: \u0027delete task_number\u0027\");"},{"lineNumber":239,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":240,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":241,"author":{"gitId":"gerardtwk"},"content":"        String taskNumber \u003d command.substring(7).strip();"},{"lineNumber":242,"author":{"gitId":"gerardtwk"},"content":"        int indexOfTaskToDelete;"},{"lineNumber":243,"author":{"gitId":"gerardtwk"},"content":"        try {"},{"lineNumber":244,"author":{"gitId":"gerardtwk"},"content":"            indexOfTaskToDelete \u003d Integer.parseInt(taskNumber) - 1;"},{"lineNumber":245,"author":{"gitId":"gerardtwk"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":246,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"☹ OOPS!!! The correct syntax for delete command is: \u0027delete task_number\u0027\");"},{"lineNumber":247,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":248,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":249,"author":{"gitId":"gerardtwk"},"content":"        if (indexOfTaskToDelete \u003e\u003d STORED_TASKS.size() || indexOfTaskToDelete \u003c 0) {"},{"lineNumber":250,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"☹ OOPS!!! You entered an invalid task number!\");"},{"lineNumber":251,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":252,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":253,"author":{"gitId":"gerardtwk"},"content":"        Task deletedTask \u003d STORED_TASKS.remove(indexOfTaskToDelete);"},{"lineNumber":254,"author":{"gitId":"gerardtwk"},"content":"        saveDataToFile();"},{"lineNumber":255,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":256,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\");"},{"lineNumber":257,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"   \" + deletedTask);"},{"lineNumber":258,"author":{"gitId":"gerardtwk"},"content":"        System.out.println((STORED_TASKS.size() \u003d\u003d 0) ? \" Now you have no more tasks left in the list! :)\" :"},{"lineNumber":259,"author":{"gitId":"gerardtwk"},"content":"                \" Now you have \" + STORED_TASKS.size() + \" tasks in the list.\");"},{"lineNumber":260,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":261,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":262,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":263,"author":{"gitId":"gerardtwk"},"content":"    public static void exitMsg() {"},{"lineNumber":264,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":265,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");"},{"lineNumber":266,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":269,"author":{"gitId":"gerardtwk"},"content":"    public static void invalidCommand() throws DukeException {"},{"lineNumber":270,"author":{"gitId":"gerardtwk"},"content":"        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":271,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":272,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":273,"author":{"gitId":"gerardtwk"},"content":"    public static void errorMsg(DukeException e) {"},{"lineNumber":274,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":275,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\" \" + e.getMessage());"},{"lineNumber":276,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"gerardtwk":268,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"    public DukeException(String errorMsg) {"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"        super(errorMsg);"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"gerardtwk":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"    private String at;"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"    public Event(String description, String at) {"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"        this.at \u003d at;"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"    public String getSaveString() {"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"        return \"E | \" + super.getSaveString() + \" | \" + this.at;"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.at);"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"gerardtwk":19}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"    private String description;"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"    private boolean isDone;"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"    public String getDescription() {"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"        return this.description;"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"    public String getStatusIcon() {"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"        return (this.isDone ? \"X\" : \" \");"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"    public void markAsDone() {"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"    public String getSaveString() {"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"        return (this.isDone ? \"1\" : \"0\") + \" | \" + this.getDescription();"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"gerardtwk":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"    public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"    public String getSaveString() {"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"        return \"T | \" + super.getSaveString();"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"gerardtwk":15}}]
