[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"    private String by;"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"        this.by \u003d by;"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by);"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"gerardtwk":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\";"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"    private static final int MAX_TASKS_COUNT \u003d 100;"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"    private static final Task[] STORED_TASKS \u003d new Task[MAX_TASKS_COUNT];"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"    private static int storedTasksCount \u003d 0;"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"        String command;"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"        welcomeMsg();"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"        do {"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"            command \u003d getCommandFromUser();"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"            handleCommand(command);"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"        } while (!command.equals(\"bye\"));"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"        SCANNER.close();"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"    public static void welcomeMsg() {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":24,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":26,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(logo);"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"    public static String getCommandFromUser() {"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"        return SCANNER.nextLine().strip().toLowerCase();"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"    public static void handleCommand(String command) {"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"gerardtwk"},"content":"            if (command.startsWith(\"todo\")) {"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"                storeTodoTask(command);"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"            } else if (command.startsWith(\"deadline\")) {"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"                storeDeadlineTask(command);"},{"lineNumber":44,"author":{"gitId":"gerardtwk"},"content":"            } else if (command.startsWith(\"event\")) {"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"                storeEventTask(command);"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":"            } else if (command.equals(\"list\")) {"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"                displayStoredTasks();"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"            } else if (command.startsWith(\"done\")) {"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"                markTaskAsDone(command);"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"            } else if (command.equals(\"bye\")) {"},{"lineNumber":51,"author":{"gitId":"gerardtwk"},"content":"                exitMsg();"},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"            } else {"},{"lineNumber":53,"author":{"gitId":"gerardtwk"},"content":"                invalidCommand();"},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"        } catch (DukeException e) {"},{"lineNumber":56,"author":{"gitId":"gerardtwk"},"content":"            errorMsg(e);"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":"    public static void storeTodoTask(String command) throws DukeException {"},{"lineNumber":61,"author":{"gitId":"gerardtwk"},"content":"        if (command.equals(\"todo\")) {"},{"lineNumber":62,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":63,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":65,"author":{"gitId":"gerardtwk"},"content":"        if (!command.startsWith(\"todo \")) {"},{"lineNumber":66,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\" ☹ OOPS!!! The correct syntax for todo command is: \u0027todo task_description\u0027\");"},{"lineNumber":67,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":69,"author":{"gitId":"gerardtwk"},"content":"        String description \u003d command.substring(5).strip();"},{"lineNumber":70,"author":{"gitId":"gerardtwk"},"content":"        storeTask(new Todo(description));"},{"lineNumber":71,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":73,"author":{"gitId":"gerardtwk"},"content":"    public static void storeDeadlineTask(String command) throws DukeException {"},{"lineNumber":74,"author":{"gitId":"gerardtwk"},"content":"        if (command.equals(\"deadline\")) {"},{"lineNumber":75,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":76,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":78,"author":{"gitId":"gerardtwk"},"content":"        if (!command.startsWith(\"deadline \")) {"},{"lineNumber":79,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\" ☹ OOPS!!! The correct syntax for deadline command is: \" +"},{"lineNumber":80,"author":{"gitId":"gerardtwk"},"content":"                    \"\u0027deadline task_description /by due_date\u0027\");"},{"lineNumber":81,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":83,"author":{"gitId":"gerardtwk"},"content":"        String request \u003d command.substring(9).strip();"},{"lineNumber":84,"author":{"gitId":"gerardtwk"},"content":"        int indexOfBy \u003d request.indexOf(\" /by \");"},{"lineNumber":85,"author":{"gitId":"gerardtwk"},"content":"        if (indexOfBy \u003d\u003d -1) {"},{"lineNumber":86,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\" ☹ OOPS!!! The correct syntax for deadline command is: \" +"},{"lineNumber":87,"author":{"gitId":"gerardtwk"},"content":"                    \"\u0027deadline task_description /by due_date\u0027\");"},{"lineNumber":88,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":90,"author":{"gitId":"gerardtwk"},"content":"        String description \u003d request.substring(0, indexOfBy).strip();"},{"lineNumber":91,"author":{"gitId":"gerardtwk"},"content":"        String by \u003d request.substring(indexOfBy + 4).strip();"},{"lineNumber":92,"author":{"gitId":"gerardtwk"},"content":"        storeTask(new Deadline(description, by));"},{"lineNumber":93,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":95,"author":{"gitId":"gerardtwk"},"content":"    public static void storeEventTask(String command) throws DukeException {"},{"lineNumber":96,"author":{"gitId":"gerardtwk"},"content":"        if (command.equals(\"event\")) {"},{"lineNumber":97,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\" ☹ OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":98,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":100,"author":{"gitId":"gerardtwk"},"content":"        if (!command.startsWith(\"event \")) {"},{"lineNumber":101,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\" ☹ OOPS!!! The correct syntax for event command is: \" +"},{"lineNumber":102,"author":{"gitId":"gerardtwk"},"content":"                    \"\u0027event task_description /at timeframe\u0027\");"},{"lineNumber":103,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":105,"author":{"gitId":"gerardtwk"},"content":"        String request \u003d command.substring(6).strip();"},{"lineNumber":106,"author":{"gitId":"gerardtwk"},"content":"        int indexOfAt \u003d request.indexOf(\" /at \");"},{"lineNumber":107,"author":{"gitId":"gerardtwk"},"content":"        if (indexOfAt \u003d\u003d -1) {"},{"lineNumber":108,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\" ☹ OOPS!!! The correct syntax for event command is: \" +"},{"lineNumber":109,"author":{"gitId":"gerardtwk"},"content":"                    \"\u0027event task_description /at timeframe\u0027\");"},{"lineNumber":110,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":112,"author":{"gitId":"gerardtwk"},"content":"        String description \u003d request.substring(0, indexOfAt).strip();"},{"lineNumber":113,"author":{"gitId":"gerardtwk"},"content":"        String at \u003d request.substring(indexOfAt + 4).strip();"},{"lineNumber":114,"author":{"gitId":"gerardtwk"},"content":"        storeTask(new Event(description, at));"},{"lineNumber":115,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":117,"author":{"gitId":"gerardtwk"},"content":"    public static void storeTask(Task taskToStore) {"},{"lineNumber":118,"author":{"gitId":"gerardtwk"},"content":"        STORED_TASKS[storedTasksCount] \u003d taskToStore;"},{"lineNumber":119,"author":{"gitId":"gerardtwk"},"content":"        storedTasksCount++;"},{"lineNumber":120,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":121,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":122,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"  \" + taskToStore);"},{"lineNumber":123,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Now you have \" + storedTasksCount + \" tasks in the list.\");"},{"lineNumber":124,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":125,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":127,"author":{"gitId":"gerardtwk"},"content":"    public static void displayStoredTasks() {"},{"lineNumber":128,"author":{"gitId":"gerardtwk"},"content":"        if (storedTasksCount \u003d\u003d 0) {"},{"lineNumber":129,"author":{"gitId":"gerardtwk"},"content":"            System.out.println(DIVIDER);"},{"lineNumber":130,"author":{"gitId":"gerardtwk"},"content":"            System.out.println(\"You have no tasks in your list! :)\");"},{"lineNumber":131,"author":{"gitId":"gerardtwk"},"content":"            System.out.println(DIVIDER);"},{"lineNumber":132,"author":{"gitId":"gerardtwk"},"content":"            return;"},{"lineNumber":133,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":135,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":136,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":137,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c storedTasksCount; i++) {"},{"lineNumber":138,"author":{"gitId":"gerardtwk"},"content":"            Task currentTask \u003d STORED_TASKS[i];"},{"lineNumber":139,"author":{"gitId":"gerardtwk"},"content":"            System.out.printf(\"%d.%s\\n\", (i + 1), currentTask);"},{"lineNumber":140,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":142,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":144,"author":{"gitId":"gerardtwk"},"content":"    public static void markTaskAsDone(String command) throws DukeException {"},{"lineNumber":145,"author":{"gitId":"gerardtwk"},"content":"        if (command.equals(\"done\")) {"},{"lineNumber":146,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\" ☹ OOPS!!! The task number of a done command cannot be empty.\");"},{"lineNumber":147,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":149,"author":{"gitId":"gerardtwk"},"content":"        if (!command.startsWith(\"done \")) {"},{"lineNumber":150,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\" ☹ OOPS!!! The correct syntax for done command is: \u0027done task_number\u0027\");"},{"lineNumber":151,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":153,"author":{"gitId":"gerardtwk"},"content":"        String taskNumber \u003d command.substring(5).strip();"},{"lineNumber":154,"author":{"gitId":"gerardtwk"},"content":"        int indexOfTaskToMark;"},{"lineNumber":155,"author":{"gitId":"gerardtwk"},"content":"        try {"},{"lineNumber":156,"author":{"gitId":"gerardtwk"},"content":"            indexOfTaskToMark \u003d Integer.parseInt(taskNumber) - 1;"},{"lineNumber":157,"author":{"gitId":"gerardtwk"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":158,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\" ☹ OOPS!!! The correct syntax for done command is: \u0027done task_number\u0027\");"},{"lineNumber":159,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":160,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":161,"author":{"gitId":"gerardtwk"},"content":"        if (indexOfTaskToMark \u003e\u003d storedTasksCount || indexOfTaskToMark \u003c 0) {"},{"lineNumber":162,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\" ☹ OOPS!!! You entered an invalid task number!\");"},{"lineNumber":163,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":165,"author":{"gitId":"gerardtwk"},"content":"        Task taskToMark \u003d STORED_TASKS[indexOfTaskToMark];"},{"lineNumber":166,"author":{"gitId":"gerardtwk"},"content":"        taskToMark.markAsDone();"},{"lineNumber":167,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":168,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":169,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(taskToMark);"},{"lineNumber":170,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":171,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":173,"author":{"gitId":"gerardtwk"},"content":"    public static void exitMsg() {"},{"lineNumber":174,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":175,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":176,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":179,"author":{"gitId":"gerardtwk"},"content":"    public static void invalidCommand() throws DukeException {"},{"lineNumber":180,"author":{"gitId":"gerardtwk"},"content":"        throw new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":181,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":183,"author":{"gitId":"gerardtwk"},"content":"    public static void errorMsg(DukeException e) {"},{"lineNumber":184,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":185,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(e.getMessage());"},{"lineNumber":186,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"gerardtwk":178,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"    public DukeException(String errorMsg) {"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"        super(errorMsg);"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"gerardtwk":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"    private String at;"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"    public Event(String description, String at) {"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"        this.at \u003d at;"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"        return String.format(\"[E]%s (by: %s)\", super.toString(), this.at);"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"gerardtwk":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"    private String description;"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"    private boolean isDone;"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"    public String getDescription() {"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"        return this.description;"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"    public String getStatusIcon() {"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"        return this.isDone ? \"X\" : \" \";"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"    public void markAsDone() {"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"gerardtwk":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"    public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"gerardtwk":10}}]
