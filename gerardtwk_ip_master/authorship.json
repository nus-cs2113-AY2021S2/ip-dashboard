[{"path":"saveFile.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"T | 1 | hello"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"D | 1 | deadline | 8pm"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"E | 1 | event | 10pm"}],"authorContributionMap":{"gerardtwk":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"    private String by;"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"        this.by \u003d by;"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"    public String getSaveFormatString() {"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"        return \"D | \" + super.getSaveFormatString() + \" | \" + this.by;"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by);"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"gerardtwk":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"    private static final String SAVE_FILE_PATH \u003d \"saveFile.txt\";"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"    private Ui ui;"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"    private Storage storage;"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"    private TaskList tasks;"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"    private Parser parser;"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"    public Duke(String filePath) {"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"        ui \u003d new Ui();"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"        storage \u003d new Storage(ui, filePath);"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"        tasks \u003d new TaskList(storage.loadStoredTasksData());"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"        ui.setTaskList(tasks);"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"        storage.setTaskList(tasks);"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"        parser \u003d new Parser(ui, storage, tasks);"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"    private void run() {"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"        ui.printWelcomeMsg();"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"        String command;"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"        boolean isExit;"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"        do {"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"            try {"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"                command \u003d ui.getCommandFromUser();"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"            } catch (NoSuchElementException e) {"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"                break;"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"            parser.handleCommand(command);"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"            isExit \u003d parser.isExit();"},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":"        } while (!isExit);"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"        ui.closeScanner();"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":"        new Duke(SAVE_FILE_PATH).run();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"gerardtwk":35,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"    public DukeException(String errorMsg) {"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"        super(errorMsg);"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"gerardtwk":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"    private String at;"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"    public Event(String description, String at) {"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"        this.at \u003d at;"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"    public String getSaveFormatString() {"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"        return \"E | \" + super.getSaveFormatString() + \" | \" + this.at;"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.at);"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"gerardtwk":18}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"public class Parser {"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"    private static final String TODO_CMD \u003d \"todo\";"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"    private static final String DEADLINE_CMD \u003d \"deadline\";"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"    private static final String EVENT_CMD \u003d \"event\";"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"    private static final String FIND_CMD \u003d \"find\";"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"    private static final String LIST_CMD \u003d \"list\";"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"    private static final String DONE_CMD \u003d \"done\";"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"    private static final String DELETE_CMD \u003d \"delete\";"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"    private static final String BYE_CMD \u003d \"bye\";"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"    private static final String TODO_CMD_VALID_START_STR \u003d \"todo \";"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"    private static final String DEADLINE_CMD_VALID_START_STR \u003d \"deadline \";"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    private static final String EVENT_CMD_VALID_START_STR \u003d \"event \";"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"    private static final String FIND_CMD_VALID_START_STR \u003d \"find \";"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"    private static final String DONE_CMD_VALID_START_STR \u003d \"done \";"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"    private static final String DELETE_CMD_VALID_START_STR \u003d \"delete \";"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"    private static final String BY_VALID_STR \u003d \" /by \";"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"    private static final String AT_VALID_STR \u003d \" /at \";"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"    private static final int INVALID_INDEX \u003d -1;"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"    private static final int TODO_CMD_DESCRIPTION_INDEX \u003d 5;"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"    private static final int DEADLINE_CMD_DESCRIPTION_INDEX \u003d 0;"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"    private static final int EVENT_CMD_DESCRIPTION_INDEX \u003d 0;"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"    private static final int FIND_CMD_KEYWORD_INDEX \u003d 5;"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"    private static final int DEADLINE_CMD_REQUEST_INDEX \u003d 9;"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"    private static final int EVENT_CMD_REQUEST_INDEX \u003d 6;"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"    private static final int DONE_CMD_TASK_NUM_INDEX \u003d 5;"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"    private static final int DELETE_CMD_TASK_NUM_INDEX \u003d 7;"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"    private static final int NUM_CHARS_TO_BY_CONTENT_INDEX \u003d 4;"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"    private static final int NUM_CHARS_TO_AT_CONTENT_INDEX \u003d 4;"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"    private Ui ui;"},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":"    private Storage storage;"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"    private TaskList tasks;"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"    private boolean isExit;"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"    public Parser(Ui ui, Storage storage, TaskList tasks) {"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"        this.ui \u003d ui;"},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":"        this.storage \u003d storage;"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"        this.isExit \u003d false;"},{"lineNumber":40,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"    public void handleCommand(String command) {"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"gerardtwk"},"content":"            if (command.startsWith(TODO_CMD)) {"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"                storeTodoTask(command);"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":"            } else if (command.startsWith(DEADLINE_CMD)) {"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"                storeDeadlineTask(command);"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"            } else if (command.startsWith(EVENT_CMD)) {"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"                storeEventTask(command);"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"            } else if (command.startsWith(FIND_CMD)) {"},{"lineNumber":51,"author":{"gitId":"gerardtwk"},"content":"                findTask(command);"},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"            } else if (command.equals(LIST_CMD)) {"},{"lineNumber":53,"author":{"gitId":"gerardtwk"},"content":"                displayStoredTasks();"},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"            } else if (command.startsWith(DONE_CMD)) {"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"                markTaskAsDone(command);"},{"lineNumber":56,"author":{"gitId":"gerardtwk"},"content":"            } else if (command.startsWith(DELETE_CMD)) {"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"                deleteTask(command);"},{"lineNumber":58,"author":{"gitId":"gerardtwk"},"content":"            } else if (command.equals(BYE_CMD)) {"},{"lineNumber":59,"author":{"gitId":"gerardtwk"},"content":"                exitMsg();"},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":"            } else {"},{"lineNumber":61,"author":{"gitId":"gerardtwk"},"content":"                invalidCommand();"},{"lineNumber":62,"author":{"gitId":"gerardtwk"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"gerardtwk"},"content":"        } catch (DukeException e) {"},{"lineNumber":64,"author":{"gitId":"gerardtwk"},"content":"            commandErrorMsg(e);"},{"lineNumber":65,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":68,"author":{"gitId":"gerardtwk"},"content":"    private void storeTodoTask(String command) throws DukeException {"},{"lineNumber":69,"author":{"gitId":"gerardtwk"},"content":"        if (command.equals(TODO_CMD)) {"},{"lineNumber":70,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":71,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":73,"author":{"gitId":"gerardtwk"},"content":"        if (!command.startsWith(TODO_CMD_VALID_START_STR)) {"},{"lineNumber":74,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"OOPS!!! The correct syntax for todo command is: \u0027todo task_description\u0027\");"},{"lineNumber":75,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":77,"author":{"gitId":"gerardtwk"},"content":"        String description \u003d command.substring(TODO_CMD_DESCRIPTION_INDEX).strip();"},{"lineNumber":78,"author":{"gitId":"gerardtwk"},"content":"        storeTask(new Todo(description));"},{"lineNumber":79,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":81,"author":{"gitId":"gerardtwk"},"content":"    private void storeDeadlineTask(String command) throws DukeException {"},{"lineNumber":82,"author":{"gitId":"gerardtwk"},"content":"        if (command.equals(DEADLINE_CMD)) {"},{"lineNumber":83,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":84,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":86,"author":{"gitId":"gerardtwk"},"content":"        if (!command.startsWith(DEADLINE_CMD_VALID_START_STR)) {"},{"lineNumber":87,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"OOPS!!! The correct syntax for deadline command is: \" +"},{"lineNumber":88,"author":{"gitId":"gerardtwk"},"content":"                    \"\u0027deadline task_description /by due_date\u0027\");"},{"lineNumber":89,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":91,"author":{"gitId":"gerardtwk"},"content":"        String request \u003d command.substring(DEADLINE_CMD_REQUEST_INDEX).strip();"},{"lineNumber":92,"author":{"gitId":"gerardtwk"},"content":"        int indexOfBy \u003d request.indexOf(BY_VALID_STR);"},{"lineNumber":93,"author":{"gitId":"gerardtwk"},"content":"        if (indexOfBy \u003d\u003d INVALID_INDEX) {"},{"lineNumber":94,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"OOPS!!! The correct syntax for deadline command is: \" +"},{"lineNumber":95,"author":{"gitId":"gerardtwk"},"content":"                    \"\u0027deadline task_description /by due_date\u0027\");"},{"lineNumber":96,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":98,"author":{"gitId":"gerardtwk"},"content":"        String description \u003d request.substring(DEADLINE_CMD_DESCRIPTION_INDEX, indexOfBy).strip();"},{"lineNumber":99,"author":{"gitId":"gerardtwk"},"content":"        String by \u003d request.substring(indexOfBy + NUM_CHARS_TO_BY_CONTENT_INDEX).strip();"},{"lineNumber":100,"author":{"gitId":"gerardtwk"},"content":"        storeTask(new Deadline(description, by));"},{"lineNumber":101,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":103,"author":{"gitId":"gerardtwk"},"content":"    private void storeEventTask(String command) throws DukeException {"},{"lineNumber":104,"author":{"gitId":"gerardtwk"},"content":"        if (command.equals(EVENT_CMD)) {"},{"lineNumber":105,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":106,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":108,"author":{"gitId":"gerardtwk"},"content":"        if (!command.startsWith(EVENT_CMD_VALID_START_STR)) {"},{"lineNumber":109,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"OOPS!!! The correct syntax for event command is: \" +"},{"lineNumber":110,"author":{"gitId":"gerardtwk"},"content":"                    \"\u0027event task_description /at timeframe\u0027\");"},{"lineNumber":111,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":113,"author":{"gitId":"gerardtwk"},"content":"        String request \u003d command.substring(EVENT_CMD_REQUEST_INDEX).strip();"},{"lineNumber":114,"author":{"gitId":"gerardtwk"},"content":"        int indexOfAt \u003d request.indexOf(AT_VALID_STR);"},{"lineNumber":115,"author":{"gitId":"gerardtwk"},"content":"        if (indexOfAt \u003d\u003d INVALID_INDEX) {"},{"lineNumber":116,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"OOPS!!! The correct syntax for event command is: \" +"},{"lineNumber":117,"author":{"gitId":"gerardtwk"},"content":"                    \"\u0027event task_description /at timeframe\u0027\");"},{"lineNumber":118,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":120,"author":{"gitId":"gerardtwk"},"content":"        String description \u003d request.substring(EVENT_CMD_DESCRIPTION_INDEX, indexOfAt).strip();"},{"lineNumber":121,"author":{"gitId":"gerardtwk"},"content":"        String at \u003d request.substring(indexOfAt + NUM_CHARS_TO_AT_CONTENT_INDEX).strip();"},{"lineNumber":122,"author":{"gitId":"gerardtwk"},"content":"        storeTask(new Event(description, at));"},{"lineNumber":123,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":125,"author":{"gitId":"gerardtwk"},"content":"    private void storeTask(Task taskToStore) {"},{"lineNumber":126,"author":{"gitId":"gerardtwk"},"content":"        tasks.addTask(taskToStore);"},{"lineNumber":127,"author":{"gitId":"gerardtwk"},"content":"        storage.saveStoredTasksData();"},{"lineNumber":128,"author":{"gitId":"gerardtwk"},"content":"        ui.printStoreTaskMsg(taskToStore, tasks.getTaskCount());"},{"lineNumber":129,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":131,"author":{"gitId":"gerardtwk"},"content":"    private void findTask(String command) throws DukeException {"},{"lineNumber":132,"author":{"gitId":"gerardtwk"},"content":"        if (command.equals(FIND_CMD)) {"},{"lineNumber":133,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"OOPS!!! The keyword for a find command cannot be empty.\");"},{"lineNumber":134,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":136,"author":{"gitId":"gerardtwk"},"content":"        if (!command.startsWith(FIND_CMD_VALID_START_STR)) {"},{"lineNumber":137,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"OOPS!!! The correct syntax for find command is: \u0027find keyword\u0027\");"},{"lineNumber":138,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":140,"author":{"gitId":"gerardtwk"},"content":"        String keyword \u003d command.substring(FIND_CMD_KEYWORD_INDEX).strip();"},{"lineNumber":141,"author":{"gitId":"gerardtwk"},"content":"        TaskList tasksFound \u003d tasks.findTasksByKeyword(keyword);"},{"lineNumber":142,"author":{"gitId":"gerardtwk"},"content":"        ui.printTasksFound(tasksFound);"},{"lineNumber":143,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":145,"author":{"gitId":"gerardtwk"},"content":"    private void displayStoredTasks() {"},{"lineNumber":146,"author":{"gitId":"gerardtwk"},"content":"        if (tasks.isEmpty()) {"},{"lineNumber":147,"author":{"gitId":"gerardtwk"},"content":"            ui.printEmptyTaskListMsg();"},{"lineNumber":148,"author":{"gitId":"gerardtwk"},"content":"            return;"},{"lineNumber":149,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"gerardtwk"},"content":"        ui.printStoredTasks();"},{"lineNumber":151,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":153,"author":{"gitId":"gerardtwk"},"content":"    private void markTaskAsDone(String command) throws DukeException {"},{"lineNumber":154,"author":{"gitId":"gerardtwk"},"content":"        if (command.equals(DONE_CMD)) {"},{"lineNumber":155,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"OOPS!!! The task number of a done command cannot be empty.\");"},{"lineNumber":156,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":158,"author":{"gitId":"gerardtwk"},"content":"        if (!command.startsWith(DONE_CMD_VALID_START_STR)) {"},{"lineNumber":159,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"OOPS!!! The correct syntax for done command is: \u0027done task_number\u0027\");"},{"lineNumber":160,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":162,"author":{"gitId":"gerardtwk"},"content":"        String taskNumber \u003d command.substring(DONE_CMD_TASK_NUM_INDEX).strip();"},{"lineNumber":163,"author":{"gitId":"gerardtwk"},"content":"        int indexOfTaskToMark;"},{"lineNumber":164,"author":{"gitId":"gerardtwk"},"content":"        try {"},{"lineNumber":165,"author":{"gitId":"gerardtwk"},"content":"            indexOfTaskToMark \u003d Integer.parseInt(taskNumber) - 1;"},{"lineNumber":166,"author":{"gitId":"gerardtwk"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":167,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"OOPS!!! The correct syntax for done command is: \u0027done task_number\u0027\");"},{"lineNumber":168,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":169,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":170,"author":{"gitId":"gerardtwk"},"content":"        boolean isValidTaskIndex \u003d (indexOfTaskToMark \u003e\u003d 0) \u0026\u0026 (indexOfTaskToMark \u003c tasks.getTaskCount());"},{"lineNumber":171,"author":{"gitId":"gerardtwk"},"content":"        if (!isValidTaskIndex) {"},{"lineNumber":172,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"OOPS!!! You entered an invalid task number!\");"},{"lineNumber":173,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"gerardtwk"},"content":"        Task taskToMark \u003d tasks.getTaskAt(indexOfTaskToMark);"},{"lineNumber":175,"author":{"gitId":"gerardtwk"},"content":"        taskToMark.markAsDone();"},{"lineNumber":176,"author":{"gitId":"gerardtwk"},"content":"        storage.saveStoredTasksData();"},{"lineNumber":177,"author":{"gitId":"gerardtwk"},"content":"        ui.printMarkTaskAsDoneMsg(taskToMark);"},{"lineNumber":178,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":180,"author":{"gitId":"gerardtwk"},"content":"    private void deleteTask(String command) throws DukeException {"},{"lineNumber":181,"author":{"gitId":"gerardtwk"},"content":"        if (command.equals(DELETE_CMD)) {"},{"lineNumber":182,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"OOPS!!! The task number of a delete command cannot be empty.\");"},{"lineNumber":183,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":184,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":185,"author":{"gitId":"gerardtwk"},"content":"        if (!command.startsWith(DELETE_CMD_VALID_START_STR)) {"},{"lineNumber":186,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"OOPS!!! The correct syntax for delete command is: \u0027delete task_number\u0027\");"},{"lineNumber":187,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":189,"author":{"gitId":"gerardtwk"},"content":"        String taskNumber \u003d command.substring(DELETE_CMD_TASK_NUM_INDEX).strip();"},{"lineNumber":190,"author":{"gitId":"gerardtwk"},"content":"        int indexOfTaskToDelete;"},{"lineNumber":191,"author":{"gitId":"gerardtwk"},"content":"        try {"},{"lineNumber":192,"author":{"gitId":"gerardtwk"},"content":"            indexOfTaskToDelete \u003d Integer.parseInt(taskNumber) - 1;"},{"lineNumber":193,"author":{"gitId":"gerardtwk"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":194,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"OOPS!!! The correct syntax for delete command is: \u0027delete task_number\u0027\");"},{"lineNumber":195,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":197,"author":{"gitId":"gerardtwk"},"content":"        boolean isValidTaskIndex \u003d (indexOfTaskToDelete \u003e\u003d 0) \u0026\u0026 (indexOfTaskToDelete \u003c tasks.getTaskCount());"},{"lineNumber":198,"author":{"gitId":"gerardtwk"},"content":"        if (!isValidTaskIndex) {"},{"lineNumber":199,"author":{"gitId":"gerardtwk"},"content":"            throw new DukeException(\"OOPS!!! You entered an invalid task number!\");"},{"lineNumber":200,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":201,"author":{"gitId":"gerardtwk"},"content":"        Task deletedTask \u003d tasks.deleteTask(indexOfTaskToDelete);"},{"lineNumber":202,"author":{"gitId":"gerardtwk"},"content":"        storage.saveStoredTasksData();"},{"lineNumber":203,"author":{"gitId":"gerardtwk"},"content":"        ui.printDeleteTaskMsg(deletedTask);"},{"lineNumber":204,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":206,"author":{"gitId":"gerardtwk"},"content":"    private void exitMsg() {"},{"lineNumber":207,"author":{"gitId":"gerardtwk"},"content":"        isExit \u003d true;"},{"lineNumber":208,"author":{"gitId":"gerardtwk"},"content":"        ui.printExitMsg();"},{"lineNumber":209,"author":{"gitId":"gerardtwk"},"content":"        storage.saveStoredTasksData();"},{"lineNumber":210,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":211,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":212,"author":{"gitId":"gerardtwk"},"content":"    private void invalidCommand() throws DukeException {"},{"lineNumber":213,"author":{"gitId":"gerardtwk"},"content":"        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":214,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":215,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":216,"author":{"gitId":"gerardtwk"},"content":"    private void commandErrorMsg(DukeException e) {"},{"lineNumber":217,"author":{"gitId":"gerardtwk"},"content":"        ui.printCommandErrorMsg(e.getMessage());"},{"lineNumber":218,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":220,"author":{"gitId":"gerardtwk"},"content":"    public boolean isExit() {"},{"lineNumber":221,"author":{"gitId":"gerardtwk"},"content":"        return isExit;"},{"lineNumber":222,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"gerardtwk":223}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"public class Storage {"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"    private static final String TODO_SYMBOL \u003d \"T\";"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"    private static final String DEADLINE_SYMBOL \u003d \"D\";"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    private static final String EVENT_SYMBOL \u003d \"E\";"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"    private static final int TODO_RECORD_LENGTH \u003d 3;"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"    private static final int DEADLINE_RECORD_LENGTH \u003d 4;"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"    private static final int EVENT_RECORD_LENGTH \u003d 4;"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"    private static final int TASK_RECORD_SYMBOL_INDEX \u003d 0;"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"    private static final int TASK_RECORD_IS_DONE_STATUS_INDEX \u003d 1;"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"    private static final int TASK_RECORD_DESCRIPTION_INDEX \u003d 2;"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"    private static final int TASK_RECORD_DESCRIPTION_2_INDEX \u003d 3;"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"    private static final String IS_DONE_STATUS \u003d \"1\";"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"    private static final String IS_NOT_DONE_STATUS \u003d \"0\";"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"    private Ui ui;"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"    private File saveFile;"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"    private TaskList tasks;"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"    public Storage(Ui ui, String filePath) {"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"        this.ui \u003d ui;"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"        this.saveFile \u003d new File(filePath);"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"    public void setTaskList(TaskList tasks) {"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"    public ArrayList\u003cTask\u003e loadStoredTasksData() {"},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":"        ArrayList\u003cTask\u003e storedTasks;"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"            storedTasks \u003d readFromSaveFile();"},{"lineNumber":40,"author":{"gitId":"gerardtwk"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"            createNewFile();"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"            storedTasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"gerardtwk"},"content":"        return storedTasks;"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"    private ArrayList\u003cTask\u003e readFromSaveFile() throws FileNotFoundException {"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"        ArrayList\u003cTask\u003e storedTasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"        Scanner saveFileScanner \u003d new Scanner(saveFile);"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"        int lineNum \u003d 0;"},{"lineNumber":51,"author":{"gitId":"gerardtwk"},"content":"        while (saveFileScanner.hasNextLine()) {"},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"            lineNum++;"},{"lineNumber":53,"author":{"gitId":"gerardtwk"},"content":"            String[] currentTaskRecordInfoWords \u003d saveFileScanner.nextLine().split(\"\\\\|\");"},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"            stripWhiteSpacesForEachWord(currentTaskRecordInfoWords);"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"            processCurrentTaskRecord(currentTaskRecordInfoWords, lineNum, storedTasks);"},{"lineNumber":56,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"        saveFileScanner.close();"},{"lineNumber":58,"author":{"gitId":"gerardtwk"},"content":"        return storedTasks;"},{"lineNumber":59,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":61,"author":{"gitId":"gerardtwk"},"content":"    private void stripWhiteSpacesForEachWord(String[] currentTaskRecordInfoWords) {"},{"lineNumber":62,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c currentTaskRecordInfoWords.length; i++) {"},{"lineNumber":63,"author":{"gitId":"gerardtwk"},"content":"            currentTaskRecordInfoWords[i] \u003d currentTaskRecordInfoWords[i].strip();"},{"lineNumber":64,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":67,"author":{"gitId":"gerardtwk"},"content":"    private void processCurrentTaskRecord(String[] currentTaskRecordInfoWords, int lineNum,"},{"lineNumber":68,"author":{"gitId":"gerardtwk"},"content":"                                          ArrayList\u003cTask\u003e storedTasks) {"},{"lineNumber":69,"author":{"gitId":"gerardtwk"},"content":"        Task currentTask;"},{"lineNumber":70,"author":{"gitId":"gerardtwk"},"content":"        boolean isValidTodoRecord \u003d currentTaskRecordInfoWords[TASK_RECORD_SYMBOL_INDEX].equals(TODO_SYMBOL) \u0026\u0026"},{"lineNumber":71,"author":{"gitId":"gerardtwk"},"content":"                (currentTaskRecordInfoWords.length \u003d\u003d TODO_RECORD_LENGTH);"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":"        boolean isValidDeadlineRecord \u003d currentTaskRecordInfoWords[TASK_RECORD_SYMBOL_INDEX].equals(DEADLINE_SYMBOL) \u0026\u0026"},{"lineNumber":73,"author":{"gitId":"gerardtwk"},"content":"                (currentTaskRecordInfoWords.length \u003d\u003d DEADLINE_RECORD_LENGTH);"},{"lineNumber":74,"author":{"gitId":"gerardtwk"},"content":"        boolean isValidEventRecord \u003d currentTaskRecordInfoWords[TASK_RECORD_SYMBOL_INDEX].equals(EVENT_SYMBOL) \u0026\u0026"},{"lineNumber":75,"author":{"gitId":"gerardtwk"},"content":"                (currentTaskRecordInfoWords.length \u003d\u003d EVENT_RECORD_LENGTH);"},{"lineNumber":76,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":77,"author":{"gitId":"gerardtwk"},"content":"        if (isValidTodoRecord) {"},{"lineNumber":78,"author":{"gitId":"gerardtwk"},"content":"            currentTask \u003d new Todo(currentTaskRecordInfoWords[TASK_RECORD_DESCRIPTION_INDEX]);"},{"lineNumber":79,"author":{"gitId":"gerardtwk"},"content":"        } else if (isValidDeadlineRecord) {"},{"lineNumber":80,"author":{"gitId":"gerardtwk"},"content":"            currentTask \u003d new Deadline(currentTaskRecordInfoWords[TASK_RECORD_DESCRIPTION_INDEX],"},{"lineNumber":81,"author":{"gitId":"gerardtwk"},"content":"                    currentTaskRecordInfoWords[TASK_RECORD_DESCRIPTION_2_INDEX]);"},{"lineNumber":82,"author":{"gitId":"gerardtwk"},"content":"        } else if (isValidEventRecord) {"},{"lineNumber":83,"author":{"gitId":"gerardtwk"},"content":"            currentTask \u003d new Event(currentTaskRecordInfoWords[TASK_RECORD_DESCRIPTION_INDEX],"},{"lineNumber":84,"author":{"gitId":"gerardtwk"},"content":"                    currentTaskRecordInfoWords[TASK_RECORD_DESCRIPTION_2_INDEX]);"},{"lineNumber":85,"author":{"gitId":"gerardtwk"},"content":"        } else {"},{"lineNumber":86,"author":{"gitId":"gerardtwk"},"content":"            ui.printBadTaskRecordFormatErrorMsg(lineNum);"},{"lineNumber":87,"author":{"gitId":"gerardtwk"},"content":"            return;"},{"lineNumber":88,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":90,"author":{"gitId":"gerardtwk"},"content":"        if (currentTaskRecordInfoWords[TASK_RECORD_IS_DONE_STATUS_INDEX].equals(IS_DONE_STATUS)) {"},{"lineNumber":91,"author":{"gitId":"gerardtwk"},"content":"            currentTask.markAsDone();"},{"lineNumber":92,"author":{"gitId":"gerardtwk"},"content":"        } else if (!currentTaskRecordInfoWords[TASK_RECORD_IS_DONE_STATUS_INDEX].equals(IS_NOT_DONE_STATUS)) {"},{"lineNumber":93,"author":{"gitId":"gerardtwk"},"content":"            ui.printBadTaskRecordFormatErrorMsg(lineNum);"},{"lineNumber":94,"author":{"gitId":"gerardtwk"},"content":"            return;"},{"lineNumber":95,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"gerardtwk"},"content":"        storedTasks.add(currentTask);"},{"lineNumber":97,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":99,"author":{"gitId":"gerardtwk"},"content":"    private void createNewFile() {"},{"lineNumber":100,"author":{"gitId":"gerardtwk"},"content":"        try {"},{"lineNumber":101,"author":{"gitId":"gerardtwk"},"content":"            if (saveFile.createNewFile()) {"},{"lineNumber":102,"author":{"gitId":"gerardtwk"},"content":"                ui.printCreatedSaveFileMsg(saveFile.getAbsolutePath());"},{"lineNumber":103,"author":{"gitId":"gerardtwk"},"content":"                return;"},{"lineNumber":104,"author":{"gitId":"gerardtwk"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"gerardtwk"},"content":"            throw new IOException();"},{"lineNumber":106,"author":{"gitId":"gerardtwk"},"content":"        } catch (IOException e) {"},{"lineNumber":107,"author":{"gitId":"gerardtwk"},"content":"            ui.printCreateSaveFileErrorMsg(saveFile.getAbsolutePath());"},{"lineNumber":108,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":111,"author":{"gitId":"gerardtwk"},"content":"    public void saveStoredTasksData() {"},{"lineNumber":112,"author":{"gitId":"gerardtwk"},"content":"        try {"},{"lineNumber":113,"author":{"gitId":"gerardtwk"},"content":"            writeToSaveFile();"},{"lineNumber":114,"author":{"gitId":"gerardtwk"},"content":"        } catch (IOException e) {"},{"lineNumber":115,"author":{"gitId":"gerardtwk"},"content":"            ui.printWritingSaveFileErrorMsg(saveFile.getAbsolutePath());"},{"lineNumber":116,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":119,"author":{"gitId":"gerardtwk"},"content":"    private void writeToSaveFile() throws IOException {"},{"lineNumber":120,"author":{"gitId":"gerardtwk"},"content":"        FileWriter saveFileWriter \u003d new FileWriter(saveFile);"},{"lineNumber":121,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c tasks.getTaskCount(); i++) {"},{"lineNumber":122,"author":{"gitId":"gerardtwk"},"content":"            Task currentTask \u003d tasks.getTaskAt(i);"},{"lineNumber":123,"author":{"gitId":"gerardtwk"},"content":"            saveFileWriter.write(currentTask.getSaveFormatString() + \"\\n\");"},{"lineNumber":124,"author":{"gitId":"gerardtwk"},"content":"            saveFileWriter.flush();"},{"lineNumber":125,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"gerardtwk"},"content":"        saveFileWriter.close();"},{"lineNumber":127,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"gerardtwk":128}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"public abstract class Task {"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"    private String description;"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"    private boolean isDone;"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"    private String getDescription() {"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"        return this.description;"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"    private String getStatusIcon() {"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"        return (this.isDone ? \"X\" : \" \");"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"    public void markAsDone() {"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"    public String getSaveFormatString() {"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"        return (this.isDone ? \"1\" : \"0\") + \" | \" + this.getDescription();"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"gerardtwk":30}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"public class TaskList {"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"    private ArrayList\u003cTask\u003e storedTasks;"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"    public TaskList(ArrayList\u003cTask\u003e storedTasks) {"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"        this.storedTasks \u003d storedTasks;"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"    public void addTask(Task taskToAdd) {"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"        storedTasks.add(taskToAdd);"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"    public Task getTaskAt(int taskIndex) {"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"        return storedTasks.get(taskIndex);"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"    public Task deleteTask(int taskIndex) {"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"        return storedTasks.remove(taskIndex);"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"    public TaskList findTasksByKeyword(String keyword) {"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"        ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"        for (Task currentTask: storedTasks) {"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"            if (currentTask.toString().contains(keyword)) {"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"                tasksFound.add(currentTask);"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"        return new TaskList(tasksFound);"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"    public boolean isEmpty() {"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"        return storedTasks.isEmpty();"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"    public int getTaskCount() {"},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":"        return storedTasks.size();"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"gerardtwk":39}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"    public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"    public String getSaveFormatString() {"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"        return \"T | \" + super.getSaveFormatString();"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"gerardtwk":15}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\";"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"    private Scanner scanner;"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"    private TaskList tasks;"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"    public Ui() {"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"        this.scanner \u003d new Scanner(System.in);"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"    public void setTaskList(TaskList tasks) {"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"    public void printBadTaskRecordFormatErrorMsg(int lineNum) {"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Bad task record format detected at line \" + lineNum + \" in save file! \" +"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"                \"Skipping this record...\");"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"    public void printCreatedSaveFileMsg(String saveFilePath) {"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Created a new save file called \u0027\" + saveFilePath + \"\u0027\");"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"    public void printCreateSaveFileErrorMsg(String saveFilePath) {"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\" OPPS! An I/O Error occurred when attempting to create the save file \" +"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"                \"\u0027\" + saveFilePath + \"\u0027!\");"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":"    public void printWelcomeMsg() {"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(logo);"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":40,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Before we begin, do note that I am only able to accept lowercase commands.\");"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Now, what can I do for you?\");"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"    public String getCommandFromUser() throws NoSuchElementException {"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":"        return scanner.nextLine().strip();"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"    public void printWritingSaveFileErrorMsg(String saveFilePath) {"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\" OPPS! An I/O Error occurred when attempting to write into \" +"},{"lineNumber":51,"author":{"gitId":"gerardtwk"},"content":"                \"\u0027\" + saveFilePath + \"\u0027!\");"},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"    public void printStoreTaskMsg(Task taskStored, int taskCount) {"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":56,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"   \" + taskStored);"},{"lineNumber":58,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\" Now you have \" + taskCount + \" tasks in the list.\");"},{"lineNumber":59,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":62,"author":{"gitId":"gerardtwk"},"content":"    public void printTasksFound(TaskList tasksFound) {"},{"lineNumber":63,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":64,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\" Here are the matching tasks in your list:\");"},{"lineNumber":65,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c tasksFound.getTaskCount(); i++) {"},{"lineNumber":66,"author":{"gitId":"gerardtwk"},"content":"            Task currentTask \u003d tasksFound.getTaskAt(i);"},{"lineNumber":67,"author":{"gitId":"gerardtwk"},"content":"            System.out.printf(\" %d.%s\\n\", (i + 1), currentTask);"},{"lineNumber":68,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":70,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":"    public void printEmptyTaskListMsg() {"},{"lineNumber":73,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":74,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\" You have no tasks in your list! :)\");"},{"lineNumber":75,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":76,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":78,"author":{"gitId":"gerardtwk"},"content":"    public void printStoredTasks() {"},{"lineNumber":79,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":80,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\" Here are the tasks in your list:\");"},{"lineNumber":81,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c tasks.getTaskCount(); i++) {"},{"lineNumber":82,"author":{"gitId":"gerardtwk"},"content":"            Task currentTask \u003d tasks.getTaskAt(i);"},{"lineNumber":83,"author":{"gitId":"gerardtwk"},"content":"            System.out.printf(\" %d.%s\\n\", (i + 1), currentTask);"},{"lineNumber":84,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":86,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":88,"author":{"gitId":"gerardtwk"},"content":"    public void printMarkTaskAsDoneMsg(Task taskMarked) {"},{"lineNumber":89,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":90,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":91,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"   \" + taskMarked);"},{"lineNumber":92,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":93,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":95,"author":{"gitId":"gerardtwk"},"content":"    public void printDeleteTaskMsg(Task deletedTask) {"},{"lineNumber":96,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":97,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\");"},{"lineNumber":98,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"   \" + deletedTask);"},{"lineNumber":99,"author":{"gitId":"gerardtwk"},"content":"        System.out.println((tasks.isEmpty()) ? \" Now you have no more tasks left in the list! :)\" :"},{"lineNumber":100,"author":{"gitId":"gerardtwk"},"content":"                \" Now you have \" + tasks.getTaskCount() + \" tasks in the list.\");"},{"lineNumber":101,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":102,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":104,"author":{"gitId":"gerardtwk"},"content":"    public void printExitMsg() {"},{"lineNumber":105,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":106,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");"},{"lineNumber":107,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":108,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":110,"author":{"gitId":"gerardtwk"},"content":"    public void printCommandErrorMsg(String errorMsg) {"},{"lineNumber":111,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":112,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\" \" + errorMsg);"},{"lineNumber":113,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":114,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":116,"author":{"gitId":"gerardtwk"},"content":"    public void closeScanner() {"},{"lineNumber":117,"author":{"gitId":"gerardtwk"},"content":"        scanner.close();"},{"lineNumber":118,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"gerardtwk"},"content":"}"},{"lineNumber":120,"author":{"gitId":"gerardtwk"},"content":""}],"authorContributionMap":{"gerardtwk":120}}]
