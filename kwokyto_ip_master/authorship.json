[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"Event~false~ryan attend CS2113 lecture~friday 19 feb 2021 from 4-6pm"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"Todo~false~testing"}],"authorContributionMap":{"kwokyto":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"# Duke User Guide"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"Duke is a Personal Assistant Chatbot that helps a person to keep track of various things. The name Duke was chosen in honor of Duke, the Java Mascot."},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"\u003cbr /\u003e\u003cbr /\u003e"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"### Tracks Tasks "},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"Duke helps to keep track of tasks such as todos, deadlines, and events. "},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"### Maintains Due Dates"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"Due dates can be added for deadlines and event tasks."},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"### Easy Viewing/Searching of Tasks"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"Tasks can be easily listed or filtered based on search string."},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"### View Urgent Tasks"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"List all urgent tasks that are within the next week."},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"### No Lost Data"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"Saves data upon exit and loads data upon start to keep track of progress."},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"\u003cbr /\u003e\u003cbr /\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"### `todo taskName` - add a todo task"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"Add a todo task"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"```"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e todo team project"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"Alrighty! I have added this new Todo:"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"    [TD][ ] team project"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"You now have 1 tasks in the list."},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"```"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"### `deadline deadlineName /by dd/mm/yyyy hhmm` - add a deadline"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"Add a deadline task with a due date. Date and time must be specified with the given format."},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"```"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e deadline individual project /by 09/03/2021 2359"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"Alrighty! I have added this new Deadline:"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"    [DL][ ] individual project (by: 09/03/2021 2359)"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"You now have 2 tasks in the list."},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"```"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"### `event eventName /at dd/mm/yyyy hhmm` - add an event"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"Add an event occuring on a date. Date and time must be specified with the given format."},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"```"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e event lecture /at 28/10/2021 1200"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"Alrighty! I have added this new Event:"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"    [EV][ ] lecture (at: 28/10/2021 1200)"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"You now have 3 tasks in the list."},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"```"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"### `list` - displays all tasks"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"Displays all existing tasks with its type, complete status, and due date (if applicable)"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"```"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e list"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"Here are the tasks in your list:"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"    1. [TD][ ] team project"},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":"    2. [DL][ ] individual project (by: 09/03/2021 2359)"},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"    3. [EV][ ] lecture (at: 28/10/2021 1200)"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":64,"author":{"gitId":"kwokyto"},"content":"```"},{"lineNumber":65,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":66,"author":{"gitId":"kwokyto"},"content":"### `done taskNumber` - mark task as complete"},{"lineNumber":67,"author":{"gitId":"kwokyto"},"content":"Marks task with specified task number as complete."},{"lineNumber":68,"author":{"gitId":"kwokyto"},"content":"```"},{"lineNumber":69,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e list"},{"lineNumber":70,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":71,"author":{"gitId":"kwokyto"},"content":"Here are the tasks in your list:"},{"lineNumber":72,"author":{"gitId":"kwokyto"},"content":"    1. [TD][ ] team project"},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"    2. [DL][ ] individual project (by: 09/03/2021 2359)"},{"lineNumber":74,"author":{"gitId":"kwokyto"},"content":"    3. [EV][ ] lecture (at: 28/10/2021 1200)"},{"lineNumber":75,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":76,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e done 2"},{"lineNumber":77,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":78,"author":{"gitId":"kwokyto"},"content":"Very nice! I\u0027ve marked this task as done:"},{"lineNumber":79,"author":{"gitId":"kwokyto"},"content":"    [DL][X] individual project (by: 09/03/2022 2359)"},{"lineNumber":80,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":81,"author":{"gitId":"kwokyto"},"content":"```"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"kwokyto"},"content":"### `urgent` - displays all urgent task"},{"lineNumber":84,"author":{"gitId":"kwokyto"},"content":"Displays all urgent tasks that are due within one week. Todo tasks are urgent by default. Completed tasks are not urgent."},{"lineNumber":85,"author":{"gitId":"kwokyto"},"content":"```"},{"lineNumber":86,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e urgent // when executed on 04/03/2021"},{"lineNumber":87,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":88,"author":{"gitId":"kwokyto"},"content":"Here are the urgent tasks due in the next week:"},{"lineNumber":89,"author":{"gitId":"kwokyto"},"content":"    1. [TD][ ] team project"},{"lineNumber":90,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":91,"author":{"gitId":"kwokyto"},"content":"```"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"kwokyto"},"content":"### `find searchString` - finds tasks containing string"},{"lineNumber":94,"author":{"gitId":"kwokyto"},"content":"Displays list of tasks containing a given string"},{"lineNumber":95,"author":{"gitId":"kwokyto"},"content":"```"},{"lineNumber":96,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e find project"},{"lineNumber":97,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":98,"author":{"gitId":"kwokyto"},"content":"Here are the matching tasks in your list:"},{"lineNumber":99,"author":{"gitId":"kwokyto"},"content":"    1. [TD][ ] team project"},{"lineNumber":100,"author":{"gitId":"kwokyto"},"content":"    2. [DL][X] individual project (by: 09/03/2022 2359)"},{"lineNumber":101,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":102,"author":{"gitId":"kwokyto"},"content":"```"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"kwokyto"},"content":"### `delete taskNumber` - delete task"},{"lineNumber":105,"author":{"gitId":"kwokyto"},"content":"Deletes task with specified task number."},{"lineNumber":106,"author":{"gitId":"kwokyto"},"content":"```"},{"lineNumber":107,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e list"},{"lineNumber":108,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":109,"author":{"gitId":"kwokyto"},"content":"Here are the tasks in your list:"},{"lineNumber":110,"author":{"gitId":"kwokyto"},"content":"    1. [TD][ ] team project"},{"lineNumber":111,"author":{"gitId":"kwokyto"},"content":"    2. [DL][X] individual project (by: 09/03/2021 2359)"},{"lineNumber":112,"author":{"gitId":"kwokyto"},"content":"    3. [EV][ ] lecture (at: 28/10/2021 1200)"},{"lineNumber":113,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":114,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e delete 1"},{"lineNumber":115,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":116,"author":{"gitId":"kwokyto"},"content":"Yay! I\u0027ve successfuly deleted this task:"},{"lineNumber":117,"author":{"gitId":"kwokyto"},"content":"    [DL][X] individual project (by: 09/03/2022 2359)"},{"lineNumber":118,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":119,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e list"},{"lineNumber":120,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":121,"author":{"gitId":"kwokyto"},"content":"Here are the tasks in your list:"},{"lineNumber":122,"author":{"gitId":"kwokyto"},"content":"    1. [TD][ ] team project"},{"lineNumber":123,"author":{"gitId":"kwokyto"},"content":"    2. [EV][ ] lecture (at: 28/10/2022 1200)"},{"lineNumber":124,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":125,"author":{"gitId":"kwokyto"},"content":"```"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"kwokyto"},"content":"### `help` - Displays the list of commands and format"},{"lineNumber":128,"author":{"gitId":"kwokyto"},"content":"Displays all available commands and their corresponding formats."},{"lineNumber":129,"author":{"gitId":"kwokyto"},"content":"```"},{"lineNumber":130,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e help"},{"lineNumber":131,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":132,"author":{"gitId":"kwokyto"},"content":"Commands:"},{"lineNumber":133,"author":{"gitId":"kwokyto"},"content":"    todo taskName"},{"lineNumber":134,"author":{"gitId":"kwokyto"},"content":"    deadline deadlineName /by dd/mm/yyyy hhmm"},{"lineNumber":135,"author":{"gitId":"kwokyto"},"content":"    event eventName /at dd/mm/yyyy hhmm"},{"lineNumber":136,"author":{"gitId":"kwokyto"},"content":"    list"},{"lineNumber":137,"author":{"gitId":"kwokyto"},"content":"    urgent"},{"lineNumber":138,"author":{"gitId":"kwokyto"},"content":"    done taskNumber"},{"lineNumber":139,"author":{"gitId":"kwokyto"},"content":"    find searchString"},{"lineNumber":140,"author":{"gitId":"kwokyto"},"content":"    delete taskNumber"},{"lineNumber":141,"author":{"gitId":"kwokyto"},"content":"    help"},{"lineNumber":142,"author":{"gitId":"kwokyto"},"content":"    bye"},{"lineNumber":143,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":144,"author":{"gitId":"kwokyto"},"content":"```"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"kwokyto"},"content":"### `bye` - Exits the program"},{"lineNumber":147,"author":{"gitId":"kwokyto"},"content":"Ends the program and exits"},{"lineNumber":148,"author":{"gitId":"kwokyto"},"content":"```"},{"lineNumber":149,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e bye"},{"lineNumber":150,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":151,"author":{"gitId":"kwokyto"},"content":"Sad to see you go! ): See you soon!"},{"lineNumber":152,"author":{"gitId":"kwokyto"},"content":"_______________________________________________________________________________"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"kwokyto"},"content":"```"}],"authorContributionMap":{"kwokyto":143,"-":11}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"import duke.commands.Command;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"import duke.task.TaskList;"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import duke.util.Parser;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import duke.util.Storage;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import duke.util.Ui;"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":" * \u003ch1\u003eDuke\u003c/h1\u003e"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":" * The Duke program acts as a calendar that saves user\u0027s to-dos, deadlines, and events."},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":" * "},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":" * @author kwokyto"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":" * @version v0.2"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    public static Ui ui;"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    public static TaskList taskList;"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    private static Storage storage;"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    private static String home;"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    private static Parser parser;"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    public Duke() {"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"        ui \u003d new Ui();"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"        taskList \u003d new TaskList();"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"        storage \u003d new Storage(ui);"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        home \u003d System.getProperty(\"user.dir\");"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"        parser \u003d new Parser();"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"        new Duke();"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"        storage.loadHistory(home, taskList, parser);"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"        ui.displayWelcomeMessage(taskList, ui, parser);"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"        run();"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"        storage.saveHistory(home, taskList);"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"        ui.displayExitMessage();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"     * Executes the main Duke function"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"    public static void run() {"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"\t    boolean isExit \u003d false;"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"\t    while (!isExit) {"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"            String fullCommand \u003d ui.readLine();"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"\t        Command command \u003d parser.getCommand(fullCommand);"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"            try {"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"\t            command.execute(taskList, ui, parser);"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"\t            isExit \u003d command.isExit();"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"\t        } catch (Exception e) {"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"\t            ui.printErrorMessage(e);"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"\t        }"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"\t    }"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"\t}"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"kwokyto":50,"-":4}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"Todo~false~homework 1"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"Deadline~false~assignment 1~09/03/1999 2359"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"Event~false~my birthday~09/03/1999 0000"}],"authorContributionMap":{"kwokyto":3}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import duke.util.Parser;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import duke.util.Ui;"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":" * Represents the exit command given by the user."},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"public class ByeCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    public ByeCommand() {"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"        super();"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    public void execute(TaskList taskList, Ui ui, Parser parser) {"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"        setExit(true);"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":20}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import duke.exception.EmptyCommandArgException;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import duke.exception.InvalidCommandException;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import duke.exception.InvalidCommandTimeException;"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import duke.exception.InvalidTaskNumberException;"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"import duke.util.Parser;"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"import duke.util.Ui;"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":" * Represents a command given by the user."},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"public abstract class Command {"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    protected static Ui ui;"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    protected String commandArg;"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    protected boolean isExit;"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    public Command() {"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"        ui \u003d new Ui();"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"        isExit \u003d false;"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"    public Command(String commandArgString) {"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        ui \u003d new Ui();"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"        commandArg \u003d commandArgString;"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"        isExit \u003d false;"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Parser parser) throws EmptyCommandArgException,"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"            InvalidCommandTimeException, InvalidTaskNumberException, InvalidCommandException;"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"    public boolean isEmptyArgument(String commandArg) {"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"        return commandArg.length() \u003d\u003d 0;"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"    public boolean isExit() {"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"        return isExit;"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"    public void setExit(boolean isExit) {"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"        this.isExit \u003d isExit;"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":44}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import duke.exception.EmptyCommandArgException;"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import duke.exception.InvalidCommandTimeException;"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import duke.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"import duke.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"import duke.util.Parser;"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"import duke.util.Ui;"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":" * Represents the deadline command given by the user."},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    public DeadlineCommand(String commandArg) {"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"        super(commandArg);"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    public void execute(TaskList taskList, Ui ui, Parser parser)"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"            throws EmptyCommandArgException, InvalidCommandTimeException {"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"        String commandType \u003d \"deadline\";"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        if (isEmptyArgument(commandArg)) {"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"            throw new EmptyCommandArgException(commandType);"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"        String description \u003d parser.getDescription(commandType, commandArg);"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"        LocalDateTime by \u003d parser.getDateTime(commandType, commandArg);"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"        Deadline task \u003d new Deadline(description, by);"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"        taskList.addTask(task);"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"        ui.printTaskSuccessfullyAddedMessage(task, taskList.getListSize());"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":34}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import duke.util.Parser;"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import duke.util.Ui;"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import duke.exception.EmptyCommandArgException;"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"import duke.exception.InvalidTaskNumberException;"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":" * Represents the delete command given by the user."},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    public DeleteCommand(String commandArg) {"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"        super(commandArg);"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    public void execute(TaskList taskList, Ui ui, Parser parser) throws EmptyCommandArgException, InvalidTaskNumberException {"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"        if (isEmptyArgument(commandArg)) {"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"            throw new EmptyCommandArgException(\"delete\");"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"        int taskNumber \u003d Parser.getTaskNumber(commandArg, taskList);"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        Task task \u003d taskList.getTask(taskNumber - 1);"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"        taskList.deleteTask(taskNumber - 1);"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"        ui.printTaskSuccessfullyDeletedMessage(task);"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":29}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import duke.util.Parser;"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import duke.util.Ui;"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import duke.exception.EmptyCommandArgException;"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"import duke.exception.InvalidTaskNumberException;"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":" * Represents the done command given by the user."},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"public class DoneCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    public DoneCommand(String commandArg) {"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"        super(commandArg);"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    public void execute(TaskList taskList, Ui ui, Parser parser) throws EmptyCommandArgException, InvalidTaskNumberException {"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"        if (isEmptyArgument(commandArg)) {"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"            throw new EmptyCommandArgException(\"done\");"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"        int taskNumber \u003d Parser.getTaskNumber(commandArg, taskList);"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        Task task \u003d taskList.getTask(taskNumber - 1);"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"        task.setIsDone();"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"        ui.printSuccessfullyMarkedDoneMessage(task);"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":29}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import duke.exception.EmptyCommandArgException;"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import duke.exception.InvalidCommandTimeException;"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import duke.task.Event;"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"import duke.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"import duke.util.Parser;"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"import duke.util.Ui;"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":" * Represents the event command given by the user."},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"public class EventCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    public EventCommand(String commandArg) {"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"        super(commandArg);"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    public void execute(TaskList taskList, Ui ui, Parser parser)"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"            throws EmptyCommandArgException, InvalidCommandTimeException {"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"        String commandType \u003d \"event\";"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        if (isEmptyArgument(commandArg)) {"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"            throw new EmptyCommandArgException(commandType);"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"        String description \u003d parser.getDescription(commandType, commandArg);"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"        LocalDateTime at \u003d parser.getDateTime(commandType, commandArg);"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"        Event task \u003d new Event(description, at);"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"        taskList.addTask(task);"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"        ui.printTaskSuccessfullyAddedMessage(task, taskList.getListSize());"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":34}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import duke.exception.EmptyCommandArgException;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import duke.util.Parser;"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import duke.util.Ui;"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"public class FindCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    public FindCommand(String commandArg) {"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"        super(commandArg);"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    public void execute(TaskList taskList, Ui ui, Parser parser) throws EmptyCommandArgException {"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"        if (isEmptyArgument(commandArg)) {"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"            throw new EmptyCommandArgException(\"find\");"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"        TaskList filteredList \u003d new TaskList();"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"        for (Task task : taskList.getTaskList()) {"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"            String description \u003d task.getDescription();"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"            if (description.contains(commandArg)) {"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"                filteredList.addTask(task);"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"        if (filteredList.getListSize() \u003d\u003d 0) {"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"            ui.displayNoResultsFoundMessage(commandArg);"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"            ui.printFindCommandResults(filteredList);"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":34}},{"path":"src/main/java/duke/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import duke.util.Parser;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import duke.util.Ui;"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":" * Represents the help command given by the user."},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"public class HelpCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    public HelpCommand() {"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"        super();"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    public void execute(TaskList taskList, Ui ui, Parser parser) {"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"        ui.printHelpMessage();"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":20}},{"path":"src/main/java/duke/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import duke.exception.InvalidCommandException;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import duke.util.Parser;"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import duke.util.Ui;"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":" * Represents the command given by the user if it does not match any of the default commands."},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"public class InvalidCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"    public InvalidCommand(String commandArg) {"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"        super(commandArg);"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    public void execute(TaskList taskList, Ui ui, Parser parser) throws InvalidCommandException {"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"        throw new InvalidCommandException(commandArg);"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":21}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import duke.util.Parser;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import duke.util.Ui;"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":" * Represents the list command given by the user."},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    public ListCommand() {"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"        super();"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    public void execute(TaskList taskList, Ui ui, Parser parser) {"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"        ui.listAllTasks(taskList);"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":20}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import duke.task.Todo;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import duke.util.Parser;"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import duke.util.Ui;"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import duke.exception.EmptyCommandArgException;"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":" * Represents the todo command given by the user."},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"public class TodoCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    public TodoCommand(String commandArg) {"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"        super(commandArg);"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    public void execute(TaskList taskList, Ui ui, Parser parser) throws EmptyCommandArgException {"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"        if (isEmptyArgument(commandArg)) {"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"            throw new EmptyCommandArgException(\"todo\");"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"        Todo task \u003d new Todo(commandArg);"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"        taskList.addTask(task);"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        ui.printTaskSuccessfullyAddedMessage(task, taskList.getListSize());"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":27}},{"path":"src/main/java/duke/commands/UrgentCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import duke.util.Parser;"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import duke.util.Ui;"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"public class UrgentCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    private TaskList urgentList;"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    public UrgentCommand() {"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"        super();"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"        this.urgentList \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    public void execute(TaskList taskList, Ui ui, Parser parser) {"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"        for (int i \u003d 0; i \u003c taskList.getListSize(); i +\u003d 1) {"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"            Task task \u003d taskList.getTask(i);"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"            if (task.isUrgent()) {"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"                urgentList.addTask(task);"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        if (this.urgentList.getListSize() \u003d\u003d 0) {"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"            ui.displayNoUrgentTasksMessage();"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"            String listOfTasksString \u003d ui.getListOfTasksString(this.urgentList);"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"            ui.displayUrgentTasks(listOfTasksString);"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":32}},{"path":"src/main/java/duke/exception/EmptyCommandArgException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":" * Represents the Exception when user does not provide a command argument when exepcted to."},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"public class EmptyCommandArgException extends Exception {"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"    private String errorMessage;"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"    private String commandType;"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    public EmptyCommandArgException(String commandType) {"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"        this.commandType \u003d commandType;"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    public String getMessage() {"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"        errorMessage \u003d \"Command type of \u0027\" + this.commandType + \"\u0027 must have a description! ):\";"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"        return errorMessage;"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":19}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import duke.util.Ui;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":" * Represents the Exception when the user does not provide a recognised command."},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"    private String command;"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    private static String invalidCommandResponse \u003d \" is not a valid command!\\n\";"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    public InvalidCommandException(String command) {"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"        this.command \u003d command;"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    public String getMessage() {"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"        return \"\u0027\" + this.command + \"\u0027\" + invalidCommandResponse + Ui.COMMANDS;"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":18}},{"path":"src/main/java/duke/exception/InvalidCommandTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":" * Represents the Exception when the user does not provide a valid date and time."},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":" * This applies to the \u0027deadline\u0027 and \u0027event\u0027 commands."},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"public class InvalidCommandTimeException extends Exception {"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"    private String errorMessage;"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"    private String commandType;"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    private String parseErrorMessage;"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    public InvalidCommandTimeException(String commandType, Exception e) {"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"        this.commandType \u003d commandType;"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"        this.parseErrorMessage \u003d e.getLocalizedMessage();"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    public String getMessage() {"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"        String timeCommand \u003d null;"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"        switch (this.commandType) {"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"        case \"deadline\":"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"            timeCommand \u003d \"/by\";"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"            break;"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"        case \"event\":"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"            timeCommand \u003d \"/at\";"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"            break;"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"        errorMessage \u003d \"Command type of \\\u0027\" + this.commandType + \"\\\u0027 must define a time using:\\n   \""},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"                + this.commandType + \" taskName \" + timeCommand + \" dd/mm/yyyy hhmm\\n\""},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"                + parseErrorMessage;"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"        return errorMessage;"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":32}},{"path":"src/main/java/duke/exception/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":" * Represents the Exception when the user does not provide a valid task number."},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":" * This applies to the \u0027done\u0027 and \u0027delete\u0027 command."},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"public class InvalidTaskNumberException extends Exception {"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"    private static String errorMessage \u003d \" is not a valid task number.\";"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"    private String input;"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    public InvalidTaskNumberException(String input) {"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"        this.input \u003d input;"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    public InvalidTaskNumberException(int input) {"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"        this.input \u003d Integer.toString(input);"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    public String getMessage() {"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"        return \"\u0027\" + this.input + \"\u0027\" + errorMessage;"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":22}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":" * Represents a deadline created by the user. A \u003ccode\u003eDeadline\u003c/code\u003e corresponds to"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":" * a task description, its completed status, and its due date."},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    public LocalDateTime by;"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"        this.by \u003d by;"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"        return \"[DL]\" + super.toString() + \" (by: \" + this.getBy() + \")\";"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"    public String getBy() {"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"        String byString \u003d this.by.format(formatter);"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"        return byString;"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"    public boolean isUrgent() {"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"        if (this.isDone()) {"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"            return false;"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"        LocalDateTime weekDateTime \u003d LocalDateTime.now().plusDays(7);"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"        return this.by.isBefore(weekDateTime);"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":38}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":" * Represents an event created by the user. An \u003ccode\u003eEvent\u003c/code\u003e corresponds to"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":" * a task description, its completed status, and its due date."},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"public class Event extends Task {"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    public LocalDateTime at;"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    public Event(String description, LocalDateTime at) {"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"        this.at \u003d at;"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"        return \"[EV]\" + super.toString() + \" (at: \" + this.getAt() + \")\";"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"    public String getAt() {"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"        String atString \u003d this.at.format(formatter);"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"        return atString;"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"    public boolean isUrgent() {"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"        if (this.isDone()) {"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"            return false;"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"        LocalDateTime weekDateTime \u003d LocalDateTime.now().plusDays(7);"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"        return this.at.isBefore(weekDateTime);"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":38}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":" * Represents a task created by the user. A \u003ccode\u003eTask\u003c/code\u003e corresponds to"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":" * a task description and its completed status."},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"public class Task {"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    protected boolean isDone;"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    public Task(String description) {"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"        this.isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    public String getStatusIcon() {"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"        return (isDone() ? \"X\" : \" \");"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    public String getDescription() {"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"        return description;"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"    public boolean isDone() {"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"        return isDone;"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"    public void setIsDone() {"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"        this.isDone \u003d true;"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + getDescription();"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"    public boolean isUrgent() {"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"        return !this.isDone();"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":41}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":" * Represents a collection of all \u003ccode\u003eTask\u003c/code\u003e created by the user."},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    public TaskList() {"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    public int getListSize() {"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"        return this.taskList.size();"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"        return this.taskList;"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"     * Returns the task at a particular index."},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"     * @param index index to get task from"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"     * @return task at index"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"    public Task getTask(int index) {"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"        return this.taskList.get(index);"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"    public void addTask(Task task) {"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"        this.taskList.add(task);"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"    public void deleteTask(int index) {"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"        this.taskList.remove(index);"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"     * Returns a list of task details of all tasks in the task list."},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"     * Details in each task are delimited with \u0027~\u0027."},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"     * @return ArrayList\u003cString\u003e list of task details"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"    public ArrayList\u003cString\u003e getListOfTaskDetails() {"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"        ArrayList\u003cString\u003e listOfTaskDetails \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"        for (Task task : getTaskList()) {"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"            if (task \u003d\u003d null) {"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"                break;"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"            String taskType \u003d task.getClass().getSimpleName();"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"            String isDone \u003d String.valueOf(task.isDone());"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"            String taskDescription \u003d task.getDescription();"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"            String taskDetails \u003d taskType + \"~\" + isDone + \"~\" + taskDescription;"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"            taskDetails \u003d addTaskTimingsToDetails(task, taskDetails);"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"            listOfTaskDetails.add(taskDetails);"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"        return listOfTaskDetails;"},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"kwokyto"},"content":"     * Returns the task details of a task."},{"lineNumber":65,"author":{"gitId":"kwokyto"},"content":"     * Adds the due dates of deadline and event tasks to their taskDetails string."},{"lineNumber":66,"author":{"gitId":"kwokyto"},"content":"     * Details in each task are delimited with \u0027~\u0027."},{"lineNumber":67,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":68,"author":{"gitId":"kwokyto"},"content":"     * @param task a \u003ccode\u003eTask\u003c/code\u003e object"},{"lineNumber":69,"author":{"gitId":"kwokyto"},"content":"     * @param taskDetails task details containing task type, done status, and description"},{"lineNumber":70,"author":{"gitId":"kwokyto"},"content":"     * @return updated task details containing task type, done status, description, and due date"},{"lineNumber":71,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"kwokyto"},"content":"    public String addTaskTimingsToDetails(Task task, String taskDetails) {"},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"        if (task instanceof Deadline) {"},{"lineNumber":74,"author":{"gitId":"kwokyto"},"content":"            Deadline deadline \u003d (Deadline) task;"},{"lineNumber":75,"author":{"gitId":"kwokyto"},"content":"            String by \u003d deadline.getBy();"},{"lineNumber":76,"author":{"gitId":"kwokyto"},"content":"            taskDetails +\u003d \"~\" + by;"},{"lineNumber":77,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"kwokyto"},"content":"        if (task instanceof Event) {"},{"lineNumber":79,"author":{"gitId":"kwokyto"},"content":"            Event event \u003d (Event) task;"},{"lineNumber":80,"author":{"gitId":"kwokyto"},"content":"            String at \u003d event.getAt();"},{"lineNumber":81,"author":{"gitId":"kwokyto"},"content":"            taskDetails +\u003d \"~\" + at;"},{"lineNumber":82,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"kwokyto"},"content":"        return taskDetails;"},{"lineNumber":84,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":86,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":86}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":" * Represents a to-do task created by the user. A \u003ccode\u003eTodo\u003c/code\u003e corresponds to"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":" * a task description and its completed status."},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"public class Todo extends Task {"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"    public Todo(String description) {"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"        return \"[TD]\" + super.toString();"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":17}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.util;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import duke.commands.ByeCommand;"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import duke.commands.Command;"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"import duke.commands.DeadlineCommand;"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"import duke.commands.DeleteCommand;"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"import duke.commands.DoneCommand;"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"import duke.commands.EventCommand;"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"import duke.commands.FindCommand;"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"import duke.commands.HelpCommand;"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"import duke.commands.InvalidCommand;"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"import duke.commands.ListCommand;"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"import duke.commands.TodoCommand;"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"import duke.commands.UrgentCommand;"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"import duke.exception.InvalidCommandTimeException;"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"import duke.exception.InvalidTaskNumberException;"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"import duke.task.Deadline;"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"import duke.task.Event;"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"import duke.task.Task;"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"import duke.task.TaskList;"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"import duke.task.Todo;"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":" * Represents an object that deals with making sense of the user command."},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"public class Parser {"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"     * Returns the appropriate \u003ccode\u003eCommand\u003c/code\u003e object based on user input."},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"     * @param fullCommand string containing the full command as provided by user"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"     * @return Command command object"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"    public Command getCommand(String fullCommand) {"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"        String commandType \u003d getCommandType(fullCommand);"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"        String commandArg \u003d getCommandArg(fullCommand);"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"\t    Command command;"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"\t    switch (commandType) {"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"\t    case \"help\":"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"\t        command \u003d new HelpCommand();"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"\t        break;"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"\t    case \"list\":"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"\t        command \u003d new ListCommand();"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"\t        break;"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"\t    case \"done\":"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"\t        command \u003d new DoneCommand(commandArg);"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"\t        break;"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"\t    case \"todo\":"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"\t        command \u003d new TodoCommand(commandArg);"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"\t        break;"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"\t    case \"deadline\":"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"\t        command \u003d new DeadlineCommand(commandArg);"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"\t        break;"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"\t    case \"event\":"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"\t        command \u003d new EventCommand(commandArg);"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"\t        break;"},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":"\t    case \"delete\":"},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"\t        command \u003d new DeleteCommand(commandArg);"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"            break;"},{"lineNumber":64,"author":{"gitId":"kwokyto"},"content":"        case \"urgent\":"},{"lineNumber":65,"author":{"gitId":"kwokyto"},"content":"            command \u003d new UrgentCommand();"},{"lineNumber":66,"author":{"gitId":"kwokyto"},"content":"            break;"},{"lineNumber":67,"author":{"gitId":"kwokyto"},"content":"        case \"find\":"},{"lineNumber":68,"author":{"gitId":"kwokyto"},"content":"            command \u003d new FindCommand(commandArg);"},{"lineNumber":69,"author":{"gitId":"kwokyto"},"content":"            break;"},{"lineNumber":70,"author":{"gitId":"kwokyto"},"content":"\t    case \"bye\":"},{"lineNumber":71,"author":{"gitId":"kwokyto"},"content":"\t        command \u003d new ByeCommand();"},{"lineNumber":72,"author":{"gitId":"kwokyto"},"content":"\t        break;"},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"\t    default:"},{"lineNumber":74,"author":{"gitId":"kwokyto"},"content":"            command \u003d new InvalidCommand(commandType);"},{"lineNumber":75,"author":{"gitId":"kwokyto"},"content":"\t    }"},{"lineNumber":76,"author":{"gitId":"kwokyto"},"content":"\t    return command;"},{"lineNumber":77,"author":{"gitId":"kwokyto"},"content":"\t}"},{"lineNumber":78,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":79,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"kwokyto"},"content":"     * Returns the breakdown of the full input provided by the user in an array."},{"lineNumber":81,"author":{"gitId":"kwokyto"},"content":"     * Index 0 - command type"},{"lineNumber":82,"author":{"gitId":"kwokyto"},"content":"     * Index 1 - command argument"},{"lineNumber":83,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":84,"author":{"gitId":"kwokyto"},"content":"     * @param String full command string as provided by user"},{"lineNumber":85,"author":{"gitId":"kwokyto"},"content":"     * @return"},{"lineNumber":86,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"kwokyto"},"content":"    private String[] parseCommand(String fullCommand) {"},{"lineNumber":88,"author":{"gitId":"kwokyto"},"content":"        String[] commandTypeAndArg \u003d new String[2];"},{"lineNumber":89,"author":{"gitId":"kwokyto"},"content":"        String[] rawCommandTypeAndArg \u003d fullCommand.split(\" \", 2);"},{"lineNumber":90,"author":{"gitId":"kwokyto"},"content":"        commandTypeAndArg[0] \u003d rawCommandTypeAndArg[0].trim();"},{"lineNumber":91,"author":{"gitId":"kwokyto"},"content":"        if (rawCommandTypeAndArg.length \u003e 1) {"},{"lineNumber":92,"author":{"gitId":"kwokyto"},"content":"            commandTypeAndArg[1] \u003d rawCommandTypeAndArg[1].trim();"},{"lineNumber":93,"author":{"gitId":"kwokyto"},"content":"        } else {"},{"lineNumber":94,"author":{"gitId":"kwokyto"},"content":"            commandTypeAndArg[1] \u003d \"\";"},{"lineNumber":95,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"kwokyto"},"content":"        return commandTypeAndArg;"},{"lineNumber":97,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":99,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"kwokyto"},"content":"     * Returns the command argument"},{"lineNumber":101,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":102,"author":{"gitId":"kwokyto"},"content":"     * @param  fullCommand string containing the full command as provided by user"},{"lineNumber":103,"author":{"gitId":"kwokyto"},"content":"     * @return command argument"},{"lineNumber":104,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"kwokyto"},"content":"    private String getCommandArg(String fullCommand) {"},{"lineNumber":106,"author":{"gitId":"kwokyto"},"content":"        String[] commandTypeAndArg \u003d parseCommand(fullCommand);"},{"lineNumber":107,"author":{"gitId":"kwokyto"},"content":"        String commandArg \u003d commandTypeAndArg[1];"},{"lineNumber":108,"author":{"gitId":"kwokyto"},"content":"        return commandArg;"},{"lineNumber":109,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":111,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"kwokyto"},"content":"     * Returns the command type"},{"lineNumber":113,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":114,"author":{"gitId":"kwokyto"},"content":"     * @param fullCommand string containing the full command as provided by user"},{"lineNumber":115,"author":{"gitId":"kwokyto"},"content":"     * @return command type"},{"lineNumber":116,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"kwokyto"},"content":"    private String getCommandType(String fullCommand) {"},{"lineNumber":118,"author":{"gitId":"kwokyto"},"content":"        String[] commandTypeAndArg \u003d parseCommand(fullCommand);"},{"lineNumber":119,"author":{"gitId":"kwokyto"},"content":"        String commandType \u003d commandTypeAndArg[0];"},{"lineNumber":120,"author":{"gitId":"kwokyto"},"content":"        return commandType;"},{"lineNumber":121,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":123,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"kwokyto"},"content":"     * Returns the task number"},{"lineNumber":125,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":126,"author":{"gitId":"kwokyto"},"content":"     * @param commandArg command argument provided by the user"},{"lineNumber":127,"author":{"gitId":"kwokyto"},"content":"     * @param taskList \u003ccode\u003eTaskList\u003c/code\u003e object containing all tasks"},{"lineNumber":128,"author":{"gitId":"kwokyto"},"content":"     * @return task number"},{"lineNumber":129,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidTaskNumberException if command arugment is not a number or if task number is out of bounds"},{"lineNumber":130,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"kwokyto"},"content":"    public static int getTaskNumber(String commandArg, TaskList taskList) throws InvalidTaskNumberException {"},{"lineNumber":132,"author":{"gitId":"kwokyto"},"content":"        int taskNumber;"},{"lineNumber":133,"author":{"gitId":"kwokyto"},"content":"        try {"},{"lineNumber":134,"author":{"gitId":"kwokyto"},"content":"            taskNumber \u003d Integer.parseInt(commandArg);"},{"lineNumber":135,"author":{"gitId":"kwokyto"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":136,"author":{"gitId":"kwokyto"},"content":"            throw new InvalidTaskNumberException(commandArg);"},{"lineNumber":137,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":139,"author":{"gitId":"kwokyto"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e taskList.getListSize()) {"},{"lineNumber":140,"author":{"gitId":"kwokyto"},"content":"            throw new InvalidTaskNumberException(taskNumber);"},{"lineNumber":141,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"kwokyto"},"content":"        return taskNumber;"},{"lineNumber":143,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":145,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":146,"author":{"gitId":"kwokyto"},"content":"     * Returns an array containing command arguments"},{"lineNumber":147,"author":{"gitId":"kwokyto"},"content":"     * Index 0 - task description"},{"lineNumber":148,"author":{"gitId":"kwokyto"},"content":"     * Index 1 - task due date"},{"lineNumber":149,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":150,"author":{"gitId":"kwokyto"},"content":"     * @param commandType string representing command type"},{"lineNumber":151,"author":{"gitId":"kwokyto"},"content":"     * @param commandArg string representing command arguments"},{"lineNumber":152,"author":{"gitId":"kwokyto"},"content":"     * @return array containing command arguments"},{"lineNumber":153,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":154,"author":{"gitId":"kwokyto"},"content":"    public String[] splitCommandArg(String commandType, String commandArg) {"},{"lineNumber":155,"author":{"gitId":"kwokyto"},"content":"        String[] taskDescriptionAndTime;"},{"lineNumber":156,"author":{"gitId":"kwokyto"},"content":"        String delimiter \u003d getDelimiter(commandType);"},{"lineNumber":157,"author":{"gitId":"kwokyto"},"content":"        taskDescriptionAndTime \u003d commandArg.split(delimiter, 2);"},{"lineNumber":158,"author":{"gitId":"kwokyto"},"content":"        taskDescriptionAndTime[0] \u003d taskDescriptionAndTime[0].trim();"},{"lineNumber":159,"author":{"gitId":"kwokyto"},"content":"        return taskDescriptionAndTime;"},{"lineNumber":160,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":162,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":163,"author":{"gitId":"kwokyto"},"content":"     * Returns true if command arguments do not contain a due date argument, and false otherwise"},{"lineNumber":164,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":165,"author":{"gitId":"kwokyto"},"content":"     * @param commandType string representing command type"},{"lineNumber":166,"author":{"gitId":"kwokyto"},"content":"     * @param taskDescriptionAndTime an array containing command arguments"},{"lineNumber":167,"author":{"gitId":"kwokyto"},"content":"     * @return boolean representing if the time argument is empty"},{"lineNumber":168,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":169,"author":{"gitId":"kwokyto"},"content":"    private static boolean isEmptyTimeArg(String commandType, String[] taskDescriptionAndTime) {"},{"lineNumber":170,"author":{"gitId":"kwokyto"},"content":"        return taskDescriptionAndTime.length \u003d\u003d 1 || taskDescriptionAndTime[1].equals(\"\");"},{"lineNumber":171,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":173,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":174,"author":{"gitId":"kwokyto"},"content":"     * Returns the command delimiter of command types \"deadline\" and \"event\"."},{"lineNumber":175,"author":{"gitId":"kwokyto"},"content":"     * If other command types are given, \u003ccode\u003enull\u003c/code\u003e is returned."},{"lineNumber":176,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":177,"author":{"gitId":"kwokyto"},"content":"     * @param commandType string representing command type"},{"lineNumber":178,"author":{"gitId":"kwokyto"},"content":"     * @return delimiter"},{"lineNumber":179,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":180,"author":{"gitId":"kwokyto"},"content":"    private static String getDelimiter(String commandType) {"},{"lineNumber":181,"author":{"gitId":"kwokyto"},"content":"        String delimiter \u003d null;"},{"lineNumber":182,"author":{"gitId":"kwokyto"},"content":"        switch (commandType) {"},{"lineNumber":183,"author":{"gitId":"kwokyto"},"content":"            case \"deadline\":"},{"lineNumber":184,"author":{"gitId":"kwokyto"},"content":"                delimiter \u003d \"/by\";"},{"lineNumber":185,"author":{"gitId":"kwokyto"},"content":"                break;"},{"lineNumber":186,"author":{"gitId":"kwokyto"},"content":"            case \"event\":"},{"lineNumber":187,"author":{"gitId":"kwokyto"},"content":"                delimiter \u003d \"/at\";"},{"lineNumber":188,"author":{"gitId":"kwokyto"},"content":"                break;"},{"lineNumber":189,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"kwokyto"},"content":"        return delimiter;"},{"lineNumber":191,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":193,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":194,"author":{"gitId":"kwokyto"},"content":"     * Returns the description argument provided by user"},{"lineNumber":195,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":196,"author":{"gitId":"kwokyto"},"content":"     * @param commandType string representing command type"},{"lineNumber":197,"author":{"gitId":"kwokyto"},"content":"     * @param commandArg string representing command arguments"},{"lineNumber":198,"author":{"gitId":"kwokyto"},"content":"     * @return string representing description"},{"lineNumber":199,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":200,"author":{"gitId":"kwokyto"},"content":"    public String getDescription(String commandType, String commandArg) {"},{"lineNumber":201,"author":{"gitId":"kwokyto"},"content":"        String[] taskDescriptionAndTime \u003d splitCommandArg(commandType, commandArg);"},{"lineNumber":202,"author":{"gitId":"kwokyto"},"content":"        return taskDescriptionAndTime[0];"},{"lineNumber":203,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"kwokyto"},"content":"   "},{"lineNumber":205,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":206,"author":{"gitId":"kwokyto"},"content":"     * Returns string representing date and time"},{"lineNumber":207,"author":{"gitId":"kwokyto"},"content":"     * @param commandType string representing command type"},{"lineNumber":208,"author":{"gitId":"kwokyto"},"content":"     * @param commandArg string representing command arguments"},{"lineNumber":209,"author":{"gitId":"kwokyto"},"content":"     * @return string representing date and time"},{"lineNumber":210,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":211,"author":{"gitId":"kwokyto"},"content":"    public String getDateTimeString(String commandType, String commandArg) {"},{"lineNumber":212,"author":{"gitId":"kwokyto"},"content":"        String[] taskDescriptionAndTime \u003d splitCommandArg(commandType, commandArg);"},{"lineNumber":213,"author":{"gitId":"kwokyto"},"content":"        if (isEmptyTimeArg(commandType, taskDescriptionAndTime)) {"},{"lineNumber":214,"author":{"gitId":"kwokyto"},"content":"            return \"\";"},{"lineNumber":215,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":216,"author":{"gitId":"kwokyto"},"content":"        taskDescriptionAndTime[1] \u003d taskDescriptionAndTime[1].trim();"},{"lineNumber":217,"author":{"gitId":"kwokyto"},"content":"        return taskDescriptionAndTime[1];"},{"lineNumber":218,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":220,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":221,"author":{"gitId":"kwokyto"},"content":"     * Returns \u003ccode\u003eLocalDateTime\u003c/code\u003e object from command arguments based on command type"},{"lineNumber":222,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":223,"author":{"gitId":"kwokyto"},"content":"     * @param commandType string representing command type"},{"lineNumber":224,"author":{"gitId":"kwokyto"},"content":"     * @param commandArg string representing command arguments"},{"lineNumber":225,"author":{"gitId":"kwokyto"},"content":"     * @return \u003ccode\u003eLocalDateTime\u003c/code\u003e object"},{"lineNumber":226,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidCommandTimeException if user input is of invalid format"},{"lineNumber":227,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":228,"author":{"gitId":"kwokyto"},"content":"    public LocalDateTime getDateTime(String commandType, String commandArg) throws InvalidCommandTimeException {"},{"lineNumber":229,"author":{"gitId":"kwokyto"},"content":"        String dateTimeString \u003d getDateTimeString(commandType, commandArg);"},{"lineNumber":230,"author":{"gitId":"kwokyto"},"content":"        LocalDateTime dateTime;"},{"lineNumber":231,"author":{"gitId":"kwokyto"},"content":"        try {"},{"lineNumber":232,"author":{"gitId":"kwokyto"},"content":"            dateTime \u003d parseDateTime(dateTimeString);"},{"lineNumber":233,"author":{"gitId":"kwokyto"},"content":"        } catch (Exception e) {"},{"lineNumber":234,"author":{"gitId":"kwokyto"},"content":"            throw new InvalidCommandTimeException(commandType, e);"},{"lineNumber":235,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":236,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":237,"author":{"gitId":"kwokyto"},"content":"        return dateTime;"},{"lineNumber":238,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":239,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":240,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":241,"author":{"gitId":"kwokyto"},"content":"     * Returns \u003ccode\u003eLocalDateTime\u003c/code\u003e object from string representing date and time"},{"lineNumber":242,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":243,"author":{"gitId":"kwokyto"},"content":"     * @param dateTimeString string representing date and time"},{"lineNumber":244,"author":{"gitId":"kwokyto"},"content":"     * @return \u003ccode\u003eLocalDateTime\u003c/code\u003e object"},{"lineNumber":245,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":246,"author":{"gitId":"kwokyto"},"content":"    public LocalDateTime parseDateTime(String dateTimeString) {"},{"lineNumber":247,"author":{"gitId":"kwokyto"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"},{"lineNumber":248,"author":{"gitId":"kwokyto"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeString, formatter);"},{"lineNumber":249,"author":{"gitId":"kwokyto"},"content":"        return dateTime;"},{"lineNumber":250,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":251,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":252,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":253,"author":{"gitId":"kwokyto"},"content":"     * Returns \u003ccode\u003eTask\u003c/code\u003e object based on saved task details"},{"lineNumber":254,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":255,"author":{"gitId":"kwokyto"},"content":"     * @param line string containing task details delimited by \"~\""},{"lineNumber":256,"author":{"gitId":"kwokyto"},"content":"     * @return \u003ccode\u003eTask\u003c/code\u003e object"},{"lineNumber":257,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidCommandTimeException if user input for due date is of invalid format"},{"lineNumber":258,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":259,"author":{"gitId":"kwokyto"},"content":"\tpublic Task parseTask(String line) throws InvalidCommandTimeException {"},{"lineNumber":260,"author":{"gitId":"kwokyto"},"content":"\t    String[] tokens \u003d line.split(\"~\");"},{"lineNumber":261,"author":{"gitId":"kwokyto"},"content":"\t    String taskType \u003d tokens[0];"},{"lineNumber":262,"author":{"gitId":"kwokyto"},"content":"\t    String isDone \u003d tokens[1];"},{"lineNumber":263,"author":{"gitId":"kwokyto"},"content":"\t    String description \u003d tokens[2];"},{"lineNumber":264,"author":{"gitId":"kwokyto"},"content":"        Task task \u003d new Task(description);"},{"lineNumber":265,"author":{"gitId":"kwokyto"},"content":"        LocalDateTime dateTime;"},{"lineNumber":266,"author":{"gitId":"kwokyto"},"content":"        String dateTimeString;"},{"lineNumber":267,"author":{"gitId":"kwokyto"},"content":"\t    switch (taskType) {"},{"lineNumber":268,"author":{"gitId":"kwokyto"},"content":"\t        case \"Todo\":"},{"lineNumber":269,"author":{"gitId":"kwokyto"},"content":"\t            task \u003d new Todo(description);"},{"lineNumber":270,"author":{"gitId":"kwokyto"},"content":"\t            break;"},{"lineNumber":271,"author":{"gitId":"kwokyto"},"content":"\t        case \"Deadline\":"},{"lineNumber":272,"author":{"gitId":"kwokyto"},"content":"                dateTimeString \u003d tokens[3];"},{"lineNumber":273,"author":{"gitId":"kwokyto"},"content":"                dateTime \u003d parseDateTime(dateTimeString);"},{"lineNumber":274,"author":{"gitId":"kwokyto"},"content":"\t            task \u003d new Deadline(description, dateTime);"},{"lineNumber":275,"author":{"gitId":"kwokyto"},"content":"\t            break;"},{"lineNumber":276,"author":{"gitId":"kwokyto"},"content":"\t        case \"Event\":"},{"lineNumber":277,"author":{"gitId":"kwokyto"},"content":"\t            dateTimeString \u003d tokens[3];"},{"lineNumber":278,"author":{"gitId":"kwokyto"},"content":"                dateTime \u003d parseDateTime(dateTimeString);"},{"lineNumber":279,"author":{"gitId":"kwokyto"},"content":"\t            task \u003d new Event(description, dateTime);"},{"lineNumber":280,"author":{"gitId":"kwokyto"},"content":"\t            break;"},{"lineNumber":281,"author":{"gitId":"kwokyto"},"content":"\t    }"},{"lineNumber":282,"author":{"gitId":"kwokyto"},"content":"\t    if (isDone \u003d\u003d String.valueOf(true)) {"},{"lineNumber":283,"author":{"gitId":"kwokyto"},"content":"\t        task.setIsDone();"},{"lineNumber":284,"author":{"gitId":"kwokyto"},"content":"\t    }"},{"lineNumber":285,"author":{"gitId":"kwokyto"},"content":"\t    return task;"},{"lineNumber":286,"author":{"gitId":"kwokyto"},"content":"\t}"},{"lineNumber":287,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":288,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":288}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.util;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.nio.file.Files;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import java.nio.file.Path;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"import duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"import duke.task.TaskList;"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":" * Represents an object that deals with loading tasks from the file and saving tasks in the file."},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    private static Ui ui;"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    public Storage(Ui uiObject) {"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"        ui \u003d uiObject;"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"     * Loads previously saved tasks in a text file in user\u0027s local memory."},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"     * Tasks are loaded from \u003chome_directory\u003e/data/duke.txt"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"     * @param home string containing user\u0027s home path"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"     * @param taskList \u003ccode\u003eTaskList\u003c/code\u003e object to add tasks to"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"     * @param parser \u003ccode\u003eParser\u003c/code\u003e object"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"    public void loadHistory(String home, TaskList taskList, Parser parser) {"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"        Path path \u003d Paths.get(home, \"data\", \"duke.txt\");"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"        if (!Files.exists(path)) {"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"            return;"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"            List\u003cString\u003e data \u003d Files.readAllLines(path);"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"            for (String line : data) {"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"                Task task \u003d parser.parseTask(line);"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"                taskList.addTask(task);"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"        } catch (Exception e) {"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"            ui.showLoadingError(e);"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"            System.exit(1);"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"     * Saved tasks into text file in user\u0027s local memory."},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"     * Tasks are saved into \u003chome_directory\u003e/data/duke.txt"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"     * @param home string containing user\u0027s home path"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"     * @param taskList \u003ccode\u003eTaskList\u003c/code\u003e object to save tasks from"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"    public void saveHistory(String home, TaskList taskList) {"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"\t    try {"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"\t        Path directoryPath \u003d Paths.get(home, \"data\");"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"\t        if (Files.notExists(directoryPath)) {"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"\t            Files.createDirectory(directoryPath);"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"\t        }"},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":"\t"},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"\t        Path filePath \u003d Paths.get(home, \"data\", \"duke.txt\");"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"\t        Files.deleteIfExists(filePath);"},{"lineNumber":64,"author":{"gitId":"kwokyto"},"content":"\t        Files.createFile(filePath);"},{"lineNumber":65,"author":{"gitId":"kwokyto"},"content":"\t        ArrayList\u003cString\u003e listOfTaskDetails \u003d taskList.getListOfTaskDetails();"},{"lineNumber":66,"author":{"gitId":"kwokyto"},"content":"\t        Files.write(filePath, listOfTaskDetails);"},{"lineNumber":67,"author":{"gitId":"kwokyto"},"content":"\t    } catch (Exception e) {"},{"lineNumber":68,"author":{"gitId":"kwokyto"},"content":"\t        ui.showSavingError(e);"},{"lineNumber":69,"author":{"gitId":"kwokyto"},"content":"\t    }"},{"lineNumber":70,"author":{"gitId":"kwokyto"},"content":"\t}"},{"lineNumber":71,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":72,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":72}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package duke.util;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.io.InputStream;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import duke.commands.Command;"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import duke.commands.ListCommand;"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"import duke.task.TaskList;"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":" * Represents an object that deals with interactions with the user."},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"public class Ui {"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    public final Scanner scanner;"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    public static final String COMMANDS \u003d "},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"            \"Commands:\\n\""},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"            + \"    todo taskName\\n\""},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"            + \"    deadline deadlineName /by dd/mm/yyyy hhmm\\n\" "},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"            + \"    event eventName /at dd/mm/yyyy hhmm\\n\""},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"            + \"    list\\n\""},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"            + \"    urgent\\n\""},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"            + \"    done taskNumber\\n\""},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"            + \"    find searchString\\n\""},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"            + \"    delete taskNumber\\n\""},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"            + \"    help\\n\""},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"            + \"    bye\";"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"    public Ui() {"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"        this(System.in);"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"    public Ui(InputStream in) {"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"        this.scanner \u003d new Scanner(in);"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"     * Displays the welcome message and lists all existing tasks."},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"     * @param taskList \u003ccode\u003eTaskList\u003c/code\u003e object"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e object"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"     * @param parser \u003ccode\u003eUi\u003c/code\u003e object"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"    public void displayWelcomeMessage(TaskList taskList, Ui ui, Parser parser) {"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"        String logo \u003d \"         __    _    _              ____        __           \\n\""},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"                + \"        / /_  (_)  (_)___ ___     / __ \\\\__  __/ /_____      \\n\""},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"                + \"       / __ \\\\/ /  / / __ `__ \\\\   / / / / / / / //_/ _ \\\\     \\n\""},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"                + \"      / / / / /  / / / / / / /  / /_/ / /_/ / ,\u003c /  __/     \\n\""},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"                + \"     /_/ /_/_/  /_/_/ /_/ /_/  /_____/\\\\__,_/_/|_|\\\\___/     \\n\";"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"        System.out.print(logo + \"\\n\");"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"        System.out.print(\"What do you have to do today?\\n\");"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"        System.out.print(COMMANDS + \"\\n\");"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"        Command listCommand \u003d new ListCommand();"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"        try {"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"            listCommand.execute(taskList, ui, parser);"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"        } catch (Exception e) {"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"            printErrorMessage(e);"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"    public void printWithBorder(String line) {"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"        System.out.print(\"_______________________________________________________________________________\\n\");"},{"lineNumber":64,"author":{"gitId":"kwokyto"},"content":"        System.out.print(line + \"\\n\");"},{"lineNumber":65,"author":{"gitId":"kwokyto"},"content":"        System.out.print(\"_______________________________________________________________________________\\n\");"},{"lineNumber":66,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":68,"author":{"gitId":"kwokyto"},"content":"\tpublic void showLoadingError(Exception e) {"},{"lineNumber":69,"author":{"gitId":"kwokyto"},"content":"        String errorMessage \u003d \"ERROR retrieving data!\\n\" + e.getLocalizedMessage();"},{"lineNumber":70,"author":{"gitId":"kwokyto"},"content":"        printWithBorder(errorMessage);"},{"lineNumber":71,"author":{"gitId":"kwokyto"},"content":"\t}"},{"lineNumber":72,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"    public String readLine() {"},{"lineNumber":74,"author":{"gitId":"kwokyto"},"content":"        String line \u003d scanner.nextLine();"},{"lineNumber":75,"author":{"gitId":"kwokyto"},"content":"        return line;"},{"lineNumber":76,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":78,"author":{"gitId":"kwokyto"},"content":"    public void printHelpMessage() {"},{"lineNumber":79,"author":{"gitId":"kwokyto"},"content":"        printWithBorder(COMMANDS);"},{"lineNumber":80,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":82,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"kwokyto"},"content":"     * Lists all existing tasks with a numerical index"},{"lineNumber":84,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":85,"author":{"gitId":"kwokyto"},"content":"     * @param taskList \u003ccode\u003eTaskList\u003c/code\u003e object"},{"lineNumber":86,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"kwokyto"},"content":"    public void listAllTasks(TaskList taskList) {"},{"lineNumber":88,"author":{"gitId":"kwokyto"},"content":"        String listAllTasksMessage \u003d \"Here are the tasks in your list:\";"},{"lineNumber":89,"author":{"gitId":"kwokyto"},"content":"        listAllTasksMessage +\u003d getListOfTasksString(taskList);"},{"lineNumber":90,"author":{"gitId":"kwokyto"},"content":"        printWithBorder(listAllTasksMessage);"},{"lineNumber":91,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":93,"author":{"gitId":"kwokyto"},"content":"    public String getListOfTasksString(TaskList taskList) {"},{"lineNumber":94,"author":{"gitId":"kwokyto"},"content":"        String listOfTasksString \u003d \"\";"},{"lineNumber":95,"author":{"gitId":"kwokyto"},"content":"        for (int i \u003d 0; i \u003c taskList.getListSize(); i +\u003d 1) {"},{"lineNumber":96,"author":{"gitId":"kwokyto"},"content":"            Task task \u003d taskList.getTask(i);"},{"lineNumber":97,"author":{"gitId":"kwokyto"},"content":"            listOfTasksString +\u003d (\"\\n    \" + Integer.toString(i + 1) + \". \" + task.toString());"},{"lineNumber":98,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"kwokyto"},"content":"        return listOfTasksString;"},{"lineNumber":100,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":102,"author":{"gitId":"kwokyto"},"content":"    public void printErrorMessage(Exception e) {"},{"lineNumber":103,"author":{"gitId":"kwokyto"},"content":"        String errorMessage \u003d \"There was an ERROR!\\n\" + e.getLocalizedMessage();"},{"lineNumber":104,"author":{"gitId":"kwokyto"},"content":"        printWithBorder(errorMessage);"},{"lineNumber":105,"author":{"gitId":"kwokyto"},"content":"\t}"},{"lineNumber":106,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":107,"author":{"gitId":"kwokyto"},"content":"    public void printSuccessfullyMarkedDoneMessage(Task task) {"},{"lineNumber":108,"author":{"gitId":"kwokyto"},"content":"        String taskSuccessfullyMarkedDoneMessage \u003d \"Very nice! I\u0027ve marked this task as done:\\n    \" + task.toString();"},{"lineNumber":109,"author":{"gitId":"kwokyto"},"content":"        printWithBorder(taskSuccessfullyMarkedDoneMessage);"},{"lineNumber":110,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":112,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"kwokyto"},"content":"     * Displays a message to inform user that the task has been successfully added."},{"lineNumber":114,"author":{"gitId":"kwokyto"},"content":"     * Displays the total count of tasks in the user\u0027s list."},{"lineNumber":115,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":116,"author":{"gitId":"kwokyto"},"content":"     * @param task"},{"lineNumber":117,"author":{"gitId":"kwokyto"},"content":"     * @param taskCount"},{"lineNumber":118,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"kwokyto"},"content":"    public void printTaskSuccessfullyAddedMessage(Task task, int taskCount) {"},{"lineNumber":120,"author":{"gitId":"kwokyto"},"content":"        String className \u003d task.getClass().getSimpleName();"},{"lineNumber":121,"author":{"gitId":"kwokyto"},"content":"        String taskSuccessfullyAddedMessage \u003d "},{"lineNumber":122,"author":{"gitId":"kwokyto"},"content":"                \"Alrighty! I have added this new \" + className + \":\\n\""},{"lineNumber":123,"author":{"gitId":"kwokyto"},"content":"                + \"    \" + task.toString() + \"\\n\""},{"lineNumber":124,"author":{"gitId":"kwokyto"},"content":"                + \"You now have \" + Integer.toString(taskCount) + \" tasks in the list.\";"},{"lineNumber":125,"author":{"gitId":"kwokyto"},"content":"        printWithBorder(taskSuccessfullyAddedMessage);"},{"lineNumber":126,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":128,"author":{"gitId":"kwokyto"},"content":"    public void printTaskSuccessfullyDeletedMessage(Task task) {"},{"lineNumber":129,"author":{"gitId":"kwokyto"},"content":"        String taskSuccessfullyDeletedMessage \u003d \"Yay! I\u0027ve successfuly deleted this task:\\n    \" "},{"lineNumber":130,"author":{"gitId":"kwokyto"},"content":"                + task.toString();"},{"lineNumber":131,"author":{"gitId":"kwokyto"},"content":"        printWithBorder(taskSuccessfullyDeletedMessage);"},{"lineNumber":132,"author":{"gitId":"kwokyto"},"content":"\t}"},{"lineNumber":133,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":134,"author":{"gitId":"kwokyto"},"content":"\tpublic void showSavingError(Exception e) {"},{"lineNumber":135,"author":{"gitId":"kwokyto"},"content":"        String errorMessage \u003d \"ERROR saving data!\\n\" + e.getLocalizedMessage() + e.toString();"},{"lineNumber":136,"author":{"gitId":"kwokyto"},"content":"        printWithBorder(errorMessage);"},{"lineNumber":137,"author":{"gitId":"kwokyto"},"content":"\t}"},{"lineNumber":138,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":139,"author":{"gitId":"kwokyto"},"content":"    public void displayExitMessage() {"},{"lineNumber":140,"author":{"gitId":"kwokyto"},"content":"        String exitMessage \u003d \"Sad to see you go! ): See you soon!\";"},{"lineNumber":141,"author":{"gitId":"kwokyto"},"content":"        printWithBorder(exitMessage);"},{"lineNumber":142,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":144,"author":{"gitId":"kwokyto"},"content":"    public void displayNoUrgentTasksMessage() {"},{"lineNumber":145,"author":{"gitId":"kwokyto"},"content":"        String noUrgentTasksMessage \u003d \"Yay! You have no urgent task due in the next week!\";"},{"lineNumber":146,"author":{"gitId":"kwokyto"},"content":"        printWithBorder(noUrgentTasksMessage);"},{"lineNumber":147,"author":{"gitId":"kwokyto"},"content":"\t}"},{"lineNumber":148,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":149,"author":{"gitId":"kwokyto"},"content":"    public void displayUrgentTasks(String listOfTasksString) {"},{"lineNumber":150,"author":{"gitId":"kwokyto"},"content":"        String urgentTasksMessage \u003d \"Here are the urgent tasks due in the next week:\" + listOfTasksString;"},{"lineNumber":151,"author":{"gitId":"kwokyto"},"content":"        printWithBorder(urgentTasksMessage);"},{"lineNumber":152,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":154,"author":{"gitId":"kwokyto"},"content":"    public void displayNoResultsFoundMessage(String commandArg) {"},{"lineNumber":155,"author":{"gitId":"kwokyto"},"content":"        String noResultsFoundMessage \u003d \"Your search for \u0027\" + commandArg + \"\u0027 returned no results. ):\";"},{"lineNumber":156,"author":{"gitId":"kwokyto"},"content":"        printWithBorder(noResultsFoundMessage);"},{"lineNumber":157,"author":{"gitId":"kwokyto"},"content":"\t}"},{"lineNumber":158,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":159,"author":{"gitId":"kwokyto"},"content":"    public void printFindCommandResults(TaskList taskList) {"},{"lineNumber":160,"author":{"gitId":"kwokyto"},"content":"        String listOfTasksString \u003d \"Here are the matching tasks in your list:\";"},{"lineNumber":161,"author":{"gitId":"kwokyto"},"content":"        for (int i \u003d 0; i \u003c taskList.getListSize(); i +\u003d 1) {"},{"lineNumber":162,"author":{"gitId":"kwokyto"},"content":"            Task task \u003d taskList.getTask(i);"},{"lineNumber":163,"author":{"gitId":"kwokyto"},"content":"            listOfTasksString +\u003d (\"\\n    \" + Integer.toString(i + 1) + \". \" + task.toString());"},{"lineNumber":164,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"kwokyto"},"content":"        printWithBorder(listOfTasksString);"},{"lineNumber":166,"author":{"gitId":"kwokyto"},"content":"\t}"},{"lineNumber":167,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":167}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"Todo~true~team project"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"Event~false~lecture~28/10/2022 1200"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"Todo~false~with a lot of whitespace"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"Deadline~false~project whitespace~02/06/2021 2300"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"Event~false~meeting whitespace~09/03/2021 0000"}],"authorContributionMap":{"kwokyto":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"help"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"todo team project"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"deadline individual project /by 09/03/2022 2359"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"event lecture /at 28/10/2022 1200"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"list"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"urgent"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"list"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"urgent"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"find project"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"find oesinr"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"find"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"delete 2"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"list"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"done 1"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"list"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"todo"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"todo      with a lot of whitespace         "},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"deadline"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"deadline project but no by"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"deadline project but invalid /by           "},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"deadline project whitespace         /by            02/06/2021 2300"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"deadline project bad date         /by            02062021 2300"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"deadline project bad date         /by            02 06 2021 2300"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"event"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"event meeting but no by"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"event meeting but invalid /at           "},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"event meeting whitespace         /at            09/03/2021 0000"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"invalid command test"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"done"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"done -2"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"done 0"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"done 21324"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"delete"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"delete -5"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"delete 0"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"delete 3498"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"bye"}],"authorContributionMap":{"kwokyto":38}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"if exist data/duke.txt del data"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":11,"author":{"gitId":"-"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\task\\*.java"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\exception\\*.java"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\util\\*.java"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\commands\\*.java"},{"lineNumber":16,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":17,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":19,"author":{"gitId":"-"},"content":")"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":26,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"kwokyto":5,"-":21}}]
