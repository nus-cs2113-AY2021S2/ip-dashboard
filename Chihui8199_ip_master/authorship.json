[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":3,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":4,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":5,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":6,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":7,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":8,"author":{"gitId":"Chihui8199"},"content":"# Duke User Guide"},{"lineNumber":9,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":10,"author":{"gitId":"Chihui8199"},"content":"\u003cbr\u003e"},{"lineNumber":11,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":12,"author":{"gitId":"Chihui8199"},"content":"## Setting up Duke"},{"lineNumber":13,"author":{"gitId":"Chihui8199"},"content":"1. Open Terminal(on mac) or Command Prompt(on Window)"},{"lineNumber":14,"author":{"gitId":"Chihui8199"},"content":"2. Change directory to the folder where ip.jar is stored"},{"lineNumber":15,"author":{"gitId":"Chihui8199"},"content":"3. Type in \u003ccode\u003e java -jar ip.jar \u003c/code\u003e to run Duke"},{"lineNumber":16,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":17,"author":{"gitId":"Chihui8199"},"content":"\u003cbr\u003e"},{"lineNumber":18,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":19,"author":{"gitId":"Chihui8199"},"content":"## Features"},{"lineNumber":20,"author":{"gitId":"Chihui8199"},"content":"1. Todo"},{"lineNumber":21,"author":{"gitId":"Chihui8199"},"content":"2. Deadline"},{"lineNumber":22,"author":{"gitId":"Chihui8199"},"content":"3. Event"},{"lineNumber":23,"author":{"gitId":"Chihui8199"},"content":"4. List"},{"lineNumber":24,"author":{"gitId":"Chihui8199"},"content":"5. Done"},{"lineNumber":25,"author":{"gitId":"Chihui8199"},"content":"6. Delete"},{"lineNumber":26,"author":{"gitId":"Chihui8199"},"content":"7. Find"},{"lineNumber":27,"author":{"gitId":"Chihui8199"},"content":"8. Bye"},{"lineNumber":28,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":29,"author":{"gitId":"Chihui8199"},"content":"\u003cbr\u003e"},{"lineNumber":30,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":31,"author":{"gitId":"Chihui8199"},"content":"## Feature 1: Todo"},{"lineNumber":32,"author":{"gitId":"Chihui8199"},"content":"Adds a Todo task in your task list"},{"lineNumber":33,"author":{"gitId":"Chihui8199"},"content":"### Usage: \u003ccode\u003e todo descriptionOfTodo \u003c/code\u003e"},{"lineNumber":34,"author":{"gitId":"Chihui8199"},"content":"### Example of usage: \u003ccode\u003e todo borrow books"},{"lineNumber":35,"author":{"gitId":"Chihui8199"},"content":"### Examples of outcome:"},{"lineNumber":36,"author":{"gitId":"Chihui8199"},"content":"   ![image](https://user-images.githubusercontent.com/62389756/109859058-83519580-7c97-11eb-85ea-af69721d1318.png)"},{"lineNumber":37,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":38,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":39,"author":{"gitId":"Chihui8199"},"content":"\u003cbr\u003e"},{"lineNumber":40,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":41,"author":{"gitId":"Chihui8199"},"content":"## Feature 2: Deadline"},{"lineNumber":42,"author":{"gitId":"Chihui8199"},"content":"Adds a Deadline task in your task list"},{"lineNumber":43,"author":{"gitId":"Chihui8199"},"content":"### Usage: \u003ccode\u003e deadline descriptionOfDeadline /by date time\u003c/code\u003e"},{"lineNumber":44,"author":{"gitId":"Chihui8199"},"content":"### Example of usage: \u003ccode\u003e deadline submit english essay by 2021-01-01 11:59 \u003c/code\u003e"},{"lineNumber":45,"author":{"gitId":"Chihui8199"},"content":"### Examples of outcome:"},{"lineNumber":46,"author":{"gitId":"Chihui8199"},"content":"![image](https://user-images.githubusercontent.com/62389756/109859412-e6432c80-7c97-11eb-8596-994dbff5f8bb.png)"},{"lineNumber":47,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":48,"author":{"gitId":"Chihui8199"},"content":"\u003cbr\u003e"},{"lineNumber":49,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":50,"author":{"gitId":"Chihui8199"},"content":"## Feature 3: Event"},{"lineNumber":51,"author":{"gitId":"Chihui8199"},"content":"Adds an Event task in your task list"},{"lineNumber":52,"author":{"gitId":"Chihui8199"},"content":"### Usage: \u003ccode\u003e event descriptionOfEvent /at date time \u003c/code\u003e"},{"lineNumber":53,"author":{"gitId":"Chihui8199"},"content":"### Examples of usage: \u003ccode\u003e Event Jamie birthday party /at 23 Feb 2021 \u003c/code\u003e"},{"lineNumber":54,"author":{"gitId":"Chihui8199"},"content":"### Examples of outcome:"},{"lineNumber":55,"author":{"gitId":"Chihui8199"},"content":"![image](https://user-images.githubusercontent.com/62389756/109859573-17bbf800-7c98-11eb-85c6-f5d57345c6de.png)"},{"lineNumber":56,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":57,"author":{"gitId":"Chihui8199"},"content":"\u003cbr\u003e"},{"lineNumber":58,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":59,"author":{"gitId":"Chihui8199"},"content":"##  Feature 4: List"},{"lineNumber":60,"author":{"gitId":"Chihui8199"},"content":"Lists all task current task in Duke"},{"lineNumber":61,"author":{"gitId":"Chihui8199"},"content":"### Usage: \u003ccode\u003e list \u003c\\code\u003e"},{"lineNumber":62,"author":{"gitId":"Chihui8199"},"content":"### Examples of outcome:"},{"lineNumber":63,"author":{"gitId":"Chihui8199"},"content":"   ![image](https://user-images.githubusercontent.com/62389756/109859677-3621f380-7c98-11eb-8155-214303b7ec9e.png)"},{"lineNumber":64,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":65,"author":{"gitId":"Chihui8199"},"content":"\u003cbr\u003e"},{"lineNumber":66,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":67,"author":{"gitId":"Chihui8199"},"content":"## Feature 5: Done "},{"lineNumber":68,"author":{"gitId":"Chihui8199"},"content":"Marks the task as done"},{"lineNumber":69,"author":{"gitId":"Chihui8199"},"content":"### Usage: \u003ccode\u003e Done index \u003c/code\u003e"},{"lineNumber":70,"author":{"gitId":"Chihui8199"},"content":"### Example of usage: \u003ccode\u003e Done 2 \u003c/code\u003e"},{"lineNumber":71,"author":{"gitId":"Chihui8199"},"content":"### Examples of outcome:"},{"lineNumber":72,"author":{"gitId":"Chihui8199"},"content":"![image](https://user-images.githubusercontent.com/62389756/109859785-53ef5880-7c98-11eb-8abd-c0de2bf210ed.png)"},{"lineNumber":73,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":74,"author":{"gitId":"Chihui8199"},"content":"\u003cbr\u003e"},{"lineNumber":75,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":76,"author":{"gitId":"Chihui8199"},"content":"## Feature 6: Delete"},{"lineNumber":77,"author":{"gitId":"Chihui8199"},"content":"Deletes the task"},{"lineNumber":78,"author":{"gitId":"Chihui8199"},"content":"### Usage: \u003ccode\u003e Delete index \u003c/code\u003e"},{"lineNumber":79,"author":{"gitId":"Chihui8199"},"content":"### Example of usage: \u003ccode\u003e Delete 1 \u003c/code\u003e"},{"lineNumber":80,"author":{"gitId":"Chihui8199"},"content":"### Examples of outcome:"},{"lineNumber":81,"author":{"gitId":"Chihui8199"},"content":"![image](https://user-images.githubusercontent.com/62389756/109859880-6ec1cd00-7c98-11eb-90d6-4dc89d769103.png)"},{"lineNumber":82,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":83,"author":{"gitId":"Chihui8199"},"content":"\u003cbr\u003e"},{"lineNumber":84,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":85,"author":{"gitId":"Chihui8199"},"content":"## Feature 7: Find"},{"lineNumber":86,"author":{"gitId":"Chihui8199"},"content":"Find the task with matching keyword"},{"lineNumber":87,"author":{"gitId":"Chihui8199"},"content":"### Usage: \u003ccode\u003e Find keyword(s) \u003c/code\u003e"},{"lineNumber":88,"author":{"gitId":"Chihui8199"},"content":"### Example of usage: \u003ccode\u003e Find party \u003c/code\u003e"},{"lineNumber":89,"author":{"gitId":"Chihui8199"},"content":"### Examples of outcome:"},{"lineNumber":90,"author":{"gitId":"Chihui8199"},"content":"![image](https://user-images.githubusercontent.com/62389756/109859970-88fbab00-7c98-11eb-8ad8-d58a40a3567b.png)"},{"lineNumber":91,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":92,"author":{"gitId":"Chihui8199"},"content":"\u003cbr\u003e"},{"lineNumber":93,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":94,"author":{"gitId":"Chihui8199"},"content":"## Feature 8: Bye"},{"lineNumber":95,"author":{"gitId":"Chihui8199"},"content":"Exits the program"},{"lineNumber":96,"author":{"gitId":"Chihui8199"},"content":"### Usage: \u003ccode\u003e bye \u003c/code\u003e"},{"lineNumber":97,"author":{"gitId":"Chihui8199"},"content":"### Examples of outcome:"},{"lineNumber":98,"author":{"gitId":"Chihui8199"},"content":"![image](https://user-images.githubusercontent.com/62389756/109860037-9dd83e80-7c98-11eb-8695-2105bebd6a66.png)"},{"lineNumber":99,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":100,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":101,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":102,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":103,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":104,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":105,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":106,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":107,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":108,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":109,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":110,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":111,"author":{"gitId":"Chihui8199"},"content":""}],"authorContributionMap":{"Chihui8199":104,"-":7}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chihui8199"},"content":"import command.Command;"},{"lineNumber":2,"author":{"gitId":"Chihui8199"},"content":"import exception.DukeException;"},{"lineNumber":3,"author":{"gitId":"Chihui8199"},"content":"import parser.Parser;"},{"lineNumber":4,"author":{"gitId":"Chihui8199"},"content":"import task.TaskManager;"},{"lineNumber":5,"author":{"gitId":"Chihui8199"},"content":"import ui.Ui;"},{"lineNumber":6,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":7,"author":{"gitId":"Chihui8199"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":8,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":9,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"Chihui8199"},"content":"    private Ui ui;"},{"lineNumber":12,"author":{"gitId":"Chihui8199"},"content":"    private TaskManager taskList;"},{"lineNumber":13,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":14,"author":{"gitId":"Chihui8199"},"content":"    public Duke() throws FileNotFoundException, DukeException {"},{"lineNumber":15,"author":{"gitId":"Chihui8199"},"content":"        ui \u003d new Ui();"},{"lineNumber":16,"author":{"gitId":"Chihui8199"},"content":"        taskList \u003d new TaskManager();"},{"lineNumber":17,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":19,"author":{"gitId":"Chihui8199"},"content":"    /***"},{"lineNumber":20,"author":{"gitId":"Chihui8199"},"content":"     * Runs the duke program"},{"lineNumber":21,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Chihui8199"},"content":"    public void run() {"},{"lineNumber":23,"author":{"gitId":"Chihui8199"},"content":"        boolean isBye \u003d false;"},{"lineNumber":24,"author":{"gitId":"Chihui8199"},"content":"        ui.printMenu();"},{"lineNumber":25,"author":{"gitId":"Chihui8199"},"content":"        do {"},{"lineNumber":26,"author":{"gitId":"Chihui8199"},"content":"            try {"},{"lineNumber":27,"author":{"gitId":"Chihui8199"},"content":"                String userInput \u003d ui.getUserInput();"},{"lineNumber":28,"author":{"gitId":"Chihui8199"},"content":"                String newUserInput \u003d userInput.toUpperCase();"},{"lineNumber":29,"author":{"gitId":"Chihui8199"},"content":"                Command command \u003d Parser.parseCommand(newUserInput.toUpperCase());"},{"lineNumber":30,"author":{"gitId":"Chihui8199"},"content":"                command.executeCommand(newUserInput, taskList);"},{"lineNumber":31,"author":{"gitId":"Chihui8199"},"content":"                isBye \u003d ui.sayGoodBye(newUserInput);"},{"lineNumber":32,"author":{"gitId":"Chihui8199"},"content":"            } catch (DukeException e) {"},{"lineNumber":33,"author":{"gitId":"Chihui8199"},"content":"                ui.printErrorMessage(e.getMessage());"},{"lineNumber":34,"author":{"gitId":"Chihui8199"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"Chihui8199"},"content":"        } while (!isBye);"},{"lineNumber":36,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":38,"author":{"gitId":"Chihui8199"},"content":"    public static void main(String[] args) throws FileNotFoundException, DukeException {"},{"lineNumber":39,"author":{"gitId":"Chihui8199"},"content":"        new Duke().run();"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}"},{"lineNumber":42,"author":{"gitId":"Chihui8199"},"content":""}],"authorContributionMap":{"Chihui8199":39,"-":3}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chihui8199"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":3,"author":{"gitId":"Chihui8199"},"content":"import parser.Parser;"},{"lineNumber":4,"author":{"gitId":"Chihui8199"},"content":"import task.Task;"},{"lineNumber":5,"author":{"gitId":"Chihui8199"},"content":"import task.TaskManager;"},{"lineNumber":6,"author":{"gitId":"Chihui8199"},"content":"import exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":8,"author":{"gitId":"Chihui8199"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Chihui8199"},"content":" * Adds a task to the ArrayList"},{"lineNumber":10,"author":{"gitId":"Chihui8199"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Chihui8199"},"content":"public class AddCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"Chihui8199"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"Chihui8199"},"content":"    public void executeCommand(String userInput, TaskManager taskList) throws DukeException {"},{"lineNumber":14,"author":{"gitId":"Chihui8199"},"content":"        Task taskToAdd \u003d Parser.getTask(userInput);"},{"lineNumber":15,"author":{"gitId":"Chihui8199"},"content":"        taskList.addTask(taskToAdd);"},{"lineNumber":16,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Chihui8199"},"content":"}"}],"authorContributionMap":{"Chihui8199":17}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chihui8199"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":3,"author":{"gitId":"Chihui8199"},"content":"import task.TaskManager;"},{"lineNumber":4,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":5,"author":{"gitId":"Chihui8199"},"content":"public class ByeCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"Chihui8199"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"Chihui8199"},"content":"    public void executeCommand(String userInput, TaskManager taskManager) {"},{"lineNumber":8,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":9,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Chihui8199"},"content":"}"}],"authorContributionMap":{"Chihui8199":10}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chihui8199"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":3,"author":{"gitId":"Chihui8199"},"content":"import task.TaskManager;"},{"lineNumber":4,"author":{"gitId":"Chihui8199"},"content":"import exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":6,"author":{"gitId":"Chihui8199"},"content":"public abstract class Command {"},{"lineNumber":7,"author":{"gitId":"Chihui8199"},"content":"    public abstract void executeCommand(String userInput, TaskManager taskManager) throws DukeException;"},{"lineNumber":8,"author":{"gitId":"Chihui8199"},"content":"}"}],"authorContributionMap":{"Chihui8199":8}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chihui8199"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":3,"author":{"gitId":"Chihui8199"},"content":"import parser.Parser;"},{"lineNumber":4,"author":{"gitId":"Chihui8199"},"content":"import task.TaskManager;"},{"lineNumber":5,"author":{"gitId":"Chihui8199"},"content":"import exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":7,"author":{"gitId":"Chihui8199"},"content":"/***"},{"lineNumber":8,"author":{"gitId":"Chihui8199"},"content":" * Delete task from ArrayList"},{"lineNumber":9,"author":{"gitId":"Chihui8199"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Chihui8199"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"Chihui8199"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"Chihui8199"},"content":"    public void executeCommand(String userInput, TaskManager taskList) throws DukeException {"},{"lineNumber":13,"author":{"gitId":"Chihui8199"},"content":"        int taskNoDelete \u003d Parser.getTaskNoToBeMarkDelete(userInput);"},{"lineNumber":14,"author":{"gitId":"Chihui8199"},"content":"        taskList.deleteTask(taskNoDelete);"},{"lineNumber":15,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Chihui8199"},"content":"}"}],"authorContributionMap":{"Chihui8199":16}},{"path":"src/main/java/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chihui8199"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":3,"author":{"gitId":"Chihui8199"},"content":"import command.Command;"},{"lineNumber":4,"author":{"gitId":"Chihui8199"},"content":"import parser.Parser;"},{"lineNumber":5,"author":{"gitId":"Chihui8199"},"content":"import task.TaskManager;"},{"lineNumber":6,"author":{"gitId":"Chihui8199"},"content":"import exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":8,"author":{"gitId":"Chihui8199"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Chihui8199"},"content":" * Marks task as done when user indicates the task is done"},{"lineNumber":10,"author":{"gitId":"Chihui8199"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Chihui8199"},"content":"public class DoneCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"Chihui8199"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"Chihui8199"},"content":"    public void executeCommand(String userInput, TaskManager taskList) throws DukeException {"},{"lineNumber":14,"author":{"gitId":"Chihui8199"},"content":"        int taskNoDone \u003d Parser.getTaskNoToBeMarkDone(userInput);"},{"lineNumber":15,"author":{"gitId":"Chihui8199"},"content":"        taskList.markDone(taskNoDone);"},{"lineNumber":16,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Chihui8199"},"content":"}"}],"authorContributionMap":{"Chihui8199":17}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chihui8199"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":3,"author":{"gitId":"Chihui8199"},"content":"import parser.Parser;"},{"lineNumber":4,"author":{"gitId":"Chihui8199"},"content":"import task.TaskManager;"},{"lineNumber":5,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":6,"author":{"gitId":"Chihui8199"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Chihui8199"},"content":" * Finds and lists all task in ArrayList whose task contains any of the argument keywords."},{"lineNumber":8,"author":{"gitId":"Chihui8199"},"content":" * Keyword matching is not case sensitive."},{"lineNumber":9,"author":{"gitId":"Chihui8199"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Chihui8199"},"content":"public class FindCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"Chihui8199"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"Chihui8199"},"content":"    public void executeCommand(String userInput, TaskManager taskList) {"},{"lineNumber":13,"author":{"gitId":"Chihui8199"},"content":"        String keywordToFind \u003d Parser.getFindKeyword(userInput);"},{"lineNumber":14,"author":{"gitId":"Chihui8199"},"content":"        taskList.findTask(keywordToFind);"},{"lineNumber":15,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Chihui8199"},"content":"}"}],"authorContributionMap":{"Chihui8199":16}},{"path":"src/main/java/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chihui8199"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":3,"author":{"gitId":"Chihui8199"},"content":"import exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Chihui8199"},"content":"import task.TaskManager;"},{"lineNumber":5,"author":{"gitId":"Chihui8199"},"content":"import ui.Ui;"},{"lineNumber":6,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":7,"author":{"gitId":"Chihui8199"},"content":"public class HelpCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"Chihui8199"},"content":"    private Ui ui;"},{"lineNumber":9,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":10,"author":{"gitId":"Chihui8199"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"Chihui8199"},"content":"    public void executeCommand(String userInput, TaskManager taskManager) throws DukeException {"},{"lineNumber":12,"author":{"gitId":"Chihui8199"},"content":"        ui.printMenu();"},{"lineNumber":13,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Chihui8199"},"content":"}"}],"authorContributionMap":{"Chihui8199":14}},{"path":"src/main/java/command/PrintCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chihui8199"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":3,"author":{"gitId":"Chihui8199"},"content":"import task.TaskManager;"},{"lineNumber":4,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":5,"author":{"gitId":"Chihui8199"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Chihui8199"},"content":" * Lists all task in the ArrayList to the user."},{"lineNumber":7,"author":{"gitId":"Chihui8199"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Chihui8199"},"content":"public class PrintCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Chihui8199"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"Chihui8199"},"content":"    public void executeCommand(String userInput, TaskManager taskManager) {"},{"lineNumber":11,"author":{"gitId":"Chihui8199"},"content":"        taskManager.printTaskItems();"},{"lineNumber":12,"author":{"gitId":"Chihui8199"},"content":"        System.out.println(\"Enter next command: \");"},{"lineNumber":13,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Chihui8199"},"content":"}"},{"lineNumber":15,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":16,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":17,"author":{"gitId":"Chihui8199"},"content":""}],"authorContributionMap":{"Chihui8199":17}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chihui8199"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":3,"author":{"gitId":"Chihui8199"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"Chihui8199"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":5,"author":{"gitId":"Chihui8199"},"content":"        super(errorMessage);"},{"lineNumber":6,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Chihui8199"},"content":"}"}],"authorContributionMap":{"Chihui8199":7}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chihui8199"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":3,"author":{"gitId":"Chihui8199"},"content":"import command.*;"},{"lineNumber":4,"author":{"gitId":"Chihui8199"},"content":"import exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"Chihui8199"},"content":"import task.Deadline;"},{"lineNumber":6,"author":{"gitId":"Chihui8199"},"content":"import task.Event;"},{"lineNumber":7,"author":{"gitId":"Chihui8199"},"content":"import task.Task;"},{"lineNumber":8,"author":{"gitId":"Chihui8199"},"content":"import task.Todo;"},{"lineNumber":9,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":10,"author":{"gitId":"Chihui8199"},"content":"import java.time.LocalDate;"},{"lineNumber":11,"author":{"gitId":"Chihui8199"},"content":"import java.time.LocalTime;"},{"lineNumber":12,"author":{"gitId":"Chihui8199"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":13,"author":{"gitId":"Chihui8199"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":14,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":15,"author":{"gitId":"Chihui8199"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"Chihui8199"},"content":" * Parses the user input into useful data for easy handling"},{"lineNumber":17,"author":{"gitId":"Chihui8199"},"content":" */"},{"lineNumber":18,"author":{"gitId":"Chihui8199"},"content":"public class Parser {"},{"lineNumber":19,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":20,"author":{"gitId":"Chihui8199"},"content":"    private static final int LENGTH_OF_DATE \u003d 10;"},{"lineNumber":21,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":22,"author":{"gitId":"Chihui8199"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Chihui8199"},"content":"     * Parses user input into command for execution"},{"lineNumber":24,"author":{"gitId":"Chihui8199"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Chihui8199"},"content":"     * @param userInput processed for Uppercase full user input string"},{"lineNumber":26,"author":{"gitId":"Chihui8199"},"content":"     * @return the command based on the user input"},{"lineNumber":27,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Chihui8199"},"content":"    public static Command parseCommand(String userInput) throws DukeException {"},{"lineNumber":29,"author":{"gitId":"Chihui8199"},"content":"        Command cmd \u003d null;"},{"lineNumber":30,"author":{"gitId":"Chihui8199"},"content":"        if (userInput.contains(\"LIST\")) {"},{"lineNumber":31,"author":{"gitId":"Chihui8199"},"content":"            cmd \u003d new PrintCommand();"},{"lineNumber":32,"author":{"gitId":"Chihui8199"},"content":"        } else if (userInput.contains(\"BYE\")) {"},{"lineNumber":33,"author":{"gitId":"Chihui8199"},"content":"            cmd \u003d new ByeCommand();"},{"lineNumber":34,"author":{"gitId":"Chihui8199"},"content":"        } else if (userInput.contains(\"DONE\")) {"},{"lineNumber":35,"author":{"gitId":"Chihui8199"},"content":"            cmd \u003d new DoneCommand();"},{"lineNumber":36,"author":{"gitId":"Chihui8199"},"content":"        } else if (userInput.contains(\"DELETE\")) {"},{"lineNumber":37,"author":{"gitId":"Chihui8199"},"content":"            cmd \u003d new DeleteCommand();"},{"lineNumber":38,"author":{"gitId":"Chihui8199"},"content":"        } else if (userInput.contains(\"FIND\")) {"},{"lineNumber":39,"author":{"gitId":"Chihui8199"},"content":"            cmd \u003d new FindCommand();"},{"lineNumber":40,"author":{"gitId":"Chihui8199"},"content":"        } else if (userInput.contains(\"MENU\")) {"},{"lineNumber":41,"author":{"gitId":"Chihui8199"},"content":"            cmd \u003d new HelpCommand();"},{"lineNumber":42,"author":{"gitId":"Chihui8199"},"content":"        } else if (!userInput.contains(\"BYE\")) {"},{"lineNumber":43,"author":{"gitId":"Chihui8199"},"content":"            cmd \u003d new AddCommand();"},{"lineNumber":44,"author":{"gitId":"Chihui8199"},"content":"        } else {"},{"lineNumber":45,"author":{"gitId":"Chihui8199"},"content":"            throw new DukeException(\"Please use the appropriate commands\");"},{"lineNumber":46,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Chihui8199"},"content":"        return cmd;"},{"lineNumber":48,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":50,"author":{"gitId":"Chihui8199"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"Chihui8199"},"content":"     * Extracts the task number in the current list that the user wants to mark as done"},{"lineNumber":52,"author":{"gitId":"Chihui8199"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"Chihui8199"},"content":"     * @param userInput full userInput String"},{"lineNumber":54,"author":{"gitId":"Chihui8199"},"content":"     * @return task number to be marked done"},{"lineNumber":55,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"Chihui8199"},"content":"    public static int getTaskNoToBeMarkDone(String userInput) throws DukeException {"},{"lineNumber":57,"author":{"gitId":"Chihui8199"},"content":"        String[] inputSplit \u003d userInput.split(\"DONE \");"},{"lineNumber":58,"author":{"gitId":"Chihui8199"},"content":"        int taskNoDone \u003d 0;"},{"lineNumber":59,"author":{"gitId":"Chihui8199"},"content":"        try {"},{"lineNumber":60,"author":{"gitId":"Chihui8199"},"content":"            taskNoDone \u003d Integer.parseInt(inputSplit[1]);"},{"lineNumber":61,"author":{"gitId":"Chihui8199"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":62,"author":{"gitId":"Chihui8199"},"content":"            throw new DukeException(\"Please enter a valid number\");"},{"lineNumber":63,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"Chihui8199"},"content":"        return taskNoDone;"},{"lineNumber":65,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":67,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":68,"author":{"gitId":"Chihui8199"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"Chihui8199"},"content":"     * Extracts the task number in the current list that the user wants to delete"},{"lineNumber":70,"author":{"gitId":"Chihui8199"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"Chihui8199"},"content":"     * @param userInput full userInput String"},{"lineNumber":72,"author":{"gitId":"Chihui8199"},"content":"     * @return task number to be deleted"},{"lineNumber":73,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"Chihui8199"},"content":"    public static int getTaskNoToBeMarkDelete(String userInput) throws DukeException {"},{"lineNumber":75,"author":{"gitId":"Chihui8199"},"content":"        int taskNoDelete;"},{"lineNumber":76,"author":{"gitId":"Chihui8199"},"content":"        String[] inputSplit \u003d userInput.split(\"DELETE \");"},{"lineNumber":77,"author":{"gitId":"Chihui8199"},"content":"        System.out.println(inputSplit[1]);"},{"lineNumber":78,"author":{"gitId":"Chihui8199"},"content":"        try {"},{"lineNumber":79,"author":{"gitId":"Chihui8199"},"content":"            taskNoDelete \u003d Integer.parseInt(inputSplit[1]);"},{"lineNumber":80,"author":{"gitId":"Chihui8199"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":81,"author":{"gitId":"Chihui8199"},"content":"            throw new DukeException(\"Please enter a valid number!\");"},{"lineNumber":82,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"Chihui8199"},"content":"        return taskNoDelete;"},{"lineNumber":84,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":86,"author":{"gitId":"Chihui8199"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"Chihui8199"},"content":"     * parses through \u003ccode\u003euserInput\u003c/code\u003e to instantiates Tasks to be added to the Arraylist of Tasks"},{"lineNumber":88,"author":{"gitId":"Chihui8199"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"Chihui8199"},"content":"     * @param userInput full userInput String"},{"lineNumber":90,"author":{"gitId":"Chihui8199"},"content":"     * @return taskToAdd Task object to be added"},{"lineNumber":91,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"Chihui8199"},"content":"    public static Task getTask(String userInput) throws DukeException {"},{"lineNumber":93,"author":{"gitId":"Chihui8199"},"content":"        Task taskToAdd \u003d null;"},{"lineNumber":94,"author":{"gitId":"Chihui8199"},"content":"        if (userInput.contains(\"TODO\")) {"},{"lineNumber":95,"author":{"gitId":"Chihui8199"},"content":"            taskToAdd \u003d getToDo(userInput);"},{"lineNumber":96,"author":{"gitId":"Chihui8199"},"content":"        } else if (userInput.contains(\"DEADLINE\")) {"},{"lineNumber":97,"author":{"gitId":"Chihui8199"},"content":"            taskToAdd \u003d getDeadline(userInput);"},{"lineNumber":98,"author":{"gitId":"Chihui8199"},"content":"        } else if (userInput.contains(\"EVENT\")) {"},{"lineNumber":99,"author":{"gitId":"Chihui8199"},"content":"            taskToAdd \u003d getEvent(userInput);"},{"lineNumber":100,"author":{"gitId":"Chihui8199"},"content":"        } else {"},{"lineNumber":101,"author":{"gitId":"Chihui8199"},"content":"            throw new DukeException(\"Please use the appropriate commands\");"},{"lineNumber":102,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"Chihui8199"},"content":"        return taskToAdd;"},{"lineNumber":104,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":106,"author":{"gitId":"Chihui8199"},"content":"    /***"},{"lineNumber":107,"author":{"gitId":"Chihui8199"},"content":"     * Creates new Event task"},{"lineNumber":108,"author":{"gitId":"Chihui8199"},"content":"     * @param userInput full userInput String"},{"lineNumber":109,"author":{"gitId":"Chihui8199"},"content":"     * @return a new Event task"},{"lineNumber":110,"author":{"gitId":"Chihui8199"},"content":"     * @throws DukeException"},{"lineNumber":111,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"Chihui8199"},"content":"    static Event getEvent(String userInput) throws DukeException {"},{"lineNumber":113,"author":{"gitId":"Chihui8199"},"content":"        String removeKeyword \u003d userInput.replaceAll(\"EVENT\", \"\");"},{"lineNumber":114,"author":{"gitId":"Chihui8199"},"content":"        try {"},{"lineNumber":115,"author":{"gitId":"Chihui8199"},"content":"            String[] inputSplit \u003d removeKeyword.split(\"/AT\");"},{"lineNumber":116,"author":{"gitId":"Chihui8199"},"content":"            return new Event(inputSplit[0], inputSplit[1]);"},{"lineNumber":117,"author":{"gitId":"Chihui8199"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":118,"author":{"gitId":"Chihui8199"},"content":"            throw new DukeException(\"☹ Please use the appropriate formatting(/at) \" +"},{"lineNumber":119,"author":{"gitId":"Chihui8199"},"content":"                    \"and the description of event cannot be empty!\");"},{"lineNumber":120,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":123,"author":{"gitId":"Chihui8199"},"content":"    /***"},{"lineNumber":124,"author":{"gitId":"Chihui8199"},"content":"     * Creates new ToDo task"},{"lineNumber":125,"author":{"gitId":"Chihui8199"},"content":"     * @param userInput full userInput String"},{"lineNumber":126,"author":{"gitId":"Chihui8199"},"content":"     * @return a new Todo task"},{"lineNumber":127,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"Chihui8199"},"content":"    private static Todo getToDo(String userInput) {"},{"lineNumber":129,"author":{"gitId":"Chihui8199"},"content":"        String removeKeyword \u003d userInput.replaceAll(\"TODO\", \"\");"},{"lineNumber":130,"author":{"gitId":"Chihui8199"},"content":"        return new Todo(removeKeyword);"},{"lineNumber":131,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":133,"author":{"gitId":"Chihui8199"},"content":"    /***"},{"lineNumber":134,"author":{"gitId":"Chihui8199"},"content":"     * Creates new Deadline task"},{"lineNumber":135,"author":{"gitId":"Chihui8199"},"content":"     * @param userInput full userInput String"},{"lineNumber":136,"author":{"gitId":"Chihui8199"},"content":"     * @return a new Deadline task"},{"lineNumber":137,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"Chihui8199"},"content":"    private static Deadline getDeadline(String userInput) throws DukeException {"},{"lineNumber":139,"author":{"gitId":"Chihui8199"},"content":"        try {"},{"lineNumber":140,"author":{"gitId":"Chihui8199"},"content":"            String removeKeyword \u003d userInput.replaceAll(\"DEADLINE\", \"\");"},{"lineNumber":141,"author":{"gitId":"Chihui8199"},"content":"            String[] inputSplit \u003d removeKeyword.split(\"/BY\");"},{"lineNumber":142,"author":{"gitId":"Chihui8199"},"content":"            LocalDate finalDate \u003d parseDate(inputSplit[1]);"},{"lineNumber":143,"author":{"gitId":"Chihui8199"},"content":"            LocalTime finalTime \u003d parseTime(inputSplit[1]);"},{"lineNumber":144,"author":{"gitId":"Chihui8199"},"content":"            return new Deadline(inputSplit[0], finalDate, finalTime);"},{"lineNumber":145,"author":{"gitId":"Chihui8199"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":146,"author":{"gitId":"Chihui8199"},"content":"            throw new DukeException(\"☹ Please use the appropriate formatting(/by) and \" +"},{"lineNumber":147,"author":{"gitId":"Chihui8199"},"content":"                    \"the description of deadline cannot be empty\");"},{"lineNumber":148,"author":{"gitId":"Chihui8199"},"content":"        } catch (DukeException e) {"},{"lineNumber":149,"author":{"gitId":"Chihui8199"},"content":"            throw new DukeException(\"☹ Sorry! I don\u0027t understand what that means!\");"},{"lineNumber":150,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":153,"author":{"gitId":"Chihui8199"},"content":"    /***"},{"lineNumber":154,"author":{"gitId":"Chihui8199"},"content":"     * Parses arguments in the context of the find person command"},{"lineNumber":155,"author":{"gitId":"Chihui8199"},"content":"     * @param userInput full userInput String"},{"lineNumber":156,"author":{"gitId":"Chihui8199"},"content":"     * @return the keywords set that the users wants to find"},{"lineNumber":157,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":158,"author":{"gitId":"Chihui8199"},"content":"    public static String getFindKeyword(String userInput) {"},{"lineNumber":159,"author":{"gitId":"Chihui8199"},"content":"        String keywordSet \u003d userInput.replaceAll(\"FIND\", \"\").strip();"},{"lineNumber":160,"author":{"gitId":"Chihui8199"},"content":"        return keywordSet;"},{"lineNumber":161,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":163,"author":{"gitId":"Chihui8199"},"content":"    public static LocalDate parseDate(String inputDate) throws DukeException {"},{"lineNumber":164,"author":{"gitId":"Chihui8199"},"content":"        try {"},{"lineNumber":165,"author":{"gitId":"Chihui8199"},"content":"            inputDate \u003d inputDate.trim().substring(0, LENGTH_OF_DATE);"},{"lineNumber":166,"author":{"gitId":"Chihui8199"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":167,"author":{"gitId":"Chihui8199"},"content":"            LocalDate date \u003d LocalDate.parse(inputDate.strip(), formatter);"},{"lineNumber":168,"author":{"gitId":"Chihui8199"},"content":"            return date;"},{"lineNumber":169,"author":{"gitId":"Chihui8199"},"content":"        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"},{"lineNumber":170,"author":{"gitId":"Chihui8199"},"content":"            throw new DukeException(\"Date format should be \\\"YYYY-MM-DD HH:mm\\\"\");"},{"lineNumber":171,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":174,"author":{"gitId":"Chihui8199"},"content":"    public static LocalTime parseTime(String inputTime) {"},{"lineNumber":175,"author":{"gitId":"Chihui8199"},"content":"        int index \u003d inputTime.strip().indexOf(\" \");"},{"lineNumber":176,"author":{"gitId":"Chihui8199"},"content":"        inputTime \u003d inputTime.strip().substring(index + 1);"},{"lineNumber":177,"author":{"gitId":"Chihui8199"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"},{"lineNumber":178,"author":{"gitId":"Chihui8199"},"content":"        try {"},{"lineNumber":179,"author":{"gitId":"Chihui8199"},"content":"            LocalTime time \u003d LocalTime.parse(inputTime, formatter);"},{"lineNumber":180,"author":{"gitId":"Chihui8199"},"content":"            return time;"},{"lineNumber":181,"author":{"gitId":"Chihui8199"},"content":"        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"},{"lineNumber":182,"author":{"gitId":"Chihui8199"},"content":"            return null;"},{"lineNumber":183,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":184,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"Chihui8199"},"content":"}"}],"authorContributionMap":{"Chihui8199":185}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chihui8199"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":3,"author":{"gitId":"Chihui8199"},"content":"import exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Chihui8199"},"content":"import task.Deadline;"},{"lineNumber":5,"author":{"gitId":"Chihui8199"},"content":"import task.Event;"},{"lineNumber":6,"author":{"gitId":"Chihui8199"},"content":"import task.Task;"},{"lineNumber":7,"author":{"gitId":"Chihui8199"},"content":"import task.Todo;"},{"lineNumber":8,"author":{"gitId":"Chihui8199"},"content":"import parser.Parser;"},{"lineNumber":9,"author":{"gitId":"Chihui8199"},"content":"import ui.Ui;"},{"lineNumber":10,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":11,"author":{"gitId":"Chihui8199"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":12,"author":{"gitId":"Chihui8199"},"content":"import java.io.FileWriter;"},{"lineNumber":13,"author":{"gitId":"Chihui8199"},"content":"import java.io.File;"},{"lineNumber":14,"author":{"gitId":"Chihui8199"},"content":"import java.io.IOException;"},{"lineNumber":15,"author":{"gitId":"Chihui8199"},"content":"import java.nio.file.NoSuchFileException;"},{"lineNumber":16,"author":{"gitId":"Chihui8199"},"content":"import java.time.LocalDate;"},{"lineNumber":17,"author":{"gitId":"Chihui8199"},"content":"import java.time.LocalTime;"},{"lineNumber":18,"author":{"gitId":"Chihui8199"},"content":"import java.util.ArrayList;"},{"lineNumber":19,"author":{"gitId":"Chihui8199"},"content":"import java.util.Scanner;"},{"lineNumber":20,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":21,"author":{"gitId":"Chihui8199"},"content":"/***"},{"lineNumber":22,"author":{"gitId":"Chihui8199"},"content":" * Storage class deals with loading tasks from the file and saving tasks in the file"},{"lineNumber":23,"author":{"gitId":"Chihui8199"},"content":" */"},{"lineNumber":24,"author":{"gitId":"Chihui8199"},"content":"public class Storage {"},{"lineNumber":25,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":26,"author":{"gitId":"Chihui8199"},"content":"    private File dukeFile;"},{"lineNumber":27,"author":{"gitId":"Chihui8199"},"content":"    private Task task;"},{"lineNumber":28,"author":{"gitId":"Chihui8199"},"content":"    private Ui ui;"},{"lineNumber":29,"author":{"gitId":"Chihui8199"},"content":"    private Parser parser;"},{"lineNumber":30,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":31,"author":{"gitId":"Chihui8199"},"content":"    public Storage() throws DukeException {"},{"lineNumber":32,"author":{"gitId":"Chihui8199"},"content":"        createDukeFolder();"},{"lineNumber":33,"author":{"gitId":"Chihui8199"},"content":"        createDukeFile();"},{"lineNumber":34,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":36,"author":{"gitId":"Chihui8199"},"content":"    /***"},{"lineNumber":37,"author":{"gitId":"Chihui8199"},"content":"     * Checks if Duke\u0027s directory exists"},{"lineNumber":38,"author":{"gitId":"Chihui8199"},"content":"     * If it does not, a new Duke folder will be created"},{"lineNumber":39,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"Chihui8199"},"content":"    private void createDukeFolder() {"},{"lineNumber":41,"author":{"gitId":"Chihui8199"},"content":"        File dukeFolder \u003d new File(\"./data\");"},{"lineNumber":42,"author":{"gitId":"Chihui8199"},"content":"        if (!dukeFolder.isDirectory()) {"},{"lineNumber":43,"author":{"gitId":"Chihui8199"},"content":"            try {"},{"lineNumber":44,"author":{"gitId":"Chihui8199"},"content":"                dukeFolder.mkdirs();"},{"lineNumber":45,"author":{"gitId":"Chihui8199"},"content":"            } catch (SecurityException e) {"},{"lineNumber":46,"author":{"gitId":"Chihui8199"},"content":"                ui.printErrorMessage(e.getMessage());"},{"lineNumber":47,"author":{"gitId":"Chihui8199"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":51,"author":{"gitId":"Chihui8199"},"content":"    /***"},{"lineNumber":52,"author":{"gitId":"Chihui8199"},"content":"     * Checks if a duke.txt file exists"},{"lineNumber":53,"author":{"gitId":"Chihui8199"},"content":"     * If it does not, a new duke.txt file will be created"},{"lineNumber":54,"author":{"gitId":"Chihui8199"},"content":"     * @throws DukeException catches \u003ccode\u003eNoSuchFileException\u003c/code\u003e, \u003ccode\u003eIOException\u003c/code\u003e, \u003ccode\u003eSecurityException\u003c/code\u003e and throws new DukeException*/"},{"lineNumber":55,"author":{"gitId":"Chihui8199"},"content":"    private void createDukeFile() throws DukeException {"},{"lineNumber":56,"author":{"gitId":"Chihui8199"},"content":"        File dukeFile \u003d new File(\"./data/Duke.txt\");"},{"lineNumber":57,"author":{"gitId":"Chihui8199"},"content":"        if (!dukeFile.exists()) {"},{"lineNumber":58,"author":{"gitId":"Chihui8199"},"content":"            try {"},{"lineNumber":59,"author":{"gitId":"Chihui8199"},"content":"                dukeFile.createNewFile();"},{"lineNumber":60,"author":{"gitId":"Chihui8199"},"content":"            } catch (NoSuchFileException e) {"},{"lineNumber":61,"author":{"gitId":"Chihui8199"},"content":"                throw new DukeException(\"duke.txt file not found\");"},{"lineNumber":62,"author":{"gitId":"Chihui8199"},"content":"            } catch (IOException e) {"},{"lineNumber":63,"author":{"gitId":"Chihui8199"},"content":"                throw new DukeException(\"Unable to load File\");"},{"lineNumber":64,"author":{"gitId":"Chihui8199"},"content":"            } catch (SecurityException e) {"},{"lineNumber":65,"author":{"gitId":"Chihui8199"},"content":"                throw new DukeException(e.getMessage());"},{"lineNumber":66,"author":{"gitId":"Chihui8199"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"Chihui8199"},"content":"        this.dukeFile \u003d dukeFile;"},{"lineNumber":69,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":71,"author":{"gitId":"Chihui8199"},"content":"    /***"},{"lineNumber":72,"author":{"gitId":"Chihui8199"},"content":"     * Update the duke.txt file accordingly when list of task changes"},{"lineNumber":73,"author":{"gitId":"Chihui8199"},"content":"     * @param taskList ArrayList of task objects"},{"lineNumber":74,"author":{"gitId":"Chihui8199"},"content":"     * @throws IOException"},{"lineNumber":75,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"Chihui8199"},"content":"    public void saveTaskListToFile(ArrayList\u003cTask\u003e taskList) throws IOException {"},{"lineNumber":77,"author":{"gitId":"Chihui8199"},"content":"        FileWriter fileWriter \u003d new FileWriter(dukeFile);"},{"lineNumber":78,"author":{"gitId":"Chihui8199"},"content":"        for (Task task : taskList) {"},{"lineNumber":79,"author":{"gitId":"Chihui8199"},"content":"            String descriptionOfTask \u003d task.getDescription().strip();"},{"lineNumber":80,"author":{"gitId":"Chihui8199"},"content":"            boolean isDone \u003d task.isDone();"},{"lineNumber":81,"author":{"gitId":"Chihui8199"},"content":"            String textToAppend \u003d null;"},{"lineNumber":82,"author":{"gitId":"Chihui8199"},"content":"            if (task instanceof Todo) {"},{"lineNumber":83,"author":{"gitId":"Chihui8199"},"content":"                textToAppend \u003d \"T|\" + isDone + \"|\" + descriptionOfTask + \"\\n\";"},{"lineNumber":84,"author":{"gitId":"Chihui8199"},"content":"            } else if (task instanceof Deadline) {"},{"lineNumber":85,"author":{"gitId":"Chihui8199"},"content":"                Deadline deadline \u003d (Deadline) task;"},{"lineNumber":86,"author":{"gitId":"Chihui8199"},"content":"                textToAppend \u003d \"D|\" + isDone + \"|\" + descriptionOfTask + \"|\""},{"lineNumber":87,"author":{"gitId":"Chihui8199"},"content":"                        + deadline.getDate() + \"|\" + deadline.getTime() + \"\\n\";"},{"lineNumber":88,"author":{"gitId":"Chihui8199"},"content":"            } else if (task instanceof Event) {"},{"lineNumber":89,"author":{"gitId":"Chihui8199"},"content":"                Event event \u003d (Event) task;"},{"lineNumber":90,"author":{"gitId":"Chihui8199"},"content":"                textToAppend \u003d \"E|\" + isDone + \"|\" + descriptionOfTask + \"|\" + event.getAt().strip() + \"\\n\";"},{"lineNumber":91,"author":{"gitId":"Chihui8199"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"Chihui8199"},"content":"            fileWriter.write(textToAppend);"},{"lineNumber":93,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"Chihui8199"},"content":"        fileWriter.close();"},{"lineNumber":95,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":97,"author":{"gitId":"Chihui8199"},"content":"    /***"},{"lineNumber":98,"author":{"gitId":"Chihui8199"},"content":"     * Load and process the text from the duke.txt file and add each task object into an ArrayList"},{"lineNumber":99,"author":{"gitId":"Chihui8199"},"content":"     * @return ArrayList with the tasks added from the file"},{"lineNumber":100,"author":{"gitId":"Chihui8199"},"content":"     * @throws FileNotFoundException"},{"lineNumber":101,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"Chihui8199"},"content":"    public ArrayList\u003cTask\u003e loadFile() throws FileNotFoundException, DukeException {"},{"lineNumber":103,"author":{"gitId":"Chihui8199"},"content":"        Scanner sc \u003d new Scanner(dukeFile);"},{"lineNumber":104,"author":{"gitId":"Chihui8199"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":105,"author":{"gitId":"Chihui8199"},"content":"        while (sc.hasNext()) {"},{"lineNumber":106,"author":{"gitId":"Chihui8199"},"content":"            String fileText \u003d sc.nextLine();"},{"lineNumber":107,"author":{"gitId":"Chihui8199"},"content":"            String[] taskType \u003d fileText.split(\"\\\\|\");"},{"lineNumber":108,"author":{"gitId":"Chihui8199"},"content":"            switch (taskType[0]) {"},{"lineNumber":109,"author":{"gitId":"Chihui8199"},"content":"            case \"E\":"},{"lineNumber":110,"author":{"gitId":"Chihui8199"},"content":"                task \u003d new Event(taskType[2], taskType[3]);"},{"lineNumber":111,"author":{"gitId":"Chihui8199"},"content":"                break;"},{"lineNumber":112,"author":{"gitId":"Chihui8199"},"content":"            case \"D\":"},{"lineNumber":113,"author":{"gitId":"Chihui8199"},"content":"                task \u003d new Deadline(taskType[2], formatDate(taskType[3]), formatTime(taskType[3]));"},{"lineNumber":114,"author":{"gitId":"Chihui8199"},"content":"                break;"},{"lineNumber":115,"author":{"gitId":"Chihui8199"},"content":"            case \"T\":"},{"lineNumber":116,"author":{"gitId":"Chihui8199"},"content":"                task \u003d new Todo(taskType[2]);"},{"lineNumber":117,"author":{"gitId":"Chihui8199"},"content":"                break;"},{"lineNumber":118,"author":{"gitId":"Chihui8199"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"Chihui8199"},"content":"            if (taskType[1].equals(true)) {"},{"lineNumber":120,"author":{"gitId":"Chihui8199"},"content":"                task.setDone();"},{"lineNumber":121,"author":{"gitId":"Chihui8199"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"Chihui8199"},"content":"            taskList.add(task);"},{"lineNumber":123,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"Chihui8199"},"content":"        return taskList;"},{"lineNumber":125,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":127,"author":{"gitId":"Chihui8199"},"content":"    private LocalDate formatDate(String inputDate) throws DukeException {"},{"lineNumber":128,"author":{"gitId":"Chihui8199"},"content":"        LocalDate date \u003d parser.parseDate(inputDate);"},{"lineNumber":129,"author":{"gitId":"Chihui8199"},"content":"        return date;"},{"lineNumber":130,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":132,"author":{"gitId":"Chihui8199"},"content":"    private LocalTime formatTime(String inputTime) {"},{"lineNumber":133,"author":{"gitId":"Chihui8199"},"content":"        LocalTime time \u003d parser.parseTime(inputTime);"},{"lineNumber":134,"author":{"gitId":"Chihui8199"},"content":"        return time;"},{"lineNumber":135,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"Chihui8199"},"content":"}"},{"lineNumber":137,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":138,"author":{"gitId":"Chihui8199"},"content":""}],"authorContributionMap":{"Chihui8199":138}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chihui8199"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":3,"author":{"gitId":"Chihui8199"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Chihui8199"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":6,"author":{"gitId":"Chihui8199"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"Chihui8199"},"content":"    protected LocalDate date;"},{"lineNumber":8,"author":{"gitId":"Chihui8199"},"content":"    protected LocalTime time;"},{"lineNumber":9,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":10,"author":{"gitId":"Chihui8199"},"content":"    public Deadline(String description, LocalDate date, LocalTime time) {"},{"lineNumber":11,"author":{"gitId":"Chihui8199"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"Chihui8199"},"content":"        this.date \u003d date;"},{"lineNumber":13,"author":{"gitId":"Chihui8199"},"content":"        this.time \u003d time;"},{"lineNumber":14,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":16,"author":{"gitId":"Chihui8199"},"content":"    public LocalDate getDate() {"},{"lineNumber":17,"author":{"gitId":"Chihui8199"},"content":"        return date;"},{"lineNumber":18,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":20,"author":{"gitId":"Chihui8199"},"content":"    public LocalTime getTime() {"},{"lineNumber":21,"author":{"gitId":"Chihui8199"},"content":"        return time;"},{"lineNumber":22,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":24,"author":{"gitId":"Chihui8199"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"Chihui8199"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"Chihui8199"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date + \" \" + time + \")\";"},{"lineNumber":27,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":29,"author":{"gitId":"Chihui8199"},"content":"}"},{"lineNumber":30,"author":{"gitId":"Chihui8199"},"content":""}],"authorContributionMap":{"Chihui8199":30}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chihui8199"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":3,"author":{"gitId":"Chihui8199"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"Chihui8199"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":6,"author":{"gitId":"Chihui8199"},"content":"    public Event(String description, String at) {"},{"lineNumber":7,"author":{"gitId":"Chihui8199"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"Chihui8199"},"content":"        this.at \u003d at;"},{"lineNumber":9,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":11,"author":{"gitId":"Chihui8199"},"content":"    public String getAt() {"},{"lineNumber":12,"author":{"gitId":"Chihui8199"},"content":"        return at;"},{"lineNumber":13,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":15,"author":{"gitId":"Chihui8199"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"Chihui8199"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"Chihui8199"},"content":"        return \"[E]\" + super.toString() + \" (at \" + at + \")\";"},{"lineNumber":18,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Chihui8199"},"content":"}"}],"authorContributionMap":{"Chihui8199":19}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chihui8199"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":3,"author":{"gitId":"Chihui8199"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"Chihui8199"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"Chihui8199"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":7,"author":{"gitId":"Chihui8199"},"content":"    public Task(String Description) {"},{"lineNumber":8,"author":{"gitId":"Chihui8199"},"content":"        this.description \u003d Description;"},{"lineNumber":9,"author":{"gitId":"Chihui8199"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":12,"author":{"gitId":"Chihui8199"},"content":"    public String getDescription() {"},{"lineNumber":13,"author":{"gitId":"Chihui8199"},"content":"        return description;"},{"lineNumber":14,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":16,"author":{"gitId":"Chihui8199"},"content":"    public boolean isDone() {"},{"lineNumber":17,"author":{"gitId":"Chihui8199"},"content":"        return isDone;"},{"lineNumber":18,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":20,"author":{"gitId":"Chihui8199"},"content":"    public String getStatusIcon() {"},{"lineNumber":21,"author":{"gitId":"Chihui8199"},"content":"        return (isDone ? \"[\\u2713]\" : \"[\\u2718] \"); //return tick or X symbols"},{"lineNumber":22,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":24,"author":{"gitId":"Chihui8199"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"Chihui8199"},"content":"        return getStatusIcon() + description;"},{"lineNumber":26,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":28,"author":{"gitId":"Chihui8199"},"content":"    public boolean setDone() {"},{"lineNumber":29,"author":{"gitId":"Chihui8199"},"content":"        return isDone \u003d true;"},{"lineNumber":30,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Chihui8199"},"content":"}"}],"authorContributionMap":{"Chihui8199":31}},{"path":"src/main/java/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chihui8199"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":3,"author":{"gitId":"Chihui8199"},"content":"import exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Chihui8199"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"Chihui8199"},"content":"import ui.Ui;"},{"lineNumber":6,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":7,"author":{"gitId":"Chihui8199"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":8,"author":{"gitId":"Chihui8199"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"Chihui8199"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":11,"author":{"gitId":"Chihui8199"},"content":"public class TaskManager {"},{"lineNumber":12,"author":{"gitId":"Chihui8199"},"content":"    public ArrayList\u003cTask\u003e taskList;"},{"lineNumber":13,"author":{"gitId":"Chihui8199"},"content":"    private final Ui ui;"},{"lineNumber":14,"author":{"gitId":"Chihui8199"},"content":"    private final Storage storage;"},{"lineNumber":15,"author":{"gitId":"Chihui8199"},"content":"    private Task task;"},{"lineNumber":16,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":17,"author":{"gitId":"Chihui8199"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"Chihui8199"},"content":"     * Constructor for TaskManager"},{"lineNumber":19,"author":{"gitId":"Chihui8199"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"Chihui8199"},"content":"     * @throws FileNotFoundException"},{"lineNumber":21,"author":{"gitId":"Chihui8199"},"content":"     * @throws DukeException"},{"lineNumber":22,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Chihui8199"},"content":"    public TaskManager() throws FileNotFoundException, DukeException {"},{"lineNumber":24,"author":{"gitId":"Chihui8199"},"content":"        storage \u003d new Storage();"},{"lineNumber":25,"author":{"gitId":"Chihui8199"},"content":"        taskList \u003d storage.loadFile();"},{"lineNumber":26,"author":{"gitId":"Chihui8199"},"content":"        ui \u003d new Ui();"},{"lineNumber":27,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":28,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":30,"author":{"gitId":"Chihui8199"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Chihui8199"},"content":"     * Adds a task to the ArrayList"},{"lineNumber":32,"author":{"gitId":"Chihui8199"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"Chihui8199"},"content":"     * @param task Task object to be added"},{"lineNumber":34,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Chihui8199"},"content":"    public void addTask(Task task) {"},{"lineNumber":36,"author":{"gitId":"Chihui8199"},"content":"        taskList.add(task);"},{"lineNumber":37,"author":{"gitId":"Chihui8199"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"Chihui8199"},"content":"            storage.saveTaskListToFile(taskList);"},{"lineNumber":39,"author":{"gitId":"Chihui8199"},"content":"        } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"Chihui8199"},"content":"            ui.printMessage(e.getMessage());"},{"lineNumber":41,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"Chihui8199"},"content":"        ui.printMessage(\"Got it I have added this task\","},{"lineNumber":43,"author":{"gitId":"Chihui8199"},"content":"                task.toString(),"},{"lineNumber":44,"author":{"gitId":"Chihui8199"},"content":"                ui.DIVIDER,"},{"lineNumber":45,"author":{"gitId":"Chihui8199"},"content":"                \"Enter next command: \");"},{"lineNumber":46,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":48,"author":{"gitId":"Chihui8199"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"Chihui8199"},"content":"     * Deletes the task from the arrayList based on the index given"},{"lineNumber":50,"author":{"gitId":"Chihui8199"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"Chihui8199"},"content":"     * @param taskNoDelete task number to be deleted"},{"lineNumber":52,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"Chihui8199"},"content":"    public void deleteTask(int taskNoDelete) throws DukeException {"},{"lineNumber":54,"author":{"gitId":"Chihui8199"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":56,"author":{"gitId":"Chihui8199"},"content":"            Task task \u003d taskList.get(taskNoDelete - 1);"},{"lineNumber":57,"author":{"gitId":"Chihui8199"},"content":"            taskList.remove(taskNoDelete - 1);"},{"lineNumber":58,"author":{"gitId":"Chihui8199"},"content":"            ui.printMessage(\"Got it I have deleted this task\");"},{"lineNumber":59,"author":{"gitId":"Chihui8199"},"content":"            ui.print(taskNoDelete + \":\" + task.toString());"},{"lineNumber":60,"author":{"gitId":"Chihui8199"},"content":"            ui.printMessage(ui.DIVIDER,"},{"lineNumber":61,"author":{"gitId":"Chihui8199"},"content":"                    \"Enter next command: \");"},{"lineNumber":62,"author":{"gitId":"Chihui8199"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":63,"author":{"gitId":"Chihui8199"},"content":"            throw new DukeException(\"The index is out of bounds!\");"},{"lineNumber":64,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":67,"author":{"gitId":"Chihui8199"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"Chihui8199"},"content":"     * Marks the task as done base on the index given"},{"lineNumber":69,"author":{"gitId":"Chihui8199"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"Chihui8199"},"content":"     * @param taskNoDone task number to be marked done"},{"lineNumber":71,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"Chihui8199"},"content":"    public void markDone(int taskNoDone) throws DukeException {"},{"lineNumber":73,"author":{"gitId":"Chihui8199"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"Chihui8199"},"content":"            taskList.get(taskNoDone - 1).setDone();"},{"lineNumber":75,"author":{"gitId":"Chihui8199"},"content":"            ui.printMessage(\"I have marked this task as done: \" +"},{"lineNumber":76,"author":{"gitId":"Chihui8199"},"content":"                            taskList.get(taskNoDone - 1).toString(),"},{"lineNumber":77,"author":{"gitId":"Chihui8199"},"content":"                    ui.DIVIDER,"},{"lineNumber":78,"author":{"gitId":"Chihui8199"},"content":"                    \"Enter next command: \");"},{"lineNumber":79,"author":{"gitId":"Chihui8199"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":80,"author":{"gitId":"Chihui8199"},"content":"            throw new DukeException(\"The index number is out of range\");"},{"lineNumber":81,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":84,"author":{"gitId":"Chihui8199"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"Chihui8199"},"content":"     * Returns the size of the arrayList"},{"lineNumber":86,"author":{"gitId":"Chihui8199"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"Chihui8199"},"content":"     * @return number of tasks in arrayOfTasks"},{"lineNumber":88,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"Chihui8199"},"content":"    public int getNoOfTasks() {"},{"lineNumber":90,"author":{"gitId":"Chihui8199"},"content":"        return taskList.size();"},{"lineNumber":91,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":93,"author":{"gitId":"Chihui8199"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"Chihui8199"},"content":"     * Print all items inside the arrayList"},{"lineNumber":95,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"Chihui8199"},"content":"    public void printTaskItems() {"},{"lineNumber":97,"author":{"gitId":"Chihui8199"},"content":"        System.out.println(\"You have \" + getNoOfTasks() + \" task(s) in the list.\");"},{"lineNumber":98,"author":{"gitId":"Chihui8199"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":99,"author":{"gitId":"Chihui8199"},"content":"            System.out.println((i + 1) + \": \" + taskList.get(i));"},{"lineNumber":100,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":103,"author":{"gitId":"Chihui8199"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"Chihui8199"},"content":"     * Search and print tasks with descriptions that contains the keyword(s)"},{"lineNumber":105,"author":{"gitId":"Chihui8199"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"Chihui8199"},"content":"     * @param keywordToFind keyword to find among the tasks"},{"lineNumber":107,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"Chihui8199"},"content":"    public void findTask(String keywordToFind) {"},{"lineNumber":109,"author":{"gitId":"Chihui8199"},"content":"        System.out.println(\"Here are the matching tasks found:\");"},{"lineNumber":110,"author":{"gitId":"Chihui8199"},"content":"        ui.printMessage(ui.DIVIDER, ui.FOUND_DIVIDER, ui.DIVIDER, \"\");"},{"lineNumber":111,"author":{"gitId":"Chihui8199"},"content":"        for (Task task : taskList) {"},{"lineNumber":112,"author":{"gitId":"Chihui8199"},"content":"            String taskDescription \u003d task.getDescription();"},{"lineNumber":113,"author":{"gitId":"Chihui8199"},"content":"            if (taskDescription.contains(keywordToFind)) {"},{"lineNumber":114,"author":{"gitId":"Chihui8199"},"content":"                System.out.println(task);"},{"lineNumber":115,"author":{"gitId":"Chihui8199"},"content":"            }"},{"lineNumber":116,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"Chihui8199"},"content":"        ui.printMessage(\"\", ui.DIVIDER, ui.FOUND_DIVIDER, ui.DIVIDER);"},{"lineNumber":118,"author":{"gitId":"Chihui8199"},"content":"        ui.printMessage(\"\\nEnter next command: \");"},{"lineNumber":119,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"Chihui8199"},"content":"}"}],"authorContributionMap":{"Chihui8199":120}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chihui8199"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":3,"author":{"gitId":"Chihui8199"},"content":"import task.Task;"},{"lineNumber":4,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":5,"author":{"gitId":"Chihui8199"},"content":"public class Todo extends Task {"},{"lineNumber":6,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":7,"author":{"gitId":"Chihui8199"},"content":"    public Todo(String description) {"},{"lineNumber":8,"author":{"gitId":"Chihui8199"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":11,"author":{"gitId":"Chihui8199"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"Chihui8199"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"Chihui8199"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":14,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Chihui8199"},"content":"}"}],"authorContributionMap":{"Chihui8199":15}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chihui8199"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":3,"author":{"gitId":"Chihui8199"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":5,"author":{"gitId":"Chihui8199"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"Chihui8199"},"content":"    public static String logo \u003d \" ____        _        \\n\""},{"lineNumber":7,"author":{"gitId":"Chihui8199"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":8,"author":{"gitId":"Chihui8199"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":9,"author":{"gitId":"Chihui8199"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":10,"author":{"gitId":"Chihui8199"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":11,"author":{"gitId":"Chihui8199"},"content":"    public static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"},{"lineNumber":12,"author":{"gitId":"Chihui8199"},"content":"    private final String ERROR_DIVIDER_LINE \u003d \"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\";"},{"lineNumber":13,"author":{"gitId":"Chihui8199"},"content":"    public static final String FOUND_DIVIDER \u003d \"FOUND!!!FOUND!!!FOUND!!!FOUND!!!\";"},{"lineNumber":14,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":15,"author":{"gitId":"Chihui8199"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Chihui8199"},"content":"     * Greets user when the program starts"},{"lineNumber":17,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Chihui8199"},"content":"    public static void printMenu() {"},{"lineNumber":19,"author":{"gitId":"Chihui8199"},"content":"        print(\"Hello! Im Duke\\n\" + logo + \"What can I do for you?\");"},{"lineNumber":20,"author":{"gitId":"Chihui8199"},"content":"        print(\"\u003e Use the keyword todo\");"},{"lineNumber":21,"author":{"gitId":"Chihui8199"},"content":"        print(\"\u003e Use the keyword deadlines followed \\\"/by YYYY-MM-DD HH:MM\\\"\");"},{"lineNumber":22,"author":{"gitId":"Chihui8199"},"content":"        print(\"\u003e Use the keyword event followed by \\\"/at\\\"\");"},{"lineNumber":23,"author":{"gitId":"Chihui8199"},"content":"        print(\"\u003e Use the keyword list to print\");"},{"lineNumber":24,"author":{"gitId":"Chihui8199"},"content":"        print(\"\u003e Use keyword \\\"done \u003cNumber\u003e\\\"  to mark task as done!\");"},{"lineNumber":25,"author":{"gitId":"Chihui8199"},"content":"        print(\"\u003e Use keyword \\\"delete \u003cNumber\u003e\\\"  to delete task!\");"},{"lineNumber":26,"author":{"gitId":"Chihui8199"},"content":"        print(\"\u003e Use keyword \\\"find \u003ckeyword\u003e\\\"  to find task(s)!\");"},{"lineNumber":27,"author":{"gitId":"Chihui8199"},"content":"        print(\"\u003e Use the keyword \\\"bye\\\" to exit\");"},{"lineNumber":28,"author":{"gitId":"Chihui8199"},"content":"        print(\"\u003e Use the keyword \\\"menu\\\" to bring up the menu\");"},{"lineNumber":29,"author":{"gitId":"Chihui8199"},"content":"        print(\"Input here: \");"},{"lineNumber":30,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":32,"author":{"gitId":"Chihui8199"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"Chihui8199"},"content":"     * Retrieves the userInput that will determine the command"},{"lineNumber":34,"author":{"gitId":"Chihui8199"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"Chihui8199"},"content":"     * @return userInput"},{"lineNumber":36,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"Chihui8199"},"content":"    public String getUserInput() {"},{"lineNumber":38,"author":{"gitId":"Chihui8199"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":39,"author":{"gitId":"Chihui8199"},"content":"        String userInput \u003d sc.nextLine().trim().toLowerCase();"},{"lineNumber":40,"author":{"gitId":"Chihui8199"},"content":"        return userInput;"},{"lineNumber":41,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":43,"author":{"gitId":"Chihui8199"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Chihui8199"},"content":"     * Prints all error messages for errors encountered during the program runtime"},{"lineNumber":45,"author":{"gitId":"Chihui8199"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"Chihui8199"},"content":"     * @param messages Error Messages to be printed"},{"lineNumber":47,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"Chihui8199"},"content":"    public void printErrorMessage(String... messages) {"},{"lineNumber":49,"author":{"gitId":"Chihui8199"},"content":"        print(ERROR_DIVIDER_LINE);"},{"lineNumber":50,"author":{"gitId":"Chihui8199"},"content":"        print(\"Error Message: \");"},{"lineNumber":51,"author":{"gitId":"Chihui8199"},"content":"        for (String message : messages) {"},{"lineNumber":52,"author":{"gitId":"Chihui8199"},"content":"            print(message);"},{"lineNumber":53,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"Chihui8199"},"content":"        print(ERROR_DIVIDER_LINE);"},{"lineNumber":55,"author":{"gitId":"Chihui8199"},"content":"        print(\"Enter next command: \");"},{"lineNumber":56,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":58,"author":{"gitId":"Chihui8199"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"Chihui8199"},"content":"     * To print any messages required"},{"lineNumber":60,"author":{"gitId":"Chihui8199"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"Chihui8199"},"content":"     * @param messages Message to be printed"},{"lineNumber":62,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"Chihui8199"},"content":"    public void printMessage(String... messages) {"},{"lineNumber":64,"author":{"gitId":"Chihui8199"},"content":"        for (String message : messages) {"},{"lineNumber":65,"author":{"gitId":"Chihui8199"},"content":"            print(message);"},{"lineNumber":66,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":69,"author":{"gitId":"Chihui8199"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"Chihui8199"},"content":"     * To print single line message"},{"lineNumber":71,"author":{"gitId":"Chihui8199"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"Chihui8199"},"content":"     * @param string string to print"},{"lineNumber":73,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"Chihui8199"},"content":"    public static void print(String string) {"},{"lineNumber":75,"author":{"gitId":"Chihui8199"},"content":"        System.out.println(string);"},{"lineNumber":76,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"Chihui8199"},"content":""},{"lineNumber":78,"author":{"gitId":"Chihui8199"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"Chihui8199"},"content":"     * Ends the program when the user enters the command \"bye\""},{"lineNumber":80,"author":{"gitId":"Chihui8199"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"Chihui8199"},"content":"     * @param userInput userInput"},{"lineNumber":82,"author":{"gitId":"Chihui8199"},"content":"     * @return boolean value true if userInput contains \"bye\""},{"lineNumber":83,"author":{"gitId":"Chihui8199"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"Chihui8199"},"content":"    public Boolean sayGoodBye(String userInput) {"},{"lineNumber":85,"author":{"gitId":"Chihui8199"},"content":"        if (userInput.contains(\"BYE\")) {"},{"lineNumber":86,"author":{"gitId":"Chihui8199"},"content":"            printMessage(\"Bye Bye! See you Again\");"},{"lineNumber":87,"author":{"gitId":"Chihui8199"},"content":"            return true;"},{"lineNumber":88,"author":{"gitId":"Chihui8199"},"content":"        } else {"},{"lineNumber":89,"author":{"gitId":"Chihui8199"},"content":"            return false;"},{"lineNumber":90,"author":{"gitId":"Chihui8199"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"Chihui8199"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"Chihui8199"},"content":"}"}],"authorContributionMap":{"Chihui8199":92}}]
