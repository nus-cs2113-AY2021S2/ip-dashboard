[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"import duke.exception.DukeException;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"import duke.parser.Parser;"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"     * Storage created for user."},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"    private final Storage storage \u003d new Storage();"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"     * Task list created for user."},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"    private TaskList tasks \u003d new TaskList();"},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":"     * UI created to interact with user"},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"    private static final Ui ui \u003d new Ui();"},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":"    public Duke() throws Exception {"},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":"        /**"},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"         Sets up Duke according storage in hard disk."},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":"         */"},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":"        Storage.createFolder();"},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"        if (storage.retrieveTextFile()) {"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":"            tasks \u003d new TaskList(storage.loadData());"},{"lineNumber":34,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":38,"author":{"gitId":"EmilyTJX"},"content":"    public void run(){"},{"lineNumber":39,"author":{"gitId":"EmilyTJX"},"content":"        ui.printGreeting();"},{"lineNumber":40,"author":{"gitId":"EmilyTJX"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":41,"author":{"gitId":"EmilyTJX"},"content":"        String input;"},{"lineNumber":42,"author":{"gitId":"EmilyTJX"},"content":"        boolean isExit \u003d false;"},{"lineNumber":43,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":44,"author":{"gitId":"EmilyTJX"},"content":"        while(in.hasNext()) {"},{"lineNumber":45,"author":{"gitId":"EmilyTJX"},"content":"            input \u003d in.nextLine().toLowerCase().trim();"},{"lineNumber":46,"author":{"gitId":"EmilyTJX"},"content":"            try {"},{"lineNumber":47,"author":{"gitId":"EmilyTJX"},"content":"                isExit \u003d Parser.determineCommand(input);"},{"lineNumber":48,"author":{"gitId":"EmilyTJX"},"content":"            } catch (DukeException ignored) {"},{"lineNumber":49,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"EmilyTJX"},"content":"            if(isExit){"},{"lineNumber":51,"author":{"gitId":"EmilyTJX"},"content":"                break;"},{"lineNumber":52,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":54,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"EmilyTJX"},"content":"        ui.printExitMessage();"},{"lineNumber":56,"author":{"gitId":"EmilyTJX"},"content":"        in.close();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":59,"author":{"gitId":"EmilyTJX"},"content":"    public static void main(String[] args) throws Exception {"},{"lineNumber":60,"author":{"gitId":"EmilyTJX"},"content":"        new Duke().run();"},{"lineNumber":61,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"EmilyTJX":59,"-":4}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":" * Represents the exceptions for Duke, allows extensions for other exceptions"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":" */"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"public class DukeException extends Throwable {"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"    private static String WARNING_DIVIDER \u003d \"\\txxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\n\";"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"     * Creates DukeExceptions for methods to throw."},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"     * @param errorMessage Error message."},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"    public DukeException(String errorMessage){"},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(WARNING_DIVIDER + \"\\tERROR: \" + errorMessage + WARNING_DIVIDER);"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":17}},{"path":"src/main/java/duke/exception/InvalidHelpCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"public class InvalidHelpCommandException extends DukeException{"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"     * Creates DukeExceptions for methods to throw."},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"    public InvalidHelpCommandException() {"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"        super(\"Do you mean \u0027help\u0027?\\n\");"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":10}},{"path":"src/main/java/duke/exception/InvalidTaskCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":" * Exception for invalid user inputs when creating Tasks."},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":" */"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"public class InvalidTaskCommandException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"     * Creates DukeExceptions for methods to throw."},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"    public InvalidTaskCommandException() {"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"        super(\"Please enter a valid command!\\n\""},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"                + \"\\tTo view an example, type \u0027help\u0027!\\n\");"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":14}},{"path":"src/main/java/duke/exception/InvalidTaskDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"public class InvalidTaskDateException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"     * Creates DukeExceptions for methods to throw."},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"    public InvalidTaskDateException() {"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"        super(\"Please input the correct date format!\\n\""},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"                + \"\\tTo view an example, type \u0027help\u0027!\\n\");"},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":11}},{"path":"src/main/java/duke/exception/InvalidTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"public class InvalidTaskDescriptionException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"     * Creates DukeExceptions for methods to throw."},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"    public InvalidTaskDescriptionException() {"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"        super(\"Please input valid description!\\n\""},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"                + \"\\tTo view an example, type \u0027help\u0027!\\n\");"},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":11}},{"path":"src/main/java/duke/exception/InvalidTaskKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"public class InvalidTaskKeywordException extends DukeException{"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"     * Creates DukeExceptions for methods to throw."},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"    public InvalidTaskKeywordException() {"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"        super(\"Please input a keyword to find!\\n\");"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":10}},{"path":"src/main/java/duke/exception/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"public class InvalidTaskNumberException extends DukeException{"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"     * Creates DukeExceptions for methods to throw."},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"    public InvalidTaskNumberException() {"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"        super(\"Please input a valid task number!\\n\""},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"                + \"\\tTo view your list, type \u0027list\u0027!\\n\");"},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":11}},{"path":"src/main/java/duke/exception/NoTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"public class NoTaskException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"     * Creates DukeExceptions for methods to throw."},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"    public NoTaskException() {"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"        super(\"There are currently no tasks in your list!\\n\""},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"                + \"\\tStart adding to your list!\\n\");"},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":11}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"import duke.exception.InvalidTaskCommandException;"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":" * Handles Duke\u0027s commands."},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":" */"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"public class Parser {"},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":"     * Determines the command from user input."},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"     * @return Command to exit program."},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"    public static boolean determineCommand(String input) throws DukeException {"},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"                TaskList.listTask();"},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.startsWith(\"done\")) {"},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":"                TaskList.markTaskDone(input);"},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.startsWith(\"delete\")) {"},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"                TaskList.deleteTask(input);"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.startsWith(\"todo\")) {"},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":"                TaskList.addToDo(input);"},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.startsWith(\"deadline\")) {"},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"                TaskList.addDeadline(input);"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.startsWith(\"event\")) {"},{"lineNumber":34,"author":{"gitId":"EmilyTJX"},"content":"                TaskList.addEvent(input);"},{"lineNumber":35,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.startsWith(\"find\")) {"},{"lineNumber":36,"author":{"gitId":"EmilyTJX"},"content":"                TaskList.findTask(input);"},{"lineNumber":37,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.equals(\"bye\")) {"},{"lineNumber":38,"author":{"gitId":"EmilyTJX"},"content":"                return true;"},{"lineNumber":39,"author":{"gitId":"EmilyTJX"},"content":"            } else {"},{"lineNumber":40,"author":{"gitId":"EmilyTJX"},"content":"                throw new InvalidTaskCommandException();"},{"lineNumber":41,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":43,"author":{"gitId":"EmilyTJX"},"content":"       return false;"},{"lineNumber":44,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":45}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":" * Loads tasks from duke.txt or"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":" * creates and saves new tasks to duke.txt"},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":" */"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"public class Storage {"},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"    private static String path;"},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":"    public Storage() {"},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"        path \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";"},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"     * Creates data folder if it does not exist"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":"    public static void createFolder() {"},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printPresentDirectory();"},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"        String folderPath \u003d System.getProperty(\"user.dir\") + \"/data\";"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":"        File folder \u003d new File(folderPath);"},{"lineNumber":34,"author":{"gitId":"EmilyTJX"},"content":"        boolean isSuccessful \u003d folder.mkdir();"},{"lineNumber":35,"author":{"gitId":"EmilyTJX"},"content":"        if (isSuccessful) {"},{"lineNumber":36,"author":{"gitId":"EmilyTJX"},"content":"            Ui.printSuccessfulCreateFolderMessage();"},{"lineNumber":37,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":38,"author":{"gitId":"EmilyTJX"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"EmilyTJX"},"content":"            Ui.printFolderExistsMessage();"},{"lineNumber":40,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":43,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"EmilyTJX"},"content":"     * Checks if text file exists"},{"lineNumber":45,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"EmilyTJX"},"content":"    public boolean retrieveTextFile() {"},{"lineNumber":47,"author":{"gitId":"EmilyTJX"},"content":"        boolean hasTextFile \u003d false;"},{"lineNumber":48,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"EmilyTJX"},"content":"            File data \u003d new File(path);"},{"lineNumber":50,"author":{"gitId":"EmilyTJX"},"content":"            if (data.createNewFile()) {"},{"lineNumber":51,"author":{"gitId":"EmilyTJX"},"content":"                System.out.println(\"Text file created: \" + data.getName());"},{"lineNumber":52,"author":{"gitId":"EmilyTJX"},"content":"            } else {"},{"lineNumber":53,"author":{"gitId":"EmilyTJX"},"content":"                hasTextFile \u003d true;"},{"lineNumber":54,"author":{"gitId":"EmilyTJX"},"content":"                Ui.printFileExistsMessage();"},{"lineNumber":55,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"EmilyTJX"},"content":"        } catch (IOException e) { //creating or retrieving data has errors"},{"lineNumber":57,"author":{"gitId":"EmilyTJX"},"content":"            Ui.printErrorMessage(e);"},{"lineNumber":58,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"EmilyTJX"},"content":"        return hasTextFile;"},{"lineNumber":60,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":62,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"EmilyTJX"},"content":"     * Loads in tasks from duke.txt"},{"lineNumber":64,"author":{"gitId":"EmilyTJX"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"EmilyTJX"},"content":"     * @throws FileNotFoundException if duke.txt does not exist"},{"lineNumber":66,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"EmilyTJX"},"content":"    public ArrayList\u003cString\u003e loadData(){"},{"lineNumber":68,"author":{"gitId":"EmilyTJX"},"content":"        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":69,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":70,"author":{"gitId":"EmilyTJX"},"content":"            File data \u003d new File(path);"},{"lineNumber":71,"author":{"gitId":"EmilyTJX"},"content":"            Scanner sc \u003d new Scanner(data);"},{"lineNumber":72,"author":{"gitId":"EmilyTJX"},"content":"            String taskToLoad;"},{"lineNumber":73,"author":{"gitId":"EmilyTJX"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":74,"author":{"gitId":"EmilyTJX"},"content":"                taskToLoad \u003d sc.nextLine();"},{"lineNumber":75,"author":{"gitId":"EmilyTJX"},"content":"                tasks.add(taskToLoad);"},{"lineNumber":76,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"EmilyTJX"},"content":"            sc.close();"},{"lineNumber":78,"author":{"gitId":"EmilyTJX"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":79,"author":{"gitId":"EmilyTJX"},"content":"            Ui.printErrorMessage(e);"},{"lineNumber":80,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"EmilyTJX"},"content":"        return tasks;"},{"lineNumber":82,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":84,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"EmilyTJX"},"content":"     * Updates and saves new tasks to duke.txt."},{"lineNumber":86,"author":{"gitId":"EmilyTJX"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"EmilyTJX"},"content":"     * @param tasks Task list to be updated."},{"lineNumber":88,"author":{"gitId":"EmilyTJX"},"content":"     * @throws IOException if data cannot be saved."},{"lineNumber":89,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"EmilyTJX"},"content":"    public static void saveData(ArrayList\u003cTask\u003e tasks){"},{"lineNumber":91,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":92,"author":{"gitId":"EmilyTJX"},"content":"            FileWriter fileWriter \u003d new FileWriter(path);"},{"lineNumber":93,"author":{"gitId":"EmilyTJX"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); ++i) {"},{"lineNumber":94,"author":{"gitId":"EmilyTJX"},"content":"                String taskToWrite \u003d tasks.get(i).taskToText() + \"\\n\";"},{"lineNumber":95,"author":{"gitId":"EmilyTJX"},"content":"                fileWriter.write(taskToWrite);"},{"lineNumber":96,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"EmilyTJX"},"content":"            fileWriter.close();"},{"lineNumber":98,"author":{"gitId":"EmilyTJX"},"content":"        } catch (IOException e) {"},{"lineNumber":99,"author":{"gitId":"EmilyTJX"},"content":"            Ui.printErrorMessage(e);"},{"lineNumber":100,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":103,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":104,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":104}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"    protected String deadline;"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"    protected String formattedTaskDate;"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"    public Deadline(String taskDescription, String date) {"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"        super(taskDescription);"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"        LocalDate taskDate \u003d LocalDate.parse(date);"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"        this.formattedTaskDate \u003d taskDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"        this.deadline \u003d date;"},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"        this.taskType \u003d \"[D]\";"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"     * Prints task to user."},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":"        return super.toString() + \"(by: \" + formattedTaskDate + \")\";"},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":"     * Translates data into text format."},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":"    public String taskToText() {"},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":"        return \"D|\" + super.completed + \"| \" + super.taskDescription + \"|\" + deadline;"},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":33}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"    protected String eventTime;"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"    protected String formattedTaskDate;"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"    public Event(String taskDescription, String date) {"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"        super(taskDescription);"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"        LocalDate taskDate \u003d LocalDate.parse(date);"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"        this.formattedTaskDate \u003d taskDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"        this.eventTime \u003d date;"},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"        this.taskType \u003d \"[E]\";"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"     * Prints task to user."},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":"        return super.toString() + \"(at: \" + formattedTaskDate + \")\";"},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":"     * Translates data into text format."},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":"    public String taskToText() {"},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":"        return \"E|\" + super.completed + \"| \" + super.taskDescription + \"|\" + eventTime;"},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":33}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"    protected String taskDescription;"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"    protected String taskType;"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"    protected String completed;"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"    public Task(String inputTask) {"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"        this.taskDescription \u003d inputTask;"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"        this.isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"        this.taskType \u003d \"[ ]\";"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"        this.completed \u003d \"0\";"},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"    public String getStatusIcon() {"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"        //if task is done, mark with X"},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");"},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":"    public void markAsDone() {"},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"        this.isDone \u003d true;"},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"        return taskType + this.getStatusIcon() + this.taskDescription;"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"     * Formats input from duke.txt into task format"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"EmilyTJX"},"content":"    public static Task textToTask(String text) {"},{"lineNumber":35,"author":{"gitId":"EmilyTJX"},"content":"        String[] task \u003d text.split(\"\\\\|\");"},{"lineNumber":36,"author":{"gitId":"EmilyTJX"},"content":"        Task existingTask;"},{"lineNumber":37,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":38,"author":{"gitId":"EmilyTJX"},"content":"        switch (task[0]) {"},{"lineNumber":39,"author":{"gitId":"EmilyTJX"},"content":"        case \"T\":"},{"lineNumber":40,"author":{"gitId":"EmilyTJX"},"content":"            existingTask \u003d new ToDo(task[2]);"},{"lineNumber":41,"author":{"gitId":"EmilyTJX"},"content":"            break;"},{"lineNumber":42,"author":{"gitId":"EmilyTJX"},"content":"        case \"D\":"},{"lineNumber":43,"author":{"gitId":"EmilyTJX"},"content":"            existingTask \u003d new Deadline(task[2], task[3]);"},{"lineNumber":44,"author":{"gitId":"EmilyTJX"},"content":"            break;"},{"lineNumber":45,"author":{"gitId":"EmilyTJX"},"content":"        case \"E\":"},{"lineNumber":46,"author":{"gitId":"EmilyTJX"},"content":"            existingTask \u003d new Event(task[2], task[3]);"},{"lineNumber":47,"author":{"gitId":"EmilyTJX"},"content":"            break;"},{"lineNumber":48,"author":{"gitId":"EmilyTJX"},"content":"        default:    //case \"A\""},{"lineNumber":49,"author":{"gitId":"EmilyTJX"},"content":"            existingTask \u003d new Task(task[2]);"},{"lineNumber":50,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"EmilyTJX"},"content":"        if (task[1].equals(\"1\")) {"},{"lineNumber":52,"author":{"gitId":"EmilyTJX"},"content":"            existingTask.markAsDone();"},{"lineNumber":53,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"EmilyTJX"},"content":"        return existingTask;"},{"lineNumber":55,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":57,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"EmilyTJX"},"content":"     * Formats list of tasks into duke.txt format"},{"lineNumber":59,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"EmilyTJX"},"content":"    public String taskToText() {"},{"lineNumber":61,"author":{"gitId":"EmilyTJX"},"content":"        return \"A|\" + completed + \"|\" + taskDescription;"},{"lineNumber":62,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":64,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":64}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"import duke.exception.*;"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"     * Creates tasks according to user data from files."},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":"    public TaskList(ArrayList\u003cString\u003e dataTasks) {"},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"        for (String task : dataTasks) {"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"            tasks.add(Task.textToTask(task));"},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"     * Creates new tasks if no existing data in files."},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":"    public TaskList() {"},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"     * Prints out all tasks in TaskList"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"EmilyTJX"},"content":"    public static void listTask() throws DukeException {"},{"lineNumber":35,"author":{"gitId":"EmilyTJX"},"content":"        if (tasks.isEmpty()) {"},{"lineNumber":36,"author":{"gitId":"EmilyTJX"},"content":"            throw new NoTaskException();"},{"lineNumber":37,"author":{"gitId":"EmilyTJX"},"content":"        } else {"},{"lineNumber":38,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":39,"author":{"gitId":"EmilyTJX"},"content":"            Ui.printDivider();"},{"lineNumber":40,"author":{"gitId":"EmilyTJX"},"content":"            System.out.println(\"\\tHere are the tasks in your list:\");"},{"lineNumber":41,"author":{"gitId":"EmilyTJX"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); ++i) {"},{"lineNumber":42,"author":{"gitId":"EmilyTJX"},"content":"                Ui.printTask(tasks, i);"},{"lineNumber":43,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"EmilyTJX"},"content":"            Ui.printDivider();"},{"lineNumber":45,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":48,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":49,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"EmilyTJX"},"content":"     * Prints message when task is marked as done."},{"lineNumber":51,"author":{"gitId":"EmilyTJX"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"EmilyTJX"},"content":"     * @param input Task that was marked as done."},{"lineNumber":53,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"EmilyTJX"},"content":"    public static void markTaskDone(String input) throws DukeException {"},{"lineNumber":55,"author":{"gitId":"EmilyTJX"},"content":"        String taskNumberString;"},{"lineNumber":56,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":57,"author":{"gitId":"EmilyTJX"},"content":"            taskNumberString \u003d input.split(\" \")[1];"},{"lineNumber":58,"author":{"gitId":"EmilyTJX"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":59,"author":{"gitId":"EmilyTJX"},"content":"            throw new InvalidTaskNumberException();"},{"lineNumber":60,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":62,"author":{"gitId":"EmilyTJX"},"content":"        int taskNumber \u003d Integer.parseInt(taskNumberString);"},{"lineNumber":63,"author":{"gitId":"EmilyTJX"},"content":"        boolean taskNumberIsLessThanOne \u003d (taskNumber \u003c 1);"},{"lineNumber":64,"author":{"gitId":"EmilyTJX"},"content":"        boolean taskNumberIsMoreThanListSize \u003d (taskNumber \u003e tasks.size());"},{"lineNumber":65,"author":{"gitId":"EmilyTJX"},"content":"        if (taskNumberIsLessThanOne || taskNumberIsMoreThanListSize) throw new InvalidTaskNumberException();"},{"lineNumber":66,"author":{"gitId":"EmilyTJX"},"content":"        Task currentTask \u003d tasks.get(taskNumber - 1);"},{"lineNumber":67,"author":{"gitId":"EmilyTJX"},"content":"        currentTask.markAsDone();"},{"lineNumber":68,"author":{"gitId":"EmilyTJX"},"content":"        Storage.saveData(tasks);"},{"lineNumber":69,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":70,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printDivider();"},{"lineNumber":71,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printMarkedTaskMessage(currentTask);"},{"lineNumber":72,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printDivider();"},{"lineNumber":73,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":75,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":76,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"EmilyTJX"},"content":"     * Adds a To-Do task to tasks"},{"lineNumber":78,"author":{"gitId":"EmilyTJX"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"EmilyTJX"},"content":"     * @param input User input for To-Do task description."},{"lineNumber":80,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"EmilyTJX"},"content":"    public static void addToDo(String input) throws DukeException {"},{"lineNumber":82,"author":{"gitId":"EmilyTJX"},"content":"        String taskInfo;"},{"lineNumber":83,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":84,"author":{"gitId":"EmilyTJX"},"content":"            taskInfo \u003d input.split(\"todo\")[1].trim();"},{"lineNumber":85,"author":{"gitId":"EmilyTJX"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":86,"author":{"gitId":"EmilyTJX"},"content":"            throw new InvalidTaskDescriptionException();"},{"lineNumber":87,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":89,"author":{"gitId":"EmilyTJX"},"content":"        Task currentTask \u003d new ToDo(taskInfo);"},{"lineNumber":90,"author":{"gitId":"EmilyTJX"},"content":"        tasks.add(currentTask);"},{"lineNumber":91,"author":{"gitId":"EmilyTJX"},"content":"        Storage.saveData(tasks);"},{"lineNumber":92,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":93,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printDivider();"},{"lineNumber":94,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printAddedTaskMessage(currentTask);"},{"lineNumber":95,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printRemainingTaskMessage(tasks);"},{"lineNumber":96,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printDivider();"},{"lineNumber":97,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":98,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":100,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"EmilyTJX"},"content":"     * Adds a Deadline task to tasks"},{"lineNumber":102,"author":{"gitId":"EmilyTJX"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"EmilyTJX"},"content":"     * @param input User input for Deadline task description and date."},{"lineNumber":104,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":106,"author":{"gitId":"EmilyTJX"},"content":"    public static void addDeadline(String input) throws DukeException {"},{"lineNumber":107,"author":{"gitId":"EmilyTJX"},"content":"        String taskInfo;"},{"lineNumber":108,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":109,"author":{"gitId":"EmilyTJX"},"content":"            taskInfo \u003d input.split(\"deadline\")[1].trim();"},{"lineNumber":110,"author":{"gitId":"EmilyTJX"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":111,"author":{"gitId":"EmilyTJX"},"content":"            throw new InvalidTaskDescriptionException();"},{"lineNumber":112,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":114,"author":{"gitId":"EmilyTJX"},"content":"        String[] splitTaskInfo \u003d taskInfo.split(\"/by\", 2);"},{"lineNumber":115,"author":{"gitId":"EmilyTJX"},"content":"        String taskDescription \u003d splitTaskInfo[0].trim();"},{"lineNumber":116,"author":{"gitId":"EmilyTJX"},"content":"        String deadline \u003d splitTaskInfo[1].trim();"},{"lineNumber":117,"author":{"gitId":"EmilyTJX"},"content":"        Task currentTask \u003d new Deadline(taskDescription, deadline);"},{"lineNumber":118,"author":{"gitId":"EmilyTJX"},"content":"        tasks.add(currentTask);"},{"lineNumber":119,"author":{"gitId":"EmilyTJX"},"content":"        Storage.saveData(tasks);"},{"lineNumber":120,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":121,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printDivider();"},{"lineNumber":122,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printAddedTaskMessage(currentTask);"},{"lineNumber":123,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printRemainingTaskMessage(tasks);"},{"lineNumber":124,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printDivider();"},{"lineNumber":125,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":127,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"EmilyTJX"},"content":"     * Adds a Event task to tasks"},{"lineNumber":129,"author":{"gitId":"EmilyTJX"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"EmilyTJX"},"content":"     * @param input User input for Event task description and date."},{"lineNumber":131,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"EmilyTJX"},"content":"    public static void addEvent(String input) throws DukeException {"},{"lineNumber":133,"author":{"gitId":"EmilyTJX"},"content":"        String taskInfo;"},{"lineNumber":134,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":135,"author":{"gitId":"EmilyTJX"},"content":"            taskInfo \u003d input.split(\"event\")[1];"},{"lineNumber":136,"author":{"gitId":"EmilyTJX"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":137,"author":{"gitId":"EmilyTJX"},"content":"            throw new InvalidTaskDescriptionException();"},{"lineNumber":138,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":140,"author":{"gitId":"EmilyTJX"},"content":"        String[] splitTaskInfo \u003d taskInfo.split(\"/at\", 2);"},{"lineNumber":141,"author":{"gitId":"EmilyTJX"},"content":"        String taskDescription \u003d splitTaskInfo[0].trim();"},{"lineNumber":142,"author":{"gitId":"EmilyTJX"},"content":"        String timeDetails \u003d splitTaskInfo[1].trim();"},{"lineNumber":143,"author":{"gitId":"EmilyTJX"},"content":"        Task currentTask \u003d new Event(taskDescription, timeDetails);"},{"lineNumber":144,"author":{"gitId":"EmilyTJX"},"content":"        tasks.add(currentTask);"},{"lineNumber":145,"author":{"gitId":"EmilyTJX"},"content":"        Storage.saveData(tasks);"},{"lineNumber":146,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":147,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printDivider();"},{"lineNumber":148,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printAddedTaskMessage(currentTask);"},{"lineNumber":149,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printRemainingTaskMessage(tasks);"},{"lineNumber":150,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printDivider();"},{"lineNumber":151,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":152,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":154,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":155,"author":{"gitId":"EmilyTJX"},"content":"     * Deletes a task"},{"lineNumber":156,"author":{"gitId":"EmilyTJX"},"content":"     *"},{"lineNumber":157,"author":{"gitId":"EmilyTJX"},"content":"     * @param input User input for Index of task to be deleted."},{"lineNumber":158,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":160,"author":{"gitId":"EmilyTJX"},"content":"    public static void deleteTask(String input) throws DukeException {"},{"lineNumber":161,"author":{"gitId":"EmilyTJX"},"content":"        String taskNumberString;"},{"lineNumber":162,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":163,"author":{"gitId":"EmilyTJX"},"content":"            taskNumberString \u003d input.split(\"delete\")[1];"},{"lineNumber":164,"author":{"gitId":"EmilyTJX"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":165,"author":{"gitId":"EmilyTJX"},"content":"            throw new InvalidTaskNumberException();"},{"lineNumber":166,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":168,"author":{"gitId":"EmilyTJX"},"content":"        int taskNumber \u003d Integer.parseInt(taskNumberString);"},{"lineNumber":169,"author":{"gitId":"EmilyTJX"},"content":"        boolean taskNumberIsLessThanOne \u003d (taskNumber \u003c 1);"},{"lineNumber":170,"author":{"gitId":"EmilyTJX"},"content":"        boolean taskNumberIsMoreThanListSize \u003d (taskNumber \u003e tasks.size());"},{"lineNumber":171,"author":{"gitId":"EmilyTJX"},"content":"        if (taskNumberIsLessThanOne || taskNumberIsMoreThanListSize) {"},{"lineNumber":172,"author":{"gitId":"EmilyTJX"},"content":"            throw new InvalidTaskNumberException();"},{"lineNumber":173,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":175,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printDivider();"},{"lineNumber":176,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(\"\\tRemoving task: \\n\");"},{"lineNumber":177,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printTask(tasks, taskNumber - 1);"},{"lineNumber":178,"author":{"gitId":"EmilyTJX"},"content":"        tasks.remove(taskNumber - 1);"},{"lineNumber":179,"author":{"gitId":"EmilyTJX"},"content":"        Storage.saveData(tasks);"},{"lineNumber":180,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":181,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(\"\\tSuccessfully removed!\\n\");"},{"lineNumber":182,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printRemainingTaskMessage(tasks);"},{"lineNumber":183,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printDivider();"},{"lineNumber":184,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":185,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":187,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":188,"author":{"gitId":"EmilyTJX"},"content":"     * Finds a task according to keywords"},{"lineNumber":189,"author":{"gitId":"EmilyTJX"},"content":"     *"},{"lineNumber":190,"author":{"gitId":"EmilyTJX"},"content":"     * @param input User input for finTask task searchWord"},{"lineNumber":191,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":192,"author":{"gitId":"EmilyTJX"},"content":"    public static void findTask(String input) throws DukeException {"},{"lineNumber":193,"author":{"gitId":"EmilyTJX"},"content":"        String keyword;"},{"lineNumber":194,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":195,"author":{"gitId":"EmilyTJX"},"content":"            keyword \u003d input.split(\"find\")[1].trim();"},{"lineNumber":196,"author":{"gitId":"EmilyTJX"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":197,"author":{"gitId":"EmilyTJX"},"content":"            throw new InvalidTaskKeywordException();"},{"lineNumber":198,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":199,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":200,"author":{"gitId":"EmilyTJX"},"content":"        boolean hasTask \u003d false;"},{"lineNumber":201,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printDivider();"},{"lineNumber":202,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(\"\\tHere are the matching tasks in your list: \\n\");"},{"lineNumber":203,"author":{"gitId":"EmilyTJX"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"},{"lineNumber":204,"author":{"gitId":"EmilyTJX"},"content":"            if (tasks.get(i).taskDescription.contains(keyword)) {"},{"lineNumber":205,"author":{"gitId":"EmilyTJX"},"content":"                Ui.printTask(tasks, i);"},{"lineNumber":206,"author":{"gitId":"EmilyTJX"},"content":"                hasTask \u003d true;"},{"lineNumber":207,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":208,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":209,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printDivider();"},{"lineNumber":210,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":211,"author":{"gitId":"EmilyTJX"},"content":"        if (!hasTask) {"},{"lineNumber":212,"author":{"gitId":"EmilyTJX"},"content":"            Ui.printSearchWordNotFoundMessage();"},{"lineNumber":213,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":214,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":215,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":216,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":216}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"    public ToDo(String taskDescription) {"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"        super(taskDescription);"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"        this.taskType \u003d \"[T]\";"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"        return super.toString();"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"    public String taskToText() {"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":"        return \"T|\" + super.completed + \"|\" + super.taskDescription;"},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":19}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":" * Prints relevant message to prompt user input"},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":" */"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"public class Ui {"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"    private static final String DIVIDER \u003d \"\\t_______________________________\\n\";"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"    private static String LOGO \u003d"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"            \"▒▒▒▒▒▒▒█▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█\\n\""},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▒▒▒▒█░▒▒▒▒▒▒▒▓▒▒▓▒▒▒▒▒▒▒░█\\n\""},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▒▒▒▒█░▒▒▓▒▒▒▒▒▒▒▒▒▄▄▒▓▒▒░█░▄▄\\n\""},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▄▀▀▄▄█░▒▒▒▒▒▒▓▒▒▒▒█░░▀▄▄▄▄▄▀░░█\\n\""},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒█░░░░█░▒▒▒▒▒▒▒▒▒▒▒█░░░░░░░░░░░█\\n\""},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▀▀▄▄█░▒▒▒▒▓▒▒▒▓▒█░░░█▒░░░░█▒░░█\\n\""},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▒▒▒▒█░▒▓▒▒▒▒▓▒▒▒█░░░░░░░▀░░░░░█\\n\""},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▒▒▄▄█░▒▒▒▓▒▒▒▒▒▒▒█░░█▄▄█▄▄█░░█\\n\""},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▒█░░░█▄▄▄▄▄▄▄▄▄▄█░█▄▄▄▄▄▄▄▄▄█\\n\""},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▒█▄▄█░░█▄▄█░░░░░░█▄▄█░░█▄▄█\\n\""},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"                    + \" ____        _        \\n\""},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":"    public static void printPresentDirectory() {"},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(\"Present project directory is: \" + System.getProperty(\"user.dir\"));"},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":34,"author":{"gitId":"EmilyTJX"},"content":"    public static void printSuccessfulCreateFolderMessage() {"},{"lineNumber":35,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(\"Folder created successfully.\");"},{"lineNumber":36,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":38,"author":{"gitId":"EmilyTJX"},"content":"    public static void printFolderExistsMessage() {"},{"lineNumber":39,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(\"Folder already exists.\");"},{"lineNumber":40,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":42,"author":{"gitId":"EmilyTJX"},"content":"    public static void printErrorMessage(IOException e) {"},{"lineNumber":43,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(\"An error occurred.\");"},{"lineNumber":44,"author":{"gitId":"EmilyTJX"},"content":"        e.printStackTrace();"},{"lineNumber":45,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":47,"author":{"gitId":"EmilyTJX"},"content":"    public static void printFileExistsMessage() {"},{"lineNumber":48,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(\"Text file already exists.\");"},{"lineNumber":49,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":51,"author":{"gitId":"EmilyTJX"},"content":"    public static void printDivider(){"},{"lineNumber":52,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":53,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"EmilyTJX"},"content":"    public void printGreeting() {"},{"lineNumber":55,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(LOGO);"},{"lineNumber":56,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\");"},{"lineNumber":57,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":59,"author":{"gitId":"EmilyTJX"},"content":"    public static void printSearchWordNotFoundMessage() {"},{"lineNumber":60,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(\"No matches found! Please try again.\");"},{"lineNumber":61,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":63,"author":{"gitId":"EmilyTJX"},"content":"    public static void printTask(ArrayList\u003cTask\u003e tasks, int taskNumber){"},{"lineNumber":64,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(\"\\t\" + (taskNumber + 1) + \".\" +"},{"lineNumber":65,"author":{"gitId":"EmilyTJX"},"content":"                tasks.get(taskNumber).toString());"},{"lineNumber":66,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":68,"author":{"gitId":"EmilyTJX"},"content":"    public static void printAddedTaskMessage(Task currentTask){"},{"lineNumber":69,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\\n\\t\\t\" +"},{"lineNumber":70,"author":{"gitId":"EmilyTJX"},"content":"                currentTask.toString());"},{"lineNumber":71,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"EmilyTJX"},"content":"     * Checks number of tasks for printing fluency"},{"lineNumber":74,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"EmilyTJX"},"content":"    protected static String checkSingular(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":76,"author":{"gitId":"EmilyTJX"},"content":"        if (tasks.size() \u003e 1) {"},{"lineNumber":77,"author":{"gitId":"EmilyTJX"},"content":"            return \" tasks \";"},{"lineNumber":78,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"EmilyTJX"},"content":"        return \" task \";"},{"lineNumber":80,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"EmilyTJX"},"content":"    public static void printRemainingTaskMessage(ArrayList\u003cTask\u003e tasks){"},{"lineNumber":82,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(\"\\tNow you have \" + tasks.size() + checkSingular(tasks) + \"in your list.\\n\");"},{"lineNumber":83,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":85,"author":{"gitId":"EmilyTJX"},"content":"    public static void printMarkedTaskMessage(Task currentTask){"},{"lineNumber":86,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(\"\\tNice! I\u0027ve marked this task as done:\" +"},{"lineNumber":87,"author":{"gitId":"EmilyTJX"},"content":"                \"\\n\\t\" + currentTask.toString() + \"\\n\");"},{"lineNumber":88,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":90,"author":{"gitId":"EmilyTJX"},"content":"    public void printExitMessage() {"},{"lineNumber":91,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(\"Bye. Hope to see you again soon!\\n\");"},{"lineNumber":92,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":94,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":95,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":95}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"add 1"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":"add 2"},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"add list"}],"authorContributionMap":{"EmilyTJX":3}}]
