[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":"    protected String deadline;"},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"    public Deadline(String taskDescription, String by) {"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"        super(taskDescription);"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"        this.deadline \u003d by;"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"        this.taskType \u003d \"[D]\";"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"        return super.toString() + \"(by: \" + deadline + \")\";"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"    public String taskToText() {"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":"        return \"D|\" + super.completed + \"|\" + super.taskDescription + \"|\" + deadline;"},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":19}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"    protected static FileManager storage;"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"    public Duke() {"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"        // set up the things needed to start Duke"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"        FileManager.createFolder();"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"        storage \u003d new FileManager();"},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"        if (storage.retrieveTextFile()) {"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"            storage.loadData();"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"    public void run() {"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":"        DukeCommandHandler.greeting();"},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"        String input;"},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"        while (in.hasNext()) {"},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":"            input \u003d in.nextLine();"},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"                DukeCommandHandler.listTask();"},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.contains(\"done\")) {"},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":"                DukeCommandHandler.markTaskDone(input);"},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.contains(\"delete\")) {"},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"                DukeCommandHandler.deleteTask(input);"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.contains(\"add\")) {"},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":"                DukeCommandHandler.addTask(input);"},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.contains(\"todo\")) {"},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"                DukeCommandHandler.addToDo(input);"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.contains(\"deadline\")) {"},{"lineNumber":34,"author":{"gitId":"EmilyTJX"},"content":"                DukeCommandHandler.addDeadline(input);"},{"lineNumber":35,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.contains(\"event\")) {"},{"lineNumber":36,"author":{"gitId":"EmilyTJX"},"content":"                DukeCommandHandler.addEvent(input);"},{"lineNumber":37,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.equals(\"bye\")) {"},{"lineNumber":38,"author":{"gitId":"EmilyTJX"},"content":"                DukeCommandHandler.exitDuke();"},{"lineNumber":39,"author":{"gitId":"EmilyTJX"},"content":"                break;"},{"lineNumber":40,"author":{"gitId":"EmilyTJX"},"content":"            } else {"},{"lineNumber":41,"author":{"gitId":"EmilyTJX"},"content":"                DukeException.invalidCommand();"},{"lineNumber":42,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"EmilyTJX"},"content":"        in.close();"},{"lineNumber":45,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":49,"author":{"gitId":"EmilyTJX"},"content":"        new Duke().run();"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"EmilyTJX":47,"-":5}},{"path":"src/main/java/DukeCommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"public class DukeCommandHandler {"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"    private static final String DIVIDER \u003d \"\\t_______________________________\\n\";"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"    protected static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"    private static final String LOGO \u003d"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"            \"▒▒▒▒▒▒▒█▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█\\n\""},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▒▒▒▒█░▒▒▒▒▒▒▒▓▒▒▓▒▒▒▒▒▒▒░█\\n\""},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▒▒▒▒█░▒▒▓▒▒▒▒▒▒▒▒▒▄▄▒▓▒▒░█░▄▄\\n\""},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▄▀▀▄▄█░▒▒▒▒▒▒▓▒▒▒▒█░░▀▄▄▄▄▄▀░░█\\n\""},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒█░░░░█░▒▒▒▒▒▒▒▒▒▒▒█░░░░░░░░░░░█\\n\""},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▀▀▄▄█░▒▒▒▒▓▒▒▒▓▒█░░░█▒░░░░█▒░░█\\n\""},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▒▒▒▒█░▒▓▒▒▒▒▓▒▒▒█░░░░░░░▀░░░░░█\\n\""},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▒▒▄▄█░▒▒▒▓▒▒▒▒▒▒▒█░░█▄▄█▄▄█░░█\\n\""},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▒█░░░█▄▄▄▄▄▄▄▄▄▄█░█▄▄▄▄▄▄▄▄▄█\\n\""},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▒█▄▄█░░█▄▄█░░░░░░█▄▄█░░█▄▄█\\n\""},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":"                    + \" ____        _        \\n\""},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":"    protected static void greeting() {"},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(LOGO);"},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\");"},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"    protected static String checkSingular() {"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":"        if (tasks.size() \u003e 1) {"},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":"            return \" tasks \";"},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"        return \" task \";"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":35,"author":{"gitId":"EmilyTJX"},"content":"    protected static void listTask() {"},{"lineNumber":36,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(DIVIDER);"},{"lineNumber":37,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");"},{"lineNumber":38,"author":{"gitId":"EmilyTJX"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"},{"lineNumber":39,"author":{"gitId":"EmilyTJX"},"content":"            System.out.println(\"\\t\" + (i + 1) + \".\" +"},{"lineNumber":40,"author":{"gitId":"EmilyTJX"},"content":"                    tasks.get(i).toString());"},{"lineNumber":41,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(DIVIDER);"},{"lineNumber":43,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":45,"author":{"gitId":"EmilyTJX"},"content":"    protected static void markTaskDone(String input) {"},{"lineNumber":46,"author":{"gitId":"EmilyTJX"},"content":"        //task number can be found on 5th index of input"},{"lineNumber":47,"author":{"gitId":"EmilyTJX"},"content":"        int taskNumber \u003d Integer.parseInt(input.substring(5));"},{"lineNumber":48,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":49,"author":{"gitId":"EmilyTJX"},"content":"        //to check if tasks exists"},{"lineNumber":50,"author":{"gitId":"EmilyTJX"},"content":"        if(taskNumber\u003c1 || taskNumber\u003etasks.size()){"},{"lineNumber":51,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.invalidTask();"},{"lineNumber":52,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":53,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":55,"author":{"gitId":"EmilyTJX"},"content":"        Task currentTask \u003d tasks.get(taskNumber - 1);"},{"lineNumber":56,"author":{"gitId":"EmilyTJX"},"content":"        currentTask.markAsDone();"},{"lineNumber":57,"author":{"gitId":"EmilyTJX"},"content":"        Duke.storage.saveData();"},{"lineNumber":58,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(DIVIDER + \"\\tNice! I\u0027ve marked this task as done:\" +"},{"lineNumber":59,"author":{"gitId":"EmilyTJX"},"content":"                \"\\n\\t\" + currentTask.toString() + \"\\n\" + DIVIDER);"},{"lineNumber":60,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":62,"author":{"gitId":"EmilyTJX"},"content":"    protected static void addTask(String input)"},{"lineNumber":63,"author":{"gitId":"EmilyTJX"},"content":"            throws ArrayIndexOutOfBoundsException {"},{"lineNumber":64,"author":{"gitId":"EmilyTJX"},"content":"        String[] splitInput \u003d input.split(\"add\");"},{"lineNumber":65,"author":{"gitId":"EmilyTJX"},"content":"        String taskInfo;"},{"lineNumber":66,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"EmilyTJX"},"content":"            taskInfo \u003d splitInput[1];"},{"lineNumber":68,"author":{"gitId":"EmilyTJX"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":69,"author":{"gitId":"EmilyTJX"},"content":"            //if no input after \"add\" command"},{"lineNumber":70,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.addTaskInvalidDescription();"},{"lineNumber":71,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":72,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"EmilyTJX"},"content":"        if (taskInfo.isBlank()) {"},{"lineNumber":74,"author":{"gitId":"EmilyTJX"},"content":"            //if input after \"add\" command is only whitespace"},{"lineNumber":75,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.addTaskInvalidDescription();"},{"lineNumber":76,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":77,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"EmilyTJX"},"content":"        Task currentTask \u003d new Task(taskInfo);"},{"lineNumber":79,"author":{"gitId":"EmilyTJX"},"content":"        tasks.add(currentTask);"},{"lineNumber":80,"author":{"gitId":"EmilyTJX"},"content":"        Duke.storage.saveData();"},{"lineNumber":81,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(DIVIDER + \"\\tadded \" + currentTask.taskDescription + \"\\n\" + DIVIDER);"},{"lineNumber":82,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":84,"author":{"gitId":"EmilyTJX"},"content":"    protected static void addToDo(String input) throws ArrayIndexOutOfBoundsException {"},{"lineNumber":85,"author":{"gitId":"EmilyTJX"},"content":"        String[] splitInput \u003d input.split(\"todo\");"},{"lineNumber":86,"author":{"gitId":"EmilyTJX"},"content":"        String taskInfo;"},{"lineNumber":87,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":88,"author":{"gitId":"EmilyTJX"},"content":"            taskInfo \u003d splitInput[1];"},{"lineNumber":89,"author":{"gitId":"EmilyTJX"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":90,"author":{"gitId":"EmilyTJX"},"content":"            //if no input after \"to-Do\" command"},{"lineNumber":91,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.toDoInvalidDescription();"},{"lineNumber":92,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":93,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":95,"author":{"gitId":"EmilyTJX"},"content":"        if (taskInfo.isBlank()) {"},{"lineNumber":96,"author":{"gitId":"EmilyTJX"},"content":"            //if input after \"to-Do\" command is only whitespace"},{"lineNumber":97,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.toDoInvalidDescription();"},{"lineNumber":98,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":99,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":101,"author":{"gitId":"EmilyTJX"},"content":"        Task currentTask \u003d new ToDo(taskInfo);"},{"lineNumber":102,"author":{"gitId":"EmilyTJX"},"content":"        tasks.add(currentTask);"},{"lineNumber":103,"author":{"gitId":"EmilyTJX"},"content":"        Duke.storage.saveData();"},{"lineNumber":104,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(DIVIDER + \"\\tGot it. I\u0027ve added this task:\\n\" +"},{"lineNumber":105,"author":{"gitId":"EmilyTJX"},"content":"                \"\\t\\t\" + currentTask.toString());"},{"lineNumber":106,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(\"\\tNow you have \" + tasks.size() + checkSingular() + \"in your list.\" + \"\\n\" + DIVIDER);"},{"lineNumber":107,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":109,"author":{"gitId":"EmilyTJX"},"content":"    protected static void addDeadline(String input) throws ArrayIndexOutOfBoundsException {"},{"lineNumber":110,"author":{"gitId":"EmilyTJX"},"content":"        String[] splitInput \u003d input.split(\"deadline\");"},{"lineNumber":111,"author":{"gitId":"EmilyTJX"},"content":"        String taskInfo;"},{"lineNumber":112,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":113,"author":{"gitId":"EmilyTJX"},"content":"            taskInfo \u003d splitInput[1];"},{"lineNumber":114,"author":{"gitId":"EmilyTJX"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":115,"author":{"gitId":"EmilyTJX"},"content":"            //if no input after \"deadline\" command"},{"lineNumber":116,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.deadlineInvalidDescription();"},{"lineNumber":117,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":118,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":120,"author":{"gitId":"EmilyTJX"},"content":"        if (taskInfo.isBlank()) {"},{"lineNumber":121,"author":{"gitId":"EmilyTJX"},"content":"            //if input after \"deadline\" command is only whitespace"},{"lineNumber":122,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.deadlineInvalidDescription();"},{"lineNumber":123,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":124,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":126,"author":{"gitId":"EmilyTJX"},"content":"        String[] splitTaskInfo \u003d taskInfo.split(\"/by\", 2);"},{"lineNumber":127,"author":{"gitId":"EmilyTJX"},"content":"        String taskDescription \u003d splitTaskInfo[0].trim();"},{"lineNumber":128,"author":{"gitId":"EmilyTJX"},"content":"        String deadline \u003d splitTaskInfo[1].trim();"},{"lineNumber":129,"author":{"gitId":"EmilyTJX"},"content":"        Task currentTask \u003d new Deadline(taskDescription, deadline);"},{"lineNumber":130,"author":{"gitId":"EmilyTJX"},"content":"        tasks.add(currentTask);"},{"lineNumber":131,"author":{"gitId":"EmilyTJX"},"content":"        Duke.storage.saveData();"},{"lineNumber":132,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(DIVIDER + \"\\tGot it. I\u0027ve added this task:\\n\\t\\t\" +"},{"lineNumber":133,"author":{"gitId":"EmilyTJX"},"content":"                currentTask.toString());"},{"lineNumber":134,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(\"\\tNow you have \" + tasks.size() + checkSingular() + \"in your list.\\n\" + DIVIDER);"},{"lineNumber":135,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":137,"author":{"gitId":"EmilyTJX"},"content":"    protected static void addEvent(String input) throws ArrayIndexOutOfBoundsException {"},{"lineNumber":138,"author":{"gitId":"EmilyTJX"},"content":"        String[] splitInput \u003d input.split(\"event\");"},{"lineNumber":139,"author":{"gitId":"EmilyTJX"},"content":"        String taskInfo;"},{"lineNumber":140,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":141,"author":{"gitId":"EmilyTJX"},"content":"            taskInfo \u003d splitInput[1];"},{"lineNumber":142,"author":{"gitId":"EmilyTJX"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":143,"author":{"gitId":"EmilyTJX"},"content":"            //if no input after \"event\" command"},{"lineNumber":144,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.eventInvalidDescription();"},{"lineNumber":145,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":146,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":148,"author":{"gitId":"EmilyTJX"},"content":"        if (taskInfo.isBlank()) {"},{"lineNumber":149,"author":{"gitId":"EmilyTJX"},"content":"            //if input after \"event\" command is only whitespace"},{"lineNumber":150,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.eventInvalidDescription();"},{"lineNumber":151,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":152,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"EmilyTJX"},"content":"        String[] splitTaskInfo \u003d taskInfo.split(\"/at\", 2);"},{"lineNumber":154,"author":{"gitId":"EmilyTJX"},"content":"        String taskDescription \u003d splitTaskInfo[0].trim();"},{"lineNumber":155,"author":{"gitId":"EmilyTJX"},"content":"        String timeDetails \u003d splitTaskInfo[1].trim();"},{"lineNumber":156,"author":{"gitId":"EmilyTJX"},"content":"        Task currentTask \u003d new Event(taskDescription, timeDetails);"},{"lineNumber":157,"author":{"gitId":"EmilyTJX"},"content":"        tasks.add(currentTask);"},{"lineNumber":158,"author":{"gitId":"EmilyTJX"},"content":"        Duke.storage.saveData();"},{"lineNumber":159,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(DIVIDER + \"\\tGot it. I\u0027ve added this task:\\n\\t\\t\" +"},{"lineNumber":160,"author":{"gitId":"EmilyTJX"},"content":"                currentTask.toString());"},{"lineNumber":161,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(\"\\tNow you have \" + tasks.size() + checkSingular() + \"in your list.\\n\" + DIVIDER);"},{"lineNumber":162,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":163,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":165,"author":{"gitId":"EmilyTJX"},"content":"    protected static void deleteTask(String input) {"},{"lineNumber":166,"author":{"gitId":"EmilyTJX"},"content":"        //to add exception"},{"lineNumber":167,"author":{"gitId":"EmilyTJX"},"content":"        //task number can be found on 7th index of input"},{"lineNumber":168,"author":{"gitId":"EmilyTJX"},"content":"        int taskNumber \u003d Integer.parseInt(input.substring(7));"},{"lineNumber":169,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":170,"author":{"gitId":"EmilyTJX"},"content":"        //to  check if task to delete exists"},{"lineNumber":171,"author":{"gitId":"EmilyTJX"},"content":"        if(taskNumber\u003c1 || taskNumber\u003etasks.size()){"},{"lineNumber":172,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.invalidTask();"},{"lineNumber":173,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":174,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":176,"author":{"gitId":"EmilyTJX"},"content":"        Task currentTask \u003d tasks.get(taskNumber - 1);"},{"lineNumber":177,"author":{"gitId":"EmilyTJX"},"content":"        tasks.remove(taskNumber-1);"},{"lineNumber":178,"author":{"gitId":"EmilyTJX"},"content":"        Duke.storage.saveData();"},{"lineNumber":179,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(DIVIDER + \"\\tNoted. I\u0027ve removed this task:\" +"},{"lineNumber":180,"author":{"gitId":"EmilyTJX"},"content":"                \"\\n\\t\" + currentTask.toString() + \"\\n\""},{"lineNumber":181,"author":{"gitId":"EmilyTJX"},"content":"                + DIVIDER);"},{"lineNumber":182,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(\"\\tNow you have \" + (tasks.size()) + checkSingular() + \"in your list.\\n\" + DIVIDER);"},{"lineNumber":183,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":184,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":186,"author":{"gitId":"EmilyTJX"},"content":"    protected static void exitDuke() {"},{"lineNumber":187,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(\"Bye. Hope to see you again soon!\\n\");"},{"lineNumber":188,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":190,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":190}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"public class DukeException {"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":"    private static final String WARNING_DIVIDER \u003d \"\\txxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\n\";"},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"    protected static void addTaskInvalidDescription() {"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(WARNING_DIVIDER"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"                + \"Invalid description! add description cannot be empty!\\n\""},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"                + WARNING_DIVIDER);"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"    protected static void toDoInvalidDescription() {"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(WARNING_DIVIDER"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"                + \"Invalid description! todo description cannot be empty!\\n\""},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"                + WARNING_DIVIDER);"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"    protected static void deadlineInvalidDescription() {"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(WARNING_DIVIDER"},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"                + \"Invalid description! deadline cannot be empty!\\n\""},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"                + WARNING_DIVIDER);"},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":"    protected static void eventInvalidDescription() {"},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(WARNING_DIVIDER"},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"                + \"Invalid description! event cannot be empty!\\n\""},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":"                + WARNING_DIVIDER);"},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"    protected static void invalidCommand() {"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(WARNING_DIVIDER"},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":"                + \"Please enter a valid command!\\n\""},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":"                + WARNING_DIVIDER);"},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":34,"author":{"gitId":"EmilyTJX"},"content":"    protected static void invalidTask(){"},{"lineNumber":35,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(WARNING_DIVIDER"},{"lineNumber":36,"author":{"gitId":"EmilyTJX"},"content":"                + \"Please enter a valid task!\\n\""},{"lineNumber":37,"author":{"gitId":"EmilyTJX"},"content":"                + WARNING_DIVIDER);"},{"lineNumber":38,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":40,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":40}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":"    protected String eventTime;"},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"    public Event(String taskDescription, String at) {"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"        super(taskDescription);"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"        this.eventTime \u003d at;"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"        this.taskType \u003d \"[E]\";"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"        return super.toString() + \"(at: \" + eventTime + \")\";"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"    public String taskToText() {"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"        return \"E|\" + super.completed + \"|\" + super.taskDescription + \"|\" + eventTime;"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":18}},{"path":"src/main/java/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"public class FileManager {"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"        private final String path;"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"        public FileManager() {"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"            this.path \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"        public static void createFolder() {"},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"            System.out.println(\"Present project directory is: \"+ System.getProperty(\"user.dir\"));"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"            String folderPath \u003d System.getProperty(\"user.dir\") + \"/data\";"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":"            File folder \u003d new File(folderPath);"},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"            boolean isSuccessful \u003d folder.mkdir();"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"            if (isSuccessful) {"},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"                System.out.println(\"Folder created successfully.\");"},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"            } else {"},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":"                System.out.println(\"Folder already exists.\");"},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":"        public boolean retrieveTextFile() {"},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":"            boolean hasTextFile \u003d false;"},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"            try {"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":"                File data \u003d new File(path);"},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":"                if (data.createNewFile()) {"},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":"                    System.out.println(\"Text file created: \" + data.getName());"},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"                } else {"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":"                    hasTextFile \u003d true;"},{"lineNumber":34,"author":{"gitId":"EmilyTJX"},"content":"                    System.out.println(\"Text file already exists.\");"},{"lineNumber":35,"author":{"gitId":"EmilyTJX"},"content":"                }"},{"lineNumber":36,"author":{"gitId":"EmilyTJX"},"content":"            } catch (IOException e) { // creation or retrieving data has errors"},{"lineNumber":37,"author":{"gitId":"EmilyTJX"},"content":"                System.out.println(\"An error occurred.\");"},{"lineNumber":38,"author":{"gitId":"EmilyTJX"},"content":"                e.printStackTrace();"},{"lineNumber":39,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"EmilyTJX"},"content":"            return hasTextFile;"},{"lineNumber":41,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":43,"author":{"gitId":"EmilyTJX"},"content":"        public void loadData() {"},{"lineNumber":44,"author":{"gitId":"EmilyTJX"},"content":"            try {"},{"lineNumber":45,"author":{"gitId":"EmilyTJX"},"content":"                File data \u003d new File(path);"},{"lineNumber":46,"author":{"gitId":"EmilyTJX"},"content":"                Scanner sc \u003d new Scanner(data);"},{"lineNumber":47,"author":{"gitId":"EmilyTJX"},"content":"                while (sc.hasNextLine()) {"},{"lineNumber":48,"author":{"gitId":"EmilyTJX"},"content":"                    String task \u003d sc.nextLine();"},{"lineNumber":49,"author":{"gitId":"EmilyTJX"},"content":"                    DukeCommandHandler.tasks.add(Task.textToTask(task));"},{"lineNumber":50,"author":{"gitId":"EmilyTJX"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"EmilyTJX"},"content":"                sc.close();"},{"lineNumber":52,"author":{"gitId":"EmilyTJX"},"content":"            } catch (FileNotFoundException e) {"},{"lineNumber":53,"author":{"gitId":"EmilyTJX"},"content":"                System.out.println(\"An error occurred.\");"},{"lineNumber":54,"author":{"gitId":"EmilyTJX"},"content":"                e.printStackTrace();"},{"lineNumber":55,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":58,"author":{"gitId":"EmilyTJX"},"content":"        public void saveData() {"},{"lineNumber":59,"author":{"gitId":"EmilyTJX"},"content":"            try {"},{"lineNumber":60,"author":{"gitId":"EmilyTJX"},"content":"                FileWriter fileWriter \u003d new FileWriter(path);"},{"lineNumber":61,"author":{"gitId":"EmilyTJX"},"content":"                for (int i \u003d 0; i \u003c DukeCommandHandler.tasks.size(); i++) {"},{"lineNumber":62,"author":{"gitId":"EmilyTJX"},"content":"                    // get the task list items"},{"lineNumber":63,"author":{"gitId":"EmilyTJX"},"content":"                    String task \u003d DukeCommandHandler.tasks.get(i).taskToText() + \"\\n\";"},{"lineNumber":64,"author":{"gitId":"EmilyTJX"},"content":"                    fileWriter.write(task);"},{"lineNumber":65,"author":{"gitId":"EmilyTJX"},"content":"                }"},{"lineNumber":66,"author":{"gitId":"EmilyTJX"},"content":"                fileWriter.close();"},{"lineNumber":67,"author":{"gitId":"EmilyTJX"},"content":"            } catch (IOException e) {"},{"lineNumber":68,"author":{"gitId":"EmilyTJX"},"content":"                System.out.println(\"An error occurred.\");"},{"lineNumber":69,"author":{"gitId":"EmilyTJX"},"content":"                e.printStackTrace();"},{"lineNumber":70,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"EmilyTJX"},"content":""}],"authorContributionMap":{"EmilyTJX":73}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":"    protected String taskDescription;"},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"    protected String taskType;"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"    protected String completed;"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"    public Task(String inputTask) {"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"        this.taskDescription \u003d inputTask;"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"        this.taskType \u003d \"[ ]\";"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"        this.completed \u003d \"0\";"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"    public String getStatusIcon() {"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"        //if task is done, mark with X"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");"},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"    public void markAsDone() {"},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"        this.isDone \u003d true;"},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":"        return taskType + this.getStatusIcon() + this.taskDescription;"},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"    public static Task textToTask(String text) {"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":"        String[] task \u003d text.split(\"\\\\|\");"},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":"        Task existingTask \u003d null;"},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":"        switch (task[0]) {"},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"        case \"T\":"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":"            existingTask \u003d new ToDo(task[2]);"},{"lineNumber":34,"author":{"gitId":"EmilyTJX"},"content":"            if (task[1].equals(\"1\")) {"},{"lineNumber":35,"author":{"gitId":"EmilyTJX"},"content":"                existingTask.markAsDone();"},{"lineNumber":36,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"EmilyTJX"},"content":"            break;"},{"lineNumber":38,"author":{"gitId":"EmilyTJX"},"content":"        case \"D\":"},{"lineNumber":39,"author":{"gitId":"EmilyTJX"},"content":"            existingTask \u003d new Deadline(task[2], task[3]);"},{"lineNumber":40,"author":{"gitId":"EmilyTJX"},"content":"            if (task[1].equals(\"1\")) {"},{"lineNumber":41,"author":{"gitId":"EmilyTJX"},"content":"                existingTask.markAsDone();"},{"lineNumber":42,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"EmilyTJX"},"content":"            break;"},{"lineNumber":44,"author":{"gitId":"EmilyTJX"},"content":"        case \"E\":"},{"lineNumber":45,"author":{"gitId":"EmilyTJX"},"content":"            existingTask \u003d new Event(task[2], task[3]);"},{"lineNumber":46,"author":{"gitId":"EmilyTJX"},"content":"            if (task[1].equals(\"1\")) {"},{"lineNumber":47,"author":{"gitId":"EmilyTJX"},"content":"                existingTask.markAsDone();"},{"lineNumber":48,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"EmilyTJX"},"content":"            break;"},{"lineNumber":50,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"EmilyTJX"},"content":"        return existingTask;"},{"lineNumber":52,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":54,"author":{"gitId":"EmilyTJX"},"content":"    public String taskToText() {"},{"lineNumber":55,"author":{"gitId":"EmilyTJX"},"content":"        return \"A|\" + completed + \"|\" + taskDescription;"},{"lineNumber":56,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":58,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":58}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"public class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"    public ToDo(String taskDescription) {"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"        super(taskDescription);"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"        this.taskType \u003d \"[T]\";"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"        return super.toString();"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"    public String taskToText() {"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":"        return \"T|\" + super.completed + \"|\" + super.taskDescription;"},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"add 1"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":"add 2"},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"add list"}],"authorContributionMap":{"EmilyTJX":3}}]
