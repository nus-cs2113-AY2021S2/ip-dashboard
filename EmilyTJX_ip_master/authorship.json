[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"import duke.parser.Parser;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":"import duke.storage.Storage;"},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"    protected static Storage storage;"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"    private final Ui ui;"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"    public Duke() {"},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"        /*"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"        Sets up Duke according storage in hard disk."},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"        */"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"        ui \u003d new Ui();"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"        Storage.createFolder();"},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"        storage \u003d new Storage();"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"        if (storage.retrieveTextFile()) {"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":"            storage.loadData();"},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":"    public void run() {"},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":"        ui.printGreeting();"},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"        Parser.determineCommand();"},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":"        ui.printExitMessage();"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":"        new Duke().run();"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"EmilyTJX":27,"-":5}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"public class DukeException {"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"    private static final String WARNING_DIVIDER \u003d \"\\txxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\n\";"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"    public static void addTaskInvalidDescription() {"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(WARNING_DIVIDER"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"                + \"Invalid description! add description cannot be empty!\\n\""},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"                + WARNING_DIVIDER);"},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"    public static void toDoInvalidDescription() {"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(WARNING_DIVIDER"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"                + \"Invalid description! todo description cannot be empty!\\n\""},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"                + WARNING_DIVIDER);"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"    public static void deadlineInvalidDescription() {"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(WARNING_DIVIDER"},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"                + \"Invalid description! deadline cannot be empty!\\n\""},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"                + WARNING_DIVIDER);"},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"    public static void eventInvalidDescription() {"},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(WARNING_DIVIDER"},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":"                + \"Invalid description! event cannot be empty!\\n\""},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":"                + WARNING_DIVIDER);"},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":"    public static void invalidCommand() {"},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(WARNING_DIVIDER"},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"                + \"Please enter a valid command!\\n\""},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":"                + WARNING_DIVIDER);"},{"lineNumber":34,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":36,"author":{"gitId":"EmilyTJX"},"content":"    public static void invalidTask(){"},{"lineNumber":37,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(WARNING_DIVIDER"},{"lineNumber":38,"author":{"gitId":"EmilyTJX"},"content":"                + \"Please enter a valid task!\\n\""},{"lineNumber":39,"author":{"gitId":"EmilyTJX"},"content":"                + WARNING_DIVIDER);"},{"lineNumber":40,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":42,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":42}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":" * Handles Duke\u0027s commands."},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":" */"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"     * Determines the command from user input."},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"     * @return Command to exit program."},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"    public static void determineCommand() {"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"        String input;"},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":"        while (in.hasNext()) {"},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":"            input \u003d in.nextLine();"},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":"                TaskList.listTask();"},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.startsWith(\"done\")) {"},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":"                TaskList.markTaskDone(input);"},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.startsWith(\"delete\")) {"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":"                TaskList.deleteTask(input);"},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.startsWith(\"add\")) {"},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":"                TaskList.addTask(input);"},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.startsWith(\"todo\")) {"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":"                TaskList.addToDo(input);"},{"lineNumber":34,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.startsWith(\"deadline\")) {"},{"lineNumber":35,"author":{"gitId":"EmilyTJX"},"content":"                TaskList.addDeadline(input);"},{"lineNumber":36,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.startsWith(\"event\")) {"},{"lineNumber":37,"author":{"gitId":"EmilyTJX"},"content":"                TaskList.addEvent(input);"},{"lineNumber":38,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.startsWith(\"find\")) {"},{"lineNumber":39,"author":{"gitId":"EmilyTJX"},"content":"                TaskList.findTask(input);"},{"lineNumber":40,"author":{"gitId":"EmilyTJX"},"content":"            } else if (input.equals(\"bye\")) {"},{"lineNumber":41,"author":{"gitId":"EmilyTJX"},"content":"                break;"},{"lineNumber":42,"author":{"gitId":"EmilyTJX"},"content":"            } else {"},{"lineNumber":43,"author":{"gitId":"EmilyTJX"},"content":"                DukeException.invalidCommand();"},{"lineNumber":44,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"EmilyTJX"},"content":"        in.close();"},{"lineNumber":47,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":48}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"import java.io.File;"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":" * Loads tasks from duke.txt or"},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":" * creates and saves new tasks to duke.txt"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":" */"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"public class Storage {"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"    private static String path;"},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"    public Storage() {"},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":"        this.path \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";"},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":"     * Creates data folder if it does not exist"},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"    public static void createFolder() {"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":"        Ui.printPresentDirectory();"},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":"        String folderPath \u003d System.getProperty(\"user.dir\") + \"/data\";"},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":"        File folder \u003d new File(folderPath);"},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"        boolean isSuccessful \u003d folder.mkdir();"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":"        if (isSuccessful) {"},{"lineNumber":34,"author":{"gitId":"EmilyTJX"},"content":"            Ui.printSuccessfulCreateFolderMessage();"},{"lineNumber":35,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":36,"author":{"gitId":"EmilyTJX"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"EmilyTJX"},"content":"            Ui.printFolderExistsMessage();"},{"lineNumber":38,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":41,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"EmilyTJX"},"content":"     * Checks if text file exists"},{"lineNumber":43,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"EmilyTJX"},"content":"    public boolean retrieveTextFile() {"},{"lineNumber":45,"author":{"gitId":"EmilyTJX"},"content":"        boolean hasTextFile \u003d false;"},{"lineNumber":46,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"EmilyTJX"},"content":"            File data \u003d new File(path);"},{"lineNumber":48,"author":{"gitId":"EmilyTJX"},"content":"            if (data.createNewFile()) {"},{"lineNumber":49,"author":{"gitId":"EmilyTJX"},"content":"                System.out.println(\"Text file created: \" + data.getName());"},{"lineNumber":50,"author":{"gitId":"EmilyTJX"},"content":"            } else {"},{"lineNumber":51,"author":{"gitId":"EmilyTJX"},"content":"                hasTextFile \u003d true;"},{"lineNumber":52,"author":{"gitId":"EmilyTJX"},"content":"                Ui.printFileExistsMessage();"},{"lineNumber":53,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"EmilyTJX"},"content":"        } catch (IOException e) { //creating or retrieving data has errors"},{"lineNumber":55,"author":{"gitId":"EmilyTJX"},"content":"            Ui.printErrorMessage(e);"},{"lineNumber":56,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"EmilyTJX"},"content":"        return hasTextFile;"},{"lineNumber":58,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":60,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"EmilyTJX"},"content":"     * Loads in tasks from duke.txt"},{"lineNumber":62,"author":{"gitId":"EmilyTJX"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"EmilyTJX"},"content":"     * @throws FileNotFoundException if duke.txt does not exist"},{"lineNumber":64,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"EmilyTJX"},"content":"    public void loadData() {"},{"lineNumber":66,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"EmilyTJX"},"content":"            File data \u003d new File(path);"},{"lineNumber":68,"author":{"gitId":"EmilyTJX"},"content":"            Scanner sc \u003d new Scanner(data);"},{"lineNumber":69,"author":{"gitId":"EmilyTJX"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":70,"author":{"gitId":"EmilyTJX"},"content":"                String taskToLoad \u003d sc.nextLine();"},{"lineNumber":71,"author":{"gitId":"EmilyTJX"},"content":"                TaskList.tasks.add(Task.textToTask(taskToLoad));"},{"lineNumber":72,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"EmilyTJX"},"content":"            sc.close();"},{"lineNumber":74,"author":{"gitId":"EmilyTJX"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":75,"author":{"gitId":"EmilyTJX"},"content":"            Ui.printErrorMessage(e);"},{"lineNumber":76,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":79,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"EmilyTJX"},"content":"     * Appends and saves new tasks to duke.txt"},{"lineNumber":81,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"EmilyTJX"},"content":"    public static void saveData() {"},{"lineNumber":83,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":84,"author":{"gitId":"EmilyTJX"},"content":"            FileWriter fileWriter \u003d new FileWriter(path);"},{"lineNumber":85,"author":{"gitId":"EmilyTJX"},"content":"            for (int i \u003d 0; i \u003c TaskList.tasks.size(); ++i) {"},{"lineNumber":86,"author":{"gitId":"EmilyTJX"},"content":"                //get the task list items"},{"lineNumber":87,"author":{"gitId":"EmilyTJX"},"content":"                String taskToWrite \u003d TaskList.tasks.get(i).taskToText() + \"\\n\";"},{"lineNumber":88,"author":{"gitId":"EmilyTJX"},"content":"                fileWriter.write(taskToWrite);"},{"lineNumber":89,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"EmilyTJX"},"content":"            fileWriter.close();"},{"lineNumber":91,"author":{"gitId":"EmilyTJX"},"content":"        } catch (IOException e) {"},{"lineNumber":92,"author":{"gitId":"EmilyTJX"},"content":"            Ui.printErrorMessage(e);"},{"lineNumber":93,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":96,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":97,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":97}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"    protected String deadline;"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"    protected String formattedTaskDate;"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"    public Deadline(String taskDescription, String date) {"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"        super(taskDescription);"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"        LocalDate taskDate \u003d LocalDate.parse(date);"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"        this.formattedTaskDate \u003d taskDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"        this.deadline \u003d date;"},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"        this.taskType \u003d \"[D]\";"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"    Prints task to user."},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"    */"},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":"        return super.toString() + \"(by: \" + formattedTaskDate + \")\";"},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":"    Translates data into text format."},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":"    public String taskToText() {"},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":"        return \"D|\" + super.completed + \"| \" + super.taskDescription + \"|\" + deadline;"},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":33}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"    protected String eventTime;"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"    protected String formattedTaskDate;"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"    public Event(String taskDescription, String date) {"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"        super(taskDescription);"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"        LocalDate taskDate \u003d LocalDate.parse(date);"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"        this.formattedTaskDate \u003d taskDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"        this.eventTime \u003d date;"},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"        this.taskType \u003d \"[E]\";"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"    Prints task to user."},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":"        return super.toString() + \"(at: \" + formattedTaskDate + \")\";"},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":"    Translates data into text format."},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":"    public String taskToText() {"},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":"        return \"E|\" + super.completed + \"| \" + super.taskDescription + \"|\" + eventTime;"},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":33}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"    protected String taskDescription;"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"    protected String taskType;"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"    protected String completed;"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"    public Task(String inputTask) {"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"        this.taskDescription \u003d inputTask;"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"        this.isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"        this.taskType \u003d \"[ ]\";"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"        this.completed \u003d \"0\";"},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"    public String getStatusIcon() {"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"        //if task is done, mark with X"},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");"},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":"    public void markAsDone() {"},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"        this.isDone \u003d true;"},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"        return taskType + this.getStatusIcon() + this.taskDescription;"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":"    public static Task textToTask(String text) {"},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"        String[] task \u003d text.split(\"\\\\|\");"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":"        Task existingTask;"},{"lineNumber":34,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":35,"author":{"gitId":"EmilyTJX"},"content":"        switch (task[0]) {"},{"lineNumber":36,"author":{"gitId":"EmilyTJX"},"content":"        case \"T\":"},{"lineNumber":37,"author":{"gitId":"EmilyTJX"},"content":"            existingTask \u003d new ToDo(task[2]);"},{"lineNumber":38,"author":{"gitId":"EmilyTJX"},"content":"            break;"},{"lineNumber":39,"author":{"gitId":"EmilyTJX"},"content":"        case \"D\":"},{"lineNumber":40,"author":{"gitId":"EmilyTJX"},"content":"            existingTask \u003d new Deadline(task[2], task[3]);"},{"lineNumber":41,"author":{"gitId":"EmilyTJX"},"content":"            break;"},{"lineNumber":42,"author":{"gitId":"EmilyTJX"},"content":"        case \"E\":"},{"lineNumber":43,"author":{"gitId":"EmilyTJX"},"content":"            existingTask \u003d new Event(task[2], task[3]);"},{"lineNumber":44,"author":{"gitId":"EmilyTJX"},"content":"            break;"},{"lineNumber":45,"author":{"gitId":"EmilyTJX"},"content":"        default:    //case \"A\""},{"lineNumber":46,"author":{"gitId":"EmilyTJX"},"content":"            existingTask \u003d new Task(task[2]);"},{"lineNumber":47,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"EmilyTJX"},"content":"        if (task[1].equals(\"1\")) {"},{"lineNumber":49,"author":{"gitId":"EmilyTJX"},"content":"            existingTask.markAsDone();"},{"lineNumber":50,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"EmilyTJX"},"content":"        return existingTask;"},{"lineNumber":52,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":54,"author":{"gitId":"EmilyTJX"},"content":"    public String taskToText() {"},{"lineNumber":55,"author":{"gitId":"EmilyTJX"},"content":"        return \"A|\" + completed + \"|\" + taskDescription;"},{"lineNumber":56,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":58,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":58}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"    private static final String DIVIDER \u003d \"\\t_______________________________\\n\";"},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"    public static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"     * Checks number of tasks for printing fluency"},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"    protected static String checkSingular() {"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":"        if (tasks.size() \u003e 1) {"},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"            return \" tasks \";"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"        return \" task \";"},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"     * Prints out all tasks in TaskList"},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":"    public static void listTask() {"},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(DIVIDER);"},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":"            System.out.println(\"\\t\" + (i + 1) + \".\" +"},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":"                    tasks.get(i).toString());"},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(DIVIDER);"},{"lineNumber":34,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":36,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"EmilyTJX"},"content":"     * Prints message when task is marked as done."},{"lineNumber":38,"author":{"gitId":"EmilyTJX"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"EmilyTJX"},"content":"     * @param task Task that was marked as done."},{"lineNumber":40,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"EmilyTJX"},"content":"    public static void markTaskDone(String input) {"},{"lineNumber":42,"author":{"gitId":"EmilyTJX"},"content":"        //task number can be found on 5th index of input"},{"lineNumber":43,"author":{"gitId":"EmilyTJX"},"content":"        int taskNumber \u003d Integer.parseInt(input.substring(5));"},{"lineNumber":44,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":45,"author":{"gitId":"EmilyTJX"},"content":"        //to check if tasks exists"},{"lineNumber":46,"author":{"gitId":"EmilyTJX"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {"},{"lineNumber":47,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.invalidTask();"},{"lineNumber":48,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":49,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":51,"author":{"gitId":"EmilyTJX"},"content":"        Task currentTask \u003d tasks.get(taskNumber - 1);"},{"lineNumber":52,"author":{"gitId":"EmilyTJX"},"content":"        currentTask.markAsDone();"},{"lineNumber":53,"author":{"gitId":"EmilyTJX"},"content":"        Storage.saveData();"},{"lineNumber":54,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(DIVIDER + \"\\tNice! I\u0027ve marked this task as done:\" +"},{"lineNumber":55,"author":{"gitId":"EmilyTJX"},"content":"                \"\\n\\t\" + currentTask.toString() + \"\\n\" + DIVIDER);"},{"lineNumber":56,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":58,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"EmilyTJX"},"content":"     * Adds a task to tasks"},{"lineNumber":60,"author":{"gitId":"EmilyTJX"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"EmilyTJX"},"content":"     * @param command User input for task description."},{"lineNumber":62,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"EmilyTJX"},"content":"    public static void addTask(String input)"},{"lineNumber":64,"author":{"gitId":"EmilyTJX"},"content":"            throws ArrayIndexOutOfBoundsException {"},{"lineNumber":65,"author":{"gitId":"EmilyTJX"},"content":"        String[] splitInput \u003d input.split(\"add\");"},{"lineNumber":66,"author":{"gitId":"EmilyTJX"},"content":"        String taskInfo;"},{"lineNumber":67,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"EmilyTJX"},"content":"            taskInfo \u003d splitInput[1];"},{"lineNumber":69,"author":{"gitId":"EmilyTJX"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":70,"author":{"gitId":"EmilyTJX"},"content":"            //if no input after \"add\" command"},{"lineNumber":71,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.addTaskInvalidDescription();"},{"lineNumber":72,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":73,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"EmilyTJX"},"content":"        if (taskInfo.isBlank()) {"},{"lineNumber":75,"author":{"gitId":"EmilyTJX"},"content":"            //if input after \"add\" command is only whitespace"},{"lineNumber":76,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.addTaskInvalidDescription();"},{"lineNumber":77,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":78,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"EmilyTJX"},"content":"        Task currentTask \u003d new Task(taskInfo);"},{"lineNumber":80,"author":{"gitId":"EmilyTJX"},"content":"        tasks.add(currentTask);"},{"lineNumber":81,"author":{"gitId":"EmilyTJX"},"content":"        Storage.saveData();"},{"lineNumber":82,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(DIVIDER + \"\\tadded \" + currentTask.toString() + \"\\n\" + DIVIDER);"},{"lineNumber":83,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":85,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"EmilyTJX"},"content":"     * Adds a To-Do task to tasks"},{"lineNumber":87,"author":{"gitId":"EmilyTJX"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"EmilyTJX"},"content":"     * @param command User input for To-Do task description."},{"lineNumber":89,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"EmilyTJX"},"content":"    public static void addToDo(String input) throws ArrayIndexOutOfBoundsException {"},{"lineNumber":91,"author":{"gitId":"EmilyTJX"},"content":"        String[] splitInput \u003d input.split(\"todo\");"},{"lineNumber":92,"author":{"gitId":"EmilyTJX"},"content":"        String taskInfo;"},{"lineNumber":93,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":94,"author":{"gitId":"EmilyTJX"},"content":"            taskInfo \u003d splitInput[1];"},{"lineNumber":95,"author":{"gitId":"EmilyTJX"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":96,"author":{"gitId":"EmilyTJX"},"content":"            //if no input after \"to-Do\" command"},{"lineNumber":97,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.toDoInvalidDescription();"},{"lineNumber":98,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":99,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":101,"author":{"gitId":"EmilyTJX"},"content":"        if (taskInfo.isBlank()) {"},{"lineNumber":102,"author":{"gitId":"EmilyTJX"},"content":"            //if input after \"to-Do\" command is only whitespace"},{"lineNumber":103,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.toDoInvalidDescription();"},{"lineNumber":104,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":105,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":107,"author":{"gitId":"EmilyTJX"},"content":"        Task currentTask \u003d new ToDo(taskInfo);"},{"lineNumber":108,"author":{"gitId":"EmilyTJX"},"content":"        tasks.add(currentTask);"},{"lineNumber":109,"author":{"gitId":"EmilyTJX"},"content":"        Storage.saveData();"},{"lineNumber":110,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(DIVIDER + \"\\tGot it. I\u0027ve added this task:\\n\" +"},{"lineNumber":111,"author":{"gitId":"EmilyTJX"},"content":"                \"\\t\\t\" + currentTask.toString());"},{"lineNumber":112,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(\"\\tNow you have \" + tasks.size() + checkSingular() + \"in your list.\" + \"\\n\" + DIVIDER);"},{"lineNumber":113,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":115,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"EmilyTJX"},"content":"     * Adds a Deadline task to tasks"},{"lineNumber":117,"author":{"gitId":"EmilyTJX"},"content":"     *"},{"lineNumber":118,"author":{"gitId":"EmilyTJX"},"content":"     * @param command User input for Deadline task description and date."},{"lineNumber":119,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":121,"author":{"gitId":"EmilyTJX"},"content":"    public static void addDeadline(String input) throws ArrayIndexOutOfBoundsException {"},{"lineNumber":122,"author":{"gitId":"EmilyTJX"},"content":"        String[] splitInput \u003d input.split(\"deadline\");"},{"lineNumber":123,"author":{"gitId":"EmilyTJX"},"content":"        String taskInfo;"},{"lineNumber":124,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":125,"author":{"gitId":"EmilyTJX"},"content":"            taskInfo \u003d splitInput[1];"},{"lineNumber":126,"author":{"gitId":"EmilyTJX"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":127,"author":{"gitId":"EmilyTJX"},"content":"            //if no input after \"deadline\" command"},{"lineNumber":128,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.deadlineInvalidDescription();"},{"lineNumber":129,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":130,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":132,"author":{"gitId":"EmilyTJX"},"content":"        if (taskInfo.isBlank()) {"},{"lineNumber":133,"author":{"gitId":"EmilyTJX"},"content":"            //if input after \"deadline\" command is only whitespace"},{"lineNumber":134,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.deadlineInvalidDescription();"},{"lineNumber":135,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":136,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":138,"author":{"gitId":"EmilyTJX"},"content":"        String[] splitTaskInfo \u003d taskInfo.split(\"/by\", 2);"},{"lineNumber":139,"author":{"gitId":"EmilyTJX"},"content":"        String taskDescription \u003d splitTaskInfo[0].trim();"},{"lineNumber":140,"author":{"gitId":"EmilyTJX"},"content":"        String deadline \u003d splitTaskInfo[1].trim();"},{"lineNumber":141,"author":{"gitId":"EmilyTJX"},"content":"        Task currentTask \u003d new Deadline(taskDescription, deadline);"},{"lineNumber":142,"author":{"gitId":"EmilyTJX"},"content":"        tasks.add(currentTask);"},{"lineNumber":143,"author":{"gitId":"EmilyTJX"},"content":"        Storage.saveData();"},{"lineNumber":144,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(DIVIDER + \"\\tGot it. I\u0027ve added this task:\\n\\t\\t\" +"},{"lineNumber":145,"author":{"gitId":"EmilyTJX"},"content":"                currentTask.toString());"},{"lineNumber":146,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(\"\\tNow you have \" + tasks.size() + checkSingular() + \"in your list.\\n\" + DIVIDER);"},{"lineNumber":147,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":149,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"EmilyTJX"},"content":"     * Adds a Event task to tasks"},{"lineNumber":151,"author":{"gitId":"EmilyTJX"},"content":"     *"},{"lineNumber":152,"author":{"gitId":"EmilyTJX"},"content":"     * @param command User input for Event task description and date."},{"lineNumber":153,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":154,"author":{"gitId":"EmilyTJX"},"content":"    public static void addEvent(String input) throws ArrayIndexOutOfBoundsException {"},{"lineNumber":155,"author":{"gitId":"EmilyTJX"},"content":"        String[] splitInput \u003d input.split(\"event\");"},{"lineNumber":156,"author":{"gitId":"EmilyTJX"},"content":"        String taskInfo;"},{"lineNumber":157,"author":{"gitId":"EmilyTJX"},"content":"        try {"},{"lineNumber":158,"author":{"gitId":"EmilyTJX"},"content":"            taskInfo \u003d splitInput[1];"},{"lineNumber":159,"author":{"gitId":"EmilyTJX"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":160,"author":{"gitId":"EmilyTJX"},"content":"            //if no input after \"event\" command"},{"lineNumber":161,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.eventInvalidDescription();"},{"lineNumber":162,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":163,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":165,"author":{"gitId":"EmilyTJX"},"content":"        if (taskInfo.isBlank()) {"},{"lineNumber":166,"author":{"gitId":"EmilyTJX"},"content":"            //if input after \"event\" command is only whitespace"},{"lineNumber":167,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.eventInvalidDescription();"},{"lineNumber":168,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":169,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":170,"author":{"gitId":"EmilyTJX"},"content":"        String[] splitTaskInfo \u003d taskInfo.split(\"/at\", 2);"},{"lineNumber":171,"author":{"gitId":"EmilyTJX"},"content":"        String taskDescription \u003d splitTaskInfo[0].trim();"},{"lineNumber":172,"author":{"gitId":"EmilyTJX"},"content":"        String timeDetails \u003d splitTaskInfo[1].trim();"},{"lineNumber":173,"author":{"gitId":"EmilyTJX"},"content":"        Task currentTask \u003d new Event(taskDescription, timeDetails);"},{"lineNumber":174,"author":{"gitId":"EmilyTJX"},"content":"        tasks.add(currentTask);"},{"lineNumber":175,"author":{"gitId":"EmilyTJX"},"content":"        Storage.saveData();"},{"lineNumber":176,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(DIVIDER + \"\\tGot it. I\u0027ve added this task:\\n\\t\\t\" +"},{"lineNumber":177,"author":{"gitId":"EmilyTJX"},"content":"                currentTask.toString());"},{"lineNumber":178,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(\"\\tNow you have \" + tasks.size() + checkSingular() + \"in your list.\\n\" + DIVIDER);"},{"lineNumber":179,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":180,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":182,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":183,"author":{"gitId":"EmilyTJX"},"content":"     * Deletes a task"},{"lineNumber":184,"author":{"gitId":"EmilyTJX"},"content":"     *"},{"lineNumber":185,"author":{"gitId":"EmilyTJX"},"content":"     * @param command User input for Index of task to be deleted."},{"lineNumber":186,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":187,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":188,"author":{"gitId":"EmilyTJX"},"content":"    public static void deleteTask(String input) {"},{"lineNumber":189,"author":{"gitId":"EmilyTJX"},"content":"        //to add exception"},{"lineNumber":190,"author":{"gitId":"EmilyTJX"},"content":"        //task number can be found on 7th index of input"},{"lineNumber":191,"author":{"gitId":"EmilyTJX"},"content":"        int taskNumber \u003d Integer.parseInt(input.substring(7));"},{"lineNumber":192,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":193,"author":{"gitId":"EmilyTJX"},"content":"        //to  check if task to delete exists"},{"lineNumber":194,"author":{"gitId":"EmilyTJX"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {"},{"lineNumber":195,"author":{"gitId":"EmilyTJX"},"content":"            DukeException.invalidTask();"},{"lineNumber":196,"author":{"gitId":"EmilyTJX"},"content":"            return;"},{"lineNumber":197,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":198,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":199,"author":{"gitId":"EmilyTJX"},"content":"        Task currentTask \u003d tasks.get(taskNumber - 1);"},{"lineNumber":200,"author":{"gitId":"EmilyTJX"},"content":"        tasks.remove(taskNumber - 1);"},{"lineNumber":201,"author":{"gitId":"EmilyTJX"},"content":"        Storage.saveData();"},{"lineNumber":202,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(DIVIDER + \"\\tNoted. I\u0027ve removed this task:\" +"},{"lineNumber":203,"author":{"gitId":"EmilyTJX"},"content":"                \"\\n\\t\" + currentTask.toString() + \"\\n\""},{"lineNumber":204,"author":{"gitId":"EmilyTJX"},"content":"                + DIVIDER);"},{"lineNumber":205,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(\"\\tNow you have \" + (tasks.size()) + checkSingular() + \"in your list.\\n\" + DIVIDER);"},{"lineNumber":206,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":207,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":209,"author":{"gitId":"EmilyTJX"},"content":"    /**"},{"lineNumber":210,"author":{"gitId":"EmilyTJX"},"content":"     * Finds a task according to keywords"},{"lineNumber":211,"author":{"gitId":"EmilyTJX"},"content":"     *"},{"lineNumber":212,"author":{"gitId":"EmilyTJX"},"content":"     * @param command User input for finTask task searchWord"},{"lineNumber":213,"author":{"gitId":"EmilyTJX"},"content":"     */"},{"lineNumber":214,"author":{"gitId":"EmilyTJX"},"content":"    public static void findTask(String input) {"},{"lineNumber":215,"author":{"gitId":"EmilyTJX"},"content":"        String searchWord \u003d input.split(\"find\")[1];"},{"lineNumber":216,"author":{"gitId":"EmilyTJX"},"content":"        boolean hasTask \u003d false;"},{"lineNumber":217,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(DIVIDER + \"\\tHere are the matching tasks in your list: \\n\");"},{"lineNumber":218,"author":{"gitId":"EmilyTJX"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"},{"lineNumber":219,"author":{"gitId":"EmilyTJX"},"content":"            if (tasks.get(i).taskDescription.contains(searchWord)) {"},{"lineNumber":220,"author":{"gitId":"EmilyTJX"},"content":"                System.out.println(\"\\t\" + (i + 1) + \".\" +"},{"lineNumber":221,"author":{"gitId":"EmilyTJX"},"content":"                        tasks.get(i).toString());"},{"lineNumber":222,"author":{"gitId":"EmilyTJX"},"content":"                hasTask \u003d true;"},{"lineNumber":223,"author":{"gitId":"EmilyTJX"},"content":"            }"},{"lineNumber":224,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":225,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(DIVIDER);"},{"lineNumber":226,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":227,"author":{"gitId":"EmilyTJX"},"content":"        if (!hasTask) {"},{"lineNumber":228,"author":{"gitId":"EmilyTJX"},"content":"            Ui.printSearchWordNotFoundMessage();"},{"lineNumber":229,"author":{"gitId":"EmilyTJX"},"content":"        }"},{"lineNumber":230,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":232,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":232}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":"    public ToDo(String taskDescription) {"},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"        super(taskDescription);"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"        this.taskType \u003d \"[T]\";"},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"        return super.toString();"},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"    public String taskToText() {"},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"        return \"T|\" + super.completed + \"|\" + super.taskDescription;"},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":21}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":5,"author":{"gitId":"EmilyTJX"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":7,"author":{"gitId":"EmilyTJX"},"content":"    private static final String LOGO \u003d"},{"lineNumber":8,"author":{"gitId":"EmilyTJX"},"content":"            \"▒▒▒▒▒▒▒█▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█\\n\""},{"lineNumber":9,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▒▒▒▒█░▒▒▒▒▒▒▒▓▒▒▓▒▒▒▒▒▒▒░█\\n\""},{"lineNumber":10,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▒▒▒▒█░▒▒▓▒▒▒▒▒▒▒▒▒▄▄▒▓▒▒░█░▄▄\\n\""},{"lineNumber":11,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▄▀▀▄▄█░▒▒▒▒▒▒▓▒▒▒▒█░░▀▄▄▄▄▄▀░░█\\n\""},{"lineNumber":12,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒█░░░░█░▒▒▒▒▒▒▒▒▒▒▒█░░░░░░░░░░░█\\n\""},{"lineNumber":13,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▀▀▄▄█░▒▒▒▒▓▒▒▒▓▒█░░░█▒░░░░█▒░░█\\n\""},{"lineNumber":14,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▒▒▒▒█░▒▓▒▒▒▒▓▒▒▒█░░░░░░░▀░░░░░█\\n\""},{"lineNumber":15,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▒▒▄▄█░▒▒▒▓▒▒▒▒▒▒▒█░░█▄▄█▄▄█░░█\\n\""},{"lineNumber":16,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▒█░░░█▄▄▄▄▄▄▄▄▄▄█░█▄▄▄▄▄▄▄▄▄█\\n\""},{"lineNumber":17,"author":{"gitId":"EmilyTJX"},"content":"                    + \"▒▒▒▒█▄▄█░░█▄▄█░░░░░░█▄▄█░░█▄▄█\\n\""},{"lineNumber":18,"author":{"gitId":"EmilyTJX"},"content":"                    + \" ____        _        \\n\""},{"lineNumber":19,"author":{"gitId":"EmilyTJX"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":20,"author":{"gitId":"EmilyTJX"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":21,"author":{"gitId":"EmilyTJX"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":22,"author":{"gitId":"EmilyTJX"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":23,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":24,"author":{"gitId":"EmilyTJX"},"content":"    public static void printPresentDirectory() {"},{"lineNumber":25,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(\"Present project directory is: \" + System.getProperty(\"user.dir\"));"},{"lineNumber":26,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":28,"author":{"gitId":"EmilyTJX"},"content":"    public static void printSuccessfulCreateFolderMessage() {"},{"lineNumber":29,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(\"Folder created successfully.\");"},{"lineNumber":30,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":32,"author":{"gitId":"EmilyTJX"},"content":"    public static void printFolderExistsMessage() {"},{"lineNumber":33,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(\"Folder already exists.\");"},{"lineNumber":34,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":36,"author":{"gitId":"EmilyTJX"},"content":"    public static void printErrorMessage(IOException e) {"},{"lineNumber":37,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(\"An error occurred.\");"},{"lineNumber":38,"author":{"gitId":"EmilyTJX"},"content":"        e.printStackTrace();"},{"lineNumber":39,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":41,"author":{"gitId":"EmilyTJX"},"content":"    public static void printFileExistsMessage() {"},{"lineNumber":42,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(\"Text file already exists.\");"},{"lineNumber":43,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":45,"author":{"gitId":"EmilyTJX"},"content":"    public static void printSearchWordNotFoundMessage() {"},{"lineNumber":46,"author":{"gitId":"EmilyTJX"},"content":"        System.out.println(\"No matches found! Please try again.\");"},{"lineNumber":47,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":49,"author":{"gitId":"EmilyTJX"},"content":"    public void printGreeting() {"},{"lineNumber":50,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(LOGO);"},{"lineNumber":51,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\");"},{"lineNumber":52,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":54,"author":{"gitId":"EmilyTJX"},"content":"    public void printExitMessage() {"},{"lineNumber":55,"author":{"gitId":"EmilyTJX"},"content":"        System.out.print(\"Bye. Hope to see you again soon!\\n\");"},{"lineNumber":56,"author":{"gitId":"EmilyTJX"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":58,"author":{"gitId":"EmilyTJX"},"content":""},{"lineNumber":59,"author":{"gitId":"EmilyTJX"},"content":"}"}],"authorContributionMap":{"EmilyTJX":59}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EmilyTJX"},"content":"add 1"},{"lineNumber":2,"author":{"gitId":"EmilyTJX"},"content":"add 2"},{"lineNumber":3,"author":{"gitId":"EmilyTJX"},"content":"add list"}],"authorContributionMap":{"EmilyTJX":3}}]
