[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"NgManSing"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"NgManSing"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":11,"author":{"gitId":"NgManSing"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"NgManSing"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"NgManSing"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"NgManSing"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"NgManSing"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"NgManSing":9,"-":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgManSing"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"NgManSing"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":4,"author":{"gitId":"NgManSing"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"NgManSing"},"content":" * This class is to build a personal assistance chat-bot called \"Kaman\""},{"lineNumber":6,"author":{"gitId":"NgManSing"},"content":" * (Customised from Duke)"},{"lineNumber":7,"author":{"gitId":"NgManSing"},"content":" *"},{"lineNumber":8,"author":{"gitId":"NgManSing"},"content":" * Week-2:"},{"lineNumber":9,"author":{"gitId":"NgManSing"},"content":" * The program is implemented to greet users and exits subsequently."},{"lineNumber":10,"author":{"gitId":"NgManSing"},"content":" *"},{"lineNumber":11,"author":{"gitId":"NgManSing"},"content":" * Week-3:"},{"lineNumber":12,"author":{"gitId":"NgManSing"},"content":" * Receives user inputs and stores them in \"Task\" objects"},{"lineNumber":13,"author":{"gitId":"NgManSing"},"content":" *"},{"lineNumber":14,"author":{"gitId":"NgManSing"},"content":" * Perform functions such as:"},{"lineNumber":15,"author":{"gitId":"NgManSing"},"content":" *  - Listing the stored records"},{"lineNumber":16,"author":{"gitId":"NgManSing"},"content":" *  - Marking records as done"},{"lineNumber":17,"author":{"gitId":"NgManSing"},"content":" *  - Exiting the program"},{"lineNumber":18,"author":{"gitId":"NgManSing"},"content":" *"},{"lineNumber":19,"author":{"gitId":"NgManSing"},"content":" *  Some codes are added to prompt the user when their input is invalid."},{"lineNumber":20,"author":{"gitId":"NgManSing"},"content":" *"},{"lineNumber":21,"author":{"gitId":"NgManSing"},"content":" * @author NgManSing"},{"lineNumber":22,"author":{"gitId":"NgManSing"},"content":" */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":24,"author":{"gitId":"NgManSing"},"content":"    private static final ArrayList\u003cTask\u003e records \u003d new ArrayList\u003c\u003e();"},{"lineNumber":25,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":27,"author":{"gitId":"NgManSing"},"content":"        Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":28,"author":{"gitId":"NgManSing"},"content":"        boolean isLoop \u003d true;"},{"lineNumber":29,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":30,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"Hello! I am Kaman :)\");"},{"lineNumber":31,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":32,"author":{"gitId":"NgManSing"},"content":"        do {"},{"lineNumber":33,"author":{"gitId":"NgManSing"},"content":"            System.out.print(\"User\u003e\");"},{"lineNumber":34,"author":{"gitId":"NgManSing"},"content":"            String rawInput \u003d scan.nextLine();"},{"lineNumber":35,"author":{"gitId":"NgManSing"},"content":"            String[] inputs \u003d rawInput.split(\" \");"},{"lineNumber":36,"author":{"gitId":"NgManSing"},"content":"            switch (inputs[0]) {"},{"lineNumber":37,"author":{"gitId":"NgManSing"},"content":"            case \"list\":"},{"lineNumber":38,"author":{"gitId":"NgManSing"},"content":"                if (inputs.length \u003d\u003d 1) {"},{"lineNumber":39,"author":{"gitId":"NgManSing"},"content":"                    showList();"},{"lineNumber":40,"author":{"gitId":"NgManSing"},"content":"                } else {"},{"lineNumber":41,"author":{"gitId":"NgManSing"},"content":"                    addRecord(rawInput);"},{"lineNumber":42,"author":{"gitId":"NgManSing"},"content":"                }"},{"lineNumber":43,"author":{"gitId":"NgManSing"},"content":"                break;"},{"lineNumber":44,"author":{"gitId":"NgManSing"},"content":"            case \"done\":"},{"lineNumber":45,"author":{"gitId":"NgManSing"},"content":"                if (inputs.length \u003d\u003d 2) {"},{"lineNumber":46,"author":{"gitId":"NgManSing"},"content":"                    int targetRecordIndex;"},{"lineNumber":47,"author":{"gitId":"NgManSing"},"content":"                    try {"},{"lineNumber":48,"author":{"gitId":"NgManSing"},"content":"                        targetRecordIndex \u003d Integer.parseInt(inputs[1]) - 1;"},{"lineNumber":49,"author":{"gitId":"NgManSing"},"content":"                    } catch (NumberFormatException e) {"},{"lineNumber":50,"author":{"gitId":"NgManSing"},"content":"                        addRecord(rawInput);"},{"lineNumber":51,"author":{"gitId":"NgManSing"},"content":"                        break;"},{"lineNumber":52,"author":{"gitId":"NgManSing"},"content":"                    }"},{"lineNumber":53,"author":{"gitId":"NgManSing"},"content":"                    markAsDone(targetRecordIndex);"},{"lineNumber":54,"author":{"gitId":"NgManSing"},"content":"                } else {"},{"lineNumber":55,"author":{"gitId":"NgManSing"},"content":"                    addRecord(rawInput);"},{"lineNumber":56,"author":{"gitId":"NgManSing"},"content":"                }"},{"lineNumber":57,"author":{"gitId":"NgManSing"},"content":"                break;"},{"lineNumber":58,"author":{"gitId":"NgManSing"},"content":"            case \"bye\":"},{"lineNumber":59,"author":{"gitId":"NgManSing"},"content":"                if (inputs.length \u003d\u003d 1) {"},{"lineNumber":60,"author":{"gitId":"NgManSing"},"content":"                    quitProgram();"},{"lineNumber":61,"author":{"gitId":"NgManSing"},"content":"                    isLoop \u003d false;"},{"lineNumber":62,"author":{"gitId":"NgManSing"},"content":"                } else {"},{"lineNumber":63,"author":{"gitId":"NgManSing"},"content":"                    addRecord(rawInput);"},{"lineNumber":64,"author":{"gitId":"NgManSing"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"NgManSing"},"content":"                break;"},{"lineNumber":66,"author":{"gitId":"NgManSing"},"content":"            default:"},{"lineNumber":67,"author":{"gitId":"NgManSing"},"content":"                addRecord(rawInput);"},{"lineNumber":68,"author":{"gitId":"NgManSing"},"content":"                break;"},{"lineNumber":69,"author":{"gitId":"NgManSing"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"NgManSing"},"content":"        } while (isLoop);"},{"lineNumber":71,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":73,"author":{"gitId":"NgManSing"},"content":"    private static void markAsDone(int index) {"},{"lineNumber":74,"author":{"gitId":"NgManSing"},"content":"        if (index \u003c 0 || index \u003e\u003d records.size()) {"},{"lineNumber":75,"author":{"gitId":"NgManSing"},"content":"            System.out.println(\"Invalid input! (Index cannot be out of bounds)\");"},{"lineNumber":76,"author":{"gitId":"NgManSing"},"content":"            return;"},{"lineNumber":77,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"NgManSing"},"content":"        records.get(index).setAsDone();"},{"lineNumber":79,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":80,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"\\t\" + \"[X] \" + records.get(index).getTaskName());"},{"lineNumber":81,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":82,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":84,"author":{"gitId":"NgManSing"},"content":"    private static void addRecord(String userInput) {"},{"lineNumber":85,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"Added: \" + userInput);"},{"lineNumber":86,"author":{"gitId":"NgManSing"},"content":"        records.add(new Task(userInput));"},{"lineNumber":87,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":89,"author":{"gitId":"NgManSing"},"content":"    private static void showList() {"},{"lineNumber":90,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"Here is your task List:\");"},{"lineNumber":91,"author":{"gitId":"NgManSing"},"content":"        for (int i \u003d 0; i \u003c records.size(); i++) {"},{"lineNumber":92,"author":{"gitId":"NgManSing"},"content":"            String mark \u003d records.get(i).isDone() ? \"[X] \" : \"[ ] \";"},{"lineNumber":93,"author":{"gitId":"NgManSing"},"content":"            System.out.println((i + 1) + \". \" + mark + records.get(i).getTaskName());"},{"lineNumber":94,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":97,"author":{"gitId":"NgManSing"},"content":"    private static void quitProgram() {"},{"lineNumber":98,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"NgManSing":96,"-":4}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgManSing"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"NgManSing"},"content":"    private String taskName;"},{"lineNumber":3,"author":{"gitId":"NgManSing"},"content":"    private boolean isDone;"},{"lineNumber":4,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":5,"author":{"gitId":"NgManSing"},"content":"    public Task(String taskName) {"},{"lineNumber":6,"author":{"gitId":"NgManSing"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":7,"author":{"gitId":"NgManSing"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":10,"author":{"gitId":"NgManSing"},"content":"    public void setAsDone() {"},{"lineNumber":11,"author":{"gitId":"NgManSing"},"content":"        isDone \u003d true;"},{"lineNumber":12,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":14,"author":{"gitId":"NgManSing"},"content":"    public boolean isDone() {"},{"lineNumber":15,"author":{"gitId":"NgManSing"},"content":"        return isDone;"},{"lineNumber":16,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":18,"author":{"gitId":"NgManSing"},"content":"    public String getTaskName() {"},{"lineNumber":19,"author":{"gitId":"NgManSing"},"content":"        return taskName;"},{"lineNumber":20,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"NgManSing"},"content":"}"}],"authorContributionMap":{"NgManSing":21}}]
