[{"path":"Records.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NgManSing"},"content":"T|0|aa"},{"lineNumber":2,"author":{"gitId":"NgManSing"},"content":"D|0|11|uup"},{"lineNumber":3,"author":{"gitId":"NgManSing"},"content":"E|1|1010|100"}],"authorContributionMap":{"NgManSing":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgManSing"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":3,"author":{"gitId":"NgManSing"},"content":"import duke.command.CommandType;"},{"lineNumber":4,"author":{"gitId":"NgManSing"},"content":"import duke.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"NgManSing"},"content":"import duke.command.UserInput;"},{"lineNumber":6,"author":{"gitId":"NgManSing"},"content":"import duke.task.Deadline;"},{"lineNumber":7,"author":{"gitId":"NgManSing"},"content":"import duke.task.Event;"},{"lineNumber":8,"author":{"gitId":"NgManSing"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"NgManSing"},"content":"import duke.task.Todo;"},{"lineNumber":10,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":11,"author":{"gitId":"NgManSing"},"content":"import java.io.FileWriter;"},{"lineNumber":12,"author":{"gitId":"NgManSing"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"NgManSing"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"NgManSing"},"content":"import java.util.Arrays;"},{"lineNumber":15,"author":{"gitId":"NgManSing"},"content":"import java.util.Scanner;"},{"lineNumber":16,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":17,"author":{"gitId":"NgManSing"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"NgManSing"},"content":" * This class is to build a personal assistant chatbot called \"Happy\""},{"lineNumber":19,"author":{"gitId":"NgManSing"},"content":" * (Customized from Duke)"},{"lineNumber":20,"author":{"gitId":"NgManSing"},"content":" *"},{"lineNumber":21,"author":{"gitId":"NgManSing"},"content":" * @author NgManSing"},{"lineNumber":22,"author":{"gitId":"NgManSing"},"content":" */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":24,"author":{"gitId":"NgManSing"},"content":"    private static final ArrayList\u003cTask\u003e records \u003d new ArrayList\u003c\u003e();"},{"lineNumber":25,"author":{"gitId":"NgManSing"},"content":"    private static final Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":26,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":28,"author":{"gitId":"NgManSing"},"content":"        boolean isLoop \u003d true;"},{"lineNumber":29,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":30,"author":{"gitId":"NgManSing"},"content":"        printWelcomeMsg();"},{"lineNumber":31,"author":{"gitId":"NgManSing"},"content":"        while (isLoop) {"},{"lineNumber":32,"author":{"gitId":"NgManSing"},"content":"            try {"},{"lineNumber":33,"author":{"gitId":"NgManSing"},"content":"                isLoop \u003d receiveCommand();"},{"lineNumber":34,"author":{"gitId":"NgManSing"},"content":"            } catch (DukeException e) {"},{"lineNumber":35,"author":{"gitId":"NgManSing"},"content":"                promptUserInputInvalid();"},{"lineNumber":36,"author":{"gitId":"NgManSing"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":40,"author":{"gitId":"NgManSing"},"content":"    private static boolean receiveCommand() throws DukeException {"},{"lineNumber":41,"author":{"gitId":"NgManSing"},"content":"        boolean isLoop \u003d true;"},{"lineNumber":42,"author":{"gitId":"NgManSing"},"content":"        UserInput userInput \u003d getUserInput();"},{"lineNumber":43,"author":{"gitId":"NgManSing"},"content":"        switch (userInput.getCommand()) {"},{"lineNumber":44,"author":{"gitId":"NgManSing"},"content":"        case \"todo\":"},{"lineNumber":45,"author":{"gitId":"NgManSing"},"content":"            addRecord(userInput.getArguments(), Todo.TASK_TYPE);"},{"lineNumber":46,"author":{"gitId":"NgManSing"},"content":"            break;"},{"lineNumber":47,"author":{"gitId":"NgManSing"},"content":"        case \"deadline\":"},{"lineNumber":48,"author":{"gitId":"NgManSing"},"content":"            addRecord(userInput.getArguments(), Deadline.TASK_TYPE);"},{"lineNumber":49,"author":{"gitId":"NgManSing"},"content":"            break;"},{"lineNumber":50,"author":{"gitId":"NgManSing"},"content":"        case \"event\":"},{"lineNumber":51,"author":{"gitId":"NgManSing"},"content":"            addRecord(userInput.getArguments(), Event.TASK_TYPE);"},{"lineNumber":52,"author":{"gitId":"NgManSing"},"content":"            break;"},{"lineNumber":53,"author":{"gitId":"NgManSing"},"content":"        case \"list\":"},{"lineNumber":54,"author":{"gitId":"NgManSing"},"content":"            showList(userInput.getArguments());"},{"lineNumber":55,"author":{"gitId":"NgManSing"},"content":"            break;"},{"lineNumber":56,"author":{"gitId":"NgManSing"},"content":"        case \"done\":"},{"lineNumber":57,"author":{"gitId":"NgManSing"},"content":"            processCommand(userInput.getArguments(), CommandType.done);"},{"lineNumber":58,"author":{"gitId":"NgManSing"},"content":"            break;"},{"lineNumber":59,"author":{"gitId":"NgManSing"},"content":"        case \"delete\":"},{"lineNumber":60,"author":{"gitId":"NgManSing"},"content":"            processCommand(userInput.getArguments(), CommandType.delete);"},{"lineNumber":61,"author":{"gitId":"NgManSing"},"content":"            break;"},{"lineNumber":62,"author":{"gitId":"NgManSing"},"content":"        case \"bye\":"},{"lineNumber":63,"author":{"gitId":"NgManSing"},"content":"            isLoop \u003d isEndProgram(userInput.getArguments());"},{"lineNumber":64,"author":{"gitId":"NgManSing"},"content":"            break;"},{"lineNumber":65,"author":{"gitId":"NgManSing"},"content":"        default:"},{"lineNumber":66,"author":{"gitId":"NgManSing"},"content":"            throw new DukeException();"},{"lineNumber":67,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"NgManSing"},"content":"        return isLoop;"},{"lineNumber":69,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":71,"author":{"gitId":"NgManSing"},"content":"    private static void saveRecords() {"},{"lineNumber":72,"author":{"gitId":"NgManSing"},"content":"        try {"},{"lineNumber":73,"author":{"gitId":"NgManSing"},"content":"            FileWriter save \u003d new FileWriter(\"Records.txt\");"},{"lineNumber":74,"author":{"gitId":"NgManSing"},"content":"            for (Task task : records) {"},{"lineNumber":75,"author":{"gitId":"NgManSing"},"content":"                save.write(task.getSaveString() + \"\\n\");"},{"lineNumber":76,"author":{"gitId":"NgManSing"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"NgManSing"},"content":"            save.close();"},{"lineNumber":78,"author":{"gitId":"NgManSing"},"content":"        } catch (IOException e) {"},{"lineNumber":79,"author":{"gitId":"NgManSing"},"content":"            System.out.println(\"IOException - File failed to be saved\");"},{"lineNumber":80,"author":{"gitId":"NgManSing"},"content":"            e.printStackTrace();"},{"lineNumber":81,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":84,"author":{"gitId":"NgManSing"},"content":"    private static void promptUserInputInvalid() {"},{"lineNumber":85,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"I don\u0027t understand your input! Please try again!\");"},{"lineNumber":86,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":88,"author":{"gitId":"NgManSing"},"content":"    private static boolean isEndProgram(String[] arguments) {"},{"lineNumber":89,"author":{"gitId":"NgManSing"},"content":"        if (arguments.length !\u003d 0) {"},{"lineNumber":90,"author":{"gitId":"NgManSing"},"content":"            System.out.println(\"Command \\\"bye\\\" requires no argument. Please try again!\");"},{"lineNumber":91,"author":{"gitId":"NgManSing"},"content":"            return true;"},{"lineNumber":92,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":94,"author":{"gitId":"NgManSing"},"content":"        quitProgram();"},{"lineNumber":95,"author":{"gitId":"NgManSing"},"content":"        return false;"},{"lineNumber":96,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":98,"author":{"gitId":"NgManSing"},"content":"    private static void processCommand(String[] arguments, CommandType commandType) {"},{"lineNumber":99,"author":{"gitId":"NgManSing"},"content":"        if (arguments.length \u003d\u003d 0) {"},{"lineNumber":100,"author":{"gitId":"NgManSing"},"content":"            System.out.printf(\"Command \\\"%s\\\" requires an integer argument. Please try again!\\n\", commandType);"},{"lineNumber":101,"author":{"gitId":"NgManSing"},"content":"            return;"},{"lineNumber":102,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"NgManSing"},"content":"        int targetRecordIndex \u003d -1;"},{"lineNumber":104,"author":{"gitId":"NgManSing"},"content":"        boolean isArgumentInteger \u003d true;"},{"lineNumber":105,"author":{"gitId":"NgManSing"},"content":"        try {"},{"lineNumber":106,"author":{"gitId":"NgManSing"},"content":"            targetRecordIndex \u003d Integer.parseInt(arguments[0]) - 1;"},{"lineNumber":107,"author":{"gitId":"NgManSing"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":108,"author":{"gitId":"NgManSing"},"content":"            isArgumentInteger \u003d false;"},{"lineNumber":109,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":111,"author":{"gitId":"NgManSing"},"content":"        if (arguments.length \u003d\u003d 1 \u0026\u0026 isArgumentInteger) {"},{"lineNumber":112,"author":{"gitId":"NgManSing"},"content":"            switch (commandType) {"},{"lineNumber":113,"author":{"gitId":"NgManSing"},"content":"            case delete:"},{"lineNumber":114,"author":{"gitId":"NgManSing"},"content":"                deleteRecord(targetRecordIndex);"},{"lineNumber":115,"author":{"gitId":"NgManSing"},"content":"                break;"},{"lineNumber":116,"author":{"gitId":"NgManSing"},"content":"            case done:"},{"lineNumber":117,"author":{"gitId":"NgManSing"},"content":"                markAsDone(targetRecordIndex);"},{"lineNumber":118,"author":{"gitId":"NgManSing"},"content":"                break;"},{"lineNumber":119,"author":{"gitId":"NgManSing"},"content":"            default:"},{"lineNumber":120,"author":{"gitId":"NgManSing"},"content":"                throw new IllegalArgumentException(\"Invalid commandType! Program terminated.\");"},{"lineNumber":121,"author":{"gitId":"NgManSing"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"NgManSing"},"content":"        } else {"},{"lineNumber":123,"author":{"gitId":"NgManSing"},"content":"            System.out.printf(\"Command \\\"%s\\\" only requires an integer argument. Please try again!\\n\", commandType);"},{"lineNumber":124,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":127,"author":{"gitId":"NgManSing"},"content":"    private static void deleteRecord(int index) {"},{"lineNumber":128,"author":{"gitId":"NgManSing"},"content":"        if (isIndexOutOfBound(index)) {"},{"lineNumber":129,"author":{"gitId":"NgManSing"},"content":"            System.out.println(\"Invalid input! (Index cannot be out of bounds)\");"},{"lineNumber":130,"author":{"gitId":"NgManSing"},"content":"            return;"},{"lineNumber":131,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"Got it. I\u0027ve deleted this task:\");"},{"lineNumber":133,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"\\t\" + records.remove(index));"},{"lineNumber":134,"author":{"gitId":"NgManSing"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\\n\", records.size());"},{"lineNumber":135,"author":{"gitId":"NgManSing"},"content":"        saveRecords();"},{"lineNumber":136,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":138,"author":{"gitId":"NgManSing"},"content":"    private static UserInput getUserInput() {"},{"lineNumber":139,"author":{"gitId":"NgManSing"},"content":"        String userInput \u003d \"dummy\";"},{"lineNumber":140,"author":{"gitId":"NgManSing"},"content":"        if (scan.hasNextLine()) {"},{"lineNumber":141,"author":{"gitId":"NgManSing"},"content":"            userInput \u003d scan.nextLine();"},{"lineNumber":142,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"Command entered: \" + userInput);"},{"lineNumber":144,"author":{"gitId":"NgManSing"},"content":"        return new UserInput(userInput);"},{"lineNumber":145,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":147,"author":{"gitId":"NgManSing"},"content":"    private static void printWelcomeMsg() {"},{"lineNumber":148,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"Hello! I am Happy :)\");"},{"lineNumber":149,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":150,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":152,"author":{"gitId":"NgManSing"},"content":"    private static void markAsDone(int index) {"},{"lineNumber":153,"author":{"gitId":"NgManSing"},"content":"        if (isIndexOutOfBound(index)) {"},{"lineNumber":154,"author":{"gitId":"NgManSing"},"content":"            System.out.println(\"Invalid input! (Index cannot be out of bounds)\");"},{"lineNumber":155,"author":{"gitId":"NgManSing"},"content":"            return;"},{"lineNumber":156,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"NgManSing"},"content":"        records.get(index).setAsDone();"},{"lineNumber":158,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":159,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"\\t\" + records.get(index));"},{"lineNumber":160,"author":{"gitId":"NgManSing"},"content":"        saveRecords();"},{"lineNumber":161,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":163,"author":{"gitId":"NgManSing"},"content":"    private static boolean isIndexOutOfBound(int index) {"},{"lineNumber":164,"author":{"gitId":"NgManSing"},"content":"        return index \u003c 0 || index \u003e\u003d records.size();"},{"lineNumber":165,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":167,"author":{"gitId":"NgManSing"},"content":"    private static void addRecord(String[] detailFragments, String taskType) {"},{"lineNumber":168,"author":{"gitId":"NgManSing"},"content":"        String[] details;"},{"lineNumber":169,"author":{"gitId":"NgManSing"},"content":"        String taskName;"},{"lineNumber":170,"author":{"gitId":"NgManSing"},"content":"        String date;"},{"lineNumber":171,"author":{"gitId":"NgManSing"},"content":"        boolean isAdded \u003d false;"},{"lineNumber":172,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":173,"author":{"gitId":"NgManSing"},"content":"        switch (taskType) {"},{"lineNumber":174,"author":{"gitId":"NgManSing"},"content":"        case Todo.TASK_TYPE:"},{"lineNumber":175,"author":{"gitId":"NgManSing"},"content":"            if (detailFragments.length \u003e 0) {"},{"lineNumber":176,"author":{"gitId":"NgManSing"},"content":"                taskName \u003d String.join(\" \", detailFragments);"},{"lineNumber":177,"author":{"gitId":"NgManSing"},"content":"                records.add(new Todo(taskName));"},{"lineNumber":178,"author":{"gitId":"NgManSing"},"content":"                isAdded \u003d true;"},{"lineNumber":179,"author":{"gitId":"NgManSing"},"content":"            } else {"},{"lineNumber":180,"author":{"gitId":"NgManSing"},"content":"                showInvalidEmptyDescription();"},{"lineNumber":181,"author":{"gitId":"NgManSing"},"content":"            }"},{"lineNumber":182,"author":{"gitId":"NgManSing"},"content":"            break;"},{"lineNumber":183,"author":{"gitId":"NgManSing"},"content":"        case Deadline.TASK_TYPE:"},{"lineNumber":184,"author":{"gitId":"NgManSing"},"content":"            details \u003d getTaskNameAndDate(detailFragments, taskType);"},{"lineNumber":185,"author":{"gitId":"NgManSing"},"content":"            if (details !\u003d null) {"},{"lineNumber":186,"author":{"gitId":"NgManSing"},"content":"                taskName \u003d details[0];"},{"lineNumber":187,"author":{"gitId":"NgManSing"},"content":"                date \u003d details[1];"},{"lineNumber":188,"author":{"gitId":"NgManSing"},"content":"                records.add(new Deadline(taskName, date));"},{"lineNumber":189,"author":{"gitId":"NgManSing"},"content":"                isAdded \u003d true;"},{"lineNumber":190,"author":{"gitId":"NgManSing"},"content":"            }"},{"lineNumber":191,"author":{"gitId":"NgManSing"},"content":"            break;"},{"lineNumber":192,"author":{"gitId":"NgManSing"},"content":"        case Event.TASK_TYPE:"},{"lineNumber":193,"author":{"gitId":"NgManSing"},"content":"            details \u003d getTaskNameAndDate(detailFragments, taskType);"},{"lineNumber":194,"author":{"gitId":"NgManSing"},"content":"            if (details !\u003d null) {"},{"lineNumber":195,"author":{"gitId":"NgManSing"},"content":"                taskName \u003d details[0];"},{"lineNumber":196,"author":{"gitId":"NgManSing"},"content":"                date \u003d details[1];"},{"lineNumber":197,"author":{"gitId":"NgManSing"},"content":"                records.add(new Event(taskName, date));"},{"lineNumber":198,"author":{"gitId":"NgManSing"},"content":"                isAdded \u003d true;"},{"lineNumber":199,"author":{"gitId":"NgManSing"},"content":"            }"},{"lineNumber":200,"author":{"gitId":"NgManSing"},"content":"            break;"},{"lineNumber":201,"author":{"gitId":"NgManSing"},"content":"        default:"},{"lineNumber":202,"author":{"gitId":"NgManSing"},"content":"            throw new IllegalArgumentException(\"A non-taskType is passed to addRecord. Program terminated.\");"},{"lineNumber":203,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":205,"author":{"gitId":"NgManSing"},"content":"        if (isAdded) {"},{"lineNumber":206,"author":{"gitId":"NgManSing"},"content":"            int numberOfRecords \u003d records.size();"},{"lineNumber":207,"author":{"gitId":"NgManSing"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":208,"author":{"gitId":"NgManSing"},"content":"            System.out.println(\"\\t\" + records.get(numberOfRecords - 1));"},{"lineNumber":209,"author":{"gitId":"NgManSing"},"content":"            System.out.printf(\"Now you have %d tasks in the list.\\n\", numberOfRecords);"},{"lineNumber":210,"author":{"gitId":"NgManSing"},"content":"            saveRecords();"},{"lineNumber":211,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":212,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":214,"author":{"gitId":"NgManSing"},"content":"    private static void showInvalidEmptyDescription() {"},{"lineNumber":215,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"The description of a task cannot be empty.\");"},{"lineNumber":216,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":218,"author":{"gitId":"NgManSing"},"content":"    private static String[] getTaskNameAndDate(String[] detailFragments, String taskType) {"},{"lineNumber":219,"author":{"gitId":"NgManSing"},"content":"        int keywordIndex \u003d Arrays.asList(detailFragments).indexOf(taskType.equals(Deadline.TASK_TYPE) ? \"/by\" : \"/at\");"},{"lineNumber":220,"author":{"gitId":"NgManSing"},"content":"        if (keywordIndex \u003c 0 || keywordIndex \u003d\u003d detailFragments.length - 1) {"},{"lineNumber":221,"author":{"gitId":"NgManSing"},"content":"            System.out.println(\"Invalid argument! It may be resulted from:\");"},{"lineNumber":222,"author":{"gitId":"NgManSing"},"content":"            System.out.println(\"1. No date/time provided\");"},{"lineNumber":223,"author":{"gitId":"NgManSing"},"content":"            System.out.println(\"2. keywords not matching\");"},{"lineNumber":224,"author":{"gitId":"NgManSing"},"content":"            return null;"},{"lineNumber":225,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"NgManSing"},"content":"        if (keywordIndex \u003d\u003d 0) {"},{"lineNumber":227,"author":{"gitId":"NgManSing"},"content":"            showInvalidEmptyDescription();"},{"lineNumber":228,"author":{"gitId":"NgManSing"},"content":"            return null;"},{"lineNumber":229,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":230,"author":{"gitId":"NgManSing"},"content":"        StringBuilder taskName \u003d new StringBuilder();"},{"lineNumber":231,"author":{"gitId":"NgManSing"},"content":"        StringBuilder dueDay \u003d new StringBuilder();"},{"lineNumber":232,"author":{"gitId":"NgManSing"},"content":"        taskName.append(detailFragments[0]);"},{"lineNumber":233,"author":{"gitId":"NgManSing"},"content":"        for (int i \u003d 1; i \u003c keywordIndex; i++) {"},{"lineNumber":234,"author":{"gitId":"NgManSing"},"content":"            taskName.append(\" \").append(detailFragments[i]);"},{"lineNumber":235,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":236,"author":{"gitId":"NgManSing"},"content":"        dueDay.append(detailFragments[keywordIndex + 1]);"},{"lineNumber":237,"author":{"gitId":"NgManSing"},"content":"        for (int i \u003d keywordIndex + 2; i \u003c detailFragments.length; i++) {"},{"lineNumber":238,"author":{"gitId":"NgManSing"},"content":"            dueDay.append(\" \").append(detailFragments[i]);"},{"lineNumber":239,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":240,"author":{"gitId":"NgManSing"},"content":"        return new String[]{taskName.toString(), dueDay.toString()};"},{"lineNumber":241,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":242,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":243,"author":{"gitId":"NgManSing"},"content":"    private static void showList(String[] arguments) {"},{"lineNumber":244,"author":{"gitId":"NgManSing"},"content":"        if (arguments.length !\u003d 0) {"},{"lineNumber":245,"author":{"gitId":"NgManSing"},"content":"            System.out.println(\"Command \\\"list\\\" requires no argument. Please try again!\");"},{"lineNumber":246,"author":{"gitId":"NgManSing"},"content":"            return;"},{"lineNumber":247,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":248,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"Here is your task List:\");"},{"lineNumber":249,"author":{"gitId":"NgManSing"},"content":"        for (int i \u003d 0; i \u003c records.size(); i++) {"},{"lineNumber":250,"author":{"gitId":"NgManSing"},"content":"            System.out.println((i + 1) + \". \" + records.get(i));"},{"lineNumber":251,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":252,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":253,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":254,"author":{"gitId":"NgManSing"},"content":"    private static void quitProgram() {"},{"lineNumber":255,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"NgManSing":253,"-":4}},{"path":"src/main/java/duke/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgManSing"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":3,"author":{"gitId":"NgManSing"},"content":"public enum CommandType {"},{"lineNumber":4,"author":{"gitId":"NgManSing"},"content":"    delete, done;"},{"lineNumber":5,"author":{"gitId":"NgManSing"},"content":"}"}],"authorContributionMap":{"NgManSing":5}},{"path":"src/main/java/duke/command/UserInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgManSing"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":3,"author":{"gitId":"NgManSing"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":5,"author":{"gitId":"NgManSing"},"content":"public class UserInput {"},{"lineNumber":6,"author":{"gitId":"NgManSing"},"content":"    private String command;"},{"lineNumber":7,"author":{"gitId":"NgManSing"},"content":"    private String[] arguments;"},{"lineNumber":8,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":9,"author":{"gitId":"NgManSing"},"content":"    public UserInput(String rawInput) {"},{"lineNumber":10,"author":{"gitId":"NgManSing"},"content":"        processInput(rawInput);"},{"lineNumber":11,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":13,"author":{"gitId":"NgManSing"},"content":"    private void processInput(String rawInput) {"},{"lineNumber":14,"author":{"gitId":"NgManSing"},"content":"        String[] inputFragments \u003d rawInput.split(\" \");"},{"lineNumber":15,"author":{"gitId":"NgManSing"},"content":"        command \u003d inputFragments[0];"},{"lineNumber":16,"author":{"gitId":"NgManSing"},"content":"        arguments \u003d Arrays.copyOfRange(inputFragments, 1, inputFragments.length);"},{"lineNumber":17,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":19,"author":{"gitId":"NgManSing"},"content":"    public String getCommand() {"},{"lineNumber":20,"author":{"gitId":"NgManSing"},"content":"        return command;"},{"lineNumber":21,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":23,"author":{"gitId":"NgManSing"},"content":"    public String[] getArguments() {"},{"lineNumber":24,"author":{"gitId":"NgManSing"},"content":"        return arguments;"},{"lineNumber":25,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"NgManSing"},"content":"}"}],"authorContributionMap":{"NgManSing":26}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgManSing"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":3,"author":{"gitId":"NgManSing"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"NgManSing"},"content":"}"}],"authorContributionMap":{"NgManSing":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgManSing"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":3,"author":{"gitId":"NgManSing"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":5,"author":{"gitId":"NgManSing"},"content":"    public static final String TASK_TYPE \u003d \"D\";"},{"lineNumber":6,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":7,"author":{"gitId":"NgManSing"},"content":"    private String dueDay;"},{"lineNumber":8,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":9,"author":{"gitId":"NgManSing"},"content":"    public Deadline(String taskName, String dueDay) {"},{"lineNumber":10,"author":{"gitId":"NgManSing"},"content":"        super(taskName);"},{"lineNumber":11,"author":{"gitId":"NgManSing"},"content":"        this.dueDay \u003d dueDay;"},{"lineNumber":12,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":14,"author":{"gitId":"NgManSing"},"content":"    public String getDueDay() {"},{"lineNumber":15,"author":{"gitId":"NgManSing"},"content":"        return dueDay;"},{"lineNumber":16,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":18,"author":{"gitId":"NgManSing"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"NgManSing"},"content":"    public String getTaskType() {"},{"lineNumber":20,"author":{"gitId":"NgManSing"},"content":"        return TASK_TYPE;"},{"lineNumber":21,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":23,"author":{"gitId":"NgManSing"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"NgManSing"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"NgManSing"},"content":"        return \"[\" + TASK_TYPE + \"]\" + super.toString() + \" (by: \" + dueDay + \")\";"},{"lineNumber":26,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":28,"author":{"gitId":"NgManSing"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"NgManSing"},"content":"    public String getSaveString() {"},{"lineNumber":30,"author":{"gitId":"NgManSing"},"content":"        return TASK_TYPE + super.getSaveString() + \"|\" + getDueDay();"},{"lineNumber":31,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"NgManSing"},"content":"}"}],"authorContributionMap":{"NgManSing":32}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgManSing"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":3,"author":{"gitId":"NgManSing"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":5,"author":{"gitId":"NgManSing"},"content":"    public static final String TASK_TYPE \u003d \"E\";"},{"lineNumber":6,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":7,"author":{"gitId":"NgManSing"},"content":"    private String schedule;"},{"lineNumber":8,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":9,"author":{"gitId":"NgManSing"},"content":"    public Event(String taskName, String schedule) {"},{"lineNumber":10,"author":{"gitId":"NgManSing"},"content":"        super(taskName);"},{"lineNumber":11,"author":{"gitId":"NgManSing"},"content":"        this.schedule \u003d schedule;"},{"lineNumber":12,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":14,"author":{"gitId":"NgManSing"},"content":"    public String getSchedule() {"},{"lineNumber":15,"author":{"gitId":"NgManSing"},"content":"        return schedule;"},{"lineNumber":16,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":18,"author":{"gitId":"NgManSing"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"NgManSing"},"content":"    public String getTaskType() {"},{"lineNumber":20,"author":{"gitId":"NgManSing"},"content":"        return TASK_TYPE;"},{"lineNumber":21,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":23,"author":{"gitId":"NgManSing"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"NgManSing"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"NgManSing"},"content":"        return \"[\" + TASK_TYPE + \"]\" + super.toString() + \" (at: \" + schedule + \")\";"},{"lineNumber":26,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":28,"author":{"gitId":"NgManSing"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"NgManSing"},"content":"    public String getSaveString() {"},{"lineNumber":30,"author":{"gitId":"NgManSing"},"content":"        return TASK_TYPE + super.getSaveString() + \"|\" + getSchedule();"},{"lineNumber":31,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"NgManSing"},"content":"}"}],"authorContributionMap":{"NgManSing":32}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgManSing"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":3,"author":{"gitId":"NgManSing"},"content":"abstract public class Task {"},{"lineNumber":4,"author":{"gitId":"NgManSing"},"content":"    private final String taskName;"},{"lineNumber":5,"author":{"gitId":"NgManSing"},"content":"    private boolean isDone;"},{"lineNumber":6,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":7,"author":{"gitId":"NgManSing"},"content":"    public Task(String taskName) {"},{"lineNumber":8,"author":{"gitId":"NgManSing"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":9,"author":{"gitId":"NgManSing"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":12,"author":{"gitId":"NgManSing"},"content":"    public void setAsDone() {"},{"lineNumber":13,"author":{"gitId":"NgManSing"},"content":"        isDone \u003d true;"},{"lineNumber":14,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":16,"author":{"gitId":"NgManSing"},"content":"    public boolean isDone() {"},{"lineNumber":17,"author":{"gitId":"NgManSing"},"content":"        return isDone;"},{"lineNumber":18,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":20,"author":{"gitId":"NgManSing"},"content":"    public String getTaskName() {"},{"lineNumber":21,"author":{"gitId":"NgManSing"},"content":"        return taskName;"},{"lineNumber":22,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":24,"author":{"gitId":"NgManSing"},"content":"    abstract public String getTaskType();"},{"lineNumber":25,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":26,"author":{"gitId":"NgManSing"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"NgManSing"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"NgManSing"},"content":"        String mark \u003d isDone ? \"[X] \" : \"[ ] \";"},{"lineNumber":29,"author":{"gitId":"NgManSing"},"content":"        return mark + taskName;"},{"lineNumber":30,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":32,"author":{"gitId":"NgManSing"},"content":"    public String getSaveString() {"},{"lineNumber":33,"author":{"gitId":"NgManSing"},"content":"        String mark \u003d isDone ? \"|1|\" : \"|0|\";"},{"lineNumber":34,"author":{"gitId":"NgManSing"},"content":"        return mark + taskName;"},{"lineNumber":35,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"NgManSing"},"content":"}"}],"authorContributionMap":{"NgManSing":36}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgManSing"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":3,"author":{"gitId":"NgManSing"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":5,"author":{"gitId":"NgManSing"},"content":"    public static final String TASK_TYPE \u003d \"T\";"},{"lineNumber":6,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":7,"author":{"gitId":"NgManSing"},"content":"    public Todo(String taskName) {"},{"lineNumber":8,"author":{"gitId":"NgManSing"},"content":"        super(taskName);"},{"lineNumber":9,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":11,"author":{"gitId":"NgManSing"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"NgManSing"},"content":"    public String getTaskType() {"},{"lineNumber":13,"author":{"gitId":"NgManSing"},"content":"        return TASK_TYPE;"},{"lineNumber":14,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":16,"author":{"gitId":"NgManSing"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"NgManSing"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"NgManSing"},"content":"        return \"[\" + TASK_TYPE + \"]\" + super.toString();"},{"lineNumber":19,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":21,"author":{"gitId":"NgManSing"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"NgManSing"},"content":"    public String getSaveString() {"},{"lineNumber":23,"author":{"gitId":"NgManSing"},"content":"        return TASK_TYPE + super.getSaveString();"},{"lineNumber":24,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"NgManSing"},"content":"}"}],"authorContributionMap":{"NgManSing":25}},{"path":"text-ui-test/Records.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NgManSing"},"content":"T|0|Task-1"},{"lineNumber":2,"author":{"gitId":"NgManSing"},"content":"D|1|Task-2|10:00am"},{"lineNumber":3,"author":{"gitId":"NgManSing"},"content":"E|0|Task-3|tmr"}],"authorContributionMap":{"NgManSing":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NgManSing"},"content":"Testing"},{"lineNumber":2,"author":{"gitId":"NgManSing"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"NgManSing"},"content":"todo Task-1"},{"lineNumber":4,"author":{"gitId":"NgManSing"},"content":"list"},{"lineNumber":5,"author":{"gitId":"NgManSing"},"content":"deadline Task-2"},{"lineNumber":6,"author":{"gitId":"NgManSing"},"content":"deadline Task-2 /at 10:00am"},{"lineNumber":7,"author":{"gitId":"NgManSing"},"content":"deadline Task-2 /by 10:00am"},{"lineNumber":8,"author":{"gitId":"NgManSing"},"content":"list"},{"lineNumber":9,"author":{"gitId":"NgManSing"},"content":"event Task-3"},{"lineNumber":10,"author":{"gitId":"NgManSing"},"content":"event Task-3 /by tmr"},{"lineNumber":11,"author":{"gitId":"NgManSing"},"content":"event Task-3 /at tmr"},{"lineNumber":12,"author":{"gitId":"NgManSing"},"content":"list"},{"lineNumber":13,"author":{"gitId":"NgManSing"},"content":"done 0"},{"lineNumber":14,"author":{"gitId":"NgManSing"},"content":"done 2"},{"lineNumber":15,"author":{"gitId":"NgManSing"},"content":"list"},{"lineNumber":16,"author":{"gitId":"NgManSing"},"content":"done"},{"lineNumber":17,"author":{"gitId":"NgManSing"},"content":"list 2"},{"lineNumber":18,"author":{"gitId":"NgManSing"},"content":"delete"},{"lineNumber":19,"author":{"gitId":"NgManSing"},"content":"delete 10"},{"lineNumber":20,"author":{"gitId":"NgManSing"},"content":"delete 2"},{"lineNumber":21,"author":{"gitId":"NgManSing"},"content":"list"},{"lineNumber":22,"author":{"gitId":"NgManSing"},"content":"bye again~"},{"lineNumber":23,"author":{"gitId":"NgManSing"},"content":"bye"}],"authorContributionMap":{"NgManSing":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"NgManSing"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"NgManSing"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"NgManSing"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"NgManSing":3,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"NgManSing"},"content":"# run the program, feed commands from INPUT.TXT file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"NgManSing":1,"-":37}}]
