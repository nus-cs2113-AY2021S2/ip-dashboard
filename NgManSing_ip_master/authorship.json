[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"NgManSing"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"NgManSing"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":11,"author":{"gitId":"NgManSing"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"NgManSing"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"NgManSing"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"NgManSing"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"NgManSing"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"NgManSing":9,"-":17}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgManSing"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":3,"author":{"gitId":"NgManSing"},"content":"    public static final String TASK_TYPE \u003d \"D\";"},{"lineNumber":4,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":5,"author":{"gitId":"NgManSing"},"content":"    private String dueDay;"},{"lineNumber":6,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":7,"author":{"gitId":"NgManSing"},"content":"    public Deadline(String taskName, String dueDay) {"},{"lineNumber":8,"author":{"gitId":"NgManSing"},"content":"        super(taskName);"},{"lineNumber":9,"author":{"gitId":"NgManSing"},"content":"        this.dueDay \u003d dueDay;"},{"lineNumber":10,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":12,"author":{"gitId":"NgManSing"},"content":"    public String getDueDay() {"},{"lineNumber":13,"author":{"gitId":"NgManSing"},"content":"        return dueDay;"},{"lineNumber":14,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":16,"author":{"gitId":"NgManSing"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"NgManSing"},"content":"    public String getTaskType() {"},{"lineNumber":18,"author":{"gitId":"NgManSing"},"content":"        return TASK_TYPE;"},{"lineNumber":19,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":21,"author":{"gitId":"NgManSing"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"NgManSing"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"NgManSing"},"content":"        return \"[\" + TASK_TYPE + \"]\" + super.toString() + \" (by: \" + dueDay + \")\";"},{"lineNumber":24,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"NgManSing"},"content":"}"}],"authorContributionMap":{"NgManSing":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgManSing"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"NgManSing"},"content":"import java.util.Arrays;"},{"lineNumber":3,"author":{"gitId":"NgManSing"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":5,"author":{"gitId":"NgManSing"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"NgManSing"},"content":" * This class is to build a personal assistance chat-bot called \"Kaman\""},{"lineNumber":7,"author":{"gitId":"NgManSing"},"content":" * (Customised from Duke)"},{"lineNumber":8,"author":{"gitId":"NgManSing"},"content":" *"},{"lineNumber":9,"author":{"gitId":"NgManSing"},"content":" * @author NgManSing"},{"lineNumber":10,"author":{"gitId":"NgManSing"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"NgManSing"},"content":"    private static final ArrayList\u003cTask\u003e records \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":15,"author":{"gitId":"NgManSing"},"content":"        boolean isLoop \u003d true;"},{"lineNumber":16,"author":{"gitId":"NgManSing"},"content":"        printWelcomeMsg();"},{"lineNumber":17,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":18,"author":{"gitId":"NgManSing"},"content":"        do {"},{"lineNumber":19,"author":{"gitId":"NgManSing"},"content":"            String rawInput \u003d getUserInput();"},{"lineNumber":20,"author":{"gitId":"NgManSing"},"content":"            String[] inputs \u003d rawInput.split(\" \");"},{"lineNumber":21,"author":{"gitId":"NgManSing"},"content":"            String command \u003d inputs[0];"},{"lineNumber":22,"author":{"gitId":"NgManSing"},"content":"            String[] arguments \u003d Arrays.copyOfRange(inputs, 1, inputs.length);"},{"lineNumber":23,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":24,"author":{"gitId":"NgManSing"},"content":"            switch (command) {"},{"lineNumber":25,"author":{"gitId":"NgManSing"},"content":"            case \"todo\":"},{"lineNumber":26,"author":{"gitId":"NgManSing"},"content":"                addRecord(arguments, Todo.TASK_TYPE);"},{"lineNumber":27,"author":{"gitId":"NgManSing"},"content":"                break;"},{"lineNumber":28,"author":{"gitId":"NgManSing"},"content":"            case \"deadline\":"},{"lineNumber":29,"author":{"gitId":"NgManSing"},"content":"                addRecord(arguments, Deadline.TASK_TYPE);"},{"lineNumber":30,"author":{"gitId":"NgManSing"},"content":"                break;"},{"lineNumber":31,"author":{"gitId":"NgManSing"},"content":"            case \"event\":"},{"lineNumber":32,"author":{"gitId":"NgManSing"},"content":"                addRecord(arguments, Event.TASK_TYPE);"},{"lineNumber":33,"author":{"gitId":"NgManSing"},"content":"                break;"},{"lineNumber":34,"author":{"gitId":"NgManSing"},"content":"            case \"list\":"},{"lineNumber":35,"author":{"gitId":"NgManSing"},"content":"                showList();"},{"lineNumber":36,"author":{"gitId":"NgManSing"},"content":"                break;"},{"lineNumber":37,"author":{"gitId":"NgManSing"},"content":"            case \"done\":"},{"lineNumber":38,"author":{"gitId":"NgManSing"},"content":"                executeCommandDone(arguments);"},{"lineNumber":39,"author":{"gitId":"NgManSing"},"content":"                break;"},{"lineNumber":40,"author":{"gitId":"NgManSing"},"content":"            case \"bye\":"},{"lineNumber":41,"author":{"gitId":"NgManSing"},"content":"                isLoop \u003d executeCommandBye(rawInput, arguments);"},{"lineNumber":42,"author":{"gitId":"NgManSing"},"content":"                break;"},{"lineNumber":43,"author":{"gitId":"NgManSing"},"content":"            default:"},{"lineNumber":44,"author":{"gitId":"NgManSing"},"content":"                promptUserInputInvalid();"},{"lineNumber":45,"author":{"gitId":"NgManSing"},"content":"                break;"},{"lineNumber":46,"author":{"gitId":"NgManSing"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"NgManSing"},"content":"        } while (isLoop);"},{"lineNumber":48,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":50,"author":{"gitId":"NgManSing"},"content":"    private static void promptUserInputInvalid() {"},{"lineNumber":51,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"Invalid command! Please try again!\");"},{"lineNumber":52,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":54,"author":{"gitId":"NgManSing"},"content":"    private static boolean executeCommandBye(String rawInput, String[] arguments) {"},{"lineNumber":55,"author":{"gitId":"NgManSing"},"content":"        if (arguments.length !\u003d 0) {"},{"lineNumber":56,"author":{"gitId":"NgManSing"},"content":"            System.out.println(\"Command \\\"Bye\\\" requires no argument. Please try again!\");"},{"lineNumber":57,"author":{"gitId":"NgManSing"},"content":"            return true;"},{"lineNumber":58,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":60,"author":{"gitId":"NgManSing"},"content":"        quitProgram();"},{"lineNumber":61,"author":{"gitId":"NgManSing"},"content":"        return false;"},{"lineNumber":62,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":64,"author":{"gitId":"NgManSing"},"content":"    private static void executeCommandDone(String[] arguments) {"},{"lineNumber":65,"author":{"gitId":"NgManSing"},"content":"        int targetRecordIndex \u003d -1;"},{"lineNumber":66,"author":{"gitId":"NgManSing"},"content":"        boolean isArgumentInteger \u003d true;"},{"lineNumber":67,"author":{"gitId":"NgManSing"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"NgManSing"},"content":"            targetRecordIndex \u003d Integer.parseInt(arguments[0]) - 1;"},{"lineNumber":69,"author":{"gitId":"NgManSing"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":70,"author":{"gitId":"NgManSing"},"content":"            isArgumentInteger \u003d false;"},{"lineNumber":71,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":73,"author":{"gitId":"NgManSing"},"content":"        if (arguments.length \u003d\u003d 1 \u0026\u0026 isArgumentInteger) {"},{"lineNumber":74,"author":{"gitId":"NgManSing"},"content":"            markAsDone(targetRecordIndex);"},{"lineNumber":75,"author":{"gitId":"NgManSing"},"content":"        } else {"},{"lineNumber":76,"author":{"gitId":"NgManSing"},"content":"            System.out.println(\"Command \\\"Done\\\" only requires an integer argument. Please try again!\");"},{"lineNumber":77,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":80,"author":{"gitId":"NgManSing"},"content":"    private static String getUserInput() {"},{"lineNumber":81,"author":{"gitId":"NgManSing"},"content":"        Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":82,"author":{"gitId":"NgManSing"},"content":"        String userInput \u003d scan.nextLine();"},{"lineNumber":83,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"Command entered: \" + userInput);"},{"lineNumber":84,"author":{"gitId":"NgManSing"},"content":"        return userInput;"},{"lineNumber":85,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":87,"author":{"gitId":"NgManSing"},"content":"    private static void printWelcomeMsg() {"},{"lineNumber":88,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"Hello! I am Kaman :)\");"},{"lineNumber":89,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":90,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":92,"author":{"gitId":"NgManSing"},"content":"    private static void markAsDone(int index) {"},{"lineNumber":93,"author":{"gitId":"NgManSing"},"content":"        if (index \u003c 0 || index \u003e\u003d records.size()) {"},{"lineNumber":94,"author":{"gitId":"NgManSing"},"content":"            System.out.println(\"Invalid input! (Index cannot be out of bounds)\");"},{"lineNumber":95,"author":{"gitId":"NgManSing"},"content":"            return;"},{"lineNumber":96,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"NgManSing"},"content":"        records.get(index).setAsDone();"},{"lineNumber":98,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":99,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"\\t\" + records.get(index));"},{"lineNumber":100,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":102,"author":{"gitId":"NgManSing"},"content":"    private static void addRecord(String[] detailFragments, String taskType) {"},{"lineNumber":103,"author":{"gitId":"NgManSing"},"content":"        String[] details \u003d null;"},{"lineNumber":104,"author":{"gitId":"NgManSing"},"content":"        String taskName;"},{"lineNumber":105,"author":{"gitId":"NgManSing"},"content":"        String date;"},{"lineNumber":106,"author":{"gitId":"NgManSing"},"content":"        switch (taskType) {"},{"lineNumber":107,"author":{"gitId":"NgManSing"},"content":"        case Todo.TASK_TYPE:"},{"lineNumber":108,"author":{"gitId":"NgManSing"},"content":"            taskName \u003d String.join(\" \", detailFragments);"},{"lineNumber":109,"author":{"gitId":"NgManSing"},"content":"            records.add(new Todo(taskName));"},{"lineNumber":110,"author":{"gitId":"NgManSing"},"content":"            break;"},{"lineNumber":111,"author":{"gitId":"NgManSing"},"content":"        case Deadline.TASK_TYPE:"},{"lineNumber":112,"author":{"gitId":"NgManSing"},"content":"            details \u003d getTaskNameAndDate(detailFragments, taskType);"},{"lineNumber":113,"author":{"gitId":"NgManSing"},"content":"            if (details !\u003d null) {"},{"lineNumber":114,"author":{"gitId":"NgManSing"},"content":"                taskName \u003d details[0];"},{"lineNumber":115,"author":{"gitId":"NgManSing"},"content":"                date \u003d details[1];"},{"lineNumber":116,"author":{"gitId":"NgManSing"},"content":"                records.add(new Deadline(taskName, date));"},{"lineNumber":117,"author":{"gitId":"NgManSing"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"NgManSing"},"content":"            break;"},{"lineNumber":119,"author":{"gitId":"NgManSing"},"content":"        case Event.TASK_TYPE:"},{"lineNumber":120,"author":{"gitId":"NgManSing"},"content":"            details \u003d getTaskNameAndDate(detailFragments, taskType);"},{"lineNumber":121,"author":{"gitId":"NgManSing"},"content":"            if (details !\u003d null) {"},{"lineNumber":122,"author":{"gitId":"NgManSing"},"content":"                taskName \u003d details[0];"},{"lineNumber":123,"author":{"gitId":"NgManSing"},"content":"                date \u003d details[1];"},{"lineNumber":124,"author":{"gitId":"NgManSing"},"content":"                records.add(new Event(taskName, date));"},{"lineNumber":125,"author":{"gitId":"NgManSing"},"content":"            }"},{"lineNumber":126,"author":{"gitId":"NgManSing"},"content":"            break;"},{"lineNumber":127,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"NgManSing"},"content":"        if (details !\u003d null || taskType.equals(Todo.TASK_TYPE)) {"},{"lineNumber":129,"author":{"gitId":"NgManSing"},"content":"            int numberOfRecords \u003d records.size();"},{"lineNumber":130,"author":{"gitId":"NgManSing"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":131,"author":{"gitId":"NgManSing"},"content":"            System.out.println(\"\\t\" + records.get(numberOfRecords - 1));"},{"lineNumber":132,"author":{"gitId":"NgManSing"},"content":"            System.out.printf(\"Now you have %d tasks in the list.\\n\", numberOfRecords);"},{"lineNumber":133,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":136,"author":{"gitId":"NgManSing"},"content":"    private static String[] getTaskNameAndDate(String[] detailFragments, String taskType) {"},{"lineNumber":137,"author":{"gitId":"NgManSing"},"content":"        int slashElementIndex;"},{"lineNumber":138,"author":{"gitId":"NgManSing"},"content":"        boolean hasSlashElement \u003d false;"},{"lineNumber":139,"author":{"gitId":"NgManSing"},"content":"        boolean isTypeMatch \u003d false;"},{"lineNumber":140,"author":{"gitId":"NgManSing"},"content":"        for (slashElementIndex \u003d 0; slashElementIndex \u003c detailFragments.length - 1; slashElementIndex++) {"},{"lineNumber":141,"author":{"gitId":"NgManSing"},"content":"            if (detailFragments[slashElementIndex].charAt(0) \u003d\u003d \u0027/\u0027) {"},{"lineNumber":142,"author":{"gitId":"NgManSing"},"content":"                hasSlashElement \u003d true;"},{"lineNumber":143,"author":{"gitId":"NgManSing"},"content":"                break;"},{"lineNumber":144,"author":{"gitId":"NgManSing"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"NgManSing"},"content":"        if (!hasSlashElement) {"},{"lineNumber":147,"author":{"gitId":"NgManSing"},"content":"            System.out.println(\"Invalid input! (No date/time provided)\");"},{"lineNumber":148,"author":{"gitId":"NgManSing"},"content":"            return null;"},{"lineNumber":149,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":151,"author":{"gitId":"NgManSing"},"content":"        switch (taskType) {"},{"lineNumber":152,"author":{"gitId":"NgManSing"},"content":"        case Deadline.TASK_TYPE:"},{"lineNumber":153,"author":{"gitId":"NgManSing"},"content":"            if (detailFragments[slashElementIndex].substring(1).equals(\"by\")) {"},{"lineNumber":154,"author":{"gitId":"NgManSing"},"content":"                isTypeMatch \u003d true;"},{"lineNumber":155,"author":{"gitId":"NgManSing"},"content":"            }"},{"lineNumber":156,"author":{"gitId":"NgManSing"},"content":"            break;"},{"lineNumber":157,"author":{"gitId":"NgManSing"},"content":"        case Event.TASK_TYPE:"},{"lineNumber":158,"author":{"gitId":"NgManSing"},"content":"            if (detailFragments[slashElementIndex].substring(1).equals(\"at\")) {"},{"lineNumber":159,"author":{"gitId":"NgManSing"},"content":"                isTypeMatch \u003d true;"},{"lineNumber":160,"author":{"gitId":"NgManSing"},"content":"            }"},{"lineNumber":161,"author":{"gitId":"NgManSing"},"content":"            break;"},{"lineNumber":162,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"NgManSing"},"content":"        if (!isTypeMatch) {"},{"lineNumber":164,"author":{"gitId":"NgManSing"},"content":"            System.out.println(\"Invalid input! (keywords not matching)\");"},{"lineNumber":165,"author":{"gitId":"NgManSing"},"content":"            return null;"},{"lineNumber":166,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":168,"author":{"gitId":"NgManSing"},"content":"        StringBuilder taskName \u003d new StringBuilder();"},{"lineNumber":169,"author":{"gitId":"NgManSing"},"content":"        StringBuilder dueDay \u003d new StringBuilder();"},{"lineNumber":170,"author":{"gitId":"NgManSing"},"content":"        taskName.append(detailFragments[0]);"},{"lineNumber":171,"author":{"gitId":"NgManSing"},"content":"        for (int i \u003d 1; i \u003c slashElementIndex; i++) {"},{"lineNumber":172,"author":{"gitId":"NgManSing"},"content":"            taskName.append(\" \").append(detailFragments[i]);"},{"lineNumber":173,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"NgManSing"},"content":"        dueDay.append(detailFragments[slashElementIndex + 1]);"},{"lineNumber":175,"author":{"gitId":"NgManSing"},"content":"        for (int i \u003d slashElementIndex + 2; i \u003c detailFragments.length; i++) {"},{"lineNumber":176,"author":{"gitId":"NgManSing"},"content":"            dueDay.append(\" \").append(detailFragments[i]);"},{"lineNumber":177,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":178,"author":{"gitId":"NgManSing"},"content":"        return new String[]{taskName.toString(), dueDay.toString()};"},{"lineNumber":179,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":181,"author":{"gitId":"NgManSing"},"content":"    private static void showList() {"},{"lineNumber":182,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"Here is your task List:\");"},{"lineNumber":183,"author":{"gitId":"NgManSing"},"content":"        for (int i \u003d 0; i \u003c records.size(); i++) {"},{"lineNumber":184,"author":{"gitId":"NgManSing"},"content":"            System.out.println((i + 1) + \". \" + records.get(i));"},{"lineNumber":185,"author":{"gitId":"NgManSing"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":188,"author":{"gitId":"NgManSing"},"content":"    private static void quitProgram() {"},{"lineNumber":189,"author":{"gitId":"NgManSing"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"NgManSing":187,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgManSing"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":3,"author":{"gitId":"NgManSing"},"content":"    public static final String TASK_TYPE \u003d \"E\";"},{"lineNumber":4,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":5,"author":{"gitId":"NgManSing"},"content":"    private String schedule;"},{"lineNumber":6,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":7,"author":{"gitId":"NgManSing"},"content":"    public Event(String taskName, String schedule) {"},{"lineNumber":8,"author":{"gitId":"NgManSing"},"content":"        super(taskName);"},{"lineNumber":9,"author":{"gitId":"NgManSing"},"content":"        this.schedule \u003d schedule;"},{"lineNumber":10,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":12,"author":{"gitId":"NgManSing"},"content":"    public String getSchedule() {"},{"lineNumber":13,"author":{"gitId":"NgManSing"},"content":"        return schedule;"},{"lineNumber":14,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":16,"author":{"gitId":"NgManSing"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"NgManSing"},"content":"    public String getTaskType() {"},{"lineNumber":18,"author":{"gitId":"NgManSing"},"content":"        return TASK_TYPE;"},{"lineNumber":19,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":21,"author":{"gitId":"NgManSing"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"NgManSing"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"NgManSing"},"content":"        return \"[\" + TASK_TYPE + \"]\" + super.toString() + \" (at: \" + schedule + \")\";"},{"lineNumber":24,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"NgManSing"},"content":"}"}],"authorContributionMap":{"NgManSing":25}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgManSing"},"content":"abstract public class Task {"},{"lineNumber":2,"author":{"gitId":"NgManSing"},"content":"    private final String taskName;"},{"lineNumber":3,"author":{"gitId":"NgManSing"},"content":"    private boolean isDone;"},{"lineNumber":4,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":5,"author":{"gitId":"NgManSing"},"content":"    public Task(String taskName) {"},{"lineNumber":6,"author":{"gitId":"NgManSing"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":7,"author":{"gitId":"NgManSing"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":10,"author":{"gitId":"NgManSing"},"content":"    public void setAsDone() {"},{"lineNumber":11,"author":{"gitId":"NgManSing"},"content":"        isDone \u003d true;"},{"lineNumber":12,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":14,"author":{"gitId":"NgManSing"},"content":"    public boolean isDone() {"},{"lineNumber":15,"author":{"gitId":"NgManSing"},"content":"        return isDone;"},{"lineNumber":16,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":18,"author":{"gitId":"NgManSing"},"content":"    public String getTaskName() {"},{"lineNumber":19,"author":{"gitId":"NgManSing"},"content":"        return taskName;"},{"lineNumber":20,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":22,"author":{"gitId":"NgManSing"},"content":"    abstract public String getTaskType();"},{"lineNumber":23,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":24,"author":{"gitId":"NgManSing"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"NgManSing"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"NgManSing"},"content":"        String mark \u003d isDone ? \"[X] \" : \"[ ] \";"},{"lineNumber":27,"author":{"gitId":"NgManSing"},"content":"        return mark + taskName;"},{"lineNumber":28,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"NgManSing"},"content":"}"}],"authorContributionMap":{"NgManSing":29}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgManSing"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":3,"author":{"gitId":"NgManSing"},"content":"    public static final String TASK_TYPE \u003d \"T\";"},{"lineNumber":4,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":5,"author":{"gitId":"NgManSing"},"content":"    public Todo(String taskName) {"},{"lineNumber":6,"author":{"gitId":"NgManSing"},"content":"        super(taskName);"},{"lineNumber":7,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":9,"author":{"gitId":"NgManSing"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"NgManSing"},"content":"    public String getTaskType() {"},{"lineNumber":11,"author":{"gitId":"NgManSing"},"content":"        return TASK_TYPE;"},{"lineNumber":12,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"NgManSing"},"content":""},{"lineNumber":14,"author":{"gitId":"NgManSing"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"NgManSing"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"NgManSing"},"content":"        return \"[\" + TASK_TYPE + \"]\" + super.toString();"},{"lineNumber":17,"author":{"gitId":"NgManSing"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"NgManSing"},"content":"}"}],"authorContributionMap":{"NgManSing":18}}]
