[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"E | 0 | NUS blood donation event | 2020-05-01"}],"authorContributionMap":{"zikunz":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"# Duke User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"## Introduction"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"Duke is a personal assistant chatbox which helps you keep track of various to-do\u0027s, deadlines and events. The name Duke"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"chosen as a placeholder name, in honor of Duke, the Java Mascot."},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"## Features"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"#### Adding a To-do\u0027s: `todo`"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"Adds a to-do\u0027s to the task list.  "},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"**Format**: `todo DESCRIPTION`    "},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"Example:"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"```$xslt"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"todo attend CS2113T Lecture"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"```"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":"Expected outcome:"},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"```$xslt"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"    ____________________________________________________________"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"     Got it. I\u0027ve added this task:"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"       [T][✘] attend CS2113T Lecture"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"     Now you have 1 task in the list."},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    ____________________________________________________________"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"```"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"#### Adding an Event: `event`"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"Adds an event to the task list. Note that the format for `TIME` should take the form of `YYYY-MM-DD`"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"**Format**: `event DESCRIPTION /at TIME`      "},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"Example:"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"```$xslt"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"event NUS blood donation event /at 2021-05-01"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"```"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"Expected outcome:"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"```$xslt"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"    ____________________________________________________________"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"     Got it. I\u0027ve added this task:"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"       [E][✘] NUS blood donation event (at: 2021-05-01)"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"     Now you have 2 tasks in the list."},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"    ____________________________________________________________"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"```"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":"#### Adding a Deadline: `deadline`"},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"Adds a deadline to the task list. Note that the format for `TIME` should take the form of `YYYY-MM-DD`"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":"**Format**: `deadline DESCRIPTION /by TIME`"},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":"Example:"},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"```$xslt"},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"deadline CG1112 design report /by 2021-03-07"},{"lineNumber":51,"author":{"gitId":"zikunz"},"content":"```"},{"lineNumber":52,"author":{"gitId":"zikunz"},"content":"Expected outcome:"},{"lineNumber":53,"author":{"gitId":"zikunz"},"content":"```$xslt"},{"lineNumber":54,"author":{"gitId":"zikunz"},"content":"    ____________________________________________________________"},{"lineNumber":55,"author":{"gitId":"zikunz"},"content":"     Got it. I\u0027ve added this task:"},{"lineNumber":56,"author":{"gitId":"zikunz"},"content":"       [D][✘] CG1112 design report (by: 2021-03-07)"},{"lineNumber":57,"author":{"gitId":"zikunz"},"content":"     Now you have 3 tasks in the list."},{"lineNumber":58,"author":{"gitId":"zikunz"},"content":"    ____________________________________________________________"},{"lineNumber":59,"author":{"gitId":"zikunz"},"content":"```"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"zikunz"},"content":"#### Listing all Task(s): `list`"},{"lineNumber":62,"author":{"gitId":"zikunz"},"content":"Prints all task(s) in the list.  "},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"zikunz"},"content":"**Format**: `list`"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"zikunz"},"content":"Example:"},{"lineNumber":67,"author":{"gitId":"zikunz"},"content":"```$xslt"},{"lineNumber":68,"author":{"gitId":"zikunz"},"content":"list"},{"lineNumber":69,"author":{"gitId":"zikunz"},"content":"```"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":71,"author":{"gitId":"zikunz"},"content":"```$xslt"},{"lineNumber":72,"author":{"gitId":"zikunz"},"content":"    ____________________________________________________________"},{"lineNumber":73,"author":{"gitId":"zikunz"},"content":"     Here are the tasks in your list:"},{"lineNumber":74,"author":{"gitId":"zikunz"},"content":"     1.[T][✘] attend CS2113T Lecture"},{"lineNumber":75,"author":{"gitId":"zikunz"},"content":"     2.[E][✘] NUS blood donation event (at: 2021-05-01)"},{"lineNumber":76,"author":{"gitId":"zikunz"},"content":"     3.[D][✘] CG1112 design report (by: 2021-03-07)"},{"lineNumber":77,"author":{"gitId":"zikunz"},"content":"    ____________________________________________________________"},{"lineNumber":78,"author":{"gitId":"zikunz"},"content":"```"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"zikunz"},"content":"#### Finding Task(s): `find`"},{"lineNumber":81,"author":{"gitId":"zikunz"},"content":"Prints all tasks containing the keyword given by the user. "},{"lineNumber":82,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":83,"author":{"gitId":"zikunz"},"content":"**Format**:`find KEYWORD`  "},{"lineNumber":84,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":85,"author":{"gitId":"zikunz"},"content":"Example:"},{"lineNumber":86,"author":{"gitId":"zikunz"},"content":"```$xslt"},{"lineNumber":87,"author":{"gitId":"zikunz"},"content":"find CS2113T"},{"lineNumber":88,"author":{"gitId":"zikunz"},"content":"```"},{"lineNumber":89,"author":{"gitId":"zikunz"},"content":"Expected outcome:"},{"lineNumber":90,"author":{"gitId":"zikunz"},"content":"```$xslt"},{"lineNumber":91,"author":{"gitId":"zikunz"},"content":"    ____________________________________________________________"},{"lineNumber":92,"author":{"gitId":"zikunz"},"content":"     Here are the matching task(s) in your list:"},{"lineNumber":93,"author":{"gitId":"zikunz"},"content":"     1.[T][✘] attend CS2113T Lecture"},{"lineNumber":94,"author":{"gitId":"zikunz"},"content":"    ____________________________________________________________"},{"lineNumber":95,"author":{"gitId":"zikunz"},"content":"```"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"zikunz"},"content":"#### Deleting a Task: `delete`"},{"lineNumber":98,"author":{"gitId":"zikunz"},"content":"Deletes the task with the given index. Note that the index given should be valid. "},{"lineNumber":99,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":100,"author":{"gitId":"zikunz"},"content":"**Format**:`delete INDEX`"},{"lineNumber":101,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":102,"author":{"gitId":"zikunz"},"content":"Example:"},{"lineNumber":103,"author":{"gitId":"zikunz"},"content":"```$xslt"},{"lineNumber":104,"author":{"gitId":"zikunz"},"content":"delete 1"},{"lineNumber":105,"author":{"gitId":"zikunz"},"content":"```"},{"lineNumber":106,"author":{"gitId":"zikunz"},"content":"Expected outcome:"},{"lineNumber":107,"author":{"gitId":"zikunz"},"content":"```$xslt"},{"lineNumber":108,"author":{"gitId":"zikunz"},"content":"    ____________________________________________________________"},{"lineNumber":109,"author":{"gitId":"zikunz"},"content":"     Noted. I\u0027ve removed this task:"},{"lineNumber":110,"author":{"gitId":"zikunz"},"content":"       [T][✘] attend CS2113T Lecture"},{"lineNumber":111,"author":{"gitId":"zikunz"},"content":"     Now you have 2 tasks in the list."},{"lineNumber":112,"author":{"gitId":"zikunz"},"content":"    ____________________________________________________________"},{"lineNumber":113,"author":{"gitId":"zikunz"},"content":"```"},{"lineNumber":114,"author":{"gitId":"zikunz"},"content":"#### Mark a Task as Done: `done`"},{"lineNumber":115,"author":{"gitId":"zikunz"},"content":"Marks a task with the given index as done. Note that the index given should be valid."},{"lineNumber":116,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":117,"author":{"gitId":"zikunz"},"content":"**Format**:`done INDEX`  "},{"lineNumber":118,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":119,"author":{"gitId":"zikunz"},"content":"Example:"},{"lineNumber":120,"author":{"gitId":"zikunz"},"content":"```$xslt"},{"lineNumber":121,"author":{"gitId":"zikunz"},"content":"done 1"},{"lineNumber":122,"author":{"gitId":"zikunz"},"content":"```"},{"lineNumber":123,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":124,"author":{"gitId":"zikunz"},"content":"```$xslt"},{"lineNumber":125,"author":{"gitId":"zikunz"},"content":"    ____________________________________________________________"},{"lineNumber":126,"author":{"gitId":"zikunz"},"content":"     Nice! I\u0027ve marked this task as done:"},{"lineNumber":127,"author":{"gitId":"zikunz"},"content":"       [E][✓] NUS blood donation event (at: 2021-05-01)"},{"lineNumber":128,"author":{"gitId":"zikunz"},"content":"    ____________________________________________________________"},{"lineNumber":129,"author":{"gitId":"zikunz"},"content":"```"},{"lineNumber":130,"author":{"gitId":"zikunz"},"content":"#### Find Task(s) with a Date: `date`"},{"lineNumber":131,"author":{"gitId":"zikunz"},"content":"Prints all tasks occurring on a specified date."},{"lineNumber":132,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":133,"author":{"gitId":"zikunz"},"content":"**Format**:`date DATE`  "},{"lineNumber":134,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":135,"author":{"gitId":"zikunz"},"content":"Example:"},{"lineNumber":136,"author":{"gitId":"zikunz"},"content":"```$xslt"},{"lineNumber":137,"author":{"gitId":"zikunz"},"content":"date 2021-05-01"},{"lineNumber":138,"author":{"gitId":"zikunz"},"content":"```"},{"lineNumber":139,"author":{"gitId":"zikunz"},"content":"Expected outcome:"},{"lineNumber":140,"author":{"gitId":"zikunz"},"content":"```$xslt"},{"lineNumber":141,"author":{"gitId":"zikunz"},"content":"    ____________________________________________________________"},{"lineNumber":142,"author":{"gitId":"zikunz"},"content":"     Here are the task(s) occurring on the same date in your list:"},{"lineNumber":143,"author":{"gitId":"zikunz"},"content":"     1.[E][✘] NUS blood donation event (at: 2021-05-01)"},{"lineNumber":144,"author":{"gitId":"zikunz"},"content":"    ____________________________________________________________"},{"lineNumber":145,"author":{"gitId":"zikunz"},"content":"```"},{"lineNumber":146,"author":{"gitId":"zikunz"},"content":"#### Exit the Application: `bye`"},{"lineNumber":147,"author":{"gitId":"zikunz"},"content":"Exits the application.  "},{"lineNumber":148,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":149,"author":{"gitId":"zikunz"},"content":"**Format**: `bye`"},{"lineNumber":150,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":151,"author":{"gitId":"zikunz"},"content":"Example:"},{"lineNumber":152,"author":{"gitId":"zikunz"},"content":"```$xslt"},{"lineNumber":153,"author":{"gitId":"zikunz"},"content":"bye"},{"lineNumber":154,"author":{"gitId":"zikunz"},"content":"```"},{"lineNumber":155,"author":{"gitId":"zikunz"},"content":"Expected outcome:"},{"lineNumber":156,"author":{"gitId":"zikunz"},"content":"```$xslt"},{"lineNumber":157,"author":{"gitId":"zikunz"},"content":"    ____________________________________________________________"},{"lineNumber":158,"author":{"gitId":"zikunz"},"content":"     Bye. Hope to see you again soon!"},{"lineNumber":159,"author":{"gitId":"zikunz"},"content":"    ____________________________________________________________"},{"lineNumber":160,"author":{"gitId":"zikunz"},"content":"```"},{"lineNumber":161,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":162,"author":{"gitId":"zikunz"},"content":"## Command Summary"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"zikunz"},"content":"Action | Format \u0026 Example"},{"lineNumber":165,"author":{"gitId":"zikunz"},"content":"--------------------------------|--------------------------------------------------------------"},{"lineNumber":166,"author":{"gitId":"zikunz"},"content":"Add Todo | `todo DESCRIPTION`  e.g.`todo CG1112 final project`"},{"lineNumber":167,"author":{"gitId":"zikunz"},"content":"Add Event | `event DESCRIPTION /at TIME`   e.g.`event CS2113T team meeting /at 2021-03-07 14:00`"},{"lineNumber":168,"author":{"gitId":"zikunz"},"content":"Add Deadline | `deadline DESCRIPTION /by TIME`   e.g.`deadline submit CS2113T iP /by 2021-03-05 23:59`"},{"lineNumber":169,"author":{"gitId":"zikunz"},"content":"List Task(s) | `list`"},{"lineNumber":170,"author":{"gitId":"zikunz"},"content":"Find Task(s) | `find KEYWORD`   e.g.`find EE`"},{"lineNumber":171,"author":{"gitId":"zikunz"},"content":"Delete Task | `delete INDEX`   e.g.`delete 2`"},{"lineNumber":172,"author":{"gitId":"zikunz"},"content":"Done Task | `done INDEX`   e.g.`done 3`"},{"lineNumber":173,"author":{"gitId":"zikunz"},"content":"Find Task on Date | `date DATE`   e.g.`date 2021-03-10`"},{"lineNumber":174,"author":{"gitId":"zikunz"},"content":"Exit | `bye`"}],"authorContributionMap":{"zikunz":161,"-":13}},{"path":"src/main/java/Duke/Command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Command;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Message;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.SpaceAndLine;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.TaskType;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"import Duke.Storage.Storage;"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"import Duke.Task.Deadline;"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"import Duke.Task.Event;"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"import Duke.Task.Task;"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"import Duke.Task.Todo;"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"import Duke.Ui.Ui;"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"import java.io.IOException;"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":" * AddCommand helps the user adds a task."},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"public class AddCommand extends Command {"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"    private String taskType;"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    private String content;"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"    public AddCommand(String taskType, String content) {"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"        this.content \u003d content;"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"    public boolean shouldExit() {"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"        return false;"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"     * Adds a task of the correct type, print it out to the user and store it in Duke.txt."},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"     * @param tasks the list of tasks"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"     * @param ui do outputs"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"     * @param storage store the data"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"     * @param matchedTasks the list of matched tasks"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"     * @param sameDateTasks the list of tasks occurring on the same specified date"},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":"     * @throws DukeException the exceptions which can happen during add command execution"},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, TaskList matchedTasks, TaskList sameDateTasks)"},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":"            throws DukeException {"},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":"        Task task;"},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"        switch (taskType) {"},{"lineNumber":51,"author":{"gitId":"zikunz"},"content":"        case TaskType.TODO_TYPE:"},{"lineNumber":52,"author":{"gitId":"zikunz"},"content":"            task \u003d new Todo(content);"},{"lineNumber":53,"author":{"gitId":"zikunz"},"content":"            break;"},{"lineNumber":54,"author":{"gitId":"zikunz"},"content":"        case TaskType.DEADLINE_TYPE:"},{"lineNumber":55,"author":{"gitId":"zikunz"},"content":"            String[] deadlineComponents \u003d content.split(\" /by \");"},{"lineNumber":56,"author":{"gitId":"zikunz"},"content":"            task \u003d new Deadline(deadlineComponents[0], deadlineComponents[1]);"},{"lineNumber":57,"author":{"gitId":"zikunz"},"content":"            break;"},{"lineNumber":58,"author":{"gitId":"zikunz"},"content":"        case TaskType.EVENT_TYPE:"},{"lineNumber":59,"author":{"gitId":"zikunz"},"content":"            String[] eventComponents \u003d content.split(\" /at \");"},{"lineNumber":60,"author":{"gitId":"zikunz"},"content":"            task \u003d new Event(eventComponents[0], eventComponents[1]);"},{"lineNumber":61,"author":{"gitId":"zikunz"},"content":"            break;"},{"lineNumber":62,"author":{"gitId":"zikunz"},"content":"        default:"},{"lineNumber":63,"author":{"gitId":"zikunz"},"content":"            throw new DukeException(Message.WRONG_COMMAND_ERROR_MESSAGE);"},{"lineNumber":64,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"zikunz"},"content":"        tasks.addTask(task);"},{"lineNumber":66,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":67,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":68,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(Message.ADD_TASK_MESSAGE);"},{"lineNumber":69,"author":{"gitId":"zikunz"},"content":"        System.out.println(SpaceAndLine.LONG_SPACE + task);"},{"lineNumber":70,"author":{"gitId":"zikunz"},"content":"        ui.printNumberOfTasksMessage(tasks.getSize());"},{"lineNumber":71,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":72,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":73,"author":{"gitId":"zikunz"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"zikunz"},"content":"            storage.writeToFile(tasks);"},{"lineNumber":75,"author":{"gitId":"zikunz"},"content":"        } catch (IOException e) {"},{"lineNumber":76,"author":{"gitId":"zikunz"},"content":"            throw new DukeException(Message.FILE_NOT_FOUND_ERROR_MESSAGE);"},{"lineNumber":77,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":79}},{"path":"src/main/java/Duke/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Command;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.Storage.Storage;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import Duke.Ui.Ui;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":" * Command can create commands to be executed."},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"public abstract class Command {"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"    public abstract boolean shouldExit();"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":"     * Executes the command based on the specific command type."},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"     * @param tasks the list of tasks"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"     * @param ui do outputs"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"     * @param storage store the data"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"     * @param matchedTasks the list of matched tasks"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"     * @param sameDateTasks the list of tasks occurring on the same specified date"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"     * @throws DukeException the exceptions which can happen during command execution"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage, TaskList matchedTasks, TaskList sameDateTasks)"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"            throws DukeException;"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":28}},{"path":"src/main/java/Duke/Command/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Command;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Message;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.SpaceAndLine;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.Storage.Storage;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"import Duke.Ui.Ui;"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"import java.time.LocalDate;"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":" * DateCommand helps the user finds a task which occur on the date specified."},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"public class DateCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    private final String dateString;"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":"    private LocalDate date;"},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"    public DateCommand(String dateString) {"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"        this.dateString \u003d dateString;"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"    public boolean shouldExit() {"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"        return false;"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"     * Finds a task which occur on the date specified and print it out to the user"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"     * @param tasks the list of tasks"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"     * @param ui do outputs"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"     * @param storage store the data"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"     * @param matchedTasks the list of matched tasks"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"     * @param sameDateTasks the list of tasks occurring on the same specified date"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"     * @throws DukeException the exceptions which can happen during add command execution"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, TaskList matchedTasks, TaskList sameDateTasks)"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"            throws DukeException {"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SHORT_SPACE + Message.SHOW_SAME_DATE_TASKS_MESSAGE);"},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"        date \u003d LocalDate.parse(dateString);"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"        tasks.findDate(date);"},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":"        ui.printSameDateTasks(sameDateTasks);"},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":50}},{"path":"src/main/java/Duke/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Command;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Message;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.SpaceAndLine;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.Storage.Storage;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"import Duke.Ui.Ui;"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":" * DeleteCommand helps the user delete a task."},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    private int index;"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    public DeleteCommand(int index) {"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"        this.index \u003d index;"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    public boolean shouldExit() {"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"        return false;"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"     /**"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"     * Deletes a task and updates Duke.txt."},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"     * @param tasks the list of tasks"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"     * @param ui do outputs"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"     * @param storage store the data"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"     * @param matchedTasks the list of matched tasks"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"     * @param sameDateTasks the list of tasks occurring on the same specified date"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"     * @throws DukeException the exceptions which can happen during add command execution"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, TaskList matchedTasks, TaskList sameDateTasks)"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"            throws DukeException {"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(Message.REMOVE_TASK_MESSAGE);"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"        System.out.println(SpaceAndLine.LONG_SPACE + tasks.getTask(index));"},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"        tasks.deleteTask(index);"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":"        ui.printNumberOfTasksMessage(tasks.getSize());"},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"            storage.writeToFile(tasks);"},{"lineNumber":51,"author":{"gitId":"zikunz"},"content":"        } catch (IOException e) {"},{"lineNumber":52,"author":{"gitId":"zikunz"},"content":"            throw new DukeException(Message.FILE_NOT_FOUND_ERROR_MESSAGE);"},{"lineNumber":53,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":55}},{"path":"src/main/java/Duke/Command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Command;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Message;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.SpaceAndLine;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.Storage.Storage;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"import Duke.Ui.Ui;"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":" * DoneCommand helps the user marks a specific task as done."},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"public class DoneCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    private int index;"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    public DoneCommand(int index) {"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"        this.index \u003d index;"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    public boolean shouldExit() {"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"        return false;"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"     * Marks a specific task as done and updates Duke.txt."},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"     * @param tasks the list of tasks"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"     * @param ui outputs to be printed"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"     * @param storage store data into Duke.txt"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"     * @throws DukeException the exceptions which can happen"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, TaskList matchedTasks, TaskList sameDateTasks)"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"            throws DukeException {"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"        tasks.setTaskToBeDone(index);"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(Message.MARK_AS_DONE_MESSAGE);"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"        System.out.println(SpaceAndLine.LONG_SPACE + tasks.getTask(index));"},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":"            storage.writeToFile(tasks);"},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":"        } catch (IOException e) {"},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":"            throw new DukeException(Message.FILE_NOT_FOUND_ERROR_MESSAGE);"},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":51}},{"path":"src/main/java/Duke/Command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Command;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Storage.Storage;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.Ui.Ui;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":" * ExitCommand helps the user exit the program."},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"public class ExitCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"    public boolean shouldExit() {"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"        return true;"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"     * Changes isExit to be true, prints the exit message and exit the program."},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"     * @param tasks the list of tasks"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"     * @param ui outputs to be printed"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"     * @param storage store data into Duke.txt"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"     * @throws DukeException the exceptions which can happen"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, TaskList matchedTasks, TaskList sameDateTasks)"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"            throws DukeException {"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"        // Do nothing"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":31}},{"path":"src/main/java/Duke/Command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Command;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Message;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.SpaceAndLine;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.Storage.Storage;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"import Duke.Ui.Ui;"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":" * FindCommand helps the user find task(s) containing the keyword."},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"public class FindCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"    private final String keyword;"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"    public boolean shouldExit() {"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"        return false;"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"     * Finds task(s) containing the keyword."},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"     * @param tasks the list of tasks"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"     * @param ui outputs to be printed"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"     * @param storage store data into Duke.txt"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"     * @throws DukeException the exceptions which can happen"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, TaskList matchedTasks, TaskList sameDateTasks)"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"            throws DukeException {"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SHORT_SPACE + Message.SHOW_MATCHING_KEYWORD_TASKS_MESSAGE);"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"        tasks.findKeyword(keyword);"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"        ui.printMatchedTasks(matchedTasks);"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":44}},{"path":"src/main/java/Duke/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Command;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Message;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.SpaceAndLine;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.Storage.Storage;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"import Duke.Ui.Ui;"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":" * ListCommand helps the user print the task(s) in the list."},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"public class ListCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    public boolean shouldExit() {"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":"        return false;"},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"     * Prints the list of tasks."},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"     * @param tasks the list of tasks"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"     * @param ui outputs to be printed"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"     * @param storage store data into Duke.txt"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"     * @throws DukeException the exceptions which can happen"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, TaskList matchedTasks, TaskList sameDateTasks)"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"            throws DukeException {"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"        switch (tasks.getSize()) {"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"        case 0:"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"            System.out.println(Message.EMPTY_LIST_MESSAGE);"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"            break;"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"        case 1:"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"            System.out.println(Message.ONE_TASK_IN_LIST_MESSAGE);"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"            break;"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"        default:"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"            System.out.println(Message.MORE_THAN_ONE_TASK_IN_LIST_MESSAGE);"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"        ui.printTasks(tasks);"},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":45}},{"path":"src/main/java/Duke/Constant/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Constant;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"public class Message {"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"    public static final String logo \u003d \"     ____        _        \\n\" +"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"            \"    |  _ \\\\ _   _| | _____ \\n\" +"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"            \"    | | | | | | | |/ / _ \\\\\\n\" +"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"            \"    | |_| | |_| |   \u003c  __/\\n\" +"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"            \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"    public static final String GREET_MESSAGE \u003d logo + \"\\n\" + SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.LONG_SPACE +"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"            \"Hello! I\u0027m Duke\\n\" + SpaceAndLine.LONG_SPACE + \"What can I do for you?\\n\" +"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"    public static final String EXIT_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"            \"     Bye. Hope to see you again soon!\\n\" +"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SEPARATION_LINE;"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    public static final String EMPTY_LIST_MESSAGE \u003d SpaceAndLine.SHORT_SPACE + \"You do not have any task to do.\";"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"    public static final String MARK_AS_DONE_MESSAGE \u003d SpaceAndLine.SHORT_SPACE +"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"            \"Nice! I\u0027ve marked this task as done:\";"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"    public static final String ONE_TASK_IN_LIST_MESSAGE \u003d SpaceAndLine.SHORT_SPACE +"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"            \"Here is the task in your list:\";"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    public static final String MORE_THAN_ONE_TASK_IN_LIST_MESSAGE \u003d SpaceAndLine.SHORT_SPACE +"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"            \"Here are the tasks in your list:\";"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"    public static final String ADD_TASK_MESSAGE \u003d SpaceAndLine.SHORT_SPACE + \"Got it. I\u0027ve added this task:\";"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"    public static final String REMOVE_TASK_MESSAGE \u003d SpaceAndLine.SHORT_SPACE + \"Noted. I\u0027ve removed this task:\";"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"    public static final String SHOW_MATCHING_KEYWORD_TASKS_MESSAGE \u003d \"Here are the matching task(s) in your list:\";"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"    public static final String SHOW_SAME_DATE_TASKS_MESSAGE \u003d"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"            \"Here are the task(s) occurring on the same date in your list:\";"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"    public static final String WRONG_COMMAND_ERROR_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SHORT_SPACE +"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"            \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"    public static final String MISSING_TODO_CONTENT_ERROR_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SHORT_SPACE + \"☹ OOPS!!! The description of a todo cannot be empty.\\n\" +"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"    public static final String MISSING_DEADLINE_CONTENT_ERROR_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SHORT_SPACE + \"☹ OOPS!!! The description of a deadline cannot be empty.\\n\" +"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"    public static final String MISSING_EVENT_CONTENT_ERROR_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SHORT_SPACE + \"☹ OOPS!!! The description of a event cannot be empty.\\n\" +"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":"    public static final String MISSING_DELETE_INDEX_ERROR_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SHORT_SPACE + \"☹ OOPS!!! The index of the deletion cannot be empty.\\n\" +"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":"    public static final String WRONG_DELETE_INDEX_ERROR_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SHORT_SPACE + \"☹ OOPS!!! The index of the deletion is out of bound.\\n\" +"},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"    public static final String MISSING_MARK_AS_DONE_INDEX_ERROR_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SHORT_SPACE + \"☹ OOPS!!! The index of the task to be marked as done cannot be empty.\\n\" +"},{"lineNumber":51,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":52,"author":{"gitId":"zikunz"},"content":"    public static final String WRONG_MARK_AS_DONE_INDEX_ERROR_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":53,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SHORT_SPACE + \"☹ OOPS!!! The index of the task to be marked as done is out of bound.\\n\" +"},{"lineNumber":54,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":55,"author":{"gitId":"zikunz"},"content":"    public static final String FILE_NOT_FOUND_ERROR_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":56,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SHORT_SPACE + \"☹ OOPS!!! I cannot find the file.\\n\" +"},{"lineNumber":57,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":58,"author":{"gitId":"zikunz"},"content":"    public static final String MISSING_KEYWORD_ERROR_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":59,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SHORT_SPACE + \"☹ OOPS!!! The keyword of a find command cannot be empty.\\n\" +"},{"lineNumber":60,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":61,"author":{"gitId":"zikunz"},"content":"    public static final String MISSING_DATE_ERROR_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":62,"author":{"gitId":"zikunz"},"content":"    SpaceAndLine.SHORT_SPACE + \"☹ OOPS!!! The date of a date command cannot be empty.\\n\" +"},{"lineNumber":63,"author":{"gitId":"zikunz"},"content":"    SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":64,"author":{"gitId":"zikunz"},"content":"    public static final String WRONG_DATE_FORMAT_ERROR_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":65,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SHORT_SPACE + \"☹ OOPS!!! The date format is wrong.\\n\" + SpaceAndLine.SHORT_SPACE +"},{"lineNumber":66,"author":{"gitId":"zikunz"},"content":"            \"Example: 2020-03-05\\n\" + SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":67,"author":{"gitId":"zikunz"},"content":"    public static final String NON_EXISTING_LETTER_WRONG_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":68,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SHORT_SPACE + \"☹ OOPS!!! Something wrong happened!.\\n\" + SpaceAndLine.SHORT_SPACE +"},{"lineNumber":69,"author":{"gitId":"zikunz"},"content":"            \"Example: 2020-03-05\\n\" + SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":70,"author":{"gitId":"zikunz"},"content":"    public static final String LOADING_ERROR_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":71,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SHORT_SPACE + \"☹ OOPS!!! Unable to load any file!.\\n\" + SpaceAndLine.SHORT_SPACE +"},{"lineNumber":72,"author":{"gitId":"zikunz"},"content":"            \"Example: 2020-03-05\\n\" + SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":73,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":73}},{"path":"src/main/java/Duke/Constant/Number.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Constant;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"public class Number {"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"    public static String DONE_STATUS \u003d \"1\";"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"    public static String NOT_DONE_STATUS \u003d \"0\";"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"    public static final int TODO_COMMAND_LENGTH \u003d 4;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"    public static final int TODO_COMMAND_LENGTH_ADD_ONE \u003d 5;"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"    public static final int DEADLINE_COMMAND_LENGTH \u003d 8;"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"    public static final int DEADLINE_COMMAND_LENGTH_ADD_ONE \u003d 9;"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"    public static final int EVENT_COMMAND_LENGTH \u003d 5;"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"    public static final int EVENT_COMMAND_LENGTH_ADD_ONE \u003d 6;"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"    public static final int DONE_COMMAND_LENGTH_ADD_ONE \u003d 5;"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"    public static final int DELETE_COMMAND_LENGTH_ADD_ONE \u003d 7;"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"    public static final int FIND_COMMAND_LENGTH_ADD_ONE \u003d 5;"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    public static final int DATE_COMMAND_LENGTH \u003d 4;"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":"    public static final int DATE_COMMAND_LENGTH_ADD_ONE \u003d 5;"},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    public static final int DONE_COMMAND_LENGTH \u003d 4;"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"    public static final int DELETE_COMMAND_LENGTH \u003d 6;"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    public static final int FIND_COMMAND_LENGTH \u003d 4;"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"    public static final int FIRST_DASH_INDEX \u003d 4;"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"    public static final int SECOND_DASH_INDEX \u003d 7;"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    public static final int MINIMUM_DATE_LENGTH \u003d 10;"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":24}},{"path":"src/main/java/Duke/Constant/SpaceAndLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Constant;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"public class SpaceAndLine {"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"    public static final String SHORT_SPACE \u003d \"     \";"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"    public static final String LONG_SPACE \u003d \"       \";"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"    public static final String SEPARATION_LINE \u003d \"    ____________________________________________________________\";"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":7}},{"path":"src/main/java/Duke/Constant/Symbol.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Constant;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"public class Symbol {"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"    public static String NOT_DONE_SYMBOL \u003d \"\\u2718\";"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"    public static String DONE_SYMBOL \u003d \"\\u2713\";"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":6}},{"path":"src/main/java/Duke/Constant/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Constant;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"public class TaskType {"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"    public static final String TODO_TYPE \u003d \"T\";"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"    public static final String DEADLINE_TYPE \u003d \"D\";"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"    public static final String EVENT_TYPE \u003d \"E\";"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":7}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Command.Command;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Message;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.Parser.Parser;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import Duke.Storage.Storage;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"import Duke.Ui.Ui;"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":" * Entry point of Duke application."},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":" * Initializes the application and starts interaction with the user."},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"public class Duke {"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    private static final String folderName \u003d \"data\";"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":"    private static final String fileName \u003d \"Duke.txt\";"},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"    private Storage storage;"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    private TaskList tasks;"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"    private TaskList matchedTasks \u003d new TaskList();"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"    private TaskList sameDateTasks \u003d new TaskList();"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    private Ui ui;"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"    private Parser parser \u003d new Parser();"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"    public Duke(String folderName, String fileName) {"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"        ui \u003d new Ui();"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"        storage \u003d new Storage(folderName, fileName);"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"        } catch (DukeException e) {"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"            ui.printMessage(Message.LOADING_ERROR_MESSAGE);"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"     * Runs the program until termination."},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"    public void run() {"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(Message.GREET_MESSAGE);"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"        boolean shouldExit \u003d false;"},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":"        while (!shouldExit) {"},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"            try {"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"                String userInput \u003d ui.readCommand();"},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":"                Command userCommand \u003d parser.processInput(userInput, tasks);"},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":"                userCommand.execute(tasks, ui, storage, matchedTasks, sameDateTasks);"},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":"                shouldExit \u003d userCommand.shouldExit();"},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"            } catch (DukeException e) {"},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":51,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(Message.EXIT_MESSAGE);"},{"lineNumber":54,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":56,"author":{"gitId":"zikunz"},"content":"    public static void main(String[] args) {"},{"lineNumber":57,"author":{"gitId":"zikunz"},"content":"        new Duke(folderName, fileName).run();"},{"lineNumber":58,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":59}},{"path":"src/main/java/Duke/Exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Exception;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":" * DukeException presents all possible exceptions that can happen."},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"    public DukeException(String message) {"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"        super(message);"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":11}},{"path":"src/main/java/Duke/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Parser;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Command.*;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Message;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Number;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.TaskType;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":" * Parser calls respective command function to process different user inputs."},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"public class Parser {"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":"    private static final String COMMAND_DONE \u003d \"done\";"},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"    private static final String COMMAND_LIST \u003d \"list\";"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"    private static final String COMMAND_FIND \u003d \"find\";"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"    private static final String COMMAND_DATE \u003d \"date\";"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"     * Calls the correct command to process different user inputs."},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"     * @param userInput user input received"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"     * @param tasks tasks in the list"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"     * @throws DukeException includes all exceptions may happen when parsing the input"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"    public Command processInput(String userInput, TaskList tasks) throws DukeException {"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"        String command \u003d userInput.split(\" \")[0];"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"        switch (command) {"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"        case COMMAND_TODO:"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"            String description \u003d userInput.substring(Number.TODO_COMMAND_LENGTH);"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"            description \u003d description.replace(\" \", \"\");"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"            if (description.isEmpty()) {"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"                throw new DukeException(Message.MISSING_TODO_CONTENT_ERROR_MESSAGE);"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":"            return new AddCommand(TaskType.TODO_TYPE, userInput.substring(Number.TODO_COMMAND_LENGTH_ADD_ONE));"},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"        case COMMAND_DEADLINE:"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"            String deadline \u003d userInput.substring((Number.DEADLINE_COMMAND_LENGTH));"},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":"            deadline \u003d deadline.replace(\" \", \"\");"},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":"            if (deadline.isEmpty()) {"},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"                throw new DukeException(Message.MISSING_DEADLINE_CONTENT_ERROR_MESSAGE);"},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":52,"author":{"gitId":"zikunz"},"content":"            return new AddCommand(TaskType.DEADLINE_TYPE, userInput.substring(Number.DEADLINE_COMMAND_LENGTH_ADD_ONE));"},{"lineNumber":53,"author":{"gitId":"zikunz"},"content":"        case COMMAND_EVENT:"},{"lineNumber":54,"author":{"gitId":"zikunz"},"content":"            String event \u003d userInput.substring((Number.EVENT_COMMAND_LENGTH));"},{"lineNumber":55,"author":{"gitId":"zikunz"},"content":"            event \u003d event.replace(\" \", \"\");"},{"lineNumber":56,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":57,"author":{"gitId":"zikunz"},"content":"            if (event.isEmpty()) {"},{"lineNumber":58,"author":{"gitId":"zikunz"},"content":"                throw new DukeException(Message.MISSING_EVENT_CONTENT_ERROR_MESSAGE);"},{"lineNumber":59,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":61,"author":{"gitId":"zikunz"},"content":"            return new AddCommand(TaskType.EVENT_TYPE, userInput.substring(Number.EVENT_COMMAND_LENGTH_ADD_ONE));"},{"lineNumber":62,"author":{"gitId":"zikunz"},"content":"        case COMMAND_DONE:"},{"lineNumber":63,"author":{"gitId":"zikunz"},"content":"            String doneIndex \u003d userInput.substring(Number.DONE_COMMAND_LENGTH);"},{"lineNumber":64,"author":{"gitId":"zikunz"},"content":"            doneIndex \u003d doneIndex.replace(\" \", \"\");"},{"lineNumber":65,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":66,"author":{"gitId":"zikunz"},"content":"            if (doneIndex.isEmpty()) {"},{"lineNumber":67,"author":{"gitId":"zikunz"},"content":"                throw new DukeException(Message.MISSING_MARK_AS_DONE_INDEX_ERROR_MESSAGE);"},{"lineNumber":68,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":70,"author":{"gitId":"zikunz"},"content":"            int doneCommandIndexNumber \u003d Integer.parseInt(doneIndex);"},{"lineNumber":71,"author":{"gitId":"zikunz"},"content":"            if (doneCommandIndexNumber \u003c 0 || doneCommandIndexNumber \u003e tasks.getSize()) {"},{"lineNumber":72,"author":{"gitId":"zikunz"},"content":"                throw new DukeException(Message.WRONG_MARK_AS_DONE_INDEX_ERROR_MESSAGE);"},{"lineNumber":73,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":75,"author":{"gitId":"zikunz"},"content":"            return new DoneCommand(Integer.parseInt(userInput.substring(Number.DONE_COMMAND_LENGTH_ADD_ONE)) - 1);"},{"lineNumber":76,"author":{"gitId":"zikunz"},"content":"        case COMMAND_LIST:"},{"lineNumber":77,"author":{"gitId":"zikunz"},"content":"            return new ListCommand();"},{"lineNumber":78,"author":{"gitId":"zikunz"},"content":"        case COMMAND_DELETE:"},{"lineNumber":79,"author":{"gitId":"zikunz"},"content":"            String deleteIndex \u003d userInput.substring(Number.DELETE_COMMAND_LENGTH);"},{"lineNumber":80,"author":{"gitId":"zikunz"},"content":"            deleteIndex \u003d deleteIndex.replace(\" \", \"\");"},{"lineNumber":81,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":82,"author":{"gitId":"zikunz"},"content":"            if (deleteIndex.isEmpty()) {"},{"lineNumber":83,"author":{"gitId":"zikunz"},"content":"                throw new DukeException(Message.MISSING_DELETE_INDEX_ERROR_MESSAGE);"},{"lineNumber":84,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":86,"author":{"gitId":"zikunz"},"content":"            int deleteCommandIndexNumber \u003d Integer.parseInt(deleteIndex);"},{"lineNumber":87,"author":{"gitId":"zikunz"},"content":"            if (deleteCommandIndexNumber \u003c 0 || deleteCommandIndexNumber \u003e tasks.getSize()) {"},{"lineNumber":88,"author":{"gitId":"zikunz"},"content":"                throw new DukeException(Message.WRONG_DELETE_INDEX_ERROR_MESSAGE);"},{"lineNumber":89,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":91,"author":{"gitId":"zikunz"},"content":"            return new DeleteCommand"},{"lineNumber":92,"author":{"gitId":"zikunz"},"content":"                    (Integer.parseInt(userInput.substring(Number.DELETE_COMMAND_LENGTH_ADD_ONE)) - 1);"},{"lineNumber":93,"author":{"gitId":"zikunz"},"content":"        case COMMAND_FIND:"},{"lineNumber":94,"author":{"gitId":"zikunz"},"content":"            String keyword \u003d userInput.substring(Number.FIND_COMMAND_LENGTH);"},{"lineNumber":95,"author":{"gitId":"zikunz"},"content":"            keyword \u003d keyword.replace(\" \", \"\");"},{"lineNumber":96,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":97,"author":{"gitId":"zikunz"},"content":"            if (keyword.isEmpty()) {"},{"lineNumber":98,"author":{"gitId":"zikunz"},"content":"                throw new DukeException(Message.MISSING_KEYWORD_ERROR_MESSAGE);"},{"lineNumber":99,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":101,"author":{"gitId":"zikunz"},"content":"            return new FindCommand(userInput.substring(Number.FIND_COMMAND_LENGTH_ADD_ONE));"},{"lineNumber":102,"author":{"gitId":"zikunz"},"content":"        case COMMAND_DATE:"},{"lineNumber":103,"author":{"gitId":"zikunz"},"content":"            String date \u003d userInput.substring(Number.DATE_COMMAND_LENGTH);"},{"lineNumber":104,"author":{"gitId":"zikunz"},"content":"            String dateDuplicate \u003d userInput.substring(Number.DATE_COMMAND_LENGTH_ADD_ONE);;"},{"lineNumber":105,"author":{"gitId":"zikunz"},"content":"            date \u003d date.replace(\" \", \"\");"},{"lineNumber":106,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":107,"author":{"gitId":"zikunz"},"content":"            if (date.isEmpty()) {"},{"lineNumber":108,"author":{"gitId":"zikunz"},"content":"                throw new DukeException(Message.MISSING_DATE_ERROR_MESSAGE);"},{"lineNumber":109,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":111,"author":{"gitId":"zikunz"},"content":"            if (dateDuplicate.length() \u003c Number.MINIMUM_DATE_LENGTH ||"},{"lineNumber":112,"author":{"gitId":"zikunz"},"content":"                    dateDuplicate.charAt(Number.FIRST_DASH_INDEX) !\u003d \u0027-\u0027 ||"},{"lineNumber":113,"author":{"gitId":"zikunz"},"content":"                    dateDuplicate.charAt(Number.SECOND_DASH_INDEX) !\u003d \u0027-\u0027) {"},{"lineNumber":114,"author":{"gitId":"zikunz"},"content":"                throw new DukeException(Message.WRONG_DATE_FORMAT_ERROR_MESSAGE);"},{"lineNumber":115,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":116,"author":{"gitId":"zikunz"},"content":"            return new DateCommand(userInput.substring(Number.DATE_COMMAND_LENGTH_ADD_ONE));"},{"lineNumber":117,"author":{"gitId":"zikunz"},"content":"        case COMMAND_BYE:"},{"lineNumber":118,"author":{"gitId":"zikunz"},"content":"            return new ExitCommand();"},{"lineNumber":119,"author":{"gitId":"zikunz"},"content":"        default:"},{"lineNumber":120,"author":{"gitId":"zikunz"},"content":"            throw new DukeException(Message.WRONG_COMMAND_ERROR_MESSAGE);"},{"lineNumber":121,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":123}},{"path":"src/main/java/Duke/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Storage;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Message;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Number;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.Task.Deadline;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import Duke.Task.Event;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"import Duke.Task.Task;"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"import Duke.Task.Todo;"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"import java.io.File;"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"import java.io.FileWriter;"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"import java.io.IOException;"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"import java.util.ArrayList;"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"import java.util.Scanner;"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":" * Storage creates a folder and file path if it\u0027s not already created"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":" * and load the data (if any) into the file."},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"public class Storage {"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    private static final String LETTER_T \u003d \"T\";"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"    private static final String LETTER_D \u003d \"D\";"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"    private static final String LETTER_E \u003d \"E\";"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"    private static File dataDirectory;"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"    private static String fullPath;"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"    private static File dukeFile;"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"     * Sets the file path according to the user input."},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"     * @param folderName name of the folder to be created"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"     * @param fileName name of the file to be created"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"    public Storage(String folderName, String fileName) {"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"        dataDirectory \u003d new File(folderName);"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"        dataDirectory.mkdir();"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"        fullPath \u003d folderName + \"/\" + fileName;"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"        dukeFile \u003d new File(fullPath);"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"     * Loads all data (if any) to the path specified by the user."},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":"     * @return the tasks in the list"},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":"     * @throws DukeException if the file cannot be loaded"},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":51,"author":{"gitId":"zikunz"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":52,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":53,"author":{"gitId":"zikunz"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"zikunz"},"content":"            dukeFile.createNewFile();"},{"lineNumber":55,"author":{"gitId":"zikunz"},"content":"            File file \u003d new File(fullPath);"},{"lineNumber":56,"author":{"gitId":"zikunz"},"content":"            Scanner sentence \u003d new Scanner(file);"},{"lineNumber":57,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":58,"author":{"gitId":"zikunz"},"content":"            while (sentence.hasNext()) {"},{"lineNumber":59,"author":{"gitId":"zikunz"},"content":"                String[] sentences \u003d sentence.nextLine().split(\"( \\\\| )\");"},{"lineNumber":60,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":61,"author":{"gitId":"zikunz"},"content":"                boolean isDone;"},{"lineNumber":62,"author":{"gitId":"zikunz"},"content":"                if (sentences[1].equals(Number.DONE_STATUS)) {"},{"lineNumber":63,"author":{"gitId":"zikunz"},"content":"                    isDone \u003d true;"},{"lineNumber":64,"author":{"gitId":"zikunz"},"content":"                } else {"},{"lineNumber":65,"author":{"gitId":"zikunz"},"content":"                    isDone \u003d false;"},{"lineNumber":66,"author":{"gitId":"zikunz"},"content":"                }"},{"lineNumber":67,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":68,"author":{"gitId":"zikunz"},"content":"                Task task \u003d new Task(\"\");"},{"lineNumber":69,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":70,"author":{"gitId":"zikunz"},"content":"                switch (sentences[0]) {"},{"lineNumber":71,"author":{"gitId":"zikunz"},"content":"                case LETTER_T:"},{"lineNumber":72,"author":{"gitId":"zikunz"},"content":"                    task \u003d new Todo(sentences[2], isDone);"},{"lineNumber":73,"author":{"gitId":"zikunz"},"content":"                    break;"},{"lineNumber":74,"author":{"gitId":"zikunz"},"content":"                case LETTER_D:"},{"lineNumber":75,"author":{"gitId":"zikunz"},"content":"                    task \u003d new Deadline(sentences[2], sentences[3], isDone);"},{"lineNumber":76,"author":{"gitId":"zikunz"},"content":"                    break;"},{"lineNumber":77,"author":{"gitId":"zikunz"},"content":"                case LETTER_E:"},{"lineNumber":78,"author":{"gitId":"zikunz"},"content":"                    task \u003d new Event(sentences[2], sentences[3], isDone);"},{"lineNumber":79,"author":{"gitId":"zikunz"},"content":"                    break;"},{"lineNumber":80,"author":{"gitId":"zikunz"},"content":"                default:"},{"lineNumber":81,"author":{"gitId":"zikunz"},"content":"                    System.out.println(Message.NON_EXISTING_LETTER_WRONG_MESSAGE);"},{"lineNumber":82,"author":{"gitId":"zikunz"},"content":"                }"},{"lineNumber":83,"author":{"gitId":"zikunz"},"content":"                tasks.add(task);"},{"lineNumber":84,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"zikunz"},"content":"        } catch (IOException e) {"},{"lineNumber":86,"author":{"gitId":"zikunz"},"content":"            throw new DukeException(Message.LOADING_ERROR_MESSAGE);"},{"lineNumber":87,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"zikunz"},"content":"        return tasks;"},{"lineNumber":89,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":91,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"zikunz"},"content":"     * Saves the tasks to the file specified by the user."},{"lineNumber":93,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"zikunz"},"content":"     * @param tasks tasks in the list"},{"lineNumber":95,"author":{"gitId":"zikunz"},"content":"     * @throws IOException if data cannot be written to the file of interest"},{"lineNumber":96,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"zikunz"},"content":"    public void writeToFile(TaskList tasks) throws IOException {"},{"lineNumber":98,"author":{"gitId":"zikunz"},"content":"        FileWriter fw \u003d new FileWriter(fullPath);"},{"lineNumber":99,"author":{"gitId":"zikunz"},"content":"        fw.write(tasks.toPrintedFormat());"},{"lineNumber":100,"author":{"gitId":"zikunz"},"content":"        fw.close();"},{"lineNumber":101,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":102}},{"path":"src/main/java/Duke/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Task;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.TaskType;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"    private String deadline;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"    public Deadline(String description, String deadline) {"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"    public Deadline(String description, String deadline, boolean isDone) {"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"        super(description, isDone);"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    public String getDeadline() {"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"        return deadline;"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    public String getType() {"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"        return TaskType.DEADLINE_TYPE;"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"        return \"[\" + getType() + \"]\" + \"[\" + getStatusIcon() + \"] \" +"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"                description + \" (by: \" + getDeadline() + \")\";"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"    public String toPrintedFormat() {"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"        return TaskType.DEADLINE_TYPE + \" | \" + super.getIntegerType() + \" | \" + description + \" | \" + getDeadline();"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"    public String getDate() {"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"        return getDeadline();"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":42}},{"path":"src/main/java/Duke/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Task;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.TaskType;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"    protected String period;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"    public Event(String description, String period) {"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"        this.period \u003d period;"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"    public Event(String description, String period, boolean isDone) {"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"        super(description, isDone);"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"        this.period \u003d period;"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    public String getPeriod() {"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"        return period;"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    public String getType() {"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"        return TaskType.EVENT_TYPE;"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"        return \"[\" + getType() + \"]\" + \"[\" + getStatusIcon() + \"] \" +"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"                description + \" (at: \" + getPeriod() + \")\";"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"    public String toPrintedFormat() {"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"        return TaskType.EVENT_TYPE + \" | \" + super.getIntegerType() + \" | \" + description + \" | \" + getPeriod();"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"    public String getDate() {"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"        return getPeriod();"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":42}},{"path":"src/main/java/Duke/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Task;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Symbol;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Number;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":" * Task can create the task objects."},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"public class Task {"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"    protected String description;"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"    protected boolean isDone;"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"    public Task(String description) {"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"        this.isDone \u003d false;"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"        this.description \u003d description;"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"     * Gets the description of a task."},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"     * @return description"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"    public String getDescription() {"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"        return description;"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"     * Gets the status of a task."},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"     * @return a tick if the task is done, and returns a cross if the task is not done"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"    public String getStatusIcon() {"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"        return (isDone ? Symbol.DONE_SYMBOL : Symbol.NOT_DONE_SYMBOL);"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"     * Sets the status status of a task as done."},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"    public void setAsDone() {"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"        this.isDone \u003d true;"},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"     * Gets the type of a task."},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"zikunz"},"content":"     * @return either \"T\", \"D\" or \"E\""},{"lineNumber":52,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"zikunz"},"content":"    public String getType() {"},{"lineNumber":54,"author":{"gitId":"zikunz"},"content":"        return \"\";"},{"lineNumber":55,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":57,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"zikunz"},"content":"     * Gets the integer type of a task."},{"lineNumber":59,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"zikunz"},"content":"     * @return either 1 (done) or 0 (not done)"},{"lineNumber":61,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"zikunz"},"content":"    public String getIntegerType() {"},{"lineNumber":63,"author":{"gitId":"zikunz"},"content":"        if (isDone) {"},{"lineNumber":64,"author":{"gitId":"zikunz"},"content":"            return Number.DONE_STATUS;"},{"lineNumber":65,"author":{"gitId":"zikunz"},"content":"        } else {"},{"lineNumber":66,"author":{"gitId":"zikunz"},"content":"            return Number.NOT_DONE_STATUS;"},{"lineNumber":67,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":70,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"zikunz"},"content":"     * Gets the string to be printed in the list."},{"lineNumber":72,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"zikunz"},"content":"     * @return the details of a task"},{"lineNumber":74,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"zikunz"},"content":"    public String toString() {"},{"lineNumber":76,"author":{"gitId":"zikunz"},"content":"        return \"\";"},{"lineNumber":77,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":79,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"zikunz"},"content":"     * Gets the appropriate printed format of a task"},{"lineNumber":81,"author":{"gitId":"zikunz"},"content":"     * to be stored in Duke.txt"},{"lineNumber":82,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"zikunz"},"content":"     * @return the printed format of a task"},{"lineNumber":84,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"zikunz"},"content":"    public String toPrintedFormat() {"},{"lineNumber":86,"author":{"gitId":"zikunz"},"content":"        return \"\";"},{"lineNumber":87,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":89,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"zikunz"},"content":"     * Gets the date of a task"},{"lineNumber":91,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"zikunz"},"content":"     * @return date"},{"lineNumber":93,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"zikunz"},"content":"    public String getDate() {"},{"lineNumber":95,"author":{"gitId":"zikunz"},"content":"        return \"\";"},{"lineNumber":96,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":97}},{"path":"src/main/java/Duke/Task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Task;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.TaskType;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"public class Todo extends Task {"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"    public Todo(String description) {"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"        super(description, isDone);"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    public String getType() {"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":"        return TaskType.TODO_TYPE;"},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"        return \"[\" + getType() + \"]\" + \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"    public String toPrintedFormat() {"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"        return TaskType.TODO_TYPE + \" | \" + super.getIntegerType() + \" | \" + description;"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":29}},{"path":"src/main/java/Duke/TaskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.TaskList;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.SpaceAndLine;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Task.Task;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":" * TaskList contains the list of tasks and provides relevant methods to alter them."},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"    private static ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"    private static ArrayList\u003cTask\u003e sameDateTasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":"    public TaskList() {"},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"     * Gets the the list of tasks."},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"     * @return the list of tasks"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"    public static ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"        return tasks;"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"     * Gets the the matched tasks after a find command."},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"     * @return the list of matched tasks"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"    public static ArrayList\u003cTask\u003e getMatchedTasks() {"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"        return matchedTasks;"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"     * Gets a task specified by the index received."},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":"     * @return the task specified by the index"},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":"    public Task getTask(int index) {"},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"        return tasks.get(index);"},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":52,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"zikunz"},"content":"     * Adds a task to the task list."},{"lineNumber":54,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"zikunz"},"content":"     * @param task the task to be added"},{"lineNumber":56,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"zikunz"},"content":"    public void addTask(Task task) {"},{"lineNumber":58,"author":{"gitId":"zikunz"},"content":"        tasks.add(task);"},{"lineNumber":59,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":61,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"zikunz"},"content":"     * Gets number of task(s) there are in the list."},{"lineNumber":63,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"zikunz"},"content":"     * @return number of task(s)"},{"lineNumber":65,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"zikunz"},"content":"    public int getSize() {"},{"lineNumber":67,"author":{"gitId":"zikunz"},"content":"        return tasks.size();"},{"lineNumber":68,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":70,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"zikunz"},"content":"     * Marks a task as done."},{"lineNumber":72,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"zikunz"},"content":"     * @param index index of the task to be marked as done"},{"lineNumber":74,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"zikunz"},"content":"    public void setTaskToBeDone(int index) {"},{"lineNumber":76,"author":{"gitId":"zikunz"},"content":"        tasks.get(index).setAsDone();"},{"lineNumber":77,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":79,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"zikunz"},"content":"     * Removes a task indicated by its index."},{"lineNumber":81,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"zikunz"},"content":"     * @param index index of the task to be deleted"},{"lineNumber":83,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"zikunz"},"content":"    public void deleteTask(int index) {"},{"lineNumber":85,"author":{"gitId":"zikunz"},"content":"        tasks.remove(index);"},{"lineNumber":86,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":88,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"zikunz"},"content":"     * Helps a ui to display all the task(s) in the list."},{"lineNumber":90,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"zikunz"},"content":"    public static void displayList() {"},{"lineNumber":92,"author":{"gitId":"zikunz"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":93,"author":{"gitId":"zikunz"},"content":"            System.out.println(SpaceAndLine.SHORT_SPACE + (i + 1) + \".\" + tasks.get(i));"},{"lineNumber":94,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":97,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"zikunz"},"content":"     * Formats all tasks to be stored in Duke.txt"},{"lineNumber":99,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"zikunz"},"content":"     * @return content to be stored in Duke.txt"},{"lineNumber":101,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"zikunz"},"content":"    public String toPrintedFormat() {"},{"lineNumber":103,"author":{"gitId":"zikunz"},"content":"        String text \u003d \"\";"},{"lineNumber":104,"author":{"gitId":"zikunz"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":105,"author":{"gitId":"zikunz"},"content":"            text \u003d text + getTask(i).toPrintedFormat() + \"\\n\";"},{"lineNumber":106,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"zikunz"},"content":"        return text;"},{"lineNumber":108,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":110,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"zikunz"},"content":"     * Finds all task(s) containing the keyword given"},{"lineNumber":112,"author":{"gitId":"zikunz"},"content":"     * and add it / them to the matched tasks"},{"lineNumber":113,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":114,"author":{"gitId":"zikunz"},"content":"     * @param keyword keyword given to find all tasks containing it"},{"lineNumber":115,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"zikunz"},"content":"    public void findKeyword(String keyword) {"},{"lineNumber":117,"author":{"gitId":"zikunz"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":118,"author":{"gitId":"zikunz"},"content":"            String description \u003d getTask(i).getDescription();"},{"lineNumber":119,"author":{"gitId":"zikunz"},"content":"            if (keywordMatched(keyword, description)) {"},{"lineNumber":120,"author":{"gitId":"zikunz"},"content":"                matchedTasks.add(getTask(i));"},{"lineNumber":121,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":125,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"zikunz"},"content":"     * Decides whether a specific description contains the keyword"},{"lineNumber":127,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":128,"author":{"gitId":"zikunz"},"content":"     * @param keyword keyword given to find all tasks containing it"},{"lineNumber":129,"author":{"gitId":"zikunz"},"content":"     * @param description description of a particular task"},{"lineNumber":130,"author":{"gitId":"zikunz"},"content":"     * @return whether a specific description contains the keyword"},{"lineNumber":131,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"zikunz"},"content":"    private boolean keywordMatched(String keyword, String description) {"},{"lineNumber":133,"author":{"gitId":"zikunz"},"content":"        if (description.contains(keyword)) {"},{"lineNumber":134,"author":{"gitId":"zikunz"},"content":"            return true;"},{"lineNumber":135,"author":{"gitId":"zikunz"},"content":"        } else {"},{"lineNumber":136,"author":{"gitId":"zikunz"},"content":"            return false;"},{"lineNumber":137,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":140,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"zikunz"},"content":"     * Helps a ui to display all the matched task(s) in the list."},{"lineNumber":142,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":143,"author":{"gitId":"zikunz"},"content":"    public void DisplayMatchedTasks() {"},{"lineNumber":144,"author":{"gitId":"zikunz"},"content":"        for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {"},{"lineNumber":145,"author":{"gitId":"zikunz"},"content":"            System.out.println(SpaceAndLine.SHORT_SPACE + (i + 1) + \".\" + matchedTasks.get(i));"},{"lineNumber":146,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":149,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"zikunz"},"content":"     * Finds all task(s) containing the date given"},{"lineNumber":151,"author":{"gitId":"zikunz"},"content":"     * and adds it / them to the tasks of the same date"},{"lineNumber":152,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":153,"author":{"gitId":"zikunz"},"content":"     * @param date date given to find all tasks which occur on the same date"},{"lineNumber":154,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":155,"author":{"gitId":"zikunz"},"content":"    public void findDate(LocalDate date) {"},{"lineNumber":156,"author":{"gitId":"zikunz"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":157,"author":{"gitId":"zikunz"},"content":"            String dateString \u003d getTask(i).getDate();"},{"lineNumber":158,"author":{"gitId":"zikunz"},"content":"            LocalDate convertedDate \u003d LocalDate.parse(dateString);"},{"lineNumber":159,"author":{"gitId":"zikunz"},"content":"            if (date.equals(convertedDate)) {"},{"lineNumber":160,"author":{"gitId":"zikunz"},"content":"                sameDateTasks.add(getTask(i));"},{"lineNumber":161,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":162,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":165,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":166,"author":{"gitId":"zikunz"},"content":"     * Helps a ui to display all the task(s)"},{"lineNumber":167,"author":{"gitId":"zikunz"},"content":"     * occurring on a particular date in the list."},{"lineNumber":168,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":169,"author":{"gitId":"zikunz"},"content":"    public void DisplaySameDateTasks() {"},{"lineNumber":170,"author":{"gitId":"zikunz"},"content":"        for (int i \u003d 0; i \u003c sameDateTasks.size(); i++) {"},{"lineNumber":171,"author":{"gitId":"zikunz"},"content":"            System.out.println(SpaceAndLine.SHORT_SPACE + (i + 1) + \".\" + sameDateTasks.get(i));"},{"lineNumber":172,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":174}},{"path":"src/main/java/Duke/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Ui;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.SpaceAndLine;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":" * Ui receives inputs from the user and subsequently produces relevant outputs to him / her."},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"public class Ui {"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"    private final Scanner userInput;"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"    public Ui() {"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"        userInput \u003d new Scanner(System.in);"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"     * Prints a message received."},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"     * @param message some message which needs to printed by a ui"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    public void printMessage(String message) {"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"        System.out.println(message);"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"     * Prints a message about how many tasks there are."},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"     * @param numberOfTasks number of tasks"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"    public static void printNumberOfTasksMessage(int numberOfTasks) {"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"        if (numberOfTasks \u003d\u003d 0 || numberOfTasks \u003d\u003d 1) {"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"            System.out.println(SpaceAndLine.SHORT_SPACE + \"Now you have \" + numberOfTasks + \" task in the list.\");"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"            System.out.println(SpaceAndLine.SHORT_SPACE + \"Now you have \" + numberOfTasks + \" tasks in the list.\");"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"     * Reads user input line by line."},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":"     * @return the string of the line read"},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"    public String readCommand() {"},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":"        return userInput.nextLine();"},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"     * Prints all the tasks."},{"lineNumber":51,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"zikunz"},"content":"    public void printTasks(TaskList tasks) {"},{"lineNumber":53,"author":{"gitId":"zikunz"},"content":"        tasks.displayList();"},{"lineNumber":54,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":56,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"zikunz"},"content":"     * Prints all the matched tasks after a find command."},{"lineNumber":58,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"zikunz"},"content":"    public void printMatchedTasks(TaskList matchedTasks) {"},{"lineNumber":60,"author":{"gitId":"zikunz"},"content":"        matchedTasks.DisplayMatchedTasks();"},{"lineNumber":61,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":63,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"zikunz"},"content":"     * Prints all the tasks with the same date specified in a find command."},{"lineNumber":65,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"zikunz"},"content":"    public void printSameDateTasks(TaskList sameDateTasks) {"},{"lineNumber":67,"author":{"gitId":"zikunz"},"content":"        sameDateTasks.DisplaySameDateTasks();"},{"lineNumber":68,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":70,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"zikunz"},"content":"     * Prints a relevant error message."},{"lineNumber":72,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"zikunz"},"content":"    public void showError(String errorMessage) {"},{"lineNumber":74,"author":{"gitId":"zikunz"},"content":"        System.out.println(errorMessage);"},{"lineNumber":75,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":76}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"todo CS2113T iP"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":"deadline CG1112 design report /by 2359 Sunday"},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"event NUS blood donation /at 1300 Saturday"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"list"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"list"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"delete 1"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"list"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"search 1112"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"bye"}],"authorContributionMap":{"zikunz":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"zikunz":2,"-":19}}]
