[{"path":"src/main/java/Duke/Command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Command;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Message;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.SpaceAndLine;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.TaskType;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"import Duke.Storage.Storage;"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"import Duke.Task.Deadline;"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"import Duke.Task.Event;"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"import Duke.Task.Task;"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"import Duke.Task.Todo;"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"import Duke.Ui.Ui;"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"import java.io.IOException;"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":" * Represents the command call when the user adds some task."},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"public class AddCommand extends Command {"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"    private String taskType;"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    private String content;"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"    public AddCommand(String taskType, String content) {"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"        this.content \u003d content;"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"    public boolean shouldExit() {"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"        return false;"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"     * Adds a specific task and update the Duke file."},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"     * @param tasks the list of tasks"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"     * @param ui outputs to be printed"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"     * @param storage store data into the Duke file"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"     * @throws DukeException the exceptions which can happen"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, TaskList matchedTasks) throws DukeException {"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"        Task task;"},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":"        switch (taskType) {"},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":"        case TaskType.TODO_TYPE:"},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"            task \u003d new Todo(content);"},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"            break;"},{"lineNumber":51,"author":{"gitId":"zikunz"},"content":"        case TaskType.DEADLINE_TYPE:"},{"lineNumber":52,"author":{"gitId":"zikunz"},"content":"            String[] deadlineComponents \u003d content.split(\" /by \");"},{"lineNumber":53,"author":{"gitId":"zikunz"},"content":"            task \u003d new Deadline(deadlineComponents[0], deadlineComponents[1]);"},{"lineNumber":54,"author":{"gitId":"zikunz"},"content":"            break;"},{"lineNumber":55,"author":{"gitId":"zikunz"},"content":"        case TaskType.EVENT_TYPE:"},{"lineNumber":56,"author":{"gitId":"zikunz"},"content":"            String[] eventComponents \u003d content.split(\" /at \");"},{"lineNumber":57,"author":{"gitId":"zikunz"},"content":"            task \u003d new Event(eventComponents[0], eventComponents[1]);"},{"lineNumber":58,"author":{"gitId":"zikunz"},"content":"            break;"},{"lineNumber":59,"author":{"gitId":"zikunz"},"content":"        default:"},{"lineNumber":60,"author":{"gitId":"zikunz"},"content":"            throw new DukeException(Message.WRONG_COMMAND_ERROR_MESSAGE);"},{"lineNumber":61,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"zikunz"},"content":"        tasks.addTask(task);"},{"lineNumber":63,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":64,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":65,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(Message.ADD_TASK_MESSAGE);"},{"lineNumber":66,"author":{"gitId":"zikunz"},"content":"        System.out.println(SpaceAndLine.LONG_SPACE + task);"},{"lineNumber":67,"author":{"gitId":"zikunz"},"content":"        ui.printNumberOfTasksMessage(tasks.getSize());"},{"lineNumber":68,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":69,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":70,"author":{"gitId":"zikunz"},"content":"        try {"},{"lineNumber":71,"author":{"gitId":"zikunz"},"content":"            storage.writeToFile(tasks);"},{"lineNumber":72,"author":{"gitId":"zikunz"},"content":"        } catch (IOException ioException) {"},{"lineNumber":73,"author":{"gitId":"zikunz"},"content":"            throw new DukeException(\"File not found\");"},{"lineNumber":74,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":76}},{"path":"src/main/java/Duke/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Command;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.Storage.Storage;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import Duke.Ui.Ui;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":" * Represents the command to be executed."},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"public abstract class Command {"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"    public abstract boolean shouldExit();"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":"     * Execute the command based on the specific command type."},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"     * @param tasks the list of tasks"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"     * @param ui do outputs"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"     * @param storage store the data"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"     * @throws DukeException the exceptions which can happen"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage, TaskList matchedTasks) throws DukeException;"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":25}},{"path":"src/main/java/Duke/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Command;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Message;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.SpaceAndLine;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.Storage.Storage;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"import Duke.Ui.Ui;"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":" * Represents the command call when the user deletes some task."},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    private int index;"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    public DeleteCommand(int index) {"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"        this.index \u003d index;"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    public boolean shouldExit() {"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"        return false;"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"     * Delete the task, and update the file."},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"     * @param tasks the list of tasks"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"     * @param ui outputs to be printed"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"     * @param storage store data into Duke.txt"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"     * @throws DukeException the exceptions which can happen"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, TaskList matchedTasks) throws DukeException {"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(Message.REMOVE_TASK_MESSAGE);"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"        System.out.println(SpaceAndLine.LONG_SPACE + tasks.getTask(index));"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"        tasks.deleteTask(index);"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":"        ui.printNumberOfTasksMessage(tasks.getSize());"},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":"            storage.writeToFile(tasks);"},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":"        } catch (IOException ioException) {"},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"            throw new DukeException(\"File not found\");"},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":52}},{"path":"src/main/java/Duke/Command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Command;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Message;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.SpaceAndLine;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.Storage.Storage;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"import Duke.Ui.Ui;"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":" * Represents the command call when the user mark a task as done."},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"public class DoneCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    private int index;"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    public DoneCommand(int index) {"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"        this.index \u003d index;"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    public boolean shouldExit() {"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"        return false;"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"     * Mark a specific task as done and update the Duke file."},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"     * @param tasks the list of tasks"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"     * @param ui outputs to be printed"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"     * @param storage store data into Duke.txt"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"     * @throws DukeException the exceptions which can happen"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"     * */"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, TaskList matchedTasks) throws DukeException {"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"        tasks.setTaskToBeDone(index);"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(Message.MARK_AS_DONE_MESSAGE);"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"        System.out.println(SpaceAndLine.LONG_SPACE + tasks.getTask(index));"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"            storage.writeToFile(tasks);"},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":"        } catch (IOException ioException) {"},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":"            throw new DukeException(\"File not found\");"},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":50}},{"path":"src/main/java/Duke/Command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Command;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Storage.Storage;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.Ui.Ui;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":" * Represents the command call when the user exits this program."},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"public class ExitCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"    public boolean shouldExit() {"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"        return true;"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"     * Changes isExit to be true and prints the exit message."},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"     * @param tasks the list of tasks"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"     * @param ui outputs to be printed"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"     * @param storage store data in Duke.txt"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"     * @throws DukeException the exceptions which can happen"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, TaskList matchedTasks) throws DukeException {"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"        // Do nothing"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":30}},{"path":"src/main/java/Duke/Command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Command;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Message;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.SpaceAndLine;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.Storage.Storage;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"import Duke.Ui.Ui;"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"public class FindCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"    private final String keyword;"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    public boolean shouldExit() {"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"        return false;"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, TaskList matchedTasks) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SHORT_SPACE + Message.SHOW_MATCHING_TASKS_MESSAGE);"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"        tasks.findKeyword(keyword);"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"        ui.printMatchedTasks(matchedTasks);"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":32}},{"path":"src/main/java/Duke/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Command;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Message;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.SpaceAndLine;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.Storage.Storage;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"import Duke.Ui.Ui;"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":" * Represents the command call when the user wants to see the whole list of tasks."},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"public class ListCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    public boolean shouldExit() {"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":"        return false;"},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"     * Prints the list of tasks."},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"     * @param tasks the list of tasks"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"     * @param ui outputs to be printed"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"     * @param storage store data into Duke.txt"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"     * @throws DukeException the exceptions which can happen in this function"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, TaskList matchedTasks) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"        switch (tasks.getSize()) {"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"        case 0:"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"            System.out.println(Message.EMPTY_LIST_MESSAGE);"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"            break;"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"        case 1:"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"            System.out.println(Message.ONE_TASK_IN_LIST_MESSAGE);"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"            break;"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"        default:"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"            System.out.println(Message.MORE_THAN_ONE_TASK_IN_LIST_MESSAGE);"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"        ui.printTasks(tasks);"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(SpaceAndLine.SEPARATION_LINE);"},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":44}},{"path":"src/main/java/Duke/Constant/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Constant;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"public class Message {"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"    public static final String logo \u003d \"     ____        _        \\n\" +"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"            \"    |  _ \\\\ _   _| | _____ \\n\" +"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"            \"    | | | | | | | |/ / _ \\\\\\n\" +"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"            \"    | |_| | |_| |   \u003c  __/\\n\" +"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"            \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"    public static final String GREET_MESSAGE \u003d logo + \"\\n\" + SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.LONG_SPACE +"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"            \"Hello! I\u0027m Duke\\n\" + SpaceAndLine.LONG_SPACE + \"What can I do for you?\\n\" +"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"    public static final String EMPTY_LIST_MESSAGE \u003d SpaceAndLine.SHORT_SPACE + \"You do not have any task to do.\";"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"    public static final String MARK_AS_DONE_MESSAGE \u003d SpaceAndLine.SHORT_SPACE +"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"            \"Nice! I\u0027ve marked this task as done:\";"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":"    public static final String ONE_TASK_IN_LIST_MESSAGE \u003d SpaceAndLine.SHORT_SPACE +"},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"            \"Here is the task in your list:\";"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"    public static final String MORE_THAN_ONE_TASK_IN_LIST_MESSAGE \u003d SpaceAndLine.SHORT_SPACE +"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"            \"Here are the tasks in your list:\";"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"    public static final String WRONG_COMMAND_ERROR_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SHORT_SPACE +"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"            \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"    public static final String MISSING_TODO_CONTENT_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SHORT_SPACE + \"☹ OOPS!!! The description of a todo cannot be empty.\\n\" +"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"    public static final String MISSING_DEADLINE_CONTENT_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SHORT_SPACE + \"☹ OOPS!!! The description of a deadline cannot be empty.\\n\" +"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"    public static final String MISSING_EVENT_CONTENT_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SHORT_SPACE + \"☹ OOPS!!! The description of a event cannot be empty.\\n\" +"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"    public static final String MISSING_DELETE_INDEX_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SHORT_SPACE + \"☹ OOPS!!! The index of the deletion cannot be empty.\\n\" +"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"    public static final String WRONG_DELETE_INDEX_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SHORT_SPACE + \"☹ OOPS!!! The index of the deletion is out of bound.\\n\" +"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SEPARATION_LINE + \"\\n\";"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"    public static final String ADD_TASK_MESSAGE \u003d SpaceAndLine.SHORT_SPACE + \"Got it. I\u0027ve added this task:\";"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"    public static final String REMOVE_TASK_MESSAGE \u003d SpaceAndLine.SHORT_SPACE + \"Noted. I\u0027ve removed this task:\";"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"    public static final String SHOW_MATCHING_TASKS_MESSAGE \u003d \"Here are the matching tasks in your list:\";"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"    public static final String EXIT_MESSAGE \u003d SpaceAndLine.SEPARATION_LINE + \"\\n\" +"},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":"            \"     Bye. Hope to see you again soon!\\n\" +"},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"            SpaceAndLine.SEPARATION_LINE;"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"    public static final String NON_EXISTING_LETTER_WRONG_MESSAGE \u003d \"Something wrong happened!\";"},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":"    public static final String LOADING_ERROR_MESSAGE \u003d \"Unable to load any file!\";"},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":47}},{"path":"src/main/java/Duke/Constant/Number.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Constant;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"public class Number {"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"    public static String DONE_STATUS \u003d \"1\";"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"    public static String NOT_DONE_STATUS \u003d \"0\";"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"    public static final int TODO_COMMAND_LENGTH \u003d 4;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"    public static final int TODO_COMMAND_LENGTH_ADD_ONE \u003d 5;"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"    public static final int DEADLINE_COMMAND_LENGTH \u003d 8;"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"    public static final int DEADLINE_COMMAND_LENGTH_ADD_ONE \u003d 9;"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"    public static final int EVENT_COMMAND_LENGTH \u003d 5;"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"    public static final int EVENT_COMMAND_LENGTH_ADD_ONE \u003d 6;"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"    public static final int DONE_COMMAND_LENGTH_ADD_ONE \u003d 5;"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"    public static final int DELETE_COMMAND_LENGTH_ADD_ONE \u003d 7;"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"    public static final int FIND_COMMAND_LENGTH_ADD_ONE \u003d 5;"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":16}},{"path":"src/main/java/Duke/Constant/SpaceAndLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Constant;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"public class SpaceAndLine {"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"    public static final String SHORT_SPACE \u003d \"     \";"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"    public static final String LONG_SPACE \u003d \"       \";"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"    public static final String SEPARATION_LINE \u003d \"    ____________________________________________________________\";"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":7}},{"path":"src/main/java/Duke/Constant/Symbol.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Constant;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"public class Symbol {"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"    public static String NOT_DONE_SYMBOL \u003d \"\\u2718\";"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"    public static String DONE_SYMBOL \u003d \"\\u2713\";"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":6}},{"path":"src/main/java/Duke/Constant/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Constant;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"public class TaskType {"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"    public static final String TODO_TYPE \u003d \"T\";"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"    public static final String DEADLINE_TYPE \u003d \"D\";"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"    public static final String EVENT_TYPE \u003d \"E\";"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":7}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Command.Command;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Message;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.Parser.Parser;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import Duke.Storage.Storage;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"import Duke.Ui.Ui;"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":" * Entry point of Duke application."},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":" * Initializes the application and starts interaction with the user."},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"public class Duke {"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    private static final String folderName \u003d \"data\";"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":"    private static final String fileName \u003d \"Duke.txt\";"},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"    private Storage storage;"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    private TaskList tasks;"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"    private TaskList matchedTasks \u003d new TaskList();"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"    private Ui ui;"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    private Parser parser \u003d new Parser();"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"    public Duke(String folderName, String fileName) {"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"        ui \u003d new Ui();"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"        storage \u003d new Storage(folderName, fileName);"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"        } catch (DukeException e) {"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"            ui.printMessage(Message.LOADING_ERROR_MESSAGE);"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"     * Runs the program until termination."},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"    public void run() {"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(Message.GREET_MESSAGE);"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"        boolean shouldExit \u003d false;"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"        while (!shouldExit) {"},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":"            try {"},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"                String userInput \u003d ui.readCommand();"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"                Command userCommand \u003d parser.processInput(userInput);"},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":"                userCommand.execute(tasks, ui, storage, matchedTasks);"},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":"                shouldExit \u003d userCommand.shouldExit();"},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":"            } catch (DukeException e) {"},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"                ui.printMessage(Message.WRONG_COMMAND_ERROR_MESSAGE);"},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"zikunz"},"content":"        ui.printMessage(Message.EXIT_MESSAGE);"},{"lineNumber":53,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":55,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"zikunz"},"content":"     * Create a new instance of Duke with data/Duke.txt and run the program."},{"lineNumber":57,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"zikunz"},"content":"    public static void main(String[] args) {"},{"lineNumber":59,"author":{"gitId":"zikunz"},"content":"        new Duke(folderName, fileName).run();"},{"lineNumber":60,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":61}},{"path":"src/main/java/Duke/Exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Exception;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":" * Represents all possible exceptions that can happen"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"    public DukeException(String message) {"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"        super(message);"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":11}},{"path":"src/main/java/Duke/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Parser;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Command.*;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Message;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.TaskType;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Number;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":" * Calls respective command function to process different user inputs."},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"public class Parser {"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    private static final String COMMAND_DONE \u003d \"done\";"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";"},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    private static final String COMMAND_LIST \u003d \"list\";"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    private static final String COMMAND_FIND \u003d \"find\";"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"     * This function calls the correct command to process different user inputs."},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"     * @param userInput user input entered"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"     * @throws DukeException includes all exceptions may happen during parsing"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"    public Command processInput(String userInput) throws DukeException {"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"        String command \u003d userInput.split(\" \")[0];"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"        switch (command) {"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"        case COMMAND_TODO:"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"            String description \u003d userInput.substring(Number.TODO_COMMAND_LENGTH);"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"            description \u003d description.replace(\" \", \"\");"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"            if (description.isEmpty()) {"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"                throw new DukeException(Message.MISSING_TODO_CONTENT_MESSAGE);"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"            return new AddCommand(TaskType.TODO_TYPE, userInput.substring(Number.TODO_COMMAND_LENGTH_ADD_ONE));"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"        case COMMAND_DEADLINE:"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"            String deadline \u003d userInput.substring((Number.DEADLINE_COMMAND_LENGTH));"},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":"            deadline \u003d deadline.replace(\" \", \"\");"},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"            if (deadline.isEmpty()) {"},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":"                throw new DukeException(Message.MISSING_DEADLINE_CONTENT_MESSAGE);"},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"            return new AddCommand(TaskType.DEADLINE_TYPE, userInput.substring(Number.DEADLINE_COMMAND_LENGTH_ADD_ONE));"},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"        case COMMAND_EVENT:"},{"lineNumber":51,"author":{"gitId":"zikunz"},"content":"            String event \u003d userInput.substring((Number.EVENT_COMMAND_LENGTH));"},{"lineNumber":52,"author":{"gitId":"zikunz"},"content":"            event \u003d event.replace(\" \", \"\");"},{"lineNumber":53,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":54,"author":{"gitId":"zikunz"},"content":"            if (event.isEmpty()) {"},{"lineNumber":55,"author":{"gitId":"zikunz"},"content":"                throw new DukeException(Message.MISSING_EVENT_CONTENT_MESSAGE);"},{"lineNumber":56,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":58,"author":{"gitId":"zikunz"},"content":"            return new AddCommand(TaskType.EVENT_TYPE, userInput.substring(Number.EVENT_COMMAND_LENGTH_ADD_ONE));"},{"lineNumber":59,"author":{"gitId":"zikunz"},"content":"        case COMMAND_DONE:"},{"lineNumber":60,"author":{"gitId":"zikunz"},"content":"            return new DoneCommand(Integer.parseInt(userInput.substring(Number.DONE_COMMAND_LENGTH_ADD_ONE)) - 1);"},{"lineNumber":61,"author":{"gitId":"zikunz"},"content":"        case COMMAND_BYE:"},{"lineNumber":62,"author":{"gitId":"zikunz"},"content":"            return new ExitCommand();"},{"lineNumber":63,"author":{"gitId":"zikunz"},"content":"        case COMMAND_LIST:"},{"lineNumber":64,"author":{"gitId":"zikunz"},"content":"            return new ListCommand();"},{"lineNumber":65,"author":{"gitId":"zikunz"},"content":"        case COMMAND_DELETE:"},{"lineNumber":66,"author":{"gitId":"zikunz"},"content":"            return new DeleteCommand"},{"lineNumber":67,"author":{"gitId":"zikunz"},"content":"                    (Integer.parseInt(userInput.substring(Number.DELETE_COMMAND_LENGTH_ADD_ONE)) - 1);"},{"lineNumber":68,"author":{"gitId":"zikunz"},"content":"        case COMMAND_FIND:"},{"lineNumber":69,"author":{"gitId":"zikunz"},"content":"            return new FindCommand(userInput.substring(Number.FIND_COMMAND_LENGTH_ADD_ONE));"},{"lineNumber":70,"author":{"gitId":"zikunz"},"content":"        default:"},{"lineNumber":71,"author":{"gitId":"zikunz"},"content":"            throw new DukeException(Message.WRONG_COMMAND_ERROR_MESSAGE);"},{"lineNumber":72,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":74}},{"path":"src/main/java/Duke/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Storage;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Message;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"import Duke.Task.Deadline;"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import Duke.Task.Event;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"import Duke.Task.Task;"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"import Duke.Task.Todo;"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Number;"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"import java.io.File;"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"import java.io.FileWriter;"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"import java.io.IOException;"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"import java.util.ArrayList;"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"import java.util.Scanner;"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":" * Creates the folder and file path if it\u0027s not already created and load the data into the file."},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"public class Storage {"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"    private static final String LETTER_T \u003d \"T\";"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    private static final String LETTER_D \u003d \"D\";"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"    private static final String LETTER_E \u003d \"E\";"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"    private static File dataDirectory;"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"    private static String fullPath;"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"    private static File dukeFile;"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"    public Storage(String folderName, String fileName) {"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"        dataDirectory \u003d new File(folderName);"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"        dataDirectory.mkdir();"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"        fullPath \u003d folderName + \"/\" + fileName;"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"        dukeFile \u003d new File(fullPath);"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"            dukeFile.createNewFile();"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"            File file \u003d new File(fullPath);"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"            Scanner sentence \u003d new Scanner(file);"},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"            while (sentence.hasNext()) {"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"                String[] sentences \u003d sentence.nextLine().split(\"( \\\\| )\");"},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":"                boolean isDone;"},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":"                if (sentences[1].equals(Number.DONE_STATUS)) {"},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"                    isDone \u003d true;"},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"                } else {"},{"lineNumber":51,"author":{"gitId":"zikunz"},"content":"                    isDone \u003d false;"},{"lineNumber":52,"author":{"gitId":"zikunz"},"content":"                }"},{"lineNumber":53,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":54,"author":{"gitId":"zikunz"},"content":"                Task task \u003d new Task(\"\");"},{"lineNumber":55,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":56,"author":{"gitId":"zikunz"},"content":"                switch (sentences[0]) {"},{"lineNumber":57,"author":{"gitId":"zikunz"},"content":"                case LETTER_T:"},{"lineNumber":58,"author":{"gitId":"zikunz"},"content":"                    task \u003d new Todo(sentences[2], isDone);"},{"lineNumber":59,"author":{"gitId":"zikunz"},"content":"                    break;"},{"lineNumber":60,"author":{"gitId":"zikunz"},"content":"                case LETTER_D:"},{"lineNumber":61,"author":{"gitId":"zikunz"},"content":"                    task \u003d new Deadline(sentences[2], sentences[3], isDone);"},{"lineNumber":62,"author":{"gitId":"zikunz"},"content":"                    break;"},{"lineNumber":63,"author":{"gitId":"zikunz"},"content":"                case LETTER_E:"},{"lineNumber":64,"author":{"gitId":"zikunz"},"content":"                    task \u003d new Event(sentences[2], sentences[3], isDone);"},{"lineNumber":65,"author":{"gitId":"zikunz"},"content":"                    break;"},{"lineNumber":66,"author":{"gitId":"zikunz"},"content":"                default:"},{"lineNumber":67,"author":{"gitId":"zikunz"},"content":"                    System.out.println(Message.NON_EXISTING_LETTER_WRONG_MESSAGE);"},{"lineNumber":68,"author":{"gitId":"zikunz"},"content":"                }"},{"lineNumber":69,"author":{"gitId":"zikunz"},"content":"                tasks.add(task);"},{"lineNumber":70,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"zikunz"},"content":"        } catch (IOException e) {"},{"lineNumber":72,"author":{"gitId":"zikunz"},"content":"            throw new DukeException(Message.LOADING_ERROR_MESSAGE);"},{"lineNumber":73,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"zikunz"},"content":"        return tasks;"},{"lineNumber":75,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":77,"author":{"gitId":"zikunz"},"content":"    public void writeToFile(TaskList tasks) throws IOException {"},{"lineNumber":78,"author":{"gitId":"zikunz"},"content":"        FileWriter fw \u003d new FileWriter(fullPath);"},{"lineNumber":79,"author":{"gitId":"zikunz"},"content":"        fw.write(tasks.toPrintedFormat());"},{"lineNumber":80,"author":{"gitId":"zikunz"},"content":"        fw.close();"},{"lineNumber":81,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":82}},{"path":"src/main/java/Duke/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Task;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.TaskType;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"    private String deadline;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"    public Deadline(String description, String deadline) {"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"    public Deadline(String description, String deadline, boolean isDone) {"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"        super(description, isDone);"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    public String getDeadline() {"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"        return deadline;"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    public String getType() {"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"        return TaskType.DEADLINE_TYPE;"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"        return \"[\" + getType() + \"]\" + \"[\" + getStatusIcon() + \"] \" +"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"                description + \" (by: \" + getDeadline() + \")\";"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"    public String toPrintedFormat() {"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"        return TaskType.DEADLINE_TYPE + \" | \" + super.getIntegerType() + \" | \" + description + \" | \" + getDeadline();"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":37}},{"path":"src/main/java/Duke/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Task;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.TaskType;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"    protected String period;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"    public Event(String description, String period) {"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"        this.period \u003d period;"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"    public Event(String description, String period, boolean isDone) {"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"        super(description, isDone);"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"        this.period \u003d period;"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    public String getPeriod() {"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"        return period;"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    public String getType() {"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"        return TaskType.EVENT_TYPE;"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"        return \"[\" + getType() + \"]\" + \"[\" + getStatusIcon() + \"] \" +"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"                description + \" (at: \" + getPeriod() + \")\";"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"    public String toPrintedFormat() {"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"        return TaskType.EVENT_TYPE + \" | \" + super.getIntegerType() + \" |\" + description + \" | \" + getPeriod();"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":37}},{"path":"src/main/java/Duke/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Task;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Symbol;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.Number;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":" * Represents the task objects."},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"public class Task {"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":"    protected String description;"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"    protected boolean isDone;"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"    public Task(String description) {"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"        this.isDone \u003d false;"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"        this.description \u003d description;"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    public String getDescription() {"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"        return description;"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"     * Provides the status of the task."},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"     * @return returns a tick if the task is done, and returns a cross if the task is not done"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"    public String getStatusIcon() {"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"        return (isDone ? Symbol.DONE_SYMBOL : Symbol.NOT_DONE_SYMBOL);"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"     * Set a task\u0027s status as done."},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"    public void setAsDone() {"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"        this.isDone \u003d true;"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":"    public String getType() {"},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"        return \"\";"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":"    public String getIntegerType() {"},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":"        if (isDone) {"},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"            return Number.DONE_STATUS;"},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"        } else {"},{"lineNumber":51,"author":{"gitId":"zikunz"},"content":"            return Number.NOT_DONE_STATUS;"},{"lineNumber":52,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":55,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"zikunz"},"content":"     * Returns the string to be printed in the list."},{"lineNumber":57,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"zikunz"},"content":"     * @return the task\u0027s details"},{"lineNumber":59,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"zikunz"},"content":"    public String toString() {"},{"lineNumber":61,"author":{"gitId":"zikunz"},"content":"        return \"\";"},{"lineNumber":62,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":64,"author":{"gitId":"zikunz"},"content":"    public String toPrintedFormat() {"},{"lineNumber":65,"author":{"gitId":"zikunz"},"content":"        return \"\";"},{"lineNumber":66,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":67}},{"path":"src/main/java/Duke/Task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Task;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.TaskType;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":"public class Todo extends Task {"},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":"    public Todo(String description) {"},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"        super(description, isDone);"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    public String getType() {"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":"        return TaskType.TODO_TYPE;"},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"        return \"[\" + getType() + \"]\" + \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"    public String toPrintedFormat() {"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"        return TaskType.TODO_TYPE + \" | \" + super.getIntegerType() + \" | \" + description;"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":29}},{"path":"src/main/java/Duke/TaskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.TaskList;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.SpaceAndLine;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.Task.Task;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":" * Contains the list of tasks and provides methods to add / delete / mark as done."},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"public class TaskList {"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":"    private static ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"     * Construct the tasks of an ArrayList type."},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"     * Gives the the list of tasks."},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"     * @return the list of tasks"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"    public static ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"        return tasks;"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"    public static ArrayList\u003cTask\u003e getMatchedTasks() {"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"        return matchedTasks;"},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"    public Task getTask(int index) {"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"        return tasks.get(index);"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"    public String getTaskDescription(Task task) {"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"        return task.getDescription();"},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"     * Adds a task to the task list."},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"zikunz"},"content":"     * @param task task to be added"},{"lineNumber":52,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"zikunz"},"content":"    public void addTask(Task task) {"},{"lineNumber":54,"author":{"gitId":"zikunz"},"content":"        tasks.add(task);"},{"lineNumber":55,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":57,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"zikunz"},"content":"     * Returns number of task(s) are in the list."},{"lineNumber":59,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"zikunz"},"content":"     * @return the size of the number og tasks"},{"lineNumber":61,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"zikunz"},"content":"    public int getSize() {"},{"lineNumber":63,"author":{"gitId":"zikunz"},"content":"        return tasks.size();"},{"lineNumber":64,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":66,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"zikunz"},"content":"     * Mark a task as done."},{"lineNumber":68,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"zikunz"},"content":"     * @param index index of the task to be marked as done"},{"lineNumber":70,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"zikunz"},"content":"    public void setTaskToBeDone(int index) {"},{"lineNumber":72,"author":{"gitId":"zikunz"},"content":"        tasks.get(index).setAsDone();"},{"lineNumber":73,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":75,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"zikunz"},"content":"     * Remove the task indicated by the user."},{"lineNumber":77,"author":{"gitId":"zikunz"},"content":"     * @param index index of the task to be deleted"},{"lineNumber":78,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"zikunz"},"content":"    public void deleteTask(int index) {"},{"lineNumber":80,"author":{"gitId":"zikunz"},"content":"        tasks.remove(index);"},{"lineNumber":81,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":83,"author":{"gitId":"zikunz"},"content":"    public static void displayList() {"},{"lineNumber":84,"author":{"gitId":"zikunz"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":85,"author":{"gitId":"zikunz"},"content":"            System.out.println(SpaceAndLine.SHORT_SPACE + (i + 1) + \".\" + tasks.get(i));"},{"lineNumber":86,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":89,"author":{"gitId":"zikunz"},"content":"    public String toPrintedFormat() {"},{"lineNumber":90,"author":{"gitId":"zikunz"},"content":"        String text \u003d \"\";"},{"lineNumber":91,"author":{"gitId":"zikunz"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":92,"author":{"gitId":"zikunz"},"content":"            text \u003d text + getTask(i).toPrintedFormat() + \"\\n\";"},{"lineNumber":93,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"zikunz"},"content":"        return text;"},{"lineNumber":95,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":97,"author":{"gitId":"zikunz"},"content":"    public void findKeyword(String keyword) {"},{"lineNumber":98,"author":{"gitId":"zikunz"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":99,"author":{"gitId":"zikunz"},"content":"            String description \u003d getTask(i).getDescription();"},{"lineNumber":100,"author":{"gitId":"zikunz"},"content":"            if (keywordMatched(keyword, description)) {"},{"lineNumber":101,"author":{"gitId":"zikunz"},"content":"                matchedTasks.add(getTask(i));"},{"lineNumber":102,"author":{"gitId":"zikunz"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":106,"author":{"gitId":"zikunz"},"content":"    private boolean keywordMatched(String keyword, String description) {"},{"lineNumber":107,"author":{"gitId":"zikunz"},"content":"        if (description.contains(keyword)) {"},{"lineNumber":108,"author":{"gitId":"zikunz"},"content":"            return true;"},{"lineNumber":109,"author":{"gitId":"zikunz"},"content":"        } else {"},{"lineNumber":110,"author":{"gitId":"zikunz"},"content":"            return false;"},{"lineNumber":111,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":114,"author":{"gitId":"zikunz"},"content":"    public void DisplayMatchedTasks() {"},{"lineNumber":115,"author":{"gitId":"zikunz"},"content":"        for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {"},{"lineNumber":116,"author":{"gitId":"zikunz"},"content":"            System.out.println(SpaceAndLine.SHORT_SPACE + (i + 1) + \".\" + matchedTasks.get(i));"},{"lineNumber":117,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":119}},{"path":"src/main/java/Duke/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zikunz"},"content":"package Duke.Ui;"},{"lineNumber":2,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":3,"author":{"gitId":"zikunz"},"content":"import Duke.Constant.SpaceAndLine;"},{"lineNumber":4,"author":{"gitId":"zikunz"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":5,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":6,"author":{"gitId":"zikunz"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":8,"author":{"gitId":"zikunz"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"zikunz"},"content":" * Ui receives all inputs from the user before producing outputs show to him / her."},{"lineNumber":10,"author":{"gitId":"zikunz"},"content":" */"},{"lineNumber":11,"author":{"gitId":"zikunz"},"content":"public class Ui {"},{"lineNumber":12,"author":{"gitId":"zikunz"},"content":"    private final Scanner userInput;"},{"lineNumber":13,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":14,"author":{"gitId":"zikunz"},"content":"    public Ui() {"},{"lineNumber":15,"author":{"gitId":"zikunz"},"content":"        userInput \u003d new Scanner(System.in);"},{"lineNumber":16,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":18,"author":{"gitId":"zikunz"},"content":"    public void printMessage(String message) {"},{"lineNumber":19,"author":{"gitId":"zikunz"},"content":"        System.out.println(message);"},{"lineNumber":20,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":22,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"zikunz"},"content":"     * Prints the message telling the user how many tasks are there."},{"lineNumber":24,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"zikunz"},"content":"     * @param numberOfTasks number of tasks"},{"lineNumber":26,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"zikunz"},"content":"    public static void printNumberOfTasksMessage(int numberOfTasks) {"},{"lineNumber":28,"author":{"gitId":"zikunz"},"content":"        if (numberOfTasks \u003d\u003d 0 || numberOfTasks \u003d\u003d 1) {"},{"lineNumber":29,"author":{"gitId":"zikunz"},"content":"            System.out.println(SpaceAndLine.SHORT_SPACE + \"Now you have \" + numberOfTasks + \" task in the list.\");"},{"lineNumber":30,"author":{"gitId":"zikunz"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"zikunz"},"content":"            System.out.println(SpaceAndLine.SHORT_SPACE + \"Now you have \" + numberOfTasks + \" tasks in the list.\");"},{"lineNumber":32,"author":{"gitId":"zikunz"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":35,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"zikunz"},"content":"     * Reads the user input line by line."},{"lineNumber":37,"author":{"gitId":"zikunz"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"zikunz"},"content":"     * @return the string of the line."},{"lineNumber":39,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"zikunz"},"content":"    public String readCommand() {"},{"lineNumber":41,"author":{"gitId":"zikunz"},"content":"        return userInput.nextLine();"},{"lineNumber":42,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":44,"author":{"gitId":"zikunz"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"zikunz"},"content":"     * Prints all tasks to the user."},{"lineNumber":46,"author":{"gitId":"zikunz"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"zikunz"},"content":"    public void printTasks(TaskList tasks) {"},{"lineNumber":48,"author":{"gitId":"zikunz"},"content":"        tasks.displayList();"},{"lineNumber":49,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"zikunz"},"content":""},{"lineNumber":51,"author":{"gitId":"zikunz"},"content":"    public void printMatchedTasks(TaskList matchedTasks) {"},{"lineNumber":52,"author":{"gitId":"zikunz"},"content":"        matchedTasks.DisplayMatchedTasks();"},{"lineNumber":53,"author":{"gitId":"zikunz"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"zikunz"},"content":"}"}],"authorContributionMap":{"zikunz":54}}]
