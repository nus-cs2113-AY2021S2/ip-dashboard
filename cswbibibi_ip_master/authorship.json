[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"# Duke User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"1. Add tasks to the list"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"   1. todo task"},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"   1. deadline task"},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"   1. event task"},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"2. View all tasks in the list"},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"3. Mark task as done "},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"4. Store updated task list in duke.txt"},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"5. Delete task"},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"6. Search keyword in all tasks"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"### Feature 1"},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"Enter \"todo **task description**\" to add a todo task in the task list\\"},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"Enter \"deadline **task description** /by **date time**\" to add deadline task in the task list\\"},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"Enter \"event **task description** /at **date time**\" to add a todo task\\"},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"User can input anything to replace the **bold** command part"},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"### Feature 2"},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"Enter \"list\" to view all tasks in the current task list"},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"### Feature 3"},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"Enter \"done **task number**\" to mark that task as done\\"},{"lineNumber":23,"author":{"gitId":"cswbibibi"},"content":"User can input any task number to replace the **bold** command part"},{"lineNumber":24,"author":{"gitId":"cswbibibi"},"content":"### Feature 4"},{"lineNumber":25,"author":{"gitId":"cswbibibi"},"content":"This feature is achieved automatically without user command"},{"lineNumber":26,"author":{"gitId":"cswbibibi"},"content":"### Feature 5"},{"lineNumber":27,"author":{"gitId":"cswbibibi"},"content":"Enter \"delete **task number**\"\\"},{"lineNumber":28,"author":{"gitId":"cswbibibi"},"content":"User can input any task number to replace the **bold** command part"},{"lineNumber":29,"author":{"gitId":"cswbibibi"},"content":"### Feature 6"},{"lineNumber":30,"author":{"gitId":"cswbibibi"},"content":"Enter \"find **task description**\"\\"},{"lineNumber":31,"author":{"gitId":"cswbibibi"},"content":"User can input anything they want to search to replace the **bold** command part"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"cswbibibi"},"content":"### `Keyword` - todo / deadline / event"},{"lineNumber":36,"author":{"gitId":"cswbibibi"},"content":"Add Todo, Deadline and Event task in the task list"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"cswbibibi"},"content":"Example of usage: \\"},{"lineNumber":39,"author":{"gitId":"cswbibibi"},"content":"`todo study`\\"},{"lineNumber":40,"author":{"gitId":"cswbibibi"},"content":"`deadline homework /by Monday`\\"},{"lineNumber":41,"author":{"gitId":"cswbibibi"},"content":"`event meeting /at tmr 2pm`"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"cswbibibi"},"content":"Expected outcome:\\"},{"lineNumber":44,"author":{"gitId":"cswbibibi"},"content":"`Got it. I\u0027ve added this task:`\\"},{"lineNumber":45,"author":{"gitId":"cswbibibi"},"content":"`[T][✘] study`\\"},{"lineNumber":46,"author":{"gitId":"cswbibibi"},"content":"`Now you have 1 tasks in the list.`"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"cswbibibi"},"content":"`Got it. I\u0027ve added this task:`\\"},{"lineNumber":49,"author":{"gitId":"cswbibibi"},"content":"`[D][✘] homework (by: Monday)`\\"},{"lineNumber":50,"author":{"gitId":"cswbibibi"},"content":"`Now you have 2 tasks in the list. `"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"cswbibibi"},"content":"`Got it. I\u0027ve added this task:`\\"},{"lineNumber":53,"author":{"gitId":"cswbibibi"},"content":"`[E][✘] meeting (at: tmr 2pm)`\\"},{"lineNumber":54,"author":{"gitId":"cswbibibi"},"content":"`Now you have 3 tasks in the list. `"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"cswbibibi"},"content":"### `Keyword` - done "},{"lineNumber":57,"author":{"gitId":"cswbibibi"},"content":"Mark certain task as done"},{"lineNumber":58,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":59,"author":{"gitId":"cswbibibi"},"content":"Example of usage: \\"},{"lineNumber":60,"author":{"gitId":"cswbibibi"},"content":"`done 1`"},{"lineNumber":61,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":62,"author":{"gitId":"cswbibibi"},"content":"Expected outcome:\\"},{"lineNumber":63,"author":{"gitId":"cswbibibi"},"content":"`Nice! I\u0027ve marked this task as done:`\\"},{"lineNumber":64,"author":{"gitId":"cswbibibi"},"content":"`[T][✓] study`"},{"lineNumber":65,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":66,"author":{"gitId":"cswbibibi"},"content":"### `Keyword` - delete"},{"lineNumber":67,"author":{"gitId":"cswbibibi"},"content":"delete certain task in the list"},{"lineNumber":68,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":69,"author":{"gitId":"cswbibibi"},"content":"Example of usage: \\"},{"lineNumber":70,"author":{"gitId":"cswbibibi"},"content":"`delete 2`"},{"lineNumber":71,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":72,"author":{"gitId":"cswbibibi"},"content":"Expected outcome:\\"},{"lineNumber":73,"author":{"gitId":"cswbibibi"},"content":"`Noted. I\u0027ve removed this task:`\\"},{"lineNumber":74,"author":{"gitId":"cswbibibi"},"content":"`[D][✘] homework (by: Monday)`\\"},{"lineNumber":75,"author":{"gitId":"cswbibibi"},"content":"`Now you have 2 tasks in the list.`"},{"lineNumber":76,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":77,"author":{"gitId":"cswbibibi"},"content":"### `Keyword` - list"},{"lineNumber":78,"author":{"gitId":"cswbibibi"},"content":"view the updated task list"},{"lineNumber":79,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":80,"author":{"gitId":"cswbibibi"},"content":"Example of usage: \\"},{"lineNumber":81,"author":{"gitId":"cswbibibi"},"content":"`list`"},{"lineNumber":82,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":83,"author":{"gitId":"cswbibibi"},"content":"Expected outcome:\\"},{"lineNumber":84,"author":{"gitId":"cswbibibi"},"content":"`1.[T][✓] study`\\"},{"lineNumber":85,"author":{"gitId":"cswbibibi"},"content":"`2.[E][✘] meeting (at: tmr 2pm)`"},{"lineNumber":86,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":87,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":88,"author":{"gitId":"cswbibibi"},"content":"### `Keyword` - find"},{"lineNumber":89,"author":{"gitId":"cswbibibi"},"content":"find tasks in the list that matches the keyword"},{"lineNumber":90,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":91,"author":{"gitId":"cswbibibi"},"content":"Example of usage: \\"},{"lineNumber":92,"author":{"gitId":"cswbibibi"},"content":"`find tmr`"},{"lineNumber":93,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":94,"author":{"gitId":"cswbibibi"},"content":"Expected outcome:\\"},{"lineNumber":95,"author":{"gitId":"cswbibibi"},"content":"`Here are the matching tasks in your list:`\\"},{"lineNumber":96,"author":{"gitId":"cswbibibi"},"content":"`2.[E][✘] meeting (at: tmr 2pm))`"}],"authorContributionMap":{"cswbibibi":84,"-":12}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"E | 0 | shuwen attend CS2113 Lecture |  Friday 19 Feb 2021 from 4-6pm"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"T | 1 | eat"},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"D | 1 | hw |  TMW"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"E | 0 | meeting |  today"},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"T | 1 | eat"},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"D | 1 | hw |  Monday"},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"E | 0 | meeting |  today"},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"T | 0 | hehe"},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"D | 0 | assesment |  Next Monday"},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"E | 0 | meeting |  weekend"},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"T | 0 | deat"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"T | 0 | sleep"},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"T | 0 | tuition"},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"T | 1 | eat"},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"T | 1 | eat"},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"T | 1 | eat"},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"D | 1 | hw |  Monday"},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"E | 0 | meeting |  tmr"},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 1"},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 2"},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 3"},{"lineNumber":23,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 4"},{"lineNumber":24,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 1"},{"lineNumber":25,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 2"},{"lineNumber":26,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 3"},{"lineNumber":27,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 4"},{"lineNumber":28,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 5"},{"lineNumber":29,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 1"},{"lineNumber":30,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 2"},{"lineNumber":31,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 3"},{"lineNumber":32,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 4"},{"lineNumber":33,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 1"},{"lineNumber":34,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 2"},{"lineNumber":35,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 3"},{"lineNumber":36,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 4"},{"lineNumber":37,"author":{"gitId":"cswbibibi"},"content":"D | 1 | hw |  monday"},{"lineNumber":38,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 1"},{"lineNumber":39,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 2"},{"lineNumber":40,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 3"},{"lineNumber":41,"author":{"gitId":"cswbibibi"},"content":"T | 1 | eat"},{"lineNumber":42,"author":{"gitId":"cswbibibi"},"content":"T | 0 | sleep"},{"lineNumber":43,"author":{"gitId":"cswbibibi"},"content":"D | 1 | Assesment |  24th Feb"},{"lineNumber":44,"author":{"gitId":"cswbibibi"},"content":"E | 1 | assignment 1 |  Next Wednesday"},{"lineNumber":45,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 1"},{"lineNumber":46,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 2"},{"lineNumber":47,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 4"},{"lineNumber":48,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 5"},{"lineNumber":49,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 1"},{"lineNumber":50,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 2"},{"lineNumber":51,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 3"},{"lineNumber":52,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 4"},{"lineNumber":53,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 1"},{"lineNumber":54,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 2"},{"lineNumber":55,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 3"},{"lineNumber":56,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 1"},{"lineNumber":57,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 2"},{"lineNumber":58,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 3"},{"lineNumber":59,"author":{"gitId":"cswbibibi"},"content":"T | 0 | 4"},{"lineNumber":60,"author":{"gitId":"cswbibibi"},"content":"D | 0 | hw |  2021-02-24"},{"lineNumber":61,"author":{"gitId":"cswbibibi"},"content":"T | 1 | eat"},{"lineNumber":62,"author":{"gitId":"cswbibibi"},"content":"D | 0 | hw |  monday"},{"lineNumber":63,"author":{"gitId":"cswbibibi"},"content":"D | 0 | hw | Mondsy"},{"lineNumber":64,"author":{"gitId":"cswbibibi"},"content":"E | 0 | hw | monday"},{"lineNumber":65,"author":{"gitId":"cswbibibi"},"content":"D | 0 | sw | Monday"},{"lineNumber":66,"author":{"gitId":"cswbibibi"},"content":"D | 0 | assessment | 2021-02-24"},{"lineNumber":67,"author":{"gitId":"cswbibibi"},"content":"D | 0 | aw | 2021-02-24"},{"lineNumber":68,"author":{"gitId":"cswbibibi"},"content":"D | 0 | hw | 2020-02-24"},{"lineNumber":69,"author":{"gitId":"cswbibibi"},"content":"D | 0 | hw | 2020-02-24"},{"lineNumber":70,"author":{"gitId":"cswbibibi"},"content":"D | 0 | assessment | 2�? 24 2021"},{"lineNumber":71,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read"},{"lineNumber":72,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read book"},{"lineNumber":73,"author":{"gitId":"cswbibibi"},"content":"D | 0 | buy book | tmr"},{"lineNumber":74,"author":{"gitId":"cswbibibi"},"content":"E | 0 | book eicket | tmr"},{"lineNumber":75,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read"},{"lineNumber":76,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read book"},{"lineNumber":77,"author":{"gitId":"cswbibibi"},"content":"D | 0 | by book | moday"},{"lineNumber":78,"author":{"gitId":"cswbibibi"},"content":"E | 0 | book ticket | monsy"},{"lineNumber":79,"author":{"gitId":"cswbibibi"},"content":"T | 1 | eat"},{"lineNumber":80,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read"},{"lineNumber":81,"author":{"gitId":"cswbibibi"},"content":"T | 0 | book"},{"lineNumber":82,"author":{"gitId":"cswbibibi"},"content":"D | 0 | book hw | monrda"},{"lineNumber":83,"author":{"gitId":"cswbibibi"},"content":"E | 0 | ticket book | sunday"},{"lineNumber":84,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read"},{"lineNumber":85,"author":{"gitId":"cswbibibi"},"content":"T | 0 | book readk"},{"lineNumber":86,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read book"},{"lineNumber":87,"author":{"gitId":"cswbibibi"},"content":"T | 0 | book"},{"lineNumber":88,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read"},{"lineNumber":89,"author":{"gitId":"cswbibibi"},"content":"T | 0 | book read"},{"lineNumber":90,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read"},{"lineNumber":91,"author":{"gitId":"cswbibibi"},"content":"T | 0 | book"},{"lineNumber":92,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read book"},{"lineNumber":93,"author":{"gitId":"cswbibibi"},"content":"T | 0 | read"},{"lineNumber":94,"author":{"gitId":"cswbibibi"},"content":"D | 0 | book read | Monday"},{"lineNumber":95,"author":{"gitId":"cswbibibi"},"content":"E | 0 | booking | sundaing"},{"lineNumber":96,"author":{"gitId":"cswbibibi"},"content":"T | 1 | eat"}],"authorContributionMap":{"cswbibibi":96}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"import java.io.*;"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"import duke.Deadline;"},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"import duke.Task;"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"import duke.Event;"},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"import duke.Todo;"},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"     * final integer to represents various index to indicate task name and deadline/event date"},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"    static final int BY_AT_INDEX \u003d 4;"},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"    static final int FIND_INDEX \u003d 5;"},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"    static final int TODO_INDEX \u003d 5;"},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"    static final int EVENT_INDEX \u003d 6;"},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"    static final int DELETE_INDEX \u003d 7;"},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"    static final int DEADLINE_INDEX \u003d 9;"},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"    static final int MAX_NO_OF_TASKS \u003d 100;"},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":23,"author":{"gitId":"cswbibibi"},"content":"    private Ui ui;"},{"lineNumber":24,"author":{"gitId":"cswbibibi"},"content":"    private TaskList tl;"},{"lineNumber":25,"author":{"gitId":"cswbibibi"},"content":"    private Storage storage;"},{"lineNumber":26,"author":{"gitId":"cswbibibi"},"content":"    final private static Task[] tasks \u003d new Task[MAX_NO_OF_TASKS];"},{"lineNumber":27,"author":{"gitId":"cswbibibi"},"content":"    final private static String filePath \u003d \"C:/Users/XPS/Desktop/duke.txt\";"},{"lineNumber":28,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":29,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"cswbibibi"},"content":"     * Initiate the Ui Class and Storage Class with the default filepath"},{"lineNumber":31,"author":{"gitId":"cswbibibi"},"content":"     * @param filePath an default filepath to store duke.txt"},{"lineNumber":32,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"cswbibibi"},"content":"    public Duke(String filePath) {"},{"lineNumber":34,"author":{"gitId":"cswbibibi"},"content":"        ui \u003d new Ui();"},{"lineNumber":35,"author":{"gitId":"cswbibibi"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":36,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":38,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"cswbibibi"},"content":"     * main method to run Duke, use if else statement to differentiate different"},{"lineNumber":40,"author":{"gitId":"cswbibibi"},"content":"     * command entered by the user"},{"lineNumber":41,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"cswbibibi"},"content":"    public void run() {"},{"lineNumber":43,"author":{"gitId":"cswbibibi"},"content":"        int index \u003d 0;"},{"lineNumber":44,"author":{"gitId":"cswbibibi"},"content":"        String task;"},{"lineNumber":45,"author":{"gitId":"cswbibibi"},"content":"        Scanner b \u003d new Scanner(System.in);"},{"lineNumber":46,"author":{"gitId":"cswbibibi"},"content":"        task \u003d b.nextLine();"},{"lineNumber":47,"author":{"gitId":"cswbibibi"},"content":"        while (true) {"},{"lineNumber":48,"author":{"gitId":"cswbibibi"},"content":"            if (task.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":49,"author":{"gitId":"cswbibibi"},"content":"                ui.showExitMessage();"},{"lineNumber":50,"author":{"gitId":"cswbibibi"},"content":"                break;"},{"lineNumber":51,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.equals(\"list\")) {"},{"lineNumber":52,"author":{"gitId":"cswbibibi"},"content":"                tl.showAllTasks(index, tasks);"},{"lineNumber":53,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.contains(\"done\")) {"},{"lineNumber":54,"author":{"gitId":"cswbibibi"},"content":"                try {"},{"lineNumber":55,"author":{"gitId":"cswbibibi"},"content":"                    String taskNo \u003d task.substring(TODO_INDEX);"},{"lineNumber":56,"author":{"gitId":"cswbibibi"},"content":"                    int newTaskNo \u003d Parser.parseInt(taskNo);"},{"lineNumber":57,"author":{"gitId":"cswbibibi"},"content":"                    tasks[newTaskNo - 1].setTaskStatus(true);"},{"lineNumber":58,"author":{"gitId":"cswbibibi"},"content":"                    tl.markAsDone(newTaskNo-1, tasks);"},{"lineNumber":59,"author":{"gitId":"cswbibibi"},"content":"                    storage.replaceTXT(tasks[newTaskNo - 1].getDescription());"},{"lineNumber":60,"author":{"gitId":"cswbibibi"},"content":"                } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":61,"author":{"gitId":"cswbibibi"},"content":"                    ui.doneIndexError();"},{"lineNumber":62,"author":{"gitId":"cswbibibi"},"content":"                } catch (IOException e) {"},{"lineNumber":63,"author":{"gitId":"cswbibibi"},"content":"                    ui.exceptionMessage();"},{"lineNumber":64,"author":{"gitId":"cswbibibi"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.contains(\"todo\")) {"},{"lineNumber":66,"author":{"gitId":"cswbibibi"},"content":"                try {"},{"lineNumber":67,"author":{"gitId":"cswbibibi"},"content":"                    String taskName \u003d task.substring(TODO_INDEX);"},{"lineNumber":68,"author":{"gitId":"cswbibibi"},"content":"                    tasks[index] \u003d new Todo(taskName, \u0027T\u0027);"},{"lineNumber":69,"author":{"gitId":"cswbibibi"},"content":"                    index \u003d tl.addTaskMessage(index, tasks[index]);"},{"lineNumber":70,"author":{"gitId":"cswbibibi"},"content":"                    String textToAppend \u003d \"T | 0 | \" + taskName;"},{"lineNumber":71,"author":{"gitId":"cswbibibi"},"content":"                    storage.appendToFile(filePath, textToAppend);"},{"lineNumber":72,"author":{"gitId":"cswbibibi"},"content":"                } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":73,"author":{"gitId":"cswbibibi"},"content":"                    ui.todoIndexError();"},{"lineNumber":74,"author":{"gitId":"cswbibibi"},"content":"                } catch (FileNotFoundException e) {"},{"lineNumber":75,"author":{"gitId":"cswbibibi"},"content":"                    ui.fileErrorMessage();"},{"lineNumber":76,"author":{"gitId":"cswbibibi"},"content":"                } catch (IOException e) {"},{"lineNumber":77,"author":{"gitId":"cswbibibi"},"content":"                    ui.exceptionMessage();"},{"lineNumber":78,"author":{"gitId":"cswbibibi"},"content":"                    e.getMessage();"},{"lineNumber":79,"author":{"gitId":"cswbibibi"},"content":"                }"},{"lineNumber":80,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.contains(\"deadline\")) {"},{"lineNumber":81,"author":{"gitId":"cswbibibi"},"content":"                try {"},{"lineNumber":82,"author":{"gitId":"cswbibibi"},"content":"                    int slashSign \u003d task.indexOf(\"/\");"},{"lineNumber":83,"author":{"gitId":"cswbibibi"},"content":"                    String ddlTaskName \u003d task.substring(DEADLINE_INDEX, slashSign - 1);"},{"lineNumber":84,"author":{"gitId":"cswbibibi"},"content":"                    String by \u003d task.substring(slashSign + BY_AT_INDEX);"},{"lineNumber":85,"author":{"gitId":"cswbibibi"},"content":"                    if (by.contains(\"-\")) { Parser.parseDate(by); }"},{"lineNumber":86,"author":{"gitId":"cswbibibi"},"content":"                    tasks[index] \u003d new Deadline(ddlTaskName, \u0027D\u0027, by);"},{"lineNumber":87,"author":{"gitId":"cswbibibi"},"content":"                    index \u003d tl.addTaskMessage(index, tasks[index]);"},{"lineNumber":88,"author":{"gitId":"cswbibibi"},"content":"                    String textToAppend \u003d \"D | 0 | \" + ddlTaskName + \" | \" + by;"},{"lineNumber":89,"author":{"gitId":"cswbibibi"},"content":"                    Storage.appendToFile(filePath, textToAppend);"},{"lineNumber":90,"author":{"gitId":"cswbibibi"},"content":"                } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":91,"author":{"gitId":"cswbibibi"},"content":"                    ui.deadlineIndexError();"},{"lineNumber":92,"author":{"gitId":"cswbibibi"},"content":"                } catch (FileNotFoundException e) {"},{"lineNumber":93,"author":{"gitId":"cswbibibi"},"content":"                    ui.fileErrorMessage();"},{"lineNumber":94,"author":{"gitId":"cswbibibi"},"content":"                } catch (IOException e) {"},{"lineNumber":95,"author":{"gitId":"cswbibibi"},"content":"                    ui.exceptionMessage();"},{"lineNumber":96,"author":{"gitId":"cswbibibi"},"content":"                    e.getMessage();"},{"lineNumber":97,"author":{"gitId":"cswbibibi"},"content":"                }"},{"lineNumber":98,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.contains(\"event\")) {"},{"lineNumber":99,"author":{"gitId":"cswbibibi"},"content":"                try {"},{"lineNumber":100,"author":{"gitId":"cswbibibi"},"content":"                    int slashSign \u003d task.indexOf(\"/\");"},{"lineNumber":101,"author":{"gitId":"cswbibibi"},"content":"                    String eventTaskName \u003d task.substring(EVENT_INDEX, slashSign - 1);"},{"lineNumber":102,"author":{"gitId":"cswbibibi"},"content":"                    String at \u003d task.substring(slashSign + BY_AT_INDEX);"},{"lineNumber":103,"author":{"gitId":"cswbibibi"},"content":"                    tasks[index] \u003d new Event(eventTaskName, \u0027E\u0027, at);"},{"lineNumber":104,"author":{"gitId":"cswbibibi"},"content":"                    index \u003d tl.addTaskMessage(index, tasks[index]);"},{"lineNumber":105,"author":{"gitId":"cswbibibi"},"content":"                    String textToAppend \u003d \"E | 0 | \" + eventTaskName + \" | \" + at;"},{"lineNumber":106,"author":{"gitId":"cswbibibi"},"content":"                    storage.appendToFile(filePath, textToAppend);"},{"lineNumber":107,"author":{"gitId":"cswbibibi"},"content":"                } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":108,"author":{"gitId":"cswbibibi"},"content":"                    ui.eventIndexError();"},{"lineNumber":109,"author":{"gitId":"cswbibibi"},"content":"                } catch (FileNotFoundException e) {"},{"lineNumber":110,"author":{"gitId":"cswbibibi"},"content":"                    ui.fileErrorMessage();"},{"lineNumber":111,"author":{"gitId":"cswbibibi"},"content":"                } catch (IOException e) {"},{"lineNumber":112,"author":{"gitId":"cswbibibi"},"content":"                    ui.exceptionMessage();"},{"lineNumber":113,"author":{"gitId":"cswbibibi"},"content":"                    e.getMessage();"},{"lineNumber":114,"author":{"gitId":"cswbibibi"},"content":"                }"},{"lineNumber":115,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.contains(\"delete\")) {"},{"lineNumber":116,"author":{"gitId":"cswbibibi"},"content":"                try {"},{"lineNumber":117,"author":{"gitId":"cswbibibi"},"content":"                    int deleteIndex \u003d Parser.parseInt(task.substring(DELETE_INDEX));"},{"lineNumber":118,"author":{"gitId":"cswbibibi"},"content":"                    Task delete_task \u003d tasks[deleteIndex - 1];"},{"lineNumber":119,"author":{"gitId":"cswbibibi"},"content":"                    tl.removeTaskMessage(index, delete_task);"},{"lineNumber":120,"author":{"gitId":"cswbibibi"},"content":"                    tl.removeTask(deleteIndex, index, tasks);"},{"lineNumber":121,"author":{"gitId":"cswbibibi"},"content":"                }  catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":122,"author":{"gitId":"cswbibibi"},"content":"                    ui.deleteIndexError();"},{"lineNumber":123,"author":{"gitId":"cswbibibi"},"content":"                }"},{"lineNumber":124,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.contains(\"find\")) {"},{"lineNumber":125,"author":{"gitId":"cswbibibi"},"content":"                String findTask \u003d task.substring(FIND_INDEX);"},{"lineNumber":126,"author":{"gitId":"cswbibibi"},"content":"                tl.findTasks(index, findTask, tasks);"},{"lineNumber":127,"author":{"gitId":"cswbibibi"},"content":"            } else { ui.showErrorMessage(); }"},{"lineNumber":128,"author":{"gitId":"cswbibibi"},"content":"            task \u003d b.nextLine();"},{"lineNumber":129,"author":{"gitId":"cswbibibi"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":132,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"cswbibibi"},"content":"     * main method to run the program, initiate a new Duke Class with the specified"},{"lineNumber":134,"author":{"gitId":"cswbibibi"},"content":"     * filepath to store task data and run the program"},{"lineNumber":135,"author":{"gitId":"cswbibibi"},"content":"     * @param args contains the command-line arguments passed to the Duke program upon invocation"},{"lineNumber":136,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":138,"author":{"gitId":"cswbibibi"},"content":"        new Duke(filePath).run();"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}"},{"lineNumber":141,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":142,"author":{"gitId":"cswbibibi"},"content":""}],"authorContributionMap":{"cswbibibi":138,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"public class DukeException extends Exception{"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"}"}],"authorContributionMap":{"cswbibibi":4}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"     * Returns an integer that can be used as task index"},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"     * @param input input string that user entered"},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"     * @return the integer index that user entered"},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"    protected static int parseInt(String input) {"},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"        return Integer.parseInt(input);"},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"    protected static void parseDate(String by) {"},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"        LocalDate date \u003d LocalDate.parse(by);"},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"        by \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"}"}],"authorContributionMap":{"cswbibibi":18}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"import java.io.*;"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"import java.io.File;"},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"public class Storage {"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"    private final String filePath;"},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"     * Constructor for Storage Class"},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"     * @param filePath default filepath to store duke.txt file"},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"    public Storage(String filePath) {"},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"     * Crate a FileWriter object that appends to the file Duke.txt"},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"     * with the specific task description each time a new task is created"},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"     * @param filePath the default filepath for duke.txt"},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"     * @param textToAppend the description of the new task added"},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"     * @throws IOException throw the IOException when the program successfully opened"},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"     * the file but is unable to read the duke.txt file"},{"lineNumber":23,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"cswbibibi"},"content":"    protected static void appendToFile(String filePath, String textToAppend) throws IOException {"},{"lineNumber":25,"author":{"gitId":"cswbibibi"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);"},{"lineNumber":26,"author":{"gitId":"cswbibibi"},"content":"        fw.write(textToAppend + \"\\n\");"},{"lineNumber":27,"author":{"gitId":"cswbibibi"},"content":"        fw.close();"},{"lineNumber":28,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":30,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"cswbibibi"},"content":"     * Read the content of existing file and replace task status of a task from 0 to 1 when it\u0027s mark as done."},{"lineNumber":32,"author":{"gitId":"cswbibibi"},"content":"     * Finally crate a FileWriter object to rewrite the file with replaced text and unchanged texts."},{"lineNumber":33,"author":{"gitId":"cswbibibi"},"content":"     * @param name The description of the task that is marked as done"},{"lineNumber":34,"author":{"gitId":"cswbibibi"},"content":"     * @throws IOException throw the IOException when the program successfully opened"},{"lineNumber":35,"author":{"gitId":"cswbibibi"},"content":"     * the file, but is unable to read the duke.txt file"},{"lineNumber":36,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"cswbibibi"},"content":"    public static void replaceTXT(String name) throws IOException {"},{"lineNumber":38,"author":{"gitId":"cswbibibi"},"content":"        File file \u003d new File(\"C:/Users/XPS/Desktop/duke.txt\");"},{"lineNumber":39,"author":{"gitId":"cswbibibi"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(file));"},{"lineNumber":40,"author":{"gitId":"cswbibibi"},"content":"        String line \u003d \"\";"},{"lineNumber":41,"author":{"gitId":"cswbibibi"},"content":"        String oldText \u003d \"\";"},{"lineNumber":42,"author":{"gitId":"cswbibibi"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {"},{"lineNumber":43,"author":{"gitId":"cswbibibi"},"content":"            oldText +\u003d line + \"\\r\\n\";"},{"lineNumber":44,"author":{"gitId":"cswbibibi"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"cswbibibi"},"content":"        reader.close();"},{"lineNumber":46,"author":{"gitId":"cswbibibi"},"content":"        String replacedText \u003d oldText.replace(\"0 | \" + name , \"1 | \" + name);"},{"lineNumber":47,"author":{"gitId":"cswbibibi"},"content":"        FileWriter writer \u003d new FileWriter(\"C:/Users/XPS/Desktop/duke.txt\");"},{"lineNumber":48,"author":{"gitId":"cswbibibi"},"content":"        writer.write(replacedText);"},{"lineNumber":49,"author":{"gitId":"cswbibibi"},"content":"        writer.close();"},{"lineNumber":50,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":52,"author":{"gitId":"cswbibibi"},"content":"}"}],"authorContributionMap":{"cswbibibi":52}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"import duke.Task;"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"public class TaskList {"},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"     * Delete certain task when user use the delete command"},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"     * @param deleteIndex the task index that user entered to be deleted"},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"     * @param index the maximum index number of the current task list"},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"     * @param tasks the original task list that the user has inputted so far"},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"    protected static void removeTask(int deleteIndex, int index, Task[] tasks) {"},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"        if (deleteIndex - 1 \u003d\u003d index) {"},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"        } else {"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"            for (int i \u003d deleteIndex - 1; i \u003c\u003d index; i++) {"},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"                tasks[i] \u003d tasks[i + 1];"},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"            }"},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"        index -\u003d 1;"},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"     * Return message to inform the user that the task has been deleted"},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"     * message include task description, task type and its by/at date time"},{"lineNumber":23,"author":{"gitId":"cswbibibi"},"content":"     * and the remaining number of tasks in the list"},{"lineNumber":24,"author":{"gitId":"cswbibibi"},"content":"     * @param index the maximum index number of the current task list"},{"lineNumber":25,"author":{"gitId":"cswbibibi"},"content":"     * @param tasks the original task list that the user has inputted so far"},{"lineNumber":26,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"cswbibibi"},"content":"    protected static void removeTaskMessage(int index, Task tasks) {"},{"lineNumber":28,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":29,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"  \" + tasks.toString());"},{"lineNumber":30,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Now you have \" + (index - 1) + \" tasks in the list.\");"},{"lineNumber":31,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":33,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"cswbibibi"},"content":"     * Send message to inform the user that the task has been added"},{"lineNumber":35,"author":{"gitId":"cswbibibi"},"content":"     * message include task description, task type and its by/at date time"},{"lineNumber":36,"author":{"gitId":"cswbibibi"},"content":"     * and update the number of tasks in the list."},{"lineNumber":37,"author":{"gitId":"cswbibibi"},"content":"     * @param index the maximum index number of the current task list"},{"lineNumber":38,"author":{"gitId":"cswbibibi"},"content":"     * @param tasks the original task list that the user has inputted so far"},{"lineNumber":39,"author":{"gitId":"cswbibibi"},"content":"     * @return updated index to track the number of tasks in the task list"},{"lineNumber":40,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"cswbibibi"},"content":"    protected static int addTaskMessage(int index, Task tasks) {"},{"lineNumber":42,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":43,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\" \" + tasks.toString());"},{"lineNumber":44,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Now you have \" + (index + 1) + \" tasks in the list. \");"},{"lineNumber":45,"author":{"gitId":"cswbibibi"},"content":"        index++;"},{"lineNumber":46,"author":{"gitId":"cswbibibi"},"content":"        return index;"},{"lineNumber":47,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":49,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"cswbibibi"},"content":"     * Send message to inform the user that the task has been marked as done"},{"lineNumber":51,"author":{"gitId":"cswbibibi"},"content":"     * @param index the index of the task to be marked as done"},{"lineNumber":52,"author":{"gitId":"cswbibibi"},"content":"     * @param tasks the original task list that the user has inputted so far"},{"lineNumber":53,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"cswbibibi"},"content":"    protected static void markAsDone(int index, Task[] tasks) {"},{"lineNumber":55,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":56,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(tasks[index].toString());"},{"lineNumber":57,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":59,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"cswbibibi"},"content":"     * Print all tasks in the task list"},{"lineNumber":61,"author":{"gitId":"cswbibibi"},"content":"     * @param index the maximum index number of the current task list"},{"lineNumber":62,"author":{"gitId":"cswbibibi"},"content":"     * @param tasks the original task list that the user has inputted so far"},{"lineNumber":63,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"cswbibibi"},"content":"    protected static void showAllTasks(int index, Task[] tasks) {"},{"lineNumber":65,"author":{"gitId":"cswbibibi"},"content":"        try {"},{"lineNumber":66,"author":{"gitId":"cswbibibi"},"content":"            for (int i \u003d 0; i \u003c index; i++) {"},{"lineNumber":67,"author":{"gitId":"cswbibibi"},"content":"                System.out.println((i + 1) + \".\" + tasks[i].toString());"},{"lineNumber":68,"author":{"gitId":"cswbibibi"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"cswbibibi"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":70,"author":{"gitId":"cswbibibi"},"content":"            // do not show error"},{"lineNumber":71,"author":{"gitId":"cswbibibi"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":74,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"cswbibibi"},"content":"     * Print all the tasks that matched the keyword that user has entered"},{"lineNumber":76,"author":{"gitId":"cswbibibi"},"content":"     * @param index the maximum index number of the current task list"},{"lineNumber":77,"author":{"gitId":"cswbibibi"},"content":"     * @param keyword user input to be found in all tasks in the list"},{"lineNumber":78,"author":{"gitId":"cswbibibi"},"content":"     * @param tasks the original task list that the use has inputted so far"},{"lineNumber":79,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"cswbibibi"},"content":"    protected static void findTasks(int index, String keyword, Task[] tasks) {"},{"lineNumber":81,"author":{"gitId":"cswbibibi"},"content":"        try {"},{"lineNumber":82,"author":{"gitId":"cswbibibi"},"content":"            System.out.println(\"Here are the matching tasks in your list: \");"},{"lineNumber":83,"author":{"gitId":"cswbibibi"},"content":"            for (int i \u003d 0; i \u003c index; i++) {"},{"lineNumber":84,"author":{"gitId":"cswbibibi"},"content":"                if (tasks[i].toString().contains(keyword)) {"},{"lineNumber":85,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println((i + 1) + \".\" + tasks[i].toString());"},{"lineNumber":86,"author":{"gitId":"cswbibibi"},"content":"                }"},{"lineNumber":87,"author":{"gitId":"cswbibibi"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"cswbibibi"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":89,"author":{"gitId":"cswbibibi"},"content":"            //"},{"lineNumber":90,"author":{"gitId":"cswbibibi"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"cswbibibi"},"content":"}"}],"authorContributionMap":{"cswbibibi":92}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"public class Ui {"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"    public Ui() {"},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Here are the things that i can do: \");"},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Add task to your list - todo, deadline and event tasks\");"},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"list: View all tasks in the list\");"},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"done: Done task and delete: Delete task\");"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"bye: quite Duke\");"},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Please enter the task you want to add in to the task list.\");"},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"     * send Good-bye message when user exit the program"},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"    public void showExitMessage() {"},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Thank you for using Duke function, \" +"},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"                \"Hope to see you again :)\");"},{"lineNumber":23,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":25,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"cswbibibi"},"content":"     * Send error message when user entered invalid command"},{"lineNumber":27,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"cswbibibi"},"content":"    public void showErrorMessage() {"},{"lineNumber":29,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\":( OOps!! I\u0027m sorry, \" +"},{"lineNumber":30,"author":{"gitId":"cswbibibi"},"content":"                \"but i don\u0027t know what that means...\");"},{"lineNumber":31,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":33,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"cswbibibi"},"content":"     * Send StringIndexOutOfBoundsException error message when todo task is added without description"},{"lineNumber":35,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"cswbibibi"},"content":"    public void todoIndexError() {"},{"lineNumber":37,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\":( OOps!! The description of a\" +"},{"lineNumber":38,"author":{"gitId":"cswbibibi"},"content":"                \"todo cannot be empty\");"},{"lineNumber":39,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":41,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"cswbibibi"},"content":"     * Send StringIndexOutOfBoundsException error message when event task is added without description"},{"lineNumber":43,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"cswbibibi"},"content":"    public void eventIndexError() {"},{"lineNumber":45,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\":( OOps!! The description of a\" +"},{"lineNumber":46,"author":{"gitId":"cswbibibi"},"content":"                \"event cannot be empty\");"},{"lineNumber":47,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":49,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"cswbibibi"},"content":"     * Send StringIndexOutOfBoundsException error message when deadline task is added without description"},{"lineNumber":51,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"cswbibibi"},"content":"    public void deadlineIndexError() {"},{"lineNumber":53,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\":( OOps!! The description of a\" +"},{"lineNumber":54,"author":{"gitId":"cswbibibi"},"content":"                \"deadline cannot be empty\");"},{"lineNumber":55,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":57,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"cswbibibi"},"content":"     * Send StringIndexOutOfBoundsException error message when user didn\u0027t enter which task index"},{"lineNumber":59,"author":{"gitId":"cswbibibi"},"content":"     * to be mark as done"},{"lineNumber":60,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"cswbibibi"},"content":"    public void doneIndexError() {"},{"lineNumber":62,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\":( OOps!! The index of task to be done\" +"},{"lineNumber":63,"author":{"gitId":"cswbibibi"},"content":"                \"cannot be empty\");"},{"lineNumber":64,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":66,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"cswbibibi"},"content":"     * Send StringIndexOutOfBoundsException error message when user didn\u0027t enter which task index"},{"lineNumber":68,"author":{"gitId":"cswbibibi"},"content":"     * to be deleted"},{"lineNumber":69,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"cswbibibi"},"content":"    public void deleteIndexError() {"},{"lineNumber":71,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\":( OOps!! The index of task to be deleted\" +"},{"lineNumber":72,"author":{"gitId":"cswbibibi"},"content":"                \"cannot be empty\");"},{"lineNumber":73,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":75,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"cswbibibi"},"content":"     * Send FileNotFoundException error message whe user add a task"},{"lineNumber":77,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"cswbibibi"},"content":"    public void fileErrorMessage() {"},{"lineNumber":79,"author":{"gitId":"cswbibibi"},"content":"          System.out.println(\":( OOps!! The file you are looking for does\"+"},{"lineNumber":80,"author":{"gitId":"cswbibibi"},"content":"                  \"not exist...\");"},{"lineNumber":81,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":83,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"cswbibibi"},"content":"     * Send IOException error message when when the program successfully opened"},{"lineNumber":85,"author":{"gitId":"cswbibibi"},"content":"     * the file, but is unable to read the duke.txt file"},{"lineNumber":86,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"cswbibibi"},"content":"    public void exceptionMessage() {"},{"lineNumber":88,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\":( OOps!! Something is wrong when reading the file...\");"},{"lineNumber":89,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"cswbibibi"},"content":"}"}],"authorContributionMap":{"cswbibibi":90}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"public class Deadline extends Task{"},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"    String by;"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"    public Deadline(String description, char taskType, String by) {"},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"    public String getBy() {return by;}"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"     * Returns the complete deadline task Description in task list"},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"     * @return the task type, status and description in the task list"},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"}"}],"authorContributionMap":{"cswbibibi":22}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"public class Event extends Task{"},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"    public Event(String description, char taskType, String at){"},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"        this.at \u003d at;"},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"    public String getAt() {return at;}"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"     * Returns the complete Event task description in task list"},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"     * @return the task type, status and description in the task list"},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"}"}],"authorContributionMap":{"cswbibibi":22}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"    protected char taskType;"},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"    private static char NOT_DONE_SYMBOL \u003d \u0027\\u2718\u0027;"},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"    private static char DONE_SYMBOL \u003d \u0027\\u2713\u0027;"},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"    public Task(String description) {"},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"        this.description \u003d description;"},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"        this.isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"    public void setDescription(String description){"},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"        this.description \u003d description;"},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"    public String getDescription() {return description;}"},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"     * Returns the complete task description in task list"},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"     * @return the task status and description in the task list"},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"cswbibibi"},"content":"    public String toString(){"},{"lineNumber":24,"author":{"gitId":"cswbibibi"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":25,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":27,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"cswbibibi"},"content":"     * Returns the task status icon, either ✓(Done\u003dTrue) or X(Not Done\u003dFalse)"},{"lineNumber":29,"author":{"gitId":"cswbibibi"},"content":"     * @return the respective status icon"},{"lineNumber":30,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"cswbibibi"},"content":"    public char getStatusIcon() {"},{"lineNumber":32,"author":{"gitId":"cswbibibi"},"content":"        return (isDone ? DONE_SYMBOL : NOT_DONE_SYMBOL); //return Yes or No symbols"},{"lineNumber":33,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"cswbibibi"},"content":"    public void setTaskType(char taskType){"},{"lineNumber":35,"author":{"gitId":"cswbibibi"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":36,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"cswbibibi"},"content":"    public char getTaskType(){"},{"lineNumber":38,"author":{"gitId":"cswbibibi"},"content":"        return taskType;"},{"lineNumber":39,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":41,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"cswbibibi"},"content":"     * Set the task status"},{"lineNumber":43,"author":{"gitId":"cswbibibi"},"content":"     * @param Done set the done status of a task to be true/false"},{"lineNumber":44,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"cswbibibi"},"content":"    public void setTaskStatus(boolean Done){"},{"lineNumber":46,"author":{"gitId":"cswbibibi"},"content":"        this.isDone \u003d Done;"},{"lineNumber":47,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"cswbibibi"},"content":"    public boolean getTaskStatus(){"},{"lineNumber":49,"author":{"gitId":"cswbibibi"},"content":"        return isDone;"},{"lineNumber":50,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"cswbibibi"},"content":"    public String getFileStatus(){return (isDone ? \"1\" : \"0\"); }"},{"lineNumber":52,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":53,"author":{"gitId":"cswbibibi"},"content":"}"}],"authorContributionMap":{"cswbibibi":53}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"public class Todo extends Task{"},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"    public Todo(String description, char taskType) {"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"     * Returns the complete Todo task description in task list"},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"     * @return the task type, status and description in the task list"},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"}"}],"authorContributionMap":{"cswbibibi":17}}]
