[{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"T | 1 | sleep"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"T | 0 | eat"},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"D | 1 | hw |  Monday"},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"E | 1 | meeting |  tmr"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"T | 0 | ffff"},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"T | 0 | gggg"},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"E | 1 | lfine |  wkpegg"},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"T | 0 | eat"},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"T | 1 | sleep"},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"D | 0 | hw |  Monday"},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"E | 0 | meeting |  2pm"},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"T | 0 | eat"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"T | 0 | sleep"}],"authorContributionMap":{"cswbibibi":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"import java.io.*;"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"import duke.Deadline;"},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"import duke.Task;"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"import duke.Event;"},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"import duke.Todo;"},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"    static final int MAX_NO_OF_TASKS \u003d 100;"},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Here are the things that i can do: \");"},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Add task to your list - todo, deadline and event tasks\");"},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"list: View all tasks in the list\");"},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"done: Done task and delete: Delete task\");"},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"bye: quite Duke\");"},{"lineNumber":23,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":24,"author":{"gitId":"cswbibibi"},"content":"        String filePath \u003d \"C:/Users/XPS/Desktop/Uni drives me crazy/Y2S2/NUS exchange/CS2113 Software Engineering/ip/duke.txt\";"},{"lineNumber":25,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Please enter the task you want to add in to the task list.\");"},{"lineNumber":26,"author":{"gitId":"cswbibibi"},"content":"        Task[] tasks \u003d new Task[MAX_NO_OF_TASKS];"},{"lineNumber":27,"author":{"gitId":"cswbibibi"},"content":"        int index \u003d 0;"},{"lineNumber":28,"author":{"gitId":"cswbibibi"},"content":"        String task;"},{"lineNumber":29,"author":{"gitId":"cswbibibi"},"content":"        Scanner b \u003d new Scanner(System.in);"},{"lineNumber":30,"author":{"gitId":"cswbibibi"},"content":"        task \u003d b.nextLine();"},{"lineNumber":31,"author":{"gitId":"cswbibibi"},"content":"        while (true) {"},{"lineNumber":32,"author":{"gitId":"cswbibibi"},"content":"            if (task.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":33,"author":{"gitId":"cswbibibi"},"content":"                System.out.println(\"Thank you for using Tasks function, \" +"},{"lineNumber":34,"author":{"gitId":"cswbibibi"},"content":"                        \"you can now choose other function :)\");"},{"lineNumber":35,"author":{"gitId":"cswbibibi"},"content":"                break;"},{"lineNumber":36,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.equals(\"list\")) {"},{"lineNumber":37,"author":{"gitId":"cswbibibi"},"content":"                for (int i \u003d 0; i \u003c index; i++) {"},{"lineNumber":38,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println((i + 1) + \".\" + tasks[i].toString());"},{"lineNumber":39,"author":{"gitId":"cswbibibi"},"content":"                }"},{"lineNumber":40,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.contains(\"done\")) {"},{"lineNumber":41,"author":{"gitId":"cswbibibi"},"content":"                try {"},{"lineNumber":42,"author":{"gitId":"cswbibibi"},"content":"                    String taskNo \u003d task.substring(5);"},{"lineNumber":43,"author":{"gitId":"cswbibibi"},"content":"                    int new_taskNo \u003d Integer.parseInt(taskNo);"},{"lineNumber":44,"author":{"gitId":"cswbibibi"},"content":"                    tasks[new_taskNo - 1].setTaskStatus(true);"},{"lineNumber":45,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":46,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println(tasks[new_taskNo - 1].toString());"},{"lineNumber":47,"author":{"gitId":"cswbibibi"},"content":"                    replaceTXT(tasks[new_taskNo - 1].getDescription());"},{"lineNumber":48,"author":{"gitId":"cswbibibi"},"content":"                } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":49,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println(\":( OOps!! The number of task to be done\" +"},{"lineNumber":50,"author":{"gitId":"cswbibibi"},"content":"                            \"cannot be empty\");"},{"lineNumber":51,"author":{"gitId":"cswbibibi"},"content":"                } catch (IOException e) {"},{"lineNumber":52,"author":{"gitId":"cswbibibi"},"content":"                    //handle exception"},{"lineNumber":53,"author":{"gitId":"cswbibibi"},"content":"                }"},{"lineNumber":54,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.contains(\"todo\")) {"},{"lineNumber":55,"author":{"gitId":"cswbibibi"},"content":"                try {"},{"lineNumber":56,"author":{"gitId":"cswbibibi"},"content":"                    String taskName \u003d task.substring(5);"},{"lineNumber":57,"author":{"gitId":"cswbibibi"},"content":"                    tasks[index] \u003d new Todo(taskName, \u0027T\u0027);"},{"lineNumber":58,"author":{"gitId":"cswbibibi"},"content":"                    index \u003d addTaskMessage(index, tasks[index]);"},{"lineNumber":59,"author":{"gitId":"cswbibibi"},"content":"                    String textToAppend \u003d \"T | 0 | \" + taskName;"},{"lineNumber":60,"author":{"gitId":"cswbibibi"},"content":"                    appendToFile(filePath, textToAppend);"},{"lineNumber":61,"author":{"gitId":"cswbibibi"},"content":"                } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":62,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println(\":( OOps!! The description of a\" +"},{"lineNumber":63,"author":{"gitId":"cswbibibi"},"content":"                            \"todo cannot be empty\");"},{"lineNumber":64,"author":{"gitId":"cswbibibi"},"content":"                } catch (FileNotFoundException e) {"},{"lineNumber":65,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println(\":( OOps!! The file you are looking for does not exist.\");"},{"lineNumber":66,"author":{"gitId":"cswbibibi"},"content":"                } catch (IOException e) {"},{"lineNumber":67,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println(\":( OOps!! Something went wrong: \" + e.getMessage());"},{"lineNumber":68,"author":{"gitId":"cswbibibi"},"content":"                }"},{"lineNumber":69,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.contains(\"deadline\")) {"},{"lineNumber":70,"author":{"gitId":"cswbibibi"},"content":"                try {"},{"lineNumber":71,"author":{"gitId":"cswbibibi"},"content":"                    int slash_sign \u003d task.indexOf(\"/\");"},{"lineNumber":72,"author":{"gitId":"cswbibibi"},"content":"                    String ddl_taskName \u003d task.substring(9, slash_sign - 1);"},{"lineNumber":73,"author":{"gitId":"cswbibibi"},"content":"                    String by \u003d task.substring(slash_sign + 3);"},{"lineNumber":74,"author":{"gitId":"cswbibibi"},"content":"                    tasks[index] \u003d new Deadline(ddl_taskName, \u0027D\u0027, by);"},{"lineNumber":75,"author":{"gitId":"cswbibibi"},"content":"                    index \u003d addTaskMessage(index, tasks[index]);"},{"lineNumber":76,"author":{"gitId":"cswbibibi"},"content":"                    String textToAppend \u003d \"D | 0 | \" + ddl_taskName + \" | \" + by;"},{"lineNumber":77,"author":{"gitId":"cswbibibi"},"content":"                    appendToFile(filePath, textToAppend);"},{"lineNumber":78,"author":{"gitId":"cswbibibi"},"content":"                } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":79,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println(\":( OOps!! The description of a\" +"},{"lineNumber":80,"author":{"gitId":"cswbibibi"},"content":"                            \"deadline cannot be empty\");"},{"lineNumber":81,"author":{"gitId":"cswbibibi"},"content":"                } catch (FileNotFoundException e) {"},{"lineNumber":82,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println(\":( OOps!! The file you are looking for does not exist.\");"},{"lineNumber":83,"author":{"gitId":"cswbibibi"},"content":"                } catch (IOException e) {"},{"lineNumber":84,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println(\":( OOps!! Something went wrong: \" + e.getMessage());"},{"lineNumber":85,"author":{"gitId":"cswbibibi"},"content":"                }"},{"lineNumber":86,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.contains(\"event\")) {"},{"lineNumber":87,"author":{"gitId":"cswbibibi"},"content":"                try {"},{"lineNumber":88,"author":{"gitId":"cswbibibi"},"content":"                    int slash_sign \u003d task.indexOf(\"/\");"},{"lineNumber":89,"author":{"gitId":"cswbibibi"},"content":"                    String event_taskName \u003d task.substring(6, slash_sign - 1);"},{"lineNumber":90,"author":{"gitId":"cswbibibi"},"content":"                    String at \u003d task.substring(slash_sign + 3);"},{"lineNumber":91,"author":{"gitId":"cswbibibi"},"content":"                    tasks[index] \u003d new Event(event_taskName, \u0027E\u0027, at);"},{"lineNumber":92,"author":{"gitId":"cswbibibi"},"content":"                    index \u003d addTaskMessage(index, tasks[index]);"},{"lineNumber":93,"author":{"gitId":"cswbibibi"},"content":"                    String textToAppend \u003d \"E | 0 | \" + event_taskName + \" | \" + at;"},{"lineNumber":94,"author":{"gitId":"cswbibibi"},"content":"                    appendToFile(filePath, textToAppend);"},{"lineNumber":95,"author":{"gitId":"cswbibibi"},"content":"                } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":96,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println(\":( OOps!! The description of a\" +"},{"lineNumber":97,"author":{"gitId":"cswbibibi"},"content":"                            \"event cannot be empty\");"},{"lineNumber":98,"author":{"gitId":"cswbibibi"},"content":"                } catch (FileNotFoundException e) {"},{"lineNumber":99,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println(\":( OOps!! The file you are looking for does not exist.\");"},{"lineNumber":100,"author":{"gitId":"cswbibibi"},"content":"                } catch (IOException e) {"},{"lineNumber":101,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println(\":( OOps!! Something went wrong: \" + e.getMessage());"},{"lineNumber":102,"author":{"gitId":"cswbibibi"},"content":"                }"},{"lineNumber":103,"author":{"gitId":"cswbibibi"},"content":"            } else if (task.contains(\"delete\")) {"},{"lineNumber":104,"author":{"gitId":"cswbibibi"},"content":"                try {"},{"lineNumber":105,"author":{"gitId":"cswbibibi"},"content":"                    int delete_index \u003d Integer.parseInt(task.substring(7));"},{"lineNumber":106,"author":{"gitId":"cswbibibi"},"content":"                    Task delete_task \u003d tasks[delete_index - 1];"},{"lineNumber":107,"author":{"gitId":"cswbibibi"},"content":"                    removeTaskMessage(delete_task);"},{"lineNumber":108,"author":{"gitId":"cswbibibi"},"content":"                    index -\u003d 1;"},{"lineNumber":109,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println(\"Now you have \" + index + \" tasks in the list.\");"},{"lineNumber":110,"author":{"gitId":"cswbibibi"},"content":"                }  catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":111,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println(\":( OOps!! The description of a\" +"},{"lineNumber":112,"author":{"gitId":"cswbibibi"},"content":"                            \"todo cannot be empty\"); }"},{"lineNumber":113,"author":{"gitId":"cswbibibi"},"content":"            } else {"},{"lineNumber":114,"author":{"gitId":"cswbibibi"},"content":"                System.out.println(\":( OOps!! I\u0027m sorry, \" +"},{"lineNumber":115,"author":{"gitId":"cswbibibi"},"content":"                        \"but i don\u0027t know what that means...\");"},{"lineNumber":116,"author":{"gitId":"cswbibibi"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"cswbibibi"},"content":"            task \u003d b.nextLine();"},{"lineNumber":118,"author":{"gitId":"cswbibibi"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"cswbibibi"},"content":"    private static void removeTaskMessage(Task delete_task) {"},{"lineNumber":121,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":122,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"  \" + delete_task.toString());"},{"lineNumber":123,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":125,"author":{"gitId":"cswbibibi"},"content":"    private static int addTaskMessage(int index, Task tasks) {"},{"lineNumber":126,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":127,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\" \" + tasks.toString());"},{"lineNumber":128,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Now you have \" + (index + 1) + \" tasks in the list. \");"},{"lineNumber":129,"author":{"gitId":"cswbibibi"},"content":"        index++;"},{"lineNumber":130,"author":{"gitId":"cswbibibi"},"content":"        return index;"},{"lineNumber":131,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":133,"author":{"gitId":"cswbibibi"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException {"},{"lineNumber":134,"author":{"gitId":"cswbibibi"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);"},{"lineNumber":135,"author":{"gitId":"cswbibibi"},"content":"        fw.write(textToAppend + \"\\n\");"},{"lineNumber":136,"author":{"gitId":"cswbibibi"},"content":"        fw.close();"},{"lineNumber":137,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"cswbibibi"},"content":"    public static void replaceTXT(String name) throws IOException {"},{"lineNumber":139,"author":{"gitId":"cswbibibi"},"content":"        File file \u003d new File(\"C:/Users/XPS/Desktop/Uni drives me crazy/Y2S2/NUS exchange/CS2113 Software Engineering/ip/duke.txt\");"},{"lineNumber":140,"author":{"gitId":"cswbibibi"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(file));"},{"lineNumber":141,"author":{"gitId":"cswbibibi"},"content":"        String line \u003d \"\";"},{"lineNumber":142,"author":{"gitId":"cswbibibi"},"content":"        String oldtext \u003d \"\";"},{"lineNumber":143,"author":{"gitId":"cswbibibi"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {"},{"lineNumber":144,"author":{"gitId":"cswbibibi"},"content":"            oldtext +\u003d line + \"\\r\\n\";"},{"lineNumber":145,"author":{"gitId":"cswbibibi"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"cswbibibi"},"content":"        reader.close();"},{"lineNumber":147,"author":{"gitId":"cswbibibi"},"content":"        String replacedtext \u003d oldtext.replace(\"0 | \" + name , \"1 | \" + name);"},{"lineNumber":148,"author":{"gitId":"cswbibibi"},"content":"        FileWriter writer \u003d new FileWriter(\"C:/Users/XPS/Desktop/Uni drives me crazy/Y2S2/NUS exchange/CS2113 Software Engineering/ip/duke.txt\");"},{"lineNumber":149,"author":{"gitId":"cswbibibi"},"content":"        writer.write(replacedtext);"},{"lineNumber":150,"author":{"gitId":"cswbibibi"},"content":"        writer.close();"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}"},{"lineNumber":153,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":154,"author":{"gitId":"cswbibibi"},"content":""}],"authorContributionMap":{"cswbibibi":144,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"public class DukeException extends Exception{"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"}"}],"authorContributionMap":{"cswbibibi":4}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"public class Deadline extends Task{"},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"    String by;"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"    public Deadline(String description, char taskType, String by) {"},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"    public String getBy() {return by;}"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";"},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"}"}],"authorContributionMap":{"cswbibibi":17}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"public class Event extends Task{"},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"    public Event(String description, char taskType, String at){"},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"        this.at \u003d at;"},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"    public String getAt() {return at;}"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"        return \"[E]\" + super.toString() + \" (at:\" + at + \")\";"},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"}"}],"authorContributionMap":{"cswbibibi":17}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"    protected char taskType;"},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"    public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"    public void setDescription(String description){"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"    public String getDescription() {return description;}"},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"    public String toString(){"},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"    public String getStatusIcon() {"},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"        return (isDone ? \"✓\" : \"✘\"); //return ✓ or X symbols"},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"    public void setTaskType(char taskType){"},{"lineNumber":23,"author":{"gitId":"cswbibibi"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":24,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"cswbibibi"},"content":"    public char getTaskType(){"},{"lineNumber":26,"author":{"gitId":"cswbibibi"},"content":"        return taskType;"},{"lineNumber":27,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"cswbibibi"},"content":"    public void setTaskStatus(boolean Done){"},{"lineNumber":29,"author":{"gitId":"cswbibibi"},"content":"        this.isDone \u003d Done;"},{"lineNumber":30,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"cswbibibi"},"content":"    public boolean getTaskStatus(){"},{"lineNumber":32,"author":{"gitId":"cswbibibi"},"content":"        return isDone;"},{"lineNumber":33,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"cswbibibi"},"content":"    public String getFileStatus(){return (isDone ? \"1\" : \"0\"); }"},{"lineNumber":35,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":36,"author":{"gitId":"cswbibibi"},"content":"}"}],"authorContributionMap":{"cswbibibi":36}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"public class Todo extends Task{"},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"    public Todo(String description, char taskType) {"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"}"}],"authorContributionMap":{"cswbibibi":13}}]
