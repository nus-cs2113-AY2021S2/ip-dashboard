[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"cswbibibi":9,"-":17}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"public class Deadline extends Task{"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"    String by;"},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"        super(description, \u0027D\u0027);"},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"}"}],"authorContributionMap":{"cswbibibi":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"import java.util.Arrays;"},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"    static final int MAX_NO_OF_TASKS \u003d 100;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Here are the things that i can do: \");"},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"1. Echo\");"},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"2. Add task to your list \u0026 Mark task as done\");"},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"-1: Quit Duke\");"},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"        boolean run \u003d true;"},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"        while (run){"},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"            int choice \u003d in.nextInt();"},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"            switch (choice) {"},{"lineNumber":23,"author":{"gitId":"cswbibibi"},"content":"                case 1:"},{"lineNumber":24,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println(\"Please input something and I will repeat it back to you:)\");"},{"lineNumber":25,"author":{"gitId":"cswbibibi"},"content":"                    Scanner a \u003d new Scanner(System.in);"},{"lineNumber":26,"author":{"gitId":"cswbibibi"},"content":"                    String sentence \u003d a.nextLine();"},{"lineNumber":27,"author":{"gitId":"cswbibibi"},"content":"                    while (true) {"},{"lineNumber":28,"author":{"gitId":"cswbibibi"},"content":"                        if (sentence.equalsIgnoreCase(\"bye\")){"},{"lineNumber":29,"author":{"gitId":"cswbibibi"},"content":"                            break;"},{"lineNumber":30,"author":{"gitId":"cswbibibi"},"content":"                        }"},{"lineNumber":31,"author":{"gitId":"cswbibibi"},"content":"                        else{"},{"lineNumber":32,"author":{"gitId":"cswbibibi"},"content":"                            System.out.println(sentence);"},{"lineNumber":33,"author":{"gitId":"cswbibibi"},"content":"                            sentence \u003d a.nextLine();"},{"lineNumber":34,"author":{"gitId":"cswbibibi"},"content":"                        }"},{"lineNumber":35,"author":{"gitId":"cswbibibi"},"content":"                    }"},{"lineNumber":36,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println(\"Thank you for using echo, you can now choose other function:)\");"},{"lineNumber":37,"author":{"gitId":"cswbibibi"},"content":"                    break;"},{"lineNumber":38,"author":{"gitId":"cswbibibi"},"content":"                case 2:"},{"lineNumber":39,"author":{"gitId":"cswbibibi"},"content":"                    System.out.println(\"Please enter the task you want to add in to the task list.\");"},{"lineNumber":40,"author":{"gitId":"cswbibibi"},"content":"                    Task[] tasks \u003d new Task[MAX_NO_OF_TASKS];"},{"lineNumber":41,"author":{"gitId":"cswbibibi"},"content":"                    int index \u003d 0;"},{"lineNumber":42,"author":{"gitId":"cswbibibi"},"content":"                    String task;"},{"lineNumber":43,"author":{"gitId":"cswbibibi"},"content":"                    Scanner b \u003d new Scanner(System.in);"},{"lineNumber":44,"author":{"gitId":"cswbibibi"},"content":"                    task \u003d b.nextLine();"},{"lineNumber":45,"author":{"gitId":"cswbibibi"},"content":"                    while (true) {"},{"lineNumber":46,"author":{"gitId":"cswbibibi"},"content":"                        if (task.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":47,"author":{"gitId":"cswbibibi"},"content":"                            System.out.println(\"Bye, hope to see you again again soon! You can now choose other function:)\");"},{"lineNumber":48,"author":{"gitId":"cswbibibi"},"content":"                            break;"},{"lineNumber":49,"author":{"gitId":"cswbibibi"},"content":"                        }"},{"lineNumber":50,"author":{"gitId":"cswbibibi"},"content":"                        else if (task.equals(\"list\")) {"},{"lineNumber":51,"author":{"gitId":"cswbibibi"},"content":"                            for (int i\u003d0; i\u003cindex; i++){"},{"lineNumber":52,"author":{"gitId":"cswbibibi"},"content":"                                System.out.println((i+1) + \".\" + tasks[i].toString());"},{"lineNumber":53,"author":{"gitId":"cswbibibi"},"content":"                            }"},{"lineNumber":54,"author":{"gitId":"cswbibibi"},"content":"                        }"},{"lineNumber":55,"author":{"gitId":"cswbibibi"},"content":"                        else if (task.contains(\"done\")) {"},{"lineNumber":56,"author":{"gitId":"cswbibibi"},"content":"                            String taskNo \u003d task.substring(task.length()-1);"},{"lineNumber":57,"author":{"gitId":"cswbibibi"},"content":"                            int new_taskNo \u003d Integer.parseInt(taskNo);"},{"lineNumber":58,"author":{"gitId":"cswbibibi"},"content":"                            tasks[new_taskNo-1].setTaskStatus(true);"},{"lineNumber":59,"author":{"gitId":"cswbibibi"},"content":"                            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":60,"author":{"gitId":"cswbibibi"},"content":"                            System.out.println(tasks[new_taskNo-1].toString());"},{"lineNumber":61,"author":{"gitId":"cswbibibi"},"content":"                        }"},{"lineNumber":62,"author":{"gitId":"cswbibibi"},"content":"                        else if (task.contains(\"todo\")){"},{"lineNumber":63,"author":{"gitId":"cswbibibi"},"content":"                            String taskName \u003d task.substring(5);"},{"lineNumber":64,"author":{"gitId":"cswbibibi"},"content":"                            tasks[index] \u003d new Todo(taskName);"},{"lineNumber":65,"author":{"gitId":"cswbibibi"},"content":"                            index \u003d addTaskMessage(index, tasks[index]);"},{"lineNumber":66,"author":{"gitId":"cswbibibi"},"content":"                        }"},{"lineNumber":67,"author":{"gitId":"cswbibibi"},"content":"                        else if (task.contains(\"deadline\")){"},{"lineNumber":68,"author":{"gitId":"cswbibibi"},"content":"                            int slash \u003d task.indexOf(\"/\");"},{"lineNumber":69,"author":{"gitId":"cswbibibi"},"content":"                            String taskName1 \u003d task.substring(9, slash-1);"},{"lineNumber":70,"author":{"gitId":"cswbibibi"},"content":"                            String by \u003d task.substring(slash+3);"},{"lineNumber":71,"author":{"gitId":"cswbibibi"},"content":"                            tasks[index] \u003d new Deadline(taskName1, by);"},{"lineNumber":72,"author":{"gitId":"cswbibibi"},"content":"                            index \u003d addTaskMessage(index, tasks[index]);"},{"lineNumber":73,"author":{"gitId":"cswbibibi"},"content":"                        }"},{"lineNumber":74,"author":{"gitId":"cswbibibi"},"content":"                        else if (task.contains(\"event\")) {"},{"lineNumber":75,"author":{"gitId":"cswbibibi"},"content":"                            int slash_sign \u003d task.indexOf(\"/\");"},{"lineNumber":76,"author":{"gitId":"cswbibibi"},"content":"                            String taskName2 \u003d task.substring(6, slash_sign - 1);"},{"lineNumber":77,"author":{"gitId":"cswbibibi"},"content":"                            String at \u003d task.substring(slash_sign + 3);"},{"lineNumber":78,"author":{"gitId":"cswbibibi"},"content":"                            tasks[index] \u003d new Event(taskName2, at);"},{"lineNumber":79,"author":{"gitId":"cswbibibi"},"content":"                            index \u003d addTaskMessage(index, tasks[index]);"},{"lineNumber":80,"author":{"gitId":"cswbibibi"},"content":"                        }"},{"lineNumber":81,"author":{"gitId":"cswbibibi"},"content":"                        task \u003d b.nextLine();"},{"lineNumber":82,"author":{"gitId":"cswbibibi"},"content":"                        }"},{"lineNumber":83,"author":{"gitId":"cswbibibi"},"content":"                case -1:"},{"lineNumber":84,"author":{"gitId":"cswbibibi"},"content":"                    run \u003d false;"},{"lineNumber":85,"author":{"gitId":"cswbibibi"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"cswbibibi"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"cswbibibi"},"content":"    private static int addTaskMessage(int index, Task tasks) {"},{"lineNumber":89,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":90,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(tasks.toString());"},{"lineNumber":91,"author":{"gitId":"cswbibibi"},"content":"        index++;"},{"lineNumber":92,"author":{"gitId":"cswbibibi"},"content":"        System.out.println(\"Now you have \" + index + \" tasks in the list. \");"},{"lineNumber":93,"author":{"gitId":"cswbibibi"},"content":"        return index;"},{"lineNumber":94,"author":{"gitId":"cswbibibi"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }"}],"authorContributionMap":{"cswbibibi":85,"-":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"public class Event extends Task{"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"    protected String at;"},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"    public Event(String description, String at){"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":"        super(description, \u0027E\u0027);"},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"        this.at \u003d at;"},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"        return \"[E]\" + super.toString() + \" (at:\" + at + \")\";"},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"}"}],"authorContributionMap":{"cswbibibi":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"    protected char taskType;"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"    public Task(String description, char taskType) {"},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"        this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"cswbibibi"},"content":"    public void setDescription(String description){"},{"lineNumber":12,"author":{"gitId":"cswbibibi"},"content":"        this.description \u003d description;"},{"lineNumber":13,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"cswbibibi"},"content":"    public String toString(){"},{"lineNumber":15,"author":{"gitId":"cswbibibi"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":16,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"cswbibibi"},"content":"    public String getStatusIcon() {"},{"lineNumber":18,"author":{"gitId":"cswbibibi"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":19,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"cswbibibi"},"content":"    public void setTaskType(char taskType){"},{"lineNumber":21,"author":{"gitId":"cswbibibi"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":22,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"cswbibibi"},"content":"    public char getTaskType(){"},{"lineNumber":24,"author":{"gitId":"cswbibibi"},"content":"        return taskType;"},{"lineNumber":25,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"cswbibibi"},"content":"    public void setTaskStatus(boolean isDone){"},{"lineNumber":27,"author":{"gitId":"cswbibibi"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":28,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"cswbibibi"},"content":"    public boolean getTaskStatus(){"},{"lineNumber":30,"author":{"gitId":"cswbibibi"},"content":"        return isDone;"},{"lineNumber":31,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":33,"author":{"gitId":"cswbibibi"},"content":"}"}],"authorContributionMap":{"cswbibibi":33}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cswbibibi"},"content":"public class Todo extends Task{"},{"lineNumber":2,"author":{"gitId":"cswbibibi"},"content":"    public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"cswbibibi"},"content":"        super(description, \u0027T\u0027);"},{"lineNumber":4,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"cswbibibi"},"content":""},{"lineNumber":6,"author":{"gitId":"cswbibibi"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"cswbibibi"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"cswbibibi"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":9,"author":{"gitId":"cswbibibi"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"cswbibibi"},"content":"}"}],"authorContributionMap":{"cswbibibi":10}}]
