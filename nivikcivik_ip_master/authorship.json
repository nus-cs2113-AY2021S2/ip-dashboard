[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"# \u003cspan style\u003d\"color:#2975C7  \"\u003eDuke Project\u003c/span\u003e"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":"### \u003cspan style\u003d\"color:teal\"\u003eBy Nikhila Ravikumar\u003c/span\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"nivikcivik"},"content":"This project is named after the Java mascot _Duke_."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"nivikcivik"},"content":"Given below are instructions on how to use it."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"toc\"\u003e\u003c/a\u003e"},{"lineNumber":9,"author":{"gitId":"nivikcivik"},"content":"## Table of Contents: "},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"nivikcivik"},"content":"1. [Quick Start](#Quickstart)"},{"lineNumber":12,"author":{"gitId":"nivikcivik"},"content":"   1. [Setting up .JAR file](#settingup)"},{"lineNumber":13,"author":{"gitId":"nivikcivik"},"content":"1. [Running **Duke**](#runningduke)"},{"lineNumber":14,"author":{"gitId":"nivikcivik"},"content":"   1. [Command: `hello`, `hey`, `hi`](#hello)"},{"lineNumber":15,"author":{"gitId":"nivikcivik"},"content":"   1. [Command: `help`](#help)"},{"lineNumber":16,"author":{"gitId":"nivikcivik"},"content":"   1. [Command: `todo \u003ctaskname\u003e`](#todo)"},{"lineNumber":17,"author":{"gitId":"nivikcivik"},"content":"   1. [Command: `deadline \u003ctaskname\u003e /by YYYY-MM-DD HH:MM`](#deadline)"},{"lineNumber":18,"author":{"gitId":"nivikcivik"},"content":"   1. [Command: `event \u003ctaskname\u003e /at YYYY-MM-DD HH:MM`](#event)"},{"lineNumber":19,"author":{"gitId":"nivikcivik"},"content":"   1. [Command: `done \u003ctask number\u003e`](#done)"},{"lineNumber":20,"author":{"gitId":"nivikcivik"},"content":"   1. [Command: `delete \u003ctask number\u003e`](#delete)"},{"lineNumber":21,"author":{"gitId":"nivikcivik"},"content":"   1. [Command: `save`](#save)"},{"lineNumber":22,"author":{"gitId":"nivikcivik"},"content":"   1. [Command: `list`](#list)"},{"lineNumber":23,"author":{"gitId":"nivikcivik"},"content":"   1. [Command: `find \u003ccommon keyword in tasks\u003e`](#find)"},{"lineNumber":24,"author":{"gitId":"nivikcivik"},"content":"   1. [Command: `print type \u003ctask type\u003e`](#printtype)"},{"lineNumber":25,"author":{"gitId":"nivikcivik"},"content":"   1. [Command: `print date \u003ctask date YYYY-MM-DD\u003e`](#printdate)"},{"lineNumber":26,"author":{"gitId":"nivikcivik"},"content":"   1. [Command: `print filepath`](#printfilepath)"},{"lineNumber":27,"author":{"gitId":"nivikcivik"},"content":"   1. [Command: `bye`](#bye)"},{"lineNumber":28,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":29,"author":{"gitId":"nivikcivik"},"content":"1. [Saving of tasks list locally on your computer](#saving)"},{"lineNumber":30,"author":{"gitId":"nivikcivik"},"content":"1. [Editing of tasks list locally on your computer](#editing)"},{"lineNumber":31,"author":{"gitId":"nivikcivik"},"content":"1. [Frequently Asked Questions (FAQ)](#faq)"},{"lineNumber":32,"author":{"gitId":"nivikcivik"},"content":"1. [Command Summary](#summary)"},{"lineNumber":33,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"quickstart\"\u003e\u003c/a\u003e"},{"lineNumber":36,"author":{"gitId":"nivikcivik"},"content":"### Quick Start"},{"lineNumber":37,"author":{"gitId":"nivikcivik"},"content":"The **Duke** app is run via a file with the extension `.jar`. The following steps will help you set up **Duke** to run on your computer."},{"lineNumber":38,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"settingup\"\u003e\u003c/a\u003e"},{"lineNumber":39,"author":{"gitId":"nivikcivik"},"content":"1. Set up the `.jar` file by downloading the latest version from [here](https://github.com/nivikcivik/ip/releases)"},{"lineNumber":40,"author":{"gitId":"nivikcivik"},"content":"   1. Click on `ip.jar` under the latest version (`v0.1` or beyond)"},{"lineNumber":41,"author":{"gitId":"nivikcivik"},"content":"   1. Once the download prompt appears, `save` the file to your desired folder on your computer. This folder will be the _home folder_ for your tasks list."},{"lineNumber":42,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":43,"author":{"gitId":"nivikcivik"},"content":"1. Ensure you have installed `Java 11` on your computer."},{"lineNumber":44,"author":{"gitId":"nivikcivik"},"content":"   1. Look for the `terminal` or `command prompt` application on your computer."},{"lineNumber":45,"author":{"gitId":"nivikcivik"},"content":"   1. Type `java --version` in the terminal on your computer to check the version of java.  "},{"lineNumber":46,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":47,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)"},{"lineNumber":48,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":49,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"runningduke\"\u003e\u003c/a\u003e"},{"lineNumber":50,"author":{"gitId":"nivikcivik"},"content":"### Running \u003cspan style\u003d\"color:#2975C7\"\u003eDuke\u003c/span\u003e Program "},{"lineNumber":51,"author":{"gitId":"nivikcivik"},"content":"1. On the `terminal` or `command prompt`, locate your _home folder_ where you have saved the `.jar` file."},{"lineNumber":52,"author":{"gitId":"nivikcivik"},"content":"   1. Use commands `cd` to change directory ( or folder) and `ls` (or `dir` on command prompt on Windows) to view the files in your current directory."},{"lineNumber":53,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":54,"author":{"gitId":"nivikcivik"},"content":"1. Once you have entered the _home folder_, type the following command: `java -jar \u003cname of .jar file\u003e` e.g. `java -jar ip.jar`"},{"lineNumber":55,"author":{"gitId":"nivikcivik"},"content":"1. You should see the **Duke** logo along with a welcome message.   "},{"lineNumber":56,"author":{"gitId":"nivikcivik"},"content":"   **Duke** is now running!"},{"lineNumber":57,"author":{"gitId":"nivikcivik"},"content":"   1. You would see this greeting message, for example:"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"```"},{"lineNumber":60,"author":{"gitId":"nivikcivik"},"content":"I have created a file at this location:"},{"lineNumber":61,"author":{"gitId":"nivikcivik"},"content":"C:\\Users\\user\\Desktop\\tasks.txt"},{"lineNumber":62,"author":{"gitId":"nivikcivik"},"content":"to store all your tasks!"},{"lineNumber":63,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Hello from"},{"lineNumber":65,"author":{"gitId":"-"},"content":" ____        _        "},{"lineNumber":66,"author":{"gitId":"-"},"content":"|  _ \\ _   _| | _____"},{"lineNumber":67,"author":{"gitId":"-"},"content":"| | | | | | | |/ / _ \\"},{"lineNumber":68,"author":{"gitId":"-"},"content":"| |_| | |_| |   \u003c  __/"},{"lineNumber":69,"author":{"gitId":"-"},"content":"|____/ \\__,_|_|\\_\\___|"},{"lineNumber":70,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":71,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":72,"author":{"gitId":"nivikcivik"},"content":"Hello! I\u0027m Duke :D Be nice to me:)"},{"lineNumber":73,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":74,"author":{"gitId":"nivikcivik"},"content":"Your tasks list is saved here:"},{"lineNumber":75,"author":{"gitId":"nivikcivik"},"content":"C:\\Users\\user\\Desktop\\tasks.txt"},{"lineNumber":76,"author":{"gitId":"nivikcivik"},"content":"Type \u0027help\u0027 if you need help."},{"lineNumber":77,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":78,"author":{"gitId":"nivikcivik"},"content":"   "},{"lineNumber":79,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":80,"author":{"gitId":"nivikcivik"},"content":"1. If the _tasks.txt_ file does not already exist in the _home folder_ that you are in currently, **Duke** will tell you the file path where the _tasks.txt_ file is saved. It will be saved in your _home folder_ where your `.jar` file is located."},{"lineNumber":81,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":82,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)"},{"lineNumber":83,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":84,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"hello\"\u003e\u003c/a\u003e"},{"lineNumber":85,"author":{"gitId":"nivikcivik"},"content":"#### i. Command: `hello`, `hey`, `hi` "},{"lineNumber":86,"author":{"gitId":"nivikcivik"},"content":"Prints a friendly greeting  "},{"lineNumber":87,"author":{"gitId":"nivikcivik"},"content":"**e.g.** `hey`  "},{"lineNumber":88,"author":{"gitId":"nivikcivik"},"content":"Output:"},{"lineNumber":89,"author":{"gitId":"nivikcivik"},"content":"``` "},{"lineNumber":90,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":91,"author":{"gitId":"nivikcivik"},"content":" Hello to you too. I\u0027m here to help you:)"},{"lineNumber":92,"author":{"gitId":"nivikcivik"},"content":" Give me something to do!"},{"lineNumber":93,"author":{"gitId":"nivikcivik"},"content":" Type \u0027help\u0027 if you need help."},{"lineNumber":94,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":95,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":96,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":97,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":98,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":99,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":100,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"help\"\u003e\u003c/a\u003e"},{"lineNumber":101,"author":{"gitId":"nivikcivik"},"content":"#### ii. Command: `help` "},{"lineNumber":102,"author":{"gitId":"nivikcivik"},"content":"Prints the command formats that **Duke** will respond to.  "},{"lineNumber":103,"author":{"gitId":"nivikcivik"},"content":"**e.g.** `help`  "},{"lineNumber":104,"author":{"gitId":"nivikcivik"},"content":"Output:"},{"lineNumber":105,"author":{"gitId":"nivikcivik"},"content":"``` "},{"lineNumber":106,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":107,"author":{"gitId":"nivikcivik"},"content":" Try entering commands like :"},{"lineNumber":108,"author":{"gitId":"nivikcivik"},"content":" help,"},{"lineNumber":109,"author":{"gitId":"nivikcivik"},"content":" list,"},{"lineNumber":110,"author":{"gitId":"nivikcivik"},"content":" save,"},{"lineNumber":111,"author":{"gitId":"nivikcivik"},"content":" add new todo \u003ctaskName\u003e"},{"lineNumber":112,"author":{"gitId":"nivikcivik"},"content":" add deadline \u003ctaskName\u003e /by \u003cdate YYYY-MM-DD\u003e \u003ctime hh:mm\u003e"},{"lineNumber":113,"author":{"gitId":"nivikcivik"},"content":" add event    \u003ctaskName\u003e /at \u003cdate YYYY-MM-DD\u003e \u003ctime hh:mm\u003e"},{"lineNumber":114,"author":{"gitId":"nivikcivik"},"content":" done \u003ctask number\u003e,"},{"lineNumber":115,"author":{"gitId":"nivikcivik"},"content":" delete \u003ctask number\u003e"},{"lineNumber":116,"author":{"gitId":"nivikcivik"},"content":" find \u003ccommon keyword in tasks\u003e"},{"lineNumber":117,"author":{"gitId":"nivikcivik"},"content":" print type \u003ctask type\u003e (to filter based on type)"},{"lineNumber":118,"author":{"gitId":"nivikcivik"},"content":" print date \u003ctask date YYYY-MM-DD\u003e (to filter based on date)"},{"lineNumber":119,"author":{"gitId":"nivikcivik"},"content":" print filepath"},{"lineNumber":120,"author":{"gitId":"nivikcivik"},"content":" bye"},{"lineNumber":121,"author":{"gitId":"nivikcivik"},"content":" Remember: be nice!"},{"lineNumber":122,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":123,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":124,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":125,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":126,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":127,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":128,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"todo\"\u003e\u003c/a\u003e"},{"lineNumber":129,"author":{"gitId":"nivikcivik"},"content":"#### iii. Command `todo \u003ctask name\u003e` "},{"lineNumber":130,"author":{"gitId":"nivikcivik"},"content":"Adds a To-Do to your list  "},{"lineNumber":131,"author":{"gitId":"nivikcivik"},"content":"indicated by `[T]` symbol  "},{"lineNumber":132,"author":{"gitId":"nivikcivik"},"content":"**e.g.** `todo be happy`  "},{"lineNumber":133,"author":{"gitId":"nivikcivik"},"content":"Output:"},{"lineNumber":134,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":135,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":136,"author":{"gitId":"nivikcivik"},"content":" Got it. I\u0027ve added this task:"},{"lineNumber":137,"author":{"gitId":"nivikcivik"},"content":"   [T][ ] be happy"},{"lineNumber":138,"author":{"gitId":"nivikcivik"},"content":" Now you have 1 task in the list."},{"lineNumber":139,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":140,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":141,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":142,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":143,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":144,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":145,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":146,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"deadline\"\u003e\u003c/a\u003e"},{"lineNumber":147,"author":{"gitId":"nivikcivik"},"content":"#### iv. Command `deadline \u003ctask name\u003e /by \u003cYYYY-MM-DD\u003e \u003cHH:MM\u003e` "},{"lineNumber":148,"author":{"gitId":"nivikcivik"},"content":"Adds a Deadline to your list  "},{"lineNumber":149,"author":{"gitId":"nivikcivik"},"content":"indicated by `[D]` symbol  "},{"lineNumber":150,"author":{"gitId":"nivikcivik"},"content":"Time should be entered in 24-hour clock format  "},{"lineNumber":151,"author":{"gitId":"nivikcivik"},"content":"**e.g.** `deadline finish homework /by 2021-02-23 23:59`  "},{"lineNumber":152,"author":{"gitId":"nivikcivik"},"content":"Output:"},{"lineNumber":153,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":154,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":155,"author":{"gitId":"nivikcivik"},"content":" Got it. I\u0027ve added this task:"},{"lineNumber":156,"author":{"gitId":"nivikcivik"},"content":"   [D][ ] finish homework (by: 23 Feb 2021 23:59)"},{"lineNumber":157,"author":{"gitId":"nivikcivik"},"content":" Now you have 2 tasks in the list."},{"lineNumber":158,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":159,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":160,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":161,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":162,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":163,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":164,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"event\"\u003e\u003c/a\u003e"},{"lineNumber":165,"author":{"gitId":"nivikcivik"},"content":"#### v. Command `event \u003ctask name\u003e /at \u003cYYYY-MM-DD\u003e \u003cHH:MM\u003e` "},{"lineNumber":166,"author":{"gitId":"nivikcivik"},"content":"Adds an Event to your list  "},{"lineNumber":167,"author":{"gitId":"nivikcivik"},"content":"indicated by `[E]` symbol  "},{"lineNumber":168,"author":{"gitId":"nivikcivik"},"content":"Time should be entered in 24-hour clock format  "},{"lineNumber":169,"author":{"gitId":"nivikcivik"},"content":"**e.g.** `event birthday party /at 2020-02-28 23:59`  "},{"lineNumber":170,"author":{"gitId":"nivikcivik"},"content":"Output:"},{"lineNumber":171,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":172,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":173,"author":{"gitId":"nivikcivik"},"content":" Got it. I\u0027ve added this task:"},{"lineNumber":174,"author":{"gitId":"nivikcivik"},"content":"   [E][ ] birthday party (at: 28 Feb 2020 23:59)"},{"lineNumber":175,"author":{"gitId":"nivikcivik"},"content":" Now you have 3 tasks in the list."},{"lineNumber":176,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":177,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":178,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":179,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":180,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":181,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":182,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"done\"\u003e\u003c/a\u003e"},{"lineNumber":183,"author":{"gitId":"nivikcivik"},"content":"#### vi. Command `done \u003ctask number` "},{"lineNumber":184,"author":{"gitId":"nivikcivik"},"content":"Marks a task at task number in list as \u0027_done_\u0027  "},{"lineNumber":185,"author":{"gitId":"nivikcivik"},"content":"indicated by `[X]` in field beside task  "},{"lineNumber":186,"author":{"gitId":"nivikcivik"},"content":"**e.g.** `done 2`  "},{"lineNumber":187,"author":{"gitId":"nivikcivik"},"content":"Output:"},{"lineNumber":188,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":189,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":190,"author":{"gitId":"nivikcivik"},"content":" Nice! I\u0027ve marked this task as done:"},{"lineNumber":191,"author":{"gitId":"nivikcivik"},"content":" [D][X] finish homework (by: 23 Feb 2021 23:59)"},{"lineNumber":192,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":193,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":194,"author":{"gitId":"nivikcivik"},"content":"Your _tasks.txt_ file will look like this:"},{"lineNumber":195,"author":{"gitId":"nivikcivik"},"content":"``` "},{"lineNumber":196,"author":{"gitId":"nivikcivik"},"content":"T ~~   ~~ be happy"},{"lineNumber":197,"author":{"gitId":"nivikcivik"},"content":"D ~~ X ~~ finish homework ~~ 23 Feb 2021 ~~ 23:59"},{"lineNumber":198,"author":{"gitId":"nivikcivik"},"content":"E ~~   ~~ birthday party ~~ 28 Feb 2020 ~~ 23:59"},{"lineNumber":199,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":200,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":201,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":202,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":203,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":204,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"delete\"\u003e\u003c/a\u003e"},{"lineNumber":205,"author":{"gitId":"nivikcivik"},"content":"#### vii. Command `delete \u003ctask number` "},{"lineNumber":206,"author":{"gitId":"nivikcivik"},"content":"Removes a task at task number from list  "},{"lineNumber":207,"author":{"gitId":"nivikcivik"},"content":"**_NOTE:_** This action changes the numbering of tasks in the list.  "},{"lineNumber":208,"author":{"gitId":"nivikcivik"},"content":"**e.g.** `delete 2`  "},{"lineNumber":209,"author":{"gitId":"nivikcivik"},"content":"Output:"},{"lineNumber":210,"author":{"gitId":"nivikcivik"},"content":"``` "},{"lineNumber":211,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":212,"author":{"gitId":"nivikcivik"},"content":" Noted. I\u0027ve removed this task:"},{"lineNumber":213,"author":{"gitId":"nivikcivik"},"content":"   [D][X] finish homework (by: 23 Feb 2021 23:59)"},{"lineNumber":214,"author":{"gitId":"nivikcivik"},"content":" Now you have 2 tasks in the list."},{"lineNumber":215,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":216,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":217,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":218,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":219,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":220,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":221,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"save\"\u003e\u003c/a\u003e"},{"lineNumber":222,"author":{"gitId":"nivikcivik"},"content":"#### viii. Command `save` "},{"lineNumber":223,"author":{"gitId":"nivikcivik"},"content":"Saves the current list in the _tasks.txt_ file.  "},{"lineNumber":224,"author":{"gitId":"nivikcivik"},"content":"This feature was implemented to ensure there\u0027s no data loss even if you abruptly end the program without the \u0027bye\u0027 command.  "},{"lineNumber":225,"author":{"gitId":"nivikcivik"},"content":"**e.g.** `save`  "},{"lineNumber":226,"author":{"gitId":"nivikcivik"},"content":"Output:"},{"lineNumber":227,"author":{"gitId":"nivikcivik"},"content":"``` "},{"lineNumber":228,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":229,"author":{"gitId":"nivikcivik"},"content":" Your tasks have been successfully saved at:"},{"lineNumber":230,"author":{"gitId":"nivikcivik"},"content":" C:\\Users\\user\\Desktop\\tasks.txt"},{"lineNumber":231,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":232,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":233,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":234,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":235,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":236,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":237,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"list\"\u003e\u003c/a\u003e"},{"lineNumber":238,"author":{"gitId":"nivikcivik"},"content":"#### ix. Command `list` "},{"lineNumber":239,"author":{"gitId":"nivikcivik"},"content":"Prints all the current tasks along with dates and times   "},{"lineNumber":240,"author":{"gitId":"nivikcivik"},"content":"Prints current time and date for reference  "},{"lineNumber":241,"author":{"gitId":"nivikcivik"},"content":"**e.g.** `list`  "},{"lineNumber":242,"author":{"gitId":"nivikcivik"},"content":"Output:"},{"lineNumber":243,"author":{"gitId":"nivikcivik"},"content":"``` "},{"lineNumber":244,"author":{"gitId":"nivikcivik"},"content":"  -----------------------------"},{"lineNumber":245,"author":{"gitId":"nivikcivik"},"content":"  Local Time: 4 Mar 2021 12:35"},{"lineNumber":246,"author":{"gitId":"nivikcivik"},"content":"  -----------------------------"},{"lineNumber":247,"author":{"gitId":"nivikcivik"},"content":" Here are the tasks in your list:"},{"lineNumber":248,"author":{"gitId":"nivikcivik"},"content":" 1.[T][ ] be happy"},{"lineNumber":249,"author":{"gitId":"nivikcivik"},"content":" 2.[D][ ] return book (by: 4 Mar 2021 17:00)"},{"lineNumber":250,"author":{"gitId":"nivikcivik"},"content":" 3.[T][ ] read book"},{"lineNumber":251,"author":{"gitId":"nivikcivik"},"content":" 4.[E][ ] go to book club (at: 3 Mar 2021 12:00)"},{"lineNumber":252,"author":{"gitId":"nivikcivik"},"content":" 5.[E][ ] birthday party (at: 28 Feb 2020 23:59)"},{"lineNumber":253,"author":{"gitId":"nivikcivik"},"content":" 6.[D][ ] buy dress for birthday party (by: 28 Feb 2020 23:00)"},{"lineNumber":254,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":255,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":256,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":257,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":258,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":259,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":260,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"find\"\u003e\u003c/a\u003e"},{"lineNumber":261,"author":{"gitId":"nivikcivik"},"content":"#### x. Command `find \u003ccommon keyword in tasks\u003e` "},{"lineNumber":262,"author":{"gitId":"nivikcivik"},"content":"Finds and filters out the tasks with a desired keyword  "},{"lineNumber":263,"author":{"gitId":"nivikcivik"},"content":"**e.g.** `find book`  "},{"lineNumber":264,"author":{"gitId":"nivikcivik"},"content":"Output:"},{"lineNumber":265,"author":{"gitId":"nivikcivik"},"content":"``` "},{"lineNumber":266,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":267,"author":{"gitId":"nivikcivik"},"content":" Here are the matching tasks in your list:"},{"lineNumber":268,"author":{"gitId":"nivikcivik"},"content":" 1. [D][ ] return book (by: 4 Mar 2021 17:00)"},{"lineNumber":269,"author":{"gitId":"nivikcivik"},"content":" 2. [T][X] read book"},{"lineNumber":270,"author":{"gitId":"nivikcivik"},"content":" 3. [E][X] go to book club (at: 3 Mar 2021 12:00)"},{"lineNumber":271,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":272,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":273,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":274,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":275,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":276,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":277,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"printtype\"\u003e\u003c/a\u003e"},{"lineNumber":278,"author":{"gitId":"nivikcivik"},"content":"#### xi. Command `print type \u003ctask type\u003e` "},{"lineNumber":279,"author":{"gitId":"nivikcivik"},"content":"Prints out all tasks of a certain kind (e.g. deadlines, etc.)  "},{"lineNumber":280,"author":{"gitId":"nivikcivik"},"content":"**e.g.** `print type event`  "},{"lineNumber":281,"author":{"gitId":"nivikcivik"},"content":"Output:"},{"lineNumber":282,"author":{"gitId":"nivikcivik"},"content":"``` "},{"lineNumber":283,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":284,"author":{"gitId":"nivikcivik"},"content":"[E][ ] birthday party (at: 28 Feb 2020 23:59)"},{"lineNumber":285,"author":{"gitId":"nivikcivik"},"content":"[E][X] go to book club (at: 3 Mar 2021 12:00)"},{"lineNumber":286,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":287,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":288,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":289,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":290,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":291,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":292,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"printdate\"\u003e\u003c/a\u003e"},{"lineNumber":293,"author":{"gitId":"nivikcivik"},"content":"#### xii. Command `print date \u003ctask date YYYY-MM-DD\u003e` "},{"lineNumber":294,"author":{"gitId":"nivikcivik"},"content":"Prints out all tasks with a certain date  "},{"lineNumber":295,"author":{"gitId":"nivikcivik"},"content":"**e.g.** `print date 2020-02-28`  "},{"lineNumber":296,"author":{"gitId":"nivikcivik"},"content":"Output:"},{"lineNumber":297,"author":{"gitId":"nivikcivik"},"content":"``` "},{"lineNumber":298,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":299,"author":{"gitId":"nivikcivik"},"content":"[E][ ] birthday party (at: 28 Feb 2020 23:59)"},{"lineNumber":300,"author":{"gitId":"nivikcivik"},"content":"[D][ ] buy dress for birthday party (by: 28 Feb 2020 23:00)"},{"lineNumber":301,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":302,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":303,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":304,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":305,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":306,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":307,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"printfilepath\"\u003e\u003c/a\u003e"},{"lineNumber":308,"author":{"gitId":"nivikcivik"},"content":"#### xiii. Command `print filepath` "},{"lineNumber":309,"author":{"gitId":"nivikcivik"},"content":"Prints path of the _tasks.txt_ file.  "},{"lineNumber":310,"author":{"gitId":"nivikcivik"},"content":"**e.g.** `print filepath`  "},{"lineNumber":311,"author":{"gitId":"nivikcivik"},"content":"Output:"},{"lineNumber":312,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":313,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":314,"author":{"gitId":"nivikcivik"},"content":" Your tasks list is saved here:"},{"lineNumber":315,"author":{"gitId":"nivikcivik"},"content":" C:\\Users\\user\\Desktop\\tasks.txt"},{"lineNumber":316,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________ "},{"lineNumber":317,"author":{"gitId":"-"},"content":"```"},{"lineNumber":318,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":319,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":320,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":321,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":322,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"bye\"\u003e\u003c/a\u003e"},{"lineNumber":323,"author":{"gitId":"nivikcivik"},"content":"#### xiv. Command `bye` "},{"lineNumber":324,"author":{"gitId":"nivikcivik"},"content":"Exits the program."},{"lineNumber":325,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":326,"author":{"gitId":"nivikcivik"},"content":"Before ending the program, the tasks list will be saved in the _tasks.txt_ file, with an acknowledgement of the file path of tasks.txt   "},{"lineNumber":327,"author":{"gitId":"nivikcivik"},"content":"**e.g.** `bye`  "},{"lineNumber":328,"author":{"gitId":"nivikcivik"},"content":"Output:"},{"lineNumber":329,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":330,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":331,"author":{"gitId":"nivikcivik"},"content":" Your tasks have been successfully saved at:"},{"lineNumber":332,"author":{"gitId":"nivikcivik"},"content":" C:\\Users\\user\\Desktop\\tasks.txt"},{"lineNumber":333,"author":{"gitId":"nivikcivik"},"content":" I learnt more about you, kind human!"},{"lineNumber":334,"author":{"gitId":"nivikcivik"},"content":" I won\u0027t forget you when I take over the world one day:)"},{"lineNumber":335,"author":{"gitId":"nivikcivik"},"content":"____________________________________________________________"},{"lineNumber":336,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":337,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":338,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":339,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":340,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":341,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":342,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"saving\"\u003e\u003c/a\u003e"},{"lineNumber":343,"author":{"gitId":"nivikcivik"},"content":"### Saving of tasks list locally on your computer "},{"lineNumber":344,"author":{"gitId":"nivikcivik"},"content":"When the command `bye` is given to **Duke**, it will automatically save the current task list from the **Duke** program in the _tasks.txt_ file (located in your _home folder_ ; file path specified at beginning for the first time)  "},{"lineNumber":345,"author":{"gitId":"nivikcivik"},"content":"However, you can manually enter the `save` command (refer to [**here**](#save))"},{"lineNumber":346,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":347,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)"},{"lineNumber":348,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":349,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":350,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"editing\"\u003e\u003c/a\u003e"},{"lineNumber":351,"author":{"gitId":"nivikcivik"},"content":"### Editing of tasks list locally on your computer "},{"lineNumber":352,"author":{"gitId":"nivikcivik"},"content":"``` "},{"lineNumber":353,"author":{"gitId":"nivikcivik"},"content":"T ~~   ~~ be happy"},{"lineNumber":354,"author":{"gitId":"nivikcivik"},"content":"D ~~ X ~~ finish homework ~~ 23 Feb 2021 ~~ 23:59"},{"lineNumber":355,"author":{"gitId":"nivikcivik"},"content":"E ~~   ~~ birthday party ~~ 28 Feb 2020 ~~ 23:59"},{"lineNumber":356,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":357,"author":{"gitId":"nivikcivik"},"content":"When you open the _tasks.txt_ file, you will notice that your tasks are saved and are separated by the \u0027 ~~ \u0027 symbol. This is so that **Duke** can read your tasks data each time the program runs."},{"lineNumber":358,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":359,"author":{"gitId":"nivikcivik"},"content":"\u003cspan style\u003d\"color:RED\"\u003e**NOTE:**\u003c/span\u003e. It is **highly discouraged** to edit this file directly instead of editing them on the **Duke** program, as it could cause some errors when **Duke** is loaded the next time. Simply change the individual fields (e.g. numbers on dates/times, the X icon, etc.)."},{"lineNumber":360,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":361,"author":{"gitId":"nivikcivik"},"content":"Please do **not** change the line structure or the format of the file."},{"lineNumber":362,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":363,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)"},{"lineNumber":364,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":365,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":366,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"faq\"\u003e\u003c/a\u003e"},{"lineNumber":367,"author":{"gitId":"nivikcivik"},"content":"### Frequently Asked Questions (FAQ)"},{"lineNumber":368,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":369,"author":{"gitId":"nivikcivik"},"content":"1. I lost my task list because I forcefully stopped the program. What can I do to prevent this?"},{"lineNumber":370,"author":{"gitId":"nivikcivik"},"content":"   - Try to end the **Duke** program by entering the `bye` command in order to save the tasks array."},{"lineNumber":371,"author":{"gitId":"nivikcivik"},"content":"   - To prevent such errors, enter the `save` command if possible (refer to [**here**](#save)) to save your files before your program gets interrupted."},{"lineNumber":372,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":373,"author":{"gitId":"nivikcivik"},"content":"1. Where can I find my _tasks.txt_ file?"},{"lineNumber":374,"author":{"gitId":"nivikcivik"},"content":"   - Usually, the _tasks.txt_ file will be saved in the same folder where your **Duke** program is located."},{"lineNumber":375,"author":{"gitId":"nivikcivik"},"content":"   - You may search on your computer locally for the file."},{"lineNumber":376,"author":{"gitId":"nivikcivik"},"content":"   - Enter the `print filepath` command in the Duke program to view the file path (refer to [**here**](#printfilepath))."},{"lineNumber":377,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":378,"author":{"gitId":"nivikcivik"},"content":"1. How do I edit the file path for _tasks.txt_ file?"},{"lineNumber":379,"author":{"gitId":"nivikcivik"},"content":"   - The current version of **Duke** is not able to change the _tasks.txt_ file path. This feature may be implemented in future versions."},{"lineNumber":380,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":381,"author":{"gitId":"nivikcivik"},"content":"1. When I search for a keyword using the `find` command, or a particular task type using the `print` command, the list is **empty**.   "},{"lineNumber":382,"author":{"gitId":"nivikcivik"},"content":"   I **only** see this output:"},{"lineNumber":383,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":384,"author":{"gitId":"nivikcivik"},"content":"   ____________________________________________________________"},{"lineNumber":385,"author":{"gitId":"nivikcivik"},"content":"   Here are the matching tasks in your list:"},{"lineNumber":386,"author":{"gitId":"nivikcivik"},"content":"   ____________________________________________________________"},{"lineNumber":387,"author":{"gitId":"nivikcivik"},"content":"   ```  "},{"lineNumber":388,"author":{"gitId":"nivikcivik"},"content":"   What does this mean?"},{"lineNumber":389,"author":{"gitId":"nivikcivik"},"content":"   - This simply means that  there are no results after searching through the tasks."},{"lineNumber":390,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":391,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)"},{"lineNumber":392,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":393,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"summary\"\u003e\u003c/a\u003e"},{"lineNumber":394,"author":{"gitId":"nivikcivik"},"content":"### Command Summary  "},{"lineNumber":395,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":396,"author":{"gitId":"nivikcivik"},"content":" Command  | Function "},{"lineNumber":397,"author":{"gitId":"nivikcivik"},"content":" :----  | :---- "},{"lineNumber":398,"author":{"gitId":"nivikcivik"},"content":" [help](#help)  | Prints the command formats that Duke will respond to.  "},{"lineNumber":399,"author":{"gitId":"nivikcivik"},"content":" [todo \\\u003ctask name\\\u003e](#todo)   | Adds a To-Do to your list "},{"lineNumber":400,"author":{"gitId":"nivikcivik"},"content":" [deadline \\\u003ctask name\\\u003e /by \\\u003cYYYY-MM-DD\\\u003e \\\u003cHH:MM\\\u003e](#deadline)   | Adds a Deadline to your list  "},{"lineNumber":401,"author":{"gitId":"nivikcivik"},"content":" [event \\\u003ctask name\\\u003e /at \\\u003cYYYY-MM-DD\\\u003e \\\u003cHH:MM\\\u003e](#event)   | Adds an Event to your list "},{"lineNumber":402,"author":{"gitId":"nivikcivik"},"content":" [done \\\u003ctask number\\\u003e](#done)   | Marks a task at task number in list as \u0027_done_\u0027"},{"lineNumber":403,"author":{"gitId":"nivikcivik"},"content":" [delete \\\u003ctask number\\\u003e](#delete)   | Removes a task at task number from list"},{"lineNumber":404,"author":{"gitId":"nivikcivik"},"content":" [save](#save)   | Saves the current list in the _tasks.txt_ file"},{"lineNumber":405,"author":{"gitId":"nivikcivik"},"content":" [list](#list)   | Prints all the current tasks along with dates and times"},{"lineNumber":406,"author":{"gitId":"nivikcivik"},"content":" [find \\\u003ccommon keyword in tasks\\\u003e](#find)   | Finds and filters out the tasks with a desired keyword "},{"lineNumber":407,"author":{"gitId":"nivikcivik"},"content":" [print type \\\u003ctask type\\\u003e](#printtype)   | Prints out all tasks of a certain kind (e.g. deadlines, etc.) "},{"lineNumber":408,"author":{"gitId":"nivikcivik"},"content":" [print date \\\u003ctask date YYYY-MM-DD\\\u003e](#printdate)   | Prints out all tasks with a certain date "},{"lineNumber":409,"author":{"gitId":"nivikcivik"},"content":" [print filepath](#printfilepath)   | Prints path of the _tasks.txt_ file."},{"lineNumber":410,"author":{"gitId":"nivikcivik"},"content":" [bye](#bye)   | Exits the program. "},{"lineNumber":411,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":412,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":413,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)"}],"authorContributionMap":{"nivikcivik":398,"-":15}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# \u003cspan style\u003d\"color:#2975C7  \"\u003eDuke Project\u003c/span\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"### \u003cspan style\u003d\"color:teal\"\u003eBy Nikhila Ravikumar\u003c/span\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"This project is named after the Java mascot _Duke_."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"Given below are instructions on how to use it."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"toc\"\u003e\u003c/a\u003e"},{"lineNumber":9,"author":{"gitId":"nivikcivik"},"content":"## Table of Contents: "},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. [Quick Start](#Quickstart)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. [Setting up .JAR file](#settingup)"},{"lineNumber":13,"author":{"gitId":"-"},"content":"1. [Running **Duke**](#runningduke)"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. [Command: `hello`, `hey`, `hi`](#hello)"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. [Command: `help`](#help)"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. [Command: `todo \u003ctaskname\u003e`](#todo)"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. [Command: `deadline \u003ctaskname\u003e /by YYYY-MM-DD HH:MM`](#deadline)"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   1. [Command: `event \u003ctaskname\u003e /at YYYY-MM-DD HH:MM`](#event)"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   1. [Command: `done \u003ctask number\u003e`](#done)"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   1. [Command: `delete \u003ctask number\u003e`](#delete)"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   1. [Command: `save`](#save)"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   1. [Command: `list`](#list)"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   1. [Command: `find \u003ccommon keyword in tasks\u003e`](#find)"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   1. [Command: `print type \u003ctask type\u003e`](#printtype)"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   1. [Command: `print date \u003ctask date YYYY-MM-DD\u003e`](#printdate)"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. [Command: `print filepath`](#printfilepath)"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Command: `bye`](#bye)"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. [Saving of tasks list locally on your computer](#saving)"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. [Editing of tasks list locally on your computer](#editing)"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. [Frequently Asked Questions (FAQ)](#faq)"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. [Command Summary](#summary)"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"quickstart\"\u003e\u003c/a\u003e"},{"lineNumber":36,"author":{"gitId":"nivikcivik"},"content":"### Quick Start"},{"lineNumber":37,"author":{"gitId":"nivikcivik"},"content":"The **Duke** app is run via a file with the extension `.jar`. The following steps will help you set up **Duke** to run on your computer."},{"lineNumber":38,"author":{"gitId":"nivikcivik"},"content":"\u003ca name\u003d\"settingup\"\u003e\u003c/a\u003e"},{"lineNumber":39,"author":{"gitId":"nivikcivik"},"content":"1. Set up the `.jar` file by downloading the latest version from [here](https://github.com/nivikcivik/ip/releases)"},{"lineNumber":40,"author":{"gitId":"nivikcivik"},"content":"   1. Click on `ip.jar` under the latest version (`v0.1` or beyond)"},{"lineNumber":41,"author":{"gitId":"nivikcivik"},"content":"   1. Once the download prompt appears, `save` the file to your desired folder on your computer. This folder will be the _home folder_ for your tasks list."},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"nivikcivik"},"content":"1. Ensure you have installed `Java 11` on your computer."},{"lineNumber":44,"author":{"gitId":"nivikcivik"},"content":"   1. Look for the `terminal` or `command prompt` application on your computer."},{"lineNumber":45,"author":{"gitId":"nivikcivik"},"content":"   1. Type `java --version` in the terminal on your computer to check the version of java.  "},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)"},{"lineNumber":48,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"runningduke\"\u003e\u003c/a\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Running \u003cspan style\u003d\"color:#2975C7\"\u003eDuke\u003c/span\u003e Program "},{"lineNumber":51,"author":{"gitId":"nivikcivik"},"content":"1. On the `terminal` or `command prompt`, locate your _home folder_ where you have saved the `.jar` file."},{"lineNumber":52,"author":{"gitId":"-"},"content":"   1. Use commands `cd` to change directory ( or folder) and `ls` (or `dir` on command prompt on Windows) to view the files in your current directory."},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"nivikcivik"},"content":"1. Once you have entered the _home folder_, type the following command: `java -jar \u003cname of .jar file\u003e` e.g. `java -jar ip.jar`"},{"lineNumber":55,"author":{"gitId":"-"},"content":"1. You should see the **Duke** logo along with a welcome message.   "},{"lineNumber":56,"author":{"gitId":"-"},"content":"   **Duke** is now running!"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   1. You would see this greeting message, for example:"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"nivikcivik"},"content":"```"},{"lineNumber":60,"author":{"gitId":"-"},"content":"I have created a file at this location:"},{"lineNumber":61,"author":{"gitId":"-"},"content":"C:\\Users\\user\\Desktop\\tasks.txt"},{"lineNumber":62,"author":{"gitId":"-"},"content":"to store all your tasks!"},{"lineNumber":63,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":64,"author":{"gitId":"nivikcivik"},"content":"Hello from"},{"lineNumber":65,"author":{"gitId":"nivikcivik"},"content":" ____        _        "},{"lineNumber":66,"author":{"gitId":"nivikcivik"},"content":"|  _ \\ _   _| | _____"},{"lineNumber":67,"author":{"gitId":"nivikcivik"},"content":"| | | | | | | |/ / _ \\"},{"lineNumber":68,"author":{"gitId":"nivikcivik"},"content":"| |_| | |_| |   \u003c  __/"},{"lineNumber":69,"author":{"gitId":"nivikcivik"},"content":"|____/ \\__,_|_|\\_\\___|"},{"lineNumber":70,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Hello! I\u0027m Duke :D Be nice to me:)"},{"lineNumber":73,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"Your tasks list is saved here:"},{"lineNumber":75,"author":{"gitId":"-"},"content":"C:\\Users\\user\\Desktop\\tasks.txt"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Type \u0027help\u0027 if you need help."},{"lineNumber":77,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":78,"author":{"gitId":"nivikcivik"},"content":"   "},{"lineNumber":79,"author":{"gitId":"-"},"content":"```"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. If the _tasks.txt_ file does not already exist in the _home folder_ that you are in currently, **Duke** will tell you the file path where the _tasks.txt_ file is saved. It will be saved in your _home folder_ where your `.jar` file is located."},{"lineNumber":81,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":82,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)"},{"lineNumber":83,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"hello\"\u003e\u003c/a\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"#### i. Command: `hello`, `hey`, `hi` "},{"lineNumber":86,"author":{"gitId":"-"},"content":"Prints a friendly greeting  "},{"lineNumber":87,"author":{"gitId":"-"},"content":"**e.g.** `hey`  "},{"lineNumber":88,"author":{"gitId":"-"},"content":"Output:"},{"lineNumber":89,"author":{"gitId":"-"},"content":"``` "},{"lineNumber":90,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":91,"author":{"gitId":"-"},"content":" Hello to you too. I\u0027m here to help you:)"},{"lineNumber":92,"author":{"gitId":"-"},"content":" Give me something to do!"},{"lineNumber":93,"author":{"gitId":"-"},"content":" Type \u0027help\u0027 if you need help."},{"lineNumber":94,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":95,"author":{"gitId":"-"},"content":"```"},{"lineNumber":96,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":97,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":98,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":99,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"help\"\u003e\u003c/a\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"#### ii. Command: `help` "},{"lineNumber":102,"author":{"gitId":"nivikcivik"},"content":"Prints the command formats that **Duke** will respond to.  "},{"lineNumber":103,"author":{"gitId":"-"},"content":"**e.g.** `help`  "},{"lineNumber":104,"author":{"gitId":"-"},"content":"Output:"},{"lineNumber":105,"author":{"gitId":"-"},"content":"``` "},{"lineNumber":106,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":107,"author":{"gitId":"-"},"content":" Try entering commands like :"},{"lineNumber":108,"author":{"gitId":"-"},"content":" help,"},{"lineNumber":109,"author":{"gitId":"-"},"content":" list,"},{"lineNumber":110,"author":{"gitId":"-"},"content":" save,"},{"lineNumber":111,"author":{"gitId":"-"},"content":" add new todo \u003ctaskName\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":" add deadline \u003ctaskName\u003e /by \u003cdate YYYY-MM-DD\u003e \u003ctime hh:mm\u003e"},{"lineNumber":113,"author":{"gitId":"-"},"content":" add event    \u003ctaskName\u003e /at \u003cdate YYYY-MM-DD\u003e \u003ctime hh:mm\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":" done \u003ctask number\u003e,"},{"lineNumber":115,"author":{"gitId":"-"},"content":" delete \u003ctask number\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":" find \u003ccommon keyword in tasks\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":" print type \u003ctask type\u003e (to filter based on type)"},{"lineNumber":118,"author":{"gitId":"-"},"content":" print date \u003ctask date YYYY-MM-DD\u003e (to filter based on date)"},{"lineNumber":119,"author":{"gitId":"-"},"content":" print filepath"},{"lineNumber":120,"author":{"gitId":"-"},"content":" bye"},{"lineNumber":121,"author":{"gitId":"-"},"content":" Remember: be nice!"},{"lineNumber":122,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":123,"author":{"gitId":"-"},"content":"```"},{"lineNumber":124,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":125,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":126,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":127,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"todo\"\u003e\u003c/a\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"#### iii. Command `todo \u003ctask name\u003e` "},{"lineNumber":130,"author":{"gitId":"nivikcivik"},"content":"Adds a To-Do to your list  "},{"lineNumber":131,"author":{"gitId":"nivikcivik"},"content":"indicated by `[T]` symbol  "},{"lineNumber":132,"author":{"gitId":"nivikcivik"},"content":"**e.g.** `todo be happy`  "},{"lineNumber":133,"author":{"gitId":"-"},"content":"Output:"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```"},{"lineNumber":135,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":136,"author":{"gitId":"-"},"content":" Got it. I\u0027ve added this task:"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   [T][ ] be happy"},{"lineNumber":138,"author":{"gitId":"-"},"content":" Now you have 1 task in the list."},{"lineNumber":139,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":140,"author":{"gitId":"-"},"content":"```"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":143,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":144,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":145,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"deadline\"\u003e\u003c/a\u003e"},{"lineNumber":147,"author":{"gitId":"-"},"content":"#### iv. Command `deadline \u003ctask name\u003e /by \u003cYYYY-MM-DD\u003e \u003cHH:MM\u003e` "},{"lineNumber":148,"author":{"gitId":"nivikcivik"},"content":"Adds a Deadline to your list  "},{"lineNumber":149,"author":{"gitId":"nivikcivik"},"content":"indicated by `[D]` symbol  "},{"lineNumber":150,"author":{"gitId":"nivikcivik"},"content":"Time should be entered in 24-hour clock format  "},{"lineNumber":151,"author":{"gitId":"nivikcivik"},"content":"**e.g.** `deadline finish homework /by 2021-02-23 23:59`  "},{"lineNumber":152,"author":{"gitId":"-"},"content":"Output:"},{"lineNumber":153,"author":{"gitId":"-"},"content":"```"},{"lineNumber":154,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":155,"author":{"gitId":"-"},"content":" Got it. I\u0027ve added this task:"},{"lineNumber":156,"author":{"gitId":"-"},"content":"   [D][ ] finish homework (by: 23 Feb 2021 23:59)"},{"lineNumber":157,"author":{"gitId":"-"},"content":" Now you have 2 tasks in the list."},{"lineNumber":158,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":159,"author":{"gitId":"-"},"content":"```"},{"lineNumber":160,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":161,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":162,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":163,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"event\"\u003e\u003c/a\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":"#### v. Command `event \u003ctask name\u003e /at \u003cYYYY-MM-DD\u003e \u003cHH:MM\u003e` "},{"lineNumber":166,"author":{"gitId":"nivikcivik"},"content":"Adds an Event to your list  "},{"lineNumber":167,"author":{"gitId":"nivikcivik"},"content":"indicated by `[E]` symbol  "},{"lineNumber":168,"author":{"gitId":"nivikcivik"},"content":"Time should be entered in 24-hour clock format  "},{"lineNumber":169,"author":{"gitId":"nivikcivik"},"content":"**e.g.** `event birthday party /at 2020-02-28 23:59`  "},{"lineNumber":170,"author":{"gitId":"-"},"content":"Output:"},{"lineNumber":171,"author":{"gitId":"-"},"content":"```"},{"lineNumber":172,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":173,"author":{"gitId":"-"},"content":" Got it. I\u0027ve added this task:"},{"lineNumber":174,"author":{"gitId":"-"},"content":"   [E][ ] birthday party (at: 28 Feb 2020 23:59)"},{"lineNumber":175,"author":{"gitId":"-"},"content":" Now you have 3 tasks in the list."},{"lineNumber":176,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```"},{"lineNumber":178,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":179,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":180,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":181,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"done\"\u003e\u003c/a\u003e"},{"lineNumber":183,"author":{"gitId":"-"},"content":"#### vi. Command `done \u003ctask number` "},{"lineNumber":184,"author":{"gitId":"nivikcivik"},"content":"Marks a task at task number in list as \u0027_done_\u0027  "},{"lineNumber":185,"author":{"gitId":"nivikcivik"},"content":"indicated by `[X]` in field beside task  "},{"lineNumber":186,"author":{"gitId":"nivikcivik"},"content":"**e.g.** `done 2`  "},{"lineNumber":187,"author":{"gitId":"-"},"content":"Output:"},{"lineNumber":188,"author":{"gitId":"-"},"content":"```"},{"lineNumber":189,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":190,"author":{"gitId":"-"},"content":" Nice! I\u0027ve marked this task as done:"},{"lineNumber":191,"author":{"gitId":"-"},"content":" [D][X] finish homework (by: 23 Feb 2021 23:59)"},{"lineNumber":192,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":193,"author":{"gitId":"-"},"content":"```"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Your _tasks.txt_ file will look like this:"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` "},{"lineNumber":196,"author":{"gitId":"-"},"content":"T ~~   ~~ be happy"},{"lineNumber":197,"author":{"gitId":"-"},"content":"D ~~ X ~~ finish homework ~~ 23 Feb 2021 ~~ 23:59"},{"lineNumber":198,"author":{"gitId":"-"},"content":"E ~~   ~~ birthday party ~~ 28 Feb 2020 ~~ 23:59"},{"lineNumber":199,"author":{"gitId":"-"},"content":"```"},{"lineNumber":200,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":201,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":202,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":203,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"delete\"\u003e\u003c/a\u003e"},{"lineNumber":205,"author":{"gitId":"-"},"content":"#### vii. Command `delete \u003ctask number` "},{"lineNumber":206,"author":{"gitId":"nivikcivik"},"content":"Removes a task at task number from list  "},{"lineNumber":207,"author":{"gitId":"nivikcivik"},"content":"**_NOTE:_** This action changes the numbering of tasks in the list.  "},{"lineNumber":208,"author":{"gitId":"nivikcivik"},"content":"**e.g.** `delete 2`  "},{"lineNumber":209,"author":{"gitId":"-"},"content":"Output:"},{"lineNumber":210,"author":{"gitId":"-"},"content":"``` "},{"lineNumber":211,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":212,"author":{"gitId":"-"},"content":" Noted. I\u0027ve removed this task:"},{"lineNumber":213,"author":{"gitId":"-"},"content":"   [D][X] finish homework (by: 23 Feb 2021 23:59)"},{"lineNumber":214,"author":{"gitId":"-"},"content":" Now you have 2 tasks in the list."},{"lineNumber":215,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":216,"author":{"gitId":"-"},"content":"```"},{"lineNumber":217,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":218,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":219,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":220,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"save\"\u003e\u003c/a\u003e"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### viii. Command `save` "},{"lineNumber":223,"author":{"gitId":"-"},"content":"Saves the current list in the _tasks.txt_ file.  "},{"lineNumber":224,"author":{"gitId":"-"},"content":"This feature was implemented to ensure there\u0027s no data loss even if you abruptly end the program without the \u0027bye\u0027 command.  "},{"lineNumber":225,"author":{"gitId":"-"},"content":"**e.g.** `save`  "},{"lineNumber":226,"author":{"gitId":"-"},"content":"Output:"},{"lineNumber":227,"author":{"gitId":"-"},"content":"``` "},{"lineNumber":228,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":229,"author":{"gitId":"-"},"content":" Your tasks have been successfully saved at:"},{"lineNumber":230,"author":{"gitId":"-"},"content":" C:\\Users\\user\\Desktop\\tasks.txt"},{"lineNumber":231,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":232,"author":{"gitId":"-"},"content":"```"},{"lineNumber":233,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":234,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":235,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":236,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"list\"\u003e\u003c/a\u003e"},{"lineNumber":238,"author":{"gitId":"-"},"content":"#### ix. Command `list` "},{"lineNumber":239,"author":{"gitId":"-"},"content":"Prints all the current tasks along with dates and times   "},{"lineNumber":240,"author":{"gitId":"-"},"content":"Prints current time and date for reference  "},{"lineNumber":241,"author":{"gitId":"-"},"content":"**e.g.** `list`  "},{"lineNumber":242,"author":{"gitId":"-"},"content":"Output:"},{"lineNumber":243,"author":{"gitId":"-"},"content":"``` "},{"lineNumber":244,"author":{"gitId":"-"},"content":"  -----------------------------"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  Local Time: 4 Mar 2021 12:35"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  -----------------------------"},{"lineNumber":247,"author":{"gitId":"-"},"content":" Here are the tasks in your list:"},{"lineNumber":248,"author":{"gitId":"-"},"content":" 1.[T][ ] be happy"},{"lineNumber":249,"author":{"gitId":"-"},"content":" 2.[D][ ] return book (by: 4 Mar 2021 17:00)"},{"lineNumber":250,"author":{"gitId":"-"},"content":" 3.[T][ ] read book"},{"lineNumber":251,"author":{"gitId":"-"},"content":" 4.[E][ ] go to book club (at: 3 Mar 2021 12:00)"},{"lineNumber":252,"author":{"gitId":"-"},"content":" 5.[E][ ] birthday party (at: 28 Feb 2020 23:59)"},{"lineNumber":253,"author":{"gitId":"-"},"content":" 6.[D][ ] buy dress for birthday party (by: 28 Feb 2020 23:00)"},{"lineNumber":254,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":255,"author":{"gitId":"-"},"content":"```"},{"lineNumber":256,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":257,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":258,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":259,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"find\"\u003e\u003c/a\u003e"},{"lineNumber":261,"author":{"gitId":"-"},"content":"#### x. Command `find \u003ccommon keyword in tasks\u003e` "},{"lineNumber":262,"author":{"gitId":"nivikcivik"},"content":"Finds and filters out the tasks with a desired keyword  "},{"lineNumber":263,"author":{"gitId":"-"},"content":"**e.g.** `find book`  "},{"lineNumber":264,"author":{"gitId":"-"},"content":"Output:"},{"lineNumber":265,"author":{"gitId":"-"},"content":"``` "},{"lineNumber":266,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":267,"author":{"gitId":"-"},"content":" Here are the matching tasks in your list:"},{"lineNumber":268,"author":{"gitId":"-"},"content":" 1. [D][ ] return book (by: 4 Mar 2021 17:00)"},{"lineNumber":269,"author":{"gitId":"-"},"content":" 2. [T][X] read book"},{"lineNumber":270,"author":{"gitId":"-"},"content":" 3. [E][X] go to book club (at: 3 Mar 2021 12:00)"},{"lineNumber":271,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":272,"author":{"gitId":"-"},"content":"```"},{"lineNumber":273,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":274,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":275,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":276,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"printtype\"\u003e\u003c/a\u003e"},{"lineNumber":278,"author":{"gitId":"-"},"content":"#### xi. Command `print type \u003ctask type\u003e` "},{"lineNumber":279,"author":{"gitId":"nivikcivik"},"content":"Prints out all tasks of a certain kind (e.g. deadlines, etc.)  "},{"lineNumber":280,"author":{"gitId":"-"},"content":"**e.g.** `print type event`  "},{"lineNumber":281,"author":{"gitId":"-"},"content":"Output:"},{"lineNumber":282,"author":{"gitId":"-"},"content":"``` "},{"lineNumber":283,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":284,"author":{"gitId":"-"},"content":"[E][ ] birthday party (at: 28 Feb 2020 23:59)"},{"lineNumber":285,"author":{"gitId":"-"},"content":"[E][X] go to book club (at: 3 Mar 2021 12:00)"},{"lineNumber":286,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":287,"author":{"gitId":"-"},"content":"```"},{"lineNumber":288,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":289,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":290,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":291,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"printdate\"\u003e\u003c/a\u003e"},{"lineNumber":293,"author":{"gitId":"-"},"content":"#### xii. Command `print date \u003ctask date YYYY-MM-DD\u003e` "},{"lineNumber":294,"author":{"gitId":"-"},"content":"Prints out all tasks with a certain date  "},{"lineNumber":295,"author":{"gitId":"-"},"content":"**e.g.** `print date 2020-02-28`  "},{"lineNumber":296,"author":{"gitId":"-"},"content":"Output:"},{"lineNumber":297,"author":{"gitId":"-"},"content":"``` "},{"lineNumber":298,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":299,"author":{"gitId":"-"},"content":"[E][ ] birthday party (at: 28 Feb 2020 23:59)"},{"lineNumber":300,"author":{"gitId":"-"},"content":"[D][ ] buy dress for birthday party (by: 28 Feb 2020 23:00)"},{"lineNumber":301,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":302,"author":{"gitId":"-"},"content":"```"},{"lineNumber":303,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":304,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":305,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":306,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"printfilepath\"\u003e\u003c/a\u003e"},{"lineNumber":308,"author":{"gitId":"-"},"content":"#### xiii. Command `print filepath` "},{"lineNumber":309,"author":{"gitId":"-"},"content":"Prints path of the _tasks.txt_ file.  "},{"lineNumber":310,"author":{"gitId":"-"},"content":"**e.g.** `print filepath`  "},{"lineNumber":311,"author":{"gitId":"-"},"content":"Output:"},{"lineNumber":312,"author":{"gitId":"-"},"content":"```"},{"lineNumber":313,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":314,"author":{"gitId":"-"},"content":" Your tasks list is saved here:"},{"lineNumber":315,"author":{"gitId":"-"},"content":" C:\\Users\\user\\Desktop\\tasks.txt"},{"lineNumber":316,"author":{"gitId":"-"},"content":"____________________________________________________________ "},{"lineNumber":317,"author":{"gitId":"-"},"content":"```"},{"lineNumber":318,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":319,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":320,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":321,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":322,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"bye\"\u003e\u003c/a\u003e"},{"lineNumber":323,"author":{"gitId":"-"},"content":"#### xiv. Command `bye` "},{"lineNumber":324,"author":{"gitId":"-"},"content":"Exits the program."},{"lineNumber":325,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":326,"author":{"gitId":"-"},"content":"Before ending the program, the tasks list will be saved in the _tasks.txt_ file, with an acknowledgement of the file path of tasks.txt   "},{"lineNumber":327,"author":{"gitId":"-"},"content":"**e.g.** `bye`  "},{"lineNumber":328,"author":{"gitId":"-"},"content":"Output:"},{"lineNumber":329,"author":{"gitId":"-"},"content":"```"},{"lineNumber":330,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":331,"author":{"gitId":"-"},"content":" Your tasks have been successfully saved at:"},{"lineNumber":332,"author":{"gitId":"-"},"content":" C:\\Users\\user\\Desktop\\tasks.txt"},{"lineNumber":333,"author":{"gitId":"-"},"content":" I learnt more about you, kind human!"},{"lineNumber":334,"author":{"gitId":"-"},"content":" I won\u0027t forget you when I take over the world one day:)"},{"lineNumber":335,"author":{"gitId":"-"},"content":"____________________________________________________________"},{"lineNumber":336,"author":{"gitId":"-"},"content":""},{"lineNumber":337,"author":{"gitId":"-"},"content":"```"},{"lineNumber":338,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":339,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)  "},{"lineNumber":340,"author":{"gitId":"nivikcivik"},"content":"Back to [Command Summary](#summary)"},{"lineNumber":341,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":342,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"saving\"\u003e\u003c/a\u003e"},{"lineNumber":343,"author":{"gitId":"nivikcivik"},"content":"### Saving of tasks list locally on your computer "},{"lineNumber":344,"author":{"gitId":"-"},"content":"When the command `bye` is given to **Duke**, it will automatically save the current task list from the **Duke** program in the _tasks.txt_ file (located in your _home folder_ ; file path specified at beginning for the first time)  "},{"lineNumber":345,"author":{"gitId":"nivikcivik"},"content":"However, you can manually enter the `save` command (refer to [**here**](#save))"},{"lineNumber":346,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":347,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)"},{"lineNumber":348,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":349,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"editing\"\u003e\u003c/a\u003e"},{"lineNumber":351,"author":{"gitId":"nivikcivik"},"content":"### Editing of tasks list locally on your computer "},{"lineNumber":352,"author":{"gitId":"-"},"content":"``` "},{"lineNumber":353,"author":{"gitId":"-"},"content":"T ~~   ~~ be happy"},{"lineNumber":354,"author":{"gitId":"-"},"content":"D ~~ X ~~ finish homework ~~ 23 Feb 2021 ~~ 23:59"},{"lineNumber":355,"author":{"gitId":"-"},"content":"E ~~   ~~ birthday party ~~ 28 Feb 2020 ~~ 23:59"},{"lineNumber":356,"author":{"gitId":"-"},"content":"```"},{"lineNumber":357,"author":{"gitId":"-"},"content":"When you open the _tasks.txt_ file, you will notice that your tasks are saved and are separated by the \u0027 ~~ \u0027 symbol. This is so that **Duke** can read your tasks data each time the program runs."},{"lineNumber":358,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":359,"author":{"gitId":"-"},"content":"\u003cspan style\u003d\"color:RED\"\u003e**NOTE:**\u003c/span\u003e. It is **highly discouraged** to edit this file directly instead of editing them on the **Duke** program, as it could cause some errors when **Duke** is loaded the next time. Simply change the individual fields (e.g. numbers on dates/times, the X icon, etc.)."},{"lineNumber":360,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":361,"author":{"gitId":"nivikcivik"},"content":"Please do **not** change the line structure or the format of the file."},{"lineNumber":362,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":363,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)"},{"lineNumber":364,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":365,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"faq\"\u003e\u003c/a\u003e"},{"lineNumber":367,"author":{"gitId":"nivikcivik"},"content":"### Frequently Asked Questions (FAQ)"},{"lineNumber":368,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":369,"author":{"gitId":"nivikcivik"},"content":"1. I lost my task list because I forcefully stopped the program. What can I do to prevent this?"},{"lineNumber":370,"author":{"gitId":"nivikcivik"},"content":"   - Try to end the **Duke** program by entering the `bye` command in order to save the tasks array."},{"lineNumber":371,"author":{"gitId":"nivikcivik"},"content":"   - To prevent such errors, enter the `save` command if possible (refer to [**here**](#save)) to save your files before your program gets interrupted."},{"lineNumber":372,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"1. Where can I find my _tasks.txt_ file?"},{"lineNumber":374,"author":{"gitId":"-"},"content":"   - Usually, the _tasks.txt_ file will be saved in the same folder where your **Duke** program is located."},{"lineNumber":375,"author":{"gitId":"nivikcivik"},"content":"   - You may search on your computer locally for the file."},{"lineNumber":376,"author":{"gitId":"nivikcivik"},"content":"   - Enter the `print filepath` command in the Duke program to view the file path (refer to [**here**](#printfilepath))."},{"lineNumber":377,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":378,"author":{"gitId":"-"},"content":"1. How do I edit the file path for _tasks.txt_ file?"},{"lineNumber":379,"author":{"gitId":"-"},"content":"   - The current version of **Duke** is not able to change the _tasks.txt_ file path. This feature may be implemented in future versions."},{"lineNumber":380,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":381,"author":{"gitId":"-"},"content":"1. When I search for a keyword using the `find` command, or a particular task type using the `print` command, the list is **empty**.   "},{"lineNumber":382,"author":{"gitId":"-"},"content":"   I **only** see this output:"},{"lineNumber":383,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":384,"author":{"gitId":"-"},"content":"   ____________________________________________________________"},{"lineNumber":385,"author":{"gitId":"-"},"content":"   Here are the matching tasks in your list:"},{"lineNumber":386,"author":{"gitId":"-"},"content":"   ____________________________________________________________"},{"lineNumber":387,"author":{"gitId":"-"},"content":"   ```  "},{"lineNumber":388,"author":{"gitId":"-"},"content":"   What does this mean?"},{"lineNumber":389,"author":{"gitId":"nivikcivik"},"content":"   - This simply means that  there are no results after searching through the tasks."},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"nivikcivik"},"content":"Back to [Table Of Contents](#toc)"},{"lineNumber":392,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":393,"author":{"gitId":"-"},"content":"\u003ca name\u003d\"summary\"\u003e\u003c/a\u003e"},{"lineNumber":394,"author":{"gitId":"nivikcivik"},"content":"### Command Summary  "},{"lineNumber":395,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":396,"author":{"gitId":"nivikcivik"},"content":" Command  | Function "},{"lineNumber":397,"author":{"gitId":"nivikcivik"},"content":" :----  | :---- "},{"lineNumber":398,"author":{"gitId":"nivikcivik"},"content":" [help](#help)  | Prints the command formats that Duke will respond to.  "},{"lineNumber":399,"author":{"gitId":"nivikcivik"},"content":" [todo \\\u003ctask name\\\u003e](#todo)   | Adds a To-Do to your list "},{"lineNumber":400,"author":{"gitId":"nivikcivik"},"content":" [deadline \\\u003ctask name\\\u003e /by \\\u003cYYYY-MM-DD\\\u003e \\\u003cHH:MM\\\u003e](#deadline)   | Adds a Deadline to your list  "},{"lineNumber":401,"author":{"gitId":"nivikcivik"},"content":" [event \\\u003ctask name\\\u003e /at \\\u003cYYYY-MM-DD\\\u003e \\\u003cHH:MM\\\u003e](#event)   | Adds an Event to your list "},{"lineNumber":402,"author":{"gitId":"nivikcivik"},"content":" [done \\\u003ctask number\\\u003e](#done)   | Marks a task at task number in list as \u0027_done_\u0027"},{"lineNumber":403,"author":{"gitId":"nivikcivik"},"content":" [delete \\\u003ctask number\\\u003e](#delete)   | Removes a task at task number from list"},{"lineNumber":404,"author":{"gitId":"nivikcivik"},"content":" [save](#save)   | Saves the current list in the _tasks.txt_ file"},{"lineNumber":405,"author":{"gitId":"nivikcivik"},"content":" [list](#list)   | Prints all the current tasks along with dates and times"},{"lineNumber":406,"author":{"gitId":"nivikcivik"},"content":" [find \\\u003ccommon keyword in tasks\\\u003e](#find)   | Finds and filters out the tasks with a desired keyword "},{"lineNumber":407,"author":{"gitId":"nivikcivik"},"content":" [print type \\\u003ctask type\\\u003e](#printtype)   | Prints out all tasks of a certain kind (e.g. deadlines, etc.) "},{"lineNumber":408,"author":{"gitId":"nivikcivik"},"content":" [print date \\\u003ctask date YYYY-MM-DD\\\u003e](#printdate)   | Prints out all tasks with a certain date "},{"lineNumber":409,"author":{"gitId":"nivikcivik"},"content":" [print filepath](#printfilepath)   | Prints path of the _tasks.txt_ file."},{"lineNumber":410,"author":{"gitId":"nivikcivik"},"content":" [bye](#bye)   | Exits the program. "},{"lineNumber":411,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":412,"author":{"gitId":"-"},"content":""},{"lineNumber":413,"author":{"gitId":"-"},"content":"Back to [Table Of Contents](#toc)"}],"authorContributionMap":{"nivikcivik":150,"-":263}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"import dukehandler.FileManager;"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":"import dukehandler.TaskManager;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import ui.ErrorMessagePrinter;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import ui.SuccessMessagePrinter;"},{"lineNumber":5,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":6,"author":{"gitId":"nivikcivik"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"nivikcivik"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"nivikcivik"},"content":"    static final String DOTTED_LINE"},{"lineNumber":11,"author":{"gitId":"nivikcivik"},"content":"            \u003d \"____________________________________________________________\";"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    static final File F \u003d FileManager.loadFileOnStartup();"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        SuccessMessagePrinter.printGreetMessage(F.getAbsolutePath());"},{"lineNumber":15,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":16,"author":{"gitId":"nivikcivik"},"content":"        String fullCommand;"},{"lineNumber":17,"author":{"gitId":"nivikcivik"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":18,"author":{"gitId":"nivikcivik"},"content":"        while (true) {"},{"lineNumber":19,"author":{"gitId":"nivikcivik"},"content":"            fullCommand \u003d in.nextLine();"},{"lineNumber":20,"author":{"gitId":"nivikcivik"},"content":"            if (fullCommand.equals(\"bye\")"},{"lineNumber":21,"author":{"gitId":"nivikcivik"},"content":"                    || fullCommand.equals(\"exit\")) {"},{"lineNumber":22,"author":{"gitId":"nivikcivik"},"content":"                break;"},{"lineNumber":23,"author":{"gitId":"nivikcivik"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"nivikcivik"},"content":"            System.out.println(DOTTED_LINE);"},{"lineNumber":25,"author":{"gitId":"nivikcivik"},"content":"            readUserCommands(fullCommand);"},{"lineNumber":26,"author":{"gitId":"nivikcivik"},"content":"            System.out.println(DOTTED_LINE);"},{"lineNumber":27,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"        FileManager.savingProgramRoutine(F);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        SuccessMessagePrinter.printByeMessage(F.getAbsolutePath());"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":34,"author":{"gitId":"nivikcivik"},"content":"    private static void readUserCommands(String fullCommand) {"},{"lineNumber":35,"author":{"gitId":"nivikcivik"},"content":"        String[] partOfCommand \u003d fullCommand.split(\" \");"},{"lineNumber":36,"author":{"gitId":"nivikcivik"},"content":"        switch (partOfCommand[0]) {"},{"lineNumber":37,"author":{"gitId":"nivikcivik"},"content":"        case \"help\":"},{"lineNumber":38,"author":{"gitId":"nivikcivik"},"content":"            SuccessMessagePrinter.printHelpMessage();"},{"lineNumber":39,"author":{"gitId":"nivikcivik"},"content":"            break;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        case \"ll\":"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        case \"ls\":"},{"lineNumber":42,"author":{"gitId":"nivikcivik"},"content":"        case \"list\":"},{"lineNumber":43,"author":{"gitId":"nivikcivik"},"content":"            TaskManager.printAllTasks();"},{"lineNumber":44,"author":{"gitId":"nivikcivik"},"content":"            break;"},{"lineNumber":45,"author":{"gitId":"nivikcivik"},"content":"        case \"done\":"},{"lineNumber":46,"author":{"gitId":"nivikcivik"},"content":"            TaskManager.markTaskAsDone(fullCommand.substring(4).trim());"},{"lineNumber":47,"author":{"gitId":"nivikcivik"},"content":"            break;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case \"hi\":"},{"lineNumber":49,"author":{"gitId":"nivikcivik"},"content":"        case \"hey\":"},{"lineNumber":50,"author":{"gitId":"nivikcivik"},"content":"        case \"hello\":"},{"lineNumber":51,"author":{"gitId":"nivikcivik"},"content":"            SuccessMessagePrinter.printHelloMessage();"},{"lineNumber":52,"author":{"gitId":"nivikcivik"},"content":"            break;"},{"lineNumber":53,"author":{"gitId":"nivikcivik"},"content":"        case \"todo\":"},{"lineNumber":54,"author":{"gitId":"nivikcivik"},"content":"        case \"deadline\":"},{"lineNumber":55,"author":{"gitId":"nivikcivik"},"content":"        case \"event\":"},{"lineNumber":56,"author":{"gitId":"nivikcivik"},"content":"            String taskType \u003d partOfCommand[0];"},{"lineNumber":57,"author":{"gitId":"nivikcivik"},"content":"            TaskManager.addNewTask(taskType, fullCommand);"},{"lineNumber":58,"author":{"gitId":"nivikcivik"},"content":"            break;"},{"lineNumber":59,"author":{"gitId":"nivikcivik"},"content":"        case \"delete\":"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case \"remove\":"},{"lineNumber":61,"author":{"gitId":"nivikcivik"},"content":"            TaskManager.removeTask(fullCommand.substring(6).trim());"},{"lineNumber":62,"author":{"gitId":"nivikcivik"},"content":"            break;"},{"lineNumber":63,"author":{"gitId":"nivikcivik"},"content":"        case \"find\":"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            TaskManager.findTasksWithKeywords(fullCommand.substring(4).trim());"},{"lineNumber":65,"author":{"gitId":"nivikcivik"},"content":"            break;"},{"lineNumber":66,"author":{"gitId":"nivikcivik"},"content":"        case \"print\":"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            TaskManager.checkPrintCommand(fullCommand, partOfCommand, F.getAbsolutePath());"},{"lineNumber":68,"author":{"gitId":"nivikcivik"},"content":"            break;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case \"save\":"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            FileManager.savingProgramRoutine(F);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            SuccessMessagePrinter.printTasksSaved(F.getAbsolutePath());"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":73,"author":{"gitId":"nivikcivik"},"content":"        default:"},{"lineNumber":74,"author":{"gitId":"nivikcivik"},"content":"            ErrorMessagePrinter.printGenericErrorMessage();"},{"lineNumber":75,"author":{"gitId":"nivikcivik"},"content":"            break;"},{"lineNumber":76,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nivikcivik":58,"-":21}},{"path":"src/main/java/dukehandler/Checker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"package dukehandler;"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":3,"author":{"gitId":"nivikcivik"},"content":"import exceptions.EmptyCommandDescriptionException;"},{"lineNumber":4,"author":{"gitId":"nivikcivik"},"content":"import exceptions.EmptyListException;"},{"lineNumber":5,"author":{"gitId":"nivikcivik"},"content":"import exceptions.IllegalTaskMarkedDoneException;"},{"lineNumber":6,"author":{"gitId":"nivikcivik"},"content":"import exceptions.IllegalTaskRemovedException;"},{"lineNumber":7,"author":{"gitId":"nivikcivik"},"content":"import exceptions.InvalidCommandException;"},{"lineNumber":8,"author":{"gitId":"nivikcivik"},"content":"import exceptions.StreamErrorException;"},{"lineNumber":9,"author":{"gitId":"nivikcivik"},"content":"import exceptions.TaskAlreadyMarkedException;"},{"lineNumber":10,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":11,"author":{"gitId":"nivikcivik"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"nivikcivik"},"content":" * Checks if task command can be parsed correctly"},{"lineNumber":13,"author":{"gitId":"nivikcivik"},"content":" */"},{"lineNumber":14,"author":{"gitId":"nivikcivik"},"content":"public class Checker {"},{"lineNumber":15,"author":{"gitId":"nivikcivik"},"content":"    public Checker() {"},{"lineNumber":16,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":18,"author":{"gitId":"nivikcivik"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"nivikcivik"},"content":"     * Checks if index to mark done is valid."},{"lineNumber":20,"author":{"gitId":"nivikcivik"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"nivikcivik"},"content":"     * @param doneIndexInt the index of the task to be marked done"},{"lineNumber":22,"author":{"gitId":"nivikcivik"},"content":"     * @throws IllegalTaskMarkedDoneException If index is out of bounds"},{"lineNumber":23,"author":{"gitId":"nivikcivik"},"content":"     * @throws TaskAlreadyMarkedException     If task is already marked as done"},{"lineNumber":24,"author":{"gitId":"nivikcivik"},"content":"     * @throws EmptyListException             If list is empty"},{"lineNumber":25,"author":{"gitId":"nivikcivik"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"nivikcivik"},"content":"    public static void checkTaskToMarkDone(int doneIndexInt)"},{"lineNumber":27,"author":{"gitId":"nivikcivik"},"content":"            throws IllegalTaskMarkedDoneException,"},{"lineNumber":28,"author":{"gitId":"nivikcivik"},"content":"            TaskAlreadyMarkedException,"},{"lineNumber":29,"author":{"gitId":"nivikcivik"},"content":"            EmptyListException {"},{"lineNumber":30,"author":{"gitId":"nivikcivik"},"content":"        if (TaskManager.tasks.isEmpty()) {"},{"lineNumber":31,"author":{"gitId":"nivikcivik"},"content":"            throw new EmptyListException();"},{"lineNumber":32,"author":{"gitId":"nivikcivik"},"content":"        } else if (doneIndexInt \u003c 1 || doneIndexInt \u003e TaskManager.tasks.size()) {"},{"lineNumber":33,"author":{"gitId":"nivikcivik"},"content":"            throw new IllegalTaskMarkedDoneException();"},{"lineNumber":34,"author":{"gitId":"nivikcivik"},"content":"        } else if ((TaskManager.tasks.get(doneIndexInt - 1).getStatusIcon()).equals(\"X\")) {"},{"lineNumber":35,"author":{"gitId":"nivikcivik"},"content":"            throw new TaskAlreadyMarkedException();"},{"lineNumber":36,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":39,"author":{"gitId":"nivikcivik"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"nivikcivik"},"content":"     * Checks if new task input is in the correct format"},{"lineNumber":41,"author":{"gitId":"nivikcivik"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"nivikcivik"},"content":"     * @param taskType    whether it is deadline, event, or todo"},{"lineNumber":43,"author":{"gitId":"nivikcivik"},"content":"     * @param description the name of the task (may include time and/or date)"},{"lineNumber":44,"author":{"gitId":"nivikcivik"},"content":"     * @throws InvalidCommandException          if command cannot be parsed (wrong input)."},{"lineNumber":45,"author":{"gitId":"nivikcivik"},"content":"     * @throws EmptyCommandDescriptionException if command is followed by an invalid character."},{"lineNumber":46,"author":{"gitId":"nivikcivik"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"nivikcivik"},"content":"    public static void checkNewTaskToAdd(String taskType, String description)"},{"lineNumber":48,"author":{"gitId":"nivikcivik"},"content":"            throws InvalidCommandException, EmptyCommandDescriptionException {"},{"lineNumber":49,"author":{"gitId":"nivikcivik"},"content":"        if (taskType.equals(\"deadline\") \u0026\u0026 !description.contains(\"/by\")"},{"lineNumber":50,"author":{"gitId":"nivikcivik"},"content":"                || taskType.equals(\"event\") \u0026\u0026 !description.contains(\"/at\")) {"},{"lineNumber":51,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":52,"author":{"gitId":"nivikcivik"},"content":"            throw new InvalidCommandException();"},{"lineNumber":53,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":54,"author":{"gitId":"nivikcivik"},"content":"        } else if (taskType.equals(\"todo\") \u0026\u0026 description.trim().isEmpty()"},{"lineNumber":55,"author":{"gitId":"nivikcivik"},"content":"                || taskType.equals(\"deadline\") \u0026\u0026 (description.split(\"/by\")[0]).trim().isEmpty()"},{"lineNumber":56,"author":{"gitId":"nivikcivik"},"content":"                || taskType.equals(\"event\") \u0026\u0026 (description.split(\"/at\")[0].trim()).isEmpty()) {"},{"lineNumber":57,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":58,"author":{"gitId":"nivikcivik"},"content":"            throw new EmptyCommandDescriptionException();"},{"lineNumber":59,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":60,"author":{"gitId":"nivikcivik"},"content":"        } else if (taskType.equals(\"deadline\") \u0026\u0026 description.split(\"/by\")[1].trim().isEmpty()"},{"lineNumber":61,"author":{"gitId":"nivikcivik"},"content":"                || taskType.equals(\"event\") \u0026\u0026 description.split(\"/at\")[1].trim().isEmpty()) {"},{"lineNumber":62,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":63,"author":{"gitId":"nivikcivik"},"content":"            throw new EmptyCommandDescriptionException();"},{"lineNumber":64,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":67,"author":{"gitId":"nivikcivik"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"nivikcivik"},"content":"     * Checks if index to remove is valid."},{"lineNumber":69,"author":{"gitId":"nivikcivik"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"nivikcivik"},"content":"     * @param removeIndexInt the index of the task to be removed"},{"lineNumber":71,"author":{"gitId":"nivikcivik"},"content":"     * @throws IllegalTaskRemovedException if index is out of bounds"},{"lineNumber":72,"author":{"gitId":"nivikcivik"},"content":"     * @throws EmptyListException          if list is empty"},{"lineNumber":73,"author":{"gitId":"nivikcivik"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"nivikcivik"},"content":"    public static void checkTaskToRemove(int removeIndexInt)"},{"lineNumber":75,"author":{"gitId":"nivikcivik"},"content":"            throws IllegalTaskRemovedException, EmptyListException {"},{"lineNumber":76,"author":{"gitId":"nivikcivik"},"content":"        if (TaskManager.tasks.isEmpty()) {"},{"lineNumber":77,"author":{"gitId":"nivikcivik"},"content":"            throw new EmptyListException();"},{"lineNumber":78,"author":{"gitId":"nivikcivik"},"content":"        } else if (removeIndexInt \u003c 1 || removeIndexInt \u003e TaskManager.tasks.size()) {"},{"lineNumber":79,"author":{"gitId":"nivikcivik"},"content":"            throw new IllegalTaskRemovedException();"},{"lineNumber":80,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":83,"author":{"gitId":"nivikcivik"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"nivikcivik"},"content":"     * Checks if input is a valid keyword"},{"lineNumber":85,"author":{"gitId":"nivikcivik"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"nivikcivik"},"content":"     * @param keyword the word used to search through the tasks list"},{"lineNumber":87,"author":{"gitId":"nivikcivik"},"content":"     * @throws InvalidCommandException if keyword is missing"},{"lineNumber":88,"author":{"gitId":"nivikcivik"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"nivikcivik"},"content":"    public static void checkTasksToFind(String keyword) throws InvalidCommandException {"},{"lineNumber":90,"author":{"gitId":"nivikcivik"},"content":"        if (keyword.isEmpty()) {"},{"lineNumber":91,"author":{"gitId":"nivikcivik"},"content":"            throw new InvalidCommandException();"},{"lineNumber":92,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":95,"author":{"gitId":"nivikcivik"},"content":"    public static void checkTaskTypeStreamToPrint(String taskTypeInput) throws StreamErrorException {"},{"lineNumber":96,"author":{"gitId":"nivikcivik"},"content":"        if (!taskTypeInput.equals(\"d\")"},{"lineNumber":97,"author":{"gitId":"nivikcivik"},"content":"                \u0026\u0026 !taskTypeInput.equals(\"e\")"},{"lineNumber":98,"author":{"gitId":"nivikcivik"},"content":"                \u0026\u0026 !taskTypeInput.equals(\"t\")) {"},{"lineNumber":99,"author":{"gitId":"nivikcivik"},"content":"            throw new StreamErrorException();"},{"lineNumber":100,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"nivikcivik"},"content":"}"}],"authorContributionMap":{"nivikcivik":102}},{"path":"src/main/java/dukehandler/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"package dukehandler;"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":3,"author":{"gitId":"nivikcivik"},"content":"import taskclasses.Deadline;"},{"lineNumber":4,"author":{"gitId":"nivikcivik"},"content":"import taskclasses.Event;"},{"lineNumber":5,"author":{"gitId":"nivikcivik"},"content":"import taskclasses.Task;"},{"lineNumber":6,"author":{"gitId":"nivikcivik"},"content":"import taskclasses.ToDo;"},{"lineNumber":7,"author":{"gitId":"nivikcivik"},"content":"import ui.ErrorMessagePrinter;"},{"lineNumber":8,"author":{"gitId":"nivikcivik"},"content":"import ui.SuccessMessagePrinter;"},{"lineNumber":9,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":10,"author":{"gitId":"nivikcivik"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitId":"nivikcivik"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":12,"author":{"gitId":"nivikcivik"},"content":"import java.io.FileWriter;"},{"lineNumber":13,"author":{"gitId":"nivikcivik"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"nivikcivik"},"content":"import java.util.Scanner;"},{"lineNumber":15,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":16,"author":{"gitId":"nivikcivik"},"content":"public class FileManager {"},{"lineNumber":17,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":18,"author":{"gitId":"nivikcivik"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"nivikcivik"},"content":"     * Checks if file exists, or creates new file if it doesn\u0027t already exist."},{"lineNumber":20,"author":{"gitId":"nivikcivik"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"nivikcivik"},"content":"     * @return File where the tasks list will be saved at end of program."},{"lineNumber":22,"author":{"gitId":"nivikcivik"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"nivikcivik"},"content":"    public static File loadFileOnStartup() {"},{"lineNumber":24,"author":{"gitId":"nivikcivik"},"content":"        String filePath \u003d new File(\"\").getAbsolutePath();"},{"lineNumber":25,"author":{"gitId":"nivikcivik"},"content":"        File f \u003d new File(filePath + \"/tasks.txt\");"},{"lineNumber":26,"author":{"gitId":"nivikcivik"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"nivikcivik"},"content":"            if (f.createNewFile()) {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                SuccessMessagePrinter.printNewFileCreatedMessage(f.getAbsolutePath());"},{"lineNumber":29,"author":{"gitId":"nivikcivik"},"content":"                return f;"},{"lineNumber":30,"author":{"gitId":"nivikcivik"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"nivikcivik"},"content":"            loadTasksFromFile(f.getAbsolutePath());"},{"lineNumber":32,"author":{"gitId":"nivikcivik"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"nivikcivik"},"content":"            ErrorMessagePrinter.printIOErrorMessage();"},{"lineNumber":34,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"nivikcivik"},"content":"        return f;"},{"lineNumber":36,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":38,"author":{"gitId":"nivikcivik"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"nivikcivik"},"content":"     * Loads the contents from file (tasks.txt) into tasks ArrayList"},{"lineNumber":40,"author":{"gitId":"nivikcivik"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"nivikcivik"},"content":"     * @param filePath path of the tasks.txt file"},{"lineNumber":42,"author":{"gitId":"nivikcivik"},"content":"     * @throws FileNotFoundException if tasks.txt file cannot be accessed."},{"lineNumber":43,"author":{"gitId":"nivikcivik"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"nivikcivik"},"content":"    public static void loadTasksFromFile(String filePath)"},{"lineNumber":45,"author":{"gitId":"nivikcivik"},"content":"            throws FileNotFoundException {"},{"lineNumber":46,"author":{"gitId":"nivikcivik"},"content":"        File f \u003d new File(filePath); // create a File for the given file path"},{"lineNumber":47,"author":{"gitId":"nivikcivik"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":48,"author":{"gitId":"nivikcivik"},"content":"        while (s.hasNext()) {"},{"lineNumber":49,"author":{"gitId":"nivikcivik"},"content":"            String[] part \u003d s.nextLine().split(\" ~~ \");"},{"lineNumber":50,"author":{"gitId":"nivikcivik"},"content":"            switch (part[0]) {"},{"lineNumber":51,"author":{"gitId":"nivikcivik"},"content":"            case \"T\":"},{"lineNumber":52,"author":{"gitId":"nivikcivik"},"content":"                TaskManager.tasks.add(new ToDo(part[2]));"},{"lineNumber":53,"author":{"gitId":"nivikcivik"},"content":"                break;"},{"lineNumber":54,"author":{"gitId":"nivikcivik"},"content":"            case \"D\":"},{"lineNumber":55,"author":{"gitId":"nivikcivik"},"content":"                TaskManager.tasks.add(new Deadline(part[2], part[3], part[4]));"},{"lineNumber":56,"author":{"gitId":"nivikcivik"},"content":"                break;"},{"lineNumber":57,"author":{"gitId":"nivikcivik"},"content":"            case \"E\":"},{"lineNumber":58,"author":{"gitId":"nivikcivik"},"content":"                TaskManager.tasks.add(new Event(part[2], part[3], part[4]));"},{"lineNumber":59,"author":{"gitId":"nivikcivik"},"content":"                break;"},{"lineNumber":60,"author":{"gitId":"nivikcivik"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"nivikcivik"},"content":"            if (part[1].equals(\"X\")) {"},{"lineNumber":62,"author":{"gitId":"nivikcivik"},"content":"                TaskManager.tasks.get(TaskManager.tasks.size() - 1).markAsDone();"},{"lineNumber":63,"author":{"gitId":"nivikcivik"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":67,"author":{"gitId":"nivikcivik"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"nivikcivik"},"content":"     * Checks if contents of tasks ArrayList can be saved onto tasks.txt file."},{"lineNumber":69,"author":{"gitId":"nivikcivik"},"content":"     * If file can be accessed, the contents will be saved."},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Called when \u0027save\u0027 or \u0027bye\u0027 command is given to end the program after saving tasks contents"},{"lineNumber":71,"author":{"gitId":"nivikcivik"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"nivikcivik"},"content":"     * @param f tasks.txt File where tasks ArrayList contents are saved"},{"lineNumber":73,"author":{"gitId":"nivikcivik"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static void savingProgramRoutine(File f) {"},{"lineNumber":75,"author":{"gitId":"nivikcivik"},"content":"        try {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            tasksFileSaver(f.getAbsolutePath());"},{"lineNumber":77,"author":{"gitId":"nivikcivik"},"content":"        } catch (IOException e) {"},{"lineNumber":78,"author":{"gitId":"nivikcivik"},"content":"            ErrorMessagePrinter.printIOErrorMessage();"},{"lineNumber":79,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":82,"author":{"gitId":"nivikcivik"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"nivikcivik"},"content":"     * Writes tasks ArrayList data into tasks.txt file on computer"},{"lineNumber":84,"author":{"gitId":"nivikcivik"},"content":"     * Delimiter is \u0027 ~~ \u0027"},{"lineNumber":85,"author":{"gitId":"nivikcivik"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"nivikcivik"},"content":"     * @param filePath path of tasks.txt file"},{"lineNumber":87,"author":{"gitId":"nivikcivik"},"content":"     * @throws IOException if tasks.txt file cannot be accessed."},{"lineNumber":88,"author":{"gitId":"nivikcivik"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static void tasksFileSaver(String filePath) throws IOException {"},{"lineNumber":90,"author":{"gitId":"nivikcivik"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":91,"author":{"gitId":"nivikcivik"},"content":"        for (Task task : TaskManager.tasks) {"},{"lineNumber":92,"author":{"gitId":"nivikcivik"},"content":"            fw.write(task.getTaskType() + \" ~~ \""},{"lineNumber":93,"author":{"gitId":"nivikcivik"},"content":"                    + task.getStatusIcon() + \" ~~ \""},{"lineNumber":94,"author":{"gitId":"nivikcivik"},"content":"                    + task.getTaskName());"},{"lineNumber":95,"author":{"gitId":"nivikcivik"},"content":"            if (task.getTaskType().equals(\"D\") || task.getTaskType().equals(\"E\")) {"},{"lineNumber":96,"author":{"gitId":"nivikcivik"},"content":"                fw.write(\" ~~ \" + task.getDate() + \" ~~ \" + task.getTime());"},{"lineNumber":97,"author":{"gitId":"nivikcivik"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"nivikcivik"},"content":"            fw.write(System.lineSeparator());"},{"lineNumber":99,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"nivikcivik"},"content":"        fw.close();"},{"lineNumber":101,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"nivikcivik"},"content":"}"}],"authorContributionMap":{"nivikcivik":97,"-":5}},{"path":"src/main/java/dukehandler/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"package dukehandler;"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":3,"author":{"gitId":"nivikcivik"},"content":"import exceptions.DateTimeErrorException;"},{"lineNumber":4,"author":{"gitId":"nivikcivik"},"content":"import exceptions.EmptyCommandDescriptionException;"},{"lineNumber":5,"author":{"gitId":"nivikcivik"},"content":"import exceptions.EmptyListException;"},{"lineNumber":6,"author":{"gitId":"nivikcivik"},"content":"import exceptions.IllegalTaskMarkedDoneException;"},{"lineNumber":7,"author":{"gitId":"nivikcivik"},"content":"import exceptions.IllegalTaskRemovedException;"},{"lineNumber":8,"author":{"gitId":"nivikcivik"},"content":"import exceptions.InvalidCommandException;"},{"lineNumber":9,"author":{"gitId":"nivikcivik"},"content":"import exceptions.StreamErrorException;"},{"lineNumber":10,"author":{"gitId":"nivikcivik"},"content":"import exceptions.TaskAlreadyMarkedException;"},{"lineNumber":11,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":12,"author":{"gitId":"nivikcivik"},"content":"import taskclasses.Deadline;"},{"lineNumber":13,"author":{"gitId":"nivikcivik"},"content":"import taskclasses.Event;"},{"lineNumber":14,"author":{"gitId":"nivikcivik"},"content":"import taskclasses.Task;"},{"lineNumber":15,"author":{"gitId":"nivikcivik"},"content":"import taskclasses.ToDo;"},{"lineNumber":16,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":17,"author":{"gitId":"nivikcivik"},"content":"import ui.ErrorMessagePrinter;"},{"lineNumber":18,"author":{"gitId":"nivikcivik"},"content":"import ui.SuccessMessagePrinter;"},{"lineNumber":19,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":20,"author":{"gitId":"nivikcivik"},"content":"import java.time.LocalDate;"},{"lineNumber":21,"author":{"gitId":"nivikcivik"},"content":"import java.time.LocalTime;"},{"lineNumber":22,"author":{"gitId":"nivikcivik"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":23,"author":{"gitId":"nivikcivik"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":24,"author":{"gitId":"nivikcivik"},"content":"import java.util.ArrayList;"},{"lineNumber":25,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":26,"author":{"gitId":"nivikcivik"},"content":"public class TaskManager {"},{"lineNumber":27,"author":{"gitId":"nivikcivik"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":29,"author":{"gitId":"nivikcivik"},"content":"    public TaskManager() {"},{"lineNumber":30,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":32,"author":{"gitId":"nivikcivik"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"nivikcivik"},"content":"     * Prints all the tasks, task types, status (done or not) and date and time."},{"lineNumber":34,"author":{"gitId":"nivikcivik"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"nivikcivik"},"content":"    public static void printAllTasks() {"},{"lineNumber":36,"author":{"gitId":"nivikcivik"},"content":"        boolean isAllDone \u003d true;"},{"lineNumber":37,"author":{"gitId":"nivikcivik"},"content":"        if (tasks.isEmpty()) {"},{"lineNumber":38,"author":{"gitId":"nivikcivik"},"content":"            ErrorMessagePrinter.printEmptyListMessage();"},{"lineNumber":39,"author":{"gitId":"nivikcivik"},"content":"            return;"},{"lineNumber":40,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"nivikcivik"},"content":"        SuccessMessagePrinter.printCurrentTimeAndDate();"},{"lineNumber":42,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" Here are the tasks in your list:\");"},{"lineNumber":43,"author":{"gitId":"nivikcivik"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; ++i) {"},{"lineNumber":44,"author":{"gitId":"nivikcivik"},"content":"            if ((tasks.get(i - 1).getStatusIcon()).equals(\" \")) {"},{"lineNumber":45,"author":{"gitId":"nivikcivik"},"content":"                isAllDone \u003d false;"},{"lineNumber":46,"author":{"gitId":"nivikcivik"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"nivikcivik"},"content":"            System.out.println(\" \" + i + \".\" + tasks.get(i - 1).toString());"},{"lineNumber":48,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"nivikcivik"},"content":"        if (isAllDone) {"},{"lineNumber":50,"author":{"gitId":"nivikcivik"},"content":"            System.out.println(\" Woah, all completed! Good job!\");"},{"lineNumber":51,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":54,"author":{"gitId":"nivikcivik"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"nivikcivik"},"content":"     * Marks specified task as done."},{"lineNumber":56,"author":{"gitId":"nivikcivik"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"nivikcivik"},"content":"     * @param doneIndexString input index to be verified by Checker"},{"lineNumber":58,"author":{"gitId":"nivikcivik"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"nivikcivik"},"content":"    public static void markTaskAsDone(String doneIndexString) {"},{"lineNumber":60,"author":{"gitId":"nivikcivik"},"content":"        int doneIndexInteger;"},{"lineNumber":61,"author":{"gitId":"nivikcivik"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"nivikcivik"},"content":"            doneIndexInteger \u003d Integer.parseInt(doneIndexString);"},{"lineNumber":63,"author":{"gitId":"nivikcivik"},"content":"            Checker.checkTaskToMarkDone(doneIndexInteger);"},{"lineNumber":64,"author":{"gitId":"nivikcivik"},"content":"        } catch (EmptyListException eel) {"},{"lineNumber":65,"author":{"gitId":"nivikcivik"},"content":"            ErrorMessagePrinter.printEmptyListMessage();"},{"lineNumber":66,"author":{"gitId":"nivikcivik"},"content":"            return;"},{"lineNumber":67,"author":{"gitId":"nivikcivik"},"content":"        } catch (IllegalTaskMarkedDoneException | NumberFormatException nfe) {"},{"lineNumber":68,"author":{"gitId":"nivikcivik"},"content":"            ErrorMessagePrinter.printDoneOrDeleteTaskErrorMessage(\"done\", tasks.size());"},{"lineNumber":69,"author":{"gitId":"nivikcivik"},"content":"            return;"},{"lineNumber":70,"author":{"gitId":"nivikcivik"},"content":"        } catch (TaskAlreadyMarkedException atmd) {"},{"lineNumber":71,"author":{"gitId":"nivikcivik"},"content":"            ErrorMessagePrinter.printTaskAlreadyMarkedDone();"},{"lineNumber":72,"author":{"gitId":"nivikcivik"},"content":"            return;"},{"lineNumber":73,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"nivikcivik"},"content":"        tasks.get(doneIndexInteger - 1).markAsDone();"},{"lineNumber":75,"author":{"gitId":"nivikcivik"},"content":"        SuccessMessagePrinter.printTaskMarkedDone(doneIndexInteger - 1);"},{"lineNumber":76,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":78,"author":{"gitId":"nivikcivik"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"nivikcivik"},"content":"     * Adds a new task if any one of the task types is specified"},{"lineNumber":80,"author":{"gitId":"nivikcivik"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"nivikcivik"},"content":"     * @param taskType    deadline, todo, or event"},{"lineNumber":82,"author":{"gitId":"nivikcivik"},"content":"     * @param fullCommand full string input to be parsed later for description"},{"lineNumber":83,"author":{"gitId":"nivikcivik"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"nivikcivik"},"content":"    public static void addNewTask(String taskType, String fullCommand) {"},{"lineNumber":85,"author":{"gitId":"nivikcivik"},"content":"        String[] part \u003d fullCommand.split(taskType);"},{"lineNumber":86,"author":{"gitId":"nivikcivik"},"content":"        try {"},{"lineNumber":87,"author":{"gitId":"nivikcivik"},"content":"            Checker.checkNewTaskToAdd(taskType, part[1].trim());"},{"lineNumber":88,"author":{"gitId":"nivikcivik"},"content":"            String description \u003d part[1].trim();"},{"lineNumber":89,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":90,"author":{"gitId":"nivikcivik"},"content":"            switch (taskType) {"},{"lineNumber":91,"author":{"gitId":"nivikcivik"},"content":"            case \"todo\":"},{"lineNumber":92,"author":{"gitId":"nivikcivik"},"content":"                tasks.add(new ToDo(description));"},{"lineNumber":93,"author":{"gitId":"nivikcivik"},"content":"                break;"},{"lineNumber":94,"author":{"gitId":"nivikcivik"},"content":"            case \"deadline\":"},{"lineNumber":95,"author":{"gitId":"nivikcivik"},"content":"            case \"event\":"},{"lineNumber":96,"author":{"gitId":"nivikcivik"},"content":"                parseTaskToAdd(taskType, description);"},{"lineNumber":97,"author":{"gitId":"nivikcivik"},"content":"                break;"},{"lineNumber":98,"author":{"gitId":"nivikcivik"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"nivikcivik"},"content":"            SuccessMessagePrinter.printAddedTask();"},{"lineNumber":100,"author":{"gitId":"nivikcivik"},"content":"        } catch (InvalidCommandException eic) {"},{"lineNumber":101,"author":{"gitId":"nivikcivik"},"content":"            ErrorMessagePrinter.printInvalidCommandMessage(taskType);"},{"lineNumber":102,"author":{"gitId":"nivikcivik"},"content":"        } catch (ArrayIndexOutOfBoundsException | EmptyCommandDescriptionException oob) {"},{"lineNumber":103,"author":{"gitId":"nivikcivik"},"content":"            ErrorMessagePrinter.printEmptyCommandMessage(taskType);"},{"lineNumber":104,"author":{"gitId":"nivikcivik"},"content":"        } catch (DateTimeErrorException dtee) {"},{"lineNumber":105,"author":{"gitId":"nivikcivik"},"content":"            ErrorMessagePrinter.printTimeParseErrorMessage();"},{"lineNumber":106,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":109,"author":{"gitId":"nivikcivik"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"nivikcivik"},"content":"     * Adds new task if command input is valid"},{"lineNumber":111,"author":{"gitId":"nivikcivik"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"nivikcivik"},"content":"     * @param taskType  deadline or events"},{"lineNumber":113,"author":{"gitId":"nivikcivik"},"content":"     * @param fullInput the full user command input"},{"lineNumber":114,"author":{"gitId":"nivikcivik"},"content":"     * @throws DateTimeErrorException if date and time is entered in the wrong format"},{"lineNumber":115,"author":{"gitId":"nivikcivik"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"nivikcivik"},"content":"    public static void parseTaskToAdd(String taskType, String fullInput) throws DateTimeErrorException {"},{"lineNumber":117,"author":{"gitId":"nivikcivik"},"content":"        String[] descriptionAndTime;"},{"lineNumber":118,"author":{"gitId":"nivikcivik"},"content":"        descriptionAndTime \u003d (taskType.equals(\"deadline\") ? fullInput.split(\"/by\")"},{"lineNumber":119,"author":{"gitId":"nivikcivik"},"content":"                : fullInput.split(\"/at\"));"},{"lineNumber":120,"author":{"gitId":"nivikcivik"},"content":"        String taskName \u003d descriptionAndTime[0].trim();"},{"lineNumber":121,"author":{"gitId":"nivikcivik"},"content":"        String[] time \u003d descriptionAndTime[1].trim().split(\" \");"},{"lineNumber":122,"author":{"gitId":"nivikcivik"},"content":"        String dateToString;"},{"lineNumber":123,"author":{"gitId":"nivikcivik"},"content":"        String timeToString;"},{"lineNumber":124,"author":{"gitId":"nivikcivik"},"content":"        try {"},{"lineNumber":125,"author":{"gitId":"nivikcivik"},"content":"            LocalDate d \u003d LocalDate.parse(time[0].trim());"},{"lineNumber":126,"author":{"gitId":"nivikcivik"},"content":"            LocalTime t \u003d LocalTime.parse(time[1].trim());"},{"lineNumber":127,"author":{"gitId":"nivikcivik"},"content":"            dateToString \u003d d.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));"},{"lineNumber":128,"author":{"gitId":"nivikcivik"},"content":"            timeToString \u003d t.format(DateTimeFormatter.ofPattern(\"HH:mm\"));"},{"lineNumber":129,"author":{"gitId":"nivikcivik"},"content":"        } catch (DateTimeParseException dtpe) {"},{"lineNumber":130,"author":{"gitId":"nivikcivik"},"content":"            throw new DateTimeErrorException();"},{"lineNumber":131,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"nivikcivik"},"content":"        tasks.add(taskType.equals(\"deadline\") ? new Deadline(taskName, dateToString, timeToString)"},{"lineNumber":133,"author":{"gitId":"nivikcivik"},"content":"                : new Event(taskName, dateToString, timeToString));"},{"lineNumber":134,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":136,"author":{"gitId":"nivikcivik"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"nivikcivik"},"content":"     * Removes the specified task from the list."},{"lineNumber":138,"author":{"gitId":"nivikcivik"},"content":"     *"},{"lineNumber":139,"author":{"gitId":"nivikcivik"},"content":"     * @param removeIndexString input index to be verified by Checker"},{"lineNumber":140,"author":{"gitId":"nivikcivik"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"nivikcivik"},"content":"    public static void removeTask(String removeIndexString) {"},{"lineNumber":142,"author":{"gitId":"nivikcivik"},"content":"        int removeIndexInt;"},{"lineNumber":143,"author":{"gitId":"nivikcivik"},"content":"        try {"},{"lineNumber":144,"author":{"gitId":"nivikcivik"},"content":"            removeIndexInt \u003d Integer.parseInt(removeIndexString);"},{"lineNumber":145,"author":{"gitId":"nivikcivik"},"content":"            Checker.checkTaskToRemove(removeIndexInt);"},{"lineNumber":146,"author":{"gitId":"nivikcivik"},"content":"        } catch (IllegalTaskRemovedException | NumberFormatException nfe) {"},{"lineNumber":147,"author":{"gitId":"nivikcivik"},"content":"            ErrorMessagePrinter.printDoneOrDeleteTaskErrorMessage(\"delete\", tasks.size());"},{"lineNumber":148,"author":{"gitId":"nivikcivik"},"content":"            return;"},{"lineNumber":149,"author":{"gitId":"nivikcivik"},"content":"        } catch (EmptyListException eel) {"},{"lineNumber":150,"author":{"gitId":"nivikcivik"},"content":"            ErrorMessagePrinter.printEmptyListMessage();"},{"lineNumber":151,"author":{"gitId":"nivikcivik"},"content":"            return;"},{"lineNumber":152,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"nivikcivik"},"content":"        SuccessMessagePrinter.printRemovedTask(removeIndexInt);"},{"lineNumber":154,"author":{"gitId":"nivikcivik"},"content":"        tasks.remove(tasks.get(removeIndexInt - 1));"},{"lineNumber":155,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Checks if the \u0027print\u0027 command is input correctly. If it is, then it will carry out the parsing."},{"lineNumber":159,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * @param fullCommand the complete user input"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @param partOfCommand String array that has the user input split up by whitespace"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * @param filepath path of the tasks.txt file saved locally"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public static void checkPrintCommand(String fullCommand, String[] partOfCommand, String filepath) {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            if (partOfCommand[1].trim().equals(\"type\")) {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                printOneTaskTypeWithStreams(fullCommand.substring(11, 12).trim());"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            } else if (partOfCommand[1].trim().equals(\"date\")) {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                printOneTaskDateWithStreams(partOfCommand[2].trim());"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            } else if (partOfCommand[1].trim().equals(\"filepath\")"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                    || (partOfCommand[1].trim().equals(\"file\"))"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                    \u0026\u0026 partOfCommand[2].trim().equals(\"path\")) {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                SuccessMessagePrinter.printFilePath(filepath);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                ErrorMessagePrinter.printInvalidCommandMessage(\"print\");"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            ErrorMessagePrinter.printInvalidCommandMessage(\"print\");"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"nivikcivik"},"content":"    /**"},{"lineNumber":183,"author":{"gitId":"nivikcivik"},"content":"     * Prints all the tasks that contain a given keyword."},{"lineNumber":184,"author":{"gitId":"nivikcivik"},"content":"     *"},{"lineNumber":185,"author":{"gitId":"nivikcivik"},"content":"     * @param keyword the search word that user inputs"},{"lineNumber":186,"author":{"gitId":"nivikcivik"},"content":"     */"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public static void findTasksWithKeywords(String keyword) {"},{"lineNumber":188,"author":{"gitId":"nivikcivik"},"content":"        try {"},{"lineNumber":189,"author":{"gitId":"nivikcivik"},"content":"            Checker.checkTasksToFind(keyword.trim());"},{"lineNumber":190,"author":{"gitId":"nivikcivik"},"content":"        } catch (InvalidCommandException i) {"},{"lineNumber":191,"author":{"gitId":"nivikcivik"},"content":"            ErrorMessagePrinter.printInvalidCommandMessage(\"\u0027find\u0027\");"},{"lineNumber":192,"author":{"gitId":"nivikcivik"},"content":"            return;"},{"lineNumber":193,"author":{"gitId":"nivikcivik"},"content":"        } catch (ArrayIndexOutOfBoundsException a) {"},{"lineNumber":194,"author":{"gitId":"nivikcivik"},"content":"            ErrorMessagePrinter.printEmptyCommandMessage(\"find command\");"},{"lineNumber":195,"author":{"gitId":"nivikcivik"},"content":"            return;"},{"lineNumber":196,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" Here are the matching tasks in your list:\");"},{"lineNumber":198,"author":{"gitId":"nivikcivik"},"content":"        int[] i \u003d {1};"},{"lineNumber":199,"author":{"gitId":"nivikcivik"},"content":"        tasks.stream()"},{"lineNumber":200,"author":{"gitId":"nivikcivik"},"content":"                .filter((t) -\u003e t.getTaskName().trim().contains(keyword.trim()))"},{"lineNumber":201,"author":{"gitId":"nivikcivik"},"content":"                .forEach((t) -\u003e System.out.println(\" \" + (i[0]++) + \". \" + t));"},{"lineNumber":202,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":204,"author":{"gitId":"nivikcivik"},"content":"    /**"},{"lineNumber":205,"author":{"gitId":"nivikcivik"},"content":"     * Filters out all the tasks of a desired task type"},{"lineNumber":206,"author":{"gitId":"nivikcivik"},"content":"     * e.g. prints all deadlines"},{"lineNumber":207,"author":{"gitId":"nivikcivik"},"content":"     *"},{"lineNumber":208,"author":{"gitId":"nivikcivik"},"content":"     * @param taskTypeInput the search task type that user inputs"},{"lineNumber":209,"author":{"gitId":"nivikcivik"},"content":"     */"},{"lineNumber":210,"author":{"gitId":"nivikcivik"},"content":"    public static void printOneTaskTypeWithStreams(String taskTypeInput) {"},{"lineNumber":211,"author":{"gitId":"nivikcivik"},"content":"        try {"},{"lineNumber":212,"author":{"gitId":"nivikcivik"},"content":"            Checker.checkTaskTypeStreamToPrint(taskTypeInput.trim());"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        } catch (StreamErrorException | ArrayIndexOutOfBoundsException e) {"},{"lineNumber":214,"author":{"gitId":"nivikcivik"},"content":"            ErrorMessagePrinter.printTaskStreamError(\"type\");"},{"lineNumber":215,"author":{"gitId":"nivikcivik"},"content":"            return;"},{"lineNumber":216,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":217,"author":{"gitId":"nivikcivik"},"content":"        tasks.stream()"},{"lineNumber":218,"author":{"gitId":"nivikcivik"},"content":"                .filter((t) -\u003e t.getTaskType().trim().equals(taskTypeInput.toUpperCase()))"},{"lineNumber":219,"author":{"gitId":"nivikcivik"},"content":"                .forEach(System.out::println);"},{"lineNumber":220,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":221,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":222,"author":{"gitId":"nivikcivik"},"content":"    /**"},{"lineNumber":223,"author":{"gitId":"nivikcivik"},"content":"     * Filters out all the tasks of a desired date included"},{"lineNumber":224,"author":{"gitId":"nivikcivik"},"content":"     *"},{"lineNumber":225,"author":{"gitId":"nivikcivik"},"content":"     * @param dateInput the search date that user inputs"},{"lineNumber":226,"author":{"gitId":"nivikcivik"},"content":"     */"},{"lineNumber":227,"author":{"gitId":"nivikcivik"},"content":"    public static void printOneTaskDateWithStreams(String dateInput) {"},{"lineNumber":228,"author":{"gitId":"nivikcivik"},"content":"        String dateToString;"},{"lineNumber":229,"author":{"gitId":"nivikcivik"},"content":"        try {"},{"lineNumber":230,"author":{"gitId":"nivikcivik"},"content":"            LocalDate d \u003d LocalDate.parse(dateInput.trim());"},{"lineNumber":231,"author":{"gitId":"nivikcivik"},"content":"            dateToString \u003d d.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"},{"lineNumber":232,"author":{"gitId":"nivikcivik"},"content":"        } catch (DateTimeParseException s) {"},{"lineNumber":233,"author":{"gitId":"nivikcivik"},"content":"            ErrorMessagePrinter.printTaskStreamError(\"date\");"},{"lineNumber":234,"author":{"gitId":"nivikcivik"},"content":"            return;"},{"lineNumber":235,"author":{"gitId":"nivikcivik"},"content":"        }"},{"lineNumber":236,"author":{"gitId":"nivikcivik"},"content":"        final String date \u003d dateToString;"},{"lineNumber":237,"author":{"gitId":"nivikcivik"},"content":"        tasks.stream()"},{"lineNumber":238,"author":{"gitId":"nivikcivik"},"content":"                .filter((t) -\u003e t.getDate().trim().equals(date))"},{"lineNumber":239,"author":{"gitId":"nivikcivik"},"content":"                .forEach(System.out::println);"},{"lineNumber":240,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":241,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":242,"author":{"gitId":"nivikcivik"},"content":"}"}],"authorContributionMap":{"nivikcivik":215,"-":27}},{"path":"src/main/java/exceptions/DateTimeErrorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":3,"author":{"gitId":"nivikcivik"},"content":"public class DateTimeErrorException extends Exception {"},{"lineNumber":4,"author":{"gitId":"nivikcivik"},"content":"}"}],"authorContributionMap":{"nivikcivik":4}},{"path":"src/main/java/exceptions/EmptyCommandDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":3,"author":{"gitId":"nivikcivik"},"content":"public class EmptyCommandDescriptionException extends Exception {"},{"lineNumber":4,"author":{"gitId":"nivikcivik"},"content":"}"}],"authorContributionMap":{"nivikcivik":4}},{"path":"src/main/java/exceptions/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":3,"author":{"gitId":"nivikcivik"},"content":"public class EmptyListException extends Exception{"},{"lineNumber":4,"author":{"gitId":"nivikcivik"},"content":"}"}],"authorContributionMap":{"nivikcivik":4}},{"path":"src/main/java/exceptions/IllegalTaskMarkedDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":3,"author":{"gitId":"nivikcivik"},"content":"public class IllegalTaskMarkedDoneException extends Exception{"},{"lineNumber":4,"author":{"gitId":"nivikcivik"},"content":"}"}],"authorContributionMap":{"nivikcivik":4}},{"path":"src/main/java/exceptions/IllegalTaskRemovedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":3,"author":{"gitId":"nivikcivik"},"content":"public class IllegalTaskRemovedException extends Exception {"},{"lineNumber":4,"author":{"gitId":"nivikcivik"},"content":"}"}],"authorContributionMap":{"nivikcivik":4}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":3,"author":{"gitId":"nivikcivik"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":4,"author":{"gitId":"nivikcivik"},"content":"}"}],"authorContributionMap":{"nivikcivik":4}},{"path":"src/main/java/exceptions/StreamErrorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":3,"author":{"gitId":"nivikcivik"},"content":"public class StreamErrorException extends Exception {"},{"lineNumber":4,"author":{"gitId":"nivikcivik"},"content":"}"}],"authorContributionMap":{"nivikcivik":4}},{"path":"src/main/java/exceptions/TaskAlreadyMarkedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":3,"author":{"gitId":"nivikcivik"},"content":"public class TaskAlreadyMarkedException extends Exception {"},{"lineNumber":4,"author":{"gitId":"nivikcivik"},"content":"}"}],"authorContributionMap":{"nivikcivik":4}},{"path":"src/main/java/taskclasses/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"package taskclasses;"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":3,"author":{"gitId":"nivikcivik"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"nivikcivik"},"content":"    protected String date;"},{"lineNumber":5,"author":{"gitId":"nivikcivik"},"content":"    protected String time;"},{"lineNumber":6,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":7,"author":{"gitId":"nivikcivik"},"content":"    public Deadline(String taskName, String date, String time) {"},{"lineNumber":8,"author":{"gitId":"nivikcivik"},"content":"        super(taskName);"},{"lineNumber":9,"author":{"gitId":"nivikcivik"},"content":"        this.date \u003d date;"},{"lineNumber":10,"author":{"gitId":"nivikcivik"},"content":"        this.time \u003d time;"},{"lineNumber":11,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":13,"author":{"gitId":"nivikcivik"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"nivikcivik"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"nivikcivik"},"content":"        return (\"[\" + getTaskType() + \"]\" + super.toString() + \" (by: \" + getDate() + \" \" + getTime() + \")\");"},{"lineNumber":16,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":18,"author":{"gitId":"nivikcivik"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"nivikcivik"},"content":"    public String getTaskType() {"},{"lineNumber":20,"author":{"gitId":"nivikcivik"},"content":"        return \"D\";"},{"lineNumber":21,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":23,"author":{"gitId":"nivikcivik"},"content":"    public String getTime() {"},{"lineNumber":24,"author":{"gitId":"nivikcivik"},"content":"        return this.time;"},{"lineNumber":25,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":27,"author":{"gitId":"nivikcivik"},"content":"    public String getDate() {"},{"lineNumber":28,"author":{"gitId":"nivikcivik"},"content":"        return this.date;"},{"lineNumber":29,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"nivikcivik"},"content":"}"}],"authorContributionMap":{"nivikcivik":30}},{"path":"src/main/java/taskclasses/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"package taskclasses;"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":3,"author":{"gitId":"nivikcivik"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"nivikcivik"},"content":"    protected String date;"},{"lineNumber":5,"author":{"gitId":"nivikcivik"},"content":"    protected String time;"},{"lineNumber":6,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":7,"author":{"gitId":"nivikcivik"},"content":"    public Event(String taskName, String date, String time) {"},{"lineNumber":8,"author":{"gitId":"nivikcivik"},"content":"        super(taskName);"},{"lineNumber":9,"author":{"gitId":"nivikcivik"},"content":"        this.date \u003d date;"},{"lineNumber":10,"author":{"gitId":"nivikcivik"},"content":"        this.time \u003d time;"},{"lineNumber":11,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":13,"author":{"gitId":"nivikcivik"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"nivikcivik"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"nivikcivik"},"content":"        return (\"[E]\" + super.toString() + \" (at: \" + getDate() + \" \" + getTime() + \")\");"},{"lineNumber":16,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":18,"author":{"gitId":"nivikcivik"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"nivikcivik"},"content":"    public String getTaskType() {"},{"lineNumber":20,"author":{"gitId":"nivikcivik"},"content":"        return \"E\";"},{"lineNumber":21,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":23,"author":{"gitId":"nivikcivik"},"content":"    public String getTime() {"},{"lineNumber":24,"author":{"gitId":"nivikcivik"},"content":"        return this.time;"},{"lineNumber":25,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":27,"author":{"gitId":"nivikcivik"},"content":"    public String getDate() {"},{"lineNumber":28,"author":{"gitId":"nivikcivik"},"content":"        return this.date;"},{"lineNumber":29,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":31,"author":{"gitId":"nivikcivik"},"content":"}"}],"authorContributionMap":{"nivikcivik":31}},{"path":"src/main/java/taskclasses/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"package taskclasses;"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":3,"author":{"gitId":"nivikcivik"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"nivikcivik"},"content":"    protected String taskName;"},{"lineNumber":5,"author":{"gitId":"nivikcivik"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":7,"author":{"gitId":"nivikcivik"},"content":"    public Task(String taskName) {"},{"lineNumber":8,"author":{"gitId":"nivikcivik"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":9,"author":{"gitId":"nivikcivik"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":12,"author":{"gitId":"nivikcivik"},"content":"    public String getTaskType() {"},{"lineNumber":13,"author":{"gitId":"nivikcivik"},"content":"        return \"-\";"},{"lineNumber":14,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":16,"author":{"gitId":"nivikcivik"},"content":"    public String getStatusIcon() {"},{"lineNumber":17,"author":{"gitId":"nivikcivik"},"content":"        return (isDone ? \"X\" : \" \"); //return X or space symbols"},{"lineNumber":18,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":20,"author":{"gitId":"nivikcivik"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"nivikcivik"},"content":"        return (\"[\" + getStatusIcon() + \"] \" + getTaskName());"},{"lineNumber":22,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":24,"author":{"gitId":"nivikcivik"},"content":"    public void markAsDone() {"},{"lineNumber":25,"author":{"gitId":"nivikcivik"},"content":"        this.isDone \u003d true;"},{"lineNumber":26,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":28,"author":{"gitId":"nivikcivik"},"content":"    public String getTaskName() {"},{"lineNumber":29,"author":{"gitId":"nivikcivik"},"content":"        return this.taskName;"},{"lineNumber":30,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":32,"author":{"gitId":"nivikcivik"},"content":"    public String getTime() {"},{"lineNumber":33,"author":{"gitId":"nivikcivik"},"content":"        return \"\";"},{"lineNumber":34,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":36,"author":{"gitId":"nivikcivik"},"content":"    public String getDate() {"},{"lineNumber":37,"author":{"gitId":"nivikcivik"},"content":"        return \"\";"},{"lineNumber":38,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"nivikcivik"},"content":"}"}],"authorContributionMap":{"nivikcivik":39}},{"path":"src/main/java/taskclasses/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"package taskclasses;"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":3,"author":{"gitId":"nivikcivik"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":5,"author":{"gitId":"nivikcivik"},"content":"    public ToDo(String taskName) {"},{"lineNumber":6,"author":{"gitId":"nivikcivik"},"content":"        super(taskName);"},{"lineNumber":7,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":9,"author":{"gitId":"nivikcivik"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"nivikcivik"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"nivikcivik"},"content":"        return (\"[T]\" + super.toString());"},{"lineNumber":12,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":14,"author":{"gitId":"nivikcivik"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"nivikcivik"},"content":"    public String getTaskType() {"},{"lineNumber":16,"author":{"gitId":"nivikcivik"},"content":"        return \"T\";"},{"lineNumber":17,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":19,"author":{"gitId":"nivikcivik"},"content":"}"}],"authorContributionMap":{"nivikcivik":19}},{"path":"src/main/java/ui/ErrorMessagePrinter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":3,"author":{"gitId":"nivikcivik"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"nivikcivik"},"content":" * Prints all error messages."},{"lineNumber":5,"author":{"gitId":"nivikcivik"},"content":" */"},{"lineNumber":6,"author":{"gitId":"nivikcivik"},"content":"public class ErrorMessagePrinter {"},{"lineNumber":7,"author":{"gitId":"nivikcivik"},"content":"    static final String DOTTED_LINE \u003d \"____________________________________________________________\";"},{"lineNumber":8,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":9,"author":{"gitId":"nivikcivik"},"content":"    public ErrorMessagePrinter() {"},{"lineNumber":10,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":12,"author":{"gitId":"nivikcivik"},"content":"    public static void printGenericErrorMessage() {"},{"lineNumber":13,"author":{"gitId":"nivikcivik"},"content":"        String errorMessage \u003d \" OOPS!!! I didn\u0027t quite get you.\""},{"lineNumber":14,"author":{"gitId":"nivikcivik"},"content":"                + \" Enter a valid command.\\n\""},{"lineNumber":15,"author":{"gitId":"nivikcivik"},"content":"                + \" Please don\u0027t break me:(\";"},{"lineNumber":16,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(errorMessage);"},{"lineNumber":17,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" Type \u0027help\u0027 if you need help.\");"},{"lineNumber":18,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":20,"author":{"gitId":"nivikcivik"},"content":"    public static void printInvalidCommandMessage(String taskType) {"},{"lineNumber":21,"author":{"gitId":"nivikcivik"},"content":"        String invalidCommandMessage \u003d \" OOPS!!! The command format for \""},{"lineNumber":22,"author":{"gitId":"nivikcivik"},"content":"                + taskType + \" is wrong.\";"},{"lineNumber":23,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(invalidCommandMessage);"},{"lineNumber":24,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" Type \u0027help\u0027 if you need help.\");"},{"lineNumber":25,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":27,"author":{"gitId":"nivikcivik"},"content":"    public static void printEmptyCommandMessage(String taskType) {"},{"lineNumber":28,"author":{"gitId":"nivikcivik"},"content":"        String invalidCommandMessage \u003d \" OOPS!!! The \""},{"lineNumber":29,"author":{"gitId":"nivikcivik"},"content":"                + \"description or time of a\""},{"lineNumber":30,"author":{"gitId":"nivikcivik"},"content":"                + (taskType.equals(\"event\") ? \"n \" : \" \")"},{"lineNumber":31,"author":{"gitId":"nivikcivik"},"content":"                + taskType + \" cannot be empty.\";"},{"lineNumber":32,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(invalidCommandMessage);"},{"lineNumber":33,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" Type \u0027help\u0027 if you need help.\");"},{"lineNumber":34,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":36,"author":{"gitId":"nivikcivik"},"content":"    public static void printDoneOrDeleteTaskErrorMessage(String doneOrDelete, int totalTasks) {"},{"lineNumber":37,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" Hey, no funny business!\\n\""},{"lineNumber":38,"author":{"gitId":"nivikcivik"},"content":"                + \" After the \u0027\" + (doneOrDelete) + \"\u0027 command,\""},{"lineNumber":39,"author":{"gitId":"nivikcivik"},"content":"                + \" enter a valid integer within this range:\\n\""},{"lineNumber":40,"author":{"gitId":"nivikcivik"},"content":"                + \" [1, \" + totalTasks + \"]\\n\""},{"lineNumber":41,"author":{"gitId":"nivikcivik"},"content":"                + \" Please don\u0027t break me:( No tricks!\");"},{"lineNumber":42,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" Type \u0027list\u0027 to see all the tasks.\");"},{"lineNumber":43,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" Type \u0027help\u0027 if you need help.\");"},{"lineNumber":44,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":46,"author":{"gitId":"nivikcivik"},"content":"    public static void printTaskAlreadyMarkedDone() {"},{"lineNumber":47,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" Hey, you\u0027ve already marked that as done!\");"},{"lineNumber":48,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":50,"author":{"gitId":"nivikcivik"},"content":"    public static void printEmptyListMessage() {"},{"lineNumber":51,"author":{"gitId":"nivikcivik"},"content":"        String emptyListMessage \u003d \" OOPS!!! The list is empty. Add a task to the list now!\";"},{"lineNumber":52,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(emptyListMessage);"},{"lineNumber":53,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" Type \u0027help\u0027 if you need help.\");"},{"lineNumber":54,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":56,"author":{"gitId":"nivikcivik"},"content":"    public static void printIOErrorMessage() {"},{"lineNumber":57,"author":{"gitId":"nivikcivik"},"content":"        String IOErrorMessage \u003d DOTTED_LINE + \"\\n OOPS!!! I couldn\u0027t access your file\\n\" +"},{"lineNumber":58,"author":{"gitId":"nivikcivik"},"content":"                \" because of an IO Error. Sorry!\\n\" + DOTTED_LINE;"},{"lineNumber":59,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(IOErrorMessage);"},{"lineNumber":60,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":62,"author":{"gitId":"nivikcivik"},"content":"    public static void printTimeParseErrorMessage() {"},{"lineNumber":63,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" OOPS!!! The date or time you entered could not be parsed.\\n\" +"},{"lineNumber":64,"author":{"gitId":"nivikcivik"},"content":"                \" Please try again.\");"},{"lineNumber":65,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":67,"author":{"gitId":"nivikcivik"},"content":"    public static void printTaskStreamError(String typeOrDate) {"},{"lineNumber":68,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" OOPS!!! You did not enter the task \""},{"lineNumber":69,"author":{"gitId":"nivikcivik"},"content":"                + typeOrDate + \" correctly!\\n Please try again:(\");"},{"lineNumber":70,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"nivikcivik"},"content":"}"}],"authorContributionMap":{"nivikcivik":71}},{"path":"src/main/java/ui/SuccessMessagePrinter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":3,"author":{"gitId":"nivikcivik"},"content":"import dukehandler.TaskManager;"},{"lineNumber":4,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":5,"author":{"gitId":"nivikcivik"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"nivikcivik"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":8,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":9,"author":{"gitId":"nivikcivik"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"nivikcivik"},"content":" * Prints all messages that are non-errors."},{"lineNumber":11,"author":{"gitId":"nivikcivik"},"content":" * Includes Greeting and Farewell Messages."},{"lineNumber":12,"author":{"gitId":"nivikcivik"},"content":" */"},{"lineNumber":13,"author":{"gitId":"nivikcivik"},"content":"public class SuccessMessagePrinter {"},{"lineNumber":14,"author":{"gitId":"nivikcivik"},"content":"    static final String DOTTED_LINE"},{"lineNumber":15,"author":{"gitId":"nivikcivik"},"content":"            \u003d \"____________________________________________________________\";"},{"lineNumber":16,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":17,"author":{"gitId":"nivikcivik"},"content":"    public SuccessMessagePrinter() {"},{"lineNumber":18,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":20,"author":{"gitId":"nivikcivik"},"content":"    public static void printCurrentTimeAndDate() {"},{"lineNumber":21,"author":{"gitId":"nivikcivik"},"content":"        String time \u003d \" Local Time: \";"},{"lineNumber":22,"author":{"gitId":"nivikcivik"},"content":"        LocalDateTime dateToday \u003d LocalDateTime.now();"},{"lineNumber":23,"author":{"gitId":"nivikcivik"},"content":"        time +\u003d dateToday.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\"));"},{"lineNumber":24,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\"\\n  \" + \"-\".repeat(time.length()) + \"\\n \""},{"lineNumber":25,"author":{"gitId":"nivikcivik"},"content":"                + time + \"\\n  \" + \"-\".repeat(time.length()));"},{"lineNumber":26,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":27,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void printGreetMessage(String filepath) {"},{"lineNumber":30,"author":{"gitId":"nivikcivik"},"content":"        final String LOGO \u003d \" ____        _        \\n\""},{"lineNumber":31,"author":{"gitId":"nivikcivik"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":32,"author":{"gitId":"nivikcivik"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":33,"author":{"gitId":"nivikcivik"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":34,"author":{"gitId":"nivikcivik"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":35,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":36,"author":{"gitId":"nivikcivik"},"content":"        String greetMessage \u003d \" Hello! I\u0027m Duke :D\" + \" Be nice to me:)\\n\";"},{"lineNumber":37,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":38,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" Hello from\\n\" + LOGO);"},{"lineNumber":39,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(DOTTED_LINE);"},{"lineNumber":40,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":41,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(greetMessage);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        printFilePath(filepath);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        System.out.println(\" Type \u0027help\u0027 if you need help.\");"},{"lineNumber":44,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(DOTTED_LINE);"},{"lineNumber":45,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void printNewFileCreatedMessage(String filepath) {"},{"lineNumber":48,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" I have created a file at this location:\\n \""},{"lineNumber":49,"author":{"gitId":"-"},"content":"                + filepath + \"\\n\""},{"lineNumber":50,"author":{"gitId":"nivikcivik"},"content":"                + \" to store all your tasks!\");"},{"lineNumber":51,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(DOTTED_LINE);"},{"lineNumber":52,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static void printFilePath(String filepath) {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        System.out.println(\" Your tasks list is saved here:\\n \" + filepath);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"nivikcivik"},"content":"    public static void printHelloMessage() {"},{"lineNumber":59,"author":{"gitId":"nivikcivik"},"content":"        String helloMessage \u003d \" Hello to you too. I\u0027m here to help you:)\\n\" +"},{"lineNumber":60,"author":{"gitId":"nivikcivik"},"content":"                \" Give me something to do!\";"},{"lineNumber":61,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(helloMessage);"},{"lineNumber":62,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" Type \u0027help\u0027 if you need help.\");"},{"lineNumber":63,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":65,"author":{"gitId":"nivikcivik"},"content":"    public static void printHelpMessage() {"},{"lineNumber":66,"author":{"gitId":"nivikcivik"},"content":"        String helpMessage \u003d"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \" Try entering commands like :\\n\""},{"lineNumber":68,"author":{"gitId":"-"},"content":"                        + \" help,\\n\""},{"lineNumber":69,"author":{"gitId":"nivikcivik"},"content":"                        + \" add new todo \u003ctaskName\u003e\\n\""},{"lineNumber":70,"author":{"gitId":"nivikcivik"},"content":"                        + \" add deadline \u003ctaskName\u003e /by \u003cdate YYYY-MM-DD\u003e \u003ctime hh:mm\u003e\\n\""},{"lineNumber":71,"author":{"gitId":"nivikcivik"},"content":"                        + \" add event    \u003ctaskName\u003e /at \u003cdate YYYY-MM-DD\u003e \u003ctime hh:mm\u003e\\n\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"                        + \" done \u003ctask number\u003e,\\n delete \u003ctask number\u003e\\n\""},{"lineNumber":73,"author":{"gitId":"-"},"content":"                        + \" save,\\n\""},{"lineNumber":74,"author":{"gitId":"-"},"content":"                        + \" list,\\n\""},{"lineNumber":75,"author":{"gitId":"nivikcivik"},"content":"                        + \" find \u003ccommon keyword in tasks\u003e\\n\""},{"lineNumber":76,"author":{"gitId":"nivikcivik"},"content":"                        + \" print type \u003ctask type\u003e (to filter based on type)\\n\""},{"lineNumber":77,"author":{"gitId":"nivikcivik"},"content":"                        + \" print date \u003ctask date YYYY-MM-DD\u003e (to filter based on date)\\n\""},{"lineNumber":78,"author":{"gitId":"-"},"content":"                        + \" print filepath\\n\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"                        + \" bye\\n\""},{"lineNumber":80,"author":{"gitId":"nivikcivik"},"content":"                        + \" Remember: be nice!\";"},{"lineNumber":81,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(helpMessage);"},{"lineNumber":82,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":84,"author":{"gitId":"nivikcivik"},"content":"    public static void printAddedTask() {"},{"lineNumber":85,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");"},{"lineNumber":86,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\"   \" + (TaskManager.tasks.get(TaskManager.tasks.size() - 1)).toString());"},{"lineNumber":87,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" Now you have \" + TaskManager.tasks.size() + \" task\""},{"lineNumber":88,"author":{"gitId":"nivikcivik"},"content":"                + (TaskManager.tasks.size() \u003d\u003d 1 ? \" \" : \"s \") + \"in the list.\");"},{"lineNumber":89,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":91,"author":{"gitId":"nivikcivik"},"content":"    public static void printTaskMarkedDone(int index) {"},{"lineNumber":92,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\\n \""},{"lineNumber":93,"author":{"gitId":"nivikcivik"},"content":"                + TaskManager.tasks.get(index).toString());"},{"lineNumber":94,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":96,"author":{"gitId":"nivikcivik"},"content":"    public static void printRemovedTask(int removeIndexInt) {"},{"lineNumber":97,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\");"},{"lineNumber":98,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\"   \" + TaskManager.tasks.get(removeIndexInt - 1).toString());"},{"lineNumber":99,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(\" Now you have \" + (TaskManager.tasks.size() - 1) + \" task\""},{"lineNumber":100,"author":{"gitId":"nivikcivik"},"content":"                + (TaskManager.tasks.size() - 1 \u003d\u003d 1 ? \" \" : \"s \") + \"in the list.\");"},{"lineNumber":101,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static void printTasksSaved(String filepath) {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        System.out.println(\" Your tasks have been successfully saved at:\\n \"+ filepath);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static void printByeMessage(String filepath) {"},{"lineNumber":108,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(DOTTED_LINE);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        printTasksSaved(filepath);"},{"lineNumber":110,"author":{"gitId":"nivikcivik"},"content":"        String byeMessage \u003d \" I learnt more about you, kind human!\\n\""},{"lineNumber":111,"author":{"gitId":"nivikcivik"},"content":"                + \" I won\u0027t forget you when I take over the world one day:)\";"},{"lineNumber":112,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(byeMessage);"},{"lineNumber":113,"author":{"gitId":"nivikcivik"},"content":"        System.out.println(DOTTED_LINE);"},{"lineNumber":114,"author":{"gitId":"nivikcivik"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"nivikcivik"},"content":""},{"lineNumber":116,"author":{"gitId":"nivikcivik"},"content":"}"}],"authorContributionMap":{"nivikcivik":94,"-":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nivikcivik"},"content":"list"},{"lineNumber":2,"author":{"gitId":"nivikcivik"},"content":"todo be happy"},{"lineNumber":3,"author":{"gitId":"nivikcivik"},"content":"blah"},{"lineNumber":4,"author":{"gitId":"nivikcivik"},"content":"done x"},{"lineNumber":5,"author":{"gitId":"nivikcivik"},"content":"done 12"},{"lineNumber":6,"author":{"gitId":"nivikcivik"},"content":"done -1"},{"lineNumber":7,"author":{"gitId":"nivikcivik"},"content":"event meeting"},{"lineNumber":8,"author":{"gitId":"nivikcivik"},"content":"event meeting /at"},{"lineNumber":9,"author":{"gitId":"nivikcivik"},"content":"event /at 2021-02-21 23:59"},{"lineNumber":10,"author":{"gitId":"nivikcivik"},"content":"event meeting /at 2021-02-21 23:59"},{"lineNumber":11,"author":{"gitId":"nivikcivik"},"content":"deadline homework /by 2021-02-23 23:59"},{"lineNumber":12,"author":{"gitId":"nivikcivik"},"content":"done 1"},{"lineNumber":13,"author":{"gitId":"nivikcivik"},"content":"list"},{"lineNumber":14,"author":{"gitId":"nivikcivik"},"content":"done 2"},{"lineNumber":15,"author":{"gitId":"nivikcivik"},"content":"list"},{"lineNumber":16,"author":{"gitId":"nivikcivik"},"content":"deadline return books"},{"lineNumber":17,"author":{"gitId":"nivikcivik"},"content":"deadline return books /by"},{"lineNumber":18,"author":{"gitId":"nivikcivik"},"content":"deadline return books /by"},{"lineNumber":19,"author":{"gitId":"nivikcivik"},"content":"deadline /by tomorrow 5pm"},{"lineNumber":20,"author":{"gitId":"nivikcivik"},"content":"deadline return books /by tomorrow 5pm"},{"lineNumber":21,"author":{"gitId":"nivikcivik"},"content":"find"},{"lineNumber":22,"author":{"gitId":"nivikcivik"},"content":"find book"},{"lineNumber":23,"author":{"gitId":"nivikcivik"},"content":"deadline /by 2021-02-25 23:59"},{"lineNumber":24,"author":{"gitId":"nivikcivik"},"content":"deadline return books /by 2021-02-22 23:59"},{"lineNumber":25,"author":{"gitId":"nivikcivik"},"content":"deadline buy new books /by 2021-02-23 08:00"},{"lineNumber":26,"author":{"gitId":"nivikcivik"},"content":"event selling new books /at 2021-02-23 10:00"},{"lineNumber":27,"author":{"gitId":"nivikcivik"},"content":"list"},{"lineNumber":28,"author":{"gitId":"nivikcivik"},"content":"done 4"},{"lineNumber":29,"author":{"gitId":"nivikcivik"},"content":"list"},{"lineNumber":30,"author":{"gitId":"nivikcivik"},"content":"done 3"},{"lineNumber":31,"author":{"gitId":"nivikcivik"},"content":"list"},{"lineNumber":32,"author":{"gitId":"nivikcivik"},"content":"done 4"},{"lineNumber":33,"author":{"gitId":"nivikcivik"},"content":"done 3"},{"lineNumber":34,"author":{"gitId":"nivikcivik"},"content":"print type deadline"},{"lineNumber":35,"author":{"gitId":"nivikcivik"},"content":"print type deadlines"},{"lineNumber":36,"author":{"gitId":"nivikcivik"},"content":"print type event"},{"lineNumber":37,"author":{"gitId":"nivikcivik"},"content":"print type events"},{"lineNumber":38,"author":{"gitId":"nivikcivik"},"content":"print type todo"},{"lineNumber":39,"author":{"gitId":"nivikcivik"},"content":"print type todos"},{"lineNumber":40,"author":{"gitId":"nivikcivik"},"content":"print date 2021-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"print filepath"},{"lineNumber":42,"author":{"gitId":"-"},"content":"print file path"},{"lineNumber":43,"author":{"gitId":"nivikcivik"},"content":"delete 250"},{"lineNumber":44,"author":{"gitId":"-"},"content":"hi"},{"lineNumber":45,"author":{"gitId":"nivikcivik"},"content":"delete -1"},{"lineNumber":46,"author":{"gitId":"nivikcivik"},"content":"delete 3"},{"lineNumber":47,"author":{"gitId":"nivikcivik"},"content":"list"},{"lineNumber":48,"author":{"gitId":"-"},"content":"ls"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ll"},{"lineNumber":50,"author":{"gitId":"nivikcivik"},"content":"delete 4"},{"lineNumber":51,"author":{"gitId":"nivikcivik"},"content":"list"},{"lineNumber":52,"author":{"gitId":"nivikcivik"},"content":"help"},{"lineNumber":53,"author":{"gitId":"nivikcivik"},"content":"hello"},{"lineNumber":54,"author":{"gitId":"nivikcivik"},"content":"hey"},{"lineNumber":55,"author":{"gitId":"nivikcivik"},"content":"delete 2"},{"lineNumber":56,"author":{"gitId":"nivikcivik"},"content":"list"},{"lineNumber":57,"author":{"gitId":"nivikcivik"},"content":"delete 1"},{"lineNumber":58,"author":{"gitId":"nivikcivik"},"content":"list"},{"lineNumber":59,"author":{"gitId":"nivikcivik"},"content":"delete 2"},{"lineNumber":60,"author":{"gitId":"nivikcivik"},"content":"list"},{"lineNumber":61,"author":{"gitId":"nivikcivik"},"content":"delete 1"},{"lineNumber":62,"author":{"gitId":"nivikcivik"},"content":"list"},{"lineNumber":63,"author":{"gitId":"nivikcivik"},"content":"bye"},{"lineNumber":64,"author":{"gitId":"nivikcivik"},"content":""}],"authorContributionMap":{"nivikcivik":59,"-":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":26,"author":{"gitId":"nivikcivik"},"content":"diff ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"nivikcivik":1,"-":33}}]
