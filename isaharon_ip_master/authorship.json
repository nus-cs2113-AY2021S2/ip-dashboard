[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":"import duke.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":"import duke.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":"import duke.ui.Menu;"},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"isaharon"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d Task.loadAllTasks();"},{"lineNumber":13,"author":{"gitId":"isaharon"},"content":"    private static boolean isRunning \u003d true;"},{"lineNumber":14,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":15,"author":{"gitId":"isaharon"},"content":"    public static void main(String[] args) {"},{"lineNumber":16,"author":{"gitId":"isaharon"},"content":"        Menu.printGreeting();"},{"lineNumber":17,"author":{"gitId":"isaharon"},"content":"        while (isRunning) {"},{"lineNumber":18,"author":{"gitId":"isaharon"},"content":"            String userInput \u003d Menu.readUserInput();"},{"lineNumber":19,"author":{"gitId":"isaharon"},"content":"            Menu.printLine();"},{"lineNumber":20,"author":{"gitId":"isaharon"},"content":"            try {"},{"lineNumber":21,"author":{"gitId":"isaharon"},"content":"                Command command \u003d Parser.parseUserInput(userInput);"},{"lineNumber":22,"author":{"gitId":"isaharon"},"content":"                command.execute(tasks);"},{"lineNumber":23,"author":{"gitId":"isaharon"},"content":"            } catch (DukeException e) {"},{"lineNumber":24,"author":{"gitId":"isaharon"},"content":"                Menu.printError(e);"},{"lineNumber":25,"author":{"gitId":"isaharon"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"isaharon"},"content":"            Menu.printLine();"},{"lineNumber":27,"author":{"gitId":"isaharon"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":30,"author":{"gitId":"isaharon"},"content":"    public static void setIsRunning(boolean isRunning) {"},{"lineNumber":31,"author":{"gitId":"isaharon"},"content":"        Duke.isRunning \u003d isRunning;"},{"lineNumber":32,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":34,"author":{"gitId":"isaharon"},"content":"    public static int getTaskSize() {"},{"lineNumber":35,"author":{"gitId":"isaharon"},"content":"        return tasks.size();"},{"lineNumber":36,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"isaharon":35,"-":2}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":"import duke.ui.Menu;"},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":"public class ByeCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":11,"author":{"gitId":"isaharon"},"content":"    public ByeCommand() {"},{"lineNumber":12,"author":{"gitId":"isaharon"},"content":"        super(CommandType.BYE);"},{"lineNumber":13,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":15,"author":{"gitId":"isaharon"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"isaharon"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":17,"author":{"gitId":"isaharon"},"content":"        Duke.setIsRunning(false);"},{"lineNumber":18,"author":{"gitId":"isaharon"},"content":"        Menu.printBye();"},{"lineNumber":19,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":20}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":"public abstract class Command {"},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":"    protected CommandType commandType;"},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":"    protected String commandArgs;"},{"lineNumber":11,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":12,"author":{"gitId":"isaharon"},"content":"    public Command(CommandType commandType) {"},{"lineNumber":13,"author":{"gitId":"isaharon"},"content":"        this.commandType \u003d commandType;"},{"lineNumber":14,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":16,"author":{"gitId":"isaharon"},"content":"    public Command(CommandType commandType, String commandArgs) {"},{"lineNumber":17,"author":{"gitId":"isaharon"},"content":"        this.commandType \u003d commandType;"},{"lineNumber":18,"author":{"gitId":"isaharon"},"content":"        this.commandArgs \u003d commandArgs;"},{"lineNumber":19,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":21,"author":{"gitId":"isaharon"},"content":"    public abstract void execute(ArrayList\u003cTask\u003e tasks) throws DukeException;"},{"lineNumber":22,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":22}},{"path":"src/main/java/duke/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"public enum CommandType {"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":"    LIST, DONE, BYE, TODO, DEADLINE, EVENT, DELETE;"},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":5}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":"import duke.ui.Menu;"},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":"import duke.exception.MissingDescriptionException;"},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":12,"author":{"gitId":"isaharon"},"content":"    public DeadlineCommand(String commandArgs) {"},{"lineNumber":13,"author":{"gitId":"isaharon"},"content":"        super(CommandType.DEADLINE, commandArgs);"},{"lineNumber":14,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":16,"author":{"gitId":"isaharon"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"isaharon"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks) throws MissingDescriptionException {"},{"lineNumber":18,"author":{"gitId":"isaharon"},"content":"        if (commandArgs.length() \u003d\u003d 0) {"},{"lineNumber":19,"author":{"gitId":"isaharon"},"content":"            throw new MissingDescriptionException(commandType);"},{"lineNumber":20,"author":{"gitId":"isaharon"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"isaharon"},"content":"        String[] deadlineArgs \u003d commandArgs.split(\"\\\\s+/by\\\\s+\", 2);"},{"lineNumber":22,"author":{"gitId":"isaharon"},"content":"        Task task \u003d new Deadline(deadlineArgs[0], deadlineArgs[1]);"},{"lineNumber":23,"author":{"gitId":"isaharon"},"content":"        tasks.add(task);"},{"lineNumber":24,"author":{"gitId":"isaharon"},"content":"        Task.saveAllTasks(tasks);"},{"lineNumber":25,"author":{"gitId":"isaharon"},"content":"        Menu.printAddedTask(task);"},{"lineNumber":26,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":27}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"import duke.exception.InvalidTaskNumberException;"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":"import duke.exception.MissingDescriptionException;"},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":"import duke.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":"import duke.ui.Menu;"},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":11,"author":{"gitId":"isaharon"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":13,"author":{"gitId":"isaharon"},"content":"    public DeleteCommand(String commandArgs) {"},{"lineNumber":14,"author":{"gitId":"isaharon"},"content":"        super(CommandType.DELETE, commandArgs);"},{"lineNumber":15,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":17,"author":{"gitId":"isaharon"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"isaharon"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks) throws MissingDescriptionException, InvalidTaskNumberException {"},{"lineNumber":19,"author":{"gitId":"isaharon"},"content":"        if (commandArgs.length() \u003d\u003d 0) {"},{"lineNumber":20,"author":{"gitId":"isaharon"},"content":"            throw new MissingDescriptionException(commandType);"},{"lineNumber":21,"author":{"gitId":"isaharon"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"isaharon"},"content":"        if (!Parser.isValidTaskNumber(tasks, commandArgs)) {"},{"lineNumber":23,"author":{"gitId":"isaharon"},"content":"            throw new InvalidTaskNumberException(commandArgs);"},{"lineNumber":24,"author":{"gitId":"isaharon"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"isaharon"},"content":"        int taskIndex \u003d Integer.parseInt(commandArgs) - 1;"},{"lineNumber":26,"author":{"gitId":"isaharon"},"content":"        Task taskRemoved \u003d tasks.remove(taskIndex);"},{"lineNumber":27,"author":{"gitId":"isaharon"},"content":"        Task.saveAllTasks(tasks);"},{"lineNumber":28,"author":{"gitId":"isaharon"},"content":"        Menu.printDeleteTask(taskRemoved);"},{"lineNumber":29,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":30}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"import duke.exception.InvalidTaskNumberException;"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":"import duke.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":"import duke.ui.Menu;"},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":"public class DoneCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":12,"author":{"gitId":"isaharon"},"content":"    public DoneCommand(String commandArgs) {"},{"lineNumber":13,"author":{"gitId":"isaharon"},"content":"        super(CommandType.DONE, commandArgs);"},{"lineNumber":14,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":16,"author":{"gitId":"isaharon"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"isaharon"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks) throws InvalidTaskNumberException {"},{"lineNumber":18,"author":{"gitId":"isaharon"},"content":"        if (!Parser.isValidTaskNumber(tasks, commandArgs)) {"},{"lineNumber":19,"author":{"gitId":"isaharon"},"content":"            throw new InvalidTaskNumberException(commandArgs);"},{"lineNumber":20,"author":{"gitId":"isaharon"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"isaharon"},"content":"        int taskIndex \u003d Integer.parseInt(commandArgs) - 1;"},{"lineNumber":22,"author":{"gitId":"isaharon"},"content":"        Task task \u003d tasks.get(taskIndex);"},{"lineNumber":23,"author":{"gitId":"isaharon"},"content":"        if (task.isDone()) {"},{"lineNumber":24,"author":{"gitId":"isaharon"},"content":"            Menu.printText(\"Task already marked as done!\");"},{"lineNumber":25,"author":{"gitId":"isaharon"},"content":"            return;"},{"lineNumber":26,"author":{"gitId":"isaharon"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"isaharon"},"content":"        task.setDone(true);"},{"lineNumber":28,"author":{"gitId":"isaharon"},"content":"        Task.saveAllTasks(tasks);"},{"lineNumber":29,"author":{"gitId":"isaharon"},"content":"        Menu.printText(\"Nice! I\u0027ve marked this task as done:\""},{"lineNumber":30,"author":{"gitId":"isaharon"},"content":"                + System.lineSeparator()"},{"lineNumber":31,"author":{"gitId":"isaharon"},"content":"                + \"\\t\""},{"lineNumber":32,"author":{"gitId":"isaharon"},"content":"                + task);"},{"lineNumber":33,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":34}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"import duke.task.Event;"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":"import duke.ui.Menu;"},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":"import duke.exception.MissingDescriptionException;"},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":"public class EventCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":12,"author":{"gitId":"isaharon"},"content":"    public EventCommand(String commandArgs) {"},{"lineNumber":13,"author":{"gitId":"isaharon"},"content":"        super(CommandType.EVENT, commandArgs);"},{"lineNumber":14,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":16,"author":{"gitId":"isaharon"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"isaharon"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks) throws MissingDescriptionException {"},{"lineNumber":18,"author":{"gitId":"isaharon"},"content":"        if (commandArgs.length() \u003d\u003d 0) {"},{"lineNumber":19,"author":{"gitId":"isaharon"},"content":"            throw new MissingDescriptionException(commandType);"},{"lineNumber":20,"author":{"gitId":"isaharon"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"isaharon"},"content":"        String[] eventArgs \u003d commandArgs.split(\"\\\\s+/at\\\\s+\", 2);"},{"lineNumber":22,"author":{"gitId":"isaharon"},"content":"        Task task \u003d new Event(eventArgs[0], eventArgs[1]);"},{"lineNumber":23,"author":{"gitId":"isaharon"},"content":"        tasks.add(task);"},{"lineNumber":24,"author":{"gitId":"isaharon"},"content":"        Task.saveAllTasks(tasks);"},{"lineNumber":25,"author":{"gitId":"isaharon"},"content":"        Menu.printAddedTask(task);"},{"lineNumber":26,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":27}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"import duke.ui.Menu;"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":"public class ListCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":"    public ListCommand() {"},{"lineNumber":11,"author":{"gitId":"isaharon"},"content":"        super(CommandType.LIST);"},{"lineNumber":12,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":14,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":15,"author":{"gitId":"isaharon"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"isaharon"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":17,"author":{"gitId":"isaharon"},"content":"        String outputText;"},{"lineNumber":18,"author":{"gitId":"isaharon"},"content":"        outputText \u003d \"Here are the tasks in your list:\";"},{"lineNumber":19,"author":{"gitId":"isaharon"},"content":"        for (Task task : tasks) {"},{"lineNumber":20,"author":{"gitId":"isaharon"},"content":"            String taskNumber \u003d (tasks.indexOf(task) + 1) + \".\";"},{"lineNumber":21,"author":{"gitId":"isaharon"},"content":"            outputText +\u003d System.lineSeparator() +"},{"lineNumber":22,"author":{"gitId":"isaharon"},"content":"                    \" \" +"},{"lineNumber":23,"author":{"gitId":"isaharon"},"content":"                    taskNumber + \" \" +"},{"lineNumber":24,"author":{"gitId":"isaharon"},"content":"                    task;"},{"lineNumber":25,"author":{"gitId":"isaharon"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"isaharon"},"content":"        Menu.printText(outputText);"},{"lineNumber":27,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":28}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"import duke.ui.Menu;"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":"import duke.exception.MissingDescriptionException;"},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":"public class TodoCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":12,"author":{"gitId":"isaharon"},"content":"    public TodoCommand(String commandArgs) {"},{"lineNumber":13,"author":{"gitId":"isaharon"},"content":"        super(CommandType.TODO, commandArgs);"},{"lineNumber":14,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":16,"author":{"gitId":"isaharon"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"isaharon"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks) throws MissingDescriptionException {"},{"lineNumber":18,"author":{"gitId":"isaharon"},"content":"        if (commandArgs.length() \u003d\u003d 0) {"},{"lineNumber":19,"author":{"gitId":"isaharon"},"content":"            throw new MissingDescriptionException(commandType);"},{"lineNumber":20,"author":{"gitId":"isaharon"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"isaharon"},"content":"        Task task \u003d new Todo(commandArgs);"},{"lineNumber":22,"author":{"gitId":"isaharon"},"content":"        tasks.add(task);"},{"lineNumber":23,"author":{"gitId":"isaharon"},"content":"        Task.saveAllTasks(tasks);"},{"lineNumber":24,"author":{"gitId":"isaharon"},"content":"        Menu.printAddedTask(task);"},{"lineNumber":25,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":26}},{"path":"src/main/java/duke/dao/TaskDao.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.dao;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":"public interface TaskDao {"},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":"    ArrayList\u003cTask\u003e loadAllTasks();"},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":"    void saveAllTasks(ArrayList\u003cTask\u003e tasks);"},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":10}},{"path":"src/main/java/duke/dao/TaskDaoImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.dao;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"isaharon"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"isaharon"},"content":"import java.nio.file.Path;"},{"lineNumber":13,"author":{"gitId":"isaharon"},"content":"import java.nio.file.Paths;"},{"lineNumber":14,"author":{"gitId":"isaharon"},"content":"import java.util.ArrayList;"},{"lineNumber":15,"author":{"gitId":"isaharon"},"content":"import java.util.Scanner;"},{"lineNumber":16,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":17,"author":{"gitId":"isaharon"},"content":"public class TaskDaoImpl implements TaskDao {"},{"lineNumber":18,"author":{"gitId":"isaharon"},"content":"    private static Path taskDataPath \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"task.txt\");"},{"lineNumber":19,"author":{"gitId":"isaharon"},"content":"    private static File taskFile \u003d new File(String.valueOf(taskDataPath));"},{"lineNumber":20,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":21,"author":{"gitId":"isaharon"},"content":"    public TaskDaoImpl() {"},{"lineNumber":22,"author":{"gitId":"isaharon"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"isaharon"},"content":"            taskFile.getParentFile().mkdirs();"},{"lineNumber":24,"author":{"gitId":"isaharon"},"content":"            taskFile.createNewFile();"},{"lineNumber":25,"author":{"gitId":"isaharon"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"isaharon"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"isaharon"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":30,"author":{"gitId":"isaharon"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"isaharon"},"content":"    public ArrayList\u003cTask\u003e loadAllTasks() {"},{"lineNumber":32,"author":{"gitId":"isaharon"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":33,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":34,"author":{"gitId":"isaharon"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"isaharon"},"content":"            Scanner sc \u003d new Scanner(taskFile);"},{"lineNumber":36,"author":{"gitId":"isaharon"},"content":"            while (sc.hasNext()) {"},{"lineNumber":37,"author":{"gitId":"isaharon"},"content":"                String line \u003d sc.nextLine();"},{"lineNumber":38,"author":{"gitId":"isaharon"},"content":"                char taskType \u003d line.charAt(1);"},{"lineNumber":39,"author":{"gitId":"isaharon"},"content":"                boolean isDone \u003d (String.valueOf(line.charAt(4)).compareTo(\"\\u2718\") \u003d\u003d 0) ? true : false;"},{"lineNumber":40,"author":{"gitId":"isaharon"},"content":"                String commandArgs \u003d line.substring(7);"},{"lineNumber":41,"author":{"gitId":"isaharon"},"content":"                Task task;"},{"lineNumber":42,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":43,"author":{"gitId":"isaharon"},"content":"                switch (taskType) {"},{"lineNumber":44,"author":{"gitId":"isaharon"},"content":"                case \u0027T\u0027:"},{"lineNumber":45,"author":{"gitId":"isaharon"},"content":"                    task \u003d new Todo(commandArgs);"},{"lineNumber":46,"author":{"gitId":"isaharon"},"content":"                    if (isDone) {"},{"lineNumber":47,"author":{"gitId":"isaharon"},"content":"                        task.setDone(true);"},{"lineNumber":48,"author":{"gitId":"isaharon"},"content":"                    }"},{"lineNumber":49,"author":{"gitId":"isaharon"},"content":"                    tasks.add(task);"},{"lineNumber":50,"author":{"gitId":"isaharon"},"content":"                    break;"},{"lineNumber":51,"author":{"gitId":"isaharon"},"content":"                case \u0027D\u0027:"},{"lineNumber":52,"author":{"gitId":"isaharon"},"content":"                    String[] deadlineArgs \u003d commandArgs.split(\"\\\\s+\\\\(by:\\\\s+\", 2);"},{"lineNumber":53,"author":{"gitId":"isaharon"},"content":"                    task \u003d new Deadline(deadlineArgs[0], deadlineArgs[1].substring(0, deadlineArgs[1].length() - 1));"},{"lineNumber":54,"author":{"gitId":"isaharon"},"content":"                    if (isDone) {"},{"lineNumber":55,"author":{"gitId":"isaharon"},"content":"                        task.setDone(true);"},{"lineNumber":56,"author":{"gitId":"isaharon"},"content":"                    }"},{"lineNumber":57,"author":{"gitId":"isaharon"},"content":"                    tasks.add(task);"},{"lineNumber":58,"author":{"gitId":"isaharon"},"content":"                    break;"},{"lineNumber":59,"author":{"gitId":"isaharon"},"content":"                case \u0027E\u0027:"},{"lineNumber":60,"author":{"gitId":"isaharon"},"content":"                    String[] eventArgs \u003d commandArgs.split(\"\\\\s+\\\\(at:\\\\s+\", 2);"},{"lineNumber":61,"author":{"gitId":"isaharon"},"content":"                    task \u003d new Event(eventArgs[0], eventArgs[1].substring(0, eventArgs[1].length() - 1));"},{"lineNumber":62,"author":{"gitId":"isaharon"},"content":"                    if (isDone) {"},{"lineNumber":63,"author":{"gitId":"isaharon"},"content":"                        task.setDone(true);"},{"lineNumber":64,"author":{"gitId":"isaharon"},"content":"                    }"},{"lineNumber":65,"author":{"gitId":"isaharon"},"content":"                    tasks.add(task);"},{"lineNumber":66,"author":{"gitId":"isaharon"},"content":"                    break;"},{"lineNumber":67,"author":{"gitId":"isaharon"},"content":"                default:"},{"lineNumber":68,"author":{"gitId":"isaharon"},"content":"                }"},{"lineNumber":69,"author":{"gitId":"isaharon"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"isaharon"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":71,"author":{"gitId":"isaharon"},"content":"            e.printStackTrace();"},{"lineNumber":72,"author":{"gitId":"isaharon"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":74,"author":{"gitId":"isaharon"},"content":"        return tasks;"},{"lineNumber":75,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":77,"author":{"gitId":"isaharon"},"content":"    @Override"},{"lineNumber":78,"author":{"gitId":"isaharon"},"content":"    public void saveAllTasks(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":79,"author":{"gitId":"isaharon"},"content":"        try {"},{"lineNumber":80,"author":{"gitId":"isaharon"},"content":"            FileWriter fw \u003d new FileWriter(taskFile, false);"},{"lineNumber":81,"author":{"gitId":"isaharon"},"content":"            for (Task task : tasks) {"},{"lineNumber":82,"author":{"gitId":"isaharon"},"content":"                fw.write(task.toString() + \"\\n\");"},{"lineNumber":83,"author":{"gitId":"isaharon"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"isaharon"},"content":"            fw.close();"},{"lineNumber":85,"author":{"gitId":"isaharon"},"content":"        } catch (IOException e) {"},{"lineNumber":86,"author":{"gitId":"isaharon"},"content":"            e.printStackTrace();"},{"lineNumber":87,"author":{"gitId":"isaharon"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":89}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":"    public String toString() {"},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":"        return \"☹ OOPS!!!\";"},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":9}},{"path":"src/main/java/duke/exception/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"public class InvalidTaskNumberException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":"    private String taskNumber;"},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":"    public InvalidTaskNumberException(String taskNumber) {"},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"isaharon"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"isaharon"},"content":"        return super.toString() + \" \" + taskNumber + \" is an invalid task number.\";"},{"lineNumber":13,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":14}},{"path":"src/main/java/duke/exception/MissingDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"import duke.command.CommandType;"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":"public class MissingDescriptionException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":"    private CommandType commandType;"},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":"    public MissingDescriptionException(CommandType commandType) {"},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":"        this.commandType \u003d commandType;"},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":12,"author":{"gitId":"isaharon"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"isaharon"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"isaharon"},"content":"        return super.toString() + \" The description of a \" + commandType.name() + \" cannot be empty.\";"},{"lineNumber":15,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":16}},{"path":"src/main/java/duke/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"public class UnknownCommandException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":"    public String toString() {"},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":"        return super.toString() + \" I\u0027m sorry, but I don\u0027t know what that means :-(\";"},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":9}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"import duke.command.ByeCommand;"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":"import duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":"import duke.command.DoneCommand;"},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":"import duke.command.EventCommand;"},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":"import duke.command.ListCommand;"},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":"import duke.command.TodoCommand;"},{"lineNumber":11,"author":{"gitId":"isaharon"},"content":"import duke.exception.UnknownCommandException;"},{"lineNumber":12,"author":{"gitId":"isaharon"},"content":"import duke.task.Task;"},{"lineNumber":13,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":14,"author":{"gitId":"isaharon"},"content":"import java.util.ArrayList;"},{"lineNumber":15,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":16,"author":{"gitId":"isaharon"},"content":"public class Parser {"},{"lineNumber":17,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":18,"author":{"gitId":"isaharon"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"isaharon"},"content":"     * Takes in a user input and returns a duke.command.Command object."},{"lineNumber":20,"author":{"gitId":"isaharon"},"content":"     * @param userInput"},{"lineNumber":21,"author":{"gitId":"isaharon"},"content":"     * @return Command object based on command type given."},{"lineNumber":22,"author":{"gitId":"isaharon"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"isaharon"},"content":"    public static Command parseUserInput(String userInput) throws UnknownCommandException {"},{"lineNumber":24,"author":{"gitId":"isaharon"},"content":"        String[] commandAndArgs \u003d getCommandAndArgs(userInput);"},{"lineNumber":25,"author":{"gitId":"isaharon"},"content":"        String commandType \u003d commandAndArgs[0];"},{"lineNumber":26,"author":{"gitId":"isaharon"},"content":"        String commandArgs \u003d commandAndArgs[1];"},{"lineNumber":27,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":28,"author":{"gitId":"isaharon"},"content":"        switch (commandType) {"},{"lineNumber":29,"author":{"gitId":"isaharon"},"content":"        case \"list\":"},{"lineNumber":30,"author":{"gitId":"isaharon"},"content":"            return new ListCommand();"},{"lineNumber":31,"author":{"gitId":"isaharon"},"content":"        case \"done\":"},{"lineNumber":32,"author":{"gitId":"isaharon"},"content":"            return new DoneCommand(commandArgs);"},{"lineNumber":33,"author":{"gitId":"isaharon"},"content":"        case \"bye\":"},{"lineNumber":34,"author":{"gitId":"isaharon"},"content":"            return new ByeCommand();"},{"lineNumber":35,"author":{"gitId":"isaharon"},"content":"        case \"todo\":"},{"lineNumber":36,"author":{"gitId":"isaharon"},"content":"            return new TodoCommand(commandArgs);"},{"lineNumber":37,"author":{"gitId":"isaharon"},"content":"        case \"deadline\":"},{"lineNumber":38,"author":{"gitId":"isaharon"},"content":"            return new DeadlineCommand(commandArgs);"},{"lineNumber":39,"author":{"gitId":"isaharon"},"content":"        case \"event\":"},{"lineNumber":40,"author":{"gitId":"isaharon"},"content":"            return new EventCommand(commandArgs);"},{"lineNumber":41,"author":{"gitId":"isaharon"},"content":"        case \"delete\":"},{"lineNumber":42,"author":{"gitId":"isaharon"},"content":"            return new DeleteCommand(commandArgs);"},{"lineNumber":43,"author":{"gitId":"isaharon"},"content":"        default:"},{"lineNumber":44,"author":{"gitId":"isaharon"},"content":"            throw new UnknownCommandException();"},{"lineNumber":45,"author":{"gitId":"isaharon"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":48,"author":{"gitId":"isaharon"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"isaharon"},"content":"     * Takes in user input and splits it into 2 as long as there is whitespace"},{"lineNumber":50,"author":{"gitId":"isaharon"},"content":"     * character in the middle."},{"lineNumber":51,"author":{"gitId":"isaharon"},"content":"     * Reused from Lecture Week 4 Contacts program."},{"lineNumber":52,"author":{"gitId":"isaharon"},"content":"     * @param userInput"},{"lineNumber":53,"author":{"gitId":"isaharon"},"content":"     * @return Array of command type and command arguments"},{"lineNumber":54,"author":{"gitId":"isaharon"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"isaharon"},"content":"    private static String[] getCommandAndArgs(String userInput) {"},{"lineNumber":56,"author":{"gitId":"isaharon"},"content":"        String[] split \u003d userInput.split(\"\\\\s+\", 2);"},{"lineNumber":57,"author":{"gitId":"isaharon"},"content":"        return split.length \u003d\u003d 2 ? split : new String[] { split[0], \"\" };"},{"lineNumber":58,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":60,"author":{"gitId":"isaharon"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"isaharon"},"content":"     * Checks if input task number is valid."},{"lineNumber":62,"author":{"gitId":"isaharon"},"content":"     * @param tasks, number"},{"lineNumber":63,"author":{"gitId":"isaharon"},"content":"     * @return validity of input."},{"lineNumber":64,"author":{"gitId":"isaharon"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"isaharon"},"content":"    public static boolean isValidTaskNumber(ArrayList\u003cTask\u003e tasks, String number) {"},{"lineNumber":66,"author":{"gitId":"isaharon"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"isaharon"},"content":"            tasks.get(Integer.parseInt(number) - 1);"},{"lineNumber":68,"author":{"gitId":"isaharon"},"content":"        } catch (NumberFormatException e){"},{"lineNumber":69,"author":{"gitId":"isaharon"},"content":"            return false;"},{"lineNumber":70,"author":{"gitId":"isaharon"},"content":"        } catch (IndexOutOfBoundsException e){"},{"lineNumber":71,"author":{"gitId":"isaharon"},"content":"            return false;"},{"lineNumber":72,"author":{"gitId":"isaharon"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"isaharon"},"content":"        return true;"},{"lineNumber":74,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":75}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":"    protected String by;"},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":11,"author":{"gitId":"isaharon"},"content":"    public String getBy() {"},{"lineNumber":12,"author":{"gitId":"isaharon"},"content":"        return by;"},{"lineNumber":13,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":15,"author":{"gitId":"isaharon"},"content":"    public void setBy(String by) {"},{"lineNumber":16,"author":{"gitId":"isaharon"},"content":"        this.by \u003d by;"},{"lineNumber":17,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":19,"author":{"gitId":"isaharon"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"isaharon"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"isaharon"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":22,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":23}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":"    public Event(String description, String at) {"},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":"        this.at \u003d at;"},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":11,"author":{"gitId":"isaharon"},"content":"    public String getAt() {"},{"lineNumber":12,"author":{"gitId":"isaharon"},"content":"        return at;"},{"lineNumber":13,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":15,"author":{"gitId":"isaharon"},"content":"    public void setAt(String at) {"},{"lineNumber":16,"author":{"gitId":"isaharon"},"content":"        this.at \u003d at;"},{"lineNumber":17,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":19,"author":{"gitId":"isaharon"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"isaharon"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"isaharon"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":22,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":23}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"import duke.dao.TaskDaoImpl;"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":"public abstract class Task {"},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":"    private String description;"},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":"    private boolean isDone;"},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":11,"author":{"gitId":"isaharon"},"content":"    public Task(String description) {"},{"lineNumber":12,"author":{"gitId":"isaharon"},"content":"        this.description \u003d description;"},{"lineNumber":13,"author":{"gitId":"isaharon"},"content":"        this.isDone \u003d false;"},{"lineNumber":14,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":16,"author":{"gitId":"isaharon"},"content":"    public String getDescription() {"},{"lineNumber":17,"author":{"gitId":"isaharon"},"content":"        return description;"},{"lineNumber":18,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":20,"author":{"gitId":"isaharon"},"content":"    public void setDescription(String description) {"},{"lineNumber":21,"author":{"gitId":"isaharon"},"content":"        this.description \u003d description;"},{"lineNumber":22,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":24,"author":{"gitId":"isaharon"},"content":"    public boolean isDone() {"},{"lineNumber":25,"author":{"gitId":"isaharon"},"content":"        return isDone;"},{"lineNumber":26,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":28,"author":{"gitId":"isaharon"},"content":"    public void setDone(boolean done) {"},{"lineNumber":29,"author":{"gitId":"isaharon"},"content":"        isDone \u003d done;"},{"lineNumber":30,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":32,"author":{"gitId":"isaharon"},"content":"    public String getStatusIcon() {"},{"lineNumber":33,"author":{"gitId":"isaharon"},"content":"        return (isDone ? \"\\u2718\" : \" \");"},{"lineNumber":34,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":36,"author":{"gitId":"isaharon"},"content":"    public static ArrayList\u003cTask\u003e loadAllTasks() {"},{"lineNumber":37,"author":{"gitId":"isaharon"},"content":"        TaskDaoImpl taskDao \u003d new TaskDaoImpl();"},{"lineNumber":38,"author":{"gitId":"isaharon"},"content":"        return taskDao.loadAllTasks();"},{"lineNumber":39,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":41,"author":{"gitId":"isaharon"},"content":"    public static void saveAllTasks(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":42,"author":{"gitId":"isaharon"},"content":"        TaskDaoImpl taskDao \u003d new TaskDaoImpl();"},{"lineNumber":43,"author":{"gitId":"isaharon"},"content":"        taskDao.saveAllTasks(tasks);"},{"lineNumber":44,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":46,"author":{"gitId":"isaharon"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"isaharon"},"content":"    public String toString() {"},{"lineNumber":48,"author":{"gitId":"isaharon"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":49,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":50}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"isaharon"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":12,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":13}},{"path":"src/main/java/duke/ui/Menu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":"import duke.exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":"public class Menu {"},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":"    private static final String LINE \u003d \"\\u2500\".repeat(60);"},{"lineNumber":11,"author":{"gitId":"isaharon"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);"},{"lineNumber":12,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":13,"author":{"gitId":"isaharon"},"content":"    public static void printGreeting() {"},{"lineNumber":14,"author":{"gitId":"isaharon"},"content":"        System.out.println(LINE);"},{"lineNumber":15,"author":{"gitId":"isaharon"},"content":"        System.out.println(\" Hello! I\u0027m Duke\");"},{"lineNumber":16,"author":{"gitId":"isaharon"},"content":"        System.out.println(\" What can I do for you?\");"},{"lineNumber":17,"author":{"gitId":"isaharon"},"content":"        System.out.println(LINE);"},{"lineNumber":18,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":20,"author":{"gitId":"isaharon"},"content":"    public static void printBye() {"},{"lineNumber":21,"author":{"gitId":"isaharon"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");"},{"lineNumber":22,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":24,"author":{"gitId":"isaharon"},"content":"    public static void printText(String text) {"},{"lineNumber":25,"author":{"gitId":"isaharon"},"content":"        System.out.println(text);"},{"lineNumber":26,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":28,"author":{"gitId":"isaharon"},"content":"    public static void printAddedTask(Task task) {"},{"lineNumber":29,"author":{"gitId":"isaharon"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":30,"author":{"gitId":"isaharon"},"content":"        System.out.println(\"\\t\" + task);"},{"lineNumber":31,"author":{"gitId":"isaharon"},"content":"        System.out.println(\"Now you have \" + Duke.getTaskSize() + \" tasks in the list.\");"},{"lineNumber":32,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":34,"author":{"gitId":"isaharon"},"content":"    public static void printError(DukeException error) {"},{"lineNumber":35,"author":{"gitId":"isaharon"},"content":"        System.out.println(error);"},{"lineNumber":36,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":38,"author":{"gitId":"isaharon"},"content":"    public static void printDeleteTask(Task task) {"},{"lineNumber":39,"author":{"gitId":"isaharon"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":40,"author":{"gitId":"isaharon"},"content":"        System.out.println(\"\\t\" + task);"},{"lineNumber":41,"author":{"gitId":"isaharon"},"content":"        System.out.println(\"Now you have \" + Duke.getTaskSize() + \" tasks in the list.\");"},{"lineNumber":42,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":44,"author":{"gitId":"isaharon"},"content":"    public static void printLine() {"},{"lineNumber":45,"author":{"gitId":"isaharon"},"content":"        System.out.println(LINE);"},{"lineNumber":46,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"isaharon"},"content":""},{"lineNumber":48,"author":{"gitId":"isaharon"},"content":"    public static String readUserInput() {"},{"lineNumber":49,"author":{"gitId":"isaharon"},"content":"        String userInput;"},{"lineNumber":50,"author":{"gitId":"isaharon"},"content":"        userInput \u003d SCANNER.nextLine();"},{"lineNumber":51,"author":{"gitId":"isaharon"},"content":"        return userInput;"},{"lineNumber":52,"author":{"gitId":"isaharon"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"isaharon"},"content":"}"}],"authorContributionMap":{"isaharon":53}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"isaharon"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"isaharon"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"isaharon"},"content":"event project meet /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"isaharon"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"isaharon"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"isaharon"},"content":"list"},{"lineNumber":7,"author":{"gitId":"isaharon"},"content":"deadline return book /by Sunday"},{"lineNumber":8,"author":{"gitId":"isaharon"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":9,"author":{"gitId":"isaharon"},"content":"todo"},{"lineNumber":10,"author":{"gitId":"isaharon"},"content":"blah"},{"lineNumber":11,"author":{"gitId":"isaharon"},"content":"done 100"},{"lineNumber":12,"author":{"gitId":"isaharon"},"content":"done notanumber"},{"lineNumber":13,"author":{"gitId":"isaharon"},"content":"bye"}],"authorContributionMap":{"isaharon":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"isaharon"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"isaharon"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"isaharon":2,"-":36}}]
