[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"violinyap"},"content":"Hello, meet Duke!"},{"lineNumber":4,"author":{"gitId":"violinyap"},"content":"With me, you can organise your task, events, deadlines and todo easily."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"violinyap"},"content":"## Adding a todo "},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"violinyap"},"content":"### Usage"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"violinyap"},"content":"### `todo (description)` "},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"violinyap"},"content":"This will save (description) as a new todo."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"violinyap"},"content":"`todo learn java`"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"violinyap"},"content":"`You have added new todo \"learn java\" into the list!`"},{"lineNumber":21,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":22,"author":{"gitId":"violinyap"},"content":"## Adding a deadline"},{"lineNumber":23,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":24,"author":{"gitId":"violinyap"},"content":"### Usage"},{"lineNumber":25,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":26,"author":{"gitId":"violinyap"},"content":"### `deadline (description) /by (deadline)` "},{"lineNumber":27,"author":{"gitId":"violinyap"},"content":"This will save (description) with (deadline) as a new deadline."},{"lineNumber":28,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":29,"author":{"gitId":"violinyap"},"content":"Example of usage:"},{"lineNumber":30,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":31,"author":{"gitId":"violinyap"},"content":"`deadline master java /by today`"},{"lineNumber":32,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":33,"author":{"gitId":"violinyap"},"content":"Expected outcome:"},{"lineNumber":34,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":35,"author":{"gitId":"violinyap"},"content":"`You have added new deadline \"master java\" by \"today\" into the list!`"}],"authorContributionMap":{"violinyap":23,"-":12}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"violinyap"},"content":"T | 0 | hfewi"},{"lineNumber":2,"author":{"gitId":"violinyap"},"content":"D | 0 | hafhoh | jioqfwejqij"},{"lineNumber":3,"author":{"gitId":"violinyap"},"content":"T | 0 | hello"},{"lineNumber":4,"author":{"gitId":"violinyap"},"content":"T | 0 | ah"},{"lineNumber":5,"author":{"gitId":"violinyap"},"content":"D | 0 | ai | by"},{"lineNumber":6,"author":{"gitId":"violinyap"},"content":"E | 0 | hjfekw | today"}],"authorContributionMap":{"violinyap":6}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"violinyap"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":3,"author":{"gitId":"violinyap"},"content":"    protected String by;"},{"lineNumber":4,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":5,"author":{"gitId":"violinyap"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"violinyap"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"violinyap"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":10,"author":{"gitId":"violinyap"},"content":"    public void setBy(String by) {"},{"lineNumber":11,"author":{"gitId":"violinyap"},"content":"        this.by \u003d by;"},{"lineNumber":12,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":14,"author":{"gitId":"violinyap"},"content":"    public String getBy() {"},{"lineNumber":15,"author":{"gitId":"violinyap"},"content":"        return by;"},{"lineNumber":16,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":18,"author":{"gitId":"violinyap"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"violinyap"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"violinyap"},"content":"        return \"[D] [\"+ (this.isDone ? \"X\" : \" \") + \"] \""},{"lineNumber":21,"author":{"gitId":"violinyap"},"content":"                + this.getDescription()  + \" (by: \" + this.by + \")\";"},{"lineNumber":22,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":24,"author":{"gitId":"violinyap"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"violinyap"},"content":"    public String formatData() {"},{"lineNumber":26,"author":{"gitId":"violinyap"},"content":"        int done;"},{"lineNumber":27,"author":{"gitId":"violinyap"},"content":"        if (isDone) {"},{"lineNumber":28,"author":{"gitId":"violinyap"},"content":"            done \u003d 1;"},{"lineNumber":29,"author":{"gitId":"violinyap"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"violinyap"},"content":"            done \u003d 0;"},{"lineNumber":31,"author":{"gitId":"violinyap"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"violinyap"},"content":"        return \"D\" + \" | \" + done + \" | \" + description + \" | \" + by;"},{"lineNumber":33,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":35,"author":{"gitId":"violinyap"},"content":"}"}],"authorContributionMap":{"violinyap":35}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"violinyap"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"violinyap"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"violinyap"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"violinyap"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"violinyap"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"violinyap"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"violinyap"},"content":"// git add ."},{"lineNumber":8,"author":{"gitId":"violinyap"},"content":"// git tag level-3"},{"lineNumber":9,"author":{"gitId":"violinyap"},"content":"// git commit -m \"\""},{"lineNumber":10,"author":{"gitId":"violinyap"},"content":"// git push origin --tags"},{"lineNumber":11,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":13,"author":{"gitId":"violinyap"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"violinyap"},"content":"    public static boolean isContinue \u003d true;"},{"lineNumber":15,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":16,"author":{"gitId":"violinyap"},"content":"    public static void saveFile() throws IOException {"},{"lineNumber":17,"author":{"gitId":"violinyap"},"content":"        File path \u003d new File(\"duke.txt\");"},{"lineNumber":18,"author":{"gitId":"violinyap"},"content":"        if (!path.exists() \u0026\u0026 !path.createNewFile()) {"},{"lineNumber":19,"author":{"gitId":"violinyap"},"content":"            throw new IOException();"},{"lineNumber":20,"author":{"gitId":"violinyap"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"violinyap"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"violinyap"},"content":"            FileWriter fileWriter \u003d new FileWriter(path);"},{"lineNumber":23,"author":{"gitId":"violinyap"},"content":"            for (int i \u003d 0; i \u003c numberOfTask(); i++) {"},{"lineNumber":24,"author":{"gitId":"violinyap"},"content":"                fileWriter.write(tasks.get(i).formatData() + \"\\n\");"},{"lineNumber":25,"author":{"gitId":"violinyap"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"violinyap"},"content":"            fileWriter.flush();"},{"lineNumber":27,"author":{"gitId":"violinyap"},"content":"            fileWriter.close();"},{"lineNumber":28,"author":{"gitId":"violinyap"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"violinyap"},"content":"            System.out.println(\"Failed to save the file\");"},{"lineNumber":30,"author":{"gitId":"violinyap"},"content":"            tasks.clear();"},{"lineNumber":31,"author":{"gitId":"violinyap"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":34,"author":{"gitId":"violinyap"},"content":"    public static void loadFile() throws FileNotFoundException {"},{"lineNumber":35,"author":{"gitId":"violinyap"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"violinyap"},"content":"            File path \u003d new File(\"duke.txt\");"},{"lineNumber":37,"author":{"gitId":"violinyap"},"content":"            if (!path.exists()) {"},{"lineNumber":38,"author":{"gitId":"violinyap"},"content":"                throw new FileNotFoundException();"},{"lineNumber":39,"author":{"gitId":"violinyap"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"violinyap"},"content":"            Scanner scanner \u003d new Scanner(path);"},{"lineNumber":41,"author":{"gitId":"violinyap"},"content":"            while (scanner.hasNext()) {"},{"lineNumber":42,"author":{"gitId":"violinyap"},"content":"                String input \u003d scanner.nextLine();"},{"lineNumber":43,"author":{"gitId":"violinyap"},"content":"                String[] data \u003d input.split(\"\\\\s+|\\\\s+\");"},{"lineNumber":44,"author":{"gitId":"violinyap"},"content":"                String addCommand \u003d \"\";"},{"lineNumber":45,"author":{"gitId":"violinyap"},"content":"                switch (data[0]) {"},{"lineNumber":46,"author":{"gitId":"violinyap"},"content":"                    case \"T\":"},{"lineNumber":47,"author":{"gitId":"violinyap"},"content":"                        addCommand \u003d \"todo \" + data[4];"},{"lineNumber":48,"author":{"gitId":"violinyap"},"content":"                        break;"},{"lineNumber":49,"author":{"gitId":"violinyap"},"content":"                    case \"D\":"},{"lineNumber":50,"author":{"gitId":"violinyap"},"content":"                        addCommand \u003d \"deadline \" + data[4] + \" /by \" + data[6];"},{"lineNumber":51,"author":{"gitId":"violinyap"},"content":"                        break;"},{"lineNumber":52,"author":{"gitId":"violinyap"},"content":"                    case \"E\":"},{"lineNumber":53,"author":{"gitId":"violinyap"},"content":"                        addCommand \u003d \"event \" + data[4] + \" /at \" + data[6];"},{"lineNumber":54,"author":{"gitId":"violinyap"},"content":"                        break;"},{"lineNumber":55,"author":{"gitId":"violinyap"},"content":"                }"},{"lineNumber":56,"author":{"gitId":"violinyap"},"content":"                loadCommand(addCommand);"},{"lineNumber":57,"author":{"gitId":"violinyap"},"content":"                if (data[2].equals(1)) {"},{"lineNumber":58,"author":{"gitId":"violinyap"},"content":"                    loadCommand(\"done \" + tasks.size());"},{"lineNumber":59,"author":{"gitId":"violinyap"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"violinyap"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"violinyap"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":62,"author":{"gitId":"violinyap"},"content":"            System.out.println(\"Failed to load the file\");"},{"lineNumber":63,"author":{"gitId":"violinyap"},"content":"            tasks.clear();"},{"lineNumber":64,"author":{"gitId":"violinyap"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":66,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":68,"author":{"gitId":"violinyap"},"content":"    public static Integer numberOfTask() {"},{"lineNumber":69,"author":{"gitId":"violinyap"},"content":"        return tasks.size();"},{"lineNumber":70,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":72,"author":{"gitId":"violinyap"},"content":"    public static void loadCommand(String input) {"},{"lineNumber":73,"author":{"gitId":"violinyap"},"content":"        String[] splittedCommand \u003d input.split(\"\\\\s+\",2);"},{"lineNumber":74,"author":{"gitId":"violinyap"},"content":"        String commandType \u003d splittedCommand[0].toUpperCase();"},{"lineNumber":75,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":76,"author":{"gitId":"violinyap"},"content":"        switch (commandType) {"},{"lineNumber":77,"author":{"gitId":"violinyap"},"content":"            case \"DONE\":"},{"lineNumber":78,"author":{"gitId":"violinyap"},"content":"                int taskIndex \u003dInteger.parseInt(splittedCommand[1]) ;"},{"lineNumber":79,"author":{"gitId":"violinyap"},"content":"                taskIndex--;"},{"lineNumber":80,"author":{"gitId":"violinyap"},"content":"                tasks.get(taskIndex).setDone(true);"},{"lineNumber":81,"author":{"gitId":"violinyap"},"content":"                break;"},{"lineNumber":82,"author":{"gitId":"violinyap"},"content":"            case \"TODO\":"},{"lineNumber":83,"author":{"gitId":"violinyap"},"content":"                String description \u003d splittedCommand[1];"},{"lineNumber":84,"author":{"gitId":"violinyap"},"content":"                if(description.equals(\"\")){"},{"lineNumber":85,"author":{"gitId":"violinyap"},"content":"                    System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":86,"author":{"gitId":"violinyap"},"content":"                }"},{"lineNumber":87,"author":{"gitId":"violinyap"},"content":"                Todo newTodo \u003d new Todo(description);"},{"lineNumber":88,"author":{"gitId":"violinyap"},"content":"                tasks.add(newTodo);"},{"lineNumber":89,"author":{"gitId":"violinyap"},"content":"                break;"},{"lineNumber":90,"author":{"gitId":"violinyap"},"content":"            case \"DEADLINE\":"},{"lineNumber":91,"author":{"gitId":"violinyap"},"content":"                String deadlineDescription \u003d splittedCommand[1];"},{"lineNumber":92,"author":{"gitId":"violinyap"},"content":"                if(deadlineDescription.equals(\"\")){"},{"lineNumber":93,"author":{"gitId":"violinyap"},"content":"                    System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":94,"author":{"gitId":"violinyap"},"content":"                    break;"},{"lineNumber":95,"author":{"gitId":"violinyap"},"content":"                }"},{"lineNumber":96,"author":{"gitId":"violinyap"},"content":"                String[] deadline \u003d deadlineDescription.split(\" /by \", 2);"},{"lineNumber":97,"author":{"gitId":"violinyap"},"content":"                if(deadline.length \u003c 2){"},{"lineNumber":98,"author":{"gitId":"violinyap"},"content":"                    System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":99,"author":{"gitId":"violinyap"},"content":"                    break;"},{"lineNumber":100,"author":{"gitId":"violinyap"},"content":"                }"},{"lineNumber":101,"author":{"gitId":"violinyap"},"content":"                Deadline newDeadline \u003d new Deadline(deadline[0], deadline[1]);"},{"lineNumber":102,"author":{"gitId":"violinyap"},"content":"                tasks.add(newDeadline);"},{"lineNumber":103,"author":{"gitId":"violinyap"},"content":"                break;"},{"lineNumber":104,"author":{"gitId":"violinyap"},"content":"            case \"EVENT\":"},{"lineNumber":105,"author":{"gitId":"violinyap"},"content":"                String[] eventDescription \u003d splittedCommand[1].split(\" /at \", 2);"},{"lineNumber":106,"author":{"gitId":"violinyap"},"content":"                Event newEvent \u003d new Event(eventDescription[0], eventDescription[1]);"},{"lineNumber":107,"author":{"gitId":"violinyap"},"content":"                tasks.add(newEvent);"},{"lineNumber":108,"author":{"gitId":"violinyap"},"content":"                break;"},{"lineNumber":109,"author":{"gitId":"violinyap"},"content":"            default:"},{"lineNumber":110,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":111,"author":{"gitId":"violinyap"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":114,"author":{"gitId":"violinyap"},"content":"    public static void command(String input) {"},{"lineNumber":115,"author":{"gitId":"violinyap"},"content":"        String[] splittedCommand \u003d input.split(\"\\\\s+\",2);"},{"lineNumber":116,"author":{"gitId":"violinyap"},"content":"        String commandType \u003d splittedCommand[0].toUpperCase();"},{"lineNumber":117,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":118,"author":{"gitId":"violinyap"},"content":"        switch (commandType) {"},{"lineNumber":119,"author":{"gitId":"violinyap"},"content":"            case \"BYE\":"},{"lineNumber":120,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":121,"author":{"gitId":"violinyap"},"content":"                isContinue \u003d false;"},{"lineNumber":122,"author":{"gitId":"violinyap"},"content":"                break;"},{"lineNumber":123,"author":{"gitId":"violinyap"},"content":"            case \"LIST\":"},{"lineNumber":124,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"____________________________________________________________\");"},{"lineNumber":125,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":126,"author":{"gitId":"violinyap"},"content":"                for (int i \u003d 0; i \u003c numberOfTask(); i++){"},{"lineNumber":127,"author":{"gitId":"violinyap"},"content":"                    int number \u003d i+1;"},{"lineNumber":128,"author":{"gitId":"violinyap"},"content":"                    System.out.println( number + \".\" + tasks.get(i));"},{"lineNumber":129,"author":{"gitId":"violinyap"},"content":"                }"},{"lineNumber":130,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"____________________________________________________________\");"},{"lineNumber":131,"author":{"gitId":"violinyap"},"content":"                break;"},{"lineNumber":132,"author":{"gitId":"violinyap"},"content":"            case \"FIND\":"},{"lineNumber":133,"author":{"gitId":"violinyap"},"content":"                String findDescription \u003d splittedCommand[1];"},{"lineNumber":134,"author":{"gitId":"violinyap"},"content":"                ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":135,"author":{"gitId":"violinyap"},"content":"                for (Task task : tasks) {"},{"lineNumber":136,"author":{"gitId":"violinyap"},"content":"                    if (task.getDescription().contains(findDescription)) {"},{"lineNumber":137,"author":{"gitId":"violinyap"},"content":"                        foundTasks.add(task);"},{"lineNumber":138,"author":{"gitId":"violinyap"},"content":"                    }"},{"lineNumber":139,"author":{"gitId":"violinyap"},"content":"                }"},{"lineNumber":140,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":141,"author":{"gitId":"violinyap"},"content":"                if (foundTasks.size() \u003e 0) {"},{"lineNumber":142,"author":{"gitId":"violinyap"},"content":"                    System.out.println(\"____________________________________________________________\");"},{"lineNumber":143,"author":{"gitId":"violinyap"},"content":"                    System.out.println(\"Here are the matching task in your list:\");"},{"lineNumber":144,"author":{"gitId":"violinyap"},"content":"                    for (int i \u003d 0; i \u003c foundTasks.size(); i++) {"},{"lineNumber":145,"author":{"gitId":"violinyap"},"content":"                        int number \u003d i + 1;"},{"lineNumber":146,"author":{"gitId":"violinyap"},"content":"                        System.out.println(number + \".\" + foundTasks.get(i));"},{"lineNumber":147,"author":{"gitId":"violinyap"},"content":"                    }"},{"lineNumber":148,"author":{"gitId":"violinyap"},"content":"                    System.out.println(\"____________________________________________________________\");"},{"lineNumber":149,"author":{"gitId":"violinyap"},"content":"                } else {"},{"lineNumber":150,"author":{"gitId":"violinyap"},"content":"                    System.out.println(\"☹ OOPS!!! I cannot find the word \" + findDescription + \" in the list\");"},{"lineNumber":151,"author":{"gitId":"violinyap"},"content":"                }"},{"lineNumber":152,"author":{"gitId":"violinyap"},"content":"                break;"},{"lineNumber":153,"author":{"gitId":"violinyap"},"content":"            case \"DONE\":"},{"lineNumber":154,"author":{"gitId":"violinyap"},"content":"                int taskIndex \u003dInteger.parseInt(splittedCommand[1]) ;"},{"lineNumber":155,"author":{"gitId":"violinyap"},"content":"                taskIndex--;"},{"lineNumber":156,"author":{"gitId":"violinyap"},"content":"                tasks.get(taskIndex).setDone(true);"},{"lineNumber":157,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":158,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"____________________________________________________________\");"},{"lineNumber":159,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"I\u0027ve marked this as done: \" + tasks.get(taskIndex));"},{"lineNumber":160,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"____________________________________________________________\");"},{"lineNumber":161,"author":{"gitId":"violinyap"},"content":"                break;"},{"lineNumber":162,"author":{"gitId":"violinyap"},"content":"            case \"TODO\":"},{"lineNumber":163,"author":{"gitId":"violinyap"},"content":"                String description \u003d splittedCommand[1];"},{"lineNumber":164,"author":{"gitId":"violinyap"},"content":"                if(description.equals(\"\")){"},{"lineNumber":165,"author":{"gitId":"violinyap"},"content":"                    System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":166,"author":{"gitId":"violinyap"},"content":"                }"},{"lineNumber":167,"author":{"gitId":"violinyap"},"content":"                Todo newTodo \u003d new Todo(description);"},{"lineNumber":168,"author":{"gitId":"violinyap"},"content":"                tasks.add(newTodo);"},{"lineNumber":169,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":170,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":171,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"____________________________________________________________\");"},{"lineNumber":172,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":173,"author":{"gitId":"violinyap"},"content":"                System.out.println(tasks.get(numberOfTask() - 1));"},{"lineNumber":174,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"Now you have \" + numberOfTask() + \" tasks in the list.\");"},{"lineNumber":175,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"____________________________________________________________\");"},{"lineNumber":176,"author":{"gitId":"violinyap"},"content":"                break;"},{"lineNumber":177,"author":{"gitId":"violinyap"},"content":"            case \"DEADLINE\":"},{"lineNumber":178,"author":{"gitId":"violinyap"},"content":"                String deadlineDescription \u003d splittedCommand[1];"},{"lineNumber":179,"author":{"gitId":"violinyap"},"content":"                if(deadlineDescription.equals(\"\")){"},{"lineNumber":180,"author":{"gitId":"violinyap"},"content":"                    System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":181,"author":{"gitId":"violinyap"},"content":"                    break;"},{"lineNumber":182,"author":{"gitId":"violinyap"},"content":"                }"},{"lineNumber":183,"author":{"gitId":"violinyap"},"content":"                String[] deadline \u003d deadlineDescription.split(\" /by \", 2);"},{"lineNumber":184,"author":{"gitId":"violinyap"},"content":"                if(deadline.length \u003c 2){"},{"lineNumber":185,"author":{"gitId":"violinyap"},"content":"                    System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":186,"author":{"gitId":"violinyap"},"content":"                    break;"},{"lineNumber":187,"author":{"gitId":"violinyap"},"content":"                }"},{"lineNumber":188,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":189,"author":{"gitId":"violinyap"},"content":"                Deadline newDeadline \u003d new Deadline(deadline[0], deadline[1]);"},{"lineNumber":190,"author":{"gitId":"violinyap"},"content":"                tasks.add(newDeadline);"},{"lineNumber":191,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":192,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"____________________________________________________________\");"},{"lineNumber":193,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \" + splittedCommand[1]);"},{"lineNumber":194,"author":{"gitId":"violinyap"},"content":"                System.out.println(tasks.get(numberOfTask() - 1));"},{"lineNumber":195,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"Now you have \" + numberOfTask() + \" tasks in the list.\");"},{"lineNumber":196,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"____________________________________________________________\");"},{"lineNumber":197,"author":{"gitId":"violinyap"},"content":"                break;"},{"lineNumber":198,"author":{"gitId":"violinyap"},"content":"            case \"EVENT\":"},{"lineNumber":199,"author":{"gitId":"violinyap"},"content":"                String[] eventDescription \u003d splittedCommand[1].split(\" /at \", 2);"},{"lineNumber":200,"author":{"gitId":"violinyap"},"content":"                Event newEvent \u003d new Event(eventDescription[0], eventDescription[1]);"},{"lineNumber":201,"author":{"gitId":"violinyap"},"content":"                tasks.add(newEvent);"},{"lineNumber":202,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":203,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"____________________________________________________________\");"},{"lineNumber":204,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \" + splittedCommand[1]);"},{"lineNumber":205,"author":{"gitId":"violinyap"},"content":"                System.out.println(tasks.get(numberOfTask() - 1));"},{"lineNumber":206,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"Now you have \" + numberOfTask() + \" tasks in the list.\");"},{"lineNumber":207,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"____________________________________________________________\");"},{"lineNumber":208,"author":{"gitId":"violinyap"},"content":"                break;"},{"lineNumber":209,"author":{"gitId":"violinyap"},"content":"            default:"},{"lineNumber":210,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":211,"author":{"gitId":"violinyap"},"content":"        }"},{"lineNumber":212,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":215,"author":{"gitId":"violinyap"},"content":"        greetMessage();"},{"lineNumber":216,"author":{"gitId":"violinyap"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":217,"author":{"gitId":"violinyap"},"content":"        String input;"},{"lineNumber":218,"author":{"gitId":"violinyap"},"content":"        try {"},{"lineNumber":219,"author":{"gitId":"violinyap"},"content":"            loadFile();"},{"lineNumber":220,"author":{"gitId":"violinyap"},"content":"        }  catch (FileNotFoundException e) {"},{"lineNumber":221,"author":{"gitId":"violinyap"},"content":"            System.out.println(\"Failed to load the file\");"},{"lineNumber":222,"author":{"gitId":"violinyap"},"content":"        }"},{"lineNumber":223,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":224,"author":{"gitId":"violinyap"},"content":"        while (isContinue) {"},{"lineNumber":225,"author":{"gitId":"violinyap"},"content":"            input \u003d scanner.nextLine();"},{"lineNumber":226,"author":{"gitId":"violinyap"},"content":"            command(input);"},{"lineNumber":227,"author":{"gitId":"violinyap"},"content":"            try {"},{"lineNumber":228,"author":{"gitId":"violinyap"},"content":"                saveFile();"},{"lineNumber":229,"author":{"gitId":"violinyap"},"content":"            }  catch (IOException e) {"},{"lineNumber":230,"author":{"gitId":"violinyap"},"content":"                System.out.println(\"Failed to load the file\");"},{"lineNumber":231,"author":{"gitId":"violinyap"},"content":"            }"},{"lineNumber":232,"author":{"gitId":"violinyap"},"content":"        }"},{"lineNumber":233,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":234,"author":{"gitId":"violinyap"},"content":"        scanner.close();"},{"lineNumber":235,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":237,"author":{"gitId":"violinyap"},"content":"    public static void greetMessage() {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":239,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":240,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":241,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":242,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":243,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":244,"author":{"gitId":"violinyap"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":245,"author":{"gitId":"violinyap"},"content":"        System.out.println(\"Hello! I\u0027m \\n\" + logo );"},{"lineNumber":246,"author":{"gitId":"violinyap"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":247,"author":{"gitId":"violinyap"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":249,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"violinyap":241,"-":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"violinyap"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":3,"author":{"gitId":"violinyap"},"content":"    protected String at;"},{"lineNumber":4,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":5,"author":{"gitId":"violinyap"},"content":"    public Event(String description, String at) {"},{"lineNumber":6,"author":{"gitId":"violinyap"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"violinyap"},"content":"        this.at \u003d at;"},{"lineNumber":8,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":10,"author":{"gitId":"violinyap"},"content":"    public void setAt(String at) {"},{"lineNumber":11,"author":{"gitId":"violinyap"},"content":"        this.at \u003d at;"},{"lineNumber":12,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":14,"author":{"gitId":"violinyap"},"content":"    public String getAt() {"},{"lineNumber":15,"author":{"gitId":"violinyap"},"content":"        return at;"},{"lineNumber":16,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":18,"author":{"gitId":"violinyap"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"violinyap"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"violinyap"},"content":"        return \"[D] [\"+ (this.isDone ? \"X\" : \" \") + \"] \""},{"lineNumber":21,"author":{"gitId":"violinyap"},"content":"                + this.getDescription() + \"(at: \" + getAt() + \")\";"},{"lineNumber":22,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":24,"author":{"gitId":"violinyap"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"violinyap"},"content":"    public String formatData() {"},{"lineNumber":26,"author":{"gitId":"violinyap"},"content":"        int done;"},{"lineNumber":27,"author":{"gitId":"violinyap"},"content":"        if (isDone) {"},{"lineNumber":28,"author":{"gitId":"violinyap"},"content":"            done \u003d 1;"},{"lineNumber":29,"author":{"gitId":"violinyap"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"violinyap"},"content":"            done \u003d 0;"},{"lineNumber":31,"author":{"gitId":"violinyap"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"violinyap"},"content":"        return \"E\" + \" | \" + done + \" | \" + description + \" | \" + at;"},{"lineNumber":33,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":35,"author":{"gitId":"violinyap"},"content":"}"}],"authorContributionMap":{"violinyap":35}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"violinyap"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"violinyap"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"violinyap"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":5,"author":{"gitId":"violinyap"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"violinyap"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"violinyap"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":10,"author":{"gitId":"violinyap"},"content":"    public void setDone(boolean isDone){"},{"lineNumber":11,"author":{"gitId":"violinyap"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":12,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":14,"author":{"gitId":"violinyap"},"content":"    public String getDescription() {"},{"lineNumber":15,"author":{"gitId":"violinyap"},"content":"        return description;"},{"lineNumber":16,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":18,"author":{"gitId":"violinyap"},"content":"    public String formatData() {"},{"lineNumber":19,"author":{"gitId":"violinyap"},"content":"        int done;"},{"lineNumber":20,"author":{"gitId":"violinyap"},"content":"        if (isDone) {"},{"lineNumber":21,"author":{"gitId":"violinyap"},"content":"            done \u003d 1;"},{"lineNumber":22,"author":{"gitId":"violinyap"},"content":"        } else {"},{"lineNumber":23,"author":{"gitId":"violinyap"},"content":"            done \u003d 0;"},{"lineNumber":24,"author":{"gitId":"violinyap"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"violinyap"},"content":"        return  \" | \" + done + \" | \" + description;"},{"lineNumber":26,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":28,"author":{"gitId":"violinyap"},"content":"}"}],"authorContributionMap":{"violinyap":28}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"violinyap"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"violinyap"},"content":"    public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"violinyap"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":6,"author":{"gitId":"violinyap"},"content":"    public void setDone(boolean isDone){"},{"lineNumber":7,"author":{"gitId":"violinyap"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":8,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":10,"author":{"gitId":"violinyap"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"violinyap"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"violinyap"},"content":"        return \"[T] [\"+ (this.isDone ? \"X\" : \" \") + \"] \""},{"lineNumber":13,"author":{"gitId":"violinyap"},"content":"                + this.getDescription() ;"},{"lineNumber":14,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":16,"author":{"gitId":"violinyap"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"violinyap"},"content":"    public String formatData() {"},{"lineNumber":18,"author":{"gitId":"violinyap"},"content":"        int done;"},{"lineNumber":19,"author":{"gitId":"violinyap"},"content":"        if (isDone) {"},{"lineNumber":20,"author":{"gitId":"violinyap"},"content":"            done \u003d 1;"},{"lineNumber":21,"author":{"gitId":"violinyap"},"content":"        } else {"},{"lineNumber":22,"author":{"gitId":"violinyap"},"content":"            done \u003d 0;"},{"lineNumber":23,"author":{"gitId":"violinyap"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"violinyap"},"content":"        return \"T\" + \" | \" + done + \" | \" + description;"},{"lineNumber":25,"author":{"gitId":"violinyap"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"violinyap"},"content":""},{"lineNumber":27,"author":{"gitId":"violinyap"},"content":"}"}],"authorContributionMap":{"violinyap":27}}]
