[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"jonahtwl":9,"-":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"    private static final int MAX_ARRAY_LENGTH \u003d 100;"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"    private static int taskLength \u003d 0;"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"    private static boolean shouldLoop \u003d true;"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"    private static String input;"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"    private static String logo"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"            \u003d \"******************************************************\\n\""},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"            + \"*                 Systems: [Online]                  *\\n\""},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"            + \"*                Protocol: [Dominion]                *\\n\""},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"            + \"*                    Race: [Terran]                  *\\n\""},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"            + \"******************************************************\\n\";"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"    private static String greeting"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"            \u003d \"______________________________________________________\\n\""},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"            + \"Systems Accessed...\\n\""},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"            + \"Decrypting Overwrite...\\n\""},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"            + \"Welcome Commander, can I be of assistance, commander?\\n\""},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"            + \"______________________________________________________\\n\";"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"    private static String goodbye"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"            \u003d \"______________________________________________________\\n\""},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"            + \"Good Bye Commander.\\n\""},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"            + \"______________________________________________________\\n\";"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"        // UI Initialization"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(logo);"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(greeting);"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"        Task task \u003d new Task();"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"        Task[] mission \u003d new Task[MAX_ARRAY_LENGTH];"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"        while (shouldLoop){"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"            input \u003d in.nextLine();"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"            switch (input.toUpperCase()) {   // Force words to Upper to compare"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"            case \"BYE\":"},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"                shouldLoop \u003d false;"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"                break;"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"            case \"LIST\":"},{"lineNumber":46,"author":{"gitId":"jonahtwl"},"content":"                task.printList(mission, taskLength);"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"                break;"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"            default:"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"                String[] inputArray \u003d input.split(\" \");"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"                if (inputArray[0].equalsIgnoreCase(\"done\")) {"},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":"                    String taskDone \u003d task.markDone(mission, inputArray[1], taskLength);"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"                    String markDoneTemplate \u003d \"______________________________________________________\\n\""},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"                            + \"[Mission Completed] \" + taskDone + \"\\n\""},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"                            + \"______________________________________________________\\n\";"},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"                    System.out.println(markDoneTemplate);"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"                } else { // All other inputs aside from keywords"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"                    mission[taskLength] \u003d new Task();"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"                    mission[taskLength].addList(input);"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"                    String echo \u003d \"______________________________________________________\\n\""},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"                            + \"[Orders received] \" + input + \"\\n\""},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"                            + \"______________________________________________________\\n\";"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"                    System.out.println(echo);"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"                    taskLength++;"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":"                break;"},{"lineNumber":66,"author":{"gitId":"jonahtwl"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(goodbye);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jonahtwl":66,"-":4}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"    private String description;"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"    private boolean isDone;"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"    private static String tasksTemplate"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"            \u003d \"******************************************************\\n\""},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"            + \"*                                                    *\\n\""},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"            + \"*          [Objectives]-[Missions]-[Tasks]           *\\n\""},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"            + \"*                                                    *\\n\""},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"            + \"******************************************************\\n\""},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"            + \"\\n\""},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"            + \"[Status] [S/N]\\n\";"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"    public Task(){"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"        description \u003d null;"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"        isDone \u003d false;"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"    public void addList(String description) {"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"        this.description \u003d description;"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"        this.isDone \u003d false;"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"    public static String getStatusIcon(Task[] listArray, int i) {"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"        return (listArray[i].isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"    public static void printList(Task[] listArray, int listIndex){"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(tasksTemplate);"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"        for (int i \u003d 0; i \u003c listIndex; i++) {"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"            System.out.println(\"[  \" + getStatusIcon(listArray, i) + \"  ]\""},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"                    + \" [ \" + (i+1) + \" ] \" // i+1 to make it user readable"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"                    + listArray[i].description);"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(); // For a neater UI"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"    public static String markDone(Task[] tasksArray, String serialNumber, int taskLength) {"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"        int taskIndex \u003d serialNumberCheck(serialNumber, taskLength);"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"        if (taskIndex \u003e\u003d 0) {"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"            tasksArray[taskIndex].isDone \u003d true;"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"            return tasksArray[taskIndex].description;"},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"        } else {"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"            // No item in list to return"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"            return null;"},{"lineNumber":46,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"    private static int serialNumberCheck(String serialNumber, int taskLength) {"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":"            int taskIndex \u003d Integer.parseInt(serialNumber);"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"            taskIndex--; // Users will key in +1 of index due to S/N"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"            if (taskIndex \u003c taskLength \u0026\u0026 taskLength !\u003d 0) {"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"                return taskIndex;"},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"            } else {"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"                System.out.println(\"Index out of bound\");"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"                return -1;"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"            return -1;"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"}"}],"authorContributionMap":{"jonahtwl":63}}]
