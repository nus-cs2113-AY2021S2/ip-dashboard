[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import duke.commands.CommandHandler;"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import duke.exception.IllegalTaskCommandException;"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import duke.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"     * Starts the Task Manager program."},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"     * Runs an infinite loop until \"BYE\" is called."},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"    private static void runTaskManager() throws IOException {"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"        String userInput;"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"        String command;"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"        do {"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"            userInput \u003d in.nextLine();"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"            command \u003d Parser.getCommand(userInput);"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"            CommandHandler.executeCommand(command, userInput);"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"        } while (!command.equals(\"BYE\"));"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    public static void main(String[] args) throws IllegalTaskCommandException, IOException {"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"        Storage.loadTasks();"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"        Ui.initialiseWelcomeMessage();"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"        runTaskManager();"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jonahtwl":33,"-":2}},{"path":"src/main/java/duke/commands/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import duke.exception.IllegalTaskCommandException;"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import duke.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import duke.task.*;"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"public class CommandHandler {"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"    public static void executeCommand(String command, String userInput) throws IOException {"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"            int index;"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"            switch (command) {"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"            case \"TODO\":"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"                index \u003d executeTodo(userInput);"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"                Ui.echoInput(index);"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"                break;"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"            case \"EVENT\":"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"                index \u003d executeEvent(userInput);"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"                Ui.echoInput(index);"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"                break;"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"            case \"DEADLINE\":"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"                index \u003d executeDeadline(userInput);"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"                Ui.echoInput(index);"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"                break;"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"            case \"LIST\":"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"                TaskList.printList();"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"                break;"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"            case \"DONE\":"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"                index \u003d executeMarkDone(userInput);"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"                Ui.printMarkDonePrompt(index);"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"                break;"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"            case \"BYE\":"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"                Ui.printGoodbyeMessage();"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"                break;"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"            case \"DELETE\":"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"                executeDelete(userInput);"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"                break;"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"            case \"SEARCH\":"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"                executeSearch(userInput);"},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"                break;"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"            default:"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"                throw new IllegalTaskCommandException(\"Unacceptable Command!\");"},{"lineNumber":46,"author":{"gitId":"jonahtwl"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"        } catch (IllegalTaskCommandException e) {"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"            Ui.printErrorLogo();"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"        Storage.saveTasks();"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"    private static void executeSearch(String userInput) throws IllegalTaskCommandException {"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"        String keyWord \u003d Parser.getSubstring(userInput);"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"        TaskList.searchWord(keyWord);"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"    public static void executeDelete(String userInput) throws IllegalTaskCommandException {"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"        String errand;"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"        errand \u003d Parser.getSubstring(userInput);"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"        int index \u003d Validator.validateIndex(errand);"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"        if (index \u003d\u003d -1) {"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":"            throw new IllegalTaskCommandException(\"There is no such task, Commander!\");"},{"lineNumber":66,"author":{"gitId":"jonahtwl"},"content":"        } else if (index \u003d\u003d -2) {"},{"lineNumber":67,"author":{"gitId":"jonahtwl"},"content":"            throw new IllegalTaskCommandException(\"Only numbers are allowed commander!\");"},{"lineNumber":68,"author":{"gitId":"jonahtwl"},"content":"        } else {"},{"lineNumber":69,"author":{"gitId":"jonahtwl"},"content":"            TaskList.deleteTask(index);"},{"lineNumber":70,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":73,"author":{"gitId":"jonahtwl"},"content":"    public static int executeMarkDone(String userInput) throws IllegalTaskCommandException {"},{"lineNumber":74,"author":{"gitId":"jonahtwl"},"content":"        String errand;"},{"lineNumber":75,"author":{"gitId":"jonahtwl"},"content":"        errand \u003d Parser.getSubstring(userInput);"},{"lineNumber":76,"author":{"gitId":"jonahtwl"},"content":"        int index \u003d Validator.validateIndex(errand);"},{"lineNumber":77,"author":{"gitId":"jonahtwl"},"content":"        if (index \u003d\u003d -1) {"},{"lineNumber":78,"author":{"gitId":"jonahtwl"},"content":"            throw new IllegalTaskCommandException(\"There is no such task, Commander!\");"},{"lineNumber":79,"author":{"gitId":"jonahtwl"},"content":"        } else if (index \u003d\u003d -2) {"},{"lineNumber":80,"author":{"gitId":"jonahtwl"},"content":"            throw new IllegalTaskCommandException(\"Only numbers are allowed commander!\");"},{"lineNumber":81,"author":{"gitId":"jonahtwl"},"content":"        } else {"},{"lineNumber":82,"author":{"gitId":"jonahtwl"},"content":"            TaskList.markDone(index);"},{"lineNumber":83,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"jonahtwl"},"content":"        return index;"},{"lineNumber":85,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":87,"author":{"gitId":"jonahtwl"},"content":"    public static int executeDeadline(String userInput) throws IllegalTaskCommandException {"},{"lineNumber":88,"author":{"gitId":"jonahtwl"},"content":"        String errand \u003d Parser.getErrand(userInput);"},{"lineNumber":89,"author":{"gitId":"jonahtwl"},"content":"        String timestampHeader \u003d Parser.getTimestampHeader(userInput);"},{"lineNumber":90,"author":{"gitId":"jonahtwl"},"content":"        String timestamp \u003d Parser.getTimestamp(userInput);"},{"lineNumber":91,"author":{"gitId":"jonahtwl"},"content":"        Task deadline \u003d new Deadline(errand, timestamp, timestampHeader);"},{"lineNumber":92,"author":{"gitId":"jonahtwl"},"content":"        return TaskList.addToTaskList(deadline);"},{"lineNumber":93,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":95,"author":{"gitId":"jonahtwl"},"content":"    public static int executeEvent(String userInput) throws IllegalTaskCommandException {"},{"lineNumber":96,"author":{"gitId":"jonahtwl"},"content":"        String errand \u003d Parser.getErrand(userInput);"},{"lineNumber":97,"author":{"gitId":"jonahtwl"},"content":"        String timestampHeader \u003d Parser.getTimestampHeader(userInput);"},{"lineNumber":98,"author":{"gitId":"jonahtwl"},"content":"        String timestamp \u003d Parser.getTimestamp(userInput);"},{"lineNumber":99,"author":{"gitId":"jonahtwl"},"content":"        Task event \u003d new Event(errand, timestamp, timestampHeader);"},{"lineNumber":100,"author":{"gitId":"jonahtwl"},"content":"        return TaskList.addToTaskList(event);"},{"lineNumber":101,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":103,"author":{"gitId":"jonahtwl"},"content":"    public static int executeTodo(String userInput) throws IllegalTaskCommandException {"},{"lineNumber":104,"author":{"gitId":"jonahtwl"},"content":"        String errand \u003d Parser.getSubstring(userInput);"},{"lineNumber":105,"author":{"gitId":"jonahtwl"},"content":"        Task todo \u003d new Todo(errand);"},{"lineNumber":106,"author":{"gitId":"jonahtwl"},"content":"        return TaskList.addToTaskList(todo);"},{"lineNumber":107,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":109,"author":{"gitId":"jonahtwl"},"content":"    public static void executeLoadMarkDone(String[] fileInput) throws IllegalTaskCommandException {"},{"lineNumber":110,"author":{"gitId":"jonahtwl"},"content":"        if (fileInput[1].strip().equals(\"X\")) {"},{"lineNumber":111,"author":{"gitId":"jonahtwl"},"content":"            String doneCommand \u003d \"DONE \" + TaskList.returnTaskCount();"},{"lineNumber":112,"author":{"gitId":"jonahtwl"},"content":"            executeMarkDone(doneCommand);"},{"lineNumber":113,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"jonahtwl"},"content":"}"}],"authorContributionMap":{"jonahtwl":115}},{"path":"src/main/java/duke/exception/IllegalTaskCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"public class IllegalTaskCommandException extends Exception{"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"    public IllegalTaskCommandException(String message) {"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"        super(message);"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"}"}],"authorContributionMap":{"jonahtwl":8}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import duke.exception.IllegalTaskCommandException;"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import java.util.StringJoiner;"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"    public static String getCommand(String userInput) {"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"        String[] inputArray \u003d userInput.split(\" \");"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"        String command \u003d inputArray[0];"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"        return command.toUpperCase();"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"    public static String getSubstring(String userInput) throws IllegalTaskCommandException {"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"        String cleanUserInput \u003d userInput.strip(); // Removes any leading and trailing spaces"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"        int spacePosition \u003d cleanUserInput.indexOf(\" \");"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"        if (spacePosition \u003c 0) { // Is single command"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"            throw new IllegalTaskCommandException(\"Insufficient command parameters commander!\");"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"        return cleanUserInput.substring(spacePosition + 1);"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"    public static String getErrand(String userInput) throws IllegalTaskCommandException {"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"        String inputSubstring \u003d getSubstring(userInput);"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"        int slashPosition \u003d inputSubstring.indexOf(\"/\");"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"        if (slashPosition \u003c 0) {"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"            throw new IllegalTaskCommandException(\"Timestamp not found commander!\");"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"        String errand \u003d inputSubstring.substring(0, slashPosition);"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"        return errand.trim();"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"    public static String getTimestampHeader(String userInput) throws IllegalTaskCommandException {"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"        String inputSubstring \u003d getSubstring(userInput);"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"        int slashPosition \u003d inputSubstring.indexOf(\"/\");"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"        String timestampHeader \u003d inputSubstring.substring(slashPosition);"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"        int spacePosition \u003d timestampHeader.indexOf(\" \");"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"        if (timestampHeader.split(\" \").length \u003c 2) {"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"            throw new IllegalTaskCommandException(\"Missing timestamp commander!\");"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"        timestampHeader \u003d timestampHeader.substring(1, spacePosition);"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"        return timestampHeader;"},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"    public static String getTimestamp(String userInput) throws IllegalTaskCommandException {"},{"lineNumber":46,"author":{"gitId":"jonahtwl"},"content":"        String inputSubstring \u003d getSubstring(userInput);"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"        int slashPosition \u003d inputSubstring.indexOf(\"/\");"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"        String timestamp \u003d inputSubstring.substring(slashPosition);"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"        int spacePosition \u003d timestamp.indexOf(\" \");"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"        timestamp \u003d timestamp.substring(spacePosition);"},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":"        return timestamp.trim();"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"    public static String getLoadedCommand(String[] fileInput) {"},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"        StringJoiner commandString \u003d new StringJoiner(\" \");"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"        for (int i \u003d 0; i \u003c fileInput.length; i++) {"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"            if (i \u003d\u003d 1) {"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"                continue; // Skips the completion status"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"            commandString.add(fileInput[i].strip());"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"        return commandString.toString();"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"}"}],"authorContributionMap":{"jonahtwl":64}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import duke.commands.CommandHandler;"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import duke.exception.IllegalTaskCommandException;"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import duke.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"import java.io.File;"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"    private static final String FILE_PATH \u003d \"Duke_Tasks.txt\";"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"    public static void saveTasks() throws IOException {"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"        File file \u003d new File(FILE_PATH);"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"        FileWriter writer \u003d new FileWriter(file);"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"        writer.write(TaskList.convertToFileInput());"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"        writer.close();"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"    public static void loadTasks() throws IOException, IllegalTaskCommandException {"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"        File file \u003d new File(FILE_PATH);"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"        if (file.exists()) {"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"            Scanner scanner \u003d new Scanner(file);"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"            while (scanner.hasNext()) {"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"                String[] fileInput \u003d scanner.nextLine().split(\",\");"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"                String loadedCommand \u003d Parser.getLoadedCommand(fileInput);"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"                switch (fileInput[0].strip()) {"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"                case \"T\":"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"                    CommandHandler.executeTodo(loadedCommand);"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"                    CommandHandler.executeLoadMarkDone(fileInput);"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"                    break;"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"                case \"D\":"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"                    CommandHandler.executeDeadline(loadedCommand);"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"                    CommandHandler.executeLoadMarkDone(fileInput);"},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"                    break;"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"                case \"E\":"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"                    CommandHandler.executeEvent(loadedCommand);"},{"lineNumber":46,"author":{"gitId":"jonahtwl"},"content":"                    CommandHandler.executeLoadMarkDone(fileInput);"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"                    break;"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"                }"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"            Ui.printSuccessfulLoad();"},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":"        } else {"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"            Ui.printUnsuccessfulLoad();"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"            initSaveFile();"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"    private static void initSaveFile() throws IOException {"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"        File newFile \u003d new File(FILE_PATH);"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"        if (newFile.createNewFile()) {"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"            Ui.printSuccessfulCreation();"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"        } else {"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"            Ui.printUnsuccessfulCreation();"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"            System.exit(-1);"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"jonahtwl"},"content":"}"}],"authorContributionMap":{"jonahtwl":66}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"    private static final String DEADLINE_TYPE \u003d \"D\";"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"    private String timestamp;"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"    private String timestampHeader;"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"    public Deadline(String errand, String timestamp, String timestampHeader) {"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"        super(errand);"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"        this.timestamp \u003d timestamp;"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"        this.timestampHeader \u003d timestampHeader;"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"    public String getTaskType() {"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"        return DEADLINE_TYPE;"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"    public String getTaskItem() {"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"        return this.description + \" (\" + this.timestampHeader + \": \" + this.timestamp + \")\";"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"    public String getFileFormat() {"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"        return this.description + \" /\" + this.timestampHeader + \" \" + this.timestamp;"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"}"}],"authorContributionMap":{"jonahtwl":28}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"    private static final String EVENT_TYPE \u003d \"E\";"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"    private String timestamp;"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"    private String timestampHeader;"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"    public Event (String errand, String timestamp, String timestampHeader) {"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"        super(errand);"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"        this.timestamp \u003d timestamp;"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"        this.timestampHeader \u003d timestampHeader;"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"    public String getTaskType() {"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"        return EVENT_TYPE;"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"    public String getTaskItem() {"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"        return this.description + \" (\" + this.timestampHeader + \": \" + this.timestamp + \")\";"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"    public String getFileFormat() {"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"        return this.description + \" /\" + this.timestampHeader + \" \" + this.timestamp;"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"}"}],"authorContributionMap":{"jonahtwl":28}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"    public String getTaskType() {"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"        return null;"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"    public String getStatusIcon() {"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"        return (this.isDone ? \"X\" : \" \");"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"    public String getTaskItem() {"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"        return this.description;"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"    public String getFileFormat() {"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"        return this.description;"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"}"}],"authorContributionMap":{"jonahtwl":27}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import java.util.StringJoiner;"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"    protected static ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"    public static int returnTaskCount() {"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"        return taskArray.size();"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"    public static String returnTaskType(int index) {"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"        return taskArray.get(index).getTaskType();"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"    public static String returnTaskItem(int index) {"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"        return taskArray.get(index).getTaskItem();"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"    public static String returnStatusIcon(int index) {"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"        return taskArray.get(index).getStatusIcon();"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"    private static String returnFileFormat(int index) {"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"        return taskArray.get(index).getFileFormat();"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"    public static void printList() {"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"        Ui.printTaskHeader();"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"        for (Task t : taskArray) {"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"            int index \u003d taskArray.indexOf(t);"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"            Ui.printTaskIndex(index);"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"            Ui.printTaskItem(index);"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"    public static void markDone(int index) {"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"        taskArray.get(index).isDone \u003d true;"},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"    public static void deleteTask(int index) {"},{"lineNumber":46,"author":{"gitId":"jonahtwl"},"content":"        Ui.printDeletePrompt(index);"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"        taskArray.remove(index);"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"    public static int addToTaskList(Task task) {"},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":"        taskArray.add(task);"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"        return taskArray.indexOf(task);"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"    public static String convertToFileInput() {"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"        StringJoiner string \u003d new StringJoiner(\"\\n\");"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"        for (Task t : taskArray) {"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"            int index \u003d taskArray.indexOf(t);"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"            string.add(getFileInput(index));"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"        return string.toString();"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":66,"author":{"gitId":"jonahtwl"},"content":"    private static String getFileInput(int index) {"},{"lineNumber":67,"author":{"gitId":"jonahtwl"},"content":"        return returnTaskType(index) + \" , \" + returnStatusIcon(index) + \" , \" + returnFileFormat(index);"},{"lineNumber":68,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":70,"author":{"gitId":"jonahtwl"},"content":"    public static void searchWord(String keyWord) {"},{"lineNumber":71,"author":{"gitId":"jonahtwl"},"content":"        boolean isFound \u003d false;"},{"lineNumber":72,"author":{"gitId":"jonahtwl"},"content":"        Ui.printSearchHeader();"},{"lineNumber":73,"author":{"gitId":"jonahtwl"},"content":"        for (Task t : taskArray) {"},{"lineNumber":74,"author":{"gitId":"jonahtwl"},"content":"            String currentDescription \u003d t.getTaskItem().toUpperCase();"},{"lineNumber":75,"author":{"gitId":"jonahtwl"},"content":"            if (currentDescription.contains(keyWord.toUpperCase())) {"},{"lineNumber":76,"author":{"gitId":"jonahtwl"},"content":"                isFound \u003d true;"},{"lineNumber":77,"author":{"gitId":"jonahtwl"},"content":"                printSearchedTasks(t);"},{"lineNumber":78,"author":{"gitId":"jonahtwl"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"jonahtwl"},"content":"        if (!isFound) {"},{"lineNumber":81,"author":{"gitId":"jonahtwl"},"content":"            Ui.printNullSearch();"},{"lineNumber":82,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":85,"author":{"gitId":"jonahtwl"},"content":"    private static void printSearchedTasks(Task t) {"},{"lineNumber":86,"author":{"gitId":"jonahtwl"},"content":"        int index \u003d taskArray.indexOf(t);"},{"lineNumber":87,"author":{"gitId":"jonahtwl"},"content":"        System.out.print(\"[\" + (index + 1) + \"]\");"},{"lineNumber":88,"author":{"gitId":"jonahtwl"},"content":"        Ui.printTaskItem(index);"},{"lineNumber":89,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();"},{"lineNumber":90,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"jonahtwl"},"content":"}"}],"authorContributionMap":{"jonahtwl":91}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"    private static final String TODO_TYPE \u003d \"T\";"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"    public Todo (String errand) {"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"        super(errand);"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"    public String getTaskType() {"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"        return TODO_TYPE;"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"}"}],"authorContributionMap":{"jonahtwl":14}},{"path":"src/main/java/duke/task/Validator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"public class Validator {"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"    public static int validateIndex(String index) {"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"        int indexOfTask \u003d -1;"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"        try {"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"            indexOfTask \u003d Integer.parseInt(index) - 1;"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"            if (indexOfTask \u003c 0 || TaskList.taskArray.size() \u003d\u003d 0) {"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"                return -1;"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"            } else if (indexOfTask \u003e\u003d TaskList.taskArray.size()) {"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"                return -1;"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"            }"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"            return -2;"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"        return indexOfTask;"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"}"}],"authorContributionMap":{"jonahtwl":20}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"    public static void printSuccessfulLoad() {"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"        String loaded \u003d \"******************************************************\\n\""},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"                + \"*       Archive Successfully Loaded, Commander!      *\\n\""},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"                + \"******************************************************\\n\";"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(loaded);"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"    public static void printUnsuccessfulLoad() {"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"        String notLoaded \u003d \"******************************************************\\n\""},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"                + \"*Archive not found commander. Starting new archive...*\\n\""},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"                + \"******************************************************\\n\";"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(notLoaded);"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"    public static void printUnsuccessfulCreation() {"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"        String failedCreation \u003d \"******************************************************\\n\""},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"                + \"*     Archive creation was corrupted! Aborting...    *\\n\""},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"                + \"******************************************************\\n\";"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(failedCreation);"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    public static void printSuccessfulCreation() {"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"        String successCreation \u003d \"******************************************************\\n\""},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"                + \"*      Archive successfully created, Commander!      *\\n\""},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"                + \"******************************************************\\n\";"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(successCreation);"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"    public static void initialiseWelcomeMessage() {"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"        String logo"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"                \u003d \"******************************************************\\n\""},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"                + \"*                 Systems: [Online]                  *\\n\""},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"                + \"*                Protocol: [Dominion]                *\\n\""},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"                + \"*                    Race: [Terran]                  *\\n\""},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"                + \"******************************************************\\n\";"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":46,"author":{"gitId":"jonahtwl"},"content":"        String greeting"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"                \u003d \"______________________________________________________\\n\""},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"                + \"Systems Accessed...\\n\""},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"                + \"Decrypting Overwrite...\\n\""},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"                + \"Welcome Commander, can I be of assistance, commander?\\n\""},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":"                + \"______________________________________________________\\n\";"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(logo);"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(greeting);"},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"    public static void printGoodbyeMessage() {"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"        String goodbye"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"                \u003d \"______________________________________________________\\n\""},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"                + \"Good Bye Commander.\\n\""},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"                + \"______________________________________________________\\n\";"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(goodbye);"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":66,"author":{"gitId":"jonahtwl"},"content":"    public static void printErrorLogo() {"},{"lineNumber":67,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(\"*****\\n* ! *\\n*****\");"},{"lineNumber":68,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":70,"author":{"gitId":"jonahtwl"},"content":"    public static void printTaskHeader() {"},{"lineNumber":71,"author":{"gitId":"jonahtwl"},"content":"        String tasksTemplate"},{"lineNumber":72,"author":{"gitId":"jonahtwl"},"content":"                \u003d \"******************************************************\\n\""},{"lineNumber":73,"author":{"gitId":"jonahtwl"},"content":"                + \"*                                                    *\\n\""},{"lineNumber":74,"author":{"gitId":"jonahtwl"},"content":"                + \"*          [Objectives]-[Missions]-[Tasks]           *\\n\""},{"lineNumber":75,"author":{"gitId":"jonahtwl"},"content":"                + \"*                                                    *\\n\""},{"lineNumber":76,"author":{"gitId":"jonahtwl"},"content":"                + \"******************************************************\";"},{"lineNumber":77,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(tasksTemplate);"},{"lineNumber":78,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":80,"author":{"gitId":"jonahtwl"},"content":"    public static void echoInput(int index) {"},{"lineNumber":81,"author":{"gitId":"jonahtwl"},"content":"        String echoTop \u003d \"______________________________________________________\\n\""},{"lineNumber":82,"author":{"gitId":"jonahtwl"},"content":"                + \"[Orders received]:\\n\";"},{"lineNumber":83,"author":{"gitId":"jonahtwl"},"content":"        String echoBottom \u003d \"______________________________________________________\\n\";"},{"lineNumber":84,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":85,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(echoTop);"},{"lineNumber":86,"author":{"gitId":"jonahtwl"},"content":"        printTaskItem(index);"},{"lineNumber":87,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();"},{"lineNumber":88,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(\"There are now \" + TaskList.returnTaskCount() + \" mission objective(s), Commander.\");"},{"lineNumber":89,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(echoBottom);"},{"lineNumber":90,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":92,"author":{"gitId":"jonahtwl"},"content":"    public static void printMarkDonePrompt(int index) {"},{"lineNumber":93,"author":{"gitId":"jonahtwl"},"content":"        String doneTextTop \u003d \"______________________________________________________\\n\""},{"lineNumber":94,"author":{"gitId":"jonahtwl"},"content":"                + \"[Objective Completed]:\\n\";"},{"lineNumber":95,"author":{"gitId":"jonahtwl"},"content":"        String doneTextBottom \u003d \"______________________________________________________\\n\";"},{"lineNumber":96,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":97,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(doneTextTop);"},{"lineNumber":98,"author":{"gitId":"jonahtwl"},"content":"        printTaskItem(index);"},{"lineNumber":99,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(doneTextBottom);"},{"lineNumber":100,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":102,"author":{"gitId":"jonahtwl"},"content":"    public static void printTaskItem(int index) {"},{"lineNumber":103,"author":{"gitId":"jonahtwl"},"content":"        System.out.print(\"[\" + TaskList.returnTaskType(index) + \"]\");"},{"lineNumber":104,"author":{"gitId":"jonahtwl"},"content":"        printCompletionStatus(index);"},{"lineNumber":105,"author":{"gitId":"jonahtwl"},"content":"        System.out.print(\" \" + TaskList.returnTaskItem(index));"},{"lineNumber":106,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();"},{"lineNumber":107,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":109,"author":{"gitId":"jonahtwl"},"content":"    public static void printDeletePrompt(int taskIndex) {"},{"lineNumber":110,"author":{"gitId":"jonahtwl"},"content":"        String doneTextTop \u003d \"______________________________________________________\\n\""},{"lineNumber":111,"author":{"gitId":"jonahtwl"},"content":"                + \"[Objective Successfully Removed]:\\n\";"},{"lineNumber":112,"author":{"gitId":"jonahtwl"},"content":"        String doneTextBottom \u003d \"______________________________________________________\\n\";"},{"lineNumber":113,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":114,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(doneTextTop);"},{"lineNumber":115,"author":{"gitId":"jonahtwl"},"content":"        printTaskItem(taskIndex);"},{"lineNumber":116,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();"},{"lineNumber":117,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(\"There are now \" + (TaskList.returnTaskCount() - 1) + \" mission objective(s), Commander.\");"},{"lineNumber":118,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(doneTextBottom);"},{"lineNumber":119,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":121,"author":{"gitId":"jonahtwl"},"content":"    public static void printTaskIndex(int taskIndex) {"},{"lineNumber":122,"author":{"gitId":"jonahtwl"},"content":"        System.out.print(\"[\" + (taskIndex + 1) + \"]\");"},{"lineNumber":123,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":125,"author":{"gitId":"jonahtwl"},"content":"    public static void printCompletionStatus(int index) {"},{"lineNumber":126,"author":{"gitId":"jonahtwl"},"content":"        System.out.print(\"[\" + TaskList.returnStatusIcon(index) + \"]\");"},{"lineNumber":127,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":129,"author":{"gitId":"jonahtwl"},"content":"    public static void printSearchHeader() {"},{"lineNumber":130,"author":{"gitId":"jonahtwl"},"content":"        String searchHeader \u003d \"******************************************************\\n\""},{"lineNumber":131,"author":{"gitId":"jonahtwl"},"content":"                + \"*          Processing all objectives now...          *\\n\""},{"lineNumber":132,"author":{"gitId":"jonahtwl"},"content":"                + \"******************************************************\\n\";"},{"lineNumber":133,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":134,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(searchHeader);"},{"lineNumber":135,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":137,"author":{"gitId":"jonahtwl"},"content":"    public static void printNullSearch() {"},{"lineNumber":138,"author":{"gitId":"jonahtwl"},"content":"        printErrorLogo();"},{"lineNumber":139,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(\"No matching objectives found, Commander!\");"},{"lineNumber":140,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();"},{"lineNumber":141,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"jonahtwl"},"content":"}"}],"authorContributionMap":{"jonahtwl":142}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"list"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"done 0"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"done "},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"done -1"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"/todo Destroy Zagara\u0027s Base"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"todo Destroy Zagara\u0027s Base"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"todo "},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"deadline Find Arcterus Mengsk /"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"deadline Find Arcterus Mengsk /before"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"event Coronation of Mengsk on Korhol /at Year 2260 Month 5"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"deadline Find Sarah Kerrigan /before Year 2265"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"list"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"done 2"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"list"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"done 1"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"list"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"bye"}],"authorContributionMap":{"jonahtwl":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.txt"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"jonahtwl":2,"-":19}}]
