[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lowwilliam"},"content":"# Duke project create by Liu Ruiqian"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":27,"author":{"gitId":"lowwilliam"},"content":"### How to use it"},{"lineNumber":28,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":29,"author":{"gitId":"lowwilliam"},"content":"It has the function of save and read users activities including event activity, deadline activity and todo activity."},{"lineNumber":30,"author":{"gitId":"lowwilliam"},"content":"You can start by typing:"},{"lineNumber":31,"author":{"gitId":"lowwilliam"},"content":" 1. **list** to view **The list of activities**"},{"lineNumber":32,"author":{"gitId":"lowwilliam"},"content":" 2. **event xxx** to add **A new event**"},{"lineNumber":33,"author":{"gitId":"lowwilliam"},"content":" 3. **deadline xxx /by** to add **A new deadline**"},{"lineNumber":34,"author":{"gitId":"lowwilliam"},"content":" 4. **todo xxx /at** to add **A new todo**"},{"lineNumber":35,"author":{"gitId":"lowwilliam"},"content":" 5. **delete xxx** to delete **An activity**"},{"lineNumber":36,"author":{"gitId":"lowwilliam"},"content":" 6. **done xxx** to mark **One activity as done**"},{"lineNumber":37,"author":{"gitId":"lowwilliam"},"content":" 7. **bye** to end **The system**"},{"lineNumber":38,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":39,"author":{"gitId":"lowwilliam"},"content":"### Function Table"},{"lineNumber":40,"author":{"gitId":"lowwilliam"},"content":"| Syntax      | Description |"},{"lineNumber":41,"author":{"gitId":"lowwilliam"},"content":"| ----------- | ----------- |"},{"lineNumber":42,"author":{"gitId":"lowwilliam"},"content":"| list      | View list       |"},{"lineNumber":43,"author":{"gitId":"lowwilliam"},"content":"| event   | Add event        |"},{"lineNumber":44,"author":{"gitId":"lowwilliam"},"content":"| todo      | Add todo       |"},{"lineNumber":45,"author":{"gitId":"lowwilliam"},"content":"| deadline   | Add deadline        |"},{"lineNumber":46,"author":{"gitId":"lowwilliam"},"content":"| done      | Done Item      |"},{"lineNumber":47,"author":{"gitId":"lowwilliam"},"content":"| bye   | End system        |"},{"lineNumber":48,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":49,"author":{"gitId":"lowwilliam"},"content":"### Possible user journey"},{"lineNumber":50,"author":{"gitId":"lowwilliam"},"content":"```"},{"lineNumber":51,"author":{"gitId":"lowwilliam"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":52,"author":{"gitId":"lowwilliam"},"content":"Duke - Version 1.0"},{"lineNumber":53,"author":{"gitId":"lowwilliam"},"content":" ____        _        "},{"lineNumber":54,"author":{"gitId":"lowwilliam"},"content":"|  _ \\ _   _| | _____ "},{"lineNumber":55,"author":{"gitId":"lowwilliam"},"content":"| | | | | | | |/ / _ \\"},{"lineNumber":56,"author":{"gitId":"lowwilliam"},"content":"| |_| | |_| |   \u003c  __/"},{"lineNumber":57,"author":{"gitId":"lowwilliam"},"content":"|____/ \\__,_|_|\\_\\___|"},{"lineNumber":58,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":59,"author":{"gitId":"lowwilliam"},"content":"Hello! I\u0027m Duke"},{"lineNumber":60,"author":{"gitId":"lowwilliam"},"content":"What can I do for you?"},{"lineNumber":61,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":62,"author":{"gitId":"lowwilliam"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":63,"author":{"gitId":"lowwilliam"},"content":"Enter command: list"},{"lineNumber":64,"author":{"gitId":"lowwilliam"},"content":"[Command entered:list]"},{"lineNumber":65,"author":{"gitId":"lowwilliam"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":66,"author":{"gitId":"lowwilliam"},"content":" 1: [deadline][done] return book (by: Sunday)"},{"lineNumber":67,"author":{"gitId":"lowwilliam"},"content":" 2: [event][done] project meeting (at: Mon 2-4pm)"},{"lineNumber":68,"author":{"gitId":"lowwilliam"},"content":" 3: [todo][done] run book (by: Sunday)"},{"lineNumber":69,"author":{"gitId":"lowwilliam"},"content":"Enter command: event finish breakfast /at Mon"},{"lineNumber":70,"author":{"gitId":"lowwilliam"},"content":"[Command entered:event finish breakfast /at Mon]"},{"lineNumber":71,"author":{"gitId":"lowwilliam"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":72,"author":{"gitId":"lowwilliam"},"content":"Enter command: list"},{"lineNumber":73,"author":{"gitId":"lowwilliam"},"content":"[Command entered:list]"},{"lineNumber":74,"author":{"gitId":"lowwilliam"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":75,"author":{"gitId":"lowwilliam"},"content":" 1: [deadline][done] return book (by: Sunday)"},{"lineNumber":76,"author":{"gitId":"lowwilliam"},"content":" 2: [event][done] project meeting (at: Mon 2-4pm)"},{"lineNumber":77,"author":{"gitId":"lowwilliam"},"content":" 3: [todo][done] run book (by: Sunday)"},{"lineNumber":78,"author":{"gitId":"lowwilliam"},"content":" 4: [event][undo] finish breakfast (at: Mon)"},{"lineNumber":79,"author":{"gitId":"lowwilliam"},"content":"Enter command: done 4"},{"lineNumber":80,"author":{"gitId":"lowwilliam"},"content":"[Command entered:done 4]"},{"lineNumber":81,"author":{"gitId":"lowwilliam"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":82,"author":{"gitId":"lowwilliam"},"content":"Enter command: list"},{"lineNumber":83,"author":{"gitId":"lowwilliam"},"content":"[Command entered:list]"},{"lineNumber":84,"author":{"gitId":"lowwilliam"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":85,"author":{"gitId":"lowwilliam"},"content":" 1: [deadline][done] return book (by: Sunday)"},{"lineNumber":86,"author":{"gitId":"lowwilliam"},"content":" 2: [event][done] project meeting (at: Mon 2-4pm)"},{"lineNumber":87,"author":{"gitId":"lowwilliam"},"content":" 3: [todo][done] run book (by: Sunday)"},{"lineNumber":88,"author":{"gitId":"lowwilliam"},"content":" 4: [event][done] finish breakfast (at: Mon)"},{"lineNumber":89,"author":{"gitId":"lowwilliam"},"content":"Enter command: delete 3"},{"lineNumber":90,"author":{"gitId":"lowwilliam"},"content":"[Command entered:delete 3]"},{"lineNumber":91,"author":{"gitId":"lowwilliam"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":92,"author":{"gitId":"lowwilliam"},"content":"Enter command: find book"},{"lineNumber":93,"author":{"gitId":"lowwilliam"},"content":"[Command entered:find book]"},{"lineNumber":94,"author":{"gitId":"lowwilliam"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":95,"author":{"gitId":"lowwilliam"},"content":"[deadline][done] return book (by: Sunday)"},{"lineNumber":96,"author":{"gitId":"lowwilliam"},"content":"Enter command: bye"},{"lineNumber":97,"author":{"gitId":"lowwilliam"},"content":"[Command entered:bye]"},{"lineNumber":98,"author":{"gitId":"lowwilliam"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":99,"author":{"gitId":"lowwilliam"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":100,"author":{"gitId":"lowwilliam"},"content":"```"},{"lineNumber":101,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":102,"author":{"gitId":"lowwilliam"},"content":"If you need more instruction, feel free to contact Ruiqian @ 2595903341@qq.com"},{"lineNumber":103,"author":{"gitId":"lowwilliam"},"content":"Thanks"},{"lineNumber":104,"author":{"gitId":"lowwilliam"},"content":""}],"authorContributionMap":{"lowwilliam":79,"-":25}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowwilliam"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":3,"author":{"gitId":"lowwilliam"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"lowwilliam"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"lowwilliam"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"lowwilliam"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"lowwilliam"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"lowwilliam"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"lowwilliam"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"lowwilliam"},"content":"import Duke.Task.*;"},{"lineNumber":11,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":12,"author":{"gitId":"lowwilliam"},"content":"public class Duke {"},{"lineNumber":13,"author":{"gitId":"lowwilliam"},"content":"    private static final String VERSION \u003d \"Duke - Version 1.0\";"},{"lineNumber":14,"author":{"gitId":"lowwilliam"},"content":"    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"},{"lineNumber":15,"author":{"gitId":"lowwilliam"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":16,"author":{"gitId":"lowwilliam"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\" + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":17,"author":{"gitId":"lowwilliam"},"content":"    private static final String GREETING \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\";"},{"lineNumber":18,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":19,"author":{"gitId":"lowwilliam"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);"},{"lineNumber":20,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":21,"author":{"gitId":"lowwilliam"},"content":"    private static final char INPUT_COMMENT_MARKER \u003d \u0027#\u0027;"},{"lineNumber":22,"author":{"gitId":"lowwilliam"},"content":"    private static final String COMMAND_TODO_WORD \u003d \"todo\";"},{"lineNumber":23,"author":{"gitId":"lowwilliam"},"content":"    private static final String COMMAND_EVENT_WORD \u003d \"event\";"},{"lineNumber":24,"author":{"gitId":"lowwilliam"},"content":"    private static final String COMMAND_DEADLINE_WORD \u003d \"deadline\";"},{"lineNumber":25,"author":{"gitId":"lowwilliam"},"content":"    private static final String COMMAND_DONE_WORD \u003d \"done\";"},{"lineNumber":26,"author":{"gitId":"lowwilliam"},"content":"    private static final String COMMAND_LIST_WORD \u003d \"list\";"},{"lineNumber":27,"author":{"gitId":"lowwilliam"},"content":"    private static final String COMMAND_END_WORD \u003d \"bye\";"},{"lineNumber":28,"author":{"gitId":"lowwilliam"},"content":"    private static final String COMMAND_DELETE_WORD \u003d \"delete\";"},{"lineNumber":29,"author":{"gitId":"lowwilliam"},"content":"    private static final String BYE \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":30,"author":{"gitId":"lowwilliam"},"content":"    private static final String ERROR_MESSAGE \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"},{"lineNumber":31,"author":{"gitId":"lowwilliam"},"content":"    private static final String FILE_LOCATION \u003d \"src/main/java/Duke/Duke.txt\";"},{"lineNumber":32,"author":{"gitId":"lowwilliam"},"content":"    private static final String COMMAND_FIND_WORD \u003d \"find\";"},{"lineNumber":33,"author":{"gitId":"lowwilliam"},"content":"    private static int count;"},{"lineNumber":34,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":35,"author":{"gitId":"lowwilliam"},"content":"    public static List\u003cTask\u003e lists \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":36,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":37,"author":{"gitId":"lowwilliam"},"content":"    public static void main(String[] args) {"},{"lineNumber":38,"author":{"gitId":"lowwilliam"},"content":"        showWelcomeMessage();"},{"lineNumber":39,"author":{"gitId":"lowwilliam"},"content":"        readFile(lists);"},{"lineNumber":40,"author":{"gitId":"lowwilliam"},"content":"        showWelcomeMessage();"},{"lineNumber":41,"author":{"gitId":"lowwilliam"},"content":"        while (true) {"},{"lineNumber":42,"author":{"gitId":"lowwilliam"},"content":"            String userCommand \u003d getUserInput();"},{"lineNumber":43,"author":{"gitId":"lowwilliam"},"content":"            echoUserCommand(userCommand);"},{"lineNumber":44,"author":{"gitId":"lowwilliam"},"content":"            int returnValue \u003d executeCommand(userCommand);"},{"lineNumber":45,"author":{"gitId":"lowwilliam"},"content":"            if (returnValue \u003d\u003d 0)"},{"lineNumber":46,"author":{"gitId":"lowwilliam"},"content":"                break;"},{"lineNumber":47,"author":{"gitId":"lowwilliam"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":50,"author":{"gitId":"lowwilliam"},"content":"    /** Before running the system, read the file which contains the information which user type inside before */"},{"lineNumber":51,"author":{"gitId":"lowwilliam"},"content":"    private static void readFile(List\u003cTask\u003e lists){"},{"lineNumber":52,"author":{"gitId":"lowwilliam"},"content":"        try {"},{"lineNumber":53,"author":{"gitId":"lowwilliam"},"content":"            File file \u003d new File(FILE_LOCATION);"},{"lineNumber":54,"author":{"gitId":"lowwilliam"},"content":"            if (file.createNewFile()) {"},{"lineNumber":55,"author":{"gitId":"lowwilliam"},"content":"                System.out.println(\"A new file has been created!\");"},{"lineNumber":56,"author":{"gitId":"lowwilliam"},"content":"            } else {"},{"lineNumber":57,"author":{"gitId":"lowwilliam"},"content":"                System.out.println(\"Reading saved Task Lists!\");"},{"lineNumber":58,"author":{"gitId":"lowwilliam"},"content":"                Scanner readingFile \u003d new Scanner(file);"},{"lineNumber":59,"author":{"gitId":"lowwilliam"},"content":"                while (readingFile.hasNextLine()) {"},{"lineNumber":60,"author":{"gitId":"lowwilliam"},"content":"                    String line \u003d readingFile.nextLine();"},{"lineNumber":61,"author":{"gitId":"lowwilliam"},"content":"                    String[] parts \u003d line.split(\"-\", 3);"},{"lineNumber":62,"author":{"gitId":"lowwilliam"},"content":"                    String type \u003d parts[0];"},{"lineNumber":63,"author":{"gitId":"lowwilliam"},"content":"                    String isDone \u003d parts[1];"},{"lineNumber":64,"author":{"gitId":"lowwilliam"},"content":"                    String task \u003d parts[2];"},{"lineNumber":65,"author":{"gitId":"lowwilliam"},"content":"                    if (type.equals(COMMAND_EVENT_WORD)) {"},{"lineNumber":66,"author":{"gitId":"lowwilliam"},"content":"                        Task taskInFile \u003d new EventTask(task);"},{"lineNumber":67,"author":{"gitId":"lowwilliam"},"content":"                        lists.add(taskInFile);"},{"lineNumber":68,"author":{"gitId":"lowwilliam"},"content":"                        showToUser(taskInFile.toString());"},{"lineNumber":69,"author":{"gitId":"lowwilliam"},"content":"                        if (isDone.equals(\"true\")) {"},{"lineNumber":70,"author":{"gitId":"lowwilliam"},"content":"                            taskInFile.markAsDone();"},{"lineNumber":71,"author":{"gitId":"lowwilliam"},"content":"                        }"},{"lineNumber":72,"author":{"gitId":"lowwilliam"},"content":"                    }else if (type.equals(COMMAND_DEADLINE_WORD)) {"},{"lineNumber":73,"author":{"gitId":"lowwilliam"},"content":"                        Task taskInFile \u003d new DeadlineTask(task);"},{"lineNumber":74,"author":{"gitId":"lowwilliam"},"content":"                        lists.add(taskInFile);"},{"lineNumber":75,"author":{"gitId":"lowwilliam"},"content":"                        showToUser(taskInFile.toString());"},{"lineNumber":76,"author":{"gitId":"lowwilliam"},"content":"                        if (isDone.equals(\"true\")) {"},{"lineNumber":77,"author":{"gitId":"lowwilliam"},"content":"                            taskInFile.markAsDone();"},{"lineNumber":78,"author":{"gitId":"lowwilliam"},"content":"                        }"},{"lineNumber":79,"author":{"gitId":"lowwilliam"},"content":"                    }else if (type.equals(COMMAND_TODO_WORD)) {"},{"lineNumber":80,"author":{"gitId":"lowwilliam"},"content":"                        Task taskInFile \u003d new TodoTask(task);"},{"lineNumber":81,"author":{"gitId":"lowwilliam"},"content":"                        lists.add(taskInFile);"},{"lineNumber":82,"author":{"gitId":"lowwilliam"},"content":"                        showToUser(taskInFile.toString());"},{"lineNumber":83,"author":{"gitId":"lowwilliam"},"content":"                        if (isDone.equals(\"true\")) {"},{"lineNumber":84,"author":{"gitId":"lowwilliam"},"content":"                            taskInFile.markAsDone();"},{"lineNumber":85,"author":{"gitId":"lowwilliam"},"content":"                        }"},{"lineNumber":86,"author":{"gitId":"lowwilliam"},"content":"                    }"},{"lineNumber":87,"author":{"gitId":"lowwilliam"},"content":"                    count++;"},{"lineNumber":88,"author":{"gitId":"lowwilliam"},"content":"                }"},{"lineNumber":89,"author":{"gitId":"lowwilliam"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"lowwilliam"},"content":"    } catch (IOException e) {"},{"lineNumber":91,"author":{"gitId":"lowwilliam"},"content":"            e.printStackTrace();"},{"lineNumber":92,"author":{"gitId":"lowwilliam"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":95,"author":{"gitId":"lowwilliam"},"content":"    /** Before ened the system, write all thelist information inside the file*/"},{"lineNumber":96,"author":{"gitId":"lowwilliam"},"content":"    private static void writeFile(List\u003cTask\u003e lists) {"},{"lineNumber":97,"author":{"gitId":"lowwilliam"},"content":"        try {"},{"lineNumber":98,"author":{"gitId":"lowwilliam"},"content":"            FileWriter writer \u003d new FileWriter(FILE_LOCATION,false);"},{"lineNumber":99,"author":{"gitId":"lowwilliam"},"content":"            for (Task taskInList : lists) {"},{"lineNumber":100,"author":{"gitId":"lowwilliam"},"content":"                writer.write(taskInList.getTaskType() + \"-\" + taskInList.isDone() + \"-\" + taskInList.getTask());"},{"lineNumber":101,"author":{"gitId":"lowwilliam"},"content":"                writer.write(\"\\r\\n\");"},{"lineNumber":102,"author":{"gitId":"lowwilliam"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"lowwilliam"},"content":"            writer.close();"},{"lineNumber":104,"author":{"gitId":"lowwilliam"},"content":"        } catch (IOException e) {"},{"lineNumber":105,"author":{"gitId":"lowwilliam"},"content":"            e.printStackTrace();"},{"lineNumber":106,"author":{"gitId":"lowwilliam"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":109,"author":{"gitId":"lowwilliam"},"content":"    /** Show welcome message*/"},{"lineNumber":110,"author":{"gitId":"lowwilliam"},"content":"    private static void showWelcomeMessage() {"},{"lineNumber":111,"author":{"gitId":"lowwilliam"},"content":"        showToUser(DIVIDER, DIVIDER, VERSION, LOGO, GREETING, DIVIDER);"},{"lineNumber":112,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":114,"author":{"gitId":"lowwilliam"},"content":"    /** Show users infromation one line by one line*/"},{"lineNumber":115,"author":{"gitId":"lowwilliam"},"content":"    private static void showToUser(String... message) {"},{"lineNumber":116,"author":{"gitId":"lowwilliam"},"content":"        for (String m : message) {"},{"lineNumber":117,"author":{"gitId":"lowwilliam"},"content":"            System.out.println(m);"},{"lineNumber":118,"author":{"gitId":"lowwilliam"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":121,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":122,"author":{"gitId":"lowwilliam"},"content":"    /** Recieve users input*/"},{"lineNumber":123,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":124,"author":{"gitId":"lowwilliam"},"content":"    private static String getUserInput() {"},{"lineNumber":125,"author":{"gitId":"lowwilliam"},"content":"        System.out.print(\"Enter command: \");"},{"lineNumber":126,"author":{"gitId":"lowwilliam"},"content":"        String inputLine \u003d SCANNER.nextLine();"},{"lineNumber":127,"author":{"gitId":"lowwilliam"},"content":"        // silently consume all blank and comment lines"},{"lineNumber":128,"author":{"gitId":"lowwilliam"},"content":"        while (inputLine.trim().isEmpty() || inputLine.trim().charAt(0) \u003d\u003d INPUT_COMMENT_MARKER) {"},{"lineNumber":129,"author":{"gitId":"lowwilliam"},"content":"            inputLine \u003d SCANNER.nextLine();"},{"lineNumber":130,"author":{"gitId":"lowwilliam"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"lowwilliam"},"content":"        return inputLine;"},{"lineNumber":132,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":134,"author":{"gitId":"lowwilliam"},"content":"    /** Repeat users command after user input*/"},{"lineNumber":135,"author":{"gitId":"lowwilliam"},"content":"    private static void echoUserCommand(String userCommand) {"},{"lineNumber":136,"author":{"gitId":"lowwilliam"},"content":"        showToUser(\"[Command entered:\" + userCommand + \"]\", DIVIDER);"},{"lineNumber":137,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":139,"author":{"gitId":"lowwilliam"},"content":"    /** Run users input with a split of type and content*/"},{"lineNumber":140,"author":{"gitId":"lowwilliam"},"content":"    private static int executeCommand(String userInputString) {"},{"lineNumber":141,"author":{"gitId":"lowwilliam"},"content":"        final String[] commandTypeAndParams \u003d splitCommandWordAndArgs(userInputString);"},{"lineNumber":142,"author":{"gitId":"lowwilliam"},"content":"        final String commandType \u003d commandTypeAndParams[0];"},{"lineNumber":143,"author":{"gitId":"lowwilliam"},"content":"        String commandArgs \u003d commandTypeAndParams[1];"},{"lineNumber":144,"author":{"gitId":"lowwilliam"},"content":"        Task taskInput;"},{"lineNumber":145,"author":{"gitId":"lowwilliam"},"content":"        switch (commandType) {"},{"lineNumber":146,"author":{"gitId":"lowwilliam"},"content":"        case COMMAND_TODO_WORD:"},{"lineNumber":147,"author":{"gitId":"lowwilliam"},"content":"            taskInput \u003d new TodoTask(commandArgs);"},{"lineNumber":148,"author":{"gitId":"lowwilliam"},"content":"            lists.add(taskInput);"},{"lineNumber":149,"author":{"gitId":"lowwilliam"},"content":"            count++;"},{"lineNumber":150,"author":{"gitId":"lowwilliam"},"content":"            return 1;"},{"lineNumber":151,"author":{"gitId":"lowwilliam"},"content":"        case COMMAND_EVENT_WORD:"},{"lineNumber":152,"author":{"gitId":"lowwilliam"},"content":"            checkError(commandArgs);"},{"lineNumber":153,"author":{"gitId":"lowwilliam"},"content":"            commandArgs \u003d commandArgs.replace(\"/\", \"(\");"},{"lineNumber":154,"author":{"gitId":"lowwilliam"},"content":"            commandArgs \u003d commandArgs.replace(\"at\", \"at:\");"},{"lineNumber":155,"author":{"gitId":"lowwilliam"},"content":"            commandArgs \u003d commandArgs+\")\";"},{"lineNumber":156,"author":{"gitId":"lowwilliam"},"content":"            taskInput \u003d new EventTask(commandArgs);"},{"lineNumber":157,"author":{"gitId":"lowwilliam"},"content":"            lists.add(taskInput);"},{"lineNumber":158,"author":{"gitId":"lowwilliam"},"content":"            count++;"},{"lineNumber":159,"author":{"gitId":"lowwilliam"},"content":"            return 1;"},{"lineNumber":160,"author":{"gitId":"lowwilliam"},"content":"        case COMMAND_DEADLINE_WORD:"},{"lineNumber":161,"author":{"gitId":"lowwilliam"},"content":"            commandArgs \u003d commandArgs.replace(\"/\", \"(\");"},{"lineNumber":162,"author":{"gitId":"lowwilliam"},"content":"            commandArgs \u003d commandArgs.replace(\"by\", \"by:\");"},{"lineNumber":163,"author":{"gitId":"lowwilliam"},"content":"            commandArgs \u003d commandArgs+\")\";"},{"lineNumber":164,"author":{"gitId":"lowwilliam"},"content":"            taskInput \u003d new DeadlineTask(commandArgs);"},{"lineNumber":165,"author":{"gitId":"lowwilliam"},"content":"            lists.add(taskInput);"},{"lineNumber":166,"author":{"gitId":"lowwilliam"},"content":"            count++;"},{"lineNumber":167,"author":{"gitId":"lowwilliam"},"content":"            return 1;"},{"lineNumber":168,"author":{"gitId":"lowwilliam"},"content":"        case COMMAND_LIST_WORD:"},{"lineNumber":169,"author":{"gitId":"lowwilliam"},"content":"            printList(0,count);"},{"lineNumber":170,"author":{"gitId":"lowwilliam"},"content":"            return 1;"},{"lineNumber":171,"author":{"gitId":"lowwilliam"},"content":"        case COMMAND_DONE_WORD:"},{"lineNumber":172,"author":{"gitId":"lowwilliam"},"content":"            doneItem(commandArgs);"},{"lineNumber":173,"author":{"gitId":"lowwilliam"},"content":"            return 1;"},{"lineNumber":174,"author":{"gitId":"lowwilliam"},"content":"        case COMMAND_END_WORD:"},{"lineNumber":175,"author":{"gitId":"lowwilliam"},"content":"            endSystem();"},{"lineNumber":176,"author":{"gitId":"lowwilliam"},"content":"            return 0;"},{"lineNumber":177,"author":{"gitId":"lowwilliam"},"content":"        case COMMAND_DELETE_WORD:"},{"lineNumber":178,"author":{"gitId":"lowwilliam"},"content":"            deleteItem(commandArgs);"},{"lineNumber":179,"author":{"gitId":"lowwilliam"},"content":"            return 1;"},{"lineNumber":180,"author":{"gitId":"lowwilliam"},"content":"        case COMMAND_FIND_WORD:"},{"lineNumber":181,"author":{"gitId":"lowwilliam"},"content":"            findKeyword(commandArgs);"},{"lineNumber":182,"author":{"gitId":"lowwilliam"},"content":"            return 1;"},{"lineNumber":183,"author":{"gitId":"lowwilliam"},"content":"        default:"},{"lineNumber":184,"author":{"gitId":"lowwilliam"},"content":"            showError();"},{"lineNumber":185,"author":{"gitId":"lowwilliam"},"content":"            return 1;"},{"lineNumber":186,"author":{"gitId":"lowwilliam"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":189,"author":{"gitId":"lowwilliam"},"content":"    /** Trims the input of when there is a empty space*/"},{"lineNumber":190,"author":{"gitId":"lowwilliam"},"content":"    private static String[] splitCommandWordAndArgs(String rawUserInput) {"},{"lineNumber":191,"author":{"gitId":"lowwilliam"},"content":"        final String[] split \u003d rawUserInput.trim().split(\"\\\\s+\", 2);"},{"lineNumber":192,"author":{"gitId":"lowwilliam"},"content":"        return split.length \u003d\u003d 2 ? split : new String[] { split[0] , \"\" }; // else case: no parameters"},{"lineNumber":193,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":195,"author":{"gitId":"lowwilliam"},"content":"    /** Print the list when user type list*/"},{"lineNumber":196,"author":{"gitId":"lowwilliam"},"content":"    public static void printList(int startIndex, int endIndex) {"},{"lineNumber":197,"author":{"gitId":"lowwilliam"},"content":"        if (endIndex \u003d\u003d 0) {"},{"lineNumber":198,"author":{"gitId":"lowwilliam"},"content":"            System.out.println(\"List is empty :o\\n\" + \"\\n\");"},{"lineNumber":199,"author":{"gitId":"lowwilliam"},"content":"        } else {"},{"lineNumber":200,"author":{"gitId":"lowwilliam"},"content":"            for(int i \u003d startIndex; i \u003c endIndex; ++i) {"},{"lineNumber":201,"author":{"gitId":"lowwilliam"},"content":"                System.out.println(\" \" + (i + 1) + \": \" + lists.get(i).toString());"},{"lineNumber":202,"author":{"gitId":"lowwilliam"},"content":"            }"},{"lineNumber":203,"author":{"gitId":"lowwilliam"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":206,"author":{"gitId":"lowwilliam"},"content":"    /** Show the error message with one divider*/"},{"lineNumber":207,"author":{"gitId":"lowwilliam"},"content":"    public static void showError(){"},{"lineNumber":208,"author":{"gitId":"lowwilliam"},"content":"        showToUser(ERROR_MESSAGE,DIVIDER);"},{"lineNumber":209,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":211,"author":{"gitId":"lowwilliam"},"content":"    /** Mark the selected item as done*/"},{"lineNumber":212,"author":{"gitId":"lowwilliam"},"content":"    public static void doneItem(String doneStringNumber){"},{"lineNumber":213,"author":{"gitId":"lowwilliam"},"content":"        checkError(doneStringNumber);"},{"lineNumber":214,"author":{"gitId":"lowwilliam"},"content":"        int doneInteger \u003d Integer.parseInt(doneStringNumber)-1;"},{"lineNumber":215,"author":{"gitId":"lowwilliam"},"content":"        lists.get(doneInteger).markAsDone();"},{"lineNumber":216,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":218,"author":{"gitId":"lowwilliam"},"content":"    /** Delete the selected item*/"},{"lineNumber":219,"author":{"gitId":"lowwilliam"},"content":"    public static void deleteItem(String deleteStringNumber){"},{"lineNumber":220,"author":{"gitId":"lowwilliam"},"content":"        checkError(deleteStringNumber);"},{"lineNumber":221,"author":{"gitId":"lowwilliam"},"content":"        if(Integer.parseInt(deleteStringNumber)\u003e\u003dcount){"},{"lineNumber":222,"author":{"gitId":"lowwilliam"},"content":"            showError();"},{"lineNumber":223,"author":{"gitId":"lowwilliam"},"content":"        } else{"},{"lineNumber":224,"author":{"gitId":"lowwilliam"},"content":"            lists.remove(Integer.parseInt(deleteStringNumber)-1);"},{"lineNumber":225,"author":{"gitId":"lowwilliam"},"content":"            count--;"},{"lineNumber":226,"author":{"gitId":"lowwilliam"},"content":"        }"},{"lineNumber":227,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":229,"author":{"gitId":"lowwilliam"},"content":"    /** End the system by write the list into the file and show bye message*/"},{"lineNumber":230,"author":{"gitId":"lowwilliam"},"content":"    public static void endSystem(){"},{"lineNumber":231,"author":{"gitId":"lowwilliam"},"content":"        writeFile(lists);"},{"lineNumber":232,"author":{"gitId":"lowwilliam"},"content":"        showToUser(BYE);"},{"lineNumber":233,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":234,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":235,"author":{"gitId":"lowwilliam"},"content":"    /** Show error message if error appear*/"},{"lineNumber":236,"author":{"gitId":"lowwilliam"},"content":"    public static void checkError(String commandArgs){"},{"lineNumber":237,"author":{"gitId":"lowwilliam"},"content":"        if (commandArgs.isEmpty()){"},{"lineNumber":238,"author":{"gitId":"lowwilliam"},"content":"            showError();}"},{"lineNumber":239,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":240,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":241,"author":{"gitId":"lowwilliam"},"content":"    /** Print the keyword related item if found the keyword inside the content*/"},{"lineNumber":242,"author":{"gitId":"lowwilliam"},"content":"    public static void findKeyword(String keyword){"},{"lineNumber":243,"author":{"gitId":"lowwilliam"},"content":"        for(int i \u003d 0; i \u003c count; ++i){"},{"lineNumber":244,"author":{"gitId":"lowwilliam"},"content":"            if(lists.get(i).toString().contains(keyword)){"},{"lineNumber":245,"author":{"gitId":"lowwilliam"},"content":"                showToUser(lists.get(i).toString());"},{"lineNumber":246,"author":{"gitId":"lowwilliam"},"content":"            }"},{"lineNumber":247,"author":{"gitId":"lowwilliam"},"content":"        }"},{"lineNumber":248,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":249,"author":{"gitId":"lowwilliam"},"content":"}"}],"authorContributionMap":{"lowwilliam":249}},{"path":"src/main/java/Duke/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lowwilliam"},"content":"deadline-true-return book (by: Sunday)"},{"lineNumber":2,"author":{"gitId":"lowwilliam"},"content":"event-true-project meeting (at: Mon 2-4pm)"},{"lineNumber":3,"author":{"gitId":"lowwilliam"},"content":"todo-true-run book (by: Sunday)"}],"authorContributionMap":{"lowwilliam":3}},{"path":"src/main/java/Duke/Task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowwilliam"},"content":"package Duke.Task;"},{"lineNumber":2,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":3,"author":{"gitId":"lowwilliam"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":4,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":5,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":6,"author":{"gitId":"lowwilliam"},"content":"    private static final String COMMAND_DEADLINE_WORD \u003d \"deadline\";"},{"lineNumber":7,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":8,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":9,"author":{"gitId":"lowwilliam"},"content":"    public DeadlineTask(String taskDetail) {"},{"lineNumber":10,"author":{"gitId":"lowwilliam"},"content":"        super(taskDetail);"},{"lineNumber":11,"author":{"gitId":"lowwilliam"},"content":"        // TODO Auto-generated constructor stub"},{"lineNumber":12,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":14,"author":{"gitId":"lowwilliam"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"lowwilliam"},"content":"    public String getTaskType() {"},{"lineNumber":16,"author":{"gitId":"lowwilliam"},"content":"        return COMMAND_DEADLINE_WORD;"},{"lineNumber":17,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":19,"author":{"gitId":"lowwilliam"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"lowwilliam"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"lowwilliam"},"content":"        return \"[\"+COMMAND_DEADLINE_WORD+\"]\" + super.toString();"},{"lineNumber":22,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":24,"author":{"gitId":"lowwilliam"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"lowwilliam"},"content":"    public void markAsDone() {"},{"lineNumber":26,"author":{"gitId":"lowwilliam"},"content":"        super.isDone \u003d true;"},{"lineNumber":27,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"lowwilliam"},"content":"}"}],"authorContributionMap":{"lowwilliam":28}},{"path":"src/main/java/Duke/Task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowwilliam"},"content":"package Duke.Task;"},{"lineNumber":2,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":3,"author":{"gitId":"lowwilliam"},"content":"public class EventTask extends Task {"},{"lineNumber":4,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":5,"author":{"gitId":"lowwilliam"},"content":"    private static final String COMMAND_EVENT_WORD \u003d \"event\";"},{"lineNumber":6,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":7,"author":{"gitId":"lowwilliam"},"content":"    public EventTask(String taskDetail) {"},{"lineNumber":8,"author":{"gitId":"lowwilliam"},"content":"        super(taskDetail);"},{"lineNumber":9,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":11,"author":{"gitId":"lowwilliam"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"lowwilliam"},"content":"    public String getTaskType() {"},{"lineNumber":13,"author":{"gitId":"lowwilliam"},"content":"        return COMMAND_EVENT_WORD;"},{"lineNumber":14,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":16,"author":{"gitId":"lowwilliam"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"lowwilliam"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"lowwilliam"},"content":"        return \"[\"+COMMAND_EVENT_WORD+\"]\" + super.toString();"},{"lineNumber":19,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":21,"author":{"gitId":"lowwilliam"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"lowwilliam"},"content":"    public void markAsDone() {"},{"lineNumber":23,"author":{"gitId":"lowwilliam"},"content":"        super.isDone \u003d true;"},{"lineNumber":24,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"lowwilliam"},"content":"}"}],"authorContributionMap":{"lowwilliam":25}},{"path":"src/main/java/Duke/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowwilliam"},"content":"package Duke.Task;"},{"lineNumber":2,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":3,"author":{"gitId":"lowwilliam"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"lowwilliam"},"content":"    protected String taskDetail;"},{"lineNumber":5,"author":{"gitId":"lowwilliam"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"lowwilliam"},"content":"    "},{"lineNumber":7,"author":{"gitId":"lowwilliam"},"content":"    private static String DONE \u003d \"done\";"},{"lineNumber":8,"author":{"gitId":"lowwilliam"},"content":"    private static String UNDO \u003d \"undo\";"},{"lineNumber":9,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":10,"author":{"gitId":"lowwilliam"},"content":"    public Task(String taskDetail) {"},{"lineNumber":11,"author":{"gitId":"lowwilliam"},"content":"        this.taskDetail \u003d taskDetail;"},{"lineNumber":12,"author":{"gitId":"lowwilliam"},"content":"        this.isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":15,"author":{"gitId":"lowwilliam"},"content":"    public String getStatus() {"},{"lineNumber":16,"author":{"gitId":"lowwilliam"},"content":"        return (isDone ? DONE : UNDO);"},{"lineNumber":17,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":19,"author":{"gitId":"lowwilliam"},"content":"    public void markAsDone() {"},{"lineNumber":20,"author":{"gitId":"lowwilliam"},"content":"        this.isDone \u003d true;"},{"lineNumber":21,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":23,"author":{"gitId":"lowwilliam"},"content":"    public boolean isDone() { return isDone; }"},{"lineNumber":24,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":25,"author":{"gitId":"lowwilliam"},"content":"    public String getTask() {"},{"lineNumber":26,"author":{"gitId":"lowwilliam"},"content":"        return taskDetail;"},{"lineNumber":27,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":29,"author":{"gitId":"lowwilliam"},"content":"    public String getTaskType() {"},{"lineNumber":30,"author":{"gitId":"lowwilliam"},"content":"        return null;"},{"lineNumber":31,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":33,"author":{"gitId":"lowwilliam"},"content":"    public String toString() {"},{"lineNumber":34,"author":{"gitId":"lowwilliam"},"content":"        return \"[\" + getStatus() + \"] \" + getTask();"},{"lineNumber":35,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"lowwilliam"},"content":"}"}],"authorContributionMap":{"lowwilliam":36}},{"path":"src/main/java/Duke/Task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lowwilliam"},"content":"package Duke.Task;"},{"lineNumber":2,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":3,"author":{"gitId":"lowwilliam"},"content":"public class TodoTask extends Task {"},{"lineNumber":4,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":5,"author":{"gitId":"lowwilliam"},"content":"    private static final String COMMAND_TODO_WORD \u003d \"todo\";"},{"lineNumber":6,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":7,"author":{"gitId":"lowwilliam"},"content":"    public TodoTask(String taskDetail) {"},{"lineNumber":8,"author":{"gitId":"lowwilliam"},"content":"        super(taskDetail);"},{"lineNumber":9,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":11,"author":{"gitId":"lowwilliam"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"lowwilliam"},"content":"    public String getTaskType() {"},{"lineNumber":13,"author":{"gitId":"lowwilliam"},"content":"        return COMMAND_TODO_WORD;"},{"lineNumber":14,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":16,"author":{"gitId":"lowwilliam"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"lowwilliam"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"lowwilliam"},"content":"        return \"[\"+COMMAND_TODO_WORD+\"]\" + super.toString();"},{"lineNumber":19,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"lowwilliam"},"content":""},{"lineNumber":21,"author":{"gitId":"lowwilliam"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"lowwilliam"},"content":"    public void markAsDone() {"},{"lineNumber":23,"author":{"gitId":"lowwilliam"},"content":"        super.isDone \u003d true;"},{"lineNumber":24,"author":{"gitId":"lowwilliam"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"lowwilliam"},"content":"}"}],"authorContributionMap":{"lowwilliam":25}}]
