[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"# Welcome"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"This is Spark. Spark V3.0 is a personal planner application, optimized for use via a Command Line Interface (CLI),"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"while still having the benefits of an understandable Graphical User Interface (GUI)."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"Click [here](/docs/README.md) for the user guide!"}],"authorContributionMap":{"JonathanKhooTY":4,"-":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"Spark V3.0 is a personal planner application, optimized for use via a Command Line Interface (CLI),"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"while still having the benefits of an understandable Graphical User Interface (GUI). "},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"- [Quick Start](#quick-start) "},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"- [Features](#features) "},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"  - [Viewing list of tasks: `list`](#viewing-list-of-tasks-list)"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"  - [Adding a TODO task: `todo`](#adding-a-todo-task-todo)"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"  - [Adding an EVENT task: `event`](#adding-an-event-task-event)"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"  - [Adding a DEADLINE task: `deadline`](#adding-a-deadline-task-deadline)"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"  - [Marking a task as completed: `done`](#marking-a-task-as-completed-done)"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"  - [Deleting a task from the list: `delete`](#deleting-a-task-from-the-list-delete)"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"  - [Searching for a task with a keyword: `find`](#searching-for-a-task-with-a-keyword-find)"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"  - [Exiting the program: `bye`](#exiting-the-program-bye)"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"  - [Saving the data](#saving-the-data)"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"  - [Editing the data file](#editing-the-data-file)"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"  - [Loading of saved data file](#loading-of-saved-data-file)"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"- [FAQ](#faq)"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"- [Command Summary](#command-summary)"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"---"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"## Quick Start "},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"1. Ensure you have Java 11."},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"2. Download the latest Spark.jar from here (INSERT LINK)."},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"3. Copy the file to the folder you want to use as the *home folder* for Spark."},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"4. Double-click the file to start the program. The CLI similar to below should appear within a few seconds."},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"5. Type the command in the command box and press *Enter* to execute it. e.g. typing `list` and pressing *Enter* will"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"display a list of current tasks."},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"\u003cbr/\u003e\u003cbr/\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"JonathanKhooTY"},"content":"### Viewing list of tasks: `list`"},{"lineNumber":37,"author":{"gitId":"JonathanKhooTY"},"content":"Displays the list of tasks already input by user."},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"JonathanKhooTY"},"content":"![List](/docs/LIST1.JPG?raw\u003dtrue)"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"JonathanKhooTY"},"content":"Format: `list`"},{"lineNumber":42,"author":{"gitId":"JonathanKhooTY"},"content":"\u003cbr/\u003e\u003cbr/\u003e"},{"lineNumber":43,"author":{"gitId":"JonathanKhooTY"},"content":"### Adding a TODO task: `todo`"},{"lineNumber":44,"author":{"gitId":"JonathanKhooTY"},"content":"Adds a TODO task into the list"},{"lineNumber":45,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":46,"author":{"gitId":"JonathanKhooTY"},"content":"![Todo](/docs/TODO1.JPG?raw\u003dtrue)"},{"lineNumber":47,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":48,"author":{"gitId":"JonathanKhooTY"},"content":"Format: `todo DESCRIPTION_OF_TASK`"},{"lineNumber":49,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":50,"author":{"gitId":"JonathanKhooTY"},"content":"* Task will have a `[T]` tagged to it."},{"lineNumber":51,"author":{"gitId":"JonathanKhooTY"},"content":"* Command `todo` is case-insensitive."},{"lineNumber":52,"author":{"gitId":"JonathanKhooTY"},"content":"* Requires a field after the `todo` command. "},{"lineNumber":53,"author":{"gitId":"JonathanKhooTY"},"content":"* Does not accept blank inputs."},{"lineNumber":54,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":55,"author":{"gitId":"JonathanKhooTY"},"content":"Examples:"},{"lineNumber":56,"author":{"gitId":"JonathanKhooTY"},"content":"* `todo Return book` Stores the task `Return book` with a `[T]` tag."},{"lineNumber":57,"author":{"gitId":"JonathanKhooTY"},"content":"* `todo Collect delivery` Stores the task `Collect delivery` with a `[T]` tag."},{"lineNumber":58,"author":{"gitId":"JonathanKhooTY"},"content":"  \u003cbr/\u003e\u003cbr/\u003e"},{"lineNumber":59,"author":{"gitId":"JonathanKhooTY"},"content":"### Adding an EVENT task: `event`"},{"lineNumber":60,"author":{"gitId":"JonathanKhooTY"},"content":"Adds an EVENT task into the list"},{"lineNumber":61,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":62,"author":{"gitId":"JonathanKhooTY"},"content":"![Event](/docs/EVENT1.JPG?raw\u003dtrue)"},{"lineNumber":63,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":64,"author":{"gitId":"JonathanKhooTY"},"content":"Format: `event DESCRIPTION_OF_TASK /DATE_OF_EVENT [ADDITIONAL_COMMENTS_ON_EVENT]`"},{"lineNumber":65,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":66,"author":{"gitId":"JonathanKhooTY"},"content":"* Task will have a `[E]` tagged to it."},{"lineNumber":67,"author":{"gitId":"JonathanKhooTY"},"content":"* Command `event` is case-insensitive."},{"lineNumber":68,"author":{"gitId":"JonathanKhooTY"},"content":"* Requires task description at `DESCRIPTION`."},{"lineNumber":69,"author":{"gitId":"JonathanKhooTY"},"content":"* Requires the date of event in either text or numerical form with the `/` prefix. Date will be recorded at first instance of `/`"},{"lineNumber":70,"author":{"gitId":"JonathanKhooTY"},"content":"* Optional to add in additional comments on the task after entering the date. Additional comments"},{"lineNumber":71,"author":{"gitId":"JonathanKhooTY"},"content":"will append to the end of the date."},{"lineNumber":72,"author":{"gitId":"JonathanKhooTY"},"content":"  "},{"lineNumber":73,"author":{"gitId":"JonathanKhooTY"},"content":"Examples:"},{"lineNumber":74,"author":{"gitId":"JonathanKhooTY"},"content":"* `event Attend concert /23/12/2019`"},{"lineNumber":75,"author":{"gitId":"JonathanKhooTY"},"content":"  Stores the task `Attend concert` with a `[E]` (EVENT) tag, and the event date `23/12/2019`."},{"lineNumber":76,"author":{"gitId":"JonathanKhooTY"},"content":"* `event Sam\u0027s birthday party /today 3pm. Remember to bring cake!`"},{"lineNumber":77,"author":{"gitId":"JonathanKhooTY"},"content":"  Stores the task `Sam\u0027s birthday party` with a `[E]` (EVENT) tag, and the event date `today 3pm`."},{"lineNumber":78,"author":{"gitId":"JonathanKhooTY"},"content":"  \u003cbr/\u003e\u003cbr/\u003e"},{"lineNumber":79,"author":{"gitId":"JonathanKhooTY"},"content":"### Adding a DEADLINE task: `deadline`"},{"lineNumber":80,"author":{"gitId":"JonathanKhooTY"},"content":"Adds a DEADLINE task into the list"},{"lineNumber":81,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":82,"author":{"gitId":"JonathanKhooTY"},"content":"![Deadline](/docs/DEADLINE1.JPG?raw\u003dtrue)"},{"lineNumber":83,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":84,"author":{"gitId":"JonathanKhooTY"},"content":"Format: `deadline DESCRIPTION_OF_TASK /DATE_OF_DEADLINE [ADDITIONAL_COMMENTS_ON_DEADLINE]`"},{"lineNumber":85,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":86,"author":{"gitId":"JonathanKhooTY"},"content":"* Task will have a `[D]` tagged to it."},{"lineNumber":87,"author":{"gitId":"JonathanKhooTY"},"content":"* Command `deadline` is case-insensitive."},{"lineNumber":88,"author":{"gitId":"JonathanKhooTY"},"content":"* Requires task description at `DESCRIPTION`."},{"lineNumber":89,"author":{"gitId":"JonathanKhooTY"},"content":"* Requires the date of deadline in either text or numerical form with the `/` prefix. Date will be recorded at first instance of `/`"},{"lineNumber":90,"author":{"gitId":"JonathanKhooTY"},"content":"* Optional to add in additional comments on the task after entering the date. Additional comments"},{"lineNumber":91,"author":{"gitId":"JonathanKhooTY"},"content":"  will append to the end of the date."},{"lineNumber":92,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":93,"author":{"gitId":"JonathanKhooTY"},"content":"Examples:"},{"lineNumber":94,"author":{"gitId":"JonathanKhooTY"},"content":"* `deadline Complete CS2113T assignment /23rd December` "},{"lineNumber":95,"author":{"gitId":"JonathanKhooTY"},"content":"  Stores the task `Complete CS2113T assignment` with a `[D]` (Deadline) tag, and the deadline `23rd December`."},{"lineNumber":96,"author":{"gitId":"JonathanKhooTY"},"content":"* `deadline Pay water bill /5pm` "},{"lineNumber":97,"author":{"gitId":"JonathanKhooTY"},"content":"  Stores the task `Pay water bill` with a `[D]` (Deadline) tag, and the deadline `5pm`."},{"lineNumber":98,"author":{"gitId":"JonathanKhooTY"},"content":"  \u003cbr/\u003e\u003cbr/\u003e"},{"lineNumber":99,"author":{"gitId":"JonathanKhooTY"},"content":"### Marking a task as completed: `done`"},{"lineNumber":100,"author":{"gitId":"JonathanKhooTY"},"content":"Marks the specified task number as completed."},{"lineNumber":101,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":102,"author":{"gitId":"JonathanKhooTY"},"content":"![Done](/docs/DONE1.JPG?raw\u003dtrue)"},{"lineNumber":103,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":104,"author":{"gitId":"JonathanKhooTY"},"content":"Format: `done TASK_POSITION_IN_LIST`"},{"lineNumber":105,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":106,"author":{"gitId":"JonathanKhooTY"},"content":"* Command `done` is case-insensitive."},{"lineNumber":107,"author":{"gitId":"JonathanKhooTY"},"content":"* `TASK_POSITION_IN_LIST` must be an integer."},{"lineNumber":108,"author":{"gitId":"JonathanKhooTY"},"content":"  "},{"lineNumber":109,"author":{"gitId":"JonathanKhooTY"},"content":"* `TASK_POSITION_IN_LIST` must be within range of the current list."},{"lineNumber":110,"author":{"gitId":"JonathanKhooTY"},"content":"  "},{"lineNumber":111,"author":{"gitId":"JonathanKhooTY"},"content":"* `TASK_POSITION_IN_LIST` can be viewed with `list` command."},{"lineNumber":112,"author":{"gitId":"JonathanKhooTY"},"content":"  "},{"lineNumber":113,"author":{"gitId":"JonathanKhooTY"},"content":"* Corrupted tasks cannot be marked as completed."},{"lineNumber":114,"author":{"gitId":"JonathanKhooTY"},"content":"  \u003cbr/\u003e\u003cbr/\u003e"},{"lineNumber":115,"author":{"gitId":"JonathanKhooTY"},"content":"### Deleting a task from the list: `delete`"},{"lineNumber":116,"author":{"gitId":"JonathanKhooTY"},"content":"Removes the specified task from the list."},{"lineNumber":117,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":118,"author":{"gitId":"JonathanKhooTY"},"content":"![Delete](/docs/DONE1.JPG?raw\u003dtrue)"},{"lineNumber":119,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":120,"author":{"gitId":"JonathanKhooTY"},"content":"Format: `delete TASK_POSITION_IN_LIST`"},{"lineNumber":121,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":122,"author":{"gitId":"JonathanKhooTY"},"content":"* Command `delete` is case-insensitive."},{"lineNumber":123,"author":{"gitId":"JonathanKhooTY"},"content":"* `TASK_POSITION_IN_LIST` must be an integer."},{"lineNumber":124,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":125,"author":{"gitId":"JonathanKhooTY"},"content":"* `TASK_POSITION_IN_LIST` must be within range of the current list."},{"lineNumber":126,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":127,"author":{"gitId":"JonathanKhooTY"},"content":"* `TASK_POSITION_IN_LIST` can be viewed with `list` command."},{"lineNumber":128,"author":{"gitId":"JonathanKhooTY"},"content":"  "},{"lineNumber":129,"author":{"gitId":"JonathanKhooTY"},"content":"* Corrupted tasks should be deleted from the list."},{"lineNumber":130,"author":{"gitId":"JonathanKhooTY"},"content":"  \u003cbr/\u003e\u003cbr/\u003e"},{"lineNumber":131,"author":{"gitId":"JonathanKhooTY"},"content":"### Searching for a task with a keyword: `find`"},{"lineNumber":132,"author":{"gitId":"JonathanKhooTY"},"content":"Searches for tasks in the list with the specified keyword."},{"lineNumber":133,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":134,"author":{"gitId":"JonathanKhooTY"},"content":"![Find](/docs/FIND1.JPG?raw\u003dtrue)"},{"lineNumber":135,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":136,"author":{"gitId":"JonathanKhooTY"},"content":"Format: `find KEYWORD`"},{"lineNumber":137,"author":{"gitId":"JonathanKhooTY"},"content":"* Command `find` is case-insensitive."},{"lineNumber":138,"author":{"gitId":"JonathanKhooTY"},"content":"* `KEYWORD` can be a short sentence, and need not be a singular word."},{"lineNumber":139,"author":{"gitId":"JonathanKhooTY"},"content":"* Requires `KEYWORD` to run. Field cannot be left blank."},{"lineNumber":140,"author":{"gitId":"JonathanKhooTY"},"content":"* List of tasks with `KEYWORD` in it will be displayed on the screen in the order they were listed."},{"lineNumber":141,"author":{"gitId":"JonathanKhooTY"},"content":"  \u003cbr/\u003e\u003cbr/\u003e"},{"lineNumber":142,"author":{"gitId":"JonathanKhooTY"},"content":"### Exiting the program: `bye`"},{"lineNumber":143,"author":{"gitId":"JonathanKhooTY"},"content":"Exits the program"},{"lineNumber":144,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":145,"author":{"gitId":"JonathanKhooTY"},"content":"![Bye](/docs/BYE1.JPG?raw\u003dtrue)"},{"lineNumber":146,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":147,"author":{"gitId":"JonathanKhooTY"},"content":"Format: `bye`"},{"lineNumber":148,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":149,"author":{"gitId":"JonathanKhooTY"},"content":"* Command `bye` is case-insensitive."},{"lineNumber":150,"author":{"gitId":"JonathanKhooTY"},"content":"* List stored in the program will be auto saved upon execution of `bye`."},{"lineNumber":151,"author":{"gitId":"JonathanKhooTY"},"content":"  \u003cbr/\u003e\u003cbr/\u003e"},{"lineNumber":152,"author":{"gitId":"JonathanKhooTY"},"content":"### Saving the data"},{"lineNumber":153,"author":{"gitId":"JonathanKhooTY"},"content":"List in the program\u0027s cache will be auto saved upon exit of program. "},{"lineNumber":154,"author":{"gitId":"JonathanKhooTY"},"content":"There is no need to save manually."},{"lineNumber":155,"author":{"gitId":"JonathanKhooTY"},"content":"\u003cbr/\u003e\u003cbr/\u003e"},{"lineNumber":156,"author":{"gitId":"JonathanKhooTY"},"content":"### Editing the data file"},{"lineNumber":157,"author":{"gitId":"JonathanKhooTY"},"content":"The list data is saved as a .TXT file."},{"lineNumber":158,"author":{"gitId":"JonathanKhooTY"},"content":"If changes to the data file makes its format invalid, Spark will mark that particular task as corrupted."},{"lineNumber":159,"author":{"gitId":"JonathanKhooTY"},"content":"Upon `list` command, corrupted tasks are labelled `Corrupted. Please delete.`"},{"lineNumber":160,"author":{"gitId":"JonathanKhooTY"},"content":"\u003cbr/\u003e\u003cbr/\u003e"},{"lineNumber":161,"author":{"gitId":"JonathanKhooTY"},"content":"### Loading of saved data file"},{"lineNumber":162,"author":{"gitId":"JonathanKhooTY"},"content":"The data file will be automatically restored when Spark starts up. "},{"lineNumber":163,"author":{"gitId":"JonathanKhooTY"},"content":"There is no need to manually load the data file with the list contents."},{"lineNumber":164,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":165,"author":{"gitId":"JonathanKhooTY"},"content":"---"},{"lineNumber":166,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":167,"author":{"gitId":"JonathanKhooTY"},"content":"## FAQ"},{"lineNumber":168,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":169,"author":{"gitId":"JonathanKhooTY"},"content":"**Q**: Are commands case-sensitive?\u003cbr/\u003e"},{"lineNumber":170,"author":{"gitId":"JonathanKhooTY"},"content":"**A**: Commands are not case-sensitive."},{"lineNumber":171,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":172,"author":{"gitId":"JonathanKhooTY"},"content":"**Q**: What if I do not have an existing saved .TXT file on my computer?\u003cbr/\u003e"},{"lineNumber":173,"author":{"gitId":"JonathanKhooTY"},"content":"**A**: The program will detect this and create a new .TXT file automatically."},{"lineNumber":174,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":175,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":176,"author":{"gitId":"JonathanKhooTY"},"content":"---"},{"lineNumber":177,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":178,"author":{"gitId":"JonathanKhooTY"},"content":"## Command Summary"},{"lineNumber":179,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":180,"author":{"gitId":"JonathanKhooTY"},"content":" **Command** | **Format, examples** "},{"lineNumber":181,"author":{"gitId":"JonathanKhooTY"},"content":" :--- | :---"},{"lineNumber":182,"author":{"gitId":"JonathanKhooTY"},"content":" **List**| `list` |"},{"lineNumber":183,"author":{"gitId":"JonathanKhooTY"},"content":" **Add TODO task** | `todo DESCRIPTION_OF_TASK`, e.g. `todo Return book`"},{"lineNumber":184,"author":{"gitId":"JonathanKhooTY"},"content":" **Add EVENT task** | `event DESCRIPTION_OF_TASK /DATE_OF_EVENT [ADDITIONAL_COMMENTS_ON_EVENT]`, e.g.`event Attend concert /23/12/2019`"},{"lineNumber":185,"author":{"gitId":"JonathanKhooTY"},"content":" **Add DEADLINE task** | `deadline DESCRIPTION_OF_TASK /DATE_OF_DEADLINE [ADDITIONAL_COMMENTS_ON_DEADLINE]`,e.g.`deadline Complete CS2113T assignment /23rd December`"},{"lineNumber":186,"author":{"gitId":"JonathanKhooTY"},"content":" **Mark as done** | `done TASK_POSITION_IN_LIST`, e.g. `done 3`"},{"lineNumber":187,"author":{"gitId":"JonathanKhooTY"},"content":" **Delete** | `delete TASK_POSITION_IN_LIST`,e.g. `delete 3`"},{"lineNumber":188,"author":{"gitId":"JonathanKhooTY"},"content":" **Find** | `find KEYWORD`, e.g. `find book`"},{"lineNumber":189,"author":{"gitId":"JonathanKhooTY"},"content":" **Exit** | `bye`"},{"lineNumber":190,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":191,"author":{"gitId":"JonathanKhooTY"},"content":"---"}],"authorContributionMap":{"JonathanKhooTY":180,"-":11}},{"path":"src/main/java/Spark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"import commands.*;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.*;"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import parser.Parser;"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import storage.FileManager;"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Tasklist;"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import ui.TextUI;"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import static common.Messages.*;"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":" * Main program of GuiltySpark."},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":" *"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":" * @author Jonathan Khoo"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":" * @version 3.0"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":" */"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"public class Spark {"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"    private TextUI ui;"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"    public static void main(String[] args)"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"            throws"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"            IOException, BlankDescriptionException,"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"            MissingDateException, InvalidSpaceException {"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"        runCommandLoopUntilExitCommand();"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"    private static void runCommandLoopUntilExitCommand()"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"            throws BlankDescriptionException,"},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"            MissingDateException, IOException, InvalidSpaceException {"},{"lineNumber":34,"author":{"gitId":"JonathanKhooTY"},"content":"        boolean isExit \u003d false;"},{"lineNumber":35,"author":{"gitId":"JonathanKhooTY"},"content":"        FileManager.restoreFileContents(\"Spark.txt\");"},{"lineNumber":36,"author":{"gitId":"JonathanKhooTY"},"content":"        TextUI ui \u003d new TextUI();"},{"lineNumber":37,"author":{"gitId":"JonathanKhooTY"},"content":"        ui.printWelcomeMessage();"},{"lineNumber":38,"author":{"gitId":"JonathanKhooTY"},"content":"        do {"},{"lineNumber":39,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":40,"author":{"gitId":"JonathanKhooTY"},"content":"            String fullInputCommand \u003d ui.getUserCommand();"},{"lineNumber":41,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":42,"author":{"gitId":"JonathanKhooTY"},"content":"            String[] command \u003d Parser.splitTextIntoTwoFields(fullInputCommand);"},{"lineNumber":43,"author":{"gitId":"JonathanKhooTY"},"content":"            switch (command[0]) {"},{"lineNumber":44,"author":{"gitId":"JonathanKhooTY"},"content":"            case \"todo\":"},{"lineNumber":45,"author":{"gitId":"JonathanKhooTY"},"content":"                AddTodo.execute(fullInputCommand);"},{"lineNumber":46,"author":{"gitId":"JonathanKhooTY"},"content":"                break;"},{"lineNumber":47,"author":{"gitId":"JonathanKhooTY"},"content":"            case \"deadline\":"},{"lineNumber":48,"author":{"gitId":"JonathanKhooTY"},"content":"                AddDeadline.execute(fullInputCommand);"},{"lineNumber":49,"author":{"gitId":"JonathanKhooTY"},"content":"                break;"},{"lineNumber":50,"author":{"gitId":"JonathanKhooTY"},"content":"            case \"event\":"},{"lineNumber":51,"author":{"gitId":"JonathanKhooTY"},"content":"                AddEvent.execute(fullInputCommand);"},{"lineNumber":52,"author":{"gitId":"JonathanKhooTY"},"content":"                break;"},{"lineNumber":53,"author":{"gitId":"JonathanKhooTY"},"content":"            case \"list\":"},{"lineNumber":54,"author":{"gitId":"JonathanKhooTY"},"content":"                try {"},{"lineNumber":55,"author":{"gitId":"JonathanKhooTY"},"content":"                    ListTasks.execute();"},{"lineNumber":56,"author":{"gitId":"JonathanKhooTY"},"content":"                    break;"},{"lineNumber":57,"author":{"gitId":"JonathanKhooTY"},"content":"                } catch (EmptyListException e) {"},{"lineNumber":58,"author":{"gitId":"JonathanKhooTY"},"content":"                    System.out.println(EMPTY_LIST_EXCEPTION_MESSAGE);"},{"lineNumber":59,"author":{"gitId":"JonathanKhooTY"},"content":"                    break;"},{"lineNumber":60,"author":{"gitId":"JonathanKhooTY"},"content":"                }"},{"lineNumber":61,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":62,"author":{"gitId":"JonathanKhooTY"},"content":"            case \"bye\":"},{"lineNumber":63,"author":{"gitId":"JonathanKhooTY"},"content":"                FileManager.writeToFile(\"Spark.txt\", Tasklist.getTaskList());"},{"lineNumber":64,"author":{"gitId":"JonathanKhooTY"},"content":"                SystemExit.execute();"},{"lineNumber":65,"author":{"gitId":"JonathanKhooTY"},"content":"                isExit \u003d true;"},{"lineNumber":66,"author":{"gitId":"JonathanKhooTY"},"content":"                break;"},{"lineNumber":67,"author":{"gitId":"JonathanKhooTY"},"content":"            case \"delete\":"},{"lineNumber":68,"author":{"gitId":"JonathanKhooTY"},"content":"                try {"},{"lineNumber":69,"author":{"gitId":"JonathanKhooTY"},"content":"                    DeleteTask.execute(fullInputCommand);"},{"lineNumber":70,"author":{"gitId":"JonathanKhooTY"},"content":"                } catch (BlankDescriptionException e) {"},{"lineNumber":71,"author":{"gitId":"JonathanKhooTY"},"content":"                    System.out.println(BLANK_EXCEPTION_MESSAGE);"},{"lineNumber":72,"author":{"gitId":"JonathanKhooTY"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":73,"author":{"gitId":"JonathanKhooTY"},"content":"                    System.out.println(INVALID_NUMBER_MESSAGE);"},{"lineNumber":74,"author":{"gitId":"JonathanKhooTY"},"content":"                } catch (OutOfRangeException e) {"},{"lineNumber":75,"author":{"gitId":"JonathanKhooTY"},"content":"                    System.out.println(OUT_OF_RANGE_MESSAGE);"},{"lineNumber":76,"author":{"gitId":"JonathanKhooTY"},"content":"                } catch (EmptyListException e) {"},{"lineNumber":77,"author":{"gitId":"JonathanKhooTY"},"content":"                    System.out.println(\"There\u0027s nothing to delete!\");"},{"lineNumber":78,"author":{"gitId":"JonathanKhooTY"},"content":"                    System.out.println(EMPTY_LIST_EXCEPTION_MESSAGE);"},{"lineNumber":79,"author":{"gitId":"JonathanKhooTY"},"content":"                }"},{"lineNumber":80,"author":{"gitId":"JonathanKhooTY"},"content":"                break;"},{"lineNumber":81,"author":{"gitId":"JonathanKhooTY"},"content":"            case \"find\":"},{"lineNumber":82,"author":{"gitId":"JonathanKhooTY"},"content":"                try {"},{"lineNumber":83,"author":{"gitId":"JonathanKhooTY"},"content":"                    Find.execute(fullInputCommand);"},{"lineNumber":84,"author":{"gitId":"JonathanKhooTY"},"content":"                    break;"},{"lineNumber":85,"author":{"gitId":"JonathanKhooTY"},"content":"                } catch (BlankDescriptionException e) {"},{"lineNumber":86,"author":{"gitId":"JonathanKhooTY"},"content":"                    System.out.println(BLANK_EXCEPTION_MESSAGE);"},{"lineNumber":87,"author":{"gitId":"JonathanKhooTY"},"content":"                } catch (NoMatchesFoundException e) {"},{"lineNumber":88,"author":{"gitId":"JonathanKhooTY"},"content":"                    System.out.println(NO_MATCHES_FOUND_MESSAGE);"},{"lineNumber":89,"author":{"gitId":"JonathanKhooTY"},"content":"                }"},{"lineNumber":90,"author":{"gitId":"JonathanKhooTY"},"content":"                break;"},{"lineNumber":91,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":92,"author":{"gitId":"JonathanKhooTY"},"content":"            case \"done\":"},{"lineNumber":93,"author":{"gitId":"JonathanKhooTY"},"content":"                try {"},{"lineNumber":94,"author":{"gitId":"JonathanKhooTY"},"content":"                    MarkAsDone.execute(fullInputCommand);"},{"lineNumber":95,"author":{"gitId":"JonathanKhooTY"},"content":"                } catch (OutOfRangeException e) {"},{"lineNumber":96,"author":{"gitId":"JonathanKhooTY"},"content":"                    System.out.println(OUT_OF_RANGE_MESSAGE);"},{"lineNumber":97,"author":{"gitId":"JonathanKhooTY"},"content":"                } catch (BlankDescriptionException e) {"},{"lineNumber":98,"author":{"gitId":"JonathanKhooTY"},"content":"                    System.out.println(BLANK_EXCEPTION_MESSAGE);"},{"lineNumber":99,"author":{"gitId":"JonathanKhooTY"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":100,"author":{"gitId":"JonathanKhooTY"},"content":"                    System.out.println(INVALID_NUMBER_MESSAGE);"},{"lineNumber":101,"author":{"gitId":"JonathanKhooTY"},"content":"                }"},{"lineNumber":102,"author":{"gitId":"JonathanKhooTY"},"content":"                break;"},{"lineNumber":103,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":104,"author":{"gitId":"JonathanKhooTY"},"content":"            default:"},{"lineNumber":105,"author":{"gitId":"JonathanKhooTY"},"content":"                System.out.println(\"No valid command detected! Try again!\");"},{"lineNumber":106,"author":{"gitId":"JonathanKhooTY"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":108,"author":{"gitId":"JonathanKhooTY"},"content":"        } while (!isExit);"},{"lineNumber":109,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":111,"author":{"gitId":"JonathanKhooTY"},"content":"}"},{"lineNumber":112,"author":{"gitId":"JonathanKhooTY"},"content":""}],"authorContributionMap":{"JonathanKhooTY":112}},{"path":"src/main/java/commands/AddDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.BlankDescriptionException;"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.MissingDateException;"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Task;"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import parser.Parser;"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Tasklist;"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"import static common.Messages.BLANK_EXCEPTION_MESSAGE;"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import static common.Messages.MISSING_DATE_EXCEPTION_MESSAGE;"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":" * Method that adds deadline to the tasklist"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":" *"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":" * @param userInput This is the string input by user"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":" */"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"public class AddDeadline {"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"    public static void execute(String userInput) throws BlankDescriptionException, MissingDateException {"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"            Task deadline \u003d Parser.parsingDeadline(userInput);"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"            Tasklist.addTask(deadline);"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"            System.out.println(\"Added a new deadline! :D\");"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"        } catch (BlankDescriptionException e) {"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"            System.out.println(BLANK_EXCEPTION_MESSAGE);"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"        } catch (MissingDateException e) {"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"            System.out.println(MISSING_DATE_EXCEPTION_MESSAGE);"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":31}},{"path":"src/main/java/commands/AddEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.BlankDescriptionException;"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.MissingDateException;"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import parser.Parser;"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Task;"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Tasklist;"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"import static common.Messages.BLANK_EXCEPTION_MESSAGE;"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import static common.Messages.MISSING_DATE_EXCEPTION_MESSAGE;"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":" * Method that adds an event to the tasklist"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":" *"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":" * @param userInput This is the string input by the user."},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":" */"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"public class AddEvent {"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"    public static void execute(String userInput) throws BlankDescriptionException, MissingDateException {"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"            Task event \u003d Parser.parsingEvent(userInput);"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"            Tasklist.addTask(event);"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"            System.out.println(\"Added a new event! :D\");"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"        } catch (BlankDescriptionException e) {"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"            System.out.println(BLANK_EXCEPTION_MESSAGE);"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"        } catch (MissingDateException e) {"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"            System.out.println(MISSING_DATE_EXCEPTION_MESSAGE);"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":31}},{"path":"src/main/java/commands/AddTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.BlankDescriptionException;"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import parser.Parser;"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Task;"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Tasklist;"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"import static common.Messages.BLANK_EXCEPTION_MESSAGE;"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":" * Method that adds a todo task in the tasklist"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":" *"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":" * @param userInput This is the string input by the user"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":" */"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"public class AddTodo {"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"    public static void execute(String userInput) throws BlankDescriptionException {"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"            Task todo \u003d Parser.parsingTodo(userInput);"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"            Tasklist.addTask(todo);"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"            System.out.println(\"Added a new task! :D\");"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"        } catch (BlankDescriptionException e) {"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"            System.out.println(BLANK_EXCEPTION_MESSAGE);"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"}"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":""}],"authorContributionMap":{"JonathanKhooTY":27}},{"path":"src/main/java/commands/DeleteTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.BlankDescriptionException;"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.EmptyListException;"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.OutOfRangeException;"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import parser.Parser;"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Task;"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Tasklist;"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import static common.Messages.DELETE_TASK_MESSAGE;"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":" * Method that deletes a task from the list"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":" *"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":" * @param userInput This is the string input by the user"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":" */"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"public class DeleteTask {"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"    public static void execute(String userInput) throws BlankDescriptionException, OutOfRangeException, EmptyListException {"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"        int number \u003d Parser.parsingDeleteCommand(userInput);"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"        Task task \u003d Tasklist.getIndex(number);"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"        Tasklist.removeTask(task);"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"        System.out.println(DELETE_TASK_MESSAGE);"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":25}},{"path":"src/main/java/commands/Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.BlankDescriptionException;"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.InvalidSpaceException;"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.NoMatchesFoundException;"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.SearchLimitExceededException;"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import parser.Parser;"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Task;"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Tasklist;"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.searchResultsList;"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"import javax.naming.LimitExceededException;"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"import javax.naming.directory.SearchResult;"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"import java.util.ArrayList;"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":" * Method that searches for the presence of a string or sequence"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":" * of characters in the list, before outputting them in a list view for the user."},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":" * Accepts both string sequences with spacing, or without."},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":" *"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":" * @param userInput This is the string sequence which the user wants to search for"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":" */"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"public class Find {"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"    public static void execute(String userInput)"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"            throws InvalidSpaceException, BlankDescriptionException, NoMatchesFoundException {"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"        searchResultsList searchResults \u003d new searchResultsList();"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"        String keyword \u003d Parser.parsingFindCommand(userInput);"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"        for (Task task : Tasklist.viewTasks()) {"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"            if (task.description.contains(keyword)) {"},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"                searchResultsList.addTask(task);"},{"lineNumber":34,"author":{"gitId":"JonathanKhooTY"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":37,"author":{"gitId":"JonathanKhooTY"},"content":"        if (searchResultsList.isEmpty()) {"},{"lineNumber":38,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new NoMatchesFoundException();"},{"lineNumber":39,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":41,"author":{"gitId":"JonathanKhooTY"},"content":"        for (int i \u003d 0; i \u003c searchResults.getSize(); ++i) {"},{"lineNumber":42,"author":{"gitId":"JonathanKhooTY"},"content":"            Task task \u003d searchResults.getIndex(i);"},{"lineNumber":43,"author":{"gitId":"JonathanKhooTY"},"content":"            System.out.println(i + 1 + \".\" + task.getStatusIcon() + \" \""},{"lineNumber":44,"author":{"gitId":"JonathanKhooTY"},"content":"                    + task.getDescription());"},{"lineNumber":45,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":47,"author":{"gitId":"JonathanKhooTY"},"content":"        searchResultsList.clearList();"},{"lineNumber":48,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":49}},{"path":"src/main/java/commands/ListTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.EmptyListException;"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Task;"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Tasklist;"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":" * Method that lists all recorded tasks for the user"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":" */"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"public class ListTasks {"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"    public static void execute() throws EmptyListException {"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"        if (Tasklist.getSize() \u003d\u003d 0) {"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new EmptyListException();"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"        System.out.println(\"As of now, you have \" + Tasklist.getSize() + \" tasks!\");"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"        for (int i \u003d 0; i \u003c Tasklist.getSize(); ++i) {"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"            Task task \u003d Tasklist.getIndex(i);"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"            System.out.println(i + 1 + \".\" + task.getStatusIcon() + \" \""},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"                    + task.getDescription());"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":23}},{"path":"src/main/java/commands/MarkAsDone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.BlankDescriptionException;"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.OutOfRangeException;"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import parser.Parser;"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Task;"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Tasklist;"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"import static common.Messages.MARKED_AS_DONE_MESSAGE;"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":" * Method that marks a specified task as done"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":" *"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":" * @param userInput This is the task number that the user wants to"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":" *                  mark as completed. Task number can be accessed using"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":" *                  list method."},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":" */"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"public class MarkAsDone {"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"    public static void execute(String userInput) throws BlankDescriptionException, OutOfRangeException {"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"        int index \u003d Parser.parsingMarkAsDone(userInput);"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"        Task task \u003d Tasklist.getIndex(index);"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"        if (Tasklist.isCorrupted(task)) {"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"            System.out.println(\"Task is corrupted. Please delete.\");"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"            Tasklist.markTaskAsDone(index);"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"            System.out.println(MARKED_AS_DONE_MESSAGE);"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":31}},{"path":"src/main/java/commands/SystemExit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":" * This method exits the system"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":" */"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"public class SystemExit {"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"    public static void execute() {"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"        System.out.println(\"Bye! See you again!\");"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"        System.exit(0);"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":11}},{"path":"src/main/java/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package common;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":" * Collection of messages used by GuiltySpark for easy access"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":" */"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"public class Messages {"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"    public static final String WELCOME_MESSAGE \u003d \"Hellow! I\u0027m GuiltySpark. How may I help you?\";"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"    public static final String RECEIVE_MESSAGE \u003d \"Got it! Added that task to list!\";"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"    public static final String GETSIZE_MESSAGE \u003d \"Now you have 2 tasks\";"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"    public static final String BLANK_EXCEPTION_MESSAGE \u003d \"Looks like you\u0027re missing something! Try again!\";"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"    public static final String MISSING_DATE_EXCEPTION_MESSAGE"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"            \u003d \"Looks like there isn\u0027t a date/time set! Use a \u0027/\u0027 as a prefix!!\";"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"    public static final String EMPTY_LIST_EXCEPTION_MESSAGE \u003d \"Looks like your list is currently empty!\" +"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"            \" Populate it!\";"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"    public static final String DELETE_TASK_MESSAGE \u003d \"Task has been deleted from list!\";"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"    public static final String INVALID_NUMBER_MESSAGE \u003d \"Invalid value detected. Please input a number!\";"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"    public static final String OUT_OF_RANGE_MESSAGE \u003d \"Your number is out of the range of the list! Try again!\";"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"    public static final String SEARCH_LIMIT_EXCEEDED_MESSAGE \u003d \"I can only search for 1 keyword at a time! Try again!\";"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"    public static final String NO_MATCHES_FOUND_MESSAGE \u003d \"No tasks with that keyword exists!\";"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"    public static final String MARKED_AS_DONE_MESSAGE \u003d \"Your task has been marked as done!\";"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"    public static final String FILE_MODIFIED_MESSAGE \u003d \"I\u0027ve detected a modification to the TXT file! I\u0027m unable to parse it, and will reset it!\";"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":23}},{"path":"src/main/java/myexceptions/BlankDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package myexceptions;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class BlankDescriptionException extends Exception {"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":4}},{"path":"src/main/java/myexceptions/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package myexceptions;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class EmptyListException extends Exception {"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":4}},{"path":"src/main/java/myexceptions/FileModifiedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package myexceptions;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class FileModifiedException extends Exception{"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":4}},{"path":"src/main/java/myexceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package myexceptions;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":4}},{"path":"src/main/java/myexceptions/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package myexceptions;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class InvalidDateException extends Exception {"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":4}},{"path":"src/main/java/myexceptions/InvalidSpaceException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package myexceptions;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class InvalidSpaceException extends Exception{"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":4}},{"path":"src/main/java/myexceptions/MissingDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package myexceptions;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class MissingDateException extends Exception {"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":4}},{"path":"src/main/java/myexceptions/NoMatchesFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package myexceptions;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class NoMatchesFoundException extends Exception{"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":4}},{"path":"src/main/java/myexceptions/OutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package myexceptions;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class OutOfRangeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":4}},{"path":"src/main/java/myexceptions/SearchLimitExceededException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package myexceptions;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class SearchLimitExceededException extends Exception{"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":4}},{"path":"src/main/java/myexceptions/TodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package myexceptions;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class TodoException extends Exception {"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":4}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.*;"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.*;"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import java.util.Locale;"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":" * Parser which parses the user input before being used for"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":" * adding various tasks or accessing other method calls"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":" */"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"public class Parser {"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"     * Method that splits user input into 2 sections."},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"     * First section contains desired command"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"     * Second section contains the description of the task"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"     * @param text This is the user input. It is a string"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"     * @return String[] This returns an array, containing 2 fields"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"    public static String[] splitTextIntoTwoFields(String text) {"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"        String[] textArray \u003d text.split(\" \", 2);"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"        return textArray;"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"     * This method parses the user input and splits the description"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"     * portion of the todo task"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"     * @param userInput This refers to the string input by the user"},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"     * @return Todo(description) This returns an object of the Todo class"},{"lineNumber":34,"author":{"gitId":"JonathanKhooTY"},"content":"     * @throws BlankDescriptionException If no description is given"},{"lineNumber":35,"author":{"gitId":"JonathanKhooTY"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"JonathanKhooTY"},"content":"    public static Todo parsingTodo(String userInput) throws BlankDescriptionException {"},{"lineNumber":37,"author":{"gitId":"JonathanKhooTY"},"content":"        String[] textArray \u003d splitTextIntoTwoFields(userInput);"},{"lineNumber":38,"author":{"gitId":"JonathanKhooTY"},"content":"        if (textArray.length \u003c\u003d 1 || textArray[1].isBlank()) {"},{"lineNumber":39,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new BlankDescriptionException();"},{"lineNumber":40,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"JonathanKhooTY"},"content":"        String description \u003d textArray[1].trim();"},{"lineNumber":42,"author":{"gitId":"JonathanKhooTY"},"content":"        return new Todo(description);"},{"lineNumber":43,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":45,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":46,"author":{"gitId":"JonathanKhooTY"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"JonathanKhooTY"},"content":"     * This method parses the user input and splits it into"},{"lineNumber":48,"author":{"gitId":"JonathanKhooTY"},"content":"     * the description and due date"},{"lineNumber":49,"author":{"gitId":"JonathanKhooTY"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"JonathanKhooTY"},"content":"     * @param userInput This refers to the string input by the user"},{"lineNumber":51,"author":{"gitId":"JonathanKhooTY"},"content":"     * @return Deadline(description, by) This returns an object of"},{"lineNumber":52,"author":{"gitId":"JonathanKhooTY"},"content":"     * the Deadline class"},{"lineNumber":53,"author":{"gitId":"JonathanKhooTY"},"content":"     * @throws BlankDescriptionException if no description is given"},{"lineNumber":54,"author":{"gitId":"JonathanKhooTY"},"content":"     * @throws MissingDateException      if no due date is given"},{"lineNumber":55,"author":{"gitId":"JonathanKhooTY"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"JonathanKhooTY"},"content":"    public static Deadline parsingDeadline(String userInput) throws BlankDescriptionException, MissingDateException {"},{"lineNumber":57,"author":{"gitId":"JonathanKhooTY"},"content":"        String[] textArray \u003d splitTextIntoTwoFields(userInput);"},{"lineNumber":58,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":59,"author":{"gitId":"JonathanKhooTY"},"content":"        if (textArray.length \u003c\u003d 1) {"},{"lineNumber":60,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new BlankDescriptionException();"},{"lineNumber":61,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"JonathanKhooTY"},"content":"        String description \u003d textArray[1].trim();  //Prevents data overload, just in case"},{"lineNumber":63,"author":{"gitId":"JonathanKhooTY"},"content":"        String[] descriptionArray \u003d description.split(\"/\", 2);"},{"lineNumber":64,"author":{"gitId":"JonathanKhooTY"},"content":"        if (descriptionArray[0].isBlank()) {"},{"lineNumber":65,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new BlankDescriptionException();"},{"lineNumber":66,"author":{"gitId":"JonathanKhooTY"},"content":"        } else if (descriptionArray.length \u003c\u003d 1 || descriptionArray[1].isBlank()) {"},{"lineNumber":67,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new MissingDateException();"},{"lineNumber":68,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"JonathanKhooTY"},"content":"        description \u003d descriptionArray[0].trim();"},{"lineNumber":70,"author":{"gitId":"JonathanKhooTY"},"content":"        String by \u003d descriptionArray[1].trim();"},{"lineNumber":71,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":72,"author":{"gitId":"JonathanKhooTY"},"content":"        return new Deadline(description, by);"},{"lineNumber":73,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":75,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":76,"author":{"gitId":"JonathanKhooTY"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"JonathanKhooTY"},"content":"     * This method parses the user input and splits it into"},{"lineNumber":78,"author":{"gitId":"JonathanKhooTY"},"content":"     * the description and date of event"},{"lineNumber":79,"author":{"gitId":"JonathanKhooTY"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"JonathanKhooTY"},"content":"     * @param userInput This refers to the string input by the user"},{"lineNumber":81,"author":{"gitId":"JonathanKhooTY"},"content":"     * @return Event(description, by) This returns an object of"},{"lineNumber":82,"author":{"gitId":"JonathanKhooTY"},"content":"     * the Event class"},{"lineNumber":83,"author":{"gitId":"JonathanKhooTY"},"content":"     * @throws BlankDescriptionException if no description is given"},{"lineNumber":84,"author":{"gitId":"JonathanKhooTY"},"content":"     * @throws MissingDateException      if no date of event is given"},{"lineNumber":85,"author":{"gitId":"JonathanKhooTY"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"JonathanKhooTY"},"content":"    public static Event parsingEvent(String userInput) throws BlankDescriptionException, MissingDateException {"},{"lineNumber":87,"author":{"gitId":"JonathanKhooTY"},"content":"        String[] textArray \u003d splitTextIntoTwoFields(userInput);"},{"lineNumber":88,"author":{"gitId":"JonathanKhooTY"},"content":"        if (textArray.length \u003c\u003d 1) {"},{"lineNumber":89,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new BlankDescriptionException();"},{"lineNumber":90,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"JonathanKhooTY"},"content":"        String description \u003d textArray[1].trim();"},{"lineNumber":92,"author":{"gitId":"JonathanKhooTY"},"content":"        if (description.isBlank()) {"},{"lineNumber":93,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new BlankDescriptionException();"},{"lineNumber":94,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"JonathanKhooTY"},"content":"        String[] descriptionArray \u003d description.split(\"/\", 2);"},{"lineNumber":96,"author":{"gitId":"JonathanKhooTY"},"content":"        if (descriptionArray[0].isBlank()) {"},{"lineNumber":97,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new BlankDescriptionException();"},{"lineNumber":98,"author":{"gitId":"JonathanKhooTY"},"content":"        } else if (descriptionArray.length \u003c\u003d 1 || descriptionArray[1].isBlank()) {"},{"lineNumber":99,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new MissingDateException();"},{"lineNumber":100,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"JonathanKhooTY"},"content":"        description \u003d descriptionArray[0].trim();"},{"lineNumber":102,"author":{"gitId":"JonathanKhooTY"},"content":"        String by \u003d descriptionArray[1].trim();"},{"lineNumber":103,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":104,"author":{"gitId":"JonathanKhooTY"},"content":"        return new Event(description, by);"},{"lineNumber":105,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":107,"author":{"gitId":"JonathanKhooTY"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"JonathanKhooTY"},"content":"     * This method parses the user input and returns the index of"},{"lineNumber":109,"author":{"gitId":"JonathanKhooTY"},"content":"     * the task to be deleted"},{"lineNumber":110,"author":{"gitId":"JonathanKhooTY"},"content":"     *"},{"lineNumber":111,"author":{"gitId":"JonathanKhooTY"},"content":"     * @param userInput This is the number of the task that the user"},{"lineNumber":112,"author":{"gitId":"JonathanKhooTY"},"content":"     *                  wants to delete"},{"lineNumber":113,"author":{"gitId":"JonathanKhooTY"},"content":"     * @return Returns index of the task to be deleted"},{"lineNumber":114,"author":{"gitId":"JonathanKhooTY"},"content":"     * @throws BlankDescriptionException if no task number is given"},{"lineNumber":115,"author":{"gitId":"JonathanKhooTY"},"content":"     * @throws OutOfRangeException       if task number given is out of range"},{"lineNumber":116,"author":{"gitId":"JonathanKhooTY"},"content":"     *                                   of maximum task number in list"},{"lineNumber":117,"author":{"gitId":"JonathanKhooTY"},"content":"     * @throws EmptyListException        if list is empty"},{"lineNumber":118,"author":{"gitId":"JonathanKhooTY"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"JonathanKhooTY"},"content":"    public static int parsingDeleteCommand(String userInput) throws BlankDescriptionException, OutOfRangeException, EmptyListException {"},{"lineNumber":120,"author":{"gitId":"JonathanKhooTY"},"content":"        int taskNumber;"},{"lineNumber":121,"author":{"gitId":"JonathanKhooTY"},"content":"        String[] textArray \u003d splitTextIntoTwoFields(userInput);"},{"lineNumber":122,"author":{"gitId":"JonathanKhooTY"},"content":"        if (textArray.length \u003c\u003d 1) {"},{"lineNumber":123,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new BlankDescriptionException();"},{"lineNumber":124,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"JonathanKhooTY"},"content":"        taskNumber \u003d Integer.parseInt(textArray[1].strip());"},{"lineNumber":126,"author":{"gitId":"JonathanKhooTY"},"content":"        if (Tasklist.isEmpty()) {"},{"lineNumber":127,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new EmptyListException();"},{"lineNumber":128,"author":{"gitId":"JonathanKhooTY"},"content":"        } else if (taskNumber \u003e Tasklist.getSize() || taskNumber \u003c\u003d 0) {"},{"lineNumber":129,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new OutOfRangeException();"},{"lineNumber":130,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":132,"author":{"gitId":"JonathanKhooTY"},"content":"        return taskNumber - 1;"},{"lineNumber":133,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":134,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":136,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":137,"author":{"gitId":"JonathanKhooTY"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"JonathanKhooTY"},"content":"     * This method parses the user input and returns the keyword"},{"lineNumber":139,"author":{"gitId":"JonathanKhooTY"},"content":"     * that the user wants to search for"},{"lineNumber":140,"author":{"gitId":"JonathanKhooTY"},"content":"     *"},{"lineNumber":141,"author":{"gitId":"JonathanKhooTY"},"content":"     * @param userInput This is the user input"},{"lineNumber":142,"author":{"gitId":"JonathanKhooTY"},"content":"     * @return Returns the keyword that the user wants to search for"},{"lineNumber":143,"author":{"gitId":"JonathanKhooTY"},"content":"     * @throws BlankDescriptionException if no keyword that the user wants"},{"lineNumber":144,"author":{"gitId":"JonathanKhooTY"},"content":"     *                                   to search for is provided"},{"lineNumber":145,"author":{"gitId":"JonathanKhooTY"},"content":"     */"},{"lineNumber":146,"author":{"gitId":"JonathanKhooTY"},"content":"    public static String parsingFindCommand(String userInput)"},{"lineNumber":147,"author":{"gitId":"JonathanKhooTY"},"content":"            throws BlankDescriptionException {"},{"lineNumber":148,"author":{"gitId":"JonathanKhooTY"},"content":"        String[] textArray \u003d splitTextIntoTwoFields(userInput);"},{"lineNumber":149,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":150,"author":{"gitId":"JonathanKhooTY"},"content":"        if (textArray.length \u003c\u003d 1 || textArray[1].isBlank()) {"},{"lineNumber":151,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new BlankDescriptionException();"},{"lineNumber":152,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"JonathanKhooTY"},"content":"        String keyword \u003d textArray[1].trim();"},{"lineNumber":154,"author":{"gitId":"JonathanKhooTY"},"content":"        return keyword;"},{"lineNumber":155,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":157,"author":{"gitId":"JonathanKhooTY"},"content":"    /**"},{"lineNumber":158,"author":{"gitId":"JonathanKhooTY"},"content":"     * This method marks the specified task as completed"},{"lineNumber":159,"author":{"gitId":"JonathanKhooTY"},"content":"     *"},{"lineNumber":160,"author":{"gitId":"JonathanKhooTY"},"content":"     * @param userInput This is the task number for the task the user wants"},{"lineNumber":161,"author":{"gitId":"JonathanKhooTY"},"content":"     *                  to label as completed"},{"lineNumber":162,"author":{"gitId":"JonathanKhooTY"},"content":"     * @return Returns index of the task to be marked as completed"},{"lineNumber":163,"author":{"gitId":"JonathanKhooTY"},"content":"     * @throws BlankDescriptionException if no task number is provided"},{"lineNumber":164,"author":{"gitId":"JonathanKhooTY"},"content":"     * @throws OutOfRangeException       if task number given is out of range"},{"lineNumber":165,"author":{"gitId":"JonathanKhooTY"},"content":"     *                                   of maximum task number in list"},{"lineNumber":166,"author":{"gitId":"JonathanKhooTY"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"JonathanKhooTY"},"content":"    public static int parsingMarkAsDone(String userInput) throws BlankDescriptionException, OutOfRangeException {"},{"lineNumber":168,"author":{"gitId":"JonathanKhooTY"},"content":"        String[] textArray \u003d splitTextIntoTwoFields(userInput);"},{"lineNumber":169,"author":{"gitId":"JonathanKhooTY"},"content":"        if (textArray.length \u003c\u003d 1 || textArray[1].isBlank()) {"},{"lineNumber":170,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new BlankDescriptionException();"},{"lineNumber":171,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":173,"author":{"gitId":"JonathanKhooTY"},"content":"        int index \u003d Integer.parseInt(textArray[1].strip()) - 1;"},{"lineNumber":174,"author":{"gitId":"JonathanKhooTY"},"content":"        if (index \u003c 0 || index \u003e Tasklist.getSize() - 1) {"},{"lineNumber":175,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new OutOfRangeException();"},{"lineNumber":176,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"JonathanKhooTY"},"content":"        return index;"},{"lineNumber":178,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":179}},{"path":"src/main/java/storage/FileIntegrityChecker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.FileModifiedException;"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"public class FileIntegrityChecker {"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"    public static boolean isCorrupted(String nextLine) throws FileModifiedException {"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"        Character index0 \u003d nextLine.charAt(0);"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"        Character taskType \u003d nextLine.charAt(1);"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"        Character index2 \u003d nextLine.charAt(2);"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"        Character index3 \u003d nextLine.charAt(3);"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"        Character taskStatus \u003d nextLine.charAt(4);"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"        Character index5 \u003d nextLine.charAt(5);"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"        Integer startOfDateIndex \u003d nextLine.indexOf(\"\u003c\u003c\");"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"        Integer endOfDateIndex \u003d nextLine.lastIndexOf(\"\u003e\u003e\");"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"        if (!index0.equals(\u0027[\u0027) || !index2.equals(\u0027]\u0027) || !index3.equals(\u0027[\u0027) || !index5.equals(\u0027]\u0027)) {"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"            return true;"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"        } else if (!taskStatus.equals(\u00271\u0027) \u0026\u0026 !taskStatus.equals(\u00270\u0027)) {"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"            return true;"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"        } else if (!taskType.equals(\u0027T\u0027) \u0026\u0026 !taskType.equals(\u0027E\u0027) \u0026\u0026"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"                !taskType.equals(\u0027D\u0027)) {"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"            return true;"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"        } else if (taskType.equals(\u0027E\u0027) \u0026\u0026 (startOfDateIndex \u003d\u003d -1 ||"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"                endOfDateIndex \u003d\u003d -1)) {"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"            return true;"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"        } else if (taskType.equals(\u0027D\u0027) \u0026\u0026 (startOfDateIndex \u003d\u003d -1 ||"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"                endOfDateIndex \u003d\u003d -1)) {"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"            return true;"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"        return false;"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":33}},{"path":"src/main/java/storage/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.BlankDescriptionException;"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.FileModifiedException;"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Task;"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Tasklist;"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"import static common.Messages.FILE_MODIFIED_MESSAGE;"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":" * The methods here manage the file writing and reading, upon quitting and loading"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":" * GuiltySpark, respectively."},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":" */"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"public class FileManager {"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"     * This method writes the contents of the list to a text file"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"     * named Duke.txt. File writing takes place automatically upon quitting GuiltySpark"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"     * @param filePath This is the name of the text file to be written into"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"     * @param tasks    This is the task list"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"     * @throws IOException if file does not exist beforehand"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"    public static void writeToFile(String filePath, ArrayList\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":34,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":35,"author":{"gitId":"JonathanKhooTY"},"content":"        for (Task t : tasks) {"},{"lineNumber":36,"author":{"gitId":"JonathanKhooTY"},"content":"            fw.write(t.getStatusIcon() + \" \" + t.getDescription() + \"\\n\");"},{"lineNumber":37,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"JonathanKhooTY"},"content":"        fw.close();"},{"lineNumber":39,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":41,"author":{"gitId":"JonathanKhooTY"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"JonathanKhooTY"},"content":"     * This method transfers the contents of the list in the text file, into"},{"lineNumber":43,"author":{"gitId":"JonathanKhooTY"},"content":"     * the ArrayList"},{"lineNumber":44,"author":{"gitId":"JonathanKhooTY"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"JonathanKhooTY"},"content":"     * @param filePath This is the name of the text file to be read from"},{"lineNumber":46,"author":{"gitId":"JonathanKhooTY"},"content":"     * @throws FileNotFoundException     if the specified file name in filePath is not located"},{"lineNumber":47,"author":{"gitId":"JonathanKhooTY"},"content":"     * @throws BlankDescriptionException if the file is blank"},{"lineNumber":48,"author":{"gitId":"JonathanKhooTY"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"JonathanKhooTY"},"content":"    public static void restoreFileContents(String filePath) throws IOException, BlankDescriptionException {"},{"lineNumber":50,"author":{"gitId":"JonathanKhooTY"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"JonathanKhooTY"},"content":"            File f \u003d new File(filePath);"},{"lineNumber":52,"author":{"gitId":"JonathanKhooTY"},"content":"            Scanner s \u003d new Scanner(f);"},{"lineNumber":53,"author":{"gitId":"JonathanKhooTY"},"content":"            if (s.hasNext()) {"},{"lineNumber":54,"author":{"gitId":"JonathanKhooTY"},"content":"                System.out.println(\"Importing your saved list!\");"},{"lineNumber":55,"author":{"gitId":"JonathanKhooTY"},"content":"            } else {"},{"lineNumber":56,"author":{"gitId":"JonathanKhooTY"},"content":"                System.out.println(\"You do not have any saved list!\");"},{"lineNumber":57,"author":{"gitId":"JonathanKhooTY"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":59,"author":{"gitId":"JonathanKhooTY"},"content":"            while (s.hasNext()) {"},{"lineNumber":60,"author":{"gitId":"JonathanKhooTY"},"content":"                String nextTask \u003d s.nextLine();"},{"lineNumber":61,"author":{"gitId":"JonathanKhooTY"},"content":"                Tasklist.addTask(taskDecoder.taskDecoder(nextTask));"},{"lineNumber":62,"author":{"gitId":"JonathanKhooTY"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"JonathanKhooTY"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":64,"author":{"gitId":"JonathanKhooTY"},"content":"            new File(\"Spark.txt\").createNewFile();"},{"lineNumber":65,"author":{"gitId":"JonathanKhooTY"},"content":"        } catch (FileModifiedException e) {"},{"lineNumber":66,"author":{"gitId":"JonathanKhooTY"},"content":"            System.out.println(FILE_MODIFIED_MESSAGE);"},{"lineNumber":67,"author":{"gitId":"JonathanKhooTY"},"content":"            new File(\"Spark.txt\").createNewFile();"},{"lineNumber":68,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":70,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":71,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":72}},{"path":"src/main/java/storage/taskDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.BlankDescriptionException;"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import myexceptions.FileModifiedException;"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Deadline;"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Event;"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Task;"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Todo;"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":" * The task decoder converts the tasks in the text file, into a"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":" * parsable from in the GuiltySpark program"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":" */"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"public class taskDecoder {"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"     * The task decoder converts the tasks in the text file, into a"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"     * parsable from in the GuiltySpark program"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"     * @param nextLine This is the next line of text in the text file"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"     * @return returns the task"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"     * @throws BlankDescriptionException if description fields are blank"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"    public static Task taskDecoder(String nextLine) throws BlankDescriptionException, FileModifiedException {"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"        Boolean isCorrupted \u003d FileIntegrityChecker.isCorrupted(nextLine);"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"        if (isCorrupted) {"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"            System.out.println(\"Task detected to be corrupted...Marked for deletion.\");"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"            Task task \u003d new Task(\"Corrupted. Please delete.\");"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"            task.isCorrupted \u003d -1;"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"            return task;"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"        Character taskStatus \u003d nextLine.charAt(4);"},{"lineNumber":34,"author":{"gitId":"JonathanKhooTY"},"content":"        char taskType \u003d nextLine.charAt(1);"},{"lineNumber":35,"author":{"gitId":"JonathanKhooTY"},"content":"        String taskDescription \u003d nextLine.substring(7);"},{"lineNumber":36,"author":{"gitId":"JonathanKhooTY"},"content":"        Task task \u003d new Task(taskDescription);"},{"lineNumber":37,"author":{"gitId":"JonathanKhooTY"},"content":"        switch (taskType) {"},{"lineNumber":38,"author":{"gitId":"JonathanKhooTY"},"content":"        case \u0027T\u0027:"},{"lineNumber":39,"author":{"gitId":"JonathanKhooTY"},"content":"            task \u003d new Todo(taskDescription);"},{"lineNumber":40,"author":{"gitId":"JonathanKhooTY"},"content":"            if (taskStatus.equals(\u00271\u0027)) {"},{"lineNumber":41,"author":{"gitId":"JonathanKhooTY"},"content":"                task.isDone \u003d true;"},{"lineNumber":42,"author":{"gitId":"JonathanKhooTY"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"JonathanKhooTY"},"content":"            break;"},{"lineNumber":44,"author":{"gitId":"JonathanKhooTY"},"content":"        case \u0027E\u0027:"},{"lineNumber":45,"author":{"gitId":"JonathanKhooTY"},"content":"            int indexOfBy \u003d taskDescription.indexOf(\"\u003c\u003c\");"},{"lineNumber":46,"author":{"gitId":"JonathanKhooTY"},"content":"            String description \u003d taskDescription.substring(0, indexOfBy - 1);"},{"lineNumber":47,"author":{"gitId":"JonathanKhooTY"},"content":"            String by \u003d taskDescription.substring(indexOfBy + 1, taskDescription.lastIndexOf(\"\u003e\u003e\"));"},{"lineNumber":48,"author":{"gitId":"JonathanKhooTY"},"content":"            task \u003d new Event(description, by);"},{"lineNumber":49,"author":{"gitId":"JonathanKhooTY"},"content":"            if (taskStatus.equals(\u00271\u0027)) {"},{"lineNumber":50,"author":{"gitId":"JonathanKhooTY"},"content":"                task.isDone \u003d true;"},{"lineNumber":51,"author":{"gitId":"JonathanKhooTY"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"JonathanKhooTY"},"content":"            break;"},{"lineNumber":53,"author":{"gitId":"JonathanKhooTY"},"content":"        case \u0027D\u0027:"},{"lineNumber":54,"author":{"gitId":"JonathanKhooTY"},"content":"            indexOfBy \u003d taskDescription.indexOf(\"\u003c\u003c\");"},{"lineNumber":55,"author":{"gitId":"JonathanKhooTY"},"content":"            description \u003d taskDescription.substring(0, indexOfBy - 1);"},{"lineNumber":56,"author":{"gitId":"JonathanKhooTY"},"content":"            by \u003d taskDescription.substring(indexOfBy + 1, taskDescription.lastIndexOf(\"\u003e\u003e\"));"},{"lineNumber":57,"author":{"gitId":"JonathanKhooTY"},"content":"            task \u003d new Deadline(description, by);"},{"lineNumber":58,"author":{"gitId":"JonathanKhooTY"},"content":"            if (taskStatus.equals(\u00271\u0027)) {"},{"lineNumber":59,"author":{"gitId":"JonathanKhooTY"},"content":"                task.isDone \u003d true;"},{"lineNumber":60,"author":{"gitId":"JonathanKhooTY"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"JonathanKhooTY"},"content":"            break;"},{"lineNumber":62,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"JonathanKhooTY"},"content":"        return task;"},{"lineNumber":64,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":65}},{"path":"src/main/java/tasklist/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package tasklist;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Task;"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"    public String by;"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"        this.by \u003d by;"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"    public String getStatusIcon() {"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"        return \"[D]\" + \"[\" + super.getStatusIcon() + \"]\";"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"    public String getDescription() {"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"        return super.getDescription() + \" \" + \"\u003c\u003c \" + by + \" \u003e\u003e\";"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":26}},{"path":"src/main/java/tasklist/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package tasklist;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import tasklist.Task;"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"    public String by;"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"    public Event(String description, String by) {"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"        this.by \u003d by;"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"    public String getStatusIcon() {"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"        return \"[E]\" + \"[\" + super.getStatusIcon() + \"]\";"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"    public String getDescription() {"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"        return super.getDescription() + \" \" + \"\u003c\u003c \" + by + \" \u003e\u003e\";"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":24}},{"path":"src/main/java/tasklist/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package tasklist;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"    public int isCorrupted;"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"    public boolean isDone;"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"    public String description;"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"    public Task(String description) {"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"        this.description \u003d description;"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"        this.isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"        this.isCorrupted \u003d 0;"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"    public String getDescription() {"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"        return description;"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"    public String getStatusIcon() {"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"        return (isDone ? \"1\" : \"0\");"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":25}},{"path":"src/main/java/tasklist/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package tasklist;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"public class Tasklist {"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"    public static Boolean isCorrupted(Task task) {"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"        return (task.isCorrupted \u003d\u003d -1);"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"    public static void addTask(Task task) {"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"        tasks.add(task);"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"    public static void removeTask(Task task) {"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"        tasks.remove(task);"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"    public static ArrayList\u003cTask\u003e viewTasks() {"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"        return tasks;"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"    public static Task getIndex(int index) {"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"        return tasks.get(index);"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"    public static int getSize() {"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"        //System.out.println(GETSIZE_MESSAGE);"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"        return tasks.size();"},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":35,"author":{"gitId":"JonathanKhooTY"},"content":"    public static boolean isEmpty() {"},{"lineNumber":36,"author":{"gitId":"JonathanKhooTY"},"content":"        if (Tasklist.getSize() \u003d\u003d 0) {"},{"lineNumber":37,"author":{"gitId":"JonathanKhooTY"},"content":"            return true;"},{"lineNumber":38,"author":{"gitId":"JonathanKhooTY"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"JonathanKhooTY"},"content":"            return false;"},{"lineNumber":40,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":43,"author":{"gitId":"JonathanKhooTY"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":44,"author":{"gitId":"JonathanKhooTY"},"content":"        return tasks;"},{"lineNumber":45,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":47,"author":{"gitId":"JonathanKhooTY"},"content":"    public static void markTaskAsDone(int index) {"},{"lineNumber":48,"author":{"gitId":"JonathanKhooTY"},"content":"        Task task \u003d Tasklist.getIndex(index);"},{"lineNumber":49,"author":{"gitId":"JonathanKhooTY"},"content":"        task.isDone \u003d true;"},{"lineNumber":50,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":51}},{"path":"src/main/java/tasklist/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package tasklist;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"    public Todo(String description) {"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"    public String getStatusIcon() {"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"        return \"[T]\" + \"[\" + super.getStatusIcon() + \"]\";"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"    public String getDescription() {"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"        return super.getDescription();"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":19}},{"path":"src/main/java/tasklist/searchResultsList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package tasklist;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"public class searchResultsList {"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"    private static final ArrayList\u003cTask\u003e searchResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"    public static void addTask(Task task) {"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"        searchResults.add(task);"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"    public static void removeTask(Task task) {"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"        searchResults.remove(task);"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"    public static ArrayList\u003cTask\u003e viewTasks() {"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"        return searchResults;"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"    public static Task getIndex(int index) {"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"        return searchResults.get(index);"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"    public static int getSize() {"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"        return searchResults.size();"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"    public static boolean isEmpty() {"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"        if (searchResultsList.getSize() \u003d\u003d 0) {"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"            return true;"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"        } else {"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"            return false;"},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":36,"author":{"gitId":"JonathanKhooTY"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":37,"author":{"gitId":"JonathanKhooTY"},"content":"        return searchResults;"},{"lineNumber":38,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":40,"author":{"gitId":"JonathanKhooTY"},"content":"    public static void clearList() {"},{"lineNumber":41,"author":{"gitId":"JonathanKhooTY"},"content":"        searchResults.clear();"},{"lineNumber":42,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"JonathanKhooTY"},"content":"}"},{"lineNumber":44,"author":{"gitId":"JonathanKhooTY"},"content":""}],"authorContributionMap":{"JonathanKhooTY":44}},{"path":"src/main/java/ui/TextUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import static common.Messages.WELCOME_MESSAGE;"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"public class TextUI {"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"    private final Scanner in \u003d new Scanner(System.in);"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"    public TextUI() {"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"    public void printWelcomeMessage() {"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"        System.out.println(WELCOME_MESSAGE);"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"    public String getUserCommand() {"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"        System.out.print(\"What would you like to do? Enter command: \");"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"        String fullInputLine \u003d in.nextLine();"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"        return fullInputLine.toLowerCase().stripLeading();"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":""},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"}"}],"authorContributionMap":{"JonathanKhooTY":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"add Buy Milk"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"list"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"add return book"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"list"}],"authorContributionMap":{"JonathanKhooTY":4}}]
