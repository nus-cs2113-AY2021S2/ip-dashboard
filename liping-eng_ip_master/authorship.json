[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":"_**by Wong Li Ping**_"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":"## Introduction"},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"This project is named after the Java mascot Duke. Duke, is a command line "},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":"program to keep track of your tasks in a list."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":9,"author":{"gitId":"liping-eng"},"content":"Duke allows you to add three different type of tasks in your list:\u003cp\u003e"},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":"Todo - tasks you plan to do. This is denoted as `[T]` in your task list!\u003cbr\u003e"},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":"Deadline - tasks that contains a deadline. This is denoted as `[D]` in your task list!\u003cbr\u003e"},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":"Event - event you wish to attend. This is denoted as `[E]` in your task list!\u003cbr\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":"Duke saves your list of tasks every time you input your command `[Refer to Commands Section to learn more!]` and"},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":"saves your progress even after you exit the program!"},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"Duke can handle simple error handling too! "},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":"## Commands"},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":"#### Below is a table that illustrates the list of commands available."},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":"Command | Functionality"},{"lineNumber":21,"author":{"gitId":"liping-eng"},"content":"--------|---------------"},{"lineNumber":22,"author":{"gitId":"liping-eng"},"content":"todo \\\u003ctask\\\u003e | Adds a ToDo task object to the list"},{"lineNumber":23,"author":{"gitId":"liping-eng"},"content":"deadline \\\u003ctask\\\u003e \u003cbr\u003e/by \u003cdate/time\u003e | Adds a Deadline task object to the list"},{"lineNumber":24,"author":{"gitId":"liping-eng"},"content":"event \\\u003ctask\\\u003e \u003cbr\u003e/at \u003cvenue/date\u003e | Adds a Deadline task object to the list"},{"lineNumber":25,"author":{"gitId":"liping-eng"},"content":"list | Prints the tasks in a list with indexing"},{"lineNumber":26,"author":{"gitId":"liping-eng"},"content":"delete \\\u003ctask index\\\u003e | Removes the task at specified task index "},{"lineNumber":27,"author":{"gitId":"liping-eng"},"content":"done \\\u003ctask index\\\u003e | Mark task at specified task index with a `X`"},{"lineNumber":28,"author":{"gitId":"liping-eng"},"content":"find \\\u003ckeyword\\\u003e | Find and print tasks that contains the keyword"},{"lineNumber":29,"author":{"gitId":"liping-eng"},"content":"bye | Exits and terminates Duke. Progress is saved."},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"liping-eng"},"content":"### `todo` - Adds a ToDo task object to the list"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"liping-eng"},"content":"`todo cs2113t homework`"},{"lineNumber":39,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":40,"author":{"gitId":"liping-eng"},"content":"Expected outcome:"},{"lineNumber":41,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":42,"author":{"gitId":"liping-eng"},"content":"`Got it. I\u0027ve added this task:`\u003cbr\u003e"},{"lineNumber":43,"author":{"gitId":"liping-eng"},"content":"`[T][ ] cs2113t homework`\u003cbr\u003e"},{"lineNumber":44,"author":{"gitId":"liping-eng"},"content":"`Now you have 1 tasks in the list.`"},{"lineNumber":45,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":46,"author":{"gitId":"liping-eng"},"content":"### `deadline` - Adds a Deadline task object to the list"},{"lineNumber":47,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":48,"author":{"gitId":"liping-eng"},"content":"Example of usage:"},{"lineNumber":49,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":50,"author":{"gitId":"liping-eng"},"content":"`deadline cs2113t iP /by 5/3/2021 2359`"},{"lineNumber":51,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":52,"author":{"gitId":"liping-eng"},"content":"Expected outcome:"},{"lineNumber":53,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":54,"author":{"gitId":"liping-eng"},"content":"`[D][ ] cs2113t iP (by: 5/3/2021 2359)`\u003cbr\u003e"},{"lineNumber":55,"author":{"gitId":"liping-eng"},"content":"`Now you have 2 tasks in the list.`\u003cbr\u003e"},{"lineNumber":56,"author":{"gitId":"liping-eng"},"content":"`Got it. I\u0027ve added this task: `"},{"lineNumber":57,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":58,"author":{"gitId":"liping-eng"},"content":"###### Note: event command usage is similar."},{"lineNumber":59,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":60,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":61,"author":{"gitId":"liping-eng"},"content":"### `list` - Prints the tasks in a list with indexing"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"liping-eng"},"content":"Example of usage:"},{"lineNumber":64,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":65,"author":{"gitId":"liping-eng"},"content":"`list`"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"liping-eng"},"content":"`Here are the tasks in your list:`\u003cbr\u003e"},{"lineNumber":70,"author":{"gitId":"liping-eng"},"content":"`1.[T][ ] cs2113t homework`\u003cbr\u003e"},{"lineNumber":71,"author":{"gitId":"liping-eng"},"content":"`2.[D][ ] cs2113t iP (by: 5/3/2021 2359)`\u003cbr\u003e"},{"lineNumber":72,"author":{"gitId":"liping-eng"},"content":"`3.[T][ ] read book`"},{"lineNumber":73,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":74,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":75,"author":{"gitId":"liping-eng"},"content":"### `find` - Find and print tasks that contains the keyword"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"liping-eng"},"content":"`find cs2113t`"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"liping-eng"},"content":"`Here are the matching tasks in your list:`\u003cbr\u003e"},{"lineNumber":84,"author":{"gitId":"liping-eng"},"content":"`1.[T][ ] cs2113t homework`\u003cbr\u003e"},{"lineNumber":85,"author":{"gitId":"liping-eng"},"content":"`2.[D][ ] cs2113t iP (by: 5/3/2021 2359)`\u003cbr\u003e"},{"lineNumber":86,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":87,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":88,"author":{"gitId":"liping-eng"},"content":"###### Duke is still not capable of doing many functions sadly..."},{"lineNumber":89,"author":{"gitId":"liping-eng"},"content":"###### pst... He is trying his best to learn! :)"},{"lineNumber":90,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":91,"author":{"gitId":"liping-eng"},"content":"### `random` - User inputs random words"},{"lineNumber":92,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":93,"author":{"gitId":"liping-eng"},"content":"Example of usage:"},{"lineNumber":94,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":95,"author":{"gitId":"liping-eng"},"content":"`I love software programming!`"},{"lineNumber":96,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":97,"author":{"gitId":"liping-eng"},"content":"Expected outcome:"},{"lineNumber":98,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":99,"author":{"gitId":"liping-eng"},"content":"`OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(`"},{"lineNumber":100,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":101,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":102,"author":{"gitId":"liping-eng"},"content":"### Hope you have fun using Duke! More functionalities to come...!"},{"lineNumber":103,"author":{"gitId":"liping-eng"},"content":""}],"authorContributionMap":{"liping-eng":81,"-":22}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"T|0|read book"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":"D|0|return book|29/2/2021"},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"T|1|          "},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":"D|0||today"},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"E|0||tonight"},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":"E|1|something 1|2359"}],"authorContributionMap":{"liping-eng":6}},{"path":"src/main/java/duke/Constant.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"public class Constant {"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":"    public static final int TODO_COMMAND \u003d 5;"},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"    public static final int EVENT_COMMAND \u003d 6;"},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":"    public static final int DEADLINE_COMMAND \u003d 9;"},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":"}"}],"authorContributionMap":{"liping-eng":7}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":"    protected String by;"},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":"    public String getDescription() {"},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":"        return \"D\" + \"|\" + (isDone ? \"1\" : \"0\") + \"|\" + this.description + \"|\" + by;"},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":"}"}],"authorContributionMap":{"liping-eng":20}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":" * Main program class to start Duke."},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":"    public static boolean isRunning;"},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":"    private final Storage storage;"},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":"    private TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":"    private Ui ui;"},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":"     * Creation of text file to store user inputs if file does not exist."},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":"     * @param filePath"},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":"    public Duke(String filePath) {"},{"lineNumber":21,"author":{"gitId":"liping-eng"},"content":"        ui \u003d new Ui();"},{"lineNumber":22,"author":{"gitId":"liping-eng"},"content":"        storage \u003d new Storage();"},{"lineNumber":23,"author":{"gitId":"liping-eng"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":24,"author":{"gitId":"liping-eng"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"liping-eng"},"content":"            storage.readFile(filePath, tasks);"},{"lineNumber":26,"author":{"gitId":"liping-eng"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"liping-eng"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":28,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":31,"author":{"gitId":"liping-eng"},"content":"    public void run() throws MissingTaskException {"},{"lineNumber":32,"author":{"gitId":"liping-eng"},"content":"        Ui.printStart();"},{"lineNumber":33,"author":{"gitId":"liping-eng"},"content":"        isRunning \u003d true;"},{"lineNumber":34,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":35,"author":{"gitId":"liping-eng"},"content":"        while(isRunning) {"},{"lineNumber":36,"author":{"gitId":"liping-eng"},"content":"            Parser.selectCommand(tasks);"},{"lineNumber":37,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":39,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":41,"author":{"gitId":"liping-eng"},"content":"    public static void main(String[] args) throws MissingTaskException {"},{"lineNumber":42,"author":{"gitId":"liping-eng"},"content":"        String filePath \u003d new File(\"\").getAbsolutePath();"},{"lineNumber":43,"author":{"gitId":"liping-eng"},"content":"        new Duke(filePath).run();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"liping-eng":42,"-":3}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":"    public Event(String description, String at) {"},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":"        this.at \u003d at;"},{"lineNumber":9,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":"    public String getDescription() {"},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":"        return \"E\" + \"|\" + (isDone ? \"1\" : \"0\") + \"|\" + this.description + \"|\" + at;"},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":"}"}],"authorContributionMap":{"liping-eng":20}},{"path":"src/main/java/duke/MissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"public class MissingTaskException extends Exception {"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"}"}],"authorContributionMap":{"liping-eng":5}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"import static duke.Constant.*;"},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":" * To make sense of commands by user."},{"lineNumber":9,"author":{"gitId":"liping-eng"},"content":" */"},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":"public class Parser {"},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":"    public static final Scanner SCANNER \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":"     * To run the type of command given by the user."},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"     * @param tasks"},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":"     * @throws MissingTaskException"},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":"    public static void selectCommand(TaskList tasks) throws MissingTaskException {"},{"lineNumber":21,"author":{"gitId":"liping-eng"},"content":"        String userInput \u003d \"\";"},{"lineNumber":22,"author":{"gitId":"liping-eng"},"content":"        userInput \u003d SCANNER.nextLine();"},{"lineNumber":23,"author":{"gitId":"liping-eng"},"content":"        Ui.printBorder();"},{"lineNumber":24,"author":{"gitId":"liping-eng"},"content":"        if (userInput.trim().equals(\"bye\")) {"},{"lineNumber":25,"author":{"gitId":"liping-eng"},"content":"            Storage.writeToFile(tasks);"},{"lineNumber":26,"author":{"gitId":"liping-eng"},"content":"            Ui.printBye();"},{"lineNumber":27,"author":{"gitId":"liping-eng"},"content":"            Duke.isRunning \u003d false;"},{"lineNumber":28,"author":{"gitId":"liping-eng"},"content":"            return;"},{"lineNumber":29,"author":{"gitId":"liping-eng"},"content":"        } else if (userInput.startsWith(\"list\")) {"},{"lineNumber":30,"author":{"gitId":"liping-eng"},"content":"            TaskList.listTasks();"},{"lineNumber":31,"author":{"gitId":"liping-eng"},"content":"        } else if (userInput.split(\" \")[0].equals(\"done\")) {"},{"lineNumber":32,"author":{"gitId":"liping-eng"},"content":"            if (userInput.length() \u003c 6) {"},{"lineNumber":33,"author":{"gitId":"liping-eng"},"content":"                Ui.printEmptyCommand(\"done\");"},{"lineNumber":34,"author":{"gitId":"liping-eng"},"content":"                return;"},{"lineNumber":35,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"liping-eng"},"content":"            try {"},{"lineNumber":37,"author":{"gitId":"liping-eng"},"content":"                TaskList.markTaskDone(userInput);"},{"lineNumber":38,"author":{"gitId":"liping-eng"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":39,"author":{"gitId":"liping-eng"},"content":"                System.out.println(\"No index found. Please key an appropriate index\");"},{"lineNumber":40,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":42,"author":{"gitId":"liping-eng"},"content":"            Storage.writeToFile(tasks);"},{"lineNumber":43,"author":{"gitId":"liping-eng"},"content":"        } else if (userInput.split(\" \")[0].equals(\"todo\")) {"},{"lineNumber":44,"author":{"gitId":"liping-eng"},"content":"            if (userInput.length() \u003c\u003d TODO_COMMAND) {"},{"lineNumber":45,"author":{"gitId":"liping-eng"},"content":"                Ui.printEmptyCommand(\"todo\");"},{"lineNumber":46,"author":{"gitId":"liping-eng"},"content":"                return;"},{"lineNumber":47,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":49,"author":{"gitId":"liping-eng"},"content":"            try {"},{"lineNumber":50,"author":{"gitId":"liping-eng"},"content":"                emptyTask(userInput, TODO_COMMAND);"},{"lineNumber":51,"author":{"gitId":"liping-eng"},"content":"                TaskList.addTodoTask(userInput);"},{"lineNumber":52,"author":{"gitId":"liping-eng"},"content":"                Storage.writeToFile(tasks);"},{"lineNumber":53,"author":{"gitId":"liping-eng"},"content":"            } catch (MissingTaskException e) {"},{"lineNumber":54,"author":{"gitId":"liping-eng"},"content":"                System.out.println(\"Please key in an appropriate task.\");"},{"lineNumber":55,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"liping-eng"},"content":"        } else if (userInput.split(\" \")[0].equals(\"deadline\")) {"},{"lineNumber":57,"author":{"gitId":"liping-eng"},"content":"            if (userInput.length() \u003c\u003d DEADLINE_COMMAND) {"},{"lineNumber":58,"author":{"gitId":"liping-eng"},"content":"                Ui.printEmptyCommand(\"deadline\");"},{"lineNumber":59,"author":{"gitId":"liping-eng"},"content":"                return;"},{"lineNumber":60,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"liping-eng"},"content":"            String by;"},{"lineNumber":62,"author":{"gitId":"liping-eng"},"content":"            String processedDeadlineInput;"},{"lineNumber":63,"author":{"gitId":"liping-eng"},"content":"            int getSlashIndex \u003d userInput.indexOf(\"/by\");"},{"lineNumber":64,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":65,"author":{"gitId":"liping-eng"},"content":"            try {"},{"lineNumber":66,"author":{"gitId":"liping-eng"},"content":"                emptyTask(userInput, DEADLINE_COMMAND);"},{"lineNumber":67,"author":{"gitId":"liping-eng"},"content":"                by \u003d userInput.substring(getSlashIndex + 4);"},{"lineNumber":68,"author":{"gitId":"liping-eng"},"content":"                processedDeadlineInput \u003d userInput.substring(9, getSlashIndex).trim();"},{"lineNumber":69,"author":{"gitId":"liping-eng"},"content":"                TaskList.addDeadlineTask(by, processedDeadlineInput);"},{"lineNumber":70,"author":{"gitId":"liping-eng"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":71,"author":{"gitId":"liping-eng"},"content":"                Storage.writeToFile(tasks);"},{"lineNumber":72,"author":{"gitId":"liping-eng"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":73,"author":{"gitId":"liping-eng"},"content":"                System.out.println(\"Incorrect Slash input! \" +"},{"lineNumber":74,"author":{"gitId":"liping-eng"},"content":"                        \"Try again! Do deadline /by \u003csomething\u003e\");"},{"lineNumber":75,"author":{"gitId":"liping-eng"},"content":"            } catch (MissingTaskException e) {"},{"lineNumber":76,"author":{"gitId":"liping-eng"},"content":"                System.out.println(\"Please key in an appropriate task.\");"},{"lineNumber":77,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"liping-eng"},"content":"        } else if (userInput.split(\" \")[0].equals(\"event\")) {"},{"lineNumber":79,"author":{"gitId":"liping-eng"},"content":"            if (userInput.length() \u003c\u003d EVENT_COMMAND) {"},{"lineNumber":80,"author":{"gitId":"liping-eng"},"content":"                Ui.printEmptyCommand(\"event\");"},{"lineNumber":81,"author":{"gitId":"liping-eng"},"content":"                return;"},{"lineNumber":82,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":84,"author":{"gitId":"liping-eng"},"content":"            String at;"},{"lineNumber":85,"author":{"gitId":"liping-eng"},"content":"            String processedEventInput;"},{"lineNumber":86,"author":{"gitId":"liping-eng"},"content":"            int getSlashIndex;"},{"lineNumber":87,"author":{"gitId":"liping-eng"},"content":"            getSlashIndex \u003d userInput.indexOf(\"/at\");"},{"lineNumber":88,"author":{"gitId":"liping-eng"},"content":"            try {"},{"lineNumber":89,"author":{"gitId":"liping-eng"},"content":"                emptyTask(userInput, EVENT_COMMAND);"},{"lineNumber":90,"author":{"gitId":"liping-eng"},"content":"                at \u003d userInput.substring(getSlashIndex + 4).trim();"},{"lineNumber":91,"author":{"gitId":"liping-eng"},"content":"                processedEventInput \u003d userInput.substring(6, getSlashIndex).trim();"},{"lineNumber":92,"author":{"gitId":"liping-eng"},"content":"                TaskList.addEventTask(at, processedEventInput);"},{"lineNumber":93,"author":{"gitId":"liping-eng"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":94,"author":{"gitId":"liping-eng"},"content":"                Storage.writeToFile(tasks);"},{"lineNumber":95,"author":{"gitId":"liping-eng"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":96,"author":{"gitId":"liping-eng"},"content":"                System.out.println(\"Incorrect Slash input! \" +"},{"lineNumber":97,"author":{"gitId":"liping-eng"},"content":"                        \"Try again! Do event /at \u003csomething\u003e\");"},{"lineNumber":98,"author":{"gitId":"liping-eng"},"content":"            } catch (MissingTaskException e) {"},{"lineNumber":99,"author":{"gitId":"liping-eng"},"content":"                System.out.println(\"Please key in an appropriate task.\");"},{"lineNumber":100,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":102,"author":{"gitId":"liping-eng"},"content":"        } else if (userInput.split(\" \")[0].equals(\"delete\")) {"},{"lineNumber":103,"author":{"gitId":"liping-eng"},"content":"            if (userInput.length() \u003c 8) {"},{"lineNumber":104,"author":{"gitId":"liping-eng"},"content":"                Ui.printEmptyCommand(\"delete\");"},{"lineNumber":105,"author":{"gitId":"liping-eng"},"content":"                return;"},{"lineNumber":106,"author":{"gitId":"liping-eng"},"content":"            } else {"},{"lineNumber":107,"author":{"gitId":"liping-eng"},"content":"                int processedInput;"},{"lineNumber":108,"author":{"gitId":"liping-eng"},"content":"                processedInput \u003d Integer.parseInt"},{"lineNumber":109,"author":{"gitId":"liping-eng"},"content":"                        (userInput.replaceAll(\"[^0-9]\", \"\")) - 1;"},{"lineNumber":110,"author":{"gitId":"liping-eng"},"content":"                try {"},{"lineNumber":111,"author":{"gitId":"liping-eng"},"content":"                    System.out.println(\"  \" + tasks.getProcessedInputAtIndex(processedInput));"},{"lineNumber":112,"author":{"gitId":"liping-eng"},"content":"                    tasks.removeTask(processedInput);"},{"lineNumber":113,"author":{"gitId":"liping-eng"},"content":"                    System.out.println(\"I\u0027ve removed the above task for you!\");"},{"lineNumber":114,"author":{"gitId":"liping-eng"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":115,"author":{"gitId":"liping-eng"},"content":"                    Storage.writeToFile(tasks);"},{"lineNumber":116,"author":{"gitId":"liping-eng"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":117,"author":{"gitId":"liping-eng"},"content":"                    System.out.println(\"No index found. Please key an appropriate index\");"},{"lineNumber":118,"author":{"gitId":"liping-eng"},"content":"                }"},{"lineNumber":119,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":120,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":121,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"liping-eng"},"content":"        } else if (userInput.split(\" \")[0].equals(\"find\")) {"},{"lineNumber":123,"author":{"gitId":"liping-eng"},"content":"            System.out.println(\"Here are the matching tasks in your list: \");"},{"lineNumber":124,"author":{"gitId":"liping-eng"},"content":"            TaskList.findTask(userInput.split(\" \")[1]);"},{"lineNumber":125,"author":{"gitId":"liping-eng"},"content":"        } else {"},{"lineNumber":126,"author":{"gitId":"liping-eng"},"content":"            Ui.printWrongCommand();"},{"lineNumber":127,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":129,"author":{"gitId":"liping-eng"},"content":"        Ui.printBorder();"},{"lineNumber":130,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":132,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"liping-eng"},"content":"     * Checks if the task input by the user is an empty task."},{"lineNumber":134,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":135,"author":{"gitId":"liping-eng"},"content":"     * @param userInput"},{"lineNumber":136,"author":{"gitId":"liping-eng"},"content":"     * @param commandLength"},{"lineNumber":137,"author":{"gitId":"liping-eng"},"content":"     * @throws MissingTaskException"},{"lineNumber":138,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"liping-eng"},"content":"    public static void emptyTask(String userInput, int commandLength) throws MissingTaskException {"},{"lineNumber":140,"author":{"gitId":"liping-eng"},"content":"        if(userInput.substring(commandLength).replace(\" \",\"\").isEmpty()) {"},{"lineNumber":141,"author":{"gitId":"liping-eng"},"content":"            throw new MissingTaskException();"},{"lineNumber":142,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"liping-eng"},"content":"}"}],"authorContributionMap":{"liping-eng":144}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":"import java.io.File;"},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":9,"author":{"gitId":"liping-eng"},"content":"public class Storage {"},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":"     * @param filePath"},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":"     * @param tasks"},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":"     * @throws IOException"},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"    public static void readFile(String filePath, TaskList tasks) throws IOException {"},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":"        File file \u003d new File(filePath + \"/duke.txt\");"},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":"            if (file.createNewFile()){"},{"lineNumber":21,"author":{"gitId":"liping-eng"},"content":"                System.out.println(\"file created at current location: \""},{"lineNumber":22,"author":{"gitId":"liping-eng"},"content":"                        + String.format(file.getAbsolutePath()));"},{"lineNumber":23,"author":{"gitId":"liping-eng"},"content":"            } else {"},{"lineNumber":24,"author":{"gitId":"liping-eng"},"content":"                System.out.println(\"file already exist at current location: \""},{"lineNumber":25,"author":{"gitId":"liping-eng"},"content":"                        + String.format(file.getAbsolutePath()));"},{"lineNumber":26,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"liping-eng"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"liping-eng"},"content":"            System.out.println(\"There was an error when creating file. Try again!\");"},{"lineNumber":29,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":31,"author":{"gitId":"liping-eng"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"liping-eng"},"content":"            Scanner SCANNER \u003d new Scanner(file);"},{"lineNumber":33,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":34,"author":{"gitId":"liping-eng"},"content":"            while(SCANNER.hasNextLine()) {"},{"lineNumber":35,"author":{"gitId":"liping-eng"},"content":"                String[] split \u003d SCANNER.nextLine().split(\"\\\\|\",0);"},{"lineNumber":36,"author":{"gitId":"liping-eng"},"content":"                String taskType \u003d split[0];"},{"lineNumber":37,"author":{"gitId":"liping-eng"},"content":"                String isDoneString \u003d split[1];"},{"lineNumber":38,"author":{"gitId":"liping-eng"},"content":"                String taskDetails \u003d split[2];"},{"lineNumber":39,"author":{"gitId":"liping-eng"},"content":"                Boolean isDone;"},{"lineNumber":40,"author":{"gitId":"liping-eng"},"content":"                if(isDoneString.equals(\"1\")) {"},{"lineNumber":41,"author":{"gitId":"liping-eng"},"content":"                    isDone \u003d true;"},{"lineNumber":42,"author":{"gitId":"liping-eng"},"content":"                } else {"},{"lineNumber":43,"author":{"gitId":"liping-eng"},"content":"                    isDone \u003d false;"},{"lineNumber":44,"author":{"gitId":"liping-eng"},"content":"                }"},{"lineNumber":45,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":46,"author":{"gitId":"liping-eng"},"content":"                switch (taskType) {"},{"lineNumber":47,"author":{"gitId":"liping-eng"},"content":"                    case \"T\":"},{"lineNumber":48,"author":{"gitId":"liping-eng"},"content":"                        Task task \u003d new Todo(taskDetails);"},{"lineNumber":49,"author":{"gitId":"liping-eng"},"content":"                        if (isDone) {"},{"lineNumber":50,"author":{"gitId":"liping-eng"},"content":"                            task.setDone();"},{"lineNumber":51,"author":{"gitId":"liping-eng"},"content":"                        }"},{"lineNumber":52,"author":{"gitId":"liping-eng"},"content":"                        tasks.addTask(task);"},{"lineNumber":53,"author":{"gitId":"liping-eng"},"content":"                        break;"},{"lineNumber":54,"author":{"gitId":"liping-eng"},"content":"                    case \"E\":"},{"lineNumber":55,"author":{"gitId":"liping-eng"},"content":"                        String at \u003d split[3];"},{"lineNumber":56,"author":{"gitId":"liping-eng"},"content":"                        task \u003d new Event(taskDetails, at);"},{"lineNumber":57,"author":{"gitId":"liping-eng"},"content":"                        if (isDone) {"},{"lineNumber":58,"author":{"gitId":"liping-eng"},"content":"                            task.setDone();"},{"lineNumber":59,"author":{"gitId":"liping-eng"},"content":"                        }"},{"lineNumber":60,"author":{"gitId":"liping-eng"},"content":"                        tasks.addTask(task);"},{"lineNumber":61,"author":{"gitId":"liping-eng"},"content":"                        break;"},{"lineNumber":62,"author":{"gitId":"liping-eng"},"content":"                    case \"D\":"},{"lineNumber":63,"author":{"gitId":"liping-eng"},"content":"                        String by \u003d split[3];"},{"lineNumber":64,"author":{"gitId":"liping-eng"},"content":"                        task \u003d new Deadline(taskDetails, by);"},{"lineNumber":65,"author":{"gitId":"liping-eng"},"content":"                        if (isDone) {"},{"lineNumber":66,"author":{"gitId":"liping-eng"},"content":"                            task.setDone();"},{"lineNumber":67,"author":{"gitId":"liping-eng"},"content":"                        }"},{"lineNumber":68,"author":{"gitId":"liping-eng"},"content":"                        tasks.addTask(task);"},{"lineNumber":69,"author":{"gitId":"liping-eng"},"content":"                        break;"},{"lineNumber":70,"author":{"gitId":"liping-eng"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":72,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"liping-eng"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":74,"author":{"gitId":"liping-eng"},"content":"            System.out.println(e + \"caught.\");"},{"lineNumber":75,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":76,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":79,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"liping-eng"},"content":"     * Update duke.txt file each time a new task is added/delete/marked."},{"lineNumber":81,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"liping-eng"},"content":"     * @param tasks"},{"lineNumber":83,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"liping-eng"},"content":"    public static void writeToFile(TaskList tasks) {"},{"lineNumber":85,"author":{"gitId":"liping-eng"},"content":"        String filePath \u003d new File(\"\").getAbsolutePath();"},{"lineNumber":86,"author":{"gitId":"liping-eng"},"content":"        filePath \u003d filePath + \"/duke.txt\";"},{"lineNumber":87,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":88,"author":{"gitId":"liping-eng"},"content":"        try {"},{"lineNumber":89,"author":{"gitId":"liping-eng"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);"},{"lineNumber":90,"author":{"gitId":"liping-eng"},"content":"            for(int i\u003d0; i\u003ctasks.size(); i++) {"},{"lineNumber":91,"author":{"gitId":"liping-eng"},"content":"                fileWriter.write(tasks.getDescriptionAtIndex(i) + \"\\n\");"},{"lineNumber":92,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"liping-eng"},"content":"            fileWriter.flush();"},{"lineNumber":94,"author":{"gitId":"liping-eng"},"content":"            fileWriter.close();"},{"lineNumber":95,"author":{"gitId":"liping-eng"},"content":"        } catch (IOException e) {"},{"lineNumber":96,"author":{"gitId":"liping-eng"},"content":"            System.out.println(\"Error while writing to file. Try again!\");"},{"lineNumber":97,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"liping-eng"},"content":"}"}],"authorContributionMap":{"liping-eng":99}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":9,"author":{"gitId":"liping-eng"},"content":"    public Task(String description) {"},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":"        this.description \u003d description;"},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":"        this.isDone \u003d false;"},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":"    public String getDescription() {"},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":"        return \"\";"},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"    public String getStatusIcon(boolean isDone) {"},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":"    return (isDone ? \"[X] \" : \"[ ] \");"},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":"}"},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":21,"author":{"gitId":"liping-eng"},"content":"    public void setDone() {"},{"lineNumber":22,"author":{"gitId":"liping-eng"},"content":"        isDone \u003d true;"},{"lineNumber":23,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":25,"author":{"gitId":"liping-eng"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"liping-eng"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"liping-eng"},"content":"        return getStatusIcon(isDone) + description;"},{"lineNumber":28,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":30,"author":{"gitId":"liping-eng"},"content":"}"},{"lineNumber":31,"author":{"gitId":"liping-eng"},"content":""}],"authorContributionMap":{"liping-eng":31}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":" * Stores the list of tasks in an ArrayList."},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":" * Performs operations on a list of task which includes"},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":" * delete, done, add tasks, i.e."},{"lineNumber":9,"author":{"gitId":"liping-eng"},"content":" * todo, event, deadline, which signifies type of tasks to the list."},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":" */"},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":"    private static ArrayList\u003cTask\u003e tasks;"},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":"    public TaskList() {"},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"liping-eng"},"content":"     * List all the tasks saved into duke.txt through"},{"lineNumber":22,"author":{"gitId":"liping-eng"},"content":"     * the operations available,"},{"lineNumber":23,"author":{"gitId":"liping-eng"},"content":"     * i.e. todo, event, deadline, done, delete."},{"lineNumber":24,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"liping-eng"},"content":"    public static void listTasks() {"},{"lineNumber":26,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Here are the tasks in your list: \");"},{"lineNumber":27,"author":{"gitId":"liping-eng"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":28,"author":{"gitId":"liping-eng"},"content":"            System.out.print(i + 1 + \".\");"},{"lineNumber":29,"author":{"gitId":"liping-eng"},"content":"            System.out.println(tasks.get(i).toString());"},{"lineNumber":30,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":33,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"liping-eng"},"content":"     * Mark the task with a cross given index of the task in the list."},{"lineNumber":35,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"liping-eng"},"content":"     * @param userInput"},{"lineNumber":37,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"liping-eng"},"content":"    public static void markTaskDone(String userInput) {"},{"lineNumber":39,"author":{"gitId":"liping-eng"},"content":"        int processedInput;"},{"lineNumber":40,"author":{"gitId":"liping-eng"},"content":"        processedInput \u003d Integer.parseInt(userInput.replaceAll(\"[^0-9]\", \"\")) - 1;"},{"lineNumber":41,"author":{"gitId":"liping-eng"},"content":"        tasks.get(processedInput).setDone();"},{"lineNumber":42,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":43,"author":{"gitId":"liping-eng"},"content":"        System.out.println(tasks.get(processedInput));"},{"lineNumber":44,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":46,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"liping-eng"},"content":"     * Add ToDo task into the bottom of the list."},{"lineNumber":48,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"liping-eng"},"content":"     * @param userInput"},{"lineNumber":50,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"liping-eng"},"content":"    public static void addTodoTask(String userInput) {"},{"lineNumber":52,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":53,"author":{"gitId":"liping-eng"},"content":"        Task newTask \u003d new Todo(userInput.substring(5));"},{"lineNumber":54,"author":{"gitId":"liping-eng"},"content":"        tasks.add(newTask);"},{"lineNumber":55,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"  \" + newTask.toString());"},{"lineNumber":56,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":57,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":59,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"liping-eng"},"content":"     * Add Deadline task into the bottom of the list."},{"lineNumber":61,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"liping-eng"},"content":"     * @param by The date/time inputted by the user for the Deadline task."},{"lineNumber":63,"author":{"gitId":"liping-eng"},"content":"     * @param processedDeadlineInput The description of Deadline task."},{"lineNumber":64,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"liping-eng"},"content":"    public static void addDeadlineTask(String by, String processedDeadlineInput) {"},{"lineNumber":66,"author":{"gitId":"liping-eng"},"content":"        Task newTask \u003d new Deadline(processedDeadlineInput, by);"},{"lineNumber":67,"author":{"gitId":"liping-eng"},"content":"        tasks.add(newTask);"},{"lineNumber":68,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"  \" + newTask.toString());"},{"lineNumber":69,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":70,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":72,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"liping-eng"},"content":"     * Add Event task into the bottom of the list."},{"lineNumber":74,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"liping-eng"},"content":"     * @param at The venue/date inputted by the user for Event task."},{"lineNumber":76,"author":{"gitId":"liping-eng"},"content":"     * @param processedEventInput The description of Event task."},{"lineNumber":77,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"liping-eng"},"content":"    public static void addEventTask(String at, String processedEventInput) {"},{"lineNumber":79,"author":{"gitId":"liping-eng"},"content":"        Task newTask \u003d new Event(processedEventInput, at);"},{"lineNumber":80,"author":{"gitId":"liping-eng"},"content":"        tasks.add(newTask);"},{"lineNumber":81,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"  \" + newTask.toString());"},{"lineNumber":82,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":83,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":85,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"liping-eng"},"content":"     * Find and print the list of tasks available in the tasks list"},{"lineNumber":87,"author":{"gitId":"liping-eng"},"content":"     * by finding words in each task object description."},{"lineNumber":88,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"liping-eng"},"content":"     * @param targetInput Keyword specified by the user."},{"lineNumber":90,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"liping-eng"},"content":"    public static void findTask(String targetInput) {"},{"lineNumber":92,"author":{"gitId":"liping-eng"},"content":"        int count \u003d 0;"},{"lineNumber":93,"author":{"gitId":"liping-eng"},"content":"        for(Task t : tasks) {"},{"lineNumber":94,"author":{"gitId":"liping-eng"},"content":"            String[] mySplit \u003d t.toString().split(\" \");"},{"lineNumber":95,"author":{"gitId":"liping-eng"},"content":"            for(String s: mySplit) {"},{"lineNumber":96,"author":{"gitId":"liping-eng"},"content":"                if(s.equals(targetInput)) {"},{"lineNumber":97,"author":{"gitId":"liping-eng"},"content":"                    count +\u003d 1;"},{"lineNumber":98,"author":{"gitId":"liping-eng"},"content":"                    System.out.println(count + \". \" + t);"},{"lineNumber":99,"author":{"gitId":"liping-eng"},"content":"                }"},{"lineNumber":100,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":103,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":105,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"liping-eng"},"content":"     * Gets the description of all the tasks inputted by user"},{"lineNumber":107,"author":{"gitId":"liping-eng"},"content":"     * since the start of the program."},{"lineNumber":108,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":109,"author":{"gitId":"liping-eng"},"content":"     * @param i Index to loop through in list of tasks to write to file."},{"lineNumber":110,"author":{"gitId":"liping-eng"},"content":"     * @return Description of each task."},{"lineNumber":111,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"liping-eng"},"content":"    public String getDescriptionAtIndex(int i) {"},{"lineNumber":113,"author":{"gitId":"liping-eng"},"content":"        return tasks.get(i).getDescription();"},{"lineNumber":114,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":116,"author":{"gitId":"liping-eng"},"content":"    public int size() {"},{"lineNumber":117,"author":{"gitId":"liping-eng"},"content":"        return tasks.size();"},{"lineNumber":118,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":120,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"liping-eng"},"content":"     * Add new tasks when reading duke.txt file"},{"lineNumber":122,"author":{"gitId":"liping-eng"},"content":"     * at the start of the program."},{"lineNumber":123,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":124,"author":{"gitId":"liping-eng"},"content":"     * @param newTask"},{"lineNumber":125,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"liping-eng"},"content":"    public void addTask(Task newTask) {"},{"lineNumber":127,"author":{"gitId":"liping-eng"},"content":"        tasks.add(newTask);"},{"lineNumber":128,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":130,"author":{"gitId":"liping-eng"},"content":"    public void removeTask(int i) {"},{"lineNumber":131,"author":{"gitId":"liping-eng"},"content":"        tasks.remove(i);"},{"lineNumber":132,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":134,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"liping-eng"},"content":"     * Get task that user wants to delete."},{"lineNumber":136,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":137,"author":{"gitId":"liping-eng"},"content":"     * @param processedInput Index retrieved to delete a task."},{"lineNumber":138,"author":{"gitId":"liping-eng"},"content":"     * @return task to be deleted by the user."},{"lineNumber":139,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"liping-eng"},"content":"    public String getProcessedInputAtIndex(int processedInput) {"},{"lineNumber":141,"author":{"gitId":"liping-eng"},"content":"        return String.valueOf(tasks.get(processedInput));"},{"lineNumber":142,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"liping-eng"},"content":"}"}],"authorContributionMap":{"liping-eng":143}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":9,"author":{"gitId":"liping-eng"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":"    public String getDescription() {"},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":"        return \"T\" + \"|\" + (isDone ? \"1\" : \"0\") + \"|\" + this.description;"},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"}"}],"authorContributionMap":{"liping-eng":17}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"    public static void printStart() {"},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":9,"author":{"gitId":"liping-eng"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"    public static void printBorder() {"},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"------------------------------------\");"},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":21,"author":{"gitId":"liping-eng"},"content":"    public static void printBye() {"},{"lineNumber":22,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":23,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":25,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"liping-eng"},"content":"     * Prints error message when command is empty."},{"lineNumber":27,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"liping-eng"},"content":"     * @param emptyCommand Command that follows an empty user input."},{"lineNumber":29,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"liping-eng"},"content":"    public static void printEmptyCommand(String emptyCommand) {"},{"lineNumber":31,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"OOPS!!! The description of a \" + emptyCommand + \" cannot be empty.\");"},{"lineNumber":32,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":34,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"liping-eng"},"content":"     * Prints error message when command is not any operations define in TaskList."},{"lineNumber":36,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"liping-eng"},"content":"    public static void printWrongCommand() {"},{"lineNumber":38,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":39,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"liping-eng"},"content":"}"}],"authorContributionMap":{"liping-eng":40}}]
