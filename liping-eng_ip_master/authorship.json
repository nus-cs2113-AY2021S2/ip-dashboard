[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":"_**by Wong Li Ping**_"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":"## Table of Contents"},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"[Introduction](#introduction)  "},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":"[Getting Started with Duke](#getting-started-with-duke)  "},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":"[Features](#features)  "},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Adding of Tasks](#adding-of-tasks)  "},{"lineNumber":9,"author":{"gitId":"liping-eng"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Deletion of Tasks](#deletion-of-tasks)  "},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Listing of Tasks](#listing-of-tasks)  "},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Marking of Tasks](#marking-of-tasks)  "},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[Finding of Tasks](#finding-of-tasks)  "},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":"[Command Summary](#command-summary)  "},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":"[Usage](#usage)"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":"## Introduction"},{"lineNumber":21,"author":{"gitId":"liping-eng"},"content":"This project is named after the Java mascot Duke. Duke, is a command line "},{"lineNumber":22,"author":{"gitId":"liping-eng"},"content":"program to keep track of your tasks in a list."},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"liping-eng"},"content":"## Getting started with Duke"},{"lineNumber":25,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":26,"author":{"gitId":"liping-eng"},"content":"__Duke__ is run with a file ending with extension `.jar`. Click [here](https://github.com/liping-eng/ip/releases) to download the JAR file for running latest version of __Duke__."},{"lineNumber":27,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":28,"author":{"gitId":"liping-eng"},"content":"1. Open your Command Line on your desktop.  "},{"lineNumber":29,"author":{"gitId":"liping-eng"},"content":"2. Go to the directory where you stored the JAR file.  "},{"lineNumber":30,"author":{"gitId":"liping-eng"},"content":"3. Key in `java -jar \u003cName of JAR file\u003e`.  "},{"lineNumber":31,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":32,"author":{"gitId":"liping-eng"},"content":"Now you should see __Duke__ welcoming you!"},{"lineNumber":33,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":35,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":36,"author":{"gitId":"liping-eng"},"content":"### Adding of Tasks  "},{"lineNumber":37,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":38,"author":{"gitId":"liping-eng"},"content":"Duke allows you to add three different type of tasks in your list:\u003cp\u003e"},{"lineNumber":39,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":40,"author":{"gitId":"liping-eng"},"content":"- Todo - tasks you plan to do. This is denoted as `[T]` in your task list!\u003cbr\u003e"},{"lineNumber":41,"author":{"gitId":"liping-eng"},"content":"- Deadline - tasks that contains a deadline. This is denoted as `[D]` in your task list!\u003cbr\u003e"},{"lineNumber":42,"author":{"gitId":"liping-eng"},"content":"Event - event you wish to attend. This is denoted as `[E]` in your task list!\u003cbr\u003e"},{"lineNumber":43,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":44,"author":{"gitId":"liping-eng"},"content":"- Duke saves your list of tasks every time you input your command `[Refer to Commands Section to learn more!]` and"},{"lineNumber":45,"author":{"gitId":"liping-eng"},"content":"saves your progress even after you exit the program!"},{"lineNumber":46,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":47,"author":{"gitId":"liping-eng"},"content":"### Deletion of Tasks  "},{"lineNumber":48,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":49,"author":{"gitId":"liping-eng"},"content":"Duke also allows you to delete tasks from your list. Below is the before and after of the list of tasks with the use of command `delete 1`."},{"lineNumber":50,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":51,"author":{"gitId":"liping-eng"},"content":"#### Initial List  "},{"lineNumber":52,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":53,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":54,"author":{"gitId":"liping-eng"},"content":"Here are the tasks in your list:  "},{"lineNumber":55,"author":{"gitId":"liping-eng"},"content":"1.[T][X] read book  "},{"lineNumber":56,"author":{"gitId":"liping-eng"},"content":"2.[D][ ] return book (by: 29/2/2021)"},{"lineNumber":57,"author":{"gitId":"liping-eng"},"content":"3.[T][ ] math homework"},{"lineNumber":58,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":59,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":60,"author":{"gitId":"liping-eng"},"content":"Input:"},{"lineNumber":61,"author":{"gitId":"liping-eng"},"content":"`delete 1`"},{"lineNumber":62,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":63,"author":{"gitId":"liping-eng"},"content":"#### Final List"},{"lineNumber":64,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":65,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":66,"author":{"gitId":"liping-eng"},"content":"Here are the tasks in your list:"},{"lineNumber":67,"author":{"gitId":"liping-eng"},"content":"1.[D][ ] return book (by: 29/2/2021)"},{"lineNumber":68,"author":{"gitId":"liping-eng"},"content":"2.[T][ ] math homework"},{"lineNumber":69,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":70,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":71,"author":{"gitId":"liping-eng"},"content":"### Listing of Tasks  "},{"lineNumber":72,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":73,"author":{"gitId":"liping-eng"},"content":"Duke allows you to list all of your tasks with the command `list`. Below is an illustration of the use of command `list`."},{"lineNumber":74,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":75,"author":{"gitId":"liping-eng"},"content":"Input: `list`"},{"lineNumber":76,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":77,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":78,"author":{"gitId":"liping-eng"},"content":"Here are the tasks in your list: "},{"lineNumber":79,"author":{"gitId":"liping-eng"},"content":"1.[D][ ] return book (by: 29/2/2021)"},{"lineNumber":80,"author":{"gitId":"liping-eng"},"content":"2.[T][ ] maths homework"},{"lineNumber":81,"author":{"gitId":"liping-eng"},"content":"3.[T][ ] english assignment"},{"lineNumber":82,"author":{"gitId":"liping-eng"},"content":"4.[T][ ] english practice paper"},{"lineNumber":83,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":84,"author":{"gitId":"liping-eng"},"content":"### Marking of Tasks  "},{"lineNumber":85,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":86,"author":{"gitId":"liping-eng"},"content":"Duke allows you to mark tasks as done! Below shows the before and after list of tasks with the use of command `done 1`."},{"lineNumber":87,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":88,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":89,"author":{"gitId":"liping-eng"},"content":"Here are the tasks in your list:  "},{"lineNumber":90,"author":{"gitId":"liping-eng"},"content":"1.[D][ ] return book (by: 29/2/2021)"},{"lineNumber":91,"author":{"gitId":"liping-eng"},"content":"2.[T][ ] math homework"},{"lineNumber":92,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":93,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":94,"author":{"gitId":"liping-eng"},"content":"Input:"},{"lineNumber":95,"author":{"gitId":"liping-eng"},"content":"`done 1`"},{"lineNumber":96,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":97,"author":{"gitId":"liping-eng"},"content":"#### Final List"},{"lineNumber":98,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":99,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":100,"author":{"gitId":"liping-eng"},"content":"Here are the tasks in your list:"},{"lineNumber":101,"author":{"gitId":"liping-eng"},"content":"1.[D][X] return book (by: 29/2/2021)"},{"lineNumber":102,"author":{"gitId":"liping-eng"},"content":"2.[T][ ] math homework"},{"lineNumber":103,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":104,"author":{"gitId":"liping-eng"},"content":"### Finding of Tasks  "},{"lineNumber":105,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":106,"author":{"gitId":"liping-eng"},"content":"Duke can help you find your tasks in the list too! Given a word, Duke can help to filter out tasks that contain the keyword you specified!  "},{"lineNumber":107,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":108,"author":{"gitId":"liping-eng"},"content":"Below shows the initial list of tasks and the filtered list of tasks that contains the keyword."},{"lineNumber":109,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":110,"author":{"gitId":"liping-eng"},"content":"#### Initial List"},{"lineNumber":111,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":112,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":113,"author":{"gitId":"liping-eng"},"content":"Here are the tasks in your list: "},{"lineNumber":114,"author":{"gitId":"liping-eng"},"content":"1.[D][ ] return book (by: 29/2/2021)"},{"lineNumber":115,"author":{"gitId":"liping-eng"},"content":"2.[T][ ] maths homework"},{"lineNumber":116,"author":{"gitId":"liping-eng"},"content":"3.[T][ ] english assignment"},{"lineNumber":117,"author":{"gitId":"liping-eng"},"content":"4.[T][ ] english practice paper"},{"lineNumber":118,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":119,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":120,"author":{"gitId":"liping-eng"},"content":"Input: `find english`"},{"lineNumber":121,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":122,"author":{"gitId":"liping-eng"},"content":"#### Filtered List"},{"lineNumber":123,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":124,"author":{"gitId":"liping-eng"},"content":"Here are the matching tasks in your list: "},{"lineNumber":125,"author":{"gitId":"liping-eng"},"content":"1. [T][ ] english assignment"},{"lineNumber":126,"author":{"gitId":"liping-eng"},"content":"2. [T][ ] english practice paper"},{"lineNumber":127,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":128,"author":{"gitId":"liping-eng"},"content":"Duke can handle simple error handling too! "},{"lineNumber":129,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":130,"author":{"gitId":"liping-eng"},"content":"## Command Summary  "},{"lineNumber":131,"author":{"gitId":"liping-eng"},"content":"#### Below is a table that illustrates the list of commands available."},{"lineNumber":132,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":133,"author":{"gitId":"liping-eng"},"content":"Command | Functionality  "},{"lineNumber":134,"author":{"gitId":"liping-eng"},"content":"--------------- | ---------------   "},{"lineNumber":135,"author":{"gitId":"liping-eng"},"content":"todo \\\u003ctask\\\u003e | Adds a ToDo task object to the list  "},{"lineNumber":136,"author":{"gitId":"liping-eng"},"content":"deadline \\\u003ctask\\\u003e /by \\\u003cdate or time\\\u003e | Adds a Deadline task object to the list  "},{"lineNumber":137,"author":{"gitId":"liping-eng"},"content":"event \\\u003ctask\\\u003e /at \\\u003cvenue or date\\\u003e | Adds a Deadline task object to the list  "},{"lineNumber":138,"author":{"gitId":"liping-eng"},"content":"list | Prints the tasks in a list with indexing  "},{"lineNumber":139,"author":{"gitId":"liping-eng"},"content":"delete \\\u003ctask index\\\u003e | Removes the task at specified task index   "},{"lineNumber":140,"author":{"gitId":"liping-eng"},"content":"done \\\u003ctask index\\\u003e | Mark task at specified task index with a `X`  "},{"lineNumber":141,"author":{"gitId":"liping-eng"},"content":"find \\\u003ckeyword\\\u003e | Find and print tasks that contains the keyword  "},{"lineNumber":142,"author":{"gitId":"liping-eng"},"content":"bye | Exits and terminates Duke. Progress is saved.  "},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"liping-eng"},"content":"###### Note: \\\u003csomething\\\u003e refers to user input to be decided by the user."},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"liping-eng"},"content":"This section shows input and expected output of the commands with the use of examples.  "},{"lineNumber":149,"author":{"gitId":"liping-eng"},"content":"Note: Words CAPITALISED in this section refers user input to be decided by the user.  "},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"liping-eng"},"content":"### `todo` - Adds a ToDo task object to the list"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"liping-eng"},"content":"Format:  "},{"lineNumber":154,"author":{"gitId":"liping-eng"},"content":"`todo TASK DESCRIPTION`  "},{"lineNumber":155,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"liping-eng"},"content":"`todo cs2113t homework`"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":162,"author":{"gitId":"liping-eng"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":163,"author":{"gitId":"liping-eng"},"content":"[T][ ] cs2113t homework"},{"lineNumber":164,"author":{"gitId":"liping-eng"},"content":"Now you have 1 tasks in the list."},{"lineNumber":165,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":166,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":167,"author":{"gitId":"liping-eng"},"content":"### `deadline` - Adds a Deadline task object to the list"},{"lineNumber":168,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":169,"author":{"gitId":"liping-eng"},"content":"Format:  "},{"lineNumber":170,"author":{"gitId":"liping-eng"},"content":"`deadline TASK DESCRIPTION /by TIMING DESCRIPTION`  "},{"lineNumber":171,"author":{"gitId":"liping-eng"},"content":"Example of usage:"},{"lineNumber":172,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":173,"author":{"gitId":"liping-eng"},"content":"`deadline cs2113t iP /by 5/3/2021 2359`"},{"lineNumber":174,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":175,"author":{"gitId":"liping-eng"},"content":"Expected outcome:"},{"lineNumber":176,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":177,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":178,"author":{"gitId":"liping-eng"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":179,"author":{"gitId":"liping-eng"},"content":"[D][ ] cs2113t iP (by: 5/3/2021 2359)"},{"lineNumber":180,"author":{"gitId":"liping-eng"},"content":"Now you have 2 tasks in the list."},{"lineNumber":181,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":182,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":183,"author":{"gitId":"liping-eng"},"content":"### `event` - Adds a Event task object to the list"},{"lineNumber":184,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":185,"author":{"gitId":"liping-eng"},"content":"Format:  "},{"lineNumber":186,"author":{"gitId":"liping-eng"},"content":"`event TASK DESCRIPTION /at TIMING DESCRIPTION`  "},{"lineNumber":187,"author":{"gitId":"liping-eng"},"content":"Example of usage:"},{"lineNumber":188,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":189,"author":{"gitId":"liping-eng"},"content":"`event informal dinner /at NUS 5/3/2021`"},{"lineNumber":190,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":191,"author":{"gitId":"liping-eng"},"content":"Expected outcome:"},{"lineNumber":192,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":193,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":194,"author":{"gitId":"liping-eng"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":195,"author":{"gitId":"liping-eng"},"content":"[E][ ] informal dinner (at: NUS 5/3/2021)"},{"lineNumber":196,"author":{"gitId":"liping-eng"},"content":"Now you have 5 tasks in the list."},{"lineNumber":197,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":198,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":199,"author":{"gitId":"liping-eng"},"content":"### `list` - Prints the tasks in a list with indexing"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"liping-eng"},"content":"Format:  "},{"lineNumber":202,"author":{"gitId":"liping-eng"},"content":"`list`  "},{"lineNumber":203,"author":{"gitId":"liping-eng"},"content":"Example of usage:"},{"lineNumber":204,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":205,"author":{"gitId":"liping-eng"},"content":"`list`"},{"lineNumber":206,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":207,"author":{"gitId":"liping-eng"},"content":"Expected outcome:"},{"lineNumber":208,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":209,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":210,"author":{"gitId":"liping-eng"},"content":"Here are the tasks in your list:"},{"lineNumber":211,"author":{"gitId":"liping-eng"},"content":"1.[T][ ] cs2113t homework"},{"lineNumber":212,"author":{"gitId":"liping-eng"},"content":"2.[D][ ] cs2113t iP (by: 5/3/2021 2359)"},{"lineNumber":213,"author":{"gitId":"liping-eng"},"content":"3.[T][ ] read book"},{"lineNumber":214,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":215,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":216,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":217,"author":{"gitId":"liping-eng"},"content":"### `delete` - Delete and print the remaining tasks in the list"},{"lineNumber":218,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":219,"author":{"gitId":"liping-eng"},"content":"#### Initial List"},{"lineNumber":220,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":221,"author":{"gitId":"liping-eng"},"content":"Here are the tasks in your list: "},{"lineNumber":222,"author":{"gitId":"liping-eng"},"content":"1.[D][ ] return book (by: 29/2/2021)"},{"lineNumber":223,"author":{"gitId":"liping-eng"},"content":"2.[T][ ] maths homework"},{"lineNumber":224,"author":{"gitId":"liping-eng"},"content":"3.[T][ ] english assignment"},{"lineNumber":225,"author":{"gitId":"liping-eng"},"content":"4.[T][ ] english practice paper"},{"lineNumber":226,"author":{"gitId":"liping-eng"},"content":"5.[T][ ] science reading"},{"lineNumber":227,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":228,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":229,"author":{"gitId":"liping-eng"},"content":"Format:  "},{"lineNumber":230,"author":{"gitId":"liping-eng"},"content":"`delete NUMBERING`  "},{"lineNumber":231,"author":{"gitId":"liping-eng"},"content":"Example of usage:"},{"lineNumber":232,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":233,"author":{"gitId":"liping-eng"},"content":"`delete 5`"},{"lineNumber":234,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":235,"author":{"gitId":"liping-eng"},"content":"Expected outcome:"},{"lineNumber":236,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":237,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":238,"author":{"gitId":"liping-eng"},"content":"[T][ ] science reading"},{"lineNumber":239,"author":{"gitId":"liping-eng"},"content":"I\u0027ve removed the above task for you!"},{"lineNumber":240,"author":{"gitId":"liping-eng"},"content":"Now you have 4 tasks in the list."},{"lineNumber":241,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":242,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":243,"author":{"gitId":"liping-eng"},"content":"### `done` - Marks a task as done"},{"lineNumber":244,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":245,"author":{"gitId":"liping-eng"},"content":"#### Initial List"},{"lineNumber":246,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":247,"author":{"gitId":"liping-eng"},"content":"Here are the tasks in your list: "},{"lineNumber":248,"author":{"gitId":"liping-eng"},"content":"1.[D][ ] return book (by: 29/2/2021)"},{"lineNumber":249,"author":{"gitId":"liping-eng"},"content":"2.[T][ ] maths homework"},{"lineNumber":250,"author":{"gitId":"liping-eng"},"content":"3.[T][ ] english assignment"},{"lineNumber":251,"author":{"gitId":"liping-eng"},"content":"4.[T][ ] english practice paper"},{"lineNumber":252,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":253,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":254,"author":{"gitId":"liping-eng"},"content":"Format:  "},{"lineNumber":255,"author":{"gitId":"liping-eng"},"content":"`done NUMBERING`  "},{"lineNumber":256,"author":{"gitId":"liping-eng"},"content":"Example of usage:"},{"lineNumber":257,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":258,"author":{"gitId":"liping-eng"},"content":"`done 3`"},{"lineNumber":259,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":260,"author":{"gitId":"liping-eng"},"content":"Expected outcome:"},{"lineNumber":261,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":262,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":263,"author":{"gitId":"liping-eng"},"content":"Nice! I\u0027ve marked this task as done: "},{"lineNumber":264,"author":{"gitId":"liping-eng"},"content":"[T][X] english assignment"},{"lineNumber":265,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":266,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":267,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":268,"author":{"gitId":"liping-eng"},"content":"### `find` - Find and print tasks that contains the keyword"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"liping-eng"},"content":"Format:  "},{"lineNumber":271,"author":{"gitId":"liping-eng"},"content":"`find KEYWORD`  "},{"lineNumber":272,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"liping-eng"},"content":"`find cs2113t`"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":279,"author":{"gitId":"liping-eng"},"content":"Here are the matching tasks in your list:"},{"lineNumber":280,"author":{"gitId":"liping-eng"},"content":"1.[T][ ] cs2113t homework"},{"lineNumber":281,"author":{"gitId":"liping-eng"},"content":"2.[D][ ] cs2113t iP (by: 5/3/2021 2359)"},{"lineNumber":282,"author":{"gitId":"liping-eng"},"content":"````"},{"lineNumber":283,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":284,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":285,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":286,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":287,"author":{"gitId":"liping-eng"},"content":"###### Duke is still not capable of doing many functions sadly..."},{"lineNumber":288,"author":{"gitId":"liping-eng"},"content":"###### pst... He is trying his best to learn! :)"},{"lineNumber":289,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":290,"author":{"gitId":"liping-eng"},"content":"### `random` - User inputs random words"},{"lineNumber":291,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":292,"author":{"gitId":"liping-eng"},"content":"Example of usage:"},{"lineNumber":293,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":294,"author":{"gitId":"liping-eng"},"content":"`I love software programming!`"},{"lineNumber":295,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":296,"author":{"gitId":"liping-eng"},"content":"Expected outcome:"},{"lineNumber":297,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":298,"author":{"gitId":"liping-eng"},"content":"`OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(`"},{"lineNumber":299,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":300,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":301,"author":{"gitId":"liping-eng"},"content":"### Hope you have fun using Duke! More functionalities to come...!"},{"lineNumber":302,"author":{"gitId":"liping-eng"},"content":""}],"authorContributionMap":{"liping-eng":279,"-":23}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"D|1|return book|29/2/2021"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":"T|0|maths homework"},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"T|0|english practice paper"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":"E|0|informal dinner|NUS 5/3/2021"}],"authorContributionMap":{"liping-eng":4}},{"path":"src/main/java/duke/Constant.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"public class Constant {"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":"    public static final int TODO_COMMAND \u003d 5;"},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"    public static final int EVENT_COMMAND \u003d 6;"},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":"    public static final int DEADLINE_COMMAND \u003d 9;"},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":"    public static final int DONE_COMMAND \u003d 5;"},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":"    public static final int DELETE_COMMAND \u003d 7;"},{"lineNumber":9,"author":{"gitId":"liping-eng"},"content":"    public static final int FIND_COMMAND \u003d 5;"},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":"    public static final String BYE_STR_COMMAND \u003d \"bye\";"},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":"    public static final String LIST_STR_COMMAND \u003d \"list\";"},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":"    public static final String DONE_STR_COMMAND \u003d \"done\";"},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":"    public static final String TODO_STR_COMMAND \u003d \"todo\";"},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":"    public static final String DEADLINE_STR_COMMAND \u003d \"deadline\";"},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":"    public static final String EVENT_STR_COMMAND \u003d \"event\";"},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"    public static final String DELETE_STR_COMMAND \u003d \"delete\";"},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":"    public static final String FIND_STR_COMMAND \u003d \"find\";"},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":"    public static final String SLASH_AT_STR \u003d \"/at\";"},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":"    public static final String SLASH_BY_STR \u003d \"/by\";"},{"lineNumber":21,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":22,"author":{"gitId":"liping-eng"},"content":"    public static final String MARK_DONE \u003d \"1\";"},{"lineNumber":23,"author":{"gitId":"liping-eng"},"content":"    public static final String MARK_UNDONE \u003d \"0\";"},{"lineNumber":24,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":25,"author":{"gitId":"liping-eng"},"content":"    public static final String TODO_TASK_TYPE \u003d \"T\";"},{"lineNumber":26,"author":{"gitId":"liping-eng"},"content":"    public static final String DEADLINE_TASK_TYPE \u003d \"D\";"},{"lineNumber":27,"author":{"gitId":"liping-eng"},"content":"    public static final String EVENT_TASK_TYPE \u003d \"E\";"},{"lineNumber":28,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":29,"author":{"gitId":"liping-eng"},"content":"}"}],"authorContributionMap":{"liping-eng":29}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"import static duke.Constant.*;"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":"    protected String by;"},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":9,"author":{"gitId":"liping-eng"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":"        this.by \u003d by;"},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":"    public String getDescription() {"},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":"        return DEADLINE_TASK_TYPE + \"|\" + (isDone ? MARK_DONE : MARK_UNDONE)"},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":"                + \"|\" + this.description + \"|\" + by;"},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"liping-eng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":22,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"liping-eng"},"content":"}"}],"authorContributionMap":{"liping-eng":23}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":" * Main program class to start Duke."},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":"    public static boolean isRunning;"},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":"    private final Storage storage;"},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":"    private TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":"    private Ui ui;"},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":"     * Creation of text file to store user inputs if file does not exist."},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":"     * @param filePath"},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":"    public Duke(String filePath) {"},{"lineNumber":21,"author":{"gitId":"liping-eng"},"content":"        ui \u003d new Ui();"},{"lineNumber":22,"author":{"gitId":"liping-eng"},"content":"        storage \u003d new Storage();"},{"lineNumber":23,"author":{"gitId":"liping-eng"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":24,"author":{"gitId":"liping-eng"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"liping-eng"},"content":"            storage.readFile(filePath, tasks);"},{"lineNumber":26,"author":{"gitId":"liping-eng"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"liping-eng"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":28,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":31,"author":{"gitId":"liping-eng"},"content":"    public void run() {"},{"lineNumber":32,"author":{"gitId":"liping-eng"},"content":"        Ui.printStart();"},{"lineNumber":33,"author":{"gitId":"liping-eng"},"content":"        isRunning \u003d true;"},{"lineNumber":34,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":35,"author":{"gitId":"liping-eng"},"content":"        while (isRunning) {"},{"lineNumber":36,"author":{"gitId":"liping-eng"},"content":"            try {"},{"lineNumber":37,"author":{"gitId":"liping-eng"},"content":"                Parser.selectCommand(tasks);"},{"lineNumber":38,"author":{"gitId":"liping-eng"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":39,"author":{"gitId":"liping-eng"},"content":"                Ui.printErrorMessageOnWhitespaces();"},{"lineNumber":40,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":43,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":45,"author":{"gitId":"liping-eng"},"content":"    public static void main(String[] args) {"},{"lineNumber":46,"author":{"gitId":"liping-eng"},"content":"        String filePath \u003d new File(\"\").getAbsolutePath();"},{"lineNumber":47,"author":{"gitId":"liping-eng"},"content":"        new Duke(filePath).run();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"liping-eng":46,"-":3}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"import static duke.Constant.*;"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":"    protected String at;"},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":"    public Event(String description, String at) {"},{"lineNumber":9,"author":{"gitId":"liping-eng"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":"        this.at \u003d at;"},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":"    public String getDescription() {"},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":"        return EVENT_TASK_TYPE + \"|\""},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":"                + (isDone ? MARK_DONE : MARK_UNDONE) + \"|\" + this.description + \"|\" + at;"},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"liping-eng"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":22,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"liping-eng"},"content":"}"}],"authorContributionMap":{"liping-eng":23}},{"path":"src/main/java/duke/IncompleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"public class IncompleteCommandException extends Exception {"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"}"}],"authorContributionMap":{"liping-eng":5}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"import static duke.Constant.*;"},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":" * To make sense of commands by user."},{"lineNumber":9,"author":{"gitId":"liping-eng"},"content":" */"},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":"public class Parser {"},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":"    public static final Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":"     * To run the type of command given by the user."},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"     * @param tasks"},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":"     * @throws ArrayIndexOutOfBoundsException"},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":"    public static void selectCommand(TaskList tasks) throws ArrayIndexOutOfBoundsException {"},{"lineNumber":21,"author":{"gitId":"liping-eng"},"content":"        String userInput;"},{"lineNumber":22,"author":{"gitId":"liping-eng"},"content":"        userInput \u003d scanner.nextLine();"},{"lineNumber":23,"author":{"gitId":"liping-eng"},"content":"        Ui.printBorder();"},{"lineNumber":24,"author":{"gitId":"liping-eng"},"content":"        String command \u003d userInput.split(\" \")[0];"},{"lineNumber":25,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":26,"author":{"gitId":"liping-eng"},"content":"        if (userInput.trim().equals(BYE_STR_COMMAND)) {"},{"lineNumber":27,"author":{"gitId":"liping-eng"},"content":"            Storage.writeToFile(tasks);"},{"lineNumber":28,"author":{"gitId":"liping-eng"},"content":"            Ui.printBye();"},{"lineNumber":29,"author":{"gitId":"liping-eng"},"content":"            Duke.isRunning \u003d false;"},{"lineNumber":30,"author":{"gitId":"liping-eng"},"content":"            return;"},{"lineNumber":31,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":32,"author":{"gitId":"liping-eng"},"content":"        } else if (userInput.trim().equals(LIST_STR_COMMAND)) {"},{"lineNumber":33,"author":{"gitId":"liping-eng"},"content":"            TaskList.listTasks();"},{"lineNumber":34,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":35,"author":{"gitId":"liping-eng"},"content":"        } else if (command.equals(DONE_STR_COMMAND)) {"},{"lineNumber":36,"author":{"gitId":"liping-eng"},"content":"            if (userInput.length() \u003c\u003d DONE_COMMAND) {"},{"lineNumber":37,"author":{"gitId":"liping-eng"},"content":"                Ui.printEmptyCommand(DONE_STR_COMMAND);"},{"lineNumber":38,"author":{"gitId":"liping-eng"},"content":"                return;"},{"lineNumber":39,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":41,"author":{"gitId":"liping-eng"},"content":"            try {"},{"lineNumber":42,"author":{"gitId":"liping-eng"},"content":"                incompleteCommand(userInput, DONE_STR_COMMAND, DONE_COMMAND);"},{"lineNumber":43,"author":{"gitId":"liping-eng"},"content":"                TaskList.markTaskDone(userInput);"},{"lineNumber":44,"author":{"gitId":"liping-eng"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":45,"author":{"gitId":"liping-eng"},"content":"                Ui.printWrongIndexMessage();"},{"lineNumber":46,"author":{"gitId":"liping-eng"},"content":"            } catch (IncompleteCommandException e) {"},{"lineNumber":47,"author":{"gitId":"liping-eng"},"content":"                Ui.printErrorMessageOnMissingTask();"},{"lineNumber":48,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"liping-eng"},"content":"            Storage.writeToFile(tasks);"},{"lineNumber":50,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":51,"author":{"gitId":"liping-eng"},"content":"        } else if (command.equals(TODO_STR_COMMAND)) {"},{"lineNumber":52,"author":{"gitId":"liping-eng"},"content":"            if (userInput.length() \u003c\u003d TODO_COMMAND) {"},{"lineNumber":53,"author":{"gitId":"liping-eng"},"content":"                Ui.printEmptyCommand(TODO_STR_COMMAND);"},{"lineNumber":54,"author":{"gitId":"liping-eng"},"content":"                return;"},{"lineNumber":55,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":57,"author":{"gitId":"liping-eng"},"content":"            try {"},{"lineNumber":58,"author":{"gitId":"liping-eng"},"content":"                incompleteCommand(userInput, TODO_STR_COMMAND, TODO_COMMAND);"},{"lineNumber":59,"author":{"gitId":"liping-eng"},"content":"                TaskList.addTodoTask(userInput);"},{"lineNumber":60,"author":{"gitId":"liping-eng"},"content":"                Storage.writeToFile(tasks);"},{"lineNumber":61,"author":{"gitId":"liping-eng"},"content":"            } catch (IncompleteCommandException e) {"},{"lineNumber":62,"author":{"gitId":"liping-eng"},"content":"                Ui.printErrorMessageOnMissingTask();"},{"lineNumber":63,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":65,"author":{"gitId":"liping-eng"},"content":"        } else if (command.equals(DEADLINE_STR_COMMAND)) {"},{"lineNumber":66,"author":{"gitId":"liping-eng"},"content":"            if (userInput.length() \u003c\u003d DEADLINE_COMMAND) {"},{"lineNumber":67,"author":{"gitId":"liping-eng"},"content":"                Ui.printEmptyCommand(DEADLINE_STR_COMMAND);"},{"lineNumber":68,"author":{"gitId":"liping-eng"},"content":"                return;"},{"lineNumber":69,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"liping-eng"},"content":"            String by;"},{"lineNumber":71,"author":{"gitId":"liping-eng"},"content":"            String processedDeadlineInput;"},{"lineNumber":72,"author":{"gitId":"liping-eng"},"content":"            int getSlashIndex \u003d userInput.indexOf(SLASH_BY_STR);"},{"lineNumber":73,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":74,"author":{"gitId":"liping-eng"},"content":"            try {"},{"lineNumber":75,"author":{"gitId":"liping-eng"},"content":"                incompleteCommand(userInput, DEADLINE_STR_COMMAND, DEADLINE_COMMAND);"},{"lineNumber":76,"author":{"gitId":"liping-eng"},"content":"                by \u003d userInput.substring(getSlashIndex + 4);"},{"lineNumber":77,"author":{"gitId":"liping-eng"},"content":"                processedDeadlineInput \u003d userInput.substring(9, getSlashIndex).trim();"},{"lineNumber":78,"author":{"gitId":"liping-eng"},"content":"                Ui.printAddTaskMessage();"},{"lineNumber":79,"author":{"gitId":"liping-eng"},"content":"                TaskList.addDeadlineTask(by, processedDeadlineInput);"},{"lineNumber":80,"author":{"gitId":"liping-eng"},"content":"                Storage.writeToFile(tasks);"},{"lineNumber":81,"author":{"gitId":"liping-eng"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":82,"author":{"gitId":"liping-eng"},"content":"                Ui.printWrongSlashInput(DEADLINE_STR_COMMAND, SLASH_BY_STR);"},{"lineNumber":83,"author":{"gitId":"liping-eng"},"content":"            } catch (IncompleteCommandException e) {"},{"lineNumber":84,"author":{"gitId":"liping-eng"},"content":"                Ui.printErrorMessageOnMissingTask();"},{"lineNumber":85,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":87,"author":{"gitId":"liping-eng"},"content":"        } else if (command.equals(EVENT_STR_COMMAND)) {"},{"lineNumber":88,"author":{"gitId":"liping-eng"},"content":"            if (userInput.length() \u003c\u003d EVENT_COMMAND) {"},{"lineNumber":89,"author":{"gitId":"liping-eng"},"content":"                Ui.printEmptyCommand(EVENT_STR_COMMAND);"},{"lineNumber":90,"author":{"gitId":"liping-eng"},"content":"                return;"},{"lineNumber":91,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":93,"author":{"gitId":"liping-eng"},"content":"            String at;"},{"lineNumber":94,"author":{"gitId":"liping-eng"},"content":"            String processedEventInput;"},{"lineNumber":95,"author":{"gitId":"liping-eng"},"content":"            int getSlashIndex;"},{"lineNumber":96,"author":{"gitId":"liping-eng"},"content":"            getSlashIndex \u003d userInput.indexOf(SLASH_AT_STR);"},{"lineNumber":97,"author":{"gitId":"liping-eng"},"content":"            try {"},{"lineNumber":98,"author":{"gitId":"liping-eng"},"content":"                incompleteCommand(userInput, EVENT_STR_COMMAND, EVENT_COMMAND);"},{"lineNumber":99,"author":{"gitId":"liping-eng"},"content":"                at \u003d userInput.substring(getSlashIndex + 4).trim();"},{"lineNumber":100,"author":{"gitId":"liping-eng"},"content":"                processedEventInput \u003d userInput.substring(6, getSlashIndex).trim();"},{"lineNumber":101,"author":{"gitId":"liping-eng"},"content":"                Ui.printAddTaskMessage();"},{"lineNumber":102,"author":{"gitId":"liping-eng"},"content":"                TaskList.addEventTask(at, processedEventInput);"},{"lineNumber":103,"author":{"gitId":"liping-eng"},"content":"                Storage.writeToFile(tasks);"},{"lineNumber":104,"author":{"gitId":"liping-eng"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":105,"author":{"gitId":"liping-eng"},"content":"                Ui.printWrongSlashInput(EVENT_STR_COMMAND, SLASH_AT_STR);"},{"lineNumber":106,"author":{"gitId":"liping-eng"},"content":"            } catch (IncompleteCommandException e) {"},{"lineNumber":107,"author":{"gitId":"liping-eng"},"content":"                Ui.printErrorMessageOnMissingTask();"},{"lineNumber":108,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":109,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":110,"author":{"gitId":"liping-eng"},"content":"        } else if (command.equals(DELETE_STR_COMMAND)) {"},{"lineNumber":111,"author":{"gitId":"liping-eng"},"content":"            if (userInput.length() \u003c\u003d DELETE_COMMAND) {"},{"lineNumber":112,"author":{"gitId":"liping-eng"},"content":"                Ui.printEmptyCommand(DELETE_STR_COMMAND);"},{"lineNumber":113,"author":{"gitId":"liping-eng"},"content":"                return;"},{"lineNumber":114,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":116,"author":{"gitId":"liping-eng"},"content":"            try {"},{"lineNumber":117,"author":{"gitId":"liping-eng"},"content":"                incompleteCommand(userInput, DELETE_STR_COMMAND, DELETE_COMMAND);"},{"lineNumber":118,"author":{"gitId":"liping-eng"},"content":"                TaskList.removeTask(userInput);"},{"lineNumber":119,"author":{"gitId":"liping-eng"},"content":"                Storage.writeToFile(tasks);"},{"lineNumber":120,"author":{"gitId":"liping-eng"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":121,"author":{"gitId":"liping-eng"},"content":"                Ui.printWrongIndexMessage();"},{"lineNumber":122,"author":{"gitId":"liping-eng"},"content":"            } catch (IncompleteCommandException e) {"},{"lineNumber":123,"author":{"gitId":"liping-eng"},"content":"                Ui.printErrorMessageOnMissingTask();"},{"lineNumber":124,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":126,"author":{"gitId":"liping-eng"},"content":"        } else if (command.equals(FIND_STR_COMMAND)) {"},{"lineNumber":127,"author":{"gitId":"liping-eng"},"content":"            if (userInput.length() \u003c\u003d FIND_COMMAND) {"},{"lineNumber":128,"author":{"gitId":"liping-eng"},"content":"                Ui.printEmptyCommand(FIND_STR_COMMAND);"},{"lineNumber":129,"author":{"gitId":"liping-eng"},"content":"                return;"},{"lineNumber":130,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":132,"author":{"gitId":"liping-eng"},"content":"            try {"},{"lineNumber":133,"author":{"gitId":"liping-eng"},"content":"                incompleteCommand(userInput, FIND_STR_COMMAND, FIND_COMMAND);"},{"lineNumber":134,"author":{"gitId":"liping-eng"},"content":"                TaskList.findTask(userInput.split(\" \")[1]);"},{"lineNumber":135,"author":{"gitId":"liping-eng"},"content":"            } catch (IncompleteCommandException e) {"},{"lineNumber":136,"author":{"gitId":"liping-eng"},"content":"                Ui.printErrorMessageOnMissingTask();"},{"lineNumber":137,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":138,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":139,"author":{"gitId":"liping-eng"},"content":"        } else {"},{"lineNumber":140,"author":{"gitId":"liping-eng"},"content":"            Ui.printWrongCommand();"},{"lineNumber":141,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":143,"author":{"gitId":"liping-eng"},"content":"        Ui.printBorder();"},{"lineNumber":144,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":146,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"liping-eng"},"content":"     * Checks if command entered by user is complete."},{"lineNumber":148,"author":{"gitId":"liping-eng"},"content":"     * A complete command follows the format for the command."},{"lineNumber":149,"author":{"gitId":"liping-eng"},"content":"     * Descriptions as whitespaces in command is deemed as incomplete command."},{"lineNumber":150,"author":{"gitId":"liping-eng"},"content":"     * This prevents user from adding meaningless tasks to the list."},{"lineNumber":151,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":152,"author":{"gitId":"liping-eng"},"content":"     * @param userInput"},{"lineNumber":153,"author":{"gitId":"liping-eng"},"content":"     * @param command"},{"lineNumber":154,"author":{"gitId":"liping-eng"},"content":"     * @param commandLength"},{"lineNumber":155,"author":{"gitId":"liping-eng"},"content":"     * @throws IncompleteCommandException"},{"lineNumber":156,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":157,"author":{"gitId":"liping-eng"},"content":"    public static void incompleteCommand(String userInput, String command,"},{"lineNumber":158,"author":{"gitId":"liping-eng"},"content":"                                         int commandLength) throws IncompleteCommandException {"},{"lineNumber":159,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":160,"author":{"gitId":"liping-eng"},"content":"        // checks if command is incomplete"},{"lineNumber":161,"author":{"gitId":"liping-eng"},"content":"        if (userInput.substring(commandLength).replace(\" \",\"\").isEmpty()) {"},{"lineNumber":162,"author":{"gitId":"liping-eng"},"content":"            throw new IncompleteCommandException();"},{"lineNumber":163,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":165,"author":{"gitId":"liping-eng"},"content":"        if (command.equals(DEADLINE_STR_COMMAND)) {"},{"lineNumber":166,"author":{"gitId":"liping-eng"},"content":"            // checks if command has a missing task description"},{"lineNumber":167,"author":{"gitId":"liping-eng"},"content":"            if (userInput.substring(commandLength,"},{"lineNumber":168,"author":{"gitId":"liping-eng"},"content":"                    userInput.indexOf(SLASH_BY_STR))"},{"lineNumber":169,"author":{"gitId":"liping-eng"},"content":"                    .replace(\" \",\"\").isEmpty()) {"},{"lineNumber":170,"author":{"gitId":"liping-eng"},"content":"                throw new IncompleteCommandException();"},{"lineNumber":171,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":172,"author":{"gitId":"liping-eng"},"content":"            //checks if command has a missing timing description"},{"lineNumber":173,"author":{"gitId":"liping-eng"},"content":"            int indexAfterSlashBy \u003d userInput.indexOf(SLASH_BY_STR) + 3;"},{"lineNumber":174,"author":{"gitId":"liping-eng"},"content":"            if (userInput.substring(indexAfterSlashBy)"},{"lineNumber":175,"author":{"gitId":"liping-eng"},"content":"                    .replace(\" \",\"\").isEmpty()) {"},{"lineNumber":176,"author":{"gitId":"liping-eng"},"content":"                throw new IncompleteCommandException();"},{"lineNumber":177,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":178,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":180,"author":{"gitId":"liping-eng"},"content":"        if (command.equals(EVENT_STR_COMMAND)) {"},{"lineNumber":181,"author":{"gitId":"liping-eng"},"content":"            if (userInput.substring(commandLength,"},{"lineNumber":182,"author":{"gitId":"liping-eng"},"content":"                    userInput.indexOf(SLASH_AT_STR))"},{"lineNumber":183,"author":{"gitId":"liping-eng"},"content":"                    .replace(\" \",\"\").isEmpty()) {"},{"lineNumber":184,"author":{"gitId":"liping-eng"},"content":"                throw new IncompleteCommandException();"},{"lineNumber":185,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":186,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":187,"author":{"gitId":"liping-eng"},"content":"            int indexAfterSlashAt \u003d userInput.indexOf(SLASH_AT_STR) + 3;"},{"lineNumber":188,"author":{"gitId":"liping-eng"},"content":"            if (userInput.substring(indexAfterSlashAt)"},{"lineNumber":189,"author":{"gitId":"liping-eng"},"content":"                    .replace(\" \",\"\").isEmpty()) {"},{"lineNumber":190,"author":{"gitId":"liping-eng"},"content":"                throw new IncompleteCommandException();"},{"lineNumber":191,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":192,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":195,"author":{"gitId":"liping-eng"},"content":"}"}],"authorContributionMap":{"liping-eng":195}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":"import java.io.File;"},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":"import static duke.Constant.*;"},{"lineNumber":9,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":"public class Storage {"},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":"     * Creates text file that is to be read from if file does not exist."},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":"     * Else, read from existing text file."},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"     * @param filePath"},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":"     * @param tasks"},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":"     * @throws IOException"},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"liping-eng"},"content":"    public static void readFile(String filePath, TaskList tasks) throws IOException {"},{"lineNumber":22,"author":{"gitId":"liping-eng"},"content":"        File file \u003d new File(filePath + \"/duke.txt\");"},{"lineNumber":23,"author":{"gitId":"liping-eng"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"liping-eng"},"content":"            if (file.createNewFile()){"},{"lineNumber":25,"author":{"gitId":"liping-eng"},"content":"                Ui.fileCreatedMessage(file.getAbsolutePath());"},{"lineNumber":26,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"liping-eng"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"liping-eng"},"content":"            Ui.errorMessageDuringFileCreation();"},{"lineNumber":29,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":31,"author":{"gitId":"liping-eng"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"liping-eng"},"content":"            Scanner scanner \u003d new Scanner(file);"},{"lineNumber":33,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":34,"author":{"gitId":"liping-eng"},"content":"            while (scanner.hasNextLine()) {"},{"lineNumber":35,"author":{"gitId":"liping-eng"},"content":"                String[] split \u003d scanner.nextLine().split(\"\\\\|\",0);"},{"lineNumber":36,"author":{"gitId":"liping-eng"},"content":"                String taskType \u003d split[0];"},{"lineNumber":37,"author":{"gitId":"liping-eng"},"content":"                String isDoneString \u003d split[1];"},{"lineNumber":38,"author":{"gitId":"liping-eng"},"content":"                String taskDetails \u003d split[2];"},{"lineNumber":39,"author":{"gitId":"liping-eng"},"content":"                Boolean isDone;"},{"lineNumber":40,"author":{"gitId":"liping-eng"},"content":"                if (isDoneString.equals(MARK_DONE)) {"},{"lineNumber":41,"author":{"gitId":"liping-eng"},"content":"                    isDone \u003d true;"},{"lineNumber":42,"author":{"gitId":"liping-eng"},"content":"                } else {"},{"lineNumber":43,"author":{"gitId":"liping-eng"},"content":"                    isDone \u003d false;"},{"lineNumber":44,"author":{"gitId":"liping-eng"},"content":"                }"},{"lineNumber":45,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":46,"author":{"gitId":"liping-eng"},"content":"                switch (taskType) {"},{"lineNumber":47,"author":{"gitId":"liping-eng"},"content":"                case TODO_TASK_TYPE:"},{"lineNumber":48,"author":{"gitId":"liping-eng"},"content":"                    Task task \u003d new Todo(taskDetails);"},{"lineNumber":49,"author":{"gitId":"liping-eng"},"content":"                    if (isDone) {"},{"lineNumber":50,"author":{"gitId":"liping-eng"},"content":"                        task.setDone();"},{"lineNumber":51,"author":{"gitId":"liping-eng"},"content":"                    }"},{"lineNumber":52,"author":{"gitId":"liping-eng"},"content":"                    tasks.addTask(task);"},{"lineNumber":53,"author":{"gitId":"liping-eng"},"content":"                    break;"},{"lineNumber":54,"author":{"gitId":"liping-eng"},"content":"                case EVENT_TASK_TYPE:"},{"lineNumber":55,"author":{"gitId":"liping-eng"},"content":"                    String at \u003d split[3];"},{"lineNumber":56,"author":{"gitId":"liping-eng"},"content":"                    task \u003d new Event(taskDetails, at);"},{"lineNumber":57,"author":{"gitId":"liping-eng"},"content":"                    if (isDone) {"},{"lineNumber":58,"author":{"gitId":"liping-eng"},"content":"                        task.setDone();"},{"lineNumber":59,"author":{"gitId":"liping-eng"},"content":"                    }"},{"lineNumber":60,"author":{"gitId":"liping-eng"},"content":"                    tasks.addTask(task);"},{"lineNumber":61,"author":{"gitId":"liping-eng"},"content":"                    break;"},{"lineNumber":62,"author":{"gitId":"liping-eng"},"content":"                case DEADLINE_TASK_TYPE:"},{"lineNumber":63,"author":{"gitId":"liping-eng"},"content":"                    String by \u003d split[3];"},{"lineNumber":64,"author":{"gitId":"liping-eng"},"content":"                    task \u003d new Deadline(taskDetails, by);"},{"lineNumber":65,"author":{"gitId":"liping-eng"},"content":"                    if (isDone) {"},{"lineNumber":66,"author":{"gitId":"liping-eng"},"content":"                        task.setDone();"},{"lineNumber":67,"author":{"gitId":"liping-eng"},"content":"                    }"},{"lineNumber":68,"author":{"gitId":"liping-eng"},"content":"                    tasks.addTask(task);"},{"lineNumber":69,"author":{"gitId":"liping-eng"},"content":"                    break;"},{"lineNumber":70,"author":{"gitId":"liping-eng"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":72,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"liping-eng"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":74,"author":{"gitId":"liping-eng"},"content":"            Ui.printFileNotFoundExceptionMessage();"},{"lineNumber":75,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":78,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"liping-eng"},"content":"     * Update duke.txt file each time a new task is added/delete/marked."},{"lineNumber":80,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"liping-eng"},"content":"     * @param tasks"},{"lineNumber":82,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"liping-eng"},"content":"    public static void writeToFile(TaskList tasks) {"},{"lineNumber":84,"author":{"gitId":"liping-eng"},"content":"        String filePath \u003d new File(\"\").getAbsolutePath();"},{"lineNumber":85,"author":{"gitId":"liping-eng"},"content":"        filePath \u003d filePath + \"/duke.txt\";"},{"lineNumber":86,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":87,"author":{"gitId":"liping-eng"},"content":"        try {"},{"lineNumber":88,"author":{"gitId":"liping-eng"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);"},{"lineNumber":89,"author":{"gitId":"liping-eng"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":90,"author":{"gitId":"liping-eng"},"content":"                fileWriter.write(tasks.getDescriptionAtIndex(i) + \"\\n\");"},{"lineNumber":91,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"liping-eng"},"content":"            fileWriter.flush();"},{"lineNumber":93,"author":{"gitId":"liping-eng"},"content":"            fileWriter.close();"},{"lineNumber":94,"author":{"gitId":"liping-eng"},"content":"        } catch (IOException e) {"},{"lineNumber":95,"author":{"gitId":"liping-eng"},"content":"            Ui.printErrorMessageWritingToFile();"},{"lineNumber":96,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"liping-eng"},"content":"}"}],"authorContributionMap":{"liping-eng":98}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":9,"author":{"gitId":"liping-eng"},"content":"    public Task(String description) {"},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":"        this.description \u003d description;"},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":"        this.isDone \u003d false;"},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":"    public String getDescription() {"},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":"        return \"\";"},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"    public String getStatusIcon(boolean isDone) {"},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":"    return (isDone ? \"[X] \" : \"[ ] \");"},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":"}"},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":21,"author":{"gitId":"liping-eng"},"content":"    public void setDone() {"},{"lineNumber":22,"author":{"gitId":"liping-eng"},"content":"        isDone \u003d true;"},{"lineNumber":23,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":25,"author":{"gitId":"liping-eng"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"liping-eng"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"liping-eng"},"content":"        return getStatusIcon(isDone) + description;"},{"lineNumber":28,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":30,"author":{"gitId":"liping-eng"},"content":"}"},{"lineNumber":31,"author":{"gitId":"liping-eng"},"content":""}],"authorContributionMap":{"liping-eng":31}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":" * Stores the list of tasks in an ArrayList."},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":" * Performs operations on a list of task which includes"},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":" * delete, done, add tasks, i.e."},{"lineNumber":9,"author":{"gitId":"liping-eng"},"content":" * todo, event, deadline, which signifies type of tasks to the list."},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":" */"},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":"    private static ArrayList\u003cTask\u003e tasks;"},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":"    public TaskList() {"},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"liping-eng"},"content":"     * List all the tasks saved into duke.txt through"},{"lineNumber":22,"author":{"gitId":"liping-eng"},"content":"     * the operations available,"},{"lineNumber":23,"author":{"gitId":"liping-eng"},"content":"     * i.e. todo, event, deadline, done, delete."},{"lineNumber":24,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"liping-eng"},"content":"    public static void listTasks() {"},{"lineNumber":26,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Here are the tasks in your list: \");"},{"lineNumber":27,"author":{"gitId":"liping-eng"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":28,"author":{"gitId":"liping-eng"},"content":"            System.out.print(i + 1 + \".\");"},{"lineNumber":29,"author":{"gitId":"liping-eng"},"content":"            System.out.println(tasks.get(i).toString());"},{"lineNumber":30,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":33,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"liping-eng"},"content":"     * Mark the task with a cross given index of the task in the list."},{"lineNumber":35,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"liping-eng"},"content":"     * @param userInput"},{"lineNumber":37,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"liping-eng"},"content":"    public static void markTaskDone(String userInput) {"},{"lineNumber":39,"author":{"gitId":"liping-eng"},"content":"        int processedInput;"},{"lineNumber":40,"author":{"gitId":"liping-eng"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"liping-eng"},"content":"            processedInput \u003d Integer.parseInt(userInput.replaceAll(\"[^0-9]\", \"\")) - 1;"},{"lineNumber":42,"author":{"gitId":"liping-eng"},"content":"            tasks.get(processedInput).setDone();"},{"lineNumber":43,"author":{"gitId":"liping-eng"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":44,"author":{"gitId":"liping-eng"},"content":"            System.out.println(tasks.get(processedInput));"},{"lineNumber":45,"author":{"gitId":"liping-eng"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":46,"author":{"gitId":"liping-eng"},"content":"            System.out.println(\"Key in an appropriate number. E.g. [done 1]\");"},{"lineNumber":47,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":50,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"liping-eng"},"content":"     * Add ToDo task into the bottom of the list."},{"lineNumber":52,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"liping-eng"},"content":"     * @param userInput"},{"lineNumber":54,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"liping-eng"},"content":"    public static void addTodoTask(String userInput) {"},{"lineNumber":56,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":57,"author":{"gitId":"liping-eng"},"content":"        Task newTask \u003d new Todo(userInput.substring(5));"},{"lineNumber":58,"author":{"gitId":"liping-eng"},"content":"        tasks.add(newTask);"},{"lineNumber":59,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"  \" + newTask.toString());"},{"lineNumber":60,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":61,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":63,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"liping-eng"},"content":"     * Add Deadline task into the bottom of the list."},{"lineNumber":65,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"liping-eng"},"content":"     * @param by The date/time inputted by the user for the Deadline task."},{"lineNumber":67,"author":{"gitId":"liping-eng"},"content":"     * @param processedDeadlineInput The description of Deadline task."},{"lineNumber":68,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"liping-eng"},"content":"    public static void addDeadlineTask(String by, String processedDeadlineInput) {"},{"lineNumber":70,"author":{"gitId":"liping-eng"},"content":"        Task newTask \u003d new Deadline(processedDeadlineInput, by);"},{"lineNumber":71,"author":{"gitId":"liping-eng"},"content":"        tasks.add(newTask);"},{"lineNumber":72,"author":{"gitId":"liping-eng"},"content":"        System.out.println(newTask.toString());"},{"lineNumber":73,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":74,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":76,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"liping-eng"},"content":"     * Add Event task into the bottom of the list."},{"lineNumber":78,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"liping-eng"},"content":"     * @param at The venue/date inputted by the user for Event task."},{"lineNumber":80,"author":{"gitId":"liping-eng"},"content":"     * @param processedEventInput The description of Event task."},{"lineNumber":81,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"liping-eng"},"content":"    public static void addEventTask(String at, String processedEventInput) {"},{"lineNumber":83,"author":{"gitId":"liping-eng"},"content":"        Task newTask \u003d new Event(processedEventInput, at);"},{"lineNumber":84,"author":{"gitId":"liping-eng"},"content":"        tasks.add(newTask);"},{"lineNumber":85,"author":{"gitId":"liping-eng"},"content":"        System.out.println(newTask.toString());"},{"lineNumber":86,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":87,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":89,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"liping-eng"},"content":"     * Find and print the list of tasks available in the tasks list"},{"lineNumber":91,"author":{"gitId":"liping-eng"},"content":"     * by finding words in each task object description."},{"lineNumber":92,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"liping-eng"},"content":"     * @param targetInput Keyword specified by the user."},{"lineNumber":94,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"liping-eng"},"content":"    public static void findTask(String targetInput) {"},{"lineNumber":96,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");"},{"lineNumber":97,"author":{"gitId":"liping-eng"},"content":"        int count \u003d 0;"},{"lineNumber":98,"author":{"gitId":"liping-eng"},"content":"        for (Task t : tasks) {"},{"lineNumber":99,"author":{"gitId":"liping-eng"},"content":"            String[] mySplit \u003d t.toString().split(\" \");"},{"lineNumber":100,"author":{"gitId":"liping-eng"},"content":"            for (String s: mySplit) {"},{"lineNumber":101,"author":{"gitId":"liping-eng"},"content":"                if (s.equals(targetInput)) {"},{"lineNumber":102,"author":{"gitId":"liping-eng"},"content":"                    count +\u003d 1;"},{"lineNumber":103,"author":{"gitId":"liping-eng"},"content":"                    System.out.println(count + \". \" + t);"},{"lineNumber":104,"author":{"gitId":"liping-eng"},"content":"                }"},{"lineNumber":105,"author":{"gitId":"liping-eng"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":108,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":110,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"liping-eng"},"content":"     * Gets the description of all the tasks inputted by user"},{"lineNumber":112,"author":{"gitId":"liping-eng"},"content":"     * since the start of the program."},{"lineNumber":113,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":114,"author":{"gitId":"liping-eng"},"content":"     * @param i Index to loop through in list of tasks to write to file."},{"lineNumber":115,"author":{"gitId":"liping-eng"},"content":"     * @return Description of each task."},{"lineNumber":116,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"liping-eng"},"content":"    public String getDescriptionAtIndex(int i) {"},{"lineNumber":118,"author":{"gitId":"liping-eng"},"content":"        return tasks.get(i).getDescription();"},{"lineNumber":119,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":121,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"liping-eng"},"content":"     * Deletes a task at index specified by the user."},{"lineNumber":123,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":124,"author":{"gitId":"liping-eng"},"content":"     * @param userInput"},{"lineNumber":125,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"liping-eng"},"content":"    public static void removeTask(String userInput) {"},{"lineNumber":127,"author":{"gitId":"liping-eng"},"content":"        int processedInput;"},{"lineNumber":128,"author":{"gitId":"liping-eng"},"content":"        try {"},{"lineNumber":129,"author":{"gitId":"liping-eng"},"content":"            processedInput \u003d Integer.parseInt"},{"lineNumber":130,"author":{"gitId":"liping-eng"},"content":"                    (userInput.replaceAll(\"[^0-9]\", \"\")) - 1;"},{"lineNumber":131,"author":{"gitId":"liping-eng"},"content":"            System.out.println(tasks.get(processedInput));"},{"lineNumber":132,"author":{"gitId":"liping-eng"},"content":"            tasks.remove(processedInput);"},{"lineNumber":133,"author":{"gitId":"liping-eng"},"content":"            System.out.println(\"I\u0027ve removed the above task for you!\");"},{"lineNumber":134,"author":{"gitId":"liping-eng"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":135,"author":{"gitId":"liping-eng"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":136,"author":{"gitId":"liping-eng"},"content":"            System.out.println(\"Key in an appropriate number. E.g. [delete 1]\");"},{"lineNumber":137,"author":{"gitId":"liping-eng"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":140,"author":{"gitId":"liping-eng"},"content":"    public int size() {"},{"lineNumber":141,"author":{"gitId":"liping-eng"},"content":"        return tasks.size();"},{"lineNumber":142,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":144,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":145,"author":{"gitId":"liping-eng"},"content":"     * Add new tasks when reading duke.txt file"},{"lineNumber":146,"author":{"gitId":"liping-eng"},"content":"     * at the start of the program."},{"lineNumber":147,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":148,"author":{"gitId":"liping-eng"},"content":"     * @param newTask"},{"lineNumber":149,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"liping-eng"},"content":"    public void addTask(Task newTask) {"},{"lineNumber":151,"author":{"gitId":"liping-eng"},"content":"        tasks.add(newTask);"},{"lineNumber":152,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":154,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":155,"author":{"gitId":"liping-eng"},"content":"}"}],"authorContributionMap":{"liping-eng":155}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"import static duke.Constant.*;"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"public class Todo extends Task {"},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":"    public Todo(String description) {"},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":"    public String getDescription() {"},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":"        return TODO_TASK_TYPE + \"|\""},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":"                + (isDone ? MARK_DONE : MARK_UNDONE) + \"|\" + this.description;"},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":"}"}],"authorContributionMap":{"liping-eng":20}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"liping-eng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":3,"author":{"gitId":"liping-eng"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":5,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"liping-eng"},"content":"     * Prints Duke logo and welcome message"},{"lineNumber":7,"author":{"gitId":"liping-eng"},"content":"     * when the user starts Duke."},{"lineNumber":8,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"liping-eng"},"content":"    public static void printStart() {"},{"lineNumber":10,"author":{"gitId":"liping-eng"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":11,"author":{"gitId":"liping-eng"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":12,"author":{"gitId":"liping-eng"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":13,"author":{"gitId":"liping-eng"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":14,"author":{"gitId":"liping-eng"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":15,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":16,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":17,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":18,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":19,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":21,"author":{"gitId":"liping-eng"},"content":"    public static void printBorder() {"},{"lineNumber":22,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"------------------------------------\");"},{"lineNumber":23,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":25,"author":{"gitId":"liping-eng"},"content":"    public static void printBye() {"},{"lineNumber":26,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":27,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":29,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"liping-eng"},"content":"     * Prints error message when command is empty."},{"lineNumber":31,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"liping-eng"},"content":"     * @param emptyCommand Command that follows an empty user input."},{"lineNumber":33,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"liping-eng"},"content":"    public static void printEmptyCommand(String emptyCommand) {"},{"lineNumber":35,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"OOPS!!! The description of a \" + emptyCommand + \" cannot be empty.\");"},{"lineNumber":36,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":38,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"liping-eng"},"content":"     * Prints error message when command is not any operations define in TaskList."},{"lineNumber":40,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"liping-eng"},"content":"    public static void printWrongCommand() {"},{"lineNumber":42,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":43,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":45,"author":{"gitId":"liping-eng"},"content":"    public static void errorMessageDuringFileCreation() {"},{"lineNumber":46,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"There was an error when creating file. Try again!\");"},{"lineNumber":47,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":49,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"liping-eng"},"content":"     * Prints error message when command is missing description(s)."},{"lineNumber":51,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"liping-eng"},"content":"    public static void printErrorMessageOnMissingTask() {"},{"lineNumber":53,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Incomplete command!\");"},{"lineNumber":54,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"You may be missing some description.\");"},{"lineNumber":55,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":57,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"liping-eng"},"content":"     * Prints error message if only whitespaces is entered as an input."},{"lineNumber":59,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"liping-eng"},"content":"    public static void printErrorMessageOnWhitespaces() {"},{"lineNumber":61,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Please key in a valid command instead of whitespaces!\");"},{"lineNumber":62,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":64,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"liping-eng"},"content":"     * Prints error message when the command by the user"},{"lineNumber":66,"author":{"gitId":"liping-eng"},"content":"     * does not follow the slash format for adding Event task and Deadline task."},{"lineNumber":67,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"liping-eng"},"content":"     * @param command"},{"lineNumber":69,"author":{"gitId":"liping-eng"},"content":"     * @param slashString"},{"lineNumber":70,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"liping-eng"},"content":"    public static void printWrongSlashInput(String command, String slashString) {"},{"lineNumber":72,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Incorrect Slash input! \" + \"Try again! Do \""},{"lineNumber":73,"author":{"gitId":"liping-eng"},"content":"                + command + \" \u003csomething\u003e \" + slashString + \" \u003csomething\u003e\");"},{"lineNumber":74,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":76,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"liping-eng"},"content":"     * Prints error message when user key in number not present in the list."},{"lineNumber":78,"author":{"gitId":"liping-eng"},"content":"     * This error message is applicable for command which requires numbering of a task,"},{"lineNumber":79,"author":{"gitId":"liping-eng"},"content":"     * naming command done and delete."},{"lineNumber":80,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"liping-eng"},"content":"    public static void printWrongIndexMessage() {"},{"lineNumber":82,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"No index found. Please key an appropriate index\");"},{"lineNumber":83,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":85,"author":{"gitId":"liping-eng"},"content":"    public static void printAddTaskMessage() {"},{"lineNumber":86,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":87,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":89,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"liping-eng"},"content":"     * Prints message when a new text file is created"},{"lineNumber":91,"author":{"gitId":"liping-eng"},"content":"     * that is used to store list of tasks."},{"lineNumber":92,"author":{"gitId":"liping-eng"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"liping-eng"},"content":"     * @param absolutePath"},{"lineNumber":94,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"liping-eng"},"content":"    public static void fileCreatedMessage(String absolutePath) {"},{"lineNumber":96,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"file created at current location: \\n\""},{"lineNumber":97,"author":{"gitId":"liping-eng"},"content":"                + String.format(absolutePath));"},{"lineNumber":98,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":100,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"liping-eng"},"content":"     * Prints error message when unable to update the list of tasks"},{"lineNumber":102,"author":{"gitId":"liping-eng"},"content":"     * stored in text file created before."},{"lineNumber":103,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"liping-eng"},"content":"    public static void printErrorMessageWritingToFile() {"},{"lineNumber":105,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"Error while writing to file. Try again!\");"},{"lineNumber":106,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"liping-eng"},"content":""},{"lineNumber":108,"author":{"gitId":"liping-eng"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"liping-eng"},"content":"     * Prints error message when reading the file"},{"lineNumber":110,"author":{"gitId":"liping-eng"},"content":"     * with the specified pathname does not exist."},{"lineNumber":111,"author":{"gitId":"liping-eng"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"liping-eng"},"content":"    public static void printFileNotFoundExceptionMessage() {"},{"lineNumber":113,"author":{"gitId":"liping-eng"},"content":"        System.out.println(\"File not found. An attempt to open the file has failed.\");"},{"lineNumber":114,"author":{"gitId":"liping-eng"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"liping-eng"},"content":"}"}],"authorContributionMap":{"liping-eng":115}}]
