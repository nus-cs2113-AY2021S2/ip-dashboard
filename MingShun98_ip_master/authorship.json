[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"MingShun98":9,"-":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MingShun98"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"    public static String getStatus(boolean isDone) {"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"/*        String logo \u003d \" ____        _        \\n\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"Hello from\\n\" + logo);*/"},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":19,"author":{"gitId":"MingShun98"},"content":"        ArrayList\u003cTask\u003e lists \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":20,"author":{"gitId":"MingShun98"},"content":"        Scanner input \u003d new Scanner(System.in);"},{"lineNumber":21,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":"        while (true) {"},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":24,"author":{"gitId":"MingShun98"},"content":"            String word \u003d input.nextLine();"},{"lineNumber":25,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":26,"author":{"gitId":"MingShun98"},"content":"            if (word.equals(\"bye\")) {"},{"lineNumber":27,"author":{"gitId":"MingShun98"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":28,"author":{"gitId":"MingShun98"},"content":"                break;"},{"lineNumber":29,"author":{"gitId":"MingShun98"},"content":"            } else if (word.equals(\"list\")) {"},{"lineNumber":30,"author":{"gitId":"MingShun98"},"content":"                for (int i \u003d 0; i \u003c lists.size(); i++) {"},{"lineNumber":31,"author":{"gitId":"MingShun98"},"content":"                    System.out.println(i + 1 + \".[\" + getStatus(lists.get(i).isDone) + \"] \" + lists.get(i).description);"},{"lineNumber":32,"author":{"gitId":"MingShun98"},"content":"                }"},{"lineNumber":33,"author":{"gitId":"MingShun98"},"content":"            } else if (word.contains(\"done\")) {"},{"lineNumber":34,"author":{"gitId":"MingShun98"},"content":"                String numStr \u003d word.substring(word.indexOf(\" \") + 1);"},{"lineNumber":35,"author":{"gitId":"MingShun98"},"content":"                int num \u003d Integer.parseInt(numStr);"},{"lineNumber":36,"author":{"gitId":"MingShun98"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":37,"author":{"gitId":"MingShun98"},"content":"                Task d \u003d new Task(lists.get(num - 1).description);"},{"lineNumber":38,"author":{"gitId":"MingShun98"},"content":"                lists.get(num - 1).isDone \u003d d.markAsDone();"},{"lineNumber":39,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":40,"author":{"gitId":"MingShun98"},"content":"            } else {"},{"lineNumber":41,"author":{"gitId":"MingShun98"},"content":"                Task t \u003d new Task(word);"},{"lineNumber":42,"author":{"gitId":"MingShun98"},"content":"                lists.add(t);"},{"lineNumber":43,"author":{"gitId":"MingShun98"},"content":"                System.out.println(\"added: \" + word);"},{"lineNumber":44,"author":{"gitId":"MingShun98"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"MingShun98"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"MingShun98":39,"-":8}}]
