[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":"import duke.controller.TaskController;"},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":14,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":15,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"------------------------------------------\");"},{"lineNumber":16,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":17,"author":{"gitId":"s-t-e-f"},"content":"        boolean toContinueAddingTask \u003d true;"},{"lineNumber":18,"author":{"gitId":"s-t-e-f"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":19,"author":{"gitId":"s-t-e-f"},"content":"        String task \u003d sc.nextLine();"},{"lineNumber":20,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":21,"author":{"gitId":"s-t-e-f"},"content":"        while (toContinueAddingTask) {"},{"lineNumber":22,"author":{"gitId":"s-t-e-f"},"content":"            if (task.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":23,"author":{"gitId":"s-t-e-f"},"content":"                toContinueAddingTask \u003d false;"},{"lineNumber":24,"author":{"gitId":"s-t-e-f"},"content":"                break;"},{"lineNumber":25,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"s-t-e-f"},"content":"            else if (task.equalsIgnoreCase(\"list\")) {"},{"lineNumber":27,"author":{"gitId":"s-t-e-f"},"content":"                TaskController.printTaskList();"},{"lineNumber":28,"author":{"gitId":"s-t-e-f"},"content":"                System.out.println(\"------------------------------------------\");"},{"lineNumber":29,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"s-t-e-f"},"content":"            else if (task.contains(\"done\")){"},{"lineNumber":31,"author":{"gitId":"s-t-e-f"},"content":"                TaskController.markTaskDone(task);"},{"lineNumber":32,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"s-t-e-f"},"content":"            else if (task.contains(\"delete\")){"},{"lineNumber":34,"author":{"gitId":"s-t-e-f"},"content":"                TaskController.deleteTask(task);"},{"lineNumber":35,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"s-t-e-f"},"content":"            else {"},{"lineNumber":37,"author":{"gitId":"s-t-e-f"},"content":"                TaskController.addTask(task);"},{"lineNumber":38,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"s-t-e-f"},"content":"            task \u003d sc.nextLine().trim();"},{"lineNumber":40,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"------------------------------------------\");"},{"lineNumber":42,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"s-t-e-f":34,"-":10}},{"path":"src/main/java/duke/controller/TaskController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package duke.controller;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":"import duke.exceptions.ErrorHandler;"},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"import duke.tasks.*;"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":"public class TaskController {"},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":"    static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e ();"},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":"    static int tasksCount \u003d 0 ;"},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":"    static final int TODOLENGTH \u003d 4;"},{"lineNumber":14,"author":{"gitId":"s-t-e-f"},"content":"    static final int EVENTLENGTH \u003d 5;"},{"lineNumber":15,"author":{"gitId":"s-t-e-f"},"content":"    static final int DEADLINELENGTH \u003d 8;"},{"lineNumber":16,"author":{"gitId":"s-t-e-f"},"content":"    static final int DELETELENGTH \u003d 6;"},{"lineNumber":17,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":18,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":19,"author":{"gitId":"s-t-e-f"},"content":"    public static void printTaskList() {"},{"lineNumber":20,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"Here are the tasks in your list: \");"},{"lineNumber":21,"author":{"gitId":"s-t-e-f"},"content":"        for (int i\u003d0; i\u003ctasks.size(); i++) {"},{"lineNumber":22,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"    \" + (i+1) + \". \" + tasks.get(i));"},{"lineNumber":23,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":26,"author":{"gitId":"s-t-e-f"},"content":"    public static void addDeadline(String userInput) throws DukeException {"},{"lineNumber":27,"author":{"gitId":"s-t-e-f"},"content":"        if (userInput.length() \u003d\u003d DEADLINELENGTH ) {"},{"lineNumber":28,"author":{"gitId":"s-t-e-f"},"content":"            throw new DukeException(TaskType.DEADLINE);"},{"lineNumber":29,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"s-t-e-f"},"content":"        String description, by;"},{"lineNumber":31,"author":{"gitId":"s-t-e-f"},"content":"        userInput \u003d userInput.substring(DEADLINELENGTH+1).trim();"},{"lineNumber":32,"author":{"gitId":"s-t-e-f"},"content":"        if (userInput.contains(\"/\")){"},{"lineNumber":33,"author":{"gitId":"s-t-e-f"},"content":"            int idx \u003d userInput.indexOf(\u0027/\u0027);"},{"lineNumber":34,"author":{"gitId":"s-t-e-f"},"content":"            description \u003duserInput.substring(0, idx);"},{"lineNumber":35,"author":{"gitId":"s-t-e-f"},"content":"            by \u003d userInput.substring(idx+3).trim();"},{"lineNumber":36,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"s-t-e-f"},"content":"        else {"},{"lineNumber":38,"author":{"gitId":"s-t-e-f"},"content":"            description \u003duserInput;"},{"lineNumber":39,"author":{"gitId":"s-t-e-f"},"content":"            by \u003d \"\";"},{"lineNumber":40,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":42,"author":{"gitId":"s-t-e-f"},"content":"        Deadline d \u003d new Deadline(description, by);"},{"lineNumber":43,"author":{"gitId":"s-t-e-f"},"content":"        tasks.add(d);"},{"lineNumber":44,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":46,"author":{"gitId":"s-t-e-f"},"content":"    public static void addEvent(String userInput) throws DukeException {"},{"lineNumber":47,"author":{"gitId":"s-t-e-f"},"content":"        if (userInput.length() \u003d\u003d EVENTLENGTH) {"},{"lineNumber":48,"author":{"gitId":"s-t-e-f"},"content":"            throw new DukeException(TaskType.EVENT);"},{"lineNumber":49,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"s-t-e-f"},"content":"        String description, at;"},{"lineNumber":51,"author":{"gitId":"s-t-e-f"},"content":"        userInput \u003d userInput.substring(EVENTLENGTH+1).trim();"},{"lineNumber":52,"author":{"gitId":"s-t-e-f"},"content":"        if (userInput.contains(\"/\")){"},{"lineNumber":53,"author":{"gitId":"s-t-e-f"},"content":"            int idx \u003d userInput.indexOf(\u0027/\u0027);"},{"lineNumber":54,"author":{"gitId":"s-t-e-f"},"content":"            description \u003duserInput.substring(0, idx);"},{"lineNumber":55,"author":{"gitId":"s-t-e-f"},"content":"            at \u003d userInput.substring(idx+3).trim();"},{"lineNumber":56,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"s-t-e-f"},"content":"        else {"},{"lineNumber":58,"author":{"gitId":"s-t-e-f"},"content":"            description \u003duserInput;"},{"lineNumber":59,"author":{"gitId":"s-t-e-f"},"content":"            at \u003d \"\";"},{"lineNumber":60,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":62,"author":{"gitId":"s-t-e-f"},"content":"        Event e \u003d new Event(description, at);"},{"lineNumber":63,"author":{"gitId":"s-t-e-f"},"content":"        tasks.add(e);"},{"lineNumber":64,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":66,"author":{"gitId":"s-t-e-f"},"content":"    public static void addTodo(String userInput) throws DukeException {"},{"lineNumber":67,"author":{"gitId":"s-t-e-f"},"content":"        if (userInput.length() \u003d\u003d TODOLENGTH) {"},{"lineNumber":68,"author":{"gitId":"s-t-e-f"},"content":"            throw new DukeException(TaskType.TODO);"},{"lineNumber":69,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"s-t-e-f"},"content":"        String description \u003d userInput.substring(TODOLENGTH+1);"},{"lineNumber":71,"author":{"gitId":"s-t-e-f"},"content":"        Todo t \u003d new Todo(description);"},{"lineNumber":72,"author":{"gitId":"s-t-e-f"},"content":"        tasks.add(t);"},{"lineNumber":73,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":75,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":76,"author":{"gitId":"s-t-e-f"},"content":"    public static void addTask(String userInput) {"},{"lineNumber":77,"author":{"gitId":"s-t-e-f"},"content":"        try {"},{"lineNumber":78,"author":{"gitId":"s-t-e-f"},"content":"            if (userInput.toLowerCase().startsWith(\"deadline\")){"},{"lineNumber":79,"author":{"gitId":"s-t-e-f"},"content":"                addDeadline(userInput);"},{"lineNumber":80,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"s-t-e-f"},"content":"            else if (userInput.toLowerCase().startsWith(\"event\")){"},{"lineNumber":82,"author":{"gitId":"s-t-e-f"},"content":"                addEvent(userInput);"},{"lineNumber":83,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"s-t-e-f"},"content":"            else if (userInput.toLowerCase().startsWith(\"todo\")){"},{"lineNumber":85,"author":{"gitId":"s-t-e-f"},"content":"                addTodo(userInput);"},{"lineNumber":86,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"s-t-e-f"},"content":"            else {"},{"lineNumber":88,"author":{"gitId":"s-t-e-f"},"content":"                ErrorHandler.printErrorMsgInvalidInput();"},{"lineNumber":89,"author":{"gitId":"s-t-e-f"},"content":"                return;"},{"lineNumber":90,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"    Got it. I\u0027ve added this task: \\n      \" + tasks.get(tasksCount));"},{"lineNumber":92,"author":{"gitId":"s-t-e-f"},"content":"            tasksCount++;"},{"lineNumber":93,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"    Now you have \" + tasksCount + \" tasks in the list.\");"},{"lineNumber":94,"author":{"gitId":"s-t-e-f"},"content":"        } catch (DukeException e) {"},{"lineNumber":95,"author":{"gitId":"s-t-e-f"},"content":"            e.printErrorTaskCannotBeEmpty();"},{"lineNumber":96,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":99,"author":{"gitId":"s-t-e-f"},"content":"    public static void markTaskDone(String task) {"},{"lineNumber":100,"author":{"gitId":"s-t-e-f"},"content":"        try {"},{"lineNumber":101,"author":{"gitId":"s-t-e-f"},"content":"            int idx \u003d Integer.parseInt(String.valueOf(task.charAt(TODOLENGTH+1)));"},{"lineNumber":102,"author":{"gitId":"s-t-e-f"},"content":"            tasks.get(idx-1).markAsDone();"},{"lineNumber":103,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"------------------------------------------\");"},{"lineNumber":104,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"    Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":105,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"    \" + tasks.get(idx-1));"},{"lineNumber":106,"author":{"gitId":"s-t-e-f"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":107,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"OOPS!!! Please enter an integer after \u0027done\u0027.\");"},{"lineNumber":108,"author":{"gitId":"s-t-e-f"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":109,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"OOPS!!! Please choose a valid task index.\");"},{"lineNumber":110,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":112,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":114,"author":{"gitId":"s-t-e-f"},"content":"    public static void deleteTask(String task) {"},{"lineNumber":115,"author":{"gitId":"s-t-e-f"},"content":"        try {"},{"lineNumber":116,"author":{"gitId":"s-t-e-f"},"content":"            int idx \u003d Integer.parseInt(String.valueOf(task.charAt(DELETELENGTH+1)));"},{"lineNumber":117,"author":{"gitId":"s-t-e-f"},"content":"            String taskDescription \u003d tasks.get(idx-1).toString();"},{"lineNumber":118,"author":{"gitId":"s-t-e-f"},"content":"            tasks.remove(idx-1);"},{"lineNumber":119,"author":{"gitId":"s-t-e-f"},"content":"            tasksCount--;"},{"lineNumber":120,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"------------------------------------------\");"},{"lineNumber":121,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"    Noted. I\u0027ve removed this task: \");"},{"lineNumber":122,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"    \" + taskDescription);"},{"lineNumber":123,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"    Now you have \" + tasksCount + \" tasks in the list.\");"},{"lineNumber":124,"author":{"gitId":"s-t-e-f"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":125,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"OOPS!!! Please enter an integer after \u0027done\u0027.\");"},{"lineNumber":126,"author":{"gitId":"s-t-e-f"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":127,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"OOPS!!! Please choose a valid task index.\");"},{"lineNumber":128,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":131,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":131}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":"import duke.tasks.TaskType;"},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":"public class DukeException extends Exception {"},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":"    private final TaskType TASKTYPE;"},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"    public DukeException(TaskType taskType) {"},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":"        this.TASKTYPE \u003d taskType;"},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":14,"author":{"gitId":"s-t-e-f"},"content":"    public void printErrorTaskCannotBeEmpty() {"},{"lineNumber":15,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"OOPS!!! The description of a \" + TASKTYPE.toString().toLowerCase() + \" cannot be empty.\");"},{"lineNumber":16,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":18,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":18}},{"path":"src/main/java/duke/exceptions/ErrorHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"public class ErrorHandler {"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"    public static void printErrorMsgInvalidInput() {"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":9}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"    String by \u003d \"\";"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":"        return String.format(\"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" + by + \")\");"},{"lineNumber":14,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"s-t-e-f"},"content":"}"},{"lineNumber":16,"author":{"gitId":"s-t-e-f"},"content":""}],"authorContributionMap":{"s-t-e-f":16}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"    String at \u003d \"\";"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"    public Event(String description, String at) {"},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":"        this.at \u003d at;"},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":"        return String.format(\"[E][\" + getStatusIcon() + \"] \" + description + \" (at: \" + at + \")\");"},{"lineNumber":14,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":15}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":"    public String getDescription() {"},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":"        return description;"},{"lineNumber":14,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":16,"author":{"gitId":"s-t-e-f"},"content":"    public boolean isDone() {"},{"lineNumber":17,"author":{"gitId":"s-t-e-f"},"content":"        return isDone;"},{"lineNumber":18,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":20,"author":{"gitId":"s-t-e-f"},"content":"    public String getStatusIcon() {"},{"lineNumber":21,"author":{"gitId":"s-t-e-f"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":22,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":24,"author":{"gitId":"s-t-e-f"},"content":"    public void markAsDone() {"},{"lineNumber":25,"author":{"gitId":"s-t-e-f"},"content":"        this.isDone \u003d true;"},{"lineNumber":26,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":28,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":28}},{"path":"src/main/java/duke/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"public enum TaskType {"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":"    TODO,"},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"    EVENT,"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":"    DEADLINE"},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":7}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":"        return String.format(\"[T][\" + getStatusIcon() + \"] \" + description);"},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":13}}]
