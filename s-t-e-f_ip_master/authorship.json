[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"    private Storage storage;"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":"    private TaskList tasks;"},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"    private Ui ui;"},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":"    public Duke(String filePath) {"},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":"        ui \u003d new Ui();"},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":"        tasks \u003d new TaskList(storage.readFile());"},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":15,"author":{"gitId":"s-t-e-f"},"content":"    public void run() {"},{"lineNumber":16,"author":{"gitId":"s-t-e-f"},"content":"        ui.showWelcome();"},{"lineNumber":17,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":18,"author":{"gitId":"s-t-e-f"},"content":"        boolean isExit \u003d false;"},{"lineNumber":19,"author":{"gitId":"s-t-e-f"},"content":"        while (!isExit) {"},{"lineNumber":20,"author":{"gitId":"s-t-e-f"},"content":"            String fullCommand \u003d ui.readCommand();"},{"lineNumber":21,"author":{"gitId":"s-t-e-f"},"content":"            if (fullCommand.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":22,"author":{"gitId":"s-t-e-f"},"content":"                isExit \u003d true;"},{"lineNumber":23,"author":{"gitId":"s-t-e-f"},"content":"                Ui.printExitMessage();"},{"lineNumber":24,"author":{"gitId":"s-t-e-f"},"content":"                Storage.saveFile();"},{"lineNumber":25,"author":{"gitId":"s-t-e-f"},"content":"                break;"},{"lineNumber":26,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"s-t-e-f"},"content":"            else {"},{"lineNumber":28,"author":{"gitId":"s-t-e-f"},"content":"                Parser.processUserRequest(fullCommand);"},{"lineNumber":29,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"s-t-e-f"},"content":"        ui.showLine();"},{"lineNumber":32,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":34,"author":{"gitId":"s-t-e-f"},"content":"    public static void main(String[] args) {"},{"lineNumber":35,"author":{"gitId":"s-t-e-f"},"content":"        new Duke(System.getProperty(\"user.dir\") + \"\\\\Duke.txt\").run();"},{"lineNumber":36,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":37}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":"import exceptions.DukeException;"},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"import tasks.*;"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":"import java.util.regex.Matcher;"},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":"import java.util.regex.Pattern;"},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":"public class Parser {"},{"lineNumber":14,"author":{"gitId":"s-t-e-f"},"content":"    static final int TODOLENGTH \u003d 4;"},{"lineNumber":15,"author":{"gitId":"s-t-e-f"},"content":"    static final int EVENTLENGTH \u003d 5;"},{"lineNumber":16,"author":{"gitId":"s-t-e-f"},"content":"    static final int DEADLINELENGTH \u003d 8;"},{"lineNumber":17,"author":{"gitId":"s-t-e-f"},"content":"    static final int DELETELENGTH \u003d 6;"},{"lineNumber":18,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":19,"author":{"gitId":"s-t-e-f"},"content":"    public static void processUserRequest(String task) {"},{"lineNumber":20,"author":{"gitId":"s-t-e-f"},"content":"        if (task.equalsIgnoreCase(\"list\")) {"},{"lineNumber":21,"author":{"gitId":"s-t-e-f"},"content":"            Ui.printTaskList();"},{"lineNumber":22,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"s-t-e-f"},"content":"        else if (task.contains(\"done\")) {"},{"lineNumber":24,"author":{"gitId":"s-t-e-f"},"content":"            TaskList.markTaskDone(task);"},{"lineNumber":25,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"s-t-e-f"},"content":"        else if (task.contains(\"delete\")) {"},{"lineNumber":27,"author":{"gitId":"s-t-e-f"},"content":"            TaskList.deleteTask(task);"},{"lineNumber":28,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"s-t-e-f"},"content":"        else if (task.contains(\"find\")) {"},{"lineNumber":30,"author":{"gitId":"s-t-e-f"},"content":"            Ui.printMatchingTasks(task);"},{"lineNumber":31,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"s-t-e-f"},"content":"        else {"},{"lineNumber":33,"author":{"gitId":"s-t-e-f"},"content":"            TaskList.addTask(task);"},{"lineNumber":34,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":37,"author":{"gitId":"s-t-e-f"},"content":"    public static Deadline processAddDeadline(String userInput) throws DukeException {"},{"lineNumber":38,"author":{"gitId":"s-t-e-f"},"content":"        if (userInput.length() \u003d\u003d DEADLINELENGTH ) {"},{"lineNumber":39,"author":{"gitId":"s-t-e-f"},"content":"            throw new DukeException(TaskType.DEADLINE);"},{"lineNumber":40,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"s-t-e-f"},"content":"        String description, by;"},{"lineNumber":42,"author":{"gitId":"s-t-e-f"},"content":"        userInput \u003d userInput.substring(DEADLINELENGTH+1).trim();"},{"lineNumber":43,"author":{"gitId":"s-t-e-f"},"content":"        if (userInput.contains(\"/\")){"},{"lineNumber":44,"author":{"gitId":"s-t-e-f"},"content":"            int idx \u003d userInput.indexOf(\u0027/\u0027);"},{"lineNumber":45,"author":{"gitId":"s-t-e-f"},"content":"            description \u003duserInput.substring(0, idx);"},{"lineNumber":46,"author":{"gitId":"s-t-e-f"},"content":"            by \u003d userInput.substring(idx+3).trim();"},{"lineNumber":47,"author":{"gitId":"s-t-e-f"},"content":"            LocalDate date \u003d processDatesTimes(by);"},{"lineNumber":48,"author":{"gitId":"s-t-e-f"},"content":"            if (date !\u003d null) {"},{"lineNumber":49,"author":{"gitId":"s-t-e-f"},"content":"                return new Deadline(description, date);"},{"lineNumber":50,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"s-t-e-f"},"content":"        else {"},{"lineNumber":53,"author":{"gitId":"s-t-e-f"},"content":"            description \u003duserInput;"},{"lineNumber":54,"author":{"gitId":"s-t-e-f"},"content":"            by \u003d \"\";"},{"lineNumber":55,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"s-t-e-f"},"content":"        return new Deadline(description, by);"},{"lineNumber":57,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":59,"author":{"gitId":"s-t-e-f"},"content":"    public static Event processAddEvent(String userInput) throws DukeException {"},{"lineNumber":60,"author":{"gitId":"s-t-e-f"},"content":"        if (userInput.length() \u003d\u003d EVENTLENGTH) {"},{"lineNumber":61,"author":{"gitId":"s-t-e-f"},"content":"            throw new DukeException(TaskType.EVENT);"},{"lineNumber":62,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"s-t-e-f"},"content":"        String description, at;"},{"lineNumber":64,"author":{"gitId":"s-t-e-f"},"content":"        userInput \u003d userInput.substring(EVENTLENGTH+1).trim();"},{"lineNumber":65,"author":{"gitId":"s-t-e-f"},"content":"        if (userInput.contains(\"/\")){"},{"lineNumber":66,"author":{"gitId":"s-t-e-f"},"content":"            int idx \u003d userInput.indexOf(\u0027/\u0027);"},{"lineNumber":67,"author":{"gitId":"s-t-e-f"},"content":"            description \u003duserInput.substring(0, idx);"},{"lineNumber":68,"author":{"gitId":"s-t-e-f"},"content":"            at \u003d userInput.substring(idx+3).trim();"},{"lineNumber":69,"author":{"gitId":"s-t-e-f"},"content":"            LocalDate date \u003d processDatesTimes(at);"},{"lineNumber":70,"author":{"gitId":"s-t-e-f"},"content":"            if (date !\u003d null) {"},{"lineNumber":71,"author":{"gitId":"s-t-e-f"},"content":"                return new Event(description, date);"},{"lineNumber":72,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"s-t-e-f"},"content":"        else {"},{"lineNumber":75,"author":{"gitId":"s-t-e-f"},"content":"            description \u003duserInput;"},{"lineNumber":76,"author":{"gitId":"s-t-e-f"},"content":"            at \u003d \"\";"},{"lineNumber":77,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":79,"author":{"gitId":"s-t-e-f"},"content":"        return new Event(description, at);"},{"lineNumber":80,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":82,"author":{"gitId":"s-t-e-f"},"content":"    public static Todo processAddTodo(String userInput) throws DukeException {"},{"lineNumber":83,"author":{"gitId":"s-t-e-f"},"content":"        if (userInput.length() \u003d\u003d TODOLENGTH) {"},{"lineNumber":84,"author":{"gitId":"s-t-e-f"},"content":"            throw new DukeException(TaskType.TODO);"},{"lineNumber":85,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"s-t-e-f"},"content":"        String description \u003d userInput.substring(TODOLENGTH+1);"},{"lineNumber":87,"author":{"gitId":"s-t-e-f"},"content":"        return new Todo(description);"},{"lineNumber":88,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":90,"author":{"gitId":"s-t-e-f"},"content":"    public static LocalDate processDatesTimes(String dateString) {"},{"lineNumber":91,"author":{"gitId":"s-t-e-f"},"content":"        LocalDate date \u003d null;"},{"lineNumber":92,"author":{"gitId":"s-t-e-f"},"content":"        Pattern patt \u003d Pattern.compile(\"2[0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9]\");"},{"lineNumber":93,"author":{"gitId":"s-t-e-f"},"content":"        Matcher matcher \u003d patt.matcher(dateString);"},{"lineNumber":94,"author":{"gitId":"s-t-e-f"},"content":"        boolean matchFound \u003d matcher.find();"},{"lineNumber":95,"author":{"gitId":"s-t-e-f"},"content":"        if (matchFound) {"},{"lineNumber":96,"author":{"gitId":"s-t-e-f"},"content":"            try {"},{"lineNumber":97,"author":{"gitId":"s-t-e-f"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":98,"author":{"gitId":"s-t-e-f"},"content":"                date \u003d LocalDate.parse(dateString.substring(matcher.start(), matcher.start()+10), formatter);"},{"lineNumber":99,"author":{"gitId":"s-t-e-f"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":100,"author":{"gitId":"s-t-e-f"},"content":"                System.out.println(\"Unable to parse date ...\");"},{"lineNumber":101,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"s-t-e-f"},"content":"        return date;"},{"lineNumber":104,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":105}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"import tasks.Deadline;"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":"import tasks.Task;"},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"import tasks.Todo;"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":"import tasks.Event;"},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":"import java.io.*;"},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":"public class Storage {"},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":"    private static String filePath;"},{"lineNumber":14,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":15,"author":{"gitId":"s-t-e-f"},"content":"    public Storage(String filePath) {"},{"lineNumber":16,"author":{"gitId":"s-t-e-f"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":17,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":19,"author":{"gitId":"s-t-e-f"},"content":"    public static Task processFile(String line) {"},{"lineNumber":20,"author":{"gitId":"s-t-e-f"},"content":"        Task t \u003d null;"},{"lineNumber":21,"author":{"gitId":"s-t-e-f"},"content":"        int idx;"},{"lineNumber":22,"author":{"gitId":"s-t-e-f"},"content":"        String description, at , by;"},{"lineNumber":23,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":24,"author":{"gitId":"s-t-e-f"},"content":"        if (line.charAt(1) \u003d\u003d \u0027T\u0027) {"},{"lineNumber":25,"author":{"gitId":"s-t-e-f"},"content":"            t \u003d new Todo(line.substring(7));"},{"lineNumber":26,"author":{"gitId":"s-t-e-f"},"content":"        } else if (line.charAt(1) \u003d\u003d \u0027E\u0027) {"},{"lineNumber":27,"author":{"gitId":"s-t-e-f"},"content":"            idx \u003d line.indexOf(\u0027(\u0027);"},{"lineNumber":28,"author":{"gitId":"s-t-e-f"},"content":"            description \u003d line.substring(7, idx).trim();"},{"lineNumber":29,"author":{"gitId":"s-t-e-f"},"content":"            at \u003d line.substring(idx+4, line.length()-1).trim();"},{"lineNumber":30,"author":{"gitId":"s-t-e-f"},"content":"            t \u003d new Event(description, at);"},{"lineNumber":31,"author":{"gitId":"s-t-e-f"},"content":"        } else if (line.charAt(1) \u003d\u003d \u0027D\u0027) {"},{"lineNumber":32,"author":{"gitId":"s-t-e-f"},"content":"            idx \u003d line.indexOf(\u0027(\u0027);"},{"lineNumber":33,"author":{"gitId":"s-t-e-f"},"content":"            description \u003d line.substring(7, idx).trim();"},{"lineNumber":34,"author":{"gitId":"s-t-e-f"},"content":"            by \u003d line.substring(idx+4, line.length()-1).trim();"},{"lineNumber":35,"author":{"gitId":"s-t-e-f"},"content":"            t \u003d new Deadline(description, by);"},{"lineNumber":36,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"s-t-e-f"},"content":"        // check if task isDone"},{"lineNumber":38,"author":{"gitId":"s-t-e-f"},"content":"        if (line.contains(\"\\u2713\")) {"},{"lineNumber":39,"author":{"gitId":"s-t-e-f"},"content":"            t.markAsDone();"},{"lineNumber":40,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"s-t-e-f"},"content":"        return t;"},{"lineNumber":42,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":44,"author":{"gitId":"s-t-e-f"},"content":"    public static ArrayList\u003cTask\u003e readFile() {"},{"lineNumber":45,"author":{"gitId":"s-t-e-f"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":46,"author":{"gitId":"s-t-e-f"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"s-t-e-f"},"content":"            FileReader reader \u003d new FileReader(filePath);"},{"lineNumber":48,"author":{"gitId":"s-t-e-f"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(reader);"},{"lineNumber":49,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":50,"author":{"gitId":"s-t-e-f"},"content":"            String line;"},{"lineNumber":51,"author":{"gitId":"s-t-e-f"},"content":"            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"},{"lineNumber":52,"author":{"gitId":"s-t-e-f"},"content":"                Task t \u003d processFile(line);"},{"lineNumber":53,"author":{"gitId":"s-t-e-f"},"content":"                tasks.add(t);"},{"lineNumber":54,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":56,"author":{"gitId":"s-t-e-f"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":57,"author":{"gitId":"s-t-e-f"},"content":"            // starts with an empty file (empty taskArray)"},{"lineNumber":58,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"No file is loaded. Starting with an empty task list ... \");"},{"lineNumber":59,"author":{"gitId":"s-t-e-f"},"content":"            return null;"},{"lineNumber":60,"author":{"gitId":"s-t-e-f"},"content":"        } catch (IOException e) {"},{"lineNumber":61,"author":{"gitId":"s-t-e-f"},"content":"            e.printStackTrace();"},{"lineNumber":62,"author":{"gitId":"s-t-e-f"},"content":"            return null;"},{"lineNumber":63,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"s-t-e-f"},"content":"        return tasks;"},{"lineNumber":65,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":67,"author":{"gitId":"s-t-e-f"},"content":"    public static void saveFile() {"},{"lineNumber":68,"author":{"gitId":"s-t-e-f"},"content":"        try {"},{"lineNumber":69,"author":{"gitId":"s-t-e-f"},"content":"            FileWriter writer \u003d new FileWriter(filePath, false);"},{"lineNumber":70,"author":{"gitId":"s-t-e-f"},"content":"            ArrayList\u003cTask\u003e tasks \u003d TaskList.getTasks();"},{"lineNumber":71,"author":{"gitId":"s-t-e-f"},"content":"            for (Task t : tasks) {"},{"lineNumber":72,"author":{"gitId":"s-t-e-f"},"content":"                String task \u003d t.toString() + \"\\n\";"},{"lineNumber":73,"author":{"gitId":"s-t-e-f"},"content":"                writer.write(task);"},{"lineNumber":74,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"s-t-e-f"},"content":"            writer.close();"},{"lineNumber":76,"author":{"gitId":"s-t-e-f"},"content":"        } catch (IOException e) {"},{"lineNumber":77,"author":{"gitId":"s-t-e-f"},"content":"            e.printStackTrace();"},{"lineNumber":78,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":80}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"import exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":"import exceptions.ErrorHandler;"},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"import tasks.Task;"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":"import java.lang.reflect.Array;"},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":"public class TaskList {"},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":"    private static ArrayList\u003cTask\u003e tasks;"},{"lineNumber":14,"author":{"gitId":"s-t-e-f"},"content":"    private static int tasksCount;"},{"lineNumber":15,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":16,"author":{"gitId":"s-t-e-f"},"content":"    static final int DONELENGTH \u003d 4;"},{"lineNumber":17,"author":{"gitId":"s-t-e-f"},"content":"    static final int DELETELENGTH \u003d 6;"},{"lineNumber":18,"author":{"gitId":"s-t-e-f"},"content":"    static final int FINDLENGTH \u003d 4;"},{"lineNumber":19,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":20,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":21,"author":{"gitId":"s-t-e-f"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":22,"author":{"gitId":"s-t-e-f"},"content":"        if (tasks \u003d\u003d null) {"},{"lineNumber":23,"author":{"gitId":"s-t-e-f"},"content":"            tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"s-t-e-f"},"content":"            tasksCount \u003d0;"},{"lineNumber":25,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"s-t-e-f"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":27,"author":{"gitId":"s-t-e-f"},"content":"        this.tasksCount \u003d tasks.size();"},{"lineNumber":28,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":30,"author":{"gitId":"s-t-e-f"},"content":"    public static ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":31,"author":{"gitId":"s-t-e-f"},"content":"        return tasks;"},{"lineNumber":32,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":34,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":35,"author":{"gitId":"s-t-e-f"},"content":"    public static void addTask(String userInput) {"},{"lineNumber":36,"author":{"gitId":"s-t-e-f"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"s-t-e-f"},"content":"            Task t;"},{"lineNumber":38,"author":{"gitId":"s-t-e-f"},"content":"            if (userInput.toLowerCase().startsWith(\"deadline\")){"},{"lineNumber":39,"author":{"gitId":"s-t-e-f"},"content":"                t \u003d Parser.processAddDeadline(userInput);"},{"lineNumber":40,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"s-t-e-f"},"content":"            else if (userInput.toLowerCase().startsWith(\"event\")){"},{"lineNumber":42,"author":{"gitId":"s-t-e-f"},"content":"                t \u003d Parser.processAddEvent(userInput);"},{"lineNumber":43,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"s-t-e-f"},"content":"            else if (userInput.toLowerCase().startsWith(\"todo\")){"},{"lineNumber":45,"author":{"gitId":"s-t-e-f"},"content":"                t \u003d Parser.processAddTodo(userInput);"},{"lineNumber":46,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"s-t-e-f"},"content":"            else {"},{"lineNumber":48,"author":{"gitId":"s-t-e-f"},"content":"                ErrorHandler.printErrorMsgInvalidInput();"},{"lineNumber":49,"author":{"gitId":"s-t-e-f"},"content":"                return;"},{"lineNumber":50,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"s-t-e-f"},"content":"            tasks.add(t);"},{"lineNumber":52,"author":{"gitId":"s-t-e-f"},"content":"            Ui.printAddTaskMessage(tasks, tasksCount);"},{"lineNumber":53,"author":{"gitId":"s-t-e-f"},"content":"            tasksCount++;"},{"lineNumber":54,"author":{"gitId":"s-t-e-f"},"content":"        } catch (DukeException e) {"},{"lineNumber":55,"author":{"gitId":"s-t-e-f"},"content":"            e.getErrorTaskCannotBeEmpty();"},{"lineNumber":56,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":59,"author":{"gitId":"s-t-e-f"},"content":"    public static void markTaskDone(String task) {"},{"lineNumber":60,"author":{"gitId":"s-t-e-f"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"s-t-e-f"},"content":"            int idx \u003d Integer.parseInt(String.valueOf(task.charAt(DONELENGTH+1)));"},{"lineNumber":62,"author":{"gitId":"s-t-e-f"},"content":"            Task taskDone \u003d tasks.get(idx-1);"},{"lineNumber":63,"author":{"gitId":"s-t-e-f"},"content":"            taskDone.markAsDone();"},{"lineNumber":64,"author":{"gitId":"s-t-e-f"},"content":"            Ui.printMarkTaskDoneMessage(taskDone);"},{"lineNumber":65,"author":{"gitId":"s-t-e-f"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":66,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"OOPS!!! Please enter an integer after \u0027done\u0027.\");"},{"lineNumber":67,"author":{"gitId":"s-t-e-f"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":68,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"OOPS!!! Please choose a valid task index.\");"},{"lineNumber":69,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":71,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":73,"author":{"gitId":"s-t-e-f"},"content":"    public static void deleteTask(String task) {"},{"lineNumber":74,"author":{"gitId":"s-t-e-f"},"content":"        try {"},{"lineNumber":75,"author":{"gitId":"s-t-e-f"},"content":"            int idx \u003d Integer.parseInt(String.valueOf(task.charAt(DELETELENGTH+1)));"},{"lineNumber":76,"author":{"gitId":"s-t-e-f"},"content":"            Task taskDeleted \u003d tasks.get(idx-1);"},{"lineNumber":77,"author":{"gitId":"s-t-e-f"},"content":"            tasks.remove(idx-1);"},{"lineNumber":78,"author":{"gitId":"s-t-e-f"},"content":"            tasksCount--;"},{"lineNumber":79,"author":{"gitId":"s-t-e-f"},"content":"            Ui.printDeleteTaskMessage(taskDeleted, tasksCount);"},{"lineNumber":80,"author":{"gitId":"s-t-e-f"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":81,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"OOPS!!! Please enter an integer after \u0027delete\u0027.\");"},{"lineNumber":82,"author":{"gitId":"s-t-e-f"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":83,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"OOPS!!! Please choose a valid task index.\");"},{"lineNumber":84,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":87,"author":{"gitId":"s-t-e-f"},"content":"    public static ArrayList\u003cTask\u003e findTask(String task) {"},{"lineNumber":88,"author":{"gitId":"s-t-e-f"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":89,"author":{"gitId":"s-t-e-f"},"content":"        String searchDescription \u003d task.substring(FINDLENGTH+1).trim();"},{"lineNumber":90,"author":{"gitId":"s-t-e-f"},"content":"        for (Task t: tasks) {"},{"lineNumber":91,"author":{"gitId":"s-t-e-f"},"content":"            if (t.getDescription().contains(searchDescription)){"},{"lineNumber":92,"author":{"gitId":"s-t-e-f"},"content":"                matchingTasks.add(t);"},{"lineNumber":93,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":94,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"s-t-e-f"},"content":"        return matchingTasks;"},{"lineNumber":96,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":98,"author":{"gitId":"s-t-e-f"},"content":"    public static void addTaskFromData(Task t) {"},{"lineNumber":99,"author":{"gitId":"s-t-e-f"},"content":"        tasks.add(t);"},{"lineNumber":100,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":102,"author":{"gitId":"s-t-e-f"},"content":"    public static void incrementTaskCount() {"},{"lineNumber":103,"author":{"gitId":"s-t-e-f"},"content":"        tasksCount++;"},{"lineNumber":104,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":105}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"import tasks.Task;"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":"    public static void showWelcome() {"},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":14,"author":{"gitId":"s-t-e-f"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":15,"author":{"gitId":"s-t-e-f"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":16,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":17,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":18,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":19,"author":{"gitId":"s-t-e-f"},"content":"        showLine();"},{"lineNumber":20,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":22,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":23,"author":{"gitId":"s-t-e-f"},"content":"    public static String readCommand() {"},{"lineNumber":24,"author":{"gitId":"s-t-e-f"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":25,"author":{"gitId":"s-t-e-f"},"content":"        return sc.nextLine().trim();"},{"lineNumber":26,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":28,"author":{"gitId":"s-t-e-f"},"content":"    public static void showLine() {"},{"lineNumber":29,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"------------------------------------------\");"},{"lineNumber":30,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":32,"author":{"gitId":"s-t-e-f"},"content":"    public static void printExitMessage() {"},{"lineNumber":33,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");"},{"lineNumber":34,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":36,"author":{"gitId":"s-t-e-f"},"content":"    public static void printTasks(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":37,"author":{"gitId":"s-t-e-f"},"content":"        for (int i\u003d0; i\u003ctasks.size(); i++) {"},{"lineNumber":38,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"    \" + (i+1) + \". \" + tasks.get(i));"},{"lineNumber":39,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":42,"author":{"gitId":"s-t-e-f"},"content":"    public static void printTaskList() {"},{"lineNumber":43,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"    Here are the tasks in your list: \");"},{"lineNumber":44,"author":{"gitId":"s-t-e-f"},"content":"        printTasks(TaskList.getTasks());"},{"lineNumber":45,"author":{"gitId":"s-t-e-f"},"content":"        showLine();"},{"lineNumber":46,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":48,"author":{"gitId":"s-t-e-f"},"content":"    public static void printMatchingTasks(String task) {"},{"lineNumber":49,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"    Here are the matching tasks in your list: \");"},{"lineNumber":50,"author":{"gitId":"s-t-e-f"},"content":"        printTasks(TaskList.findTask(task));"},{"lineNumber":51,"author":{"gitId":"s-t-e-f"},"content":"        showLine();"},{"lineNumber":52,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":54,"author":{"gitId":"s-t-e-f"},"content":"    public static void printAddTaskMessage(ArrayList\u003cTask\u003e tasks, int tasksCount) {"},{"lineNumber":55,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task: \");"},{"lineNumber":56,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"      \" + tasks.get(tasksCount));"},{"lineNumber":57,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"    Now you have \" + (tasksCount + 1) + \" tasks in the list.\");"},{"lineNumber":58,"author":{"gitId":"s-t-e-f"},"content":"        showLine();"},{"lineNumber":59,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":61,"author":{"gitId":"s-t-e-f"},"content":"    public static void printMarkTaskDoneMessage(Task task) {"},{"lineNumber":62,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":63,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"    \" + task);"},{"lineNumber":64,"author":{"gitId":"s-t-e-f"},"content":"        showLine();"},{"lineNumber":65,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":67,"author":{"gitId":"s-t-e-f"},"content":"    public static void printDeleteTaskMessage(Task task, int tasksCount) {"},{"lineNumber":68,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task: \");"},{"lineNumber":69,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"    \" + task);"},{"lineNumber":70,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"    Now you have \" + tasksCount + \" tasks in the list.\");"},{"lineNumber":71,"author":{"gitId":"s-t-e-f"},"content":"        showLine();"},{"lineNumber":72,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"s-t-e-f"},"content":"}"},{"lineNumber":74,"author":{"gitId":"s-t-e-f"},"content":""}],"authorContributionMap":{"s-t-e-f":74}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":"import tasks.TaskType;"},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"    private final TaskType TASKTYPE;"},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":"    public DukeException(TaskType taskType) {"},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":"        this.TASKTYPE \u003d taskType;"},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":"    public void getErrorTaskCannotBeEmpty() {"},{"lineNumber":14,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"OOPS!!! The description of a \" + TASKTYPE.toString().toLowerCase() + \" cannot be empty.\");"},{"lineNumber":15,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":17,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":17}},{"path":"src/main/java/exceptions/ErrorHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"public class ErrorHandler {"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":"    public static void printErrorMsgInvalidInput() {"},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":7}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"    String byString \u003d \"\";"},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":"    LocalDate by \u003d null;"},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":"        this.byString \u003d by;"},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":15,"author":{"gitId":"s-t-e-f"},"content":"    public Deadline(String description, LocalDate by) {"},{"lineNumber":16,"author":{"gitId":"s-t-e-f"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"s-t-e-f"},"content":"        this.by \u003d by;"},{"lineNumber":18,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":20,"author":{"gitId":"s-t-e-f"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"s-t-e-f"},"content":"        if (by !\u003d null) {"},{"lineNumber":22,"author":{"gitId":"s-t-e-f"},"content":"            byString \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":23,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"s-t-e-f"},"content":"        return String.format(\"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" + byString + \")\");"},{"lineNumber":25,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":26}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":"    LocalDate at \u003d null;"},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":"    String atString \u003d \"\";"},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":"    public Event(String description, String at) {"},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":"        this.atString \u003d at;"},{"lineNumber":14,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"s-t-e-f"},"content":"    public Event(String description, LocalDate at) {"},{"lineNumber":16,"author":{"gitId":"s-t-e-f"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"s-t-e-f"},"content":"        this.at \u003d at;"},{"lineNumber":18,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":20,"author":{"gitId":"s-t-e-f"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"s-t-e-f"},"content":"        if (at !\u003d null) {"},{"lineNumber":22,"author":{"gitId":"s-t-e-f"},"content":"            atString \u003d at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":23,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"s-t-e-f"},"content":"        return String.format(\"[E][\" + getStatusIcon() + \"] \" + description + \" (at: \" + atString + \")\");"},{"lineNumber":25,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":26}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":"    public String getDescription() {"},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":"        return description;"},{"lineNumber":14,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":16,"author":{"gitId":"s-t-e-f"},"content":"    public boolean isDone() {"},{"lineNumber":17,"author":{"gitId":"s-t-e-f"},"content":"        return isDone;"},{"lineNumber":18,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":20,"author":{"gitId":"s-t-e-f"},"content":"    public String getStatusIcon() {"},{"lineNumber":21,"author":{"gitId":"s-t-e-f"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":22,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":24,"author":{"gitId":"s-t-e-f"},"content":"    public void markAsDone() {"},{"lineNumber":25,"author":{"gitId":"s-t-e-f"},"content":"        this.isDone \u003d true;"},{"lineNumber":26,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":27}},{"path":"src/main/java/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"public enum TaskType {"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":"    TODO,"},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"    EVENT,"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":"    DEADLINE"},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":7}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":"    public Todo(String description) {"},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":"        return String.format(\"[T][\" + getStatusIcon() + \"] \" + description);"},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":11}}]
