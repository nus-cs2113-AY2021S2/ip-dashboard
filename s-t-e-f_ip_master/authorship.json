[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"s-t-e-f"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"s-t-e-f"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"s-t-e-f":9,"-":17}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"    String by \u003d \"\";"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":"        return String.format(\"[D][ ] \" + description + \"(by: \" + by + \")\");"},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":"    static ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e ();"},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"    static int tasksCount \u003d 0 ;"},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":"    public static void printTaskList(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"Here are the tasks in your list: \");"},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":"        for (int i\u003d0; i\u003ctasksList.size(); i++){"},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":"            System.out.println(\"    \" + (i+1) + \". \" + taskList.get(i));"},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":16,"author":{"gitId":"s-t-e-f"},"content":"    public static void addTask(String userInput) {"},{"lineNumber":17,"author":{"gitId":"s-t-e-f"},"content":"        String description \u003d userInput;"},{"lineNumber":18,"author":{"gitId":"s-t-e-f"},"content":"        if (userInput.substring(0,8).equalsIgnoreCase(\"deadline\")){"},{"lineNumber":19,"author":{"gitId":"s-t-e-f"},"content":"            String by \u003d \"\";"},{"lineNumber":20,"author":{"gitId":"s-t-e-f"},"content":"            userInput \u003d userInput.substring(9,userInput.length()).trim();"},{"lineNumber":21,"author":{"gitId":"s-t-e-f"},"content":"            if (userInput.contains(\"/\")){"},{"lineNumber":22,"author":{"gitId":"s-t-e-f"},"content":"                int idx \u003d userInput.indexOf(\u0027/\u0027);"},{"lineNumber":23,"author":{"gitId":"s-t-e-f"},"content":"                description \u003duserInput.substring(0, idx);"},{"lineNumber":24,"author":{"gitId":"s-t-e-f"},"content":"                by \u003d userInput.substring(idx+3, userInput.length()).trim();"},{"lineNumber":25,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":27,"author":{"gitId":"s-t-e-f"},"content":"            Deadline d \u003d new Deadline(description, by);"},{"lineNumber":28,"author":{"gitId":"s-t-e-f"},"content":"            tasksList.add(d);"},{"lineNumber":29,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"s-t-e-f"},"content":"        else if (userInput.substring(0,5).equalsIgnoreCase(\"event\")){"},{"lineNumber":31,"author":{"gitId":"s-t-e-f"},"content":"            String at \u003d \"\";"},{"lineNumber":32,"author":{"gitId":"s-t-e-f"},"content":"            userInput \u003d userInput.substring(6,userInput.length()).trim();"},{"lineNumber":33,"author":{"gitId":"s-t-e-f"},"content":"            if (userInput.contains(\"/\")){"},{"lineNumber":34,"author":{"gitId":"s-t-e-f"},"content":"                int idx \u003d userInput.indexOf(\u0027/\u0027);"},{"lineNumber":35,"author":{"gitId":"s-t-e-f"},"content":"                description \u003duserInput.substring(0, idx);"},{"lineNumber":36,"author":{"gitId":"s-t-e-f"},"content":"                at \u003d userInput.substring(idx+3, userInput.length()).trim();"},{"lineNumber":37,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":39,"author":{"gitId":"s-t-e-f"},"content":"            Event e \u003d new Event(description, at);"},{"lineNumber":40,"author":{"gitId":"s-t-e-f"},"content":"            tasksList.add(e);"},{"lineNumber":41,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"s-t-e-f"},"content":"        else if (userInput.substring(0,4).equalsIgnoreCase(\"todo\")){"},{"lineNumber":43,"author":{"gitId":"s-t-e-f"},"content":"            description \u003d userInput.substring(5, userInput.length());"},{"lineNumber":44,"author":{"gitId":"s-t-e-f"},"content":"            Todo t \u003d new Todo(description);"},{"lineNumber":45,"author":{"gitId":"s-t-e-f"},"content":"            tasksList.add(t);"},{"lineNumber":46,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task: \\n      \" + tasksList.get(tasksCount));"},{"lineNumber":48,"author":{"gitId":"s-t-e-f"},"content":"        tasksCount++;"},{"lineNumber":49,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"    Now you have \" + tasksCount + \" tasks in the list.\");"},{"lineNumber":50,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":51,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":55,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":60,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":61,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":62,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"------------------------------------------\");"},{"lineNumber":63,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":64,"author":{"gitId":"s-t-e-f"},"content":"        boolean toContinueAddingTask \u003d true;"},{"lineNumber":65,"author":{"gitId":"s-t-e-f"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":66,"author":{"gitId":"s-t-e-f"},"content":"        String task \u003d sc.nextLine();"},{"lineNumber":67,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":68,"author":{"gitId":"s-t-e-f"},"content":"        while (toContinueAddingTask) {"},{"lineNumber":69,"author":{"gitId":"s-t-e-f"},"content":"            if (task.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":70,"author":{"gitId":"s-t-e-f"},"content":"                toContinueAddingTask \u003d false;"},{"lineNumber":71,"author":{"gitId":"s-t-e-f"},"content":"                break;"},{"lineNumber":72,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"s-t-e-f"},"content":"            else if (task.equalsIgnoreCase(\"list\")) {"},{"lineNumber":74,"author":{"gitId":"s-t-e-f"},"content":"                printTaskList(tasksList);"},{"lineNumber":75,"author":{"gitId":"s-t-e-f"},"content":"                System.out.println(\"------------------------------------------\");"},{"lineNumber":76,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"s-t-e-f"},"content":"            else if (task.contains(\"done\")){"},{"lineNumber":78,"author":{"gitId":"s-t-e-f"},"content":"                int idx \u003d Integer.parseInt(String.valueOf(task.charAt(5)));"},{"lineNumber":79,"author":{"gitId":"s-t-e-f"},"content":"                tasksList.get(idx-1).markAsDone();"},{"lineNumber":80,"author":{"gitId":"s-t-e-f"},"content":"                System.out.println(\"------------------------------------------\");"},{"lineNumber":81,"author":{"gitId":"s-t-e-f"},"content":"                System.out.println(\"    Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":82,"author":{"gitId":"s-t-e-f"},"content":"                System.out.println(\"    \" + tasksList.get(idx-1));"},{"lineNumber":83,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"s-t-e-f"},"content":"            else {"},{"lineNumber":85,"author":{"gitId":"s-t-e-f"},"content":"                try {"},{"lineNumber":86,"author":{"gitId":"s-t-e-f"},"content":"                    addTask(task);"},{"lineNumber":87,"author":{"gitId":"s-t-e-f"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"s-t-e-f"},"content":"                catch (Exception e) {"},{"lineNumber":89,"author":{"gitId":"s-t-e-f"},"content":"                    System.out.println(\"    Invalid input! To add task: Please start with \u0027todo\u0027/ \u0027deadline\u0027 / \u0027event\u0027. \");"},{"lineNumber":90,"author":{"gitId":"s-t-e-f"},"content":"                    System.out.println(\"                   To view the list of tasks: Enter \u0027list\u0027. \");"},{"lineNumber":91,"author":{"gitId":"s-t-e-f"},"content":"                    System.out.println(\"                   To end the application: Enter \u0027bye\u0027. \");"},{"lineNumber":92,"author":{"gitId":"s-t-e-f"},"content":"                }"},{"lineNumber":93,"author":{"gitId":"s-t-e-f"},"content":"            }"},{"lineNumber":94,"author":{"gitId":"s-t-e-f"},"content":"            task \u003d sc.nextLine().trim();"},{"lineNumber":95,"author":{"gitId":"s-t-e-f"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"------------------------------------------\");"},{"lineNumber":97,"author":{"gitId":"s-t-e-f"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"s-t-e-f":89,"-":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"    String at \u003d \"\";"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"    public Event(String description, String at) {"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"        this.at \u003d at;"},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":"        return String.format(\"[E][ ]\" + description + \"(at: \" + at + \")\");"},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":"    public String getDescription() {"},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":"        return description;"},{"lineNumber":12,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":14,"author":{"gitId":"s-t-e-f"},"content":"    public boolean isDone() {"},{"lineNumber":15,"author":{"gitId":"s-t-e-f"},"content":"        return isDone;"},{"lineNumber":16,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":18,"author":{"gitId":"s-t-e-f"},"content":"    public String getStatusIcon() {"},{"lineNumber":19,"author":{"gitId":"s-t-e-f"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":20,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":22,"author":{"gitId":"s-t-e-f"},"content":"    public void markAsDone() {"},{"lineNumber":23,"author":{"gitId":"s-t-e-f"},"content":"        this.isDone \u003d true;"},{"lineNumber":24,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"s-t-e-f"},"content":"    //..."},{"lineNumber":26,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s-t-e-f"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":3,"author":{"gitId":"s-t-e-f"},"content":"    public Todo(String description) {"},{"lineNumber":4,"author":{"gitId":"s-t-e-f"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":7,"author":{"gitId":"s-t-e-f"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"s-t-e-f"},"content":"        return String.format(\"[T][\" + getStatusIcon() + \"] \" + description);"},{"lineNumber":9,"author":{"gitId":"s-t-e-f"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"s-t-e-f"},"content":""},{"lineNumber":11,"author":{"gitId":"s-t-e-f"},"content":"}"}],"authorContributionMap":{"s-t-e-f":11}}]
