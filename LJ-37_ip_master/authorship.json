[{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJ-37"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":3,"author":{"gitId":"LJ-37"},"content":"import duke.task.*;"},{"lineNumber":4,"author":{"gitId":"LJ-37"},"content":"import duke.main.*;"},{"lineNumber":5,"author":{"gitId":"LJ-37"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":7,"author":{"gitId":"LJ-37"},"content":"public class AddCommand implements Command {"},{"lineNumber":8,"author":{"gitId":"LJ-37"},"content":"    public AddCommand(String input) {"},{"lineNumber":9,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":11,"author":{"gitId":"LJ-37"},"content":"    private static final String TODO \u003d \"todo\";"},{"lineNumber":12,"author":{"gitId":"LJ-37"},"content":"    private static final String DEADLINE \u003d \"deadline\";"},{"lineNumber":13,"author":{"gitId":"LJ-37"},"content":"    private static final String EVENT \u003d \"event\";"},{"lineNumber":14,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":15,"author":{"gitId":"LJ-37"},"content":"    public void execute(String input) throws DukeException {"},{"lineNumber":16,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":17,"author":{"gitId":"LJ-37"},"content":"        String[] command \u003d input.trim().split(\" \");"},{"lineNumber":18,"author":{"gitId":"LJ-37"},"content":"        String action \u003d command[0];"},{"lineNumber":19,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":20,"author":{"gitId":"LJ-37"},"content":"        if (!action.equals(TODO) \u0026\u0026 !action.equals(DEADLINE) \u0026\u0026 !action.equals(EVENT)) { //to check if the action required is recognised"},{"lineNumber":21,"author":{"gitId":"LJ-37"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":22,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"LJ-37"},"content":"        else if (command.length \u003d\u003d 1) { //to check if there is more than just a recognised action for todo, deadline and event commands"},{"lineNumber":24,"author":{"gitId":"LJ-37"},"content":"            throw new DukeException(\"OOPS!!! The description of a \" + action + \" cannot be empty.\");"},{"lineNumber":25,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":27,"author":{"gitId":"LJ-37"},"content":"        switch (action) {"},{"lineNumber":28,"author":{"gitId":"LJ-37"},"content":"            case TODO:"},{"lineNumber":29,"author":{"gitId":"LJ-37"},"content":"                Todo todoTask \u003d new Todo(getDescription(input));"},{"lineNumber":30,"author":{"gitId":"LJ-37"},"content":"                addTask(todoTask);"},{"lineNumber":31,"author":{"gitId":"LJ-37"},"content":"                break;"},{"lineNumber":32,"author":{"gitId":"LJ-37"},"content":"            case DEADLINE:"},{"lineNumber":33,"author":{"gitId":"LJ-37"},"content":"                Deadline deadlineTask \u003d new Deadline(getDescription(input), getBy(input));"},{"lineNumber":34,"author":{"gitId":"LJ-37"},"content":"                addTask(deadlineTask);"},{"lineNumber":35,"author":{"gitId":"LJ-37"},"content":"                break;"},{"lineNumber":36,"author":{"gitId":"LJ-37"},"content":"            case EVENT:"},{"lineNumber":37,"author":{"gitId":"LJ-37"},"content":"                Event eventTask \u003d new Event(getDescription(input), getOn(input));"},{"lineNumber":38,"author":{"gitId":"LJ-37"},"content":"                addTask(eventTask);"},{"lineNumber":39,"author":{"gitId":"LJ-37"},"content":"                break;"},{"lineNumber":40,"author":{"gitId":"LJ-37"},"content":"            default:"},{"lineNumber":41,"author":{"gitId":"LJ-37"},"content":"                System.out.println(\"This function is not recognized!\");"},{"lineNumber":42,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":44,"author":{"gitId":"LJ-37"},"content":"        end();"},{"lineNumber":45,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":47,"author":{"gitId":"LJ-37"},"content":"    // get the descriptions of the tasks"},{"lineNumber":48,"author":{"gitId":"LJ-37"},"content":"    public String getDescription(String input) {"},{"lineNumber":49,"author":{"gitId":"LJ-37"},"content":"        if (input.contains(\"/\")) {"},{"lineNumber":50,"author":{"gitId":"LJ-37"},"content":"            String[] split \u003d input.trim().split(\"/\");"},{"lineNumber":51,"author":{"gitId":"LJ-37"},"content":"            String[] commandPlusDescription \u003d split[0].trim().split(\" \");"},{"lineNumber":52,"author":{"gitId":"LJ-37"},"content":"            return splitCommand(commandPlusDescription);"},{"lineNumber":53,"author":{"gitId":"LJ-37"},"content":"        } else {"},{"lineNumber":54,"author":{"gitId":"LJ-37"},"content":"            String[] commandPlusDescription \u003d input.trim().split(\" \");"},{"lineNumber":55,"author":{"gitId":"LJ-37"},"content":"            return splitCommand(commandPlusDescription);"},{"lineNumber":56,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":59,"author":{"gitId":"LJ-37"},"content":"    // split the command to get Description of the tasks"},{"lineNumber":60,"author":{"gitId":"LJ-37"},"content":"    private String splitCommand(String[] commandPlusDescription) {"},{"lineNumber":61,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":62,"author":{"gitId":"LJ-37"},"content":"        String[] description \u003d new String[commandPlusDescription.length - 1];"},{"lineNumber":63,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":64,"author":{"gitId":"LJ-37"},"content":"        for (int i \u003d 1; i \u003c commandPlusDescription.length; i++) {"},{"lineNumber":65,"author":{"gitId":"LJ-37"},"content":"            description[i - 1] \u003d commandPlusDescription[i];"},{"lineNumber":66,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":68,"author":{"gitId":"LJ-37"},"content":"        return Arrays.toString(description).replace(\",\", \"\")"},{"lineNumber":69,"author":{"gitId":"LJ-37"},"content":"                .replace(\"[\", \"\")"},{"lineNumber":70,"author":{"gitId":"LJ-37"},"content":"                .replace(\"]\", \"\")"},{"lineNumber":71,"author":{"gitId":"LJ-37"},"content":"                .trim();"},{"lineNumber":72,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":74,"author":{"gitId":"LJ-37"},"content":"    // get the deadline for Deadline tasks"},{"lineNumber":75,"author":{"gitId":"LJ-37"},"content":"    public static String getBy(String input) {"},{"lineNumber":76,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":77,"author":{"gitId":"LJ-37"},"content":"        String[] split \u003d input.trim().split(\"/by\");"},{"lineNumber":78,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":79,"author":{"gitId":"LJ-37"},"content":"        return split[1];"},{"lineNumber":80,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":82,"author":{"gitId":"LJ-37"},"content":"    // get the on for Event tasks"},{"lineNumber":83,"author":{"gitId":"LJ-37"},"content":"    public static String getOn(String input) {"},{"lineNumber":84,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":85,"author":{"gitId":"LJ-37"},"content":"        String[] split \u003d input.trim().split(\"/at\");"},{"lineNumber":86,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":87,"author":{"gitId":"LJ-37"},"content":"        return split[1];"},{"lineNumber":88,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":90,"author":{"gitId":"LJ-37"},"content":"    // adds task to the ArrayList of tasks"},{"lineNumber":91,"author":{"gitId":"LJ-37"},"content":"    public static void addTask(Task t) throws DukeException {"},{"lineNumber":92,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":93,"author":{"gitId":"LJ-37"},"content":"        // checks if there is already the same task in the list"},{"lineNumber":94,"author":{"gitId":"LJ-37"},"content":"        for (int i \u003d 0; i \u003c TaskManager.numOfTasks; i++) {"},{"lineNumber":95,"author":{"gitId":"LJ-37"},"content":"            if (TaskManager.tasks.get(i).toString().equals(t.toString())) {"},{"lineNumber":96,"author":{"gitId":"LJ-37"},"content":"                throw new DukeException(\"Task already exists!\");"},{"lineNumber":97,"author":{"gitId":"LJ-37"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":100,"author":{"gitId":"LJ-37"},"content":"        TaskManager.tasks.add(t);"},{"lineNumber":101,"author":{"gitId":"LJ-37"},"content":"        TaskManager.numOfTasks++;"},{"lineNumber":102,"author":{"gitId":"LJ-37"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\" + System.lineSeparator() + t.toString());"},{"lineNumber":103,"author":{"gitId":"LJ-37"},"content":"        System.out.println(\"Now you have \" + TaskManager.numOfTasks + \" task in the list.\");"},{"lineNumber":104,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":106,"author":{"gitId":"LJ-37"},"content":"    public static void end() {"},{"lineNumber":107,"author":{"gitId":"LJ-37"},"content":"        System.out.println(\"____________________________________________________________\" + System.lineSeparator());"},{"lineNumber":108,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"LJ-37"},"content":"}"}],"authorContributionMap":{"LJ-37":109}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJ-37"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":3,"author":{"gitId":"LJ-37"},"content":"import duke.main.DukeException;"},{"lineNumber":4,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":5,"author":{"gitId":"LJ-37"},"content":"public interface Command {"},{"lineNumber":6,"author":{"gitId":"LJ-37"},"content":"    public void execute(String string) throws DukeException;"},{"lineNumber":7,"author":{"gitId":"LJ-37"},"content":"}"}],"authorContributionMap":{"LJ-37":7}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJ-37"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":3,"author":{"gitId":"LJ-37"},"content":"import duke.main.DukeException;"},{"lineNumber":4,"author":{"gitId":"LJ-37"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"LJ-37"},"content":"import duke.task.TaskManager;"},{"lineNumber":6,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":7,"author":{"gitId":"LJ-37"},"content":"public class DeleteCommand implements Command {"},{"lineNumber":8,"author":{"gitId":"LJ-37"},"content":"    public DeleteCommand(String input) {"},{"lineNumber":9,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":11,"author":{"gitId":"LJ-37"},"content":"    public void execute(String input) throws DukeException {"},{"lineNumber":12,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":13,"author":{"gitId":"LJ-37"},"content":"        String[] command \u003d input.trim().split(\" \");"},{"lineNumber":14,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":15,"author":{"gitId":"LJ-37"},"content":"        if (command.length \u003d\u003d 1) { //to check if index of task to be deleted is given"},{"lineNumber":16,"author":{"gitId":"LJ-37"},"content":"            throw new DukeException(\"OOPS!!! You missed out the index of the task you want to delete.\");"},{"lineNumber":17,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":19,"author":{"gitId":"LJ-37"},"content":"        int num \u003d 0;"},{"lineNumber":20,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":21,"author":{"gitId":"LJ-37"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"LJ-37"},"content":"            num \u003d Integer.parseInt(command[1]);"},{"lineNumber":23,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":24,"author":{"gitId":"LJ-37"},"content":"            if (num \u003e TaskManager.tasks.size() || num \u003c 1) {"},{"lineNumber":25,"author":{"gitId":"LJ-37"},"content":"                throw new DukeException(\"Error: no such task index\");"},{"lineNumber":26,"author":{"gitId":"LJ-37"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":28,"author":{"gitId":"LJ-37"},"content":"            Task task \u003d TaskManager.tasks.get(num - 1);"},{"lineNumber":29,"author":{"gitId":"LJ-37"},"content":"            TaskManager.tasks.remove(num - 1);"},{"lineNumber":30,"author":{"gitId":"LJ-37"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":31,"author":{"gitId":"LJ-37"},"content":"            System.out.println(task);"},{"lineNumber":32,"author":{"gitId":"LJ-37"},"content":"            TaskManager.numOfTasks -\u003d 1;"},{"lineNumber":33,"author":{"gitId":"LJ-37"},"content":"            System.out.println(\"Now you have \" + TaskManager.numOfTasks + \" tasks in the list.\");"},{"lineNumber":34,"author":{"gitId":"LJ-37"},"content":"        } catch (NumberFormatException e) { //to check if the word after done is a number"},{"lineNumber":35,"author":{"gitId":"LJ-37"},"content":"            System.out.println(\"Error: input is not a number.\");"},{"lineNumber":36,"author":{"gitId":"LJ-37"},"content":"        } catch (NullPointerException e) { //to check if the number after done is a valid number for a task"},{"lineNumber":37,"author":{"gitId":"LJ-37"},"content":"            System.out.println(\"Error: input is invalid\");"},{"lineNumber":38,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":40,"author":{"gitId":"LJ-37"},"content":"        end();"},{"lineNumber":41,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":43,"author":{"gitId":"LJ-37"},"content":"    public static void end() {"},{"lineNumber":44,"author":{"gitId":"LJ-37"},"content":"        System.out.println(\"____________________________________________________________\" + System.lineSeparator());"},{"lineNumber":45,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"LJ-37"},"content":"}"},{"lineNumber":47,"author":{"gitId":"LJ-37"},"content":""}],"authorContributionMap":{"LJ-37":47}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJ-37"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":3,"author":{"gitId":"LJ-37"},"content":"import duke.main.DukeException;"},{"lineNumber":4,"author":{"gitId":"LJ-37"},"content":"import duke.task.TaskManager;"},{"lineNumber":5,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":6,"author":{"gitId":"LJ-37"},"content":"public class DoneCommand implements Command {"},{"lineNumber":7,"author":{"gitId":"LJ-37"},"content":"    public DoneCommand(String input) {"},{"lineNumber":8,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":10,"author":{"gitId":"LJ-37"},"content":"    public void execute(String input) throws DukeException {"},{"lineNumber":11,"author":{"gitId":"LJ-37"},"content":"        String[] command \u003d input.trim().split(\" \");"},{"lineNumber":12,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":13,"author":{"gitId":"LJ-37"},"content":"        if (command.length \u003d\u003d 1) { //to check if index of task that is done is given"},{"lineNumber":14,"author":{"gitId":"LJ-37"},"content":"            throw new DukeException(\"OOPS!!! You missed out the index of the task you have done.\");"},{"lineNumber":15,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":17,"author":{"gitId":"LJ-37"},"content":"        int num \u003d 0;"},{"lineNumber":18,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":19,"author":{"gitId":"LJ-37"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"LJ-37"},"content":"            num \u003d Integer.parseInt(command[1]);"},{"lineNumber":21,"author":{"gitId":"LJ-37"},"content":"            if (num \u003e TaskManager.tasks.size() || num \u003c 1) {"},{"lineNumber":22,"author":{"gitId":"LJ-37"},"content":"                throw new DukeException(\"Error: no such task index\");"},{"lineNumber":23,"author":{"gitId":"LJ-37"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"LJ-37"},"content":"            if (TaskManager.tasks.get(num - 1).isDone \u003d\u003d false) {"},{"lineNumber":25,"author":{"gitId":"LJ-37"},"content":"                TaskManager.tasks.get(num - 1).setAsDone();"},{"lineNumber":26,"author":{"gitId":"LJ-37"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":27,"author":{"gitId":"LJ-37"},"content":"                System.out.println(TaskManager.tasks.get(num - 1));"},{"lineNumber":28,"author":{"gitId":"LJ-37"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"LJ-37"},"content":"            else {"},{"lineNumber":30,"author":{"gitId":"LJ-37"},"content":"                System.out.println(\"Task is already done!\");"},{"lineNumber":31,"author":{"gitId":"LJ-37"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"LJ-37"},"content":"        } catch (NumberFormatException e) { //to check if the word after done is a number"},{"lineNumber":33,"author":{"gitId":"LJ-37"},"content":"            System.out.println(\"Error: input is not a number.\");"},{"lineNumber":34,"author":{"gitId":"LJ-37"},"content":"        } catch (NullPointerException e) { //to check if the number after done is a valid number for a task"},{"lineNumber":35,"author":{"gitId":"LJ-37"},"content":"            System.out.println(\"Error: input is invalid\");"},{"lineNumber":36,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"LJ-37"},"content":"        end();"},{"lineNumber":38,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":40,"author":{"gitId":"LJ-37"},"content":"    public static void end() {"},{"lineNumber":41,"author":{"gitId":"LJ-37"},"content":"        System.out.println(\"____________________________________________________________\" + System.lineSeparator());"},{"lineNumber":42,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"LJ-37"},"content":"}"}],"authorContributionMap":{"LJ-37":43}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJ-37"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":3,"author":{"gitId":"LJ-37"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":5,"author":{"gitId":"LJ-37"},"content":"public class ExitCommand implements Command {"},{"lineNumber":6,"author":{"gitId":"LJ-37"},"content":"    public ExitCommand(String input) {"},{"lineNumber":7,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":9,"author":{"gitId":"LJ-37"},"content":"    public void execute(String input) {"},{"lineNumber":10,"author":{"gitId":"LJ-37"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\" + System.lineSeparator());"},{"lineNumber":11,"author":{"gitId":"LJ-37"},"content":"        end();"},{"lineNumber":12,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":14,"author":{"gitId":"LJ-37"},"content":"    public static void end() {"},{"lineNumber":15,"author":{"gitId":"LJ-37"},"content":"        System.out.println(\"____________________________________________________________\" + System.lineSeparator());"},{"lineNumber":16,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"LJ-37"},"content":"}"}],"authorContributionMap":{"LJ-37":17}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJ-37"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":3,"author":{"gitId":"LJ-37"},"content":"import duke.task.TaskManager;"},{"lineNumber":4,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":5,"author":{"gitId":"LJ-37"},"content":"public class ListCommand implements Command {"},{"lineNumber":6,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":7,"author":{"gitId":"LJ-37"},"content":"    public ListCommand(String input) {"},{"lineNumber":8,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":10,"author":{"gitId":"LJ-37"},"content":"    public void execute(String input) {"},{"lineNumber":11,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":12,"author":{"gitId":"LJ-37"},"content":"        if (TaskManager.numOfTasks \u003d\u003d 0) {"},{"lineNumber":13,"author":{"gitId":"LJ-37"},"content":"            System.out.println(\"You have no task! :)\");"},{"lineNumber":14,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"LJ-37"},"content":"        else {"},{"lineNumber":16,"author":{"gitId":"LJ-37"},"content":"            int count \u003d 0;"},{"lineNumber":17,"author":{"gitId":"LJ-37"},"content":"            while (count \u003c TaskManager.numOfTasks) {"},{"lineNumber":18,"author":{"gitId":"LJ-37"},"content":"                System.out.println(count + 1 + \": \" + TaskManager.tasks.get(count));"},{"lineNumber":19,"author":{"gitId":"LJ-37"},"content":"                count++;"},{"lineNumber":20,"author":{"gitId":"LJ-37"},"content":"            }"},{"lineNumber":21,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":23,"author":{"gitId":"LJ-37"},"content":"        end();"},{"lineNumber":24,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":26,"author":{"gitId":"LJ-37"},"content":"    public static void end() {"},{"lineNumber":27,"author":{"gitId":"LJ-37"},"content":"        System.out.println(\"____________________________________________________________\" + System.lineSeparator());"},{"lineNumber":28,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"LJ-37"},"content":"}"}],"authorContributionMap":{"LJ-37":29}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJ-37"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":3,"author":{"gitId":"LJ-37"},"content":"import duke.command.AddCommand;"},{"lineNumber":4,"author":{"gitId":"LJ-37"},"content":"import duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"LJ-37"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"LJ-37"},"content":"import duke.task.TaskManager;"},{"lineNumber":7,"author":{"gitId":"LJ-37"},"content":"import duke.task.Todo;"},{"lineNumber":8,"author":{"gitId":"LJ-37"},"content":"import duke.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"LJ-37"},"content":"import duke.task.Event;"},{"lineNumber":10,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":11,"author":{"gitId":"LJ-37"},"content":"import java.io.*;"},{"lineNumber":12,"author":{"gitId":"LJ-37"},"content":"import java.nio.file.FileSystems;"},{"lineNumber":13,"author":{"gitId":"LJ-37"},"content":"import java.nio.file.Files;"},{"lineNumber":14,"author":{"gitId":"LJ-37"},"content":"import java.nio.file.Path;"},{"lineNumber":15,"author":{"gitId":"LJ-37"},"content":"import java.nio.file.Paths;"},{"lineNumber":16,"author":{"gitId":"LJ-37"},"content":"import java.sql.ClientInfoStatus;"},{"lineNumber":17,"author":{"gitId":"LJ-37"},"content":"import java.util.ArrayList;"},{"lineNumber":18,"author":{"gitId":"LJ-37"},"content":"import java.util.Scanner;"},{"lineNumber":19,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":22,"author":{"gitId":"LJ-37"},"content":"        greet();"},{"lineNumber":23,"author":{"gitId":"LJ-37"},"content":"        loadTasks();"},{"lineNumber":24,"author":{"gitId":"LJ-37"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":25,"author":{"gitId":"LJ-37"},"content":"        String input;"},{"lineNumber":26,"author":{"gitId":"LJ-37"},"content":"        input \u003d in.nextLine();"},{"lineNumber":27,"author":{"gitId":"LJ-37"},"content":"        while (!input.equals(\"bye\")) {"},{"lineNumber":28,"author":{"gitId":"LJ-37"},"content":"            Command command \u003d Parser.parse(input);"},{"lineNumber":29,"author":{"gitId":"LJ-37"},"content":"            try {"},{"lineNumber":30,"author":{"gitId":"LJ-37"},"content":"                command.execute(input);"},{"lineNumber":31,"author":{"gitId":"LJ-37"},"content":"            } catch (DukeException e) {"},{"lineNumber":32,"author":{"gitId":"LJ-37"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":33,"author":{"gitId":"LJ-37"},"content":"                end();"},{"lineNumber":34,"author":{"gitId":"LJ-37"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"LJ-37"},"content":"            saveTasks();"},{"lineNumber":36,"author":{"gitId":"LJ-37"},"content":"            input \u003d in.nextLine();"},{"lineNumber":37,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"LJ-37"},"content":"        bye();"},{"lineNumber":39,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":40,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":42,"author":{"gitId":"LJ-37"},"content":"    public static void greet() {"},{"lineNumber":43,"author":{"gitId":"LJ-37"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":44,"author":{"gitId":"LJ-37"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":45,"author":{"gitId":"LJ-37"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":46,"author":{"gitId":"LJ-37"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":47,"author":{"gitId":"LJ-37"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":48,"author":{"gitId":"LJ-37"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":49,"author":{"gitId":"LJ-37"},"content":"        System.out.println(\"Hello! I\u0027m Duke\" + System.lineSeparator() + \"What can I do for you?\");"},{"lineNumber":50,"author":{"gitId":"LJ-37"},"content":"        end();"},{"lineNumber":51,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":53,"author":{"gitId":"LJ-37"},"content":"    public static void bye() {"},{"lineNumber":54,"author":{"gitId":"LJ-37"},"content":"        System.out.println(\"See you next time! BYE!\");"},{"lineNumber":55,"author":{"gitId":"LJ-37"},"content":"        end();"},{"lineNumber":56,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":58,"author":{"gitId":"LJ-37"},"content":"    public static void end() {"},{"lineNumber":59,"author":{"gitId":"LJ-37"},"content":"        System.out.println(\"____________________________________________________________\" + System.lineSeparator());"},{"lineNumber":60,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":62,"author":{"gitId":"LJ-37"},"content":"    // checks if file path and file to save list exists and creates if not, then write list into file"},{"lineNumber":63,"author":{"gitId":"LJ-37"},"content":"    public static void saveTasks() {"},{"lineNumber":64,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":65,"author":{"gitId":"LJ-37"},"content":"        String dir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":66,"author":{"gitId":"LJ-37"},"content":"        Path path \u003d Paths.get(dir, \"data\");"},{"lineNumber":67,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":68,"author":{"gitId":"LJ-37"},"content":"        try {"},{"lineNumber":69,"author":{"gitId":"LJ-37"},"content":"            if (!Files.exists(path)) {"},{"lineNumber":70,"author":{"gitId":"LJ-37"},"content":"                Files.createDirectories(path);"},{"lineNumber":71,"author":{"gitId":"LJ-37"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":73,"author":{"gitId":"LJ-37"},"content":"            Path file \u003d FileSystems.getDefault().getPath(dir, \"data\", \"duke.txt\");"},{"lineNumber":74,"author":{"gitId":"LJ-37"},"content":"            File tasks \u003d file.toFile();"},{"lineNumber":75,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":76,"author":{"gitId":"LJ-37"},"content":"            if (!tasks.exists()) {"},{"lineNumber":77,"author":{"gitId":"LJ-37"},"content":"                tasks.createNewFile();"},{"lineNumber":78,"author":{"gitId":"LJ-37"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":80,"author":{"gitId":"LJ-37"},"content":"            writeToFile(file.toString(), TaskManager.tasks);"},{"lineNumber":81,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":82,"author":{"gitId":"LJ-37"},"content":"        } catch (IOException e) {"},{"lineNumber":83,"author":{"gitId":"LJ-37"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":84,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":87,"author":{"gitId":"LJ-37"},"content":"    // write list to file one by one, line by line"},{"lineNumber":88,"author":{"gitId":"LJ-37"},"content":"    private static void writeToFile(String filePath, ArrayList\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":89,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":90,"author":{"gitId":"LJ-37"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);"},{"lineNumber":91,"author":{"gitId":"LJ-37"},"content":"        BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"},{"lineNumber":92,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":93,"author":{"gitId":"LJ-37"},"content":"        for (int i \u003d 0; i \u003c TaskManager.numOfTasks; i++) {"},{"lineNumber":94,"author":{"gitId":"LJ-37"},"content":"            bufferedWriter.write(tasks.get(i).toString());"},{"lineNumber":95,"author":{"gitId":"LJ-37"},"content":"            bufferedWriter.write(\"\\n\");"},{"lineNumber":96,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":98,"author":{"gitId":"LJ-37"},"content":"        bufferedWriter.close();"},{"lineNumber":99,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":101,"author":{"gitId":"LJ-37"},"content":"    //  checks if file path and file to load list exists and creates if not, then load list from file"},{"lineNumber":102,"author":{"gitId":"LJ-37"},"content":"    public static void loadTasks() {"},{"lineNumber":103,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":104,"author":{"gitId":"LJ-37"},"content":"        String dir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":105,"author":{"gitId":"LJ-37"},"content":"        Path path \u003d Paths.get(dir, \"data\");"},{"lineNumber":106,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":107,"author":{"gitId":"LJ-37"},"content":"        try {"},{"lineNumber":108,"author":{"gitId":"LJ-37"},"content":"            if (!Files.exists(path)) {"},{"lineNumber":109,"author":{"gitId":"LJ-37"},"content":"                Files.createDirectories(path);"},{"lineNumber":110,"author":{"gitId":"LJ-37"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":112,"author":{"gitId":"LJ-37"},"content":"            Path file \u003d FileSystems.getDefault().getPath(dir, \"data\", \"duke.txt\");"},{"lineNumber":113,"author":{"gitId":"LJ-37"},"content":"            File tasks \u003d file.toFile();"},{"lineNumber":114,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":115,"author":{"gitId":"LJ-37"},"content":"            if (!tasks.exists()) {"},{"lineNumber":116,"author":{"gitId":"LJ-37"},"content":"                tasks.createNewFile();"},{"lineNumber":117,"author":{"gitId":"LJ-37"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":119,"author":{"gitId":"LJ-37"},"content":"            BufferedReader reader \u003d Files.newBufferedReader(file);"},{"lineNumber":120,"author":{"gitId":"LJ-37"},"content":"            String data \u003d reader.readLine();"},{"lineNumber":121,"author":{"gitId":"LJ-37"},"content":"            int i \u003d 0;"},{"lineNumber":122,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":123,"author":{"gitId":"LJ-37"},"content":"            while (data !\u003d null) {"},{"lineNumber":124,"author":{"gitId":"LJ-37"},"content":"                Task newTask \u003d toTask(data);"},{"lineNumber":125,"author":{"gitId":"LJ-37"},"content":"                TaskManager.tasks.add(newTask);"},{"lineNumber":126,"author":{"gitId":"LJ-37"},"content":"                TaskManager.numOfTasks++;"},{"lineNumber":127,"author":{"gitId":"LJ-37"},"content":"                i++;"},{"lineNumber":128,"author":{"gitId":"LJ-37"},"content":"                data \u003d reader.readLine();"},{"lineNumber":129,"author":{"gitId":"LJ-37"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"LJ-37"},"content":"        } catch (IOException e) {"},{"lineNumber":131,"author":{"gitId":"LJ-37"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":132,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":135,"author":{"gitId":"LJ-37"},"content":"    // converts line read from file into a Task type"},{"lineNumber":136,"author":{"gitId":"LJ-37"},"content":"    private static Task toTask(String data) {"},{"lineNumber":137,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":138,"author":{"gitId":"LJ-37"},"content":"        String[] read \u003d data.trim().split(\"]\");"},{"lineNumber":139,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":140,"author":{"gitId":"LJ-37"},"content":"        if (read[0].contains(\"T\")) {"},{"lineNumber":141,"author":{"gitId":"LJ-37"},"content":"            Task newTodo \u003d new Todo(read[2].trim());"},{"lineNumber":142,"author":{"gitId":"LJ-37"},"content":"            if (read[1].contains(\"X\")) {"},{"lineNumber":143,"author":{"gitId":"LJ-37"},"content":"                newTodo.setAsDone();"},{"lineNumber":144,"author":{"gitId":"LJ-37"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"LJ-37"},"content":"            return newTodo;"},{"lineNumber":146,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"LJ-37"},"content":"        else if (read[0].contains(\"D\")) {"},{"lineNumber":148,"author":{"gitId":"LJ-37"},"content":"            String[] split \u003d read[2].trim().split(\" \\\\(by:\");"},{"lineNumber":149,"author":{"gitId":"LJ-37"},"content":"            Task newDeadline \u003d new Deadline(split[0], split[1].replace(\")\", \"\"));"},{"lineNumber":150,"author":{"gitId":"LJ-37"},"content":"            if (read[1].contains(\"X\")) {"},{"lineNumber":151,"author":{"gitId":"LJ-37"},"content":"                newDeadline.setAsDone();"},{"lineNumber":152,"author":{"gitId":"LJ-37"},"content":"            }"},{"lineNumber":153,"author":{"gitId":"LJ-37"},"content":"            return newDeadline;"},{"lineNumber":154,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"LJ-37"},"content":"        else if (read[0].contains(\"E\")) {"},{"lineNumber":156,"author":{"gitId":"LJ-37"},"content":"            String[] split \u003d read[2].trim().split(\" \\\\(at:\");"},{"lineNumber":157,"author":{"gitId":"LJ-37"},"content":"            Task newEvent \u003d new Event(split[0], split[1].replace(\")\", \"\"));"},{"lineNumber":158,"author":{"gitId":"LJ-37"},"content":"            if (read[1].contains(\"X\")) {"},{"lineNumber":159,"author":{"gitId":"LJ-37"},"content":"                newEvent.setAsDone();"},{"lineNumber":160,"author":{"gitId":"LJ-37"},"content":"            }"},{"lineNumber":161,"author":{"gitId":"LJ-37"},"content":"            return newEvent;"},{"lineNumber":162,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"LJ-37"},"content":"        return null;"},{"lineNumber":164,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"LJ-37":162,"-":3}},{"path":"src/main/java/duke/main/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJ-37"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":3,"author":{"gitId":"LJ-37"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"LJ-37"},"content":"    public DukeException () {}"},{"lineNumber":5,"author":{"gitId":"LJ-37"},"content":"    public DukeException (String message) {"},{"lineNumber":6,"author":{"gitId":"LJ-37"},"content":"        super(message);"},{"lineNumber":7,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"LJ-37"},"content":"}"}],"authorContributionMap":{"LJ-37":8}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJ-37"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":3,"author":{"gitId":"LJ-37"},"content":"import duke.command.*;"},{"lineNumber":4,"author":{"gitId":"LJ-37"},"content":"import duke.task.*;"},{"lineNumber":5,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":6,"author":{"gitId":"LJ-37"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"LJ-37"},"content":"    private static final String BYE \u003d \"bye\";"},{"lineNumber":8,"author":{"gitId":"LJ-37"},"content":"    private static final String LIST \u003d \"list\";"},{"lineNumber":9,"author":{"gitId":"LJ-37"},"content":"    private static final String DONE \u003d \"done\";"},{"lineNumber":10,"author":{"gitId":"LJ-37"},"content":"    private static final String DELETE \u003d \"delete\";"},{"lineNumber":11,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":12,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":13,"author":{"gitId":"LJ-37"},"content":"    public static Command parse(String input) {"},{"lineNumber":14,"author":{"gitId":"LJ-37"},"content":"        String[] command \u003d getCommand(input);"},{"lineNumber":15,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":16,"author":{"gitId":"LJ-37"},"content":"        switch (command[0]) {"},{"lineNumber":17,"author":{"gitId":"LJ-37"},"content":"            case BYE:"},{"lineNumber":18,"author":{"gitId":"LJ-37"},"content":"                return new ExitCommand(input);"},{"lineNumber":19,"author":{"gitId":"LJ-37"},"content":"            case LIST:"},{"lineNumber":20,"author":{"gitId":"LJ-37"},"content":"                return new ListCommand(input);"},{"lineNumber":21,"author":{"gitId":"LJ-37"},"content":"            case DONE:"},{"lineNumber":22,"author":{"gitId":"LJ-37"},"content":"                return new DoneCommand(input);"},{"lineNumber":23,"author":{"gitId":"LJ-37"},"content":"            case DELETE:"},{"lineNumber":24,"author":{"gitId":"LJ-37"},"content":"                return new DeleteCommand(input);"},{"lineNumber":25,"author":{"gitId":"LJ-37"},"content":"            default:"},{"lineNumber":26,"author":{"gitId":"LJ-37"},"content":"                return new AddCommand(input);"},{"lineNumber":27,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":30,"author":{"gitId":"LJ-37"},"content":"    private static String[] getCommand(String input) {"},{"lineNumber":31,"author":{"gitId":"LJ-37"},"content":"        String[] command \u003d input.trim().split(\" \");"},{"lineNumber":32,"author":{"gitId":"LJ-37"},"content":"        return command;"},{"lineNumber":33,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"LJ-37"},"content":"}"},{"lineNumber":35,"author":{"gitId":"LJ-37"},"content":""}],"authorContributionMap":{"LJ-37":35}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJ-37"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":3,"author":{"gitId":"LJ-37"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":5,"author":{"gitId":"LJ-37"},"content":"    protected String by;"},{"lineNumber":6,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":7,"author":{"gitId":"LJ-37"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":8,"author":{"gitId":"LJ-37"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"LJ-37"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":12,"author":{"gitId":"LJ-37"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"LJ-37"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"LJ-37"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";"},{"lineNumber":15,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"LJ-37"},"content":"}"}],"authorContributionMap":{"LJ-37":16}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJ-37"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":3,"author":{"gitId":"LJ-37"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":5,"author":{"gitId":"LJ-37"},"content":"    protected String on;"},{"lineNumber":6,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":7,"author":{"gitId":"LJ-37"},"content":"    public Event(String description, String on) {"},{"lineNumber":8,"author":{"gitId":"LJ-37"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"LJ-37"},"content":"        this.on \u003d on;"},{"lineNumber":10,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":12,"author":{"gitId":"LJ-37"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"LJ-37"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"LJ-37"},"content":"        return \"[E]\" + super.toString() + \" (at:\" + on + \")\";"},{"lineNumber":15,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"LJ-37"},"content":"}"}],"authorContributionMap":{"LJ-37":16}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJ-37"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":3,"author":{"gitId":"LJ-37"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"LJ-37"},"content":"    public String description;"},{"lineNumber":5,"author":{"gitId":"LJ-37"},"content":"    public boolean isDone;"},{"lineNumber":6,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":7,"author":{"gitId":"LJ-37"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"LJ-37"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"LJ-37"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":12,"author":{"gitId":"LJ-37"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"LJ-37"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":14,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":16,"author":{"gitId":"LJ-37"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"LJ-37"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":18,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":20,"author":{"gitId":"LJ-37"},"content":"    public void setAsDone() {"},{"lineNumber":21,"author":{"gitId":"LJ-37"},"content":"        this.isDone \u003d true;"},{"lineNumber":22,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"LJ-37"},"content":"}"}],"authorContributionMap":{"LJ-37":23}},{"path":"src/main/java/duke/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJ-37"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":3,"author":{"gitId":"LJ-37"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":5,"author":{"gitId":"LJ-37"},"content":"public class TaskManager{"},{"lineNumber":6,"author":{"gitId":"LJ-37"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":7,"author":{"gitId":"LJ-37"},"content":"    public static int numOfTasks \u003d 0;"},{"lineNumber":8,"author":{"gitId":"LJ-37"},"content":"}"}],"authorContributionMap":{"LJ-37":8}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJ-37"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":3,"author":{"gitId":"LJ-37"},"content":"public class Todo extends Task{"},{"lineNumber":4,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":5,"author":{"gitId":"LJ-37"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"LJ-37"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":9,"author":{"gitId":"LJ-37"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"LJ-37"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"LJ-37"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":12,"author":{"gitId":"LJ-37"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"LJ-37"},"content":"}"}],"authorContributionMap":{"LJ-37":13}}]
