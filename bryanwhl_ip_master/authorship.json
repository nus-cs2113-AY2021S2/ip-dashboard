[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bryanwhl"},"content":"# Duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"bryanwhl"},"content":"1. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"bryanwhl":2,"-":24}},{"path":"database.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryanwhl"},"content":"E | 0 | three | two to three"}],"authorContributionMap":{"bryanwhl":1}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwhl"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"bryanwhl"},"content":"        Output.printGreet();"},{"lineNumber":6,"author":{"gitId":"bryanwhl"},"content":"        Logic.loop();"},{"lineNumber":7,"author":{"gitId":"bryanwhl"},"content":"        Output.printExit();"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"bryanwhl":5,"-":4}},{"path":"src/main/java/Duke/Logic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwhl"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":3,"author":{"gitId":"bryanwhl"},"content":"import Duke.Tasks.Deadline;"},{"lineNumber":4,"author":{"gitId":"bryanwhl"},"content":"import Duke.Tasks.Event;"},{"lineNumber":5,"author":{"gitId":"bryanwhl"},"content":"import Duke.Tasks.Todo;"},{"lineNumber":6,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":7,"author":{"gitId":"bryanwhl"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":9,"author":{"gitId":"bryanwhl"},"content":"public class Logic {"},{"lineNumber":10,"author":{"gitId":"bryanwhl"},"content":"    public static void loop() {"},{"lineNumber":11,"author":{"gitId":"bryanwhl"},"content":"        TaskList taskList \u003d TextFile.loadTaskList();"},{"lineNumber":12,"author":{"gitId":"bryanwhl"},"content":"        while (true) {"},{"lineNumber":13,"author":{"gitId":"bryanwhl"},"content":"            Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":14,"author":{"gitId":"bryanwhl"},"content":"            String command \u003d scan.next();"},{"lineNumber":15,"author":{"gitId":"bryanwhl"},"content":"            if (command.equals(\"bye\")) {"},{"lineNumber":16,"author":{"gitId":"bryanwhl"},"content":"                break;"},{"lineNumber":17,"author":{"gitId":"bryanwhl"},"content":"            }"},{"lineNumber":18,"author":{"gitId":"bryanwhl"},"content":"            switch (command) {"},{"lineNumber":19,"author":{"gitId":"bryanwhl"},"content":"            case \"list\": {"},{"lineNumber":20,"author":{"gitId":"bryanwhl"},"content":"                taskList.printTaskList();"},{"lineNumber":21,"author":{"gitId":"bryanwhl"},"content":"                break;"},{"lineNumber":22,"author":{"gitId":"bryanwhl"},"content":"            }"},{"lineNumber":23,"author":{"gitId":"bryanwhl"},"content":"            case \"done\": {"},{"lineNumber":24,"author":{"gitId":"bryanwhl"},"content":"                int taskNumber;"},{"lineNumber":25,"author":{"gitId":"bryanwhl"},"content":"                try {"},{"lineNumber":26,"author":{"gitId":"bryanwhl"},"content":"                    taskNumber \u003d scan.nextInt();"},{"lineNumber":27,"author":{"gitId":"bryanwhl"},"content":"                }"},{"lineNumber":28,"author":{"gitId":"bryanwhl"},"content":"                catch(Exception e) {"},{"lineNumber":29,"author":{"gitId":"bryanwhl"},"content":"                    Output.printDoneInputError();"},{"lineNumber":30,"author":{"gitId":"bryanwhl"},"content":"                    break;"},{"lineNumber":31,"author":{"gitId":"bryanwhl"},"content":"                }"},{"lineNumber":32,"author":{"gitId":"bryanwhl"},"content":"                if (taskNumber \u003e taskList.size() || taskNumber \u003c 1) {"},{"lineNumber":33,"author":{"gitId":"bryanwhl"},"content":"                    Output.printDoneRangeError();"},{"lineNumber":34,"author":{"gitId":"bryanwhl"},"content":"                }"},{"lineNumber":35,"author":{"gitId":"bryanwhl"},"content":"                else {"},{"lineNumber":36,"author":{"gitId":"bryanwhl"},"content":"                    taskList.updateCompletion(taskNumber);"},{"lineNumber":37,"author":{"gitId":"bryanwhl"},"content":"                }"},{"lineNumber":38,"author":{"gitId":"bryanwhl"},"content":"                break;"},{"lineNumber":39,"author":{"gitId":"bryanwhl"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"bryanwhl"},"content":"            case \"delete\": {"},{"lineNumber":41,"author":{"gitId":"bryanwhl"},"content":"                int taskNumber;"},{"lineNumber":42,"author":{"gitId":"bryanwhl"},"content":"                try {"},{"lineNumber":43,"author":{"gitId":"bryanwhl"},"content":"                    taskNumber \u003d scan.nextInt();"},{"lineNumber":44,"author":{"gitId":"bryanwhl"},"content":"                }"},{"lineNumber":45,"author":{"gitId":"bryanwhl"},"content":"                catch(Exception e) {"},{"lineNumber":46,"author":{"gitId":"bryanwhl"},"content":"                    Output.printDoneInputError();"},{"lineNumber":47,"author":{"gitId":"bryanwhl"},"content":"                    break;"},{"lineNumber":48,"author":{"gitId":"bryanwhl"},"content":"                }"},{"lineNumber":49,"author":{"gitId":"bryanwhl"},"content":"                if (taskNumber \u003e taskList.size() || taskNumber \u003c 1) {"},{"lineNumber":50,"author":{"gitId":"bryanwhl"},"content":"                    Output.printDoneRangeError();"},{"lineNumber":51,"author":{"gitId":"bryanwhl"},"content":"                }"},{"lineNumber":52,"author":{"gitId":"bryanwhl"},"content":"                else {"},{"lineNumber":53,"author":{"gitId":"bryanwhl"},"content":"                    taskList.deleteTask(taskNumber);"},{"lineNumber":54,"author":{"gitId":"bryanwhl"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"bryanwhl"},"content":"                break;"},{"lineNumber":56,"author":{"gitId":"bryanwhl"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"bryanwhl"},"content":"            case \"todo\": {"},{"lineNumber":58,"author":{"gitId":"bryanwhl"},"content":"                String taskName \u003d scan.nextLine();"},{"lineNumber":59,"author":{"gitId":"bryanwhl"},"content":"                Todo newTask \u003d new Todo(taskName.trim());"},{"lineNumber":60,"author":{"gitId":"bryanwhl"},"content":"                taskList.addAndPrint(newTask);"},{"lineNumber":61,"author":{"gitId":"bryanwhl"},"content":"                break;"},{"lineNumber":62,"author":{"gitId":"bryanwhl"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"bryanwhl"},"content":"            case \"deadline\": {"},{"lineNumber":64,"author":{"gitId":"bryanwhl"},"content":"                String taskName \u003d \"\";"},{"lineNumber":65,"author":{"gitId":"bryanwhl"},"content":"                String inputWord \u003d scan.next();"},{"lineNumber":66,"author":{"gitId":"bryanwhl"},"content":"                while (inputWord.charAt(0) !\u003d \u0027/\u0027){"},{"lineNumber":67,"author":{"gitId":"bryanwhl"},"content":"                    taskName +\u003d inputWord;"},{"lineNumber":68,"author":{"gitId":"bryanwhl"},"content":"                    taskName +\u003d \" \";"},{"lineNumber":69,"author":{"gitId":"bryanwhl"},"content":"                    inputWord \u003d scan.next();"},{"lineNumber":70,"author":{"gitId":"bryanwhl"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"bryanwhl"},"content":"                String endTime \u003d scan.nextLine();"},{"lineNumber":72,"author":{"gitId":"bryanwhl"},"content":"                Deadline newDeadline \u003d new Deadline(taskName.trim(), endTime.trim());"},{"lineNumber":73,"author":{"gitId":"bryanwhl"},"content":"                taskList.addAndPrint(newDeadline);"},{"lineNumber":74,"author":{"gitId":"bryanwhl"},"content":"                break;"},{"lineNumber":75,"author":{"gitId":"bryanwhl"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"bryanwhl"},"content":"            case \"event\": {"},{"lineNumber":77,"author":{"gitId":"bryanwhl"},"content":"                String taskName \u003d \"\";"},{"lineNumber":78,"author":{"gitId":"bryanwhl"},"content":"                String inputWord \u003d scan.next();"},{"lineNumber":79,"author":{"gitId":"bryanwhl"},"content":"                while (inputWord.charAt(0) !\u003d \u0027/\u0027){"},{"lineNumber":80,"author":{"gitId":"bryanwhl"},"content":"                    taskName +\u003d inputWord;"},{"lineNumber":81,"author":{"gitId":"bryanwhl"},"content":"                    taskName +\u003d \" \";"},{"lineNumber":82,"author":{"gitId":"bryanwhl"},"content":"                    inputWord \u003d scan.next();"},{"lineNumber":83,"author":{"gitId":"bryanwhl"},"content":"                }"},{"lineNumber":84,"author":{"gitId":"bryanwhl"},"content":"                String timePeriod \u003d scan.nextLine();"},{"lineNumber":85,"author":{"gitId":"bryanwhl"},"content":"                Event newEvent \u003d new Event(taskName.trim(), timePeriod.trim());"},{"lineNumber":86,"author":{"gitId":"bryanwhl"},"content":"                taskList.addAndPrint(newEvent);"},{"lineNumber":87,"author":{"gitId":"bryanwhl"},"content":"                break;"},{"lineNumber":88,"author":{"gitId":"bryanwhl"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"bryanwhl"},"content":"            case \"save\": {"},{"lineNumber":90,"author":{"gitId":"bryanwhl"},"content":"                TextFile.saveData(taskList);"},{"lineNumber":91,"author":{"gitId":"bryanwhl"},"content":"                Output.printSaved();"},{"lineNumber":92,"author":{"gitId":"bryanwhl"},"content":"                break;"},{"lineNumber":93,"author":{"gitId":"bryanwhl"},"content":"            }"},{"lineNumber":94,"author":{"gitId":"bryanwhl"},"content":"            default: {"},{"lineNumber":95,"author":{"gitId":"bryanwhl"},"content":"                Output.printUnknownCommandError();"},{"lineNumber":96,"author":{"gitId":"bryanwhl"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"bryanwhl"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"bryanwhl"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"bryanwhl"},"content":"}"}],"authorContributionMap":{"bryanwhl":100}},{"path":"src/main/java/Duke/Output.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwhl"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":3,"author":{"gitId":"bryanwhl"},"content":"import Duke.Tasks.Task;"},{"lineNumber":4,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":5,"author":{"gitId":"bryanwhl"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":7,"author":{"gitId":"bryanwhl"},"content":"public class Output {"},{"lineNumber":8,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":9,"author":{"gitId":"bryanwhl"},"content":"    public static void printLogo() {"},{"lineNumber":10,"author":{"gitId":"bryanwhl"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":11,"author":{"gitId":"bryanwhl"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":12,"author":{"gitId":"bryanwhl"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":13,"author":{"gitId":"bryanwhl"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":14,"author":{"gitId":"bryanwhl"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":15,"author":{"gitId":"bryanwhl"},"content":"        System.out.println(logo);"},{"lineNumber":16,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":18,"author":{"gitId":"bryanwhl"},"content":"    private static void printLine() {"},{"lineNumber":19,"author":{"gitId":"bryanwhl"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":20,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":22,"author":{"gitId":"bryanwhl"},"content":"    public static void printGreet() {"},{"lineNumber":23,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":24,"author":{"gitId":"bryanwhl"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":25,"author":{"gitId":"bryanwhl"},"content":"        printLogo();"},{"lineNumber":26,"author":{"gitId":"bryanwhl"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":27,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":28,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":30,"author":{"gitId":"bryanwhl"},"content":"    public static void printSaved() {"},{"lineNumber":31,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":32,"author":{"gitId":"bryanwhl"},"content":"        System.out.println(\"Your data has been saved.\");"},{"lineNumber":33,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":34,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":36,"author":{"gitId":"bryanwhl"},"content":"    public static void printDeleted(String taskName, int size) {"},{"lineNumber":37,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":38,"author":{"gitId":"bryanwhl"},"content":"        System.out.println(String.format(\"Noted. I\u0027ve removed this task:\\n  %1$s \\nNow you have %2$d tasks in the list.\","},{"lineNumber":39,"author":{"gitId":"bryanwhl"},"content":"                taskName,"},{"lineNumber":40,"author":{"gitId":"bryanwhl"},"content":"                size));"},{"lineNumber":41,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":42,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":44,"author":{"gitId":"bryanwhl"},"content":"    public static void printUnknownCommandError() {"},{"lineNumber":45,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":46,"author":{"gitId":"bryanwhl"},"content":"        System.out.println(\"\\u2639 OOPS!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":47,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":48,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":50,"author":{"gitId":"bryanwhl"},"content":"    public static void printGeneralError() {"},{"lineNumber":51,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":52,"author":{"gitId":"bryanwhl"},"content":"        System.out.println(\"An error has occurred. Please check your commands again\");"},{"lineNumber":53,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":54,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":56,"author":{"gitId":"bryanwhl"},"content":"    public static void printAdded(Task newTask, int size) {"},{"lineNumber":57,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":58,"author":{"gitId":"bryanwhl"},"content":"        System.out.println(String.format(\"Got it. I\u0027ve added this task:\\n  %1$s \\nNow you have %2$d tasks in the list.\","},{"lineNumber":59,"author":{"gitId":"bryanwhl"},"content":"                newTask.toString(),"},{"lineNumber":60,"author":{"gitId":"bryanwhl"},"content":"                size));"},{"lineNumber":61,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":62,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":64,"author":{"gitId":"bryanwhl"},"content":"    public static void printUpdated(String taskName) {"},{"lineNumber":65,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":66,"author":{"gitId":"bryanwhl"},"content":"        System.out.println(String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\","},{"lineNumber":67,"author":{"gitId":"bryanwhl"},"content":"                taskName));"},{"lineNumber":68,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":69,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":71,"author":{"gitId":"bryanwhl"},"content":"    public static void printTask(Task task) {"},{"lineNumber":72,"author":{"gitId":"bryanwhl"},"content":"        System.out.println(task);"},{"lineNumber":73,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":75,"author":{"gitId":"bryanwhl"},"content":"    public static void printTaskList(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":76,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":77,"author":{"gitId":"bryanwhl"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":78,"author":{"gitId":"bryanwhl"},"content":"            System.out.print(String.format(\"%d. \", i + 1));"},{"lineNumber":79,"author":{"gitId":"bryanwhl"},"content":"            printTask(taskList.get(i));"},{"lineNumber":80,"author":{"gitId":"bryanwhl"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":82,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":84,"author":{"gitId":"bryanwhl"},"content":"    public static void printDoneRangeError() {"},{"lineNumber":85,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":86,"author":{"gitId":"bryanwhl"},"content":"        System.out.println(\"\\u2639 OOPS!! The number you provide is out of range for the \\\"done\\\" command.\");"},{"lineNumber":87,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":88,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":90,"author":{"gitId":"bryanwhl"},"content":"    public static void printDoneInputError() {"},{"lineNumber":91,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":92,"author":{"gitId":"bryanwhl"},"content":"        System.out.println(\"\\u2639 OOPS!! \\\"done\\\" command must be followed by an integer.\");"},{"lineNumber":93,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":94,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":96,"author":{"gitId":"bryanwhl"},"content":"    public static void printExit() {"},{"lineNumber":97,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":98,"author":{"gitId":"bryanwhl"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":99,"author":{"gitId":"bryanwhl"},"content":"        printLine();"},{"lineNumber":100,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":102,"author":{"gitId":"bryanwhl"},"content":"}"}],"authorContributionMap":{"bryanwhl":102}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwhl"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":3,"author":{"gitId":"bryanwhl"},"content":"import Duke.Tasks.Task;"},{"lineNumber":4,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":5,"author":{"gitId":"bryanwhl"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":7,"author":{"gitId":"bryanwhl"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":9,"author":{"gitId":"bryanwhl"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":10,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":11,"author":{"gitId":"bryanwhl"},"content":"    public void addTask(Task inputTask) {"},{"lineNumber":12,"author":{"gitId":"bryanwhl"},"content":"        tasks.add(inputTask);"},{"lineNumber":13,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":15,"author":{"gitId":"bryanwhl"},"content":"    public void addAndPrint(Task inputTask) {"},{"lineNumber":16,"author":{"gitId":"bryanwhl"},"content":"        addTask(inputTask);"},{"lineNumber":17,"author":{"gitId":"bryanwhl"},"content":"        Output.printAdded(inputTask, tasks.size());"},{"lineNumber":18,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":20,"author":{"gitId":"bryanwhl"},"content":"    public void updateCompletion(int taskIndex) {"},{"lineNumber":21,"author":{"gitId":"bryanwhl"},"content":"        tasks.get(taskIndex - 1).setDone();"},{"lineNumber":22,"author":{"gitId":"bryanwhl"},"content":"        Output.printUpdated(tasks.get(taskIndex - 1).toString());"},{"lineNumber":23,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":25,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":26,"author":{"gitId":"bryanwhl"},"content":"    public void printTaskList() {"},{"lineNumber":27,"author":{"gitId":"bryanwhl"},"content":"        Output.printTaskList(tasks);"},{"lineNumber":28,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":30,"author":{"gitId":"bryanwhl"},"content":"    public int size() {"},{"lineNumber":31,"author":{"gitId":"bryanwhl"},"content":"        return tasks.size();"},{"lineNumber":32,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":34,"author":{"gitId":"bryanwhl"},"content":"    public Task getTask(int index) {"},{"lineNumber":35,"author":{"gitId":"bryanwhl"},"content":"        return tasks.get(index);"},{"lineNumber":36,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":38,"author":{"gitId":"bryanwhl"},"content":"    public void deleteTask(int taskIndex) {"},{"lineNumber":39,"author":{"gitId":"bryanwhl"},"content":"        Output.printDeleted(tasks.get(taskIndex - 1).toString(), tasks.size() - 1);"},{"lineNumber":40,"author":{"gitId":"bryanwhl"},"content":"        tasks.remove(taskIndex - 1);"},{"lineNumber":41,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":43,"author":{"gitId":"bryanwhl"},"content":"}"}],"authorContributionMap":{"bryanwhl":43}},{"path":"src/main/java/Duke/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwhl"},"content":"package Duke.Tasks;"},{"lineNumber":2,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":3,"author":{"gitId":"bryanwhl"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":5,"author":{"gitId":"bryanwhl"},"content":"    private String endTime;"},{"lineNumber":6,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":7,"author":{"gitId":"bryanwhl"},"content":"    public Deadline(String nameInit, String time) {"},{"lineNumber":8,"author":{"gitId":"bryanwhl"},"content":"        super(nameInit);"},{"lineNumber":9,"author":{"gitId":"bryanwhl"},"content":"        this.endTime \u003d time;"},{"lineNumber":10,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":12,"author":{"gitId":"bryanwhl"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"bryanwhl"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"bryanwhl"},"content":"        String outputString \u003d \"[D]\";"},{"lineNumber":15,"author":{"gitId":"bryanwhl"},"content":"        if (isDone) {"},{"lineNumber":16,"author":{"gitId":"bryanwhl"},"content":"            outputString +\u003d \"[\\u2713]\";"},{"lineNumber":17,"author":{"gitId":"bryanwhl"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"bryanwhl"},"content":"        else {"},{"lineNumber":19,"author":{"gitId":"bryanwhl"},"content":"            outputString +\u003d \"[\\u2715]\";"},{"lineNumber":20,"author":{"gitId":"bryanwhl"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"bryanwhl"},"content":"        outputString \u003d outputString + \" \" + name + \" (by: \" + endTime + \")\";"},{"lineNumber":22,"author":{"gitId":"bryanwhl"},"content":"        return outputString;"},{"lineNumber":23,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":25,"author":{"gitId":"bryanwhl"},"content":"    public String toStringSave() {"},{"lineNumber":26,"author":{"gitId":"bryanwhl"},"content":"        String saveString \u003d \"D | \";"},{"lineNumber":27,"author":{"gitId":"bryanwhl"},"content":"        if (isDone) {"},{"lineNumber":28,"author":{"gitId":"bryanwhl"},"content":"            saveString +\u003d \"1 | \";"},{"lineNumber":29,"author":{"gitId":"bryanwhl"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"bryanwhl"},"content":"        else {"},{"lineNumber":31,"author":{"gitId":"bryanwhl"},"content":"            saveString +\u003d \"0 | \";"},{"lineNumber":32,"author":{"gitId":"bryanwhl"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"bryanwhl"},"content":"        saveString \u003d saveString + name + \" | \" + endTime;"},{"lineNumber":34,"author":{"gitId":"bryanwhl"},"content":"        return saveString;"},{"lineNumber":35,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":37,"author":{"gitId":"bryanwhl"},"content":"}"}],"authorContributionMap":{"bryanwhl":37}},{"path":"src/main/java/Duke/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwhl"},"content":"package Duke.Tasks;"},{"lineNumber":2,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":3,"author":{"gitId":"bryanwhl"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":5,"author":{"gitId":"bryanwhl"},"content":"    private String period;"},{"lineNumber":6,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":7,"author":{"gitId":"bryanwhl"},"content":"    public Event(String nameInit, String timePeriod) {"},{"lineNumber":8,"author":{"gitId":"bryanwhl"},"content":"        super(nameInit);"},{"lineNumber":9,"author":{"gitId":"bryanwhl"},"content":"        this.period \u003d timePeriod;"},{"lineNumber":10,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":12,"author":{"gitId":"bryanwhl"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"bryanwhl"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"bryanwhl"},"content":"        String outputString \u003d \"[E]\";"},{"lineNumber":15,"author":{"gitId":"bryanwhl"},"content":"        if (isDone) {"},{"lineNumber":16,"author":{"gitId":"bryanwhl"},"content":"            outputString +\u003d \"[\\u2713]\";"},{"lineNumber":17,"author":{"gitId":"bryanwhl"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"bryanwhl"},"content":"        else {"},{"lineNumber":19,"author":{"gitId":"bryanwhl"},"content":"            outputString +\u003d \"[\\u2715]\";"},{"lineNumber":20,"author":{"gitId":"bryanwhl"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"bryanwhl"},"content":"        outputString \u003d outputString + \" \" + name + \" (at: \" + period + \")\";"},{"lineNumber":22,"author":{"gitId":"bryanwhl"},"content":"        return outputString;"},{"lineNumber":23,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":25,"author":{"gitId":"bryanwhl"},"content":"    public String toStringSave() {"},{"lineNumber":26,"author":{"gitId":"bryanwhl"},"content":"        String saveString \u003d \"E | \";"},{"lineNumber":27,"author":{"gitId":"bryanwhl"},"content":"        if (isDone) {"},{"lineNumber":28,"author":{"gitId":"bryanwhl"},"content":"            saveString +\u003d \"1 | \";"},{"lineNumber":29,"author":{"gitId":"bryanwhl"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"bryanwhl"},"content":"        else {"},{"lineNumber":31,"author":{"gitId":"bryanwhl"},"content":"            saveString +\u003d \"0 | \";"},{"lineNumber":32,"author":{"gitId":"bryanwhl"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"bryanwhl"},"content":"        saveString \u003d saveString + name + \" | \" + period;"},{"lineNumber":34,"author":{"gitId":"bryanwhl"},"content":"        return saveString;"},{"lineNumber":35,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":37,"author":{"gitId":"bryanwhl"},"content":"}"}],"authorContributionMap":{"bryanwhl":37}},{"path":"src/main/java/Duke/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwhl"},"content":"package Duke.Tasks;"},{"lineNumber":2,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":3,"author":{"gitId":"bryanwhl"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":5,"author":{"gitId":"bryanwhl"},"content":"    protected String name;"},{"lineNumber":6,"author":{"gitId":"bryanwhl"},"content":"    protected boolean isDone \u003d false;"},{"lineNumber":7,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":8,"author":{"gitId":"bryanwhl"},"content":"    public Task (String nameInit) {"},{"lineNumber":9,"author":{"gitId":"bryanwhl"},"content":"        this.name \u003d nameInit;"},{"lineNumber":10,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":12,"author":{"gitId":"bryanwhl"},"content":"    public void setDone() {"},{"lineNumber":13,"author":{"gitId":"bryanwhl"},"content":"        isDone \u003d true;"},{"lineNumber":14,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":16,"author":{"gitId":"bryanwhl"},"content":"    public abstract String toStringSave();"},{"lineNumber":17,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":18,"author":{"gitId":"bryanwhl"},"content":"}"}],"authorContributionMap":{"bryanwhl":18}},{"path":"src/main/java/Duke/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwhl"},"content":"package Duke.Tasks;"},{"lineNumber":2,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":3,"author":{"gitId":"bryanwhl"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":5,"author":{"gitId":"bryanwhl"},"content":"    public Todo(String nameInit) {"},{"lineNumber":6,"author":{"gitId":"bryanwhl"},"content":"        super(nameInit);"},{"lineNumber":7,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":9,"author":{"gitId":"bryanwhl"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"bryanwhl"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"bryanwhl"},"content":"        String outputString \u003d \"[T]\";"},{"lineNumber":12,"author":{"gitId":"bryanwhl"},"content":"        if (isDone) {"},{"lineNumber":13,"author":{"gitId":"bryanwhl"},"content":"            outputString +\u003d \"[\\u2713]\";"},{"lineNumber":14,"author":{"gitId":"bryanwhl"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"bryanwhl"},"content":"        else {"},{"lineNumber":16,"author":{"gitId":"bryanwhl"},"content":"            outputString +\u003d \"[\\u2715]\";"},{"lineNumber":17,"author":{"gitId":"bryanwhl"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"bryanwhl"},"content":"        outputString \u003d outputString + \" \" + name;"},{"lineNumber":19,"author":{"gitId":"bryanwhl"},"content":"        return outputString;"},{"lineNumber":20,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":22,"author":{"gitId":"bryanwhl"},"content":"    public String toStringSave() {"},{"lineNumber":23,"author":{"gitId":"bryanwhl"},"content":"        String saveString \u003d \"T | \";"},{"lineNumber":24,"author":{"gitId":"bryanwhl"},"content":"        if (isDone) {"},{"lineNumber":25,"author":{"gitId":"bryanwhl"},"content":"            saveString +\u003d \"1 | \";"},{"lineNumber":26,"author":{"gitId":"bryanwhl"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"bryanwhl"},"content":"        else {"},{"lineNumber":28,"author":{"gitId":"bryanwhl"},"content":"            saveString +\u003d \"0 | \";"},{"lineNumber":29,"author":{"gitId":"bryanwhl"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"bryanwhl"},"content":"        saveString \u003d saveString + name;"},{"lineNumber":31,"author":{"gitId":"bryanwhl"},"content":"        return saveString;"},{"lineNumber":32,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":34,"author":{"gitId":"bryanwhl"},"content":"}"}],"authorContributionMap":{"bryanwhl":34}},{"path":"src/main/java/Duke/TextFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanwhl"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":3,"author":{"gitId":"bryanwhl"},"content":"import Duke.Tasks.Deadline;"},{"lineNumber":4,"author":{"gitId":"bryanwhl"},"content":"import Duke.Tasks.Event;"},{"lineNumber":5,"author":{"gitId":"bryanwhl"},"content":"import Duke.Tasks.Task;"},{"lineNumber":6,"author":{"gitId":"bryanwhl"},"content":"import Duke.Tasks.Todo;"},{"lineNumber":7,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":8,"author":{"gitId":"bryanwhl"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"bryanwhl"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"bryanwhl"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"bryanwhl"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":13,"author":{"gitId":"bryanwhl"},"content":"public class TextFile {"},{"lineNumber":14,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":15,"author":{"gitId":"bryanwhl"},"content":"    public static TaskList loadTaskList() {"},{"lineNumber":16,"author":{"gitId":"bryanwhl"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":17,"author":{"gitId":"bryanwhl"},"content":"        File readFile;"},{"lineNumber":18,"author":{"gitId":"bryanwhl"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"bryanwhl"},"content":"            readFile \u003d new File(\"database.txt\");"},{"lineNumber":20,"author":{"gitId":"bryanwhl"},"content":"            if (readFile.createNewFile()) {"},{"lineNumber":21,"author":{"gitId":"bryanwhl"},"content":"                return taskList;"},{"lineNumber":22,"author":{"gitId":"bryanwhl"},"content":"            }"},{"lineNumber":23,"author":{"gitId":"bryanwhl"},"content":"            else {"},{"lineNumber":24,"author":{"gitId":"bryanwhl"},"content":"                Scanner myReader \u003d new Scanner(readFile);"},{"lineNumber":25,"author":{"gitId":"bryanwhl"},"content":"                while (myReader.hasNext()) {"},{"lineNumber":26,"author":{"gitId":"bryanwhl"},"content":"                    String entry \u003d myReader.nextLine();"},{"lineNumber":27,"author":{"gitId":"bryanwhl"},"content":"                    Scanner entryData \u003d new Scanner(entry);"},{"lineNumber":28,"author":{"gitId":"bryanwhl"},"content":"                    entryData.useDelimiter(\"\\\\|\"); //escaping the character |"},{"lineNumber":29,"author":{"gitId":"bryanwhl"},"content":"                    String typeOfEntry \u003d entryData.next().trim();"},{"lineNumber":30,"author":{"gitId":"bryanwhl"},"content":"                    String isCompleted \u003d entryData.next().trim();"},{"lineNumber":31,"author":{"gitId":"bryanwhl"},"content":"                    switch (typeOfEntry) {"},{"lineNumber":32,"author":{"gitId":"bryanwhl"},"content":"                    case \"T\": {"},{"lineNumber":33,"author":{"gitId":"bryanwhl"},"content":"                        String taskName \u003d entryData.next().trim();"},{"lineNumber":34,"author":{"gitId":"bryanwhl"},"content":"                        Todo newTodo \u003d new Todo(taskName);"},{"lineNumber":35,"author":{"gitId":"bryanwhl"},"content":"                        if (isCompleted.equals(\"1\")) {"},{"lineNumber":36,"author":{"gitId":"bryanwhl"},"content":"                            newTodo.setDone();"},{"lineNumber":37,"author":{"gitId":"bryanwhl"},"content":"                        }"},{"lineNumber":38,"author":{"gitId":"bryanwhl"},"content":"                        taskList.addTask(newTodo);"},{"lineNumber":39,"author":{"gitId":"bryanwhl"},"content":"                        break;"},{"lineNumber":40,"author":{"gitId":"bryanwhl"},"content":"                    }"},{"lineNumber":41,"author":{"gitId":"bryanwhl"},"content":"                    case \"D\": {"},{"lineNumber":42,"author":{"gitId":"bryanwhl"},"content":"                        String taskName \u003d entryData.next().trim();"},{"lineNumber":43,"author":{"gitId":"bryanwhl"},"content":"                        String period \u003d entryData.next().trim();"},{"lineNumber":44,"author":{"gitId":"bryanwhl"},"content":"                        Deadline newDeadline \u003d new Deadline(taskName, period);"},{"lineNumber":45,"author":{"gitId":"bryanwhl"},"content":"                        if (isCompleted.equals(\"1\")) {"},{"lineNumber":46,"author":{"gitId":"bryanwhl"},"content":"                            newDeadline.setDone();"},{"lineNumber":47,"author":{"gitId":"bryanwhl"},"content":"                        }"},{"lineNumber":48,"author":{"gitId":"bryanwhl"},"content":"                        taskList.addTask(newDeadline);"},{"lineNumber":49,"author":{"gitId":"bryanwhl"},"content":"                        break;"},{"lineNumber":50,"author":{"gitId":"bryanwhl"},"content":"                    }"},{"lineNumber":51,"author":{"gitId":"bryanwhl"},"content":"                    case \"E\": {"},{"lineNumber":52,"author":{"gitId":"bryanwhl"},"content":"                        String taskName \u003d entryData.next().trim();"},{"lineNumber":53,"author":{"gitId":"bryanwhl"},"content":"                        String period \u003d entryData.next().trim();"},{"lineNumber":54,"author":{"gitId":"bryanwhl"},"content":"                        Event newEvent \u003d new Event(taskName, period);"},{"lineNumber":55,"author":{"gitId":"bryanwhl"},"content":"                        if (isCompleted.equals(\"1\")) {"},{"lineNumber":56,"author":{"gitId":"bryanwhl"},"content":"                            newEvent.setDone();"},{"lineNumber":57,"author":{"gitId":"bryanwhl"},"content":"                        }"},{"lineNumber":58,"author":{"gitId":"bryanwhl"},"content":"                        taskList.addTask(newEvent);"},{"lineNumber":59,"author":{"gitId":"bryanwhl"},"content":"                        break;"},{"lineNumber":60,"author":{"gitId":"bryanwhl"},"content":"                    }"},{"lineNumber":61,"author":{"gitId":"bryanwhl"},"content":"                    }"},{"lineNumber":62,"author":{"gitId":"bryanwhl"},"content":"                }"},{"lineNumber":63,"author":{"gitId":"bryanwhl"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"bryanwhl"},"content":"        } catch (IOException e) {"},{"lineNumber":65,"author":{"gitId":"bryanwhl"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":66,"author":{"gitId":"bryanwhl"},"content":"            e.printStackTrace();"},{"lineNumber":67,"author":{"gitId":"bryanwhl"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"bryanwhl"},"content":"        return taskList;"},{"lineNumber":69,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"bryanwhl"},"content":""},{"lineNumber":71,"author":{"gitId":"bryanwhl"},"content":"    public static void saveData(TaskList taskList) {"},{"lineNumber":72,"author":{"gitId":"bryanwhl"},"content":"        try {"},{"lineNumber":73,"author":{"gitId":"bryanwhl"},"content":"            File database;"},{"lineNumber":74,"author":{"gitId":"bryanwhl"},"content":"            database \u003d new File(\"database.txt\");"},{"lineNumber":75,"author":{"gitId":"bryanwhl"},"content":"            database.createNewFile();"},{"lineNumber":76,"author":{"gitId":"bryanwhl"},"content":"        } catch (IOException e) {"},{"lineNumber":77,"author":{"gitId":"bryanwhl"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":78,"author":{"gitId":"bryanwhl"},"content":"            e.printStackTrace();"},{"lineNumber":79,"author":{"gitId":"bryanwhl"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"bryanwhl"},"content":"        String stringForSaving \u003d \"\";"},{"lineNumber":81,"author":{"gitId":"bryanwhl"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":82,"author":{"gitId":"bryanwhl"},"content":"            Task currentTask \u003d taskList.getTask(i);"},{"lineNumber":83,"author":{"gitId":"bryanwhl"},"content":"            stringForSaving +\u003d currentTask.toStringSave();"},{"lineNumber":84,"author":{"gitId":"bryanwhl"},"content":"            stringForSaving +\u003d \"\\n\";"},{"lineNumber":85,"author":{"gitId":"bryanwhl"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"bryanwhl"},"content":"        try {"},{"lineNumber":87,"author":{"gitId":"bryanwhl"},"content":"            FileWriter fileEditor \u003d new FileWriter(\"database.txt\");"},{"lineNumber":88,"author":{"gitId":"bryanwhl"},"content":"            fileEditor.write(stringForSaving);"},{"lineNumber":89,"author":{"gitId":"bryanwhl"},"content":"            fileEditor.close();"},{"lineNumber":90,"author":{"gitId":"bryanwhl"},"content":"        } catch (IOException e) {"},{"lineNumber":91,"author":{"gitId":"bryanwhl"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":92,"author":{"gitId":"bryanwhl"},"content":"            e.printStackTrace();"},{"lineNumber":93,"author":{"gitId":"bryanwhl"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"bryanwhl"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"bryanwhl"},"content":"}"}],"authorContributionMap":{"bryanwhl":95}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"bryanwhl"},"content":"javac  -cp ..\\src\\main\\java\\Duke.Duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.Duke\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"bryanwhl"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"bryanwhl":2,"-":19}}]
