[{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"jadenwjh"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"jadenwjh"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"jadenwjh"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"jadenwjh"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"jadenwjh"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"jadenwjh"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"jadenwjh"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"jadenwjh"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"jadenwjh"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"jadenwjh"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"jadenwjh"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"jadenwjh"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"jadenwjh"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"jadenwjh"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"jadenwjh"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":17,"author":{"gitId":"jadenwjh"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"jadenwjh"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"jadenwjh"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"jadenwjh"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"jadenwjh"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"jadenwjh"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":24,"author":{"gitId":"jadenwjh"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"jadenwjh"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":27,"author":{"gitId":"jadenwjh"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"jadenwjh"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"jadenwjh"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"jadenwjh"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":32,"author":{"gitId":"jadenwjh"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":33,"author":{"gitId":"jadenwjh"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":34,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":35,"author":{"gitId":"jadenwjh"},"content":"@rem Find java.exe"},{"lineNumber":36,"author":{"gitId":"jadenwjh"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":37,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":38,"author":{"gitId":"jadenwjh"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":39,"author":{"gitId":"jadenwjh"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":40,"author":{"gitId":"jadenwjh"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":41,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":42,"author":{"gitId":"jadenwjh"},"content":"echo."},{"lineNumber":43,"author":{"gitId":"jadenwjh"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":44,"author":{"gitId":"jadenwjh"},"content":"echo."},{"lineNumber":45,"author":{"gitId":"jadenwjh"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":46,"author":{"gitId":"jadenwjh"},"content":"echo location of your Java installation."},{"lineNumber":47,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":48,"author":{"gitId":"jadenwjh"},"content":"goto fail"},{"lineNumber":49,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":50,"author":{"gitId":"jadenwjh"},"content":":findJavaFromJavaHome"},{"lineNumber":51,"author":{"gitId":"jadenwjh"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":52,"author":{"gitId":"jadenwjh"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":53,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":54,"author":{"gitId":"jadenwjh"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":55,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":56,"author":{"gitId":"jadenwjh"},"content":"echo."},{"lineNumber":57,"author":{"gitId":"jadenwjh"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":58,"author":{"gitId":"jadenwjh"},"content":"echo."},{"lineNumber":59,"author":{"gitId":"jadenwjh"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":60,"author":{"gitId":"jadenwjh"},"content":"echo location of your Java installation."},{"lineNumber":61,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":62,"author":{"gitId":"jadenwjh"},"content":"goto fail"},{"lineNumber":63,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":64,"author":{"gitId":"jadenwjh"},"content":":init"},{"lineNumber":65,"author":{"gitId":"jadenwjh"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":66,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":67,"author":{"gitId":"jadenwjh"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":68,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":69,"author":{"gitId":"jadenwjh"},"content":":win9xME_args"},{"lineNumber":70,"author":{"gitId":"jadenwjh"},"content":"@rem Slurp the command line arguments."},{"lineNumber":71,"author":{"gitId":"jadenwjh"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":72,"author":{"gitId":"jadenwjh"},"content":"set _SKIP\u003d2"},{"lineNumber":73,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":74,"author":{"gitId":"jadenwjh"},"content":":win9xME_args_slurp"},{"lineNumber":75,"author":{"gitId":"jadenwjh"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":76,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":77,"author":{"gitId":"jadenwjh"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":78,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":79,"author":{"gitId":"jadenwjh"},"content":":execute"},{"lineNumber":80,"author":{"gitId":"jadenwjh"},"content":"@rem Setup the command line"},{"lineNumber":81,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":82,"author":{"gitId":"jadenwjh"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":83,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":84,"author":{"gitId":"jadenwjh"},"content":"@rem Execute Gradle"},{"lineNumber":85,"author":{"gitId":"jadenwjh"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":86,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":87,"author":{"gitId":"jadenwjh"},"content":":end"},{"lineNumber":88,"author":{"gitId":"jadenwjh"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":89,"author":{"gitId":"jadenwjh"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":90,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":91,"author":{"gitId":"jadenwjh"},"content":":fail"},{"lineNumber":92,"author":{"gitId":"jadenwjh"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":93,"author":{"gitId":"jadenwjh"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":94,"author":{"gitId":"jadenwjh"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":95,"author":{"gitId":"jadenwjh"},"content":"exit /b 1"},{"lineNumber":96,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":97,"author":{"gitId":"jadenwjh"},"content":":mainEnd"},{"lineNumber":98,"author":{"gitId":"jadenwjh"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":99,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":100,"author":{"gitId":"jadenwjh"},"content":":omega"}],"authorContributionMap":{"jadenwjh":100}},{"path":"src/main/java/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jadenwjh"},"content":"public class Constants {"},{"lineNumber":2,"author":{"gitId":"jadenwjh"},"content":"    public static final String horizontalLine \u003d \"    ___________________________________________\";"},{"lineNumber":3,"author":{"gitId":"jadenwjh"},"content":"    public static final String helloMessage \u003d \"Hello! I\u0027m Duke\";"},{"lineNumber":4,"author":{"gitId":"jadenwjh"},"content":"    public static final String assistMessage \u003d \"What can I do for you?\";"},{"lineNumber":5,"author":{"gitId":"jadenwjh"},"content":"    public static final String byeMessage \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":6,"author":{"gitId":"jadenwjh"},"content":"    public static final String doneMessage \u003d \"Nice! I\u0027ve marked this task as done:\";"},{"lineNumber":7,"author":{"gitId":"jadenwjh"},"content":"    public static final String addedMessage \u003d \"Got it. I\u0027ve added this task:\";"},{"lineNumber":8,"author":{"gitId":"jadenwjh"},"content":"    public static final String errorMessage \u003d \"Invalid input!\";"},{"lineNumber":9,"author":{"gitId":"jadenwjh"},"content":"    public static final String doneErrorMessage \u003d \"Done what? Input the task number please!\";"},{"lineNumber":10,"author":{"gitId":"jadenwjh"},"content":"    public static final String todoErrorMessage \u003d \"What is the task? Please add one!\";"},{"lineNumber":11,"author":{"gitId":"jadenwjh"},"content":"    public static final String deadlineErrorMessage \u003d \"When is the deadline? Please add one!\";"},{"lineNumber":12,"author":{"gitId":"jadenwjh"},"content":"    public static final String eventErrorMessage \u003d \"When is the event? Please add one!\";"},{"lineNumber":13,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":14,"author":{"gitId":"jadenwjh"},"content":"    public static final String BYE \u003d \"bye\";"},{"lineNumber":15,"author":{"gitId":"jadenwjh"},"content":"    public static final String LIST \u003d \"list\";"},{"lineNumber":16,"author":{"gitId":"jadenwjh"},"content":"    public static final String DONE \u003d \"done\";"},{"lineNumber":17,"author":{"gitId":"jadenwjh"},"content":"    public static final String TODO \u003d \"todo\";"},{"lineNumber":18,"author":{"gitId":"jadenwjh"},"content":"    public static final String DEADLINE \u003d \"deadline\";"},{"lineNumber":19,"author":{"gitId":"jadenwjh"},"content":"    public static final String EVENT \u003d \"event\";"},{"lineNumber":20,"author":{"gitId":"jadenwjh"},"content":"}"}],"authorContributionMap":{"jadenwjh":20}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jadenwjh"},"content":"public class Deadline implements Task {"},{"lineNumber":2,"author":{"gitId":"jadenwjh"},"content":"    private final String description;"},{"lineNumber":3,"author":{"gitId":"jadenwjh"},"content":"    private final boolean isDone;"},{"lineNumber":4,"author":{"gitId":"jadenwjh"},"content":"    private final int index;"},{"lineNumber":5,"author":{"gitId":"jadenwjh"},"content":"    private final String message;"},{"lineNumber":6,"author":{"gitId":"jadenwjh"},"content":"    private final String deadline;"},{"lineNumber":7,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":8,"author":{"gitId":"jadenwjh"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"jadenwjh"},"content":"     * Constructs a deadline task."},{"lineNumber":10,"author":{"gitId":"jadenwjh"},"content":"     * Requires the task number, a task description, indication if task is done, and the deadline."},{"lineNumber":11,"author":{"gitId":"jadenwjh"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"jadenwjh"},"content":"    public Deadline(int index, String description, boolean isDone, String deadline) {"},{"lineNumber":13,"author":{"gitId":"jadenwjh"},"content":"        String fullDescription \u003d String.format(\"%s (by: %s)\", description, deadline);"},{"lineNumber":14,"author":{"gitId":"jadenwjh"},"content":"        this.description \u003d fullDescription;"},{"lineNumber":15,"author":{"gitId":"jadenwjh"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":16,"author":{"gitId":"jadenwjh"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":17,"author":{"gitId":"jadenwjh"},"content":"        this.index \u003d index;"},{"lineNumber":18,"author":{"gitId":"jadenwjh"},"content":"        this.message \u003d String.format(\"[D][%s] %s\","},{"lineNumber":19,"author":{"gitId":"jadenwjh"},"content":"                isDone ? \"X\" : \" \","},{"lineNumber":20,"author":{"gitId":"jadenwjh"},"content":"                fullDescription"},{"lineNumber":21,"author":{"gitId":"jadenwjh"},"content":"        );"},{"lineNumber":22,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":24,"author":{"gitId":"jadenwjh"},"content":"    public boolean isTaskDone() {"},{"lineNumber":25,"author":{"gitId":"jadenwjh"},"content":"        return isDone;"},{"lineNumber":26,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":28,"author":{"gitId":"jadenwjh"},"content":"    public int getIndex() {"},{"lineNumber":29,"author":{"gitId":"jadenwjh"},"content":"        return index;"},{"lineNumber":30,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":32,"author":{"gitId":"jadenwjh"},"content":"    public String getDescription() {"},{"lineNumber":33,"author":{"gitId":"jadenwjh"},"content":"        return description;"},{"lineNumber":34,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":36,"author":{"gitId":"jadenwjh"},"content":"    public String getMessage() {"},{"lineNumber":37,"author":{"gitId":"jadenwjh"},"content":"        return message;"},{"lineNumber":38,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":40,"author":{"gitId":"jadenwjh"},"content":"    public String getDeadline() {"},{"lineNumber":41,"author":{"gitId":"jadenwjh"},"content":"        return deadline;"},{"lineNumber":42,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":44,"author":{"gitId":"jadenwjh"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"jadenwjh"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"jadenwjh"},"content":"        return String.format(\"%d.%s\", getIndex(), getMessage());"},{"lineNumber":47,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jadenwjh"},"content":"}"}],"authorContributionMap":{"jadenwjh":48}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":2,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":3,"author":{"gitId":"jadenwjh"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"jadenwjh"},"content":"     * Main function."},{"lineNumber":5,"author":{"gitId":"jadenwjh"},"content":"     */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"jadenwjh"},"content":"        Logic logic \u003d Logic.getInstance();"},{"lineNumber":8,"author":{"gitId":"jadenwjh"},"content":"        logic.handleMessage();"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":4,"jadenwjh":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jadenwjh"},"content":"public class Event implements Task {"},{"lineNumber":2,"author":{"gitId":"jadenwjh"},"content":"    private final String description;"},{"lineNumber":3,"author":{"gitId":"jadenwjh"},"content":"    private final boolean isDone;"},{"lineNumber":4,"author":{"gitId":"jadenwjh"},"content":"    private final int index;"},{"lineNumber":5,"author":{"gitId":"jadenwjh"},"content":"    private final String message;"},{"lineNumber":6,"author":{"gitId":"jadenwjh"},"content":"    private final String event;"},{"lineNumber":7,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":8,"author":{"gitId":"jadenwjh"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"jadenwjh"},"content":"     * Constructs an event task."},{"lineNumber":10,"author":{"gitId":"jadenwjh"},"content":"     * Requires the task number, a task description, indication if task is done and the event."},{"lineNumber":11,"author":{"gitId":"jadenwjh"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"jadenwjh"},"content":"    public Event(int index, String description, boolean isDone, String event) {"},{"lineNumber":13,"author":{"gitId":"jadenwjh"},"content":"        String fullDescription \u003d String.format(\"%s (at: %s)\", description, event);"},{"lineNumber":14,"author":{"gitId":"jadenwjh"},"content":"        this.description \u003d fullDescription;"},{"lineNumber":15,"author":{"gitId":"jadenwjh"},"content":"        this.event \u003d event;"},{"lineNumber":16,"author":{"gitId":"jadenwjh"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":17,"author":{"gitId":"jadenwjh"},"content":"        this.index \u003d index;"},{"lineNumber":18,"author":{"gitId":"jadenwjh"},"content":"        this.message \u003d String.format(\"[E][%s] %s\","},{"lineNumber":19,"author":{"gitId":"jadenwjh"},"content":"                isDone ? \"X\" : \" \","},{"lineNumber":20,"author":{"gitId":"jadenwjh"},"content":"                fullDescription"},{"lineNumber":21,"author":{"gitId":"jadenwjh"},"content":"        );"},{"lineNumber":22,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":24,"author":{"gitId":"jadenwjh"},"content":"    public boolean isTaskDone() {"},{"lineNumber":25,"author":{"gitId":"jadenwjh"},"content":"        return isDone;"},{"lineNumber":26,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":28,"author":{"gitId":"jadenwjh"},"content":"    public int getIndex() {"},{"lineNumber":29,"author":{"gitId":"jadenwjh"},"content":"        return index;"},{"lineNumber":30,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":32,"author":{"gitId":"jadenwjh"},"content":"    public String getDescription() {"},{"lineNumber":33,"author":{"gitId":"jadenwjh"},"content":"        return description;"},{"lineNumber":34,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":36,"author":{"gitId":"jadenwjh"},"content":"    public String getMessage() {"},{"lineNumber":37,"author":{"gitId":"jadenwjh"},"content":"        return message;"},{"lineNumber":38,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":40,"author":{"gitId":"jadenwjh"},"content":"    public String getEvent() {"},{"lineNumber":41,"author":{"gitId":"jadenwjh"},"content":"        return event;"},{"lineNumber":42,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":44,"author":{"gitId":"jadenwjh"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"jadenwjh"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"jadenwjh"},"content":"        return String.format(\"%d.%s\", getIndex(), getMessage());"},{"lineNumber":47,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jadenwjh"},"content":"}"}],"authorContributionMap":{"jadenwjh":48}},{"path":"src/main/java/Logic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jadenwjh"},"content":"import java.util.Arrays;"},{"lineNumber":2,"author":{"gitId":"jadenwjh"},"content":"import java.util.HashMap;"},{"lineNumber":3,"author":{"gitId":"jadenwjh"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"jadenwjh"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"jadenwjh"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":7,"author":{"gitId":"jadenwjh"},"content":"public class Logic {"},{"lineNumber":8,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":9,"author":{"gitId":"jadenwjh"},"content":"    private static Logic instance \u003d null;"},{"lineNumber":10,"author":{"gitId":"jadenwjh"},"content":"    private static List\u003cString\u003e messages;"},{"lineNumber":11,"author":{"gitId":"jadenwjh"},"content":"    private static Scanner scanner;"},{"lineNumber":12,"author":{"gitId":"jadenwjh"},"content":"    private static TaskManager taskManager;"},{"lineNumber":13,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":14,"author":{"gitId":"jadenwjh"},"content":"    private Logic() {"},{"lineNumber":15,"author":{"gitId":"jadenwjh"},"content":"        messages \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"jadenwjh"},"content":"        messages.add(Constants.helloMessage);"},{"lineNumber":17,"author":{"gitId":"jadenwjh"},"content":"        messages.add(Constants.assistMessage);"},{"lineNumber":18,"author":{"gitId":"jadenwjh"},"content":"        Utils.reply(messages);"},{"lineNumber":19,"author":{"gitId":"jadenwjh"},"content":"        scanner \u003d new Scanner(System.in);"},{"lineNumber":20,"author":{"gitId":"jadenwjh"},"content":"        taskManager \u003d TaskManager.getInstance();"},{"lineNumber":21,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":23,"author":{"gitId":"jadenwjh"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"jadenwjh"},"content":"     * New logic instance. Greets user when called."},{"lineNumber":25,"author":{"gitId":"jadenwjh"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"jadenwjh"},"content":"    public static Logic getInstance() {"},{"lineNumber":27,"author":{"gitId":"jadenwjh"},"content":"        if (instance \u003d\u003d null) {"},{"lineNumber":28,"author":{"gitId":"jadenwjh"},"content":"            instance \u003d new Logic();"},{"lineNumber":29,"author":{"gitId":"jadenwjh"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"jadenwjh"},"content":"        return instance;"},{"lineNumber":31,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":33,"author":{"gitId":"jadenwjh"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"jadenwjh"},"content":"     * Fetches all valid tasks user wants to complete, by task index number."},{"lineNumber":35,"author":{"gitId":"jadenwjh"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"jadenwjh"},"content":"    private static List\u003cInteger\u003e tasksToComplete(String[] indexes) {"},{"lineNumber":37,"author":{"gitId":"jadenwjh"},"content":"        List\u003cInteger\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":38,"author":{"gitId":"jadenwjh"},"content":"        for (String index : indexes) {"},{"lineNumber":39,"author":{"gitId":"jadenwjh"},"content":"            if (Utils.isInteger(index)) {"},{"lineNumber":40,"author":{"gitId":"jadenwjh"},"content":"                int taskIndex \u003d Integer.parseInt(index);"},{"lineNumber":41,"author":{"gitId":"jadenwjh"},"content":"                if (taskManager.isTaskPresent(taskIndex)) {"},{"lineNumber":42,"author":{"gitId":"jadenwjh"},"content":"                    tasks.add(taskIndex);"},{"lineNumber":43,"author":{"gitId":"jadenwjh"},"content":"                }"},{"lineNumber":44,"author":{"gitId":"jadenwjh"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"jadenwjh"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"jadenwjh"},"content":"        return tasks;"},{"lineNumber":47,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":49,"author":{"gitId":"jadenwjh"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"jadenwjh"},"content":"     * If message if \"list\", lists all messages previously mentioned."},{"lineNumber":51,"author":{"gitId":"jadenwjh"},"content":"     * If message is \"bye\", exits program."},{"lineNumber":52,"author":{"gitId":"jadenwjh"},"content":"     * If message is \"done\", proceeds to mark tasks as completed."},{"lineNumber":53,"author":{"gitId":"jadenwjh"},"content":"     * Else, adds the message as a task."},{"lineNumber":54,"author":{"gitId":"jadenwjh"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"jadenwjh"},"content":"    public static void handleMessage() {"},{"lineNumber":56,"author":{"gitId":"jadenwjh"},"content":"        String sentence \u003d scanner.nextLine();"},{"lineNumber":57,"author":{"gitId":"jadenwjh"},"content":"        String[] words \u003d sentence.split(\" \");"},{"lineNumber":58,"author":{"gitId":"jadenwjh"},"content":"        String command \u003d words[0];"},{"lineNumber":59,"author":{"gitId":"jadenwjh"},"content":"        String task \u003d String.join(\" \", Arrays.copyOfRange(words, 1, words.length));"},{"lineNumber":60,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":61,"author":{"gitId":"jadenwjh"},"content":"        switch (command) {"},{"lineNumber":62,"author":{"gitId":"jadenwjh"},"content":"            case Constants.BYE:"},{"lineNumber":63,"author":{"gitId":"jadenwjh"},"content":"                messages.add(Constants.byeMessage);"},{"lineNumber":64,"author":{"gitId":"jadenwjh"},"content":"                Utils.reply(messages);"},{"lineNumber":65,"author":{"gitId":"jadenwjh"},"content":"                scanner.close();"},{"lineNumber":66,"author":{"gitId":"jadenwjh"},"content":"                return;"},{"lineNumber":67,"author":{"gitId":"jadenwjh"},"content":"            case Constants.LIST:"},{"lineNumber":68,"author":{"gitId":"jadenwjh"},"content":"                List\u003cString\u003e response \u003d taskManager.fetchTasks();"},{"lineNumber":69,"author":{"gitId":"jadenwjh"},"content":"                messages.addAll(response);"},{"lineNumber":70,"author":{"gitId":"jadenwjh"},"content":"                break;"},{"lineNumber":71,"author":{"gitId":"jadenwjh"},"content":"            case Constants.DONE:"},{"lineNumber":72,"author":{"gitId":"jadenwjh"},"content":"                List\u003cInteger\u003e indexes \u003d tasksToComplete(Arrays.copyOfRange(words, 1, words.length));"},{"lineNumber":73,"author":{"gitId":"jadenwjh"},"content":"                if (!indexes.isEmpty()) {"},{"lineNumber":74,"author":{"gitId":"jadenwjh"},"content":"                    response \u003d taskManager.completeTasks(indexes);"},{"lineNumber":75,"author":{"gitId":"jadenwjh"},"content":"                    messages.addAll(response);"},{"lineNumber":76,"author":{"gitId":"jadenwjh"},"content":"                } else {"},{"lineNumber":77,"author":{"gitId":"jadenwjh"},"content":"                    messages.add(Constants.doneErrorMessage);"},{"lineNumber":78,"author":{"gitId":"jadenwjh"},"content":"                }"},{"lineNumber":79,"author":{"gitId":"jadenwjh"},"content":"                break;"},{"lineNumber":80,"author":{"gitId":"jadenwjh"},"content":"            case Constants.TODO:"},{"lineNumber":81,"author":{"gitId":"jadenwjh"},"content":"            case Constants.DEADLINE:"},{"lineNumber":82,"author":{"gitId":"jadenwjh"},"content":"            case Constants.EVENT:"},{"lineNumber":83,"author":{"gitId":"jadenwjh"},"content":"                if (task.isEmpty()) {"},{"lineNumber":84,"author":{"gitId":"jadenwjh"},"content":"                    messages.add(Constants.errorMessage);"},{"lineNumber":85,"author":{"gitId":"jadenwjh"},"content":"                } else {"},{"lineNumber":86,"author":{"gitId":"jadenwjh"},"content":"                    response \u003d taskManager.addTask(command, task);"},{"lineNumber":87,"author":{"gitId":"jadenwjh"},"content":"                    messages.addAll(response);"},{"lineNumber":88,"author":{"gitId":"jadenwjh"},"content":"                }"},{"lineNumber":89,"author":{"gitId":"jadenwjh"},"content":"                break;"},{"lineNumber":90,"author":{"gitId":"jadenwjh"},"content":"            default:"},{"lineNumber":91,"author":{"gitId":"jadenwjh"},"content":"                messages.add(Constants.errorMessage);"},{"lineNumber":92,"author":{"gitId":"jadenwjh"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"jadenwjh"},"content":"        Utils.reply(messages);"},{"lineNumber":94,"author":{"gitId":"jadenwjh"},"content":"        handleMessage();"},{"lineNumber":95,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"jadenwjh"},"content":"}"}],"authorContributionMap":{"jadenwjh":96}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jadenwjh"},"content":"public interface Task {"},{"lineNumber":2,"author":{"gitId":"jadenwjh"},"content":"    "},{"lineNumber":3,"author":{"gitId":"jadenwjh"},"content":"    public boolean isTaskDone();"},{"lineNumber":4,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":5,"author":{"gitId":"jadenwjh"},"content":"    public int getIndex();"},{"lineNumber":6,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":7,"author":{"gitId":"jadenwjh"},"content":"    public String getMessage();"},{"lineNumber":8,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":9,"author":{"gitId":"jadenwjh"},"content":"    public String getDescription();"},{"lineNumber":10,"author":{"gitId":"jadenwjh"},"content":"}"}],"authorContributionMap":{"jadenwjh":10}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jadenwjh"},"content":"import java.util.HashMap;"},{"lineNumber":2,"author":{"gitId":"jadenwjh"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"jadenwjh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":5,"author":{"gitId":"jadenwjh"},"content":"public class TaskManager {"},{"lineNumber":6,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":7,"author":{"gitId":"jadenwjh"},"content":"    private static TaskManager instance \u003d null;"},{"lineNumber":8,"author":{"gitId":"jadenwjh"},"content":"    private static HashMap\u003cInteger,Task\u003e storage;"},{"lineNumber":9,"author":{"gitId":"jadenwjh"},"content":"    "},{"lineNumber":10,"author":{"gitId":"jadenwjh"},"content":"    private TaskManager() {"},{"lineNumber":11,"author":{"gitId":"jadenwjh"},"content":"        storage \u003d new HashMap\u003cInteger,Task\u003e();"},{"lineNumber":12,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":14,"author":{"gitId":"jadenwjh"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"jadenwjh"},"content":"     * New TaskManager instance. Handles all tasks."},{"lineNumber":16,"author":{"gitId":"jadenwjh"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"jadenwjh"},"content":"    public static TaskManager getInstance() {"},{"lineNumber":18,"author":{"gitId":"jadenwjh"},"content":"        if (instance \u003d\u003d null) {"},{"lineNumber":19,"author":{"gitId":"jadenwjh"},"content":"            instance \u003d new TaskManager();"},{"lineNumber":20,"author":{"gitId":"jadenwjh"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"jadenwjh"},"content":"        return instance;"},{"lineNumber":22,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":24,"author":{"gitId":"jadenwjh"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"jadenwjh"},"content":"     * Saves current task."},{"lineNumber":26,"author":{"gitId":"jadenwjh"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jadenwjh"},"content":"    public static List\u003cString\u003e addTask(String taskType, String message) {"},{"lineNumber":28,"author":{"gitId":"jadenwjh"},"content":"        List\u003cString\u003e messages \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":29,"author":{"gitId":"jadenwjh"},"content":"        Task task;"},{"lineNumber":30,"author":{"gitId":"jadenwjh"},"content":"        int taskIndex \u003d storage.size() + 1;"},{"lineNumber":31,"author":{"gitId":"jadenwjh"},"content":"        switch (taskType) {"},{"lineNumber":32,"author":{"gitId":"jadenwjh"},"content":"            case Constants.TODO:"},{"lineNumber":33,"author":{"gitId":"jadenwjh"},"content":"                task \u003d new Todo(taskIndex, message, false);"},{"lineNumber":34,"author":{"gitId":"jadenwjh"},"content":"                break;"},{"lineNumber":35,"author":{"gitId":"jadenwjh"},"content":"            case Constants.DEADLINE:"},{"lineNumber":36,"author":{"gitId":"jadenwjh"},"content":"                String[] deadlineTask \u003d message.split(\" /by \");"},{"lineNumber":37,"author":{"gitId":"jadenwjh"},"content":"                String details \u003d deadlineTask[0].trim();"},{"lineNumber":38,"author":{"gitId":"jadenwjh"},"content":"                if (deadlineTask.length \u003c\u003d 1 || details.isEmpty()) {"},{"lineNumber":39,"author":{"gitId":"jadenwjh"},"content":"                    messages.add(Constants.deadlineErrorMessage);"},{"lineNumber":40,"author":{"gitId":"jadenwjh"},"content":"                    return messages;"},{"lineNumber":41,"author":{"gitId":"jadenwjh"},"content":"                }"},{"lineNumber":42,"author":{"gitId":"jadenwjh"},"content":"                String time \u003d deadlineTask[1].trim();"},{"lineNumber":43,"author":{"gitId":"jadenwjh"},"content":"                task \u003d new Deadline(taskIndex, details, false, time);"},{"lineNumber":44,"author":{"gitId":"jadenwjh"},"content":"                break;"},{"lineNumber":45,"author":{"gitId":"jadenwjh"},"content":"            case Constants.EVENT:"},{"lineNumber":46,"author":{"gitId":"jadenwjh"},"content":"                String[] eventTask \u003d message.split(\" /at \");"},{"lineNumber":47,"author":{"gitId":"jadenwjh"},"content":"                details \u003d eventTask[0].trim();"},{"lineNumber":48,"author":{"gitId":"jadenwjh"},"content":"                if (eventTask.length \u003c\u003d 1 || details.isEmpty()) {"},{"lineNumber":49,"author":{"gitId":"jadenwjh"},"content":"                    messages.add(Constants.eventErrorMessage);"},{"lineNumber":50,"author":{"gitId":"jadenwjh"},"content":"                    return messages;"},{"lineNumber":51,"author":{"gitId":"jadenwjh"},"content":"                }"},{"lineNumber":52,"author":{"gitId":"jadenwjh"},"content":"                time \u003d eventTask[1].trim();"},{"lineNumber":53,"author":{"gitId":"jadenwjh"},"content":"                task \u003d new Event(taskIndex, details, false, time);"},{"lineNumber":54,"author":{"gitId":"jadenwjh"},"content":"                break;"},{"lineNumber":55,"author":{"gitId":"jadenwjh"},"content":"            default:"},{"lineNumber":56,"author":{"gitId":"jadenwjh"},"content":"                messages.add(Constants.todoErrorMessage);"},{"lineNumber":57,"author":{"gitId":"jadenwjh"},"content":"                return messages;"},{"lineNumber":58,"author":{"gitId":"jadenwjh"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"jadenwjh"},"content":"        storage.put(taskIndex, task);"},{"lineNumber":60,"author":{"gitId":"jadenwjh"},"content":"        messages.add(Constants.addedMessage);"},{"lineNumber":61,"author":{"gitId":"jadenwjh"},"content":"        messages.add(task.getMessage());"},{"lineNumber":62,"author":{"gitId":"jadenwjh"},"content":"        messages.add(String.format(\"Tasks left: %d\",getIncompleteTasksCount()));"},{"lineNumber":63,"author":{"gitId":"jadenwjh"},"content":"        return messages;"},{"lineNumber":64,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":66,"author":{"gitId":"jadenwjh"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"jadenwjh"},"content":"     * Fetch all previously mentioned messages."},{"lineNumber":68,"author":{"gitId":"jadenwjh"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"jadenwjh"},"content":"    public static List\u003cString\u003e fetchTasks() {"},{"lineNumber":70,"author":{"gitId":"jadenwjh"},"content":"        List\u003cString\u003e messages \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":71,"author":{"gitId":"jadenwjh"},"content":"        for (int index \u003d 0; index \u003c storage.size(); index++) {"},{"lineNumber":72,"author":{"gitId":"jadenwjh"},"content":"            Task task \u003d storage.get(index + 1);"},{"lineNumber":73,"author":{"gitId":"jadenwjh"},"content":"            messages.add(task.toString());"},{"lineNumber":74,"author":{"gitId":"jadenwjh"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"jadenwjh"},"content":"        return messages;"},{"lineNumber":76,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":78,"author":{"gitId":"jadenwjh"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"jadenwjh"},"content":"     * Checks if task is present in storage by index."},{"lineNumber":80,"author":{"gitId":"jadenwjh"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"jadenwjh"},"content":"    public static boolean isTaskPresent(int index) {"},{"lineNumber":82,"author":{"gitId":"jadenwjh"},"content":"        return storage.containsKey(index);"},{"lineNumber":83,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":85,"author":{"gitId":"jadenwjh"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"jadenwjh"},"content":"     * Marks the tasks as completed by their given task numbers."},{"lineNumber":87,"author":{"gitId":"jadenwjh"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"jadenwjh"},"content":"    public static List\u003cString\u003e completeTasks(List\u003cInteger\u003e indexes) {"},{"lineNumber":89,"author":{"gitId":"jadenwjh"},"content":"        List\u003cString\u003e messages \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":90,"author":{"gitId":"jadenwjh"},"content":"        messages.add(Constants.doneMessage);"},{"lineNumber":91,"author":{"gitId":"jadenwjh"},"content":"        for (int index : indexes) {"},{"lineNumber":92,"author":{"gitId":"jadenwjh"},"content":"            Task task \u003d storage.get(index);"},{"lineNumber":93,"author":{"gitId":"jadenwjh"},"content":"            messages.add(String.format(\" [X] %s\\n\", task.getDescription()));"},{"lineNumber":94,"author":{"gitId":"jadenwjh"},"content":"            Todo completedTask \u003d new Todo(index, task.getDescription(), true);"},{"lineNumber":95,"author":{"gitId":"jadenwjh"},"content":"            storage.put(index, completedTask);"},{"lineNumber":96,"author":{"gitId":"jadenwjh"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"jadenwjh"},"content":"        messages.add(String.format(\"Tasks left: %d\",getIncompleteTasksCount()));"},{"lineNumber":98,"author":{"gitId":"jadenwjh"},"content":"        return messages;"},{"lineNumber":99,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":101,"author":{"gitId":"jadenwjh"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"jadenwjh"},"content":"     * Get number of undone tasks in storage."},{"lineNumber":103,"author":{"gitId":"jadenwjh"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"jadenwjh"},"content":"    public static int getIncompleteTasksCount() {"},{"lineNumber":105,"author":{"gitId":"jadenwjh"},"content":"        int count \u003d 0;"},{"lineNumber":106,"author":{"gitId":"jadenwjh"},"content":"        for (Task task : storage.values()) {"},{"lineNumber":107,"author":{"gitId":"jadenwjh"},"content":"            if (!task.isTaskDone()) {"},{"lineNumber":108,"author":{"gitId":"jadenwjh"},"content":"                count++;"},{"lineNumber":109,"author":{"gitId":"jadenwjh"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"jadenwjh"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"jadenwjh"},"content":"        return count;"},{"lineNumber":112,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"jadenwjh"},"content":"}"}],"authorContributionMap":{"jadenwjh":113}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jadenwjh"},"content":"public class Todo implements Task {"},{"lineNumber":2,"author":{"gitId":"jadenwjh"},"content":"    private final String description;"},{"lineNumber":3,"author":{"gitId":"jadenwjh"},"content":"    private final boolean isDone;"},{"lineNumber":4,"author":{"gitId":"jadenwjh"},"content":"    private final int index;"},{"lineNumber":5,"author":{"gitId":"jadenwjh"},"content":"    private final String message;"},{"lineNumber":6,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":7,"author":{"gitId":"jadenwjh"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"jadenwjh"},"content":"     * Constructs a todo task."},{"lineNumber":9,"author":{"gitId":"jadenwjh"},"content":"     * Requires the task number, a task description, indication if task is done."},{"lineNumber":10,"author":{"gitId":"jadenwjh"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"jadenwjh"},"content":"    public Todo(int index, String description, boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"jadenwjh"},"content":"        this.description \u003d description.trim();"},{"lineNumber":13,"author":{"gitId":"jadenwjh"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":14,"author":{"gitId":"jadenwjh"},"content":"        this.index \u003d index;"},{"lineNumber":15,"author":{"gitId":"jadenwjh"},"content":"        this.message \u003d String.format(\"[T][%s] %s\","},{"lineNumber":16,"author":{"gitId":"jadenwjh"},"content":"                isDone ? \"X\" : \" \","},{"lineNumber":17,"author":{"gitId":"jadenwjh"},"content":"                description"},{"lineNumber":18,"author":{"gitId":"jadenwjh"},"content":"        );"},{"lineNumber":19,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":21,"author":{"gitId":"jadenwjh"},"content":"    public boolean isTaskDone() {"},{"lineNumber":22,"author":{"gitId":"jadenwjh"},"content":"        return isDone;"},{"lineNumber":23,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":25,"author":{"gitId":"jadenwjh"},"content":"    public int getIndex() {"},{"lineNumber":26,"author":{"gitId":"jadenwjh"},"content":"        return index;"},{"lineNumber":27,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":29,"author":{"gitId":"jadenwjh"},"content":"    public String getDescription() {"},{"lineNumber":30,"author":{"gitId":"jadenwjh"},"content":"        return description;"},{"lineNumber":31,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":33,"author":{"gitId":"jadenwjh"},"content":"    public String getMessage() {"},{"lineNumber":34,"author":{"gitId":"jadenwjh"},"content":"        return message;"},{"lineNumber":35,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":37,"author":{"gitId":"jadenwjh"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"jadenwjh"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"jadenwjh"},"content":"        return String.format(\"%d.%s\", getIndex(), getMessage());"},{"lineNumber":40,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"jadenwjh"},"content":"}"}],"authorContributionMap":{"jadenwjh":41}},{"path":"src/main/java/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jadenwjh"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":3,"author":{"gitId":"jadenwjh"},"content":"public class Utils {"},{"lineNumber":4,"author":{"gitId":"jadenwjh"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"jadenwjh"},"content":"     * Wraps replies with horizontal lines and indentation."},{"lineNumber":6,"author":{"gitId":"jadenwjh"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"jadenwjh"},"content":"    public static void reply(List\u003cString\u003e messages) {"},{"lineNumber":8,"author":{"gitId":"jadenwjh"},"content":"        String allMessages \u003d \"\";"},{"lineNumber":9,"author":{"gitId":"jadenwjh"},"content":"        String indentation \u003d \"     \";"},{"lineNumber":10,"author":{"gitId":"jadenwjh"},"content":"        for (String message : messages) {"},{"lineNumber":11,"author":{"gitId":"jadenwjh"},"content":"            if (message.isEmpty()) {"},{"lineNumber":12,"author":{"gitId":"jadenwjh"},"content":"                continue;"},{"lineNumber":13,"author":{"gitId":"jadenwjh"},"content":"            }"},{"lineNumber":14,"author":{"gitId":"jadenwjh"},"content":"            allMessages +\u003d indentation + message + \"\\n\";"},{"lineNumber":15,"author":{"gitId":"jadenwjh"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"jadenwjh"},"content":"        System.out.println(String.format(\"%s\\n%s%s\\n\","},{"lineNumber":17,"author":{"gitId":"jadenwjh"},"content":"                Constants.horizontalLine,"},{"lineNumber":18,"author":{"gitId":"jadenwjh"},"content":"                allMessages,"},{"lineNumber":19,"author":{"gitId":"jadenwjh"},"content":"                Constants.horizontalLine"},{"lineNumber":20,"author":{"gitId":"jadenwjh"},"content":"        ));"},{"lineNumber":21,"author":{"gitId":"jadenwjh"},"content":"        messages.clear();"},{"lineNumber":22,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jadenwjh"},"content":""},{"lineNumber":24,"author":{"gitId":"jadenwjh"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"jadenwjh"},"content":"     * Checks if the given string is an integer. "},{"lineNumber":26,"author":{"gitId":"jadenwjh"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jadenwjh"},"content":"    public static boolean isInteger(String s) {"},{"lineNumber":28,"author":{"gitId":"jadenwjh"},"content":"        try { "},{"lineNumber":29,"author":{"gitId":"jadenwjh"},"content":"            Integer.parseInt(s); "},{"lineNumber":30,"author":{"gitId":"jadenwjh"},"content":"        } catch (NumberFormatException e) { "},{"lineNumber":31,"author":{"gitId":"jadenwjh"},"content":"            return false; "},{"lineNumber":32,"author":{"gitId":"jadenwjh"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":33,"author":{"gitId":"jadenwjh"},"content":"            return false;"},{"lineNumber":34,"author":{"gitId":"jadenwjh"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"jadenwjh"},"content":"        return true;"},{"lineNumber":36,"author":{"gitId":"jadenwjh"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jadenwjh"},"content":"}"}],"authorContributionMap":{"jadenwjh":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jadenwjh"},"content":"no command input"},{"lineNumber":2,"author":{"gitId":"jadenwjh"},"content":"todo borrow book"},{"lineNumber":3,"author":{"gitId":"jadenwjh"},"content":"bye"}],"authorContributionMap":{"jadenwjh":3}}]
