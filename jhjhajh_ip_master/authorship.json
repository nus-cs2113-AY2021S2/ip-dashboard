[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"[D] | 0 | return book | June 6th"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":"[E] | 0 | project meeting | Aug 6th 2-4pm"},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"[T] | 1 | join sports club"}],"authorContributionMap":{"jhjhajh":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.*;"},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"import java.nio.file.Files;"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"import java.nio.file.Path;"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"import java.nio.file.Paths;"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"public class Duke {"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":"    public static void goodbye() {"},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":"        saveData();"},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":"        System.out.println(\"\\n\" +"},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":"                \"░██████╗░░█████╗░░█████╗░██████╗░██████╗░██╗░░░██╗███████╗\\n\" +"},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"                \"██╔════╝░██╔══██╗██╔══██╗██╔══██╗██╔══██╗╚██╗░██╔╝██╔════╝\\n\" +"},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":"                \"██║░░██╗░██║░░██║██║░░██║██║░░██║██████╦╝░╚████╔╝░█████╗░░\\n\" +"},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"                \"██║░░╚██╗██║░░██║██║░░██║██║░░██║██╔══██╗░░╚██╔╝░░██╔══╝░░\\n\" +"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":"                \"╚██████╔╝╚█████╔╝╚█████╔╝██████╔╝██████╦╝░░░██║░░░███████╗\\n\" +"},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"                \"░╚═════╝░░╚════╝░░╚════╝░╚═════╝░╚═════╝░░░░╚═╝░░░╚══════╝\\n\" +"},{"lineNumber":27,"author":{"gitId":"jhjhajh"},"content":"                \"Hope to see you again soon!\");"},{"lineNumber":28,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":30,"author":{"gitId":"jhjhajh"},"content":"    public static void welcome() {"},{"lineNumber":31,"author":{"gitId":"jhjhajh"},"content":"        System.out.println(\"\\n\" +"},{"lineNumber":32,"author":{"gitId":"jhjhajh"},"content":"                \"██╗░░██╗███████╗██╗░░░░░██╗░░░░░░█████╗░\\n\" +"},{"lineNumber":33,"author":{"gitId":"jhjhajh"},"content":"                \"██║░░██║██╔════╝██║░░░░░██║░░░░░██╔══██╗\\n\" +"},{"lineNumber":34,"author":{"gitId":"jhjhajh"},"content":"                \"███████║█████╗░░██║░░░░░██║░░░░░██║░░██║\\n\" +"},{"lineNumber":35,"author":{"gitId":"jhjhajh"},"content":"                \"██╔══██║██╔══╝░░██║░░░░░██║░░░░░██║░░██║\\n\" +"},{"lineNumber":36,"author":{"gitId":"jhjhajh"},"content":"                \"██║░░██║███████╗███████╗███████╗╚█████╔╝\\n\" +"},{"lineNumber":37,"author":{"gitId":"jhjhajh"},"content":"                \"╚═╝░░╚═╝╚══════╝╚══════╝╚══════╝░╚════╝░\\n\" +"},{"lineNumber":38,"author":{"gitId":"jhjhajh"},"content":"                \"from\\n\" + \"\\n\" +"},{"lineNumber":39,"author":{"gitId":"jhjhajh"},"content":"                \"██████╗░██╗░░░██╗██╗░░██╗███████╗\\n\" +"},{"lineNumber":40,"author":{"gitId":"jhjhajh"},"content":"                \"██╔══██╗██║░░░██║██║░██╔╝██╔════╝\\n\" +"},{"lineNumber":41,"author":{"gitId":"jhjhajh"},"content":"                \"██║░░██║██║░░░██║█████═╝░█████╗░░\\n\" +"},{"lineNumber":42,"author":{"gitId":"jhjhajh"},"content":"                \"██║░░██║██║░░░██║██╔═██╗░██╔══╝░░\\n\" +"},{"lineNumber":43,"author":{"gitId":"jhjhajh"},"content":"                \"██████╔╝╚██████╔╝██║░╚██╗███████╗\\n\" +"},{"lineNumber":44,"author":{"gitId":"jhjhajh"},"content":"                \"╚═════╝░░╚═════╝░╚═╝░░╚═╝╚══════╝\\n\");"},{"lineNumber":45,"author":{"gitId":"jhjhajh"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"},{"lineNumber":46,"author":{"gitId":"jhjhajh"},"content":"        System.out.println(\"_________________________________________________________________________\");"},{"lineNumber":47,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":49,"author":{"gitId":"jhjhajh"},"content":"    public static void printInvalidMessage(String type) {"},{"lineNumber":50,"author":{"gitId":"jhjhajh"},"content":"        System.out.println(\"\\uD83D\\uDE1E OOPS! \" + type + \" is not valid, please try again!\");"},{"lineNumber":51,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":53,"author":{"gitId":"jhjhajh"},"content":"    public static void validateInput (String input, String type) throws DukeException {"},{"lineNumber":54,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"jhjhajh"},"content":"            if (type.equals(\"done\") \u0026\u0026 (!(input.strip()).matches(\"[-+]?\\\\\\\\d*\\\\\\\\.?\\\\\\\\d+\\n\"))) {"},{"lineNumber":56,"author":{"gitId":"jhjhajh"},"content":"                throw new DukeException();"},{"lineNumber":57,"author":{"gitId":"jhjhajh"},"content":"            } else if (type.equals(\"todo\") \u0026\u0026 (input.strip().length() \u003c\u003d 0)) {"},{"lineNumber":58,"author":{"gitId":"jhjhajh"},"content":"                throw new DukeException();"},{"lineNumber":59,"author":{"gitId":"jhjhajh"},"content":"            } else {"},{"lineNumber":60,"author":{"gitId":"jhjhajh"},"content":"                if (!input.contains(\"/\")) {"},{"lineNumber":61,"author":{"gitId":"jhjhajh"},"content":"                    if (type.equals(\"deadline\")) {"},{"lineNumber":62,"author":{"gitId":"jhjhajh"},"content":"                        throw new DukeException();"},{"lineNumber":63,"author":{"gitId":"jhjhajh"},"content":"                    } else if (type.equals(\"event\")){"},{"lineNumber":64,"author":{"gitId":"jhjhajh"},"content":"                        throw new DukeException ();"},{"lineNumber":65,"author":{"gitId":"jhjhajh"},"content":"                    }"},{"lineNumber":66,"author":{"gitId":"jhjhajh"},"content":"                }"},{"lineNumber":67,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"jhjhajh"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":69,"author":{"gitId":"jhjhajh"},"content":"            printInvalidMessage(type);"},{"lineNumber":70,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":73,"author":{"gitId":"jhjhajh"},"content":"    public static void showList() {"},{"lineNumber":74,"author":{"gitId":"jhjhajh"},"content":"        if (tasks.size() \u003e 0) {"},{"lineNumber":75,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":76,"author":{"gitId":"jhjhajh"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":77,"author":{"gitId":"jhjhajh"},"content":"                Task currentTask \u003d tasks.get(i);"},{"lineNumber":78,"author":{"gitId":"jhjhajh"},"content":"                System.out.print(i+1 + \". \" + currentTask.getTaskType() + currentTask.getStatusIcon() + \" \""},{"lineNumber":79,"author":{"gitId":"jhjhajh"},"content":"                    + currentTask.getDescription());"},{"lineNumber":80,"author":{"gitId":"jhjhajh"},"content":"                if (currentTask.getTaskType() \u003d\u003d \"[D]\")"},{"lineNumber":81,"author":{"gitId":"jhjhajh"},"content":"                    System.out.print(\" (by: \" + currentTask.getDateTime() + \")\");"},{"lineNumber":82,"author":{"gitId":"jhjhajh"},"content":"                else if (currentTask.getTaskType() \u003d\u003d \"[E]\") {"},{"lineNumber":83,"author":{"gitId":"jhjhajh"},"content":"                    System.out.print(\" (at: \" + currentTask.getDateTime() + \")\");"},{"lineNumber":84,"author":{"gitId":"jhjhajh"},"content":"                }"},{"lineNumber":85,"author":{"gitId":"jhjhajh"},"content":"                System.out.print(\"\\n\");"},{"lineNumber":86,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"jhjhajh"},"content":"        } else {"},{"lineNumber":88,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Please input a task.\");"},{"lineNumber":89,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":92,"author":{"gitId":"jhjhajh"},"content":"    public static void markAsDone(String taskDone) {"},{"lineNumber":93,"author":{"gitId":"jhjhajh"},"content":"        int taskIndex \u003d Integer.parseInt(taskDone) - 1;"},{"lineNumber":94,"author":{"gitId":"jhjhajh"},"content":"        if (taskIndex \u003e\u003d tasks.size() || taskIndex \u003c 0){"},{"lineNumber":95,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"You have not added task \" + taskIndex + \" yet! Please try again.\");"},{"lineNumber":96,"author":{"gitId":"jhjhajh"},"content":"        } else {"},{"lineNumber":97,"author":{"gitId":"jhjhajh"},"content":"            tasks.get(taskIndex - 1).setDone();"},{"lineNumber":98,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":99,"author":{"gitId":"jhjhajh"},"content":"            Task currentTask \u003d tasks.get(taskIndex);"},{"lineNumber":100,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(currentTask.getTaskType() + currentTask.getStatusIcon()"},{"lineNumber":101,"author":{"gitId":"jhjhajh"},"content":"                    + currentTask.getDescription());"},{"lineNumber":102,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":105,"author":{"gitId":"jhjhajh"},"content":"    public static void addToDo(String taskToAdd) {"},{"lineNumber":106,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":107,"author":{"gitId":"jhjhajh"},"content":"            validateInput(taskToAdd, \"todo\");"},{"lineNumber":108,"author":{"gitId":"jhjhajh"},"content":"            Todo t \u003d new Todo(taskToAdd);"},{"lineNumber":109,"author":{"gitId":"jhjhajh"},"content":"            tasks.add(t);"},{"lineNumber":110,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":111,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(t.getTaskType() + t.getStatusIcon() + \" \" + t.getDescription());"},{"lineNumber":112,"author":{"gitId":"jhjhajh"},"content":"            if (tasks.size() \u003e 1) {"},{"lineNumber":113,"author":{"gitId":"jhjhajh"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":114,"author":{"gitId":"jhjhajh"},"content":"            } else {"},{"lineNumber":115,"author":{"gitId":"jhjhajh"},"content":"                System.out.println(\"Now you have \" +tasks.size() + \" task in the list.\");"},{"lineNumber":116,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"jhjhajh"},"content":"        } catch (DukeException | IndexOutOfBoundsException e) {"},{"lineNumber":118,"author":{"gitId":"jhjhajh"},"content":"            printInvalidMessage(\"todo\");"},{"lineNumber":119,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":122,"author":{"gitId":"jhjhajh"},"content":"    public static void addEvent(String taskToAdd) {"},{"lineNumber":123,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":124,"author":{"gitId":"jhjhajh"},"content":"            validateInput(taskToAdd, \"event\");"},{"lineNumber":125,"author":{"gitId":"jhjhajh"},"content":"            int splitIndex \u003d taskToAdd.indexOf(\u0027/\u0027);"},{"lineNumber":126,"author":{"gitId":"jhjhajh"},"content":"            String description \u003d taskToAdd.substring(0, splitIndex);"},{"lineNumber":127,"author":{"gitId":"jhjhajh"},"content":"            String dateTime \u003d taskToAdd.substring(splitIndex + 3);"},{"lineNumber":128,"author":{"gitId":"jhjhajh"},"content":"            Event e \u003d new Event(description, dateTime);"},{"lineNumber":129,"author":{"gitId":"jhjhajh"},"content":"            tasks.add(e);"},{"lineNumber":130,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":131,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(e.getTaskType() + e.getStatusIcon() + \" \" + e.getDescription() + \" at(: \""},{"lineNumber":132,"author":{"gitId":"jhjhajh"},"content":"                    + e.getDateTime() + \")\");"},{"lineNumber":133,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":134,"author":{"gitId":"jhjhajh"},"content":"        } catch (DukeException | IndexOutOfBoundsException e) {"},{"lineNumber":135,"author":{"gitId":"jhjhajh"},"content":"            printInvalidMessage(\"event\");"},{"lineNumber":136,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":139,"author":{"gitId":"jhjhajh"},"content":"    public static void addDeadline(String taskToAdd){"},{"lineNumber":140,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":141,"author":{"gitId":"jhjhajh"},"content":"            validateInput(taskToAdd, \"deadline\");"},{"lineNumber":142,"author":{"gitId":"jhjhajh"},"content":"            int splitIndex \u003d taskToAdd.indexOf(\u0027/\u0027);"},{"lineNumber":143,"author":{"gitId":"jhjhajh"},"content":"            String description \u003d taskToAdd.substring(0, splitIndex);"},{"lineNumber":144,"author":{"gitId":"jhjhajh"},"content":"            String dateTime \u003d taskToAdd.substring(splitIndex + 3);"},{"lineNumber":145,"author":{"gitId":"jhjhajh"},"content":"            Deadline d \u003d new Deadline(description, dateTime);"},{"lineNumber":146,"author":{"gitId":"jhjhajh"},"content":"            tasks.add(d);"},{"lineNumber":147,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":148,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(d.getTaskType() + d.getStatusIcon() + \" \" + d.getDescription() + \" (by: \""},{"lineNumber":149,"author":{"gitId":"jhjhajh"},"content":"                    + d.getDateTime() + \")\");"},{"lineNumber":150,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":151,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":152,"author":{"gitId":"jhjhajh"},"content":"        } catch (DukeException | IndexOutOfBoundsException e) {"},{"lineNumber":153,"author":{"gitId":"jhjhajh"},"content":"            printInvalidMessage(\"deadline\");"},{"lineNumber":154,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":157,"author":{"gitId":"jhjhajh"},"content":"    public static void deleteTask(String inputCommand) {"},{"lineNumber":158,"author":{"gitId":"jhjhajh"},"content":"        int taskIndex \u003d Integer.parseInt(inputCommand) - 1;"},{"lineNumber":159,"author":{"gitId":"jhjhajh"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {"},{"lineNumber":160,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Task does not exists!\");"},{"lineNumber":161,"author":{"gitId":"jhjhajh"},"content":"        } else {"},{"lineNumber":162,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":163,"author":{"gitId":"jhjhajh"},"content":"            Task currentTask \u003d tasks.get(taskIndex);"},{"lineNumber":164,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(currentTask.getTaskType() + currentTask.getStatusIcon() + \" \""},{"lineNumber":165,"author":{"gitId":"jhjhajh"},"content":"                    + currentTask.getDescription());"},{"lineNumber":166,"author":{"gitId":"jhjhajh"},"content":"            tasks.remove(taskIndex);"},{"lineNumber":167,"author":{"gitId":"jhjhajh"},"content":"            if (tasks.size() \u003e 1) {"},{"lineNumber":168,"author":{"gitId":"jhjhajh"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":169,"author":{"gitId":"jhjhajh"},"content":"            } else  {"},{"lineNumber":170,"author":{"gitId":"jhjhajh"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" task in the list.\");"},{"lineNumber":171,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":172,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":175,"author":{"gitId":"jhjhajh"},"content":"    public static void loadData() {"},{"lineNumber":176,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":177,"author":{"gitId":"jhjhajh"},"content":"            Path dataFilePath \u003d Paths.get(\"data/\");"},{"lineNumber":178,"author":{"gitId":"jhjhajh"},"content":"            Files.createDirectories(dataFilePath);"},{"lineNumber":179,"author":{"gitId":"jhjhajh"},"content":"            File data \u003d new File (\"data/duke.txt\");"},{"lineNumber":180,"author":{"gitId":"jhjhajh"},"content":"            Scanner readFile \u003d new Scanner (data);"},{"lineNumber":181,"author":{"gitId":"jhjhajh"},"content":"            while (readFile.hasNextLine()) {"},{"lineNumber":182,"author":{"gitId":"jhjhajh"},"content":"                String input \u003d readFile.nextLine();"},{"lineNumber":183,"author":{"gitId":"jhjhajh"},"content":"                //split string by whitespace + \"|\" + whitespace"},{"lineNumber":184,"author":{"gitId":"jhjhajh"},"content":"                String[] taskSplit \u003d input.split(\"\\\\s\\\\|\\\\s\");"},{"lineNumber":185,"author":{"gitId":"jhjhajh"},"content":"                if (taskSplit[0].equals(\"[D]\")) {"},{"lineNumber":186,"author":{"gitId":"jhjhajh"},"content":"                    Deadline d \u003d new Deadline (taskSplit[2], taskSplit[3]);"},{"lineNumber":187,"author":{"gitId":"jhjhajh"},"content":"                    tasks.add(d);"},{"lineNumber":188,"author":{"gitId":"jhjhajh"},"content":"                    if (taskSplit[1].equals(\"1\")) {"},{"lineNumber":189,"author":{"gitId":"jhjhajh"},"content":"                        d.setDone();"},{"lineNumber":190,"author":{"gitId":"jhjhajh"},"content":"                    }"},{"lineNumber":191,"author":{"gitId":"jhjhajh"},"content":"                } else if (taskSplit[0].equals(\"[T]\")) {"},{"lineNumber":192,"author":{"gitId":"jhjhajh"},"content":"                    Todo t \u003d new Todo (taskSplit[2]);"},{"lineNumber":193,"author":{"gitId":"jhjhajh"},"content":"                    tasks.add(t);"},{"lineNumber":194,"author":{"gitId":"jhjhajh"},"content":"                    if (taskSplit[1].equals(\"1\")) {"},{"lineNumber":195,"author":{"gitId":"jhjhajh"},"content":"                        t.setDone();"},{"lineNumber":196,"author":{"gitId":"jhjhajh"},"content":"                    }"},{"lineNumber":197,"author":{"gitId":"jhjhajh"},"content":"                } else if (taskSplit[0].equals(\"[E]\")) {"},{"lineNumber":198,"author":{"gitId":"jhjhajh"},"content":"                    Event e \u003d new Event (taskSplit[2], taskSplit[3]);"},{"lineNumber":199,"author":{"gitId":"jhjhajh"},"content":"                    tasks.add(e);"},{"lineNumber":200,"author":{"gitId":"jhjhajh"},"content":"                    if (taskSplit[1].equals(\"1\")) {"},{"lineNumber":201,"author":{"gitId":"jhjhajh"},"content":"                        e.setDone();"},{"lineNumber":202,"author":{"gitId":"jhjhajh"},"content":"                    }"},{"lineNumber":203,"author":{"gitId":"jhjhajh"},"content":"                }"},{"lineNumber":204,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":205,"author":{"gitId":"jhjhajh"},"content":"            readFile.close();"},{"lineNumber":206,"author":{"gitId":"jhjhajh"},"content":"        } catch (IOException e) {"},{"lineNumber":207,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Error when creating data directory. Please try again.\");"},{"lineNumber":208,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":209,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":211,"author":{"gitId":"jhjhajh"},"content":"    public static boolean saveData() {"},{"lineNumber":212,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":213,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":214,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Saving your data...\");"},{"lineNumber":215,"author":{"gitId":"jhjhajh"},"content":"            FileWriter fileWriter \u003d new FileWriter(\"data/duke.txt\");"},{"lineNumber":216,"author":{"gitId":"jhjhajh"},"content":"            for (int i \u003d 1; i \u003c tasks.size(); i++) {"},{"lineNumber":217,"author":{"gitId":"jhjhajh"},"content":"                Task currentTask \u003d tasks.get(i);"},{"lineNumber":218,"author":{"gitId":"jhjhajh"},"content":"                fileWriter.write(currentTask.getTaskType() + \" | \" + ((currentTask.getIsDone()) ? \"1\" : \"0\") + \" | \""},{"lineNumber":219,"author":{"gitId":"jhjhajh"},"content":"                        + currentTask.getDescription() + ((currentTask.hasDateTime()) ? \" | \""},{"lineNumber":220,"author":{"gitId":"jhjhajh"},"content":"                        + currentTask.getDateTime() : \"\") + \"\\n\" );"},{"lineNumber":221,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":222,"author":{"gitId":"jhjhajh"},"content":"            fileWriter.close();"},{"lineNumber":223,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Data saved\");"},{"lineNumber":224,"author":{"gitId":"jhjhajh"},"content":"            return true;"},{"lineNumber":225,"author":{"gitId":"jhjhajh"},"content":"        } catch (IOException e) {"},{"lineNumber":226,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Error occurred when saving your data. Please try again.\");"},{"lineNumber":227,"author":{"gitId":"jhjhajh"},"content":"            return false;"},{"lineNumber":228,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":229,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":231,"author":{"gitId":"jhjhajh"},"content":"    public static void getInput() {"},{"lineNumber":232,"author":{"gitId":"jhjhajh"},"content":"        while (true) {"},{"lineNumber":233,"author":{"gitId":"jhjhajh"},"content":"            Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":234,"author":{"gitId":"jhjhajh"},"content":"            String inputCommand \u003d sc.nextLine();"},{"lineNumber":235,"author":{"gitId":"jhjhajh"},"content":"            if (inputCommand.equals(\"list\")) {"},{"lineNumber":236,"author":{"gitId":"jhjhajh"},"content":"                showList();"},{"lineNumber":237,"author":{"gitId":"jhjhajh"},"content":"            } else if (inputCommand.equals(\"bye\")) {"},{"lineNumber":238,"author":{"gitId":"jhjhajh"},"content":"                goodbye();"},{"lineNumber":239,"author":{"gitId":"jhjhajh"},"content":"                break;"},{"lineNumber":240,"author":{"gitId":"jhjhajh"},"content":"            } else if (inputCommand.equals(\"save\")) {"},{"lineNumber":241,"author":{"gitId":"jhjhajh"},"content":"                saveData();"},{"lineNumber":242,"author":{"gitId":"jhjhajh"},"content":"            } else {"},{"lineNumber":243,"author":{"gitId":"jhjhajh"},"content":"                try {"},{"lineNumber":244,"author":{"gitId":"jhjhajh"},"content":"                    String taskToHandle \u003d inputCommand.split(\" \", 2)[1];"},{"lineNumber":245,"author":{"gitId":"jhjhajh"},"content":"                    if (inputCommand.startsWith(\"done\")) {"},{"lineNumber":246,"author":{"gitId":"jhjhajh"},"content":"                        markAsDone(taskToHandle);"},{"lineNumber":247,"author":{"gitId":"jhjhajh"},"content":"                    } else if (inputCommand.startsWith(\"todo\")) {"},{"lineNumber":248,"author":{"gitId":"jhjhajh"},"content":"                        addToDo(taskToHandle);"},{"lineNumber":249,"author":{"gitId":"jhjhajh"},"content":"                    } else if (inputCommand.startsWith(\"deadline\")) {"},{"lineNumber":250,"author":{"gitId":"jhjhajh"},"content":"                        addDeadline(taskToHandle);"},{"lineNumber":251,"author":{"gitId":"jhjhajh"},"content":"                    } else if (inputCommand.startsWith(\"event\")) {"},{"lineNumber":252,"author":{"gitId":"jhjhajh"},"content":"                        addEvent(taskToHandle);"},{"lineNumber":253,"author":{"gitId":"jhjhajh"},"content":"                    } else if (inputCommand.startsWith(\"delete\")) {"},{"lineNumber":254,"author":{"gitId":"jhjhajh"},"content":"                        deleteTask(taskToHandle);"},{"lineNumber":255,"author":{"gitId":"jhjhajh"},"content":"                    } else {"},{"lineNumber":256,"author":{"gitId":"jhjhajh"},"content":"                        printInvalidMessage(inputCommand);"},{"lineNumber":257,"author":{"gitId":"jhjhajh"},"content":"                    }"},{"lineNumber":258,"author":{"gitId":"jhjhajh"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":259,"author":{"gitId":"jhjhajh"},"content":"                    printInvalidMessage(inputCommand);"},{"lineNumber":260,"author":{"gitId":"jhjhajh"},"content":"                }"},{"lineNumber":261,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":262,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"_________________________________________________________________________\");"},{"lineNumber":263,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":265,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":266,"author":{"gitId":"jhjhajh"},"content":"    public static void main(String[] args) {"},{"lineNumber":267,"author":{"gitId":"jhjhajh"},"content":"        welcome();"},{"lineNumber":268,"author":{"gitId":"jhjhajh"},"content":"        loadData();"},{"lineNumber":269,"author":{"gitId":"jhjhajh"},"content":"        getInput();"},{"lineNumber":270,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jhjhajh":269,"-":2}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"    protected String dateTime;"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"    public Deadline(String description, String dateTime) {"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"    public String getTaskType() {"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"        return \"[D]\";"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":"    public String getDateTime() {"},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":"        return dateTime;"},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":"    public boolean hasDateTime() {"},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"        return true;"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"}"},{"lineNumber":27,"author":{"gitId":"jhjhajh"},"content":""}],"authorContributionMap":{"jhjhajh":27}},{"path":"src/main/java/duke/tasks/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"public class DukeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":4}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"    protected String dateTime;"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"    public Event (String description, String dateTime) {"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"    public String getTaskType() {"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"        return \"[E]\";"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":"    public String getDateTime() {"},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":"        return dateTime;"},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"    public boolean hasDateTime() {"},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":"        return true;"},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":26}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"    public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"    public String getDescription() {"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"        return description;"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":"    public String getStatusIcon() {"},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":"        return (isDone ? \"[X]\":\"[ ]\");"},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":"    public boolean getIsDone() {"},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"        if (isDone) {"},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":"            return true;"},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":"        else {"},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"            return false;"},{"lineNumber":27,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":30,"author":{"gitId":"jhjhajh"},"content":"    public void setDone(){"},{"lineNumber":31,"author":{"gitId":"jhjhajh"},"content":"        isDone \u003d true;"},{"lineNumber":32,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":34,"author":{"gitId":"jhjhajh"},"content":"    public String getDateTime() {"},{"lineNumber":35,"author":{"gitId":"jhjhajh"},"content":"        return \"\";"},{"lineNumber":36,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":38,"author":{"gitId":"jhjhajh"},"content":"    public String getTaskType() {"},{"lineNumber":39,"author":{"gitId":"jhjhajh"},"content":"        return null;"},{"lineNumber":40,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":42,"author":{"gitId":"jhjhajh"},"content":"    public boolean hasDateTime() {"},{"lineNumber":43,"author":{"gitId":"jhjhajh"},"content":"        return false;"},{"lineNumber":44,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":46,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":46}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"    public String getTaskType() {"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"        return \"[T]\";"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":14}}]
