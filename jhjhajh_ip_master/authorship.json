[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"[D] | 0 | return book | June 6th"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":"[E] | 0 | project meeting | Aug 6th 2-4pm"},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"[T] | 1 | join sports club"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"[T] | 1 | sleep"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"[T] | 0 | sleep again"}],"authorContributionMap":{"jhjhajh":5}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Deadline;"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Event;"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Todo;"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"import duke.exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"import duke.parser.Parser;"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"import duke.storage.Storage;"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"import duke.ui.Ui;"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"//import java.io.PrintWriter;"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"import java.util.ArrayList;"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":"import java.io.File;"},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":"import java.io.FileWriter;"},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":"//import java.io.FileNotFoundException;"},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":"import java.io.IOException;"},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":"public class Duke {"},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"    private Storage storage;"},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":"    private TaskList taskList;"},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"    private Ui ui;"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"    public static void main(String[] args) throws DukeException{"},{"lineNumber":27,"author":{"gitId":"jhjhajh"},"content":"        Ui.printWelcomeMessage();"},{"lineNumber":28,"author":{"gitId":"jhjhajh"},"content":"        Storage.loadData();"},{"lineNumber":29,"author":{"gitId":"jhjhajh"},"content":"        Parser.getInput();"},{"lineNumber":30,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jhjhajh":30,"-":1}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"public class AddDeadlineCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"    public AddDeadlineCommand(String description) {"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"        TaskList.addDeadline(description);"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":12}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"import duke.Duke;"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"public class AddEventCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"    public AddEventCommand(String description) {"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"        TaskList.addEvent(description);"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":13}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"import duke.Duke;"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"public class AddTodoCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"    public AddTodoCommand(String description) {"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"        TaskList.addToDo(description);"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":14}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"public abstract class Command {"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":4}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"public class DeleteCommand extends Command{"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"    public DeleteCommand(String description) {"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"        TaskList.deleteTask(description);"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":12}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"public class ExitCommand extends Command{"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"    public ExitCommand() {"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"        Ui.printGoodbyeMessage();"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":10}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"public class FindCommand extends Command{"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"    public FindCommand(String description) {"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"        TaskList.findListOfCommands(description);"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":9}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"public class ListCommand extends Command{"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"    public ListCommand() {"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"        TaskList.showList();"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":13}},{"path":"src/main/java/duke/command/MarkAsDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"public class MarkAsDoneCommand extends Command{"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"    public MarkAsDoneCommand(String description) {"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"        TaskList.markAsDone(description);"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":12}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"public class DukeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":4}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"import duke.command.*;"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"import duke.exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"    public static final String EXIT_COMMAND \u003d \"bye\";"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"    public static final String LIST_COMMAND \u003d \"list\";"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"    public static final String DONE_COMMAND \u003d \"done\";"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":"    public static final String TASK_TYPE_TODO_COMMAND \u003d \"todo\";"},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":"    public static final String TASK_TYPE_DEADLINE_COMMAND \u003d \"deadline\";"},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":"    public static final String TASK_TYPE_EVENT_COMMAND \u003d \"event\";"},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":"    public static final String DELETE_COMMAND \u003d \"delete\";"},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":"    private static final int DATA_TASK_TYPE_INDEX \u003d 0;"},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"    public static void getInput() throws DukeException {"},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":"        boolean isExit \u003d false;"},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"        while (!isExit) {"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":"            Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"            String inputCommand \u003d sc.nextLine();"},{"lineNumber":27,"author":{"gitId":"jhjhajh"},"content":"            if (inputCommand.startsWith(DONE_COMMAND)) {"},{"lineNumber":28,"author":{"gitId":"jhjhajh"},"content":"                new MarkAsDoneCommand(inputCommand);"},{"lineNumber":29,"author":{"gitId":"jhjhajh"},"content":"            } else if (inputCommand.startsWith(TASK_TYPE_TODO_COMMAND)) {"},{"lineNumber":30,"author":{"gitId":"jhjhajh"},"content":"                new AddTodoCommand(inputCommand);"},{"lineNumber":31,"author":{"gitId":"jhjhajh"},"content":"            } else if (inputCommand.startsWith(TASK_TYPE_DEADLINE_COMMAND)) {"},{"lineNumber":32,"author":{"gitId":"jhjhajh"},"content":"                new AddDeadlineCommand(inputCommand);"},{"lineNumber":33,"author":{"gitId":"jhjhajh"},"content":"            } else if (inputCommand.startsWith(TASK_TYPE_EVENT_COMMAND)) {"},{"lineNumber":34,"author":{"gitId":"jhjhajh"},"content":"                new AddEventCommand(inputCommand);"},{"lineNumber":35,"author":{"gitId":"jhjhajh"},"content":"            } else if (inputCommand.startsWith(DELETE_COMMAND)) {"},{"lineNumber":36,"author":{"gitId":"jhjhajh"},"content":"                new DeleteCommand(inputCommand);"},{"lineNumber":37,"author":{"gitId":"jhjhajh"},"content":"            } else if (inputCommand.equals(LIST_COMMAND)) {"},{"lineNumber":38,"author":{"gitId":"jhjhajh"},"content":"                new ListCommand();"},{"lineNumber":39,"author":{"gitId":"jhjhajh"},"content":"            } else if (inputCommand.equals(EXIT_COMMAND)) {"},{"lineNumber":40,"author":{"gitId":"jhjhajh"},"content":"                Ui.printGoodbyeMessage();"},{"lineNumber":41,"author":{"gitId":"jhjhajh"},"content":"                isExit \u003d true;"},{"lineNumber":42,"author":{"gitId":"jhjhajh"},"content":"            } else if (inputCommand.equals(\"save\")) {"},{"lineNumber":43,"author":{"gitId":"jhjhajh"},"content":"                Storage.saveData();"},{"lineNumber":44,"author":{"gitId":"jhjhajh"},"content":"            } else if (inputCommand.startsWith(\"find\")) {"},{"lineNumber":45,"author":{"gitId":"jhjhajh"},"content":"                new FindCommand(inputCommand);"},{"lineNumber":46,"author":{"gitId":"jhjhajh"},"content":"            } else {"},{"lineNumber":47,"author":{"gitId":"jhjhajh"},"content":"                Ui.printInvalidMessage(inputCommand);"},{"lineNumber":48,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(Ui.LINE);"},{"lineNumber":50,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":52,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jhjhajh"},"content":"}"},{"lineNumber":54,"author":{"gitId":"jhjhajh"},"content":""}],"authorContributionMap":{"jhjhajh":54}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Deadline;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Event;"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Todo;"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"import java.io.File;"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"import java.nio.file.Files;"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"import java.nio.file.Path;"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"import java.nio.file.Paths;"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":"import java.util.ArrayList;"},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":"import java.util.Scanner;"},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":"public class Storage {"},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":"    public static String filePath;"},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":"    public Storage (String input) {"},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"        filePath \u003d input;"},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":"//        load();"},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"    public static void loadData() {"},{"lineNumber":27,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"jhjhajh"},"content":"            Path dataFilePath \u003d Paths.get(\"data/\");"},{"lineNumber":29,"author":{"gitId":"jhjhajh"},"content":"            Files.createDirectories(dataFilePath);"},{"lineNumber":30,"author":{"gitId":"jhjhajh"},"content":"            File data \u003d new File(\"data/duke.txt\");"},{"lineNumber":31,"author":{"gitId":"jhjhajh"},"content":"            Scanner readFile \u003d new Scanner(data);"},{"lineNumber":32,"author":{"gitId":"jhjhajh"},"content":"            while (readFile.hasNextLine()) {"},{"lineNumber":33,"author":{"gitId":"jhjhajh"},"content":"                String input \u003d readFile.nextLine();"},{"lineNumber":34,"author":{"gitId":"jhjhajh"},"content":"                //split string by whitespace + \"|\" + whitespace"},{"lineNumber":35,"author":{"gitId":"jhjhajh"},"content":"                String[] taskSplit \u003d input.split(\"\\\\s\\\\|\\\\s\");"},{"lineNumber":36,"author":{"gitId":"jhjhajh"},"content":"                Task t \u003d new Task(\"\");"},{"lineNumber":37,"author":{"gitId":"jhjhajh"},"content":"                if (taskSplit[0].equals(\"[D]\")) {"},{"lineNumber":38,"author":{"gitId":"jhjhajh"},"content":"                    t \u003d new Deadline(taskSplit[2], taskSplit[3]);"},{"lineNumber":39,"author":{"gitId":"jhjhajh"},"content":"                } else if (taskSplit[0].equals(\"[E]\")) {"},{"lineNumber":40,"author":{"gitId":"jhjhajh"},"content":"                    t \u003d new Event(taskSplit[2], taskSplit[3]);"},{"lineNumber":41,"author":{"gitId":"jhjhajh"},"content":"                } else if (taskSplit[0].equals(\"[T]\")) {"},{"lineNumber":42,"author":{"gitId":"jhjhajh"},"content":"                    t \u003d new Todo(taskSplit[2]);"},{"lineNumber":43,"author":{"gitId":"jhjhajh"},"content":"                }"},{"lineNumber":44,"author":{"gitId":"jhjhajh"},"content":"                TaskList.tasks.add(t);"},{"lineNumber":45,"author":{"gitId":"jhjhajh"},"content":"                if (taskSplit[1].equals(\"1\")) {"},{"lineNumber":46,"author":{"gitId":"jhjhajh"},"content":"                    t.setDone();"},{"lineNumber":47,"author":{"gitId":"jhjhajh"},"content":"                }"},{"lineNumber":48,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"jhjhajh"},"content":"            readFile.close();"},{"lineNumber":50,"author":{"gitId":"jhjhajh"},"content":"        } catch (IOException e) {"},{"lineNumber":51,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Error when creating data directory. Please try again.\");"},{"lineNumber":52,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":54,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":55,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"jhjhajh"},"content":"//    public static void loadData() {"},{"lineNumber":57,"author":{"gitId":"jhjhajh"},"content":"//        try {"},{"lineNumber":58,"author":{"gitId":"jhjhajh"},"content":"//            createFile();"},{"lineNumber":59,"author":{"gitId":"jhjhajh"},"content":"//        }"},{"lineNumber":60,"author":{"gitId":"jhjhajh"},"content":"//        catch(IllegalStateException e) {"},{"lineNumber":61,"author":{"gitId":"jhjhajh"},"content":"//            System.out.println(\"Error in loading data! Please try again!\");"},{"lineNumber":62,"author":{"gitId":"jhjhajh"},"content":"//        }"},{"lineNumber":63,"author":{"gitId":"jhjhajh"},"content":"//    }"},{"lineNumber":64,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":65,"author":{"gitId":"jhjhajh"},"content":"    public static boolean saveData() {"},{"lineNumber":66,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Saving your data...\");"},{"lineNumber":68,"author":{"gitId":"jhjhajh"},"content":"            File file \u003d new File(\"duke.txt\");"},{"lineNumber":69,"author":{"gitId":"jhjhajh"},"content":"            FileWriter fileWriter \u003d new FileWriter(\"data/duke.txt\");"},{"lineNumber":70,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":71,"author":{"gitId":"jhjhajh"},"content":"            for (int i \u003d 0; i \u003c  TaskList.tasks.size(); i++) {"},{"lineNumber":72,"author":{"gitId":"jhjhajh"},"content":"                Task currentTask \u003d  TaskList.tasks.get(i);"},{"lineNumber":73,"author":{"gitId":"jhjhajh"},"content":"                fileWriter.write(currentTask.getTaskType() + \" | \" + ((currentTask.getIsDone()) ? \"1\" : \"0\") + \" | \""},{"lineNumber":74,"author":{"gitId":"jhjhajh"},"content":"                        + currentTask.getDescription() + ((currentTask.hasDateTime()) ? \" | \""},{"lineNumber":75,"author":{"gitId":"jhjhajh"},"content":"                        + currentTask.getDateTime() : \"\") + \"\\n\");"},{"lineNumber":76,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"jhjhajh"},"content":"            fileWriter.close();"},{"lineNumber":78,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Data saved\");"},{"lineNumber":79,"author":{"gitId":"jhjhajh"},"content":"            return true;"},{"lineNumber":80,"author":{"gitId":"jhjhajh"},"content":"        } catch (IOException e) {"},{"lineNumber":81,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Error occurred when saving your data. Please try again.\");"},{"lineNumber":82,"author":{"gitId":"jhjhajh"},"content":"            return false;"},{"lineNumber":83,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":85}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.tasklist;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Deadline;"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Event;"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Task;"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Todo;"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"import duke.ui.Ui;"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"import java.io.IOException;"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":"import java.util.ArrayList;"},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":"import java.util.stream.Collectors;"},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":"public class TaskList {"},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"    private Storage storage;"},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"    public TaskList(Storage input) {"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"        storage \u003d input;"},{"lineNumber":27,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":29,"author":{"gitId":"jhjhajh"},"content":"    public static void validateInput(String input, String type) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"jhjhajh"},"content":"            if (type.equals(\"done\") \u0026\u0026 (!(input.strip()).matches(\"[-+]?\\\\\\\\d*\\\\\\\\.?\\\\\\\\d+\\n\"))"},{"lineNumber":32,"author":{"gitId":"jhjhajh"},"content":"                    || (type.equals(\"todo\") \u0026\u0026 (input.strip().length() \u003c\u003d 0))"},{"lineNumber":33,"author":{"gitId":"jhjhajh"},"content":"                    || (!input.contains(\"/\") \u0026\u0026 (type.equals(\"deadline\") || type.equals(\"event\")))) {"},{"lineNumber":34,"author":{"gitId":"jhjhajh"},"content":"                throw new DukeException();"},{"lineNumber":35,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"jhjhajh"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":37,"author":{"gitId":"jhjhajh"},"content":"            Ui.printInvalidMessage(type);"},{"lineNumber":38,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":41,"author":{"gitId":"jhjhajh"},"content":"    public static void showList() {"},{"lineNumber":42,"author":{"gitId":"jhjhajh"},"content":"        if (tasks.size() \u003e 0) {"},{"lineNumber":43,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":44,"author":{"gitId":"jhjhajh"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":45,"author":{"gitId":"jhjhajh"},"content":"                Task currentTask \u003d tasks.get(i);"},{"lineNumber":46,"author":{"gitId":"jhjhajh"},"content":"                System.out.print(i + 1 + \". \");"},{"lineNumber":47,"author":{"gitId":"jhjhajh"},"content":"                Ui.printTask(currentTask);"},{"lineNumber":48,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"jhjhajh"},"content":"        } else {"},{"lineNumber":50,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Please input a task.\");"},{"lineNumber":51,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":54,"author":{"gitId":"jhjhajh"},"content":"    public static void markAsDone(String inputCommand) {"},{"lineNumber":55,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":56,"author":{"gitId":"jhjhajh"},"content":"            String taskDone \u003d inputCommand.split(\" \", 2)[1];"},{"lineNumber":57,"author":{"gitId":"jhjhajh"},"content":"            int taskIndex \u003d Integer.parseInt(taskDone) - 1;"},{"lineNumber":58,"author":{"gitId":"jhjhajh"},"content":"            if (taskIndex \u003e\u003d tasks.size() || taskIndex \u003c 0) {"},{"lineNumber":59,"author":{"gitId":"jhjhajh"},"content":"                System.out.println(\"You have not added task \" + taskIndex + \" yet! Please try again.\");"},{"lineNumber":60,"author":{"gitId":"jhjhajh"},"content":"            } else if (tasks.get(taskIndex).getIsDone() \u003d\u003d true) {"},{"lineNumber":61,"author":{"gitId":"jhjhajh"},"content":"                System.out.println(\"Task have already been set as done before. Please try to complete other tasks.\");"},{"lineNumber":62,"author":{"gitId":"jhjhajh"},"content":"            } else {"},{"lineNumber":63,"author":{"gitId":"jhjhajh"},"content":"                tasks.get(taskIndex).setDone();"},{"lineNumber":64,"author":{"gitId":"jhjhajh"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":65,"author":{"gitId":"jhjhajh"},"content":"                Task currentTask \u003d tasks.get(taskIndex);"},{"lineNumber":66,"author":{"gitId":"jhjhajh"},"content":"                Ui.printTask(currentTask);"},{"lineNumber":67,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"jhjhajh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":69,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(e + \"invalid! Please try again\");"},{"lineNumber":70,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":73,"author":{"gitId":"jhjhajh"},"content":"    public static void addToDo(String inputCommand) {"},{"lineNumber":74,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":75,"author":{"gitId":"jhjhajh"},"content":"            String taskToAdd \u003d inputCommand.split(\" \", 2)[1];"},{"lineNumber":76,"author":{"gitId":"jhjhajh"},"content":"            validateInput(taskToAdd, \"todo\");"},{"lineNumber":77,"author":{"gitId":"jhjhajh"},"content":"            Todo t \u003d new Todo(taskToAdd);"},{"lineNumber":78,"author":{"gitId":"jhjhajh"},"content":"            tasks.add(t);"},{"lineNumber":79,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":80,"author":{"gitId":"jhjhajh"},"content":"            Ui.printTask(t);"},{"lineNumber":81,"author":{"gitId":"jhjhajh"},"content":"            Ui.printTaskSize();"},{"lineNumber":82,"author":{"gitId":"jhjhajh"},"content":"        } catch (DukeException | IndexOutOfBoundsException e) {"},{"lineNumber":83,"author":{"gitId":"jhjhajh"},"content":"            Ui.printInvalidMessage(\"todo\");"},{"lineNumber":84,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":87,"author":{"gitId":"jhjhajh"},"content":"    public static void addEvent(String inputCommand) {"},{"lineNumber":88,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":89,"author":{"gitId":"jhjhajh"},"content":"            String taskToAdd \u003d inputCommand.split(\" \", 2)[1];"},{"lineNumber":90,"author":{"gitId":"jhjhajh"},"content":"            validateInput(taskToAdd, \"event\");"},{"lineNumber":91,"author":{"gitId":"jhjhajh"},"content":"            int splitIndex \u003d taskToAdd.indexOf(\u0027/\u0027);"},{"lineNumber":92,"author":{"gitId":"jhjhajh"},"content":"            String description \u003d taskToAdd.substring(0, splitIndex);"},{"lineNumber":93,"author":{"gitId":"jhjhajh"},"content":"            String dateTime \u003d taskToAdd.substring(splitIndex + 3);"},{"lineNumber":94,"author":{"gitId":"jhjhajh"},"content":"            Event e \u003d new Event(description, dateTime);"},{"lineNumber":95,"author":{"gitId":"jhjhajh"},"content":"            tasks.add(e);"},{"lineNumber":96,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":97,"author":{"gitId":"jhjhajh"},"content":"            Ui.printTask(e);"},{"lineNumber":98,"author":{"gitId":"jhjhajh"},"content":"            Ui.printTaskSize();"},{"lineNumber":99,"author":{"gitId":"jhjhajh"},"content":"        } catch (DukeException | IndexOutOfBoundsException e) {"},{"lineNumber":100,"author":{"gitId":"jhjhajh"},"content":"            Ui.printInvalidMessage(\"event\");"},{"lineNumber":101,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":104,"author":{"gitId":"jhjhajh"},"content":"    public static void addDeadline(String inputCommand) {"},{"lineNumber":105,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":106,"author":{"gitId":"jhjhajh"},"content":"            String taskToAdd \u003d inputCommand.split(\" \", 2)[1];"},{"lineNumber":107,"author":{"gitId":"jhjhajh"},"content":"            validateInput(taskToAdd, \"deadline\");"},{"lineNumber":108,"author":{"gitId":"jhjhajh"},"content":"            int splitIndex \u003d taskToAdd.indexOf(\u0027/\u0027);"},{"lineNumber":109,"author":{"gitId":"jhjhajh"},"content":"            String description \u003d taskToAdd.substring(0, splitIndex);"},{"lineNumber":110,"author":{"gitId":"jhjhajh"},"content":"            String dateTime \u003d taskToAdd.substring(splitIndex + 3);"},{"lineNumber":111,"author":{"gitId":"jhjhajh"},"content":"            Deadline d \u003d new Deadline(description, dateTime);"},{"lineNumber":112,"author":{"gitId":"jhjhajh"},"content":"            tasks.add(d);"},{"lineNumber":113,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":114,"author":{"gitId":"jhjhajh"},"content":"            Ui. printTask(d);"},{"lineNumber":115,"author":{"gitId":"jhjhajh"},"content":"            Ui.printTaskSize();"},{"lineNumber":116,"author":{"gitId":"jhjhajh"},"content":"        } catch (DukeException | IndexOutOfBoundsException e) {"},{"lineNumber":117,"author":{"gitId":"jhjhajh"},"content":"            Ui.printInvalidMessage(\"deadline\");"},{"lineNumber":118,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":121,"author":{"gitId":"jhjhajh"},"content":"    public static void deleteTask(String inputCommand) {"},{"lineNumber":122,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":123,"author":{"gitId":"jhjhajh"},"content":"            String taskToHandle \u003d inputCommand.split(\" \", 2)[1];"},{"lineNumber":124,"author":{"gitId":"jhjhajh"},"content":"            int taskIndex \u003d Integer.parseInt(taskToHandle) - 1;"},{"lineNumber":125,"author":{"gitId":"jhjhajh"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {"},{"lineNumber":126,"author":{"gitId":"jhjhajh"},"content":"                System.out.println(\"Task does not exists!\");"},{"lineNumber":127,"author":{"gitId":"jhjhajh"},"content":"            } else {"},{"lineNumber":128,"author":{"gitId":"jhjhajh"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":129,"author":{"gitId":"jhjhajh"},"content":"                Task currentTask \u003d tasks.get(taskIndex);"},{"lineNumber":130,"author":{"gitId":"jhjhajh"},"content":"                Ui.printTask(currentTask);"},{"lineNumber":131,"author":{"gitId":"jhjhajh"},"content":"                tasks.remove(taskIndex);"},{"lineNumber":132,"author":{"gitId":"jhjhajh"},"content":"                Ui.printTaskSize();"},{"lineNumber":133,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":134,"author":{"gitId":"jhjhajh"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":135,"author":{"gitId":"jhjhajh"},"content":"            Ui.printInvalidMessage(\"delete\");"},{"lineNumber":136,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":139,"author":{"gitId":"jhjhajh"},"content":"    public static void findListOfCommands(String inputCommand) {"},{"lineNumber":140,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":141,"author":{"gitId":"jhjhajh"},"content":"            String word \u003d inputCommand.substring(5);"},{"lineNumber":142,"author":{"gitId":"jhjhajh"},"content":"            ArrayList\u003cTask\u003e foundTasks \u003d findInput(word);"},{"lineNumber":143,"author":{"gitId":"jhjhajh"},"content":"            Ui.printFoundTasks(foundTasks);"},{"lineNumber":144,"author":{"gitId":"jhjhajh"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":145,"author":{"gitId":"jhjhajh"},"content":"            Ui.printInvalidMessage(\"find\");"},{"lineNumber":146,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"jhjhajh"},"content":"    public static ArrayList\u003cTask\u003e findInput (String word) {"},{"lineNumber":149,"author":{"gitId":"jhjhajh"},"content":"        return (ArrayList\u003cTask\u003e) tasks.stream()"},{"lineNumber":150,"author":{"gitId":"jhjhajh"},"content":"                .filter(t -\u003e t.getDescription().toLowerCase().contains(word))"},{"lineNumber":151,"author":{"gitId":"jhjhajh"},"content":"                    .collect(Collectors.toList());"},{"lineNumber":152,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":153}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"    protected String dateTime;"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"    public Deadline(String description, String dateTime) {"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"    public String getTaskType() {"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"        return \"[D]\";"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":"    public String getDateTime() {"},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":"        return dateTime;"},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":"    public boolean hasDateTime() {"},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"        return true;"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"}"},{"lineNumber":27,"author":{"gitId":"jhjhajh"},"content":""}],"authorContributionMap":{"jhjhajh":27}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"    protected String dateTime;"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"    public Event (String description, String dateTime) {"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"    public String getTaskType() {"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"        return \"[E]\";"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":"    public String getDateTime() {"},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":"        return dateTime;"},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"    public boolean hasDateTime() {"},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":"        return true;"},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":26}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"    public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"    public String getDescription() {"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"        return description;"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":"    public String getStatusIcon() {"},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":"        return (isDone ? \"[X]\":\"[ ]\");"},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":"    public boolean getIsDone() {"},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"        if (isDone) {"},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":"            return true;"},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":"        else {"},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"            return false;"},{"lineNumber":27,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":30,"author":{"gitId":"jhjhajh"},"content":"    public void setDone(){"},{"lineNumber":31,"author":{"gitId":"jhjhajh"},"content":"        isDone \u003d true;"},{"lineNumber":32,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":34,"author":{"gitId":"jhjhajh"},"content":"    public String getDateTime() {"},{"lineNumber":35,"author":{"gitId":"jhjhajh"},"content":"        return \"\";"},{"lineNumber":36,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":38,"author":{"gitId":"jhjhajh"},"content":"    public String getTaskType() {"},{"lineNumber":39,"author":{"gitId":"jhjhajh"},"content":"        return null;"},{"lineNumber":40,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":42,"author":{"gitId":"jhjhajh"},"content":"    public boolean hasDateTime() {"},{"lineNumber":43,"author":{"gitId":"jhjhajh"},"content":"        return false;"},{"lineNumber":44,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":46,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":46}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"    public String getTaskType() {"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"        return \"[T]\";"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":14}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"    public static final String WELCOME_MESSAGE \u003d \"\\n\" +"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"            \"██╗░░██╗███████╗██╗░░░░░██╗░░░░░░█████╗░\\n\" +"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"            \"██║░░██║██╔════╝██║░░░░░██║░░░░░██╔══██╗\\n\" +"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"            \"███████║█████╗░░██║░░░░░██║░░░░░██║░░██║\\n\" +"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"            \"██╔══██║██╔══╝░░██║░░░░░██║░░░░░██║░░██║\\n\" +"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":"            \"██║░░██║███████╗███████╗███████╗╚█████╔╝\\n\" +"},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":"            \"╚═╝░░╚═╝╚══════╝╚══════╝╚══════╝░╚════╝░\\n\" + \"from\\n\" + \"\\n\" +"},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":"            \"██████╗░██╗░░░██╗██╗░░██╗███████╗\\n\" +"},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":"            \"██╔══██╗██║░░░██║██║░██╔╝██╔════╝\\n\" +"},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":"            \"██║░░██║██║░░░██║█████═╝░█████╗░░\\n\" +"},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":"            \"██║░░██║██║░░░██║██╔═██╗░██╔══╝░░\\n\" +"},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":"            \"██████╔╝╚██████╔╝██║░╚██╗███████╗\\n\" +"},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"            \"╚═════╝░░╚═════╝░╚═╝░░╚═╝╚══════╝\\n\";"},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"    public static final String GOODBYE_MESSAGE \u003d \"\\n\" +"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":"            \"░██████╗░░█████╗░░█████╗░██████╗░██████╗░██╗░░░██╗███████╗\\n\" +"},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"            \"██╔════╝░██╔══██╗██╔══██╗██╔══██╗██╔══██╗╚██╗░██╔╝██╔════╝\\n\" +"},{"lineNumber":27,"author":{"gitId":"jhjhajh"},"content":"            \"██║░░██╗░██║░░██║██║░░██║██║░░██║██████╦╝░╚████╔╝░█████╗░░\\n\" +"},{"lineNumber":28,"author":{"gitId":"jhjhajh"},"content":"            \"██║░░╚██╗██║░░██║██║░░██║██║░░██║██╔══██╗░░╚██╔╝░░██╔══╝░░\\n\" +"},{"lineNumber":29,"author":{"gitId":"jhjhajh"},"content":"            \"╚██████╔╝╚█████╔╝╚█████╔╝██████╔╝██████╦╝░░░██║░░░███████╗\\n\" +"},{"lineNumber":30,"author":{"gitId":"jhjhajh"},"content":"            \"░╚═════╝░░╚════╝░░╚════╝░╚═════╝░╚═════╝░░░░╚═╝░░░╚══════╝\\n\" + \"Hope to see you again soon!\";"},{"lineNumber":31,"author":{"gitId":"jhjhajh"},"content":"    public static final String LINE \u003d \"_________________________________________________________________________\";"},{"lineNumber":32,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":33,"author":{"gitId":"jhjhajh"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":35,"author":{"gitId":"jhjhajh"},"content":"    public static void printGoodbyeMessage() {"},{"lineNumber":36,"author":{"gitId":"jhjhajh"},"content":"        System.out.println(GOODBYE_MESSAGE);"},{"lineNumber":37,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":39,"author":{"gitId":"jhjhajh"},"content":"    public static void printWelcomeMessage() {"},{"lineNumber":40,"author":{"gitId":"jhjhajh"},"content":"        System.out.println(WELCOME_MESSAGE);"},{"lineNumber":41,"author":{"gitId":"jhjhajh"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"},{"lineNumber":42,"author":{"gitId":"jhjhajh"},"content":"        System.out.println(LINE);"},{"lineNumber":43,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":45,"author":{"gitId":"jhjhajh"},"content":"    public static void printInvalidMessage(String type) {"},{"lineNumber":46,"author":{"gitId":"jhjhajh"},"content":"        System.out.println(\"\\uD83D\\uDE1E OOPS! \" + type + \" is not valid, please try again!\");"},{"lineNumber":47,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":49,"author":{"gitId":"jhjhajh"},"content":"    public static void printTask(Task taskToPrint) {"},{"lineNumber":50,"author":{"gitId":"jhjhajh"},"content":"        System.out.print(taskToPrint.getTaskType() + taskToPrint.getStatusIcon() + \" \" + taskToPrint.getDescription());"},{"lineNumber":51,"author":{"gitId":"jhjhajh"},"content":"        if (taskToPrint.getTaskType().equals(\"[D]\")) {"},{"lineNumber":52,"author":{"gitId":"jhjhajh"},"content":"            System.out.print(\" (by:\" + taskToPrint.getDateTime() + \")\");"},{"lineNumber":53,"author":{"gitId":"jhjhajh"},"content":"        } else if (taskToPrint.getTaskType().equals(\"[E]\")) {"},{"lineNumber":54,"author":{"gitId":"jhjhajh"},"content":"            System.out.print(\" (at:\" + taskToPrint.getDateTime() + \")\");"},{"lineNumber":55,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"jhjhajh"},"content":"        System.out.print(\"\\n\");"},{"lineNumber":57,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":59,"author":{"gitId":"jhjhajh"},"content":"    public static void printTaskSize() {"},{"lineNumber":60,"author":{"gitId":"jhjhajh"},"content":"        if (TaskList.tasks.size() \u003e 1) {"},{"lineNumber":61,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Now you have \" + TaskList.tasks.size() + \" tasks in the list.\");"},{"lineNumber":62,"author":{"gitId":"jhjhajh"},"content":"        } else if (TaskList.tasks.size() \u003d\u003d 1){"},{"lineNumber":63,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Now you have \" + TaskList.tasks.size() + \" task in the list.\");"},{"lineNumber":64,"author":{"gitId":"jhjhajh"},"content":"        } else {"},{"lineNumber":65,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"You don\u0027t have any tasks in the list\");"},{"lineNumber":66,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":69,"author":{"gitId":"jhjhajh"},"content":"    public static void printFoundTasks(ArrayList\u003cTask\u003e foundTasks) {"},{"lineNumber":70,"author":{"gitId":"jhjhajh"},"content":"        if (foundTasks.isEmpty()) {"},{"lineNumber":71,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"\\uD83D\\uDE1E No tasks found with given keyword. Please try again\");"},{"lineNumber":72,"author":{"gitId":"jhjhajh"},"content":"            return;"},{"lineNumber":73,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"jhjhajh"},"content":"        System.out.println(\"Here are the matching tasks in your list!\");"},{"lineNumber":75,"author":{"gitId":"jhjhajh"},"content":"        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {"},{"lineNumber":76,"author":{"gitId":"jhjhajh"},"content":"            System.out.print((i+1) + \". \");"},{"lineNumber":77,"author":{"gitId":"jhjhajh"},"content":"            Task currentTask \u003d foundTasks.get(i);"},{"lineNumber":78,"author":{"gitId":"jhjhajh"},"content":"            printTask(currentTask);"},{"lineNumber":79,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":80,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"jhjhajh"},"content":"//        System.out.println(LINE);"},{"lineNumber":82,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":83}}]
