[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"[D] | 0 | return book | June 6th"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":"[E] | 0 | project meeting | Aug 6th 2-4pm"},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"[T] | 1 | join sports club"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"[T] | 1 | sleep"}],"authorContributionMap":{"jhjhajh":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"Duke is a **task scheduler to help you manage your tasks, to be used via a Command Line Interface** (CLI). If you can"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"type fast, Duke allows you to manage your tasks faster than traditional GUI apps."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"## Content Page"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"* [Quick start](#1-quick-start)"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"* [Features](#2-features)"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"    * [Adding a task](#21-add-task)"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"        * todo: `todo`"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"        * event: `event`"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"        * deadline: `deadline`"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"    * [Listing](#22-list): `list`"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":"    * [Marking a task as done](#23-marking-task-as-done): `done`"},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":"    * [Deleting a task](#24-deleting-a-task): `delete`"},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":"    * [Searching for tasks](#25-searching-for-tasks): `find`"},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":"    * [Saving tasks](#26-saving-tasks): `save`"},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":"    * [Exit programme](#27-exiting-the-programme): `bye`"},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":"* [Command Summary](#3-command-summary)"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"## 1 Quick start"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"1. Ensure you have Java 11 or above installed on your computer."},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":"2. Download the latest `ip.jar` file."},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"3. Copy the file to your desired home folder."},{"lineNumber":27,"author":{"gitId":"jhjhajh"},"content":"4. In command prompt, use `cd` to navigate to the home folder."},{"lineNumber":28,"author":{"gitId":"jhjhajh"},"content":"5. Run the `.jar` file in command prompt by entering `java -jar ip.jar`"},{"lineNumber":29,"author":{"gitId":"jhjhajh"},"content":"6. Enter `help` to view available user commands."},{"lineNumber":30,"author":{"gitId":"jhjhajh"},"content":"7. Refer to the guide below for details of each command."},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"jhjhajh"},"content":"## 2 Features"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"jhjhajh"},"content":"### 2.1 Add Task"},{"lineNumber":35,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":36,"author":{"gitId":"jhjhajh"},"content":"Add 3 different kinds of tasks to the list."},{"lineNumber":37,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":38,"author":{"gitId":"jhjhajh"},"content":"### Usage:"},{"lineNumber":39,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":40,"author":{"gitId":"jhjhajh"},"content":"### `todo` - Add todo task"},{"lineNumber":41,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":42,"author":{"gitId":"jhjhajh"},"content":"Add a todo task to the task list."},{"lineNumber":43,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":44,"author":{"gitId":"jhjhajh"},"content":"Example of usage:"},{"lineNumber":45,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":46,"author":{"gitId":"jhjhajh"},"content":"`todo borrow book`"},{"lineNumber":47,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":48,"author":{"gitId":"jhjhajh"},"content":"Expected outcome:"},{"lineNumber":49,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":50,"author":{"gitId":"jhjhajh"},"content":"```"},{"lineNumber":51,"author":{"gitId":"jhjhajh"},"content":"    ____________________________________________________________   "},{"lineNumber":52,"author":{"gitId":"jhjhajh"},"content":"    Got it. I\u0027ve added this task:  "},{"lineNumber":53,"author":{"gitId":"jhjhajh"},"content":"    [T][X] borrow book  "},{"lineNumber":54,"author":{"gitId":"jhjhajh"},"content":"    Now you have 1 task in the list.  "},{"lineNumber":55,"author":{"gitId":"jhjhajh"},"content":"    ____________________________________________________________"},{"lineNumber":56,"author":{"gitId":"jhjhajh"},"content":"```"},{"lineNumber":57,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":58,"author":{"gitId":"jhjhajh"},"content":"### `event` - Add event task"},{"lineNumber":59,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":60,"author":{"gitId":"jhjhajh"},"content":"Add an event task in the task list."},{"lineNumber":61,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":62,"author":{"gitId":"jhjhajh"},"content":"Example of usage:"},{"lineNumber":63,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":64,"author":{"gitId":"jhjhajh"},"content":"`event read book /at home`"},{"lineNumber":65,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":66,"author":{"gitId":"jhjhajh"},"content":"Expected outcome:"},{"lineNumber":67,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":68,"author":{"gitId":"jhjhajh"},"content":"```"},{"lineNumber":69,"author":{"gitId":"jhjhajh"},"content":"    ____________________________________________________________   "},{"lineNumber":70,"author":{"gitId":"jhjhajh"},"content":"    Got it. I\u0027ve added this task:  "},{"lineNumber":71,"author":{"gitId":"jhjhajh"},"content":"    [E][X] read book (at: home)  "},{"lineNumber":72,"author":{"gitId":"jhjhajh"},"content":"    Now you have 2 tasks in the list.  "},{"lineNumber":73,"author":{"gitId":"jhjhajh"},"content":"    ____________________________________________________________"},{"lineNumber":74,"author":{"gitId":"jhjhajh"},"content":"```"},{"lineNumber":75,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":76,"author":{"gitId":"jhjhajh"},"content":"### `deadline` - Add deadline task"},{"lineNumber":77,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":78,"author":{"gitId":"jhjhajh"},"content":"Add a deadline task in the task list."},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"jhjhajh"},"content":"`deadline return book /by next Tuesday`"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"jhjhajh"},"content":"```"},{"lineNumber":87,"author":{"gitId":"jhjhajh"},"content":"    ____________________________________________________________   "},{"lineNumber":88,"author":{"gitId":"jhjhajh"},"content":"    Got it. I\u0027ve added this task:  "},{"lineNumber":89,"author":{"gitId":"jhjhajh"},"content":"    [D][X] return book (by: next Tuesday)  "},{"lineNumber":90,"author":{"gitId":"jhjhajh"},"content":"    Now you have 3 tasks in the list.  "},{"lineNumber":91,"author":{"gitId":"jhjhajh"},"content":"    ____________________________________________________________"},{"lineNumber":92,"author":{"gitId":"jhjhajh"},"content":"```"},{"lineNumber":93,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":94,"author":{"gitId":"jhjhajh"},"content":"### 2.2 List"},{"lineNumber":95,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":96,"author":{"gitId":"jhjhajh"},"content":"Show all existing tasks from the list."},{"lineNumber":97,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":98,"author":{"gitId":"jhjhajh"},"content":"### Usage:"},{"lineNumber":99,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":100,"author":{"gitId":"jhjhajh"},"content":"### `list` - View list of tasks"},{"lineNumber":101,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":102,"author":{"gitId":"jhjhajh"},"content":"Example of usage:"},{"lineNumber":103,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":104,"author":{"gitId":"jhjhajh"},"content":"`list`"},{"lineNumber":105,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":106,"author":{"gitId":"jhjhajh"},"content":"Expected outcome:"},{"lineNumber":107,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":108,"author":{"gitId":"jhjhajh"},"content":"```"},{"lineNumber":109,"author":{"gitId":"jhjhajh"},"content":"    ____________________________________________________________ "},{"lineNumber":110,"author":{"gitId":"jhjhajh"},"content":"    Here are the tasks in your list:"},{"lineNumber":111,"author":{"gitId":"jhjhajh"},"content":"    1.[T][X] borrow book   "},{"lineNumber":112,"author":{"gitId":"jhjhajh"},"content":"    2.[D][X] return book (by: Aug 11 2000)   "},{"lineNumber":113,"author":{"gitId":"jhjhajh"},"content":"    3.[E][X] read book (at: Aug 3 2000)   "},{"lineNumber":114,"author":{"gitId":"jhjhajh"},"content":"    ____________________________________________________________    "},{"lineNumber":115,"author":{"gitId":"jhjhajh"},"content":"```"},{"lineNumber":116,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":117,"author":{"gitId":"jhjhajh"},"content":"### 2.3 Marking Task as Done"},{"lineNumber":118,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":119,"author":{"gitId":"jhjhajh"},"content":"Mark a task in the task list as done based on the index of the task."},{"lineNumber":120,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":121,"author":{"gitId":"jhjhajh"},"content":"### Usage:"},{"lineNumber":122,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":123,"author":{"gitId":"jhjhajh"},"content":"### `done` - Mark the task as done"},{"lineNumber":124,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":125,"author":{"gitId":"jhjhajh"},"content":"Example of usage:"},{"lineNumber":126,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":127,"author":{"gitId":"jhjhajh"},"content":"`done 1`"},{"lineNumber":128,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":129,"author":{"gitId":"jhjhajh"},"content":"Expected outcome:"},{"lineNumber":130,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":131,"author":{"gitId":"jhjhajh"},"content":"```"},{"lineNumber":132,"author":{"gitId":"jhjhajh"},"content":"    ____________________________________________________________   "},{"lineNumber":133,"author":{"gitId":"jhjhajh"},"content":"    Nice! I\u0027ve marked this task as done:  "},{"lineNumber":134,"author":{"gitId":"jhjhajh"},"content":"    [T][X] borrow book  "},{"lineNumber":135,"author":{"gitId":"jhjhajh"},"content":"    ____________________________________________________________   "},{"lineNumber":136,"author":{"gitId":"jhjhajh"},"content":"```"},{"lineNumber":137,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":138,"author":{"gitId":"jhjhajh"},"content":"### 2.4 Deleting a Task"},{"lineNumber":139,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":140,"author":{"gitId":"jhjhajh"},"content":"Deletes a task in the task list based on the index of the task."},{"lineNumber":141,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":142,"author":{"gitId":"jhjhajh"},"content":"### Usage:"},{"lineNumber":143,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":144,"author":{"gitId":"jhjhajh"},"content":"Example of usage:"},{"lineNumber":145,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":146,"author":{"gitId":"jhjhajh"},"content":"`delete 1`"},{"lineNumber":147,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":148,"author":{"gitId":"jhjhajh"},"content":"Expected outcome:"},{"lineNumber":149,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":150,"author":{"gitId":"jhjhajh"},"content":"```"},{"lineNumber":151,"author":{"gitId":"jhjhajh"},"content":"    ____________________________________________________________   "},{"lineNumber":152,"author":{"gitId":"jhjhajh"},"content":"    Noted. I\u0027ve removed this task:"},{"lineNumber":153,"author":{"gitId":"jhjhajh"},"content":"    [D][X] borrow book"},{"lineNumber":154,"author":{"gitId":"jhjhajh"},"content":"    Now you have 2 tasks in the list."},{"lineNumber":155,"author":{"gitId":"jhjhajh"},"content":"    ____________________________________________________________   "},{"lineNumber":156,"author":{"gitId":"jhjhajh"},"content":"```"},{"lineNumber":157,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":158,"author":{"gitId":"jhjhajh"},"content":"### 2.5 Searching for tasks"},{"lineNumber":159,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":160,"author":{"gitId":"jhjhajh"},"content":"Find a list of tasks in the task list that containing the keyword given."},{"lineNumber":161,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":162,"author":{"gitId":"jhjhajh"},"content":"### Usage:"},{"lineNumber":163,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":164,"author":{"gitId":"jhjhajh"},"content":"### `find` - Find tasks by keyword"},{"lineNumber":165,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":166,"author":{"gitId":"jhjhajh"},"content":"Example of usage:"},{"lineNumber":167,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":168,"author":{"gitId":"jhjhajh"},"content":"`find borrow`"},{"lineNumber":169,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":170,"author":{"gitId":"jhjhajh"},"content":"Expected outcome:"},{"lineNumber":171,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":172,"author":{"gitId":"jhjhajh"},"content":"```"},{"lineNumber":173,"author":{"gitId":"jhjhajh"},"content":"    ____________________________________________________________    "},{"lineNumber":174,"author":{"gitId":"jhjhajh"},"content":"    Here are the matching tasks in your list:  "},{"lineNumber":175,"author":{"gitId":"jhjhajh"},"content":"    1.[T][V] borrow book  "},{"lineNumber":176,"author":{"gitId":"jhjhajh"},"content":"    ____________________________________________________________    "},{"lineNumber":177,"author":{"gitId":"jhjhajh"},"content":"```"},{"lineNumber":178,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":179,"author":{"gitId":"jhjhajh"},"content":"### 2.6 Saving Tasks"},{"lineNumber":180,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":181,"author":{"gitId":"jhjhajh"},"content":"Saves tasks added, deleted or completed."},{"lineNumber":182,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":183,"author":{"gitId":"jhjhajh"},"content":"### Usage:"},{"lineNumber":184,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":185,"author":{"gitId":"jhjhajh"},"content":"### `save` - Saves tasks."},{"lineNumber":186,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":187,"author":{"gitId":"jhjhajh"},"content":"Example of usage:"},{"lineNumber":188,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":189,"author":{"gitId":"jhjhajh"},"content":"`save`"},{"lineNumber":190,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":191,"author":{"gitId":"jhjhajh"},"content":"Expected outcome:"},{"lineNumber":192,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":193,"author":{"gitId":"jhjhajh"},"content":"```"},{"lineNumber":194,"author":{"gitId":"jhjhajh"},"content":"    ____________________________________________________________    "},{"lineNumber":195,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":196,"author":{"gitId":"jhjhajh"},"content":"    ░██████╗░░█████╗░░█████╗░██████╗░██████╗░██╗░░░██╗███████╗"},{"lineNumber":197,"author":{"gitId":"jhjhajh"},"content":"    ██╔════╝░██╔══██╗██╔══██╗██╔══██╗██╔══██╗╚██╗░██╔╝██╔════╝"},{"lineNumber":198,"author":{"gitId":"jhjhajh"},"content":"    ██║░░██╗░██║░░██║██║░░██║██║░░██║██████╦╝░╚████╔╝░█████╗░░"},{"lineNumber":199,"author":{"gitId":"jhjhajh"},"content":"    ██║░░╚██╗██║░░██║██║░░██║██║░░██║██╔══██╗░░╚██╔╝░░██╔══╝░░"},{"lineNumber":200,"author":{"gitId":"jhjhajh"},"content":"    ╚██████╔╝╚█████╔╝╚█████╔╝██████╔╝██████╦╝░░░██║░░░███████╗"},{"lineNumber":201,"author":{"gitId":"jhjhajh"},"content":"    ░╚═════╝░░╚════╝░░╚════╝░╚═════╝░╚═════╝░░░░╚═╝░░░╚══════╝"},{"lineNumber":202,"author":{"gitId":"jhjhajh"},"content":"    Hope to see you again soon!"},{"lineNumber":203,"author":{"gitId":"jhjhajh"},"content":"    ____________________________________________________________    "},{"lineNumber":204,"author":{"gitId":"jhjhajh"},"content":"```"},{"lineNumber":205,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":206,"author":{"gitId":"jhjhajh"},"content":"### 2.7 Exiting the programme"},{"lineNumber":207,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":208,"author":{"gitId":"jhjhajh"},"content":"Print goodbye message and end the program."},{"lineNumber":209,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":210,"author":{"gitId":"jhjhajh"},"content":"### Usage:"},{"lineNumber":211,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":212,"author":{"gitId":"jhjhajh"},"content":"### `bye` - Exit the program"},{"lineNumber":213,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":214,"author":{"gitId":"jhjhajh"},"content":"Example of usage:"},{"lineNumber":215,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":216,"author":{"gitId":"jhjhajh"},"content":"`bye`"},{"lineNumber":217,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":218,"author":{"gitId":"jhjhajh"},"content":"Expected outcome:"},{"lineNumber":219,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":220,"author":{"gitId":"jhjhajh"},"content":"```"},{"lineNumber":221,"author":{"gitId":"jhjhajh"},"content":"    ____________________________________________________________    "},{"lineNumber":222,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":223,"author":{"gitId":"jhjhajh"},"content":"    ░██████╗░░█████╗░░█████╗░██████╗░██████╗░██╗░░░██╗███████╗"},{"lineNumber":224,"author":{"gitId":"jhjhajh"},"content":"    ██╔════╝░██╔══██╗██╔══██╗██╔══██╗██╔══██╗╚██╗░██╔╝██╔════╝"},{"lineNumber":225,"author":{"gitId":"jhjhajh"},"content":"    ██║░░██╗░██║░░██║██║░░██║██║░░██║██████╦╝░╚████╔╝░█████╗░░"},{"lineNumber":226,"author":{"gitId":"jhjhajh"},"content":"    ██║░░╚██╗██║░░██║██║░░██║██║░░██║██╔══██╗░░╚██╔╝░░██╔══╝░░"},{"lineNumber":227,"author":{"gitId":"jhjhajh"},"content":"    ╚██████╔╝╚█████╔╝╚█████╔╝██████╔╝██████╦╝░░░██║░░░███████╗"},{"lineNumber":228,"author":{"gitId":"jhjhajh"},"content":"    ░╚═════╝░░╚════╝░░╚════╝░╚═════╝░╚═════╝░░░░╚═╝░░░╚══════╝"},{"lineNumber":229,"author":{"gitId":"jhjhajh"},"content":"    Hope to see you again soon!"},{"lineNumber":230,"author":{"gitId":"jhjhajh"},"content":"    ____________________________________________________________    "},{"lineNumber":231,"author":{"gitId":"jhjhajh"},"content":"```"},{"lineNumber":232,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":233,"author":{"gitId":"jhjhajh"},"content":"## 3 Command Summary"},{"lineNumber":234,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":235,"author":{"gitId":"jhjhajh"},"content":"Command | Function | Format"},{"lineNumber":236,"author":{"gitId":"jhjhajh"},"content":"------------ | ------------- | -------------"},{"lineNumber":237,"author":{"gitId":"jhjhajh"},"content":"todo | Add todo task | `todo` **Task Name**"},{"lineNumber":238,"author":{"gitId":"jhjhajh"},"content":"deadline | Add deadline task | `deadline` **Task Name /by XX**"},{"lineNumber":239,"author":{"gitId":"jhjhajh"},"content":"event | Add event task | `event` **Task Name /at XX**"},{"lineNumber":240,"author":{"gitId":"jhjhajh"},"content":"list | View list of tasks | `list`"},{"lineNumber":241,"author":{"gitId":"jhjhajh"},"content":"delete | Delete task | `delete` **Task Index**"},{"lineNumber":242,"author":{"gitId":"jhjhajh"},"content":"done | Mark task as done | `done` **Task Index**"},{"lineNumber":243,"author":{"gitId":"jhjhajh"},"content":"find | Find tasks by keyword |  `find` **Keyword**"},{"lineNumber":244,"author":{"gitId":"jhjhajh"},"content":"bye | Exit program | `bye`"}],"authorContributionMap":{"jhjhajh":230,"-":14}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"import duke.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":" * Represents Duke program."},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":" */"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":"    private Storage storage;"},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":"    private TaskList taskList;"},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":"    private Ui ui;"},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":"     * Instantiates an instance of Duke."},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"     * @param filePath file path of stored data."},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"    public Duke(String filePath) {"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":"        ui \u003d new Ui();"},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":27,"author":{"gitId":"jhjhajh"},"content":"        taskList \u003d new TaskList(storage);"},{"lineNumber":28,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":30,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"jhjhajh"},"content":"     * Runs the program."},{"lineNumber":32,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"jhjhajh"},"content":"    public void run() throws DukeException {"},{"lineNumber":34,"author":{"gitId":"jhjhajh"},"content":"        Ui.printWelcomeMessage();"},{"lineNumber":35,"author":{"gitId":"jhjhajh"},"content":"        Storage.createFile();"},{"lineNumber":36,"author":{"gitId":"jhjhajh"},"content":"        Parser.getInput();"},{"lineNumber":37,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":39,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"jhjhajh"},"content":"     * Runs Duke."},{"lineNumber":41,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"jhjhajh"},"content":"    public static void main(String[] args) throws DukeException{"},{"lineNumber":43,"author":{"gitId":"jhjhajh"},"content":"        new Duke(\"data/duke.txt\").run();"},{"lineNumber":44,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jhjhajh":44,"-":1}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"public class AddDeadlineCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"     * Add deadline task to TaskList"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"     * @param description input by user"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"    public AddDeadlineCommand(String description) {"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"        TaskList.addDeadline(description);"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":15}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"public class AddEventCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"     * Add event task to TaskList"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"     * @param description input by user"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"    public AddEventCommand(String description) {"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"        TaskList.addEvent(description);"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":14}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"public class AddTodoCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"     * Add todo task to TaskList"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"     * @param description input by user"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"    public AddTodoCommand(String description) {"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"        TaskList.addToDo(description);"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":14}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":" * Represents the command to be executed from the user"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"public abstract class Command {"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":8}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"public class DeleteCommand extends Command{"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"     * Delete task input by user"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"     * @param description input by user"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"    public DeleteCommand(String description) {"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"        TaskList.deleteTask(description);"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":14}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"public class FindCommand extends Command{"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"     * Find list of tasks with input by user"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"     * @param description input by user"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"    public FindCommand(String description) {"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"        TaskList.findListOfCommands(description);"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":14}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"public class ListCommand extends Command{"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"     * Print list of existing tasks"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"    public ListCommand() {"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"        TaskList.showList();"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":12}},{"path":"src/main/java/duke/command/MarkAsDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":" * Marks a task as done"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":" *"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":" * @param description input by user"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":" */"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"public class MarkAsDoneCommand extends Command{"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"    public MarkAsDoneCommand(String description) {"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"        TaskList.markAsDone(description);"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":15}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"public class DukeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":4}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.command.*;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"import duke.ui.Ui;"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":" * Represents a parser that parses commands input by user."},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":" */"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"public class Parser {"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"    public static final String EXIT_COMMAND \u003d \"bye\";"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"    public static final String LIST_COMMAND \u003d \"list\";"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":"    public static final String DONE_COMMAND \u003d \"done\";"},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":"    public static final String TASK_TYPE_TODO_COMMAND \u003d \"todo\";"},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":"    public static final String TASK_TYPE_DEADLINE_COMMAND \u003d \"deadline\";"},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":"    public static final String TASK_TYPE_EVENT_COMMAND \u003d \"event\";"},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":"    public static final String DELETE_COMMAND \u003d \"delete\";"},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"     * Returns nothing."},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":"     * Parses and executes commands until the user inputs the command to exit."},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":"     * @return not applicable."},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jhjhajh"},"content":"    public static void getInput() {"},{"lineNumber":28,"author":{"gitId":"jhjhajh"},"content":"        boolean isExit \u003d false;"},{"lineNumber":29,"author":{"gitId":"jhjhajh"},"content":"        while (!isExit) {"},{"lineNumber":30,"author":{"gitId":"jhjhajh"},"content":"            Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":31,"author":{"gitId":"jhjhajh"},"content":"            String inputCommand \u003d sc.nextLine();"},{"lineNumber":32,"author":{"gitId":"jhjhajh"},"content":"            if (inputCommand.startsWith(DONE_COMMAND)) {"},{"lineNumber":33,"author":{"gitId":"jhjhajh"},"content":"                new MarkAsDoneCommand(inputCommand);"},{"lineNumber":34,"author":{"gitId":"jhjhajh"},"content":"            } else if (inputCommand.startsWith(TASK_TYPE_TODO_COMMAND)) {"},{"lineNumber":35,"author":{"gitId":"jhjhajh"},"content":"                new AddTodoCommand(inputCommand);"},{"lineNumber":36,"author":{"gitId":"jhjhajh"},"content":"            } else if (inputCommand.startsWith(TASK_TYPE_DEADLINE_COMMAND)) {"},{"lineNumber":37,"author":{"gitId":"jhjhajh"},"content":"                new AddDeadlineCommand(inputCommand);"},{"lineNumber":38,"author":{"gitId":"jhjhajh"},"content":"            } else if (inputCommand.startsWith(TASK_TYPE_EVENT_COMMAND)) {"},{"lineNumber":39,"author":{"gitId":"jhjhajh"},"content":"                new AddEventCommand(inputCommand);"},{"lineNumber":40,"author":{"gitId":"jhjhajh"},"content":"            } else if (inputCommand.startsWith(DELETE_COMMAND)) {"},{"lineNumber":41,"author":{"gitId":"jhjhajh"},"content":"                new DeleteCommand(inputCommand);"},{"lineNumber":42,"author":{"gitId":"jhjhajh"},"content":"            } else if (inputCommand.equals(LIST_COMMAND)) {"},{"lineNumber":43,"author":{"gitId":"jhjhajh"},"content":"                new ListCommand();"},{"lineNumber":44,"author":{"gitId":"jhjhajh"},"content":"            } else if (inputCommand.equals(EXIT_COMMAND)) {"},{"lineNumber":45,"author":{"gitId":"jhjhajh"},"content":"                Ui.printGoodbyeMessage();"},{"lineNumber":46,"author":{"gitId":"jhjhajh"},"content":"                isExit \u003d true;"},{"lineNumber":47,"author":{"gitId":"jhjhajh"},"content":"            } else if (inputCommand.equals(\"save\")) {"},{"lineNumber":48,"author":{"gitId":"jhjhajh"},"content":"                Storage.saveData();"},{"lineNumber":49,"author":{"gitId":"jhjhajh"},"content":"            } else if (inputCommand.startsWith(\"find\")) {"},{"lineNumber":50,"author":{"gitId":"jhjhajh"},"content":"                new FindCommand(inputCommand);"},{"lineNumber":51,"author":{"gitId":"jhjhajh"},"content":"            } else {"},{"lineNumber":52,"author":{"gitId":"jhjhajh"},"content":"                Ui.printInvalidMessage(inputCommand);"},{"lineNumber":53,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(Ui.LINE);"},{"lineNumber":55,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":57,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"jhjhajh"},"content":"}"},{"lineNumber":59,"author":{"gitId":"jhjhajh"},"content":""}],"authorContributionMap":{"jhjhajh":59}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Deadline;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Event;"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Todo;"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"import java.io.File;"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"import java.nio.file.Files;"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"import java.nio.file.Path;"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"import java.nio.file.Paths;"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":"import java.util.Scanner;"},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":" * Represents storage data."},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":" */"},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":"public class Storage {"},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"    public static String filePath;"},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"    public Storage(String input) {"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":"        filePath \u003d input;"},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"        loadData();"},{"lineNumber":27,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":29,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"jhjhajh"},"content":"     * If the file \"duke.txt\" exists, reads the file."},{"lineNumber":31,"author":{"gitId":"jhjhajh"},"content":"     * If the file \"duke.txt\" does not exist, creates the file."},{"lineNumber":32,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"jhjhajh"},"content":"    public static void createFile() {"},{"lineNumber":34,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"jhjhajh"},"content":"            File f \u003d new File(filePath); // create a File for the given file path"},{"lineNumber":36,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":37,"author":{"gitId":"jhjhajh"},"content":"            if (!f.exists()) {"},{"lineNumber":38,"author":{"gitId":"jhjhajh"},"content":"                f.createNewFile();"},{"lineNumber":39,"author":{"gitId":"jhjhajh"},"content":"            } else {"},{"lineNumber":40,"author":{"gitId":"jhjhajh"},"content":"                loadData();"},{"lineNumber":41,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"jhjhajh"},"content":"        } catch (IOException e) {"},{"lineNumber":43,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Something went wrong when creating file\");"},{"lineNumber":44,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":47,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"jhjhajh"},"content":"     * Loads the file \"duke.txt\"."},{"lineNumber":49,"author":{"gitId":"jhjhajh"},"content":"     * Reads data from \"duke.txt\""},{"lineNumber":50,"author":{"gitId":"jhjhajh"},"content":"     * Decodes data in duke.txt according to task types."},{"lineNumber":51,"author":{"gitId":"jhjhajh"},"content":"     * No return value"},{"lineNumber":52,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"jhjhajh"},"content":"    public static void loadData() {"},{"lineNumber":54,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"jhjhajh"},"content":"            Path dataFilePath \u003d Paths.get(\"data/\");"},{"lineNumber":56,"author":{"gitId":"jhjhajh"},"content":"            Files.createDirectories(dataFilePath);"},{"lineNumber":57,"author":{"gitId":"jhjhajh"},"content":"            File data \u003d new File(\"data/duke.txt\");"},{"lineNumber":58,"author":{"gitId":"jhjhajh"},"content":"            Scanner readFile \u003d new Scanner(data);"},{"lineNumber":59,"author":{"gitId":"jhjhajh"},"content":"            while (readFile.hasNextLine()) {"},{"lineNumber":60,"author":{"gitId":"jhjhajh"},"content":"                String input \u003d readFile.nextLine();"},{"lineNumber":61,"author":{"gitId":"jhjhajh"},"content":"                //split string by whitespace + \"|\" + whitespace"},{"lineNumber":62,"author":{"gitId":"jhjhajh"},"content":"                String[] taskSplit \u003d input.split(\"\\\\s\\\\|\\\\s\");"},{"lineNumber":63,"author":{"gitId":"jhjhajh"},"content":"                Task t \u003d new Task(\"\");"},{"lineNumber":64,"author":{"gitId":"jhjhajh"},"content":"                if (taskSplit[0].equals(\"[D]\")) {"},{"lineNumber":65,"author":{"gitId":"jhjhajh"},"content":"                    t \u003d new Deadline(taskSplit[2], taskSplit[3]);"},{"lineNumber":66,"author":{"gitId":"jhjhajh"},"content":"                } else if (taskSplit[0].equals(\"[E]\")) {"},{"lineNumber":67,"author":{"gitId":"jhjhajh"},"content":"                    t \u003d new Event(taskSplit[2], taskSplit[3]);"},{"lineNumber":68,"author":{"gitId":"jhjhajh"},"content":"                } else if (taskSplit[0].equals(\"[T]\")) {"},{"lineNumber":69,"author":{"gitId":"jhjhajh"},"content":"                    t \u003d new Todo(taskSplit[2]);"},{"lineNumber":70,"author":{"gitId":"jhjhajh"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"jhjhajh"},"content":"                TaskList.tasks.add(t);"},{"lineNumber":72,"author":{"gitId":"jhjhajh"},"content":"                if (taskSplit[1].equals(\"1\")) {"},{"lineNumber":73,"author":{"gitId":"jhjhajh"},"content":"                    t.setDone();"},{"lineNumber":74,"author":{"gitId":"jhjhajh"},"content":"                }"},{"lineNumber":75,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"jhjhajh"},"content":"            readFile.close();"},{"lineNumber":77,"author":{"gitId":"jhjhajh"},"content":"        } catch (IOException e) {"},{"lineNumber":78,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Error when creating data directory. Please try again.\");"},{"lineNumber":79,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":81,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":82,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":84,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"jhjhajh"},"content":"     * Writes data into the file \"duke.txt\"."},{"lineNumber":86,"author":{"gitId":"jhjhajh"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"jhjhajh"},"content":"    public static boolean saveData() {"},{"lineNumber":89,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":90,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Saving your data...\");"},{"lineNumber":91,"author":{"gitId":"jhjhajh"},"content":"            File file \u003d new File(\"duke.txt\");"},{"lineNumber":92,"author":{"gitId":"jhjhajh"},"content":"            FileWriter fileWriter \u003d new FileWriter(\"data/duke.txt\");"},{"lineNumber":93,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":94,"author":{"gitId":"jhjhajh"},"content":"            for (int i \u003d 0; i \u003c TaskList.tasks.size(); i++) {"},{"lineNumber":95,"author":{"gitId":"jhjhajh"},"content":"                Task currentTask \u003d TaskList.tasks.get(i);"},{"lineNumber":96,"author":{"gitId":"jhjhajh"},"content":"                fileWriter.write(currentTask.getTaskType() + \" | \" + ((currentTask.getIsDone()) ? \"1\" : \"0\") + \" | \""},{"lineNumber":97,"author":{"gitId":"jhjhajh"},"content":"                        + currentTask.getDescription() + ((currentTask.hasDateTime()) ? \" | \""},{"lineNumber":98,"author":{"gitId":"jhjhajh"},"content":"                        + currentTask.getDateTime() : \"\") + \"\\n\");"},{"lineNumber":99,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"jhjhajh"},"content":"            fileWriter.close();"},{"lineNumber":101,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Data saved\");"},{"lineNumber":102,"author":{"gitId":"jhjhajh"},"content":"            return true;"},{"lineNumber":103,"author":{"gitId":"jhjhajh"},"content":"        } catch (IOException e) {"},{"lineNumber":104,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Error occurred when saving your data. Please try again.\");"},{"lineNumber":105,"author":{"gitId":"jhjhajh"},"content":"            return false;"},{"lineNumber":106,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":108}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.tasklist;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"import duke.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Deadline;"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Event;"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Task;"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Todo;"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"import duke.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"import java.util.stream.Collectors;"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":" * Represents list of existing tasks."},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":" */"},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":"public class TaskList {"},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":"    private Storage storage;"},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":"    public TaskList(Storage input) {"},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":"        storage \u003d input;"},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"jhjhajh"},"content":"     * Check for errors in input by user."},{"lineNumber":28,"author":{"gitId":"jhjhajh"},"content":"     * @param input user input."},{"lineNumber":29,"author":{"gitId":"jhjhajh"},"content":"     * @param type task type."},{"lineNumber":30,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"jhjhajh"},"content":"    public static void validateInput(String input, String type) throws DukeException {"},{"lineNumber":32,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"jhjhajh"},"content":"            if (type.equals(\"done\") \u0026\u0026 (!(input.strip()).matches(\"[-+]?\\\\\\\\d*\\\\\\\\.?\\\\\\\\d+\\n\"))"},{"lineNumber":34,"author":{"gitId":"jhjhajh"},"content":"                    || (type.equals(\"todo\") \u0026\u0026 (input.strip().length() \u003c\u003d 0))"},{"lineNumber":35,"author":{"gitId":"jhjhajh"},"content":"                    || (!input.contains(\"/\") \u0026\u0026 (type.equals(\"deadline\") || type.equals(\"event\")))) {"},{"lineNumber":36,"author":{"gitId":"jhjhajh"},"content":"                throw new DukeException();"},{"lineNumber":37,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"jhjhajh"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":39,"author":{"gitId":"jhjhajh"},"content":"            Ui.printInvalidMessage(type);"},{"lineNumber":40,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":43,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"jhjhajh"},"content":"     * Print list of tasks when requested by user."},{"lineNumber":45,"author":{"gitId":"jhjhajh"},"content":"     * If there are no existing tasks, method will request for user to input a task."},{"lineNumber":46,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"jhjhajh"},"content":"    public static void showList() {"},{"lineNumber":48,"author":{"gitId":"jhjhajh"},"content":"        if (tasks.size() \u003e 0) {"},{"lineNumber":49,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":50,"author":{"gitId":"jhjhajh"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":51,"author":{"gitId":"jhjhajh"},"content":"                Task currentTask \u003d tasks.get(i);"},{"lineNumber":52,"author":{"gitId":"jhjhajh"},"content":"                System.out.print(i + 1 + \". \");"},{"lineNumber":53,"author":{"gitId":"jhjhajh"},"content":"                Ui.printTask(currentTask);"},{"lineNumber":54,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"jhjhajh"},"content":"        } else {"},{"lineNumber":56,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Please input a task.\");"},{"lineNumber":57,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":60,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"jhjhajh"},"content":"     * Marks task status as done."},{"lineNumber":62,"author":{"gitId":"jhjhajh"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"jhjhajh"},"content":"     * @param inputCommand user input."},{"lineNumber":64,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"jhjhajh"},"content":"    public static void markAsDone(String inputCommand) {"},{"lineNumber":66,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"jhjhajh"},"content":"            String taskDone \u003d inputCommand.split(\" \", 2)[1];"},{"lineNumber":68,"author":{"gitId":"jhjhajh"},"content":"            int taskIndex \u003d Integer.parseInt(taskDone) - 1;"},{"lineNumber":69,"author":{"gitId":"jhjhajh"},"content":"            if (taskIndex \u003e\u003d tasks.size() || taskIndex \u003c 0) {"},{"lineNumber":70,"author":{"gitId":"jhjhajh"},"content":"                System.out.println(\"You have not added task \" + taskIndex + \" yet! Please try again.\");"},{"lineNumber":71,"author":{"gitId":"jhjhajh"},"content":"            } else if (tasks.get(taskIndex).getIsDone() \u003d\u003d true) {"},{"lineNumber":72,"author":{"gitId":"jhjhajh"},"content":"                System.out.println(\"Task have already been set as done before. Please try to complete other tasks.\");"},{"lineNumber":73,"author":{"gitId":"jhjhajh"},"content":"            } else {"},{"lineNumber":74,"author":{"gitId":"jhjhajh"},"content":"                tasks.get(taskIndex).setDone();"},{"lineNumber":75,"author":{"gitId":"jhjhajh"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":76,"author":{"gitId":"jhjhajh"},"content":"                Task currentTask \u003d tasks.get(taskIndex);"},{"lineNumber":77,"author":{"gitId":"jhjhajh"},"content":"                Ui.printTask(currentTask);"},{"lineNumber":78,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"jhjhajh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":80,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Task done invalid! Please try again\");"},{"lineNumber":81,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":84,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"jhjhajh"},"content":"     * Add a todo to tasks."},{"lineNumber":86,"author":{"gitId":"jhjhajh"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"jhjhajh"},"content":"     * @param inputCommand user input."},{"lineNumber":88,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"jhjhajh"},"content":"    public static void addToDo(String inputCommand) {"},{"lineNumber":90,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":91,"author":{"gitId":"jhjhajh"},"content":"            String taskToAdd \u003d inputCommand.split(\" \", 2)[1];"},{"lineNumber":92,"author":{"gitId":"jhjhajh"},"content":"            validateInput(taskToAdd, \"todo\");"},{"lineNumber":93,"author":{"gitId":"jhjhajh"},"content":"            Todo t \u003d new Todo(taskToAdd);"},{"lineNumber":94,"author":{"gitId":"jhjhajh"},"content":"            tasks.add(t);"},{"lineNumber":95,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":96,"author":{"gitId":"jhjhajh"},"content":"            Ui.printTask(t);"},{"lineNumber":97,"author":{"gitId":"jhjhajh"},"content":"            Ui.printTaskSize();"},{"lineNumber":98,"author":{"gitId":"jhjhajh"},"content":"        } catch (DukeException | IndexOutOfBoundsException e) {"},{"lineNumber":99,"author":{"gitId":"jhjhajh"},"content":"            Ui.printInvalidMessage(\"todo\");"},{"lineNumber":100,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":103,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"jhjhajh"},"content":"     * Add an event to tasks."},{"lineNumber":105,"author":{"gitId":"jhjhajh"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"jhjhajh"},"content":"     * @param inputCommand user input."},{"lineNumber":107,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"jhjhajh"},"content":"    public static void addEvent(String inputCommand) {"},{"lineNumber":109,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":110,"author":{"gitId":"jhjhajh"},"content":"            String taskToAdd \u003d inputCommand.split(\" \", 2)[1];"},{"lineNumber":111,"author":{"gitId":"jhjhajh"},"content":"            validateInput(taskToAdd, \"event\");"},{"lineNumber":112,"author":{"gitId":"jhjhajh"},"content":"            int splitIndex \u003d taskToAdd.indexOf(\u0027/\u0027);"},{"lineNumber":113,"author":{"gitId":"jhjhajh"},"content":"            String description \u003d taskToAdd.substring(0, splitIndex);"},{"lineNumber":114,"author":{"gitId":"jhjhajh"},"content":"            String dateTime \u003d taskToAdd.substring(splitIndex + 3);"},{"lineNumber":115,"author":{"gitId":"jhjhajh"},"content":"            Event e \u003d new Event(description, dateTime);"},{"lineNumber":116,"author":{"gitId":"jhjhajh"},"content":"            tasks.add(e);"},{"lineNumber":117,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":118,"author":{"gitId":"jhjhajh"},"content":"            Ui.printTask(e);"},{"lineNumber":119,"author":{"gitId":"jhjhajh"},"content":"            Ui.printTaskSize();"},{"lineNumber":120,"author":{"gitId":"jhjhajh"},"content":"        } catch (DukeException | IndexOutOfBoundsException e) {"},{"lineNumber":121,"author":{"gitId":"jhjhajh"},"content":"            Ui.printInvalidMessage(\"event\");"},{"lineNumber":122,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":125,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"jhjhajh"},"content":"     * Add a deadline to tasks"},{"lineNumber":127,"author":{"gitId":"jhjhajh"},"content":"     *"},{"lineNumber":128,"author":{"gitId":"jhjhajh"},"content":"     * @param inputCommand user input."},{"lineNumber":129,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"jhjhajh"},"content":"    public static void addDeadline(String inputCommand) {"},{"lineNumber":131,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":132,"author":{"gitId":"jhjhajh"},"content":"            String taskToAdd \u003d inputCommand.split(\" \", 2)[1];"},{"lineNumber":133,"author":{"gitId":"jhjhajh"},"content":"            validateInput(taskToAdd, \"deadline\");"},{"lineNumber":134,"author":{"gitId":"jhjhajh"},"content":"            int splitIndex \u003d taskToAdd.indexOf(\u0027/\u0027);"},{"lineNumber":135,"author":{"gitId":"jhjhajh"},"content":"            String description \u003d taskToAdd.substring(0, splitIndex);"},{"lineNumber":136,"author":{"gitId":"jhjhajh"},"content":"            String dateTime \u003d taskToAdd.substring(splitIndex + 3);"},{"lineNumber":137,"author":{"gitId":"jhjhajh"},"content":"            Deadline d \u003d new Deadline(description, dateTime);"},{"lineNumber":138,"author":{"gitId":"jhjhajh"},"content":"            tasks.add(d);"},{"lineNumber":139,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":140,"author":{"gitId":"jhjhajh"},"content":"            Ui. printTask(d);"},{"lineNumber":141,"author":{"gitId":"jhjhajh"},"content":"            Ui.printTaskSize();"},{"lineNumber":142,"author":{"gitId":"jhjhajh"},"content":"        } catch (DukeException | IndexOutOfBoundsException e) {"},{"lineNumber":143,"author":{"gitId":"jhjhajh"},"content":"            Ui.printInvalidMessage(\"deadline\");"},{"lineNumber":144,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":147,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":148,"author":{"gitId":"jhjhajh"},"content":"     * Delete task from tasks"},{"lineNumber":149,"author":{"gitId":"jhjhajh"},"content":"     *"},{"lineNumber":150,"author":{"gitId":"jhjhajh"},"content":"     * @param inputCommand user input."},{"lineNumber":151,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"jhjhajh"},"content":"    public static void deleteTask(String inputCommand) {"},{"lineNumber":153,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":154,"author":{"gitId":"jhjhajh"},"content":"            String taskToHandle \u003d inputCommand.split(\" \", 2)[1];"},{"lineNumber":155,"author":{"gitId":"jhjhajh"},"content":"            int taskIndex \u003d Integer.parseInt(taskToHandle) - 1;"},{"lineNumber":156,"author":{"gitId":"jhjhajh"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {"},{"lineNumber":157,"author":{"gitId":"jhjhajh"},"content":"                System.out.println(\"Task does not exists!\");"},{"lineNumber":158,"author":{"gitId":"jhjhajh"},"content":"            } else {"},{"lineNumber":159,"author":{"gitId":"jhjhajh"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":160,"author":{"gitId":"jhjhajh"},"content":"                Task currentTask \u003d tasks.get(taskIndex);"},{"lineNumber":161,"author":{"gitId":"jhjhajh"},"content":"                Ui.printTask(currentTask);"},{"lineNumber":162,"author":{"gitId":"jhjhajh"},"content":"                tasks.remove(taskIndex);"},{"lineNumber":163,"author":{"gitId":"jhjhajh"},"content":"                Ui.printTaskSize();"},{"lineNumber":164,"author":{"gitId":"jhjhajh"},"content":"            }"},{"lineNumber":165,"author":{"gitId":"jhjhajh"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":166,"author":{"gitId":"jhjhajh"},"content":"            Ui.printInvalidMessage(\"delete\");"},{"lineNumber":167,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":170,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":171,"author":{"gitId":"jhjhajh"},"content":"     * Search in tasks for keyword input by user."},{"lineNumber":172,"author":{"gitId":"jhjhajh"},"content":"     *"},{"lineNumber":173,"author":{"gitId":"jhjhajh"},"content":"     * @param inputCommand user input."},{"lineNumber":174,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":175,"author":{"gitId":"jhjhajh"},"content":"    public static void findListOfCommands(String inputCommand) {"},{"lineNumber":176,"author":{"gitId":"jhjhajh"},"content":"        try {"},{"lineNumber":177,"author":{"gitId":"jhjhajh"},"content":"            String word \u003d inputCommand.substring(5);"},{"lineNumber":178,"author":{"gitId":"jhjhajh"},"content":"            ArrayList\u003cTask\u003e foundTasks \u003d findInput(word);"},{"lineNumber":179,"author":{"gitId":"jhjhajh"},"content":"            Ui.printFoundTasks(foundTasks);"},{"lineNumber":180,"author":{"gitId":"jhjhajh"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":181,"author":{"gitId":"jhjhajh"},"content":"            Ui.printInvalidMessage(\"find\");"},{"lineNumber":182,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":185,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":186,"author":{"gitId":"jhjhajh"},"content":"     * Search in tasks for keyword input by user."},{"lineNumber":187,"author":{"gitId":"jhjhajh"},"content":"     *"},{"lineNumber":188,"author":{"gitId":"jhjhajh"},"content":"     * @param word keyword input by user."},{"lineNumber":189,"author":{"gitId":"jhjhajh"},"content":"     * @return ArrayList of tasks that matches input keyword."},{"lineNumber":190,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":191,"author":{"gitId":"jhjhajh"},"content":"    public static ArrayList\u003cTask\u003e findInput (String word) {"},{"lineNumber":192,"author":{"gitId":"jhjhajh"},"content":"        return (ArrayList\u003cTask\u003e) tasks.stream()"},{"lineNumber":193,"author":{"gitId":"jhjhajh"},"content":"                .filter(t -\u003e t.getDescription().toLowerCase().contains(word))"},{"lineNumber":194,"author":{"gitId":"jhjhajh"},"content":"                    .collect(Collectors.toList());"},{"lineNumber":195,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":196}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"    protected String dateTime;"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"    public Deadline(String description, String dateTime) {"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"    public String getTaskType() {"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"        return \"[D]\";"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":"    public String getDateTime() {"},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":"        return dateTime;"},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":"    public boolean hasDateTime() {"},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"        return true;"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"}"},{"lineNumber":27,"author":{"gitId":"jhjhajh"},"content":""}],"authorContributionMap":{"jhjhajh":27}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"    protected String dateTime;"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"    public Event (String description, String dateTime) {"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"    public String getTaskType() {"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"        return \"[E]\";"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":"    public String getDateTime() {"},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":"        return dateTime;"},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"    public boolean hasDateTime() {"},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":"        return true;"},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":26}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"    public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"    public String getDescription() {"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"        return description;"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":"    public String getStatusIcon() {"},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":"        return (isDone ? \"[X]\":\"[ ]\");"},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":"    public boolean getIsDone() {"},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"        if (isDone) {"},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":"            return true;"},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":"        else {"},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":"            return false;"},{"lineNumber":27,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":30,"author":{"gitId":"jhjhajh"},"content":"    public void setDone(){"},{"lineNumber":31,"author":{"gitId":"jhjhajh"},"content":"        isDone \u003d true;"},{"lineNumber":32,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":34,"author":{"gitId":"jhjhajh"},"content":"    public String getDateTime() {"},{"lineNumber":35,"author":{"gitId":"jhjhajh"},"content":"        return \"\";"},{"lineNumber":36,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":38,"author":{"gitId":"jhjhajh"},"content":"    public String getTaskType() {"},{"lineNumber":39,"author":{"gitId":"jhjhajh"},"content":"        return null;"},{"lineNumber":40,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":42,"author":{"gitId":"jhjhajh"},"content":"    public boolean hasDateTime() {"},{"lineNumber":43,"author":{"gitId":"jhjhajh"},"content":"        return false;"},{"lineNumber":44,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":46,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":46}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":"    public String getTaskType() {"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"        return \"[T]\";"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":14}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhjhajh"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":3,"author":{"gitId":"jhjhajh"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"jhjhajh"},"content":"import duke.tasklist.TaskList;"},{"lineNumber":5,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":6,"author":{"gitId":"jhjhajh"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":8,"author":{"gitId":"jhjhajh"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"jhjhajh"},"content":" * Represents user interaction messages with user in the user interface."},{"lineNumber":10,"author":{"gitId":"jhjhajh"},"content":" */"},{"lineNumber":11,"author":{"gitId":"jhjhajh"},"content":"public class Ui {"},{"lineNumber":12,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":13,"author":{"gitId":"jhjhajh"},"content":"    public static final String WELCOME_MESSAGE \u003d \"\\n\" +"},{"lineNumber":14,"author":{"gitId":"jhjhajh"},"content":"            \"██╗░░██╗███████╗██╗░░░░░██╗░░░░░░█████╗░\\n\" +"},{"lineNumber":15,"author":{"gitId":"jhjhajh"},"content":"            \"██║░░██║██╔════╝██║░░░░░██║░░░░░██╔══██╗\\n\" +"},{"lineNumber":16,"author":{"gitId":"jhjhajh"},"content":"            \"███████║█████╗░░██║░░░░░██║░░░░░██║░░██║\\n\" +"},{"lineNumber":17,"author":{"gitId":"jhjhajh"},"content":"            \"██╔══██║██╔══╝░░██║░░░░░██║░░░░░██║░░██║\\n\" +"},{"lineNumber":18,"author":{"gitId":"jhjhajh"},"content":"            \"██║░░██║███████╗███████╗███████╗╚█████╔╝\\n\" +"},{"lineNumber":19,"author":{"gitId":"jhjhajh"},"content":"            \"╚═╝░░╚═╝╚══════╝╚══════╝╚══════╝░╚════╝░\\n\" + \"from\\n\" + \"\\n\" +"},{"lineNumber":20,"author":{"gitId":"jhjhajh"},"content":"            \"██████╗░██╗░░░██╗██╗░░██╗███████╗\\n\" +"},{"lineNumber":21,"author":{"gitId":"jhjhajh"},"content":"            \"██╔══██╗██║░░░██║██║░██╔╝██╔════╝\\n\" +"},{"lineNumber":22,"author":{"gitId":"jhjhajh"},"content":"            \"██║░░██║██║░░░██║█████═╝░█████╗░░\\n\" +"},{"lineNumber":23,"author":{"gitId":"jhjhajh"},"content":"            \"██║░░██║██║░░░██║██╔═██╗░██╔══╝░░\\n\" +"},{"lineNumber":24,"author":{"gitId":"jhjhajh"},"content":"            \"██████╔╝╚██████╔╝██║░╚██╗███████╗\\n\" +"},{"lineNumber":25,"author":{"gitId":"jhjhajh"},"content":"            \"╚═════╝░░╚═════╝░╚═╝░░╚═╝╚══════╝\\n\";"},{"lineNumber":26,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":27,"author":{"gitId":"jhjhajh"},"content":"    public static final String GOODBYE_MESSAGE \u003d \"\\n\" +"},{"lineNumber":28,"author":{"gitId":"jhjhajh"},"content":"            \"░██████╗░░█████╗░░█████╗░██████╗░██████╗░██╗░░░██╗███████╗\\n\" +"},{"lineNumber":29,"author":{"gitId":"jhjhajh"},"content":"            \"██╔════╝░██╔══██╗██╔══██╗██╔══██╗██╔══██╗╚██╗░██╔╝██╔════╝\\n\" +"},{"lineNumber":30,"author":{"gitId":"jhjhajh"},"content":"            \"██║░░██╗░██║░░██║██║░░██║██║░░██║██████╦╝░╚████╔╝░█████╗░░\\n\" +"},{"lineNumber":31,"author":{"gitId":"jhjhajh"},"content":"            \"██║░░╚██╗██║░░██║██║░░██║██║░░██║██╔══██╗░░╚██╔╝░░██╔══╝░░\\n\" +"},{"lineNumber":32,"author":{"gitId":"jhjhajh"},"content":"            \"╚██████╔╝╚█████╔╝╚█████╔╝██████╔╝██████╦╝░░░██║░░░███████╗\\n\" +"},{"lineNumber":33,"author":{"gitId":"jhjhajh"},"content":"            \"░╚═════╝░░╚════╝░░╚════╝░╚═════╝░╚═════╝░░░░╚═╝░░░╚══════╝\\n\" + \"Hope to see you again soon!\";"},{"lineNumber":34,"author":{"gitId":"jhjhajh"},"content":"    public static final String LINE \u003d \"_________________________________________________________________________\";"},{"lineNumber":35,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":36,"author":{"gitId":"jhjhajh"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":37,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":38,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"jhjhajh"},"content":"     * Prints the exit messages at the end of the program."},{"lineNumber":40,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"jhjhajh"},"content":"    public static void printGoodbyeMessage() {"},{"lineNumber":42,"author":{"gitId":"jhjhajh"},"content":"        System.out.println(GOODBYE_MESSAGE);"},{"lineNumber":43,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":45,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"jhjhajh"},"content":"     * Prints the welcome messages at the start of the program."},{"lineNumber":47,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"jhjhajh"},"content":"    public static void printWelcomeMessage() {"},{"lineNumber":49,"author":{"gitId":"jhjhajh"},"content":"        System.out.println(WELCOME_MESSAGE);"},{"lineNumber":50,"author":{"gitId":"jhjhajh"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"},{"lineNumber":51,"author":{"gitId":"jhjhajh"},"content":"        System.out.println(LINE);"},{"lineNumber":52,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":54,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"jhjhajh"},"content":"     * Prints error message to inform user about invalid input."},{"lineNumber":56,"author":{"gitId":"jhjhajh"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"jhjhajh"},"content":"     * @param type if identified, would be task type. If unidentified, would be user input."},{"lineNumber":58,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"jhjhajh"},"content":"    public static void printInvalidMessage(String type) {"},{"lineNumber":60,"author":{"gitId":"jhjhajh"},"content":"        System.out.println(\"\\uD83D\\uDE1E OOPS! \" + type + \" is not valid, please try again!\");"},{"lineNumber":61,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":63,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"jhjhajh"},"content":"     * Prints the task in the parameter"},{"lineNumber":65,"author":{"gitId":"jhjhajh"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"jhjhajh"},"content":"     * @param taskToPrint task to be printed"},{"lineNumber":67,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"jhjhajh"},"content":"    public static void printTask(Task taskToPrint) {"},{"lineNumber":69,"author":{"gitId":"jhjhajh"},"content":"        System.out.print(taskToPrint.getTaskType() + taskToPrint.getStatusIcon() + \" \" + taskToPrint.getDescription());"},{"lineNumber":70,"author":{"gitId":"jhjhajh"},"content":"        if (taskToPrint.getTaskType().equals(\"[D]\")) {"},{"lineNumber":71,"author":{"gitId":"jhjhajh"},"content":"            System.out.print(\" (by:\" + taskToPrint.getDateTime() + \")\");"},{"lineNumber":72,"author":{"gitId":"jhjhajh"},"content":"        } else if (taskToPrint.getTaskType().equals(\"[E]\")) {"},{"lineNumber":73,"author":{"gitId":"jhjhajh"},"content":"            System.out.print(\" (at:\" + taskToPrint.getDateTime() + \")\");"},{"lineNumber":74,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"jhjhajh"},"content":"        System.out.print(\"\\n\");"},{"lineNumber":76,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":78,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"jhjhajh"},"content":"     * Prints the number of existing tasks"},{"lineNumber":80,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"jhjhajh"},"content":"    public static void printTaskSize() {"},{"lineNumber":82,"author":{"gitId":"jhjhajh"},"content":"        if (TaskList.tasks.size() \u003e 1) {"},{"lineNumber":83,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Now you have \" + TaskList.tasks.size() + \" tasks in the list.\");"},{"lineNumber":84,"author":{"gitId":"jhjhajh"},"content":"        } else if (TaskList.tasks.size() \u003d\u003d 1) {"},{"lineNumber":85,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"Now you have \" + TaskList.tasks.size() + \" task in the list.\");"},{"lineNumber":86,"author":{"gitId":"jhjhajh"},"content":"        } else {"},{"lineNumber":87,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"You don\u0027t have any tasks in the list\");"},{"lineNumber":88,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":91,"author":{"gitId":"jhjhajh"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"jhjhajh"},"content":"     * Prints the tasks found by the FindCommand"},{"lineNumber":93,"author":{"gitId":"jhjhajh"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"jhjhajh"},"content":"     * @param foundTasks ArrayList of tasks that matches with keyword input by user."},{"lineNumber":95,"author":{"gitId":"jhjhajh"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"jhjhajh"},"content":"    public static void printFoundTasks(ArrayList\u003cTask\u003e foundTasks) {"},{"lineNumber":97,"author":{"gitId":"jhjhajh"},"content":"        if (foundTasks.isEmpty()) {"},{"lineNumber":98,"author":{"gitId":"jhjhajh"},"content":"            System.out.println(\"\\uD83D\\uDE1E No tasks found with given keyword. Please try again\");"},{"lineNumber":99,"author":{"gitId":"jhjhajh"},"content":"            return;"},{"lineNumber":100,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"jhjhajh"},"content":"        System.out.println(\"Here are the matching tasks in your list!\");"},{"lineNumber":102,"author":{"gitId":"jhjhajh"},"content":"        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {"},{"lineNumber":103,"author":{"gitId":"jhjhajh"},"content":"            System.out.print((i + 1) + \". \");"},{"lineNumber":104,"author":{"gitId":"jhjhajh"},"content":"            Task currentTask \u003d foundTasks.get(i);"},{"lineNumber":105,"author":{"gitId":"jhjhajh"},"content":"            printTask(currentTask);"},{"lineNumber":106,"author":{"gitId":"jhjhajh"},"content":""},{"lineNumber":107,"author":{"gitId":"jhjhajh"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"jhjhajh"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"jhjhajh"},"content":"}"}],"authorContributionMap":{"jhjhajh":109}}]
