[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"ManikaHennedige"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"ManikaHennedige":1,"-":25}},{"path":"data/savedata.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"Duke\u0027s Most Recent Task List"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":"D | 0 | Exile to Dagobah || 5pm Coruscant Time"},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"E | 0 | Kill the younglings || After lunch"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":"D | 1 | Kidnap the chancellor || Whenever tbh"},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":"T | 0 | Learn about Jacen Solo"},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":"T | 1 | Find out about Tenel-Ka and Allana"},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":"T | 0 | Figure out what happened to Darth Krayt"},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":"D | 0 | Blow up Death Star II || 2pm - Near Endor"},{"lineNumber":9,"author":{"gitId":"ManikaHennedige"},"content":"E | 0 | Hear the tragedy of Darth Plagueis the Wise || Senate chambers"}],"authorContributionMap":{"ManikaHennedige":9}},{"path":"src/main/java/duke/controller/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"package duke.controller;"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"import duke.exception.InvalidInputException;"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":"import duke.ui.*;"},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":11,"author":{"gitId":"ManikaHennedige"},"content":"        UI.showWelcomeScreen();"},{"lineNumber":12,"author":{"gitId":"ManikaHennedige"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"ManikaHennedige"},"content":"        String input;"},{"lineNumber":14,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":15,"author":{"gitId":"ManikaHennedige"},"content":"        do {"},{"lineNumber":16,"author":{"gitId":"ManikaHennedige"},"content":"            input \u003d sc.nextLine();"},{"lineNumber":17,"author":{"gitId":"ManikaHennedige"},"content":"            switch (input) {"},{"lineNumber":18,"author":{"gitId":"ManikaHennedige"},"content":"            case \"list\":"},{"lineNumber":19,"author":{"gitId":"ManikaHennedige"},"content":"                UI.showAllTasks();"},{"lineNumber":20,"author":{"gitId":"ManikaHennedige"},"content":"                break;"},{"lineNumber":21,"author":{"gitId":"ManikaHennedige"},"content":"            case \"bye\":"},{"lineNumber":22,"author":{"gitId":"ManikaHennedige"},"content":"                UI.showFarewellScreen();"},{"lineNumber":23,"author":{"gitId":"ManikaHennedige"},"content":"                break;"},{"lineNumber":24,"author":{"gitId":"ManikaHennedige"},"content":"            default:"},{"lineNumber":25,"author":{"gitId":"ManikaHennedige"},"content":"                try {"},{"lineNumber":26,"author":{"gitId":"ManikaHennedige"},"content":"                    TaskManager.processTask(input);"},{"lineNumber":27,"author":{"gitId":"ManikaHennedige"},"content":"                } catch (InvalidInputException e) {"},{"lineNumber":28,"author":{"gitId":"ManikaHennedige"},"content":"                    System.out.println(e.getMessage());"},{"lineNumber":29,"author":{"gitId":"ManikaHennedige"},"content":"                    UI.requestInput();"},{"lineNumber":30,"author":{"gitId":"ManikaHennedige"},"content":"                }"},{"lineNumber":31,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":32,"author":{"gitId":"ManikaHennedige"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"ManikaHennedige"},"content":"        } while (!input.equals(\"bye\"));"},{"lineNumber":34,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":35,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":33,"-":4}},{"path":"src/main/java/duke/controller/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"package duke.controller;"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"import duke.exception.*;"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":"import duke.task.*;"},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":"import duke.ui.*;"},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":"public class TaskManager {"},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":"    public static void processTask(String input) throws InvalidInputException {"},{"lineNumber":9,"author":{"gitId":"ManikaHennedige"},"content":"        String[] inputData \u003d input.split(\" \");"},{"lineNumber":10,"author":{"gitId":"ManikaHennedige"},"content":"        String[] taskDetails;"},{"lineNumber":11,"author":{"gitId":"ManikaHennedige"},"content":"        switch (inputData[0]) {"},{"lineNumber":12,"author":{"gitId":"ManikaHennedige"},"content":"            case \"done\":"},{"lineNumber":13,"author":{"gitId":"ManikaHennedige"},"content":"            case \"delete\":"},{"lineNumber":14,"author":{"gitId":"ManikaHennedige"},"content":"                try {"},{"lineNumber":15,"author":{"gitId":"ManikaHennedige"},"content":"                    int taskIndex \u003d Integer.parseInt(input.split(\" \")[1]);"},{"lineNumber":16,"author":{"gitId":"ManikaHennedige"},"content":"                    taskIndex--;"},{"lineNumber":17,"author":{"gitId":"ManikaHennedige"},"content":"                    Task.checkTaskIndex(taskIndex);"},{"lineNumber":18,"author":{"gitId":"ManikaHennedige"},"content":"                    if (inputData[0].equals(\"done\")) {"},{"lineNumber":19,"author":{"gitId":"ManikaHennedige"},"content":"                        Task.checkTaskComplete(taskIndex);"},{"lineNumber":20,"author":{"gitId":"ManikaHennedige"},"content":"                        Task.completeTask(taskIndex);"},{"lineNumber":21,"author":{"gitId":"ManikaHennedige"},"content":"                        UI.taskCompletedSuccessfully();"},{"lineNumber":22,"author":{"gitId":"ManikaHennedige"},"content":"                    }"},{"lineNumber":23,"author":{"gitId":"ManikaHennedige"},"content":"                    else {"},{"lineNumber":24,"author":{"gitId":"ManikaHennedige"},"content":"                        Task.deleteTask(taskIndex);"},{"lineNumber":25,"author":{"gitId":"ManikaHennedige"},"content":"                        UI.taskDeletedSuccessfully();"},{"lineNumber":26,"author":{"gitId":"ManikaHennedige"},"content":"                    }"},{"lineNumber":27,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":28,"author":{"gitId":"ManikaHennedige"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":29,"author":{"gitId":"ManikaHennedige"},"content":"                    System.out.println(\"That didn\u0027t work...please enter a valid number\");"},{"lineNumber":30,"author":{"gitId":"ManikaHennedige"},"content":"                    UI.requestInput();"},{"lineNumber":31,"author":{"gitId":"ManikaHennedige"},"content":"                } catch (TaskAlreadyCompletedException e) {"},{"lineNumber":32,"author":{"gitId":"ManikaHennedige"},"content":"                    System.out.println(e.getMessage());"},{"lineNumber":33,"author":{"gitId":"ManikaHennedige"},"content":"                    UI.requestInput();"},{"lineNumber":34,"author":{"gitId":"ManikaHennedige"},"content":"                } catch (TaskNotExistException e) {"},{"lineNumber":35,"author":{"gitId":"ManikaHennedige"},"content":"                    System.out.println(e.getMessage());"},{"lineNumber":36,"author":{"gitId":"ManikaHennedige"},"content":"                    UI.requestInput();"},{"lineNumber":37,"author":{"gitId":"ManikaHennedige"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":38,"author":{"gitId":"ManikaHennedige"},"content":"                    System.out.println(\"Please input the correct number of the task you wish to interact with\");"},{"lineNumber":39,"author":{"gitId":"ManikaHennedige"},"content":"                    UI.requestInput();"},{"lineNumber":40,"author":{"gitId":"ManikaHennedige"},"content":"                }"},{"lineNumber":41,"author":{"gitId":"ManikaHennedige"},"content":"                break;"},{"lineNumber":42,"author":{"gitId":"ManikaHennedige"},"content":"            case \"deadline\":"},{"lineNumber":43,"author":{"gitId":"ManikaHennedige"},"content":"                try {"},{"lineNumber":44,"author":{"gitId":"ManikaHennedige"},"content":"                    taskDetails \u003d parseTaskDetails(inputData);"},{"lineNumber":45,"author":{"gitId":"ManikaHennedige"},"content":"                    Deadline.checkDeadlineInput(taskDetails);"},{"lineNumber":46,"author":{"gitId":"ManikaHennedige"},"content":"                    Task.addNewTask(new Deadline(taskDetails[0], taskDetails[1]));"},{"lineNumber":47,"author":{"gitId":"ManikaHennedige"},"content":"                    UI.taskAddedSuccessfully();"},{"lineNumber":48,"author":{"gitId":"ManikaHennedige"},"content":"                    break;"},{"lineNumber":49,"author":{"gitId":"ManikaHennedige"},"content":"                } catch (MissingDueDateException e) {"},{"lineNumber":50,"author":{"gitId":"ManikaHennedige"},"content":"                    System.out.println(e.getMessage());"},{"lineNumber":51,"author":{"gitId":"ManikaHennedige"},"content":"                    UI.requestInput();"},{"lineNumber":52,"author":{"gitId":"ManikaHennedige"},"content":"                } catch (MissingTaskDescriptionException e) {"},{"lineNumber":53,"author":{"gitId":"ManikaHennedige"},"content":"                    System.out.println(e.getMessage());"},{"lineNumber":54,"author":{"gitId":"ManikaHennedige"},"content":"                    UI.requestInput();"},{"lineNumber":55,"author":{"gitId":"ManikaHennedige"},"content":"                }"},{"lineNumber":56,"author":{"gitId":"ManikaHennedige"},"content":"                break;"},{"lineNumber":57,"author":{"gitId":"ManikaHennedige"},"content":"            case \"event\":"},{"lineNumber":58,"author":{"gitId":"ManikaHennedige"},"content":"                try {"},{"lineNumber":59,"author":{"gitId":"ManikaHennedige"},"content":"                    taskDetails \u003d parseTaskDetails(inputData);"},{"lineNumber":60,"author":{"gitId":"ManikaHennedige"},"content":"                    Event.checkEventInput(taskDetails);"},{"lineNumber":61,"author":{"gitId":"ManikaHennedige"},"content":"                    Task.addNewTask(new Event(taskDetails[0], taskDetails[1]));"},{"lineNumber":62,"author":{"gitId":"ManikaHennedige"},"content":"                    UI.taskAddedSuccessfully();"},{"lineNumber":63,"author":{"gitId":"ManikaHennedige"},"content":"                    break;"},{"lineNumber":64,"author":{"gitId":"ManikaHennedige"},"content":"                } catch (MissingEventDurationException e) {"},{"lineNumber":65,"author":{"gitId":"ManikaHennedige"},"content":"                    System.out.println(e.getMessage());"},{"lineNumber":66,"author":{"gitId":"ManikaHennedige"},"content":"                    UI.requestInput();"},{"lineNumber":67,"author":{"gitId":"ManikaHennedige"},"content":"                } catch (MissingTaskDescriptionException e) {"},{"lineNumber":68,"author":{"gitId":"ManikaHennedige"},"content":"                    System.out.println(e.getMessage());"},{"lineNumber":69,"author":{"gitId":"ManikaHennedige"},"content":"                    UI.requestInput();"},{"lineNumber":70,"author":{"gitId":"ManikaHennedige"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"ManikaHennedige"},"content":"                break;"},{"lineNumber":72,"author":{"gitId":"ManikaHennedige"},"content":"            case \"todo\":"},{"lineNumber":73,"author":{"gitId":"ManikaHennedige"},"content":"                try {"},{"lineNumber":74,"author":{"gitId":"ManikaHennedige"},"content":"                    taskDetails \u003d parseTaskDetails(inputData);"},{"lineNumber":75,"author":{"gitId":"ManikaHennedige"},"content":"                    Todo.checkTodoInput(taskDetails);"},{"lineNumber":76,"author":{"gitId":"ManikaHennedige"},"content":"                    Task.addNewTask(new Todo(taskDetails[0]));"},{"lineNumber":77,"author":{"gitId":"ManikaHennedige"},"content":"                    UI.taskAddedSuccessfully();"},{"lineNumber":78,"author":{"gitId":"ManikaHennedige"},"content":"                    break;"},{"lineNumber":79,"author":{"gitId":"ManikaHennedige"},"content":"                } catch (MissingTaskDescriptionException e) {"},{"lineNumber":80,"author":{"gitId":"ManikaHennedige"},"content":"                    System.out.println(e.getMessage());"},{"lineNumber":81,"author":{"gitId":"ManikaHennedige"},"content":"                    UI.requestInput();"},{"lineNumber":82,"author":{"gitId":"ManikaHennedige"},"content":"                }"},{"lineNumber":83,"author":{"gitId":"ManikaHennedige"},"content":"                break;"},{"lineNumber":84,"author":{"gitId":"ManikaHennedige"},"content":"            default:"},{"lineNumber":85,"author":{"gitId":"ManikaHennedige"},"content":"                throw new InvalidInputException();"},{"lineNumber":86,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":89,"author":{"gitId":"ManikaHennedige"},"content":"    public static String[] parseTaskDetails(String[] inputData) {"},{"lineNumber":90,"author":{"gitId":"ManikaHennedige"},"content":"        String[] parsedData \u003d new String[2];"},{"lineNumber":91,"author":{"gitId":"ManikaHennedige"},"content":"        String prefix \u003d \"\";"},{"lineNumber":92,"author":{"gitId":"ManikaHennedige"},"content":"        StringBuilder inputDueDate \u003d new StringBuilder();"},{"lineNumber":93,"author":{"gitId":"ManikaHennedige"},"content":"        StringBuilder inputDescription \u003d new StringBuilder();"},{"lineNumber":94,"author":{"gitId":"ManikaHennedige"},"content":"        int separatorIndex \u003d -1;"},{"lineNumber":95,"author":{"gitId":"ManikaHennedige"},"content":"        // we start with \u00271\u0027 so we don\u0027t see the user-input category again"},{"lineNumber":96,"author":{"gitId":"ManikaHennedige"},"content":"        for (int i \u003d 1; i \u003c inputData.length; i++) {"},{"lineNumber":97,"author":{"gitId":"ManikaHennedige"},"content":"            if (inputData[i].equals(\"||\")) {"},{"lineNumber":98,"author":{"gitId":"ManikaHennedige"},"content":"                separatorIndex \u003d i;"},{"lineNumber":99,"author":{"gitId":"ManikaHennedige"},"content":"                break;"},{"lineNumber":100,"author":{"gitId":"ManikaHennedige"},"content":"            } else {"},{"lineNumber":101,"author":{"gitId":"ManikaHennedige"},"content":"                inputDescription.append(prefix).append(inputData[i]);"},{"lineNumber":102,"author":{"gitId":"ManikaHennedige"},"content":"                prefix \u003d \" \";"},{"lineNumber":103,"author":{"gitId":"ManikaHennedige"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"ManikaHennedige"},"content":"        parsedData[0] \u003d inputDescription.toString();"},{"lineNumber":106,"author":{"gitId":"ManikaHennedige"},"content":"        if (parsedData[0].equals(\"\")) {"},{"lineNumber":107,"author":{"gitId":"ManikaHennedige"},"content":"            parsedData[0] \u003d null;"},{"lineNumber":108,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"ManikaHennedige"},"content":"        // in case there is no indicative \u0027||\u0027"},{"lineNumber":110,"author":{"gitId":"ManikaHennedige"},"content":"        if (separatorIndex !\u003d -1) {"},{"lineNumber":111,"author":{"gitId":"ManikaHennedige"},"content":"            prefix \u003d \"\";"},{"lineNumber":112,"author":{"gitId":"ManikaHennedige"},"content":"            for (int j \u003d separatorIndex + 1; j \u003c inputData.length; j++) {"},{"lineNumber":113,"author":{"gitId":"ManikaHennedige"},"content":"                inputDueDate.append(prefix).append(inputData[j]);"},{"lineNumber":114,"author":{"gitId":"ManikaHennedige"},"content":"                prefix \u003d \" \";"},{"lineNumber":115,"author":{"gitId":"ManikaHennedige"},"content":"            }"},{"lineNumber":116,"author":{"gitId":"ManikaHennedige"},"content":"            // even if \u0027||\u0027 is present in the input, but nothing follows is"},{"lineNumber":117,"author":{"gitId":"ManikaHennedige"},"content":"            parsedData[1] \u003d inputDueDate.toString();"},{"lineNumber":118,"author":{"gitId":"ManikaHennedige"},"content":"            // validating data input would go here"},{"lineNumber":119,"author":{"gitId":"ManikaHennedige"},"content":"            if (parsedData[1].equals(\"\")) {"},{"lineNumber":120,"author":{"gitId":"ManikaHennedige"},"content":"                parsedData[1] \u003d null;"},{"lineNumber":121,"author":{"gitId":"ManikaHennedige"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"ManikaHennedige"},"content":"        } else {"},{"lineNumber":123,"author":{"gitId":"ManikaHennedige"},"content":"            parsedData[1] \u003d null;"},{"lineNumber":124,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"ManikaHennedige"},"content":"        return parsedData;"},{"lineNumber":126,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"ManikaHennedige"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":127}},{"path":"src/main/java/duke/datamanager/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"package duke.datamanager;"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"ManikaHennedige"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"ManikaHennedige"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"ManikaHennedige"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"ManikaHennedige"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":14,"author":{"gitId":"ManikaHennedige"},"content":"public class FileManager {"},{"lineNumber":15,"author":{"gitId":"ManikaHennedige"},"content":"    public static void readFile() throws IOException {"},{"lineNumber":16,"author":{"gitId":"ManikaHennedige"},"content":"        File data \u003d new File(\"data/savedata.txt\");"},{"lineNumber":17,"author":{"gitId":"ManikaHennedige"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":19,"author":{"gitId":"ManikaHennedige"},"content":"        Scanner sc \u003d new Scanner(data);"},{"lineNumber":20,"author":{"gitId":"ManikaHennedige"},"content":"        sc.nextLine(); // skip the first introductory line"},{"lineNumber":21,"author":{"gitId":"ManikaHennedige"},"content":"        while (sc.hasNext()) {"},{"lineNumber":22,"author":{"gitId":"ManikaHennedige"},"content":"            String taskInput \u003d sc.nextLine();"},{"lineNumber":23,"author":{"gitId":"ManikaHennedige"},"content":"            String[] taskComponents \u003d taskInput.split(\" \\\\| \");"},{"lineNumber":24,"author":{"gitId":"ManikaHennedige"},"content":"            switch (taskComponents[0]){"},{"lineNumber":25,"author":{"gitId":"ManikaHennedige"},"content":"                case \"E\":"},{"lineNumber":26,"author":{"gitId":"ManikaHennedige"},"content":"                    Event newEvent \u003d readEvent(taskComponents);"},{"lineNumber":27,"author":{"gitId":"ManikaHennedige"},"content":"                    Task.addNewTask(newEvent);"},{"lineNumber":28,"author":{"gitId":"ManikaHennedige"},"content":"                    break;"},{"lineNumber":29,"author":{"gitId":"ManikaHennedige"},"content":"                case \"D\":"},{"lineNumber":30,"author":{"gitId":"ManikaHennedige"},"content":"                    Deadline newDeadline \u003d readDeadline(taskComponents);"},{"lineNumber":31,"author":{"gitId":"ManikaHennedige"},"content":"                    Task.addNewTask(newDeadline);"},{"lineNumber":32,"author":{"gitId":"ManikaHennedige"},"content":"                    break;"},{"lineNumber":33,"author":{"gitId":"ManikaHennedige"},"content":"                case \"T\":"},{"lineNumber":34,"author":{"gitId":"ManikaHennedige"},"content":"                    Todo newTask \u003d readTodo(taskComponents);"},{"lineNumber":35,"author":{"gitId":"ManikaHennedige"},"content":"                    Task.addNewTask(newTask);"},{"lineNumber":36,"author":{"gitId":"ManikaHennedige"},"content":"                    break;"},{"lineNumber":37,"author":{"gitId":"ManikaHennedige"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":41,"author":{"gitId":"ManikaHennedige"},"content":"    public static void appendToFile(String filePath, String textToAppend) throws IOException {"},{"lineNumber":42,"author":{"gitId":"ManikaHennedige"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"},{"lineNumber":43,"author":{"gitId":"ManikaHennedige"},"content":"        fw.write(textToAppend + \u0027\\n\u0027);"},{"lineNumber":44,"author":{"gitId":"ManikaHennedige"},"content":"        fw.close();"},{"lineNumber":45,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":47,"author":{"gitId":"ManikaHennedige"},"content":"    public static void saveToFile() throws IOException {"},{"lineNumber":48,"author":{"gitId":"ManikaHennedige"},"content":"        String filePath \u003d \"data/savedata.txt\";"},{"lineNumber":49,"author":{"gitId":"ManikaHennedige"},"content":"        FileWriter firstLineWriter \u003d new FileWriter(filePath);"},{"lineNumber":50,"author":{"gitId":"ManikaHennedige"},"content":"        firstLineWriter.write(\"Duke\u0027s Most Recent Task List\\n\");"},{"lineNumber":51,"author":{"gitId":"ManikaHennedige"},"content":"        firstLineWriter.close();"},{"lineNumber":52,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":53,"author":{"gitId":"ManikaHennedige"},"content":"        for (int i \u003d 0; i \u003c Task.getTaskCounter(); i++){"},{"lineNumber":54,"author":{"gitId":"ManikaHennedige"},"content":"            Task task \u003d Task.getTaskList().get(i);"},{"lineNumber":55,"author":{"gitId":"ManikaHennedige"},"content":"            String textToAppend \u003d \"\";"},{"lineNumber":56,"author":{"gitId":"ManikaHennedige"},"content":"            if (task instanceof Event) {"},{"lineNumber":57,"author":{"gitId":"ManikaHennedige"},"content":"                textToAppend \u003d writeEvent((Event) task);"},{"lineNumber":58,"author":{"gitId":"ManikaHennedige"},"content":"            } else if (task instanceof Deadline) {"},{"lineNumber":59,"author":{"gitId":"ManikaHennedige"},"content":"                textToAppend \u003d writeDeadline((Deadline) task);"},{"lineNumber":60,"author":{"gitId":"ManikaHennedige"},"content":"            } else {"},{"lineNumber":61,"author":{"gitId":"ManikaHennedige"},"content":"                textToAppend \u003d writeTodo((Todo) task);"},{"lineNumber":62,"author":{"gitId":"ManikaHennedige"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"ManikaHennedige"},"content":"            appendToFile(filePath, textToAppend);"},{"lineNumber":64,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":67,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":68,"author":{"gitId":"ManikaHennedige"},"content":"    public static Todo readTodo(String[] taskComponents) {"},{"lineNumber":69,"author":{"gitId":"ManikaHennedige"},"content":"        Todo newTodo \u003d new Todo(taskComponents[2].trim());"},{"lineNumber":70,"author":{"gitId":"ManikaHennedige"},"content":"        boolean isDone \u003d taskComponents[1].equals(\"1\");"},{"lineNumber":71,"author":{"gitId":"ManikaHennedige"},"content":"        if (isDone) {"},{"lineNumber":72,"author":{"gitId":"ManikaHennedige"},"content":"            newTodo.markAsDone();"},{"lineNumber":73,"author":{"gitId":"ManikaHennedige"},"content":"            Task.incrementCompletedTaskCounter();"},{"lineNumber":74,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"ManikaHennedige"},"content":"        return newTodo;"},{"lineNumber":76,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":78,"author":{"gitId":"ManikaHennedige"},"content":"    public static Deadline readDeadline(String[] taskComponents) {"},{"lineNumber":79,"author":{"gitId":"ManikaHennedige"},"content":"        String[] deadlineData \u003d taskComponents[2].split(\"\\\\|\\\\|\");"},{"lineNumber":80,"author":{"gitId":"ManikaHennedige"},"content":"        Deadline newDeadline \u003d new Deadline(deadlineData[0].trim(), deadlineData[1].trim());"},{"lineNumber":81,"author":{"gitId":"ManikaHennedige"},"content":"        boolean isDone \u003d taskComponents[1].equals(\"1\");"},{"lineNumber":82,"author":{"gitId":"ManikaHennedige"},"content":"        if (isDone) {"},{"lineNumber":83,"author":{"gitId":"ManikaHennedige"},"content":"            newDeadline.markAsDone();"},{"lineNumber":84,"author":{"gitId":"ManikaHennedige"},"content":"            Task.incrementCompletedTaskCounter();"},{"lineNumber":85,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"ManikaHennedige"},"content":"        return newDeadline;"},{"lineNumber":87,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":89,"author":{"gitId":"ManikaHennedige"},"content":"    public static Event readEvent(String[] taskComponents) {"},{"lineNumber":90,"author":{"gitId":"ManikaHennedige"},"content":"        String[] eventData \u003d taskComponents[2].split(\"\\\\|\\\\|\");"},{"lineNumber":91,"author":{"gitId":"ManikaHennedige"},"content":"        Event newEvent \u003d new Event(eventData[0].trim(), eventData[1].trim());"},{"lineNumber":92,"author":{"gitId":"ManikaHennedige"},"content":"        boolean isDone \u003d taskComponents[1].equals(\"1\");"},{"lineNumber":93,"author":{"gitId":"ManikaHennedige"},"content":"        if (isDone) {"},{"lineNumber":94,"author":{"gitId":"ManikaHennedige"},"content":"            newEvent.markAsDone();"},{"lineNumber":95,"author":{"gitId":"ManikaHennedige"},"content":"            Task.incrementCompletedTaskCounter();"},{"lineNumber":96,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"ManikaHennedige"},"content":"        return newEvent;"},{"lineNumber":98,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":100,"author":{"gitId":"ManikaHennedige"},"content":"    public static String writeTodo(Todo todo) {"},{"lineNumber":101,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":102,"author":{"gitId":"ManikaHennedige"},"content":"        return \"T | \" +"},{"lineNumber":103,"author":{"gitId":"ManikaHennedige"},"content":"                isDoneWriter(todo) +"},{"lineNumber":104,"author":{"gitId":"ManikaHennedige"},"content":"                todo.getDescription();"},{"lineNumber":105,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":107,"author":{"gitId":"ManikaHennedige"},"content":"    public static String writeDeadline(Deadline deadline) {"},{"lineNumber":108,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":109,"author":{"gitId":"ManikaHennedige"},"content":"        return \"D | \" +"},{"lineNumber":110,"author":{"gitId":"ManikaHennedige"},"content":"                isDoneWriter(deadline) +"},{"lineNumber":111,"author":{"gitId":"ManikaHennedige"},"content":"                deadline.getDescription() +"},{"lineNumber":112,"author":{"gitId":"ManikaHennedige"},"content":"                \" || \" +"},{"lineNumber":113,"author":{"gitId":"ManikaHennedige"},"content":"                deadline.getDateTime();"},{"lineNumber":114,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":115,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":117,"author":{"gitId":"ManikaHennedige"},"content":"    public static String writeEvent(Event event) {"},{"lineNumber":118,"author":{"gitId":"ManikaHennedige"},"content":"        return \"E | \" +"},{"lineNumber":119,"author":{"gitId":"ManikaHennedige"},"content":"                isDoneWriter(event) +"},{"lineNumber":120,"author":{"gitId":"ManikaHennedige"},"content":"                event.getDescription() +"},{"lineNumber":121,"author":{"gitId":"ManikaHennedige"},"content":"                \" || \" +"},{"lineNumber":122,"author":{"gitId":"ManikaHennedige"},"content":"                event.getDateTime();"},{"lineNumber":123,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":125,"author":{"gitId":"ManikaHennedige"},"content":"    public static String isDoneWriter(Task task){"},{"lineNumber":126,"author":{"gitId":"ManikaHennedige"},"content":"        if (task.isDone()) {"},{"lineNumber":127,"author":{"gitId":"ManikaHennedige"},"content":"            return \"1 | \";"},{"lineNumber":128,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"ManikaHennedige"},"content":"        else {"},{"lineNumber":130,"author":{"gitId":"ManikaHennedige"},"content":"            return \"0 | \";"},{"lineNumber":131,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":134,"author":{"gitId":"ManikaHennedige"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":134}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"public class InvalidInputException extends Exception {"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":"        return \"I don\u0027t understand...please enter a valid command\";"},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":"}"},{"lineNumber":9,"author":{"gitId":"ManikaHennedige"},"content":""}],"authorContributionMap":{"ManikaHennedige":9}},{"path":"src/main/java/duke/exception/MissingDueDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"public class MissingDueDateException extends Exception {"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":"        return \"Hmm...have you input the due date for the deadline?\";"},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":8}},{"path":"src/main/java/duke/exception/MissingEventDurationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"public class MissingEventDurationException extends Exception {"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":"        return \"Hmm...have you input the duration of the event?\";"},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":8}},{"path":"src/main/java/duke/exception/MissingTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"public class MissingTaskDescriptionException extends Exception {"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":"        return \"Hmm...have you input the description of the task?\";"},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":8}},{"path":"src/main/java/duke/exception/TaskAlreadyCompletedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"public class TaskAlreadyCompletedException extends Exception {"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":"        return \"You have already marked this task as complete! Please choose an incomplete task.\";"},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":8}},{"path":"src/main/java/duke/exception/TaskNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"public class TaskNotExistException extends Exception {"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":"        return \"This task doesn\u0027t exist! Please choose a valid task!\";"},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":8}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"import duke.exception.MissingDueDateException;"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":"import duke.exception.MissingTaskDescriptionException;"},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":"    protected String dueDate;"},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":9,"author":{"gitId":"ManikaHennedige"},"content":"    public Deadline(String task, String dueDate) {"},{"lineNumber":10,"author":{"gitId":"ManikaHennedige"},"content":"        super(task);"},{"lineNumber":11,"author":{"gitId":"ManikaHennedige"},"content":"        this.dueDate \u003d dueDate;"},{"lineNumber":12,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":14,"author":{"gitId":"ManikaHennedige"},"content":"    public String getDateTime(){"},{"lineNumber":15,"author":{"gitId":"ManikaHennedige"},"content":"        return this.dueDate;"},{"lineNumber":16,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":18,"author":{"gitId":"ManikaHennedige"},"content":"    public String toBaseString(){"},{"lineNumber":19,"author":{"gitId":"ManikaHennedige"},"content":"        return super.toString();"},{"lineNumber":20,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":22,"author":{"gitId":"ManikaHennedige"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"ManikaHennedige"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"ManikaHennedige"},"content":"        return \"Deadline : \" + toBaseString() + \" || Due by: \" + this.getDateTime();"},{"lineNumber":25,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":27,"author":{"gitId":"ManikaHennedige"},"content":"    // Exceptions"},{"lineNumber":28,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":29,"author":{"gitId":"ManikaHennedige"},"content":"    public static void checkDeadlineInput(String[] taskDetails) throws MissingDueDateException, MissingTaskDescriptionException {"},{"lineNumber":30,"author":{"gitId":"ManikaHennedige"},"content":"        if (taskDetails[0] \u003d\u003d null){"},{"lineNumber":31,"author":{"gitId":"ManikaHennedige"},"content":"            throw new MissingTaskDescriptionException();"},{"lineNumber":32,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"ManikaHennedige"},"content":"        if (taskDetails[1] \u003d\u003d null) {"},{"lineNumber":34,"author":{"gitId":"ManikaHennedige"},"content":"            throw new MissingDueDateException();"},{"lineNumber":35,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":37,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"ManikaHennedige"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":38}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"import duke.exception.MissingEventDurationException;"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":"import duke.exception.MissingTaskDescriptionException;"},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":"public class Event extends Deadline {"},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":"    public Event(String description, String eventDuration) {"},{"lineNumber":9,"author":{"gitId":"ManikaHennedige"},"content":"        super(description, eventDuration);"},{"lineNumber":10,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":12,"author":{"gitId":"ManikaHennedige"},"content":"    public String toString(){"},{"lineNumber":13,"author":{"gitId":"ManikaHennedige"},"content":"        return \"Event : \" + super.toBaseString() + \" || Happening on: \" + this.getDateTime();"},{"lineNumber":14,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":16,"author":{"gitId":"ManikaHennedige"},"content":"    // Exceptions"},{"lineNumber":17,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":18,"author":{"gitId":"ManikaHennedige"},"content":"    public static void checkEventInput(String[] taskDetails) throws MissingEventDurationException, MissingTaskDescriptionException {"},{"lineNumber":19,"author":{"gitId":"ManikaHennedige"},"content":"        if (taskDetails[0] \u003d\u003d null){"},{"lineNumber":20,"author":{"gitId":"ManikaHennedige"},"content":"            throw new MissingTaskDescriptionException();"},{"lineNumber":21,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"ManikaHennedige"},"content":"        if (taskDetails[1] \u003d\u003d null) {"},{"lineNumber":23,"author":{"gitId":"ManikaHennedige"},"content":"            throw new MissingEventDurationException();"},{"lineNumber":24,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":26,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":28,"author":{"gitId":"ManikaHennedige"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":28}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"import duke.exception.TaskAlreadyCompletedException;"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":"import duke.exception.TaskNotExistException;"},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"ManikaHennedige"},"content":"    private boolean isDone;"},{"lineNumber":10,"author":{"gitId":"ManikaHennedige"},"content":"    private String description;"},{"lineNumber":11,"author":{"gitId":"ManikaHennedige"},"content":"    private static int taskCounter \u003d 0;"},{"lineNumber":12,"author":{"gitId":"ManikaHennedige"},"content":"    private static int completedTaskCounter \u003d 0;"},{"lineNumber":13,"author":{"gitId":"ManikaHennedige"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"ManikaHennedige"},"content":"    private static Task recentTask;"},{"lineNumber":15,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":16,"author":{"gitId":"ManikaHennedige"},"content":"    public Task(String description){"},{"lineNumber":17,"author":{"gitId":"ManikaHennedige"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"ManikaHennedige"},"content":"        // default status for isDone is false"},{"lineNumber":19,"author":{"gitId":"ManikaHennedige"},"content":"        isDone \u003d false;"},{"lineNumber":20,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":22,"author":{"gitId":"ManikaHennedige"},"content":"    public boolean isDone() {"},{"lineNumber":23,"author":{"gitId":"ManikaHennedige"},"content":"        return isDone;"},{"lineNumber":24,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":26,"author":{"gitId":"ManikaHennedige"},"content":"    public String getDescription() {"},{"lineNumber":27,"author":{"gitId":"ManikaHennedige"},"content":"        return description;"},{"lineNumber":28,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":30,"author":{"gitId":"ManikaHennedige"},"content":"    public void markAsDone(){"},{"lineNumber":31,"author":{"gitId":"ManikaHennedige"},"content":"        this.isDone \u003d true;"},{"lineNumber":32,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":34,"author":{"gitId":"ManikaHennedige"},"content":"    public String getStatusIcon(){"},{"lineNumber":35,"author":{"gitId":"ManikaHennedige"},"content":"        return (isDone ? \"[ \\u2713 ] \" : \"[ \\u2718 ] \");"},{"lineNumber":36,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":38,"author":{"gitId":"ManikaHennedige"},"content":"    // static methods for all the Tasks"},{"lineNumber":39,"author":{"gitId":"ManikaHennedige"},"content":"    public static int getTaskCounter() {"},{"lineNumber":40,"author":{"gitId":"ManikaHennedige"},"content":"        return taskCounter;"},{"lineNumber":41,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":43,"author":{"gitId":"ManikaHennedige"},"content":"    public static int getRemainingTasks() {"},{"lineNumber":44,"author":{"gitId":"ManikaHennedige"},"content":"        return taskCounter - completedTaskCounter;"},{"lineNumber":45,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":47,"author":{"gitId":"ManikaHennedige"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":48,"author":{"gitId":"ManikaHennedige"},"content":"        return tasks;"},{"lineNumber":49,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":51,"author":{"gitId":"ManikaHennedige"},"content":"    public static void addNewTask(Task newTask) {"},{"lineNumber":52,"author":{"gitId":"ManikaHennedige"},"content":"        tasks.add(newTask);"},{"lineNumber":53,"author":{"gitId":"ManikaHennedige"},"content":"        incrementTaskCounter();"},{"lineNumber":54,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":56,"author":{"gitId":"ManikaHennedige"},"content":"    public static void deleteTask(int taskNumber){"},{"lineNumber":57,"author":{"gitId":"ManikaHennedige"},"content":"        recentTask \u003d tasks.get(taskNumber);"},{"lineNumber":58,"author":{"gitId":"ManikaHennedige"},"content":"        if (tasks.get(taskNumber).isDone) {"},{"lineNumber":59,"author":{"gitId":"ManikaHennedige"},"content":"            completedTaskCounter--;"},{"lineNumber":60,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"ManikaHennedige"},"content":"        tasks.remove(taskNumber);"},{"lineNumber":62,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(\"The deleted task is : \" + recentTask);"},{"lineNumber":63,"author":{"gitId":"ManikaHennedige"},"content":"        taskCounter--;"},{"lineNumber":64,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":66,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":67,"author":{"gitId":"ManikaHennedige"},"content":"    public static void completeTask(int taskNumber) {"},{"lineNumber":68,"author":{"gitId":"ManikaHennedige"},"content":"        tasks.get(taskNumber).markAsDone();"},{"lineNumber":69,"author":{"gitId":"ManikaHennedige"},"content":"        recentTask \u003d tasks.get(taskNumber);"},{"lineNumber":70,"author":{"gitId":"ManikaHennedige"},"content":"        // completedTaskIndex \u003d taskNumber;"},{"lineNumber":71,"author":{"gitId":"ManikaHennedige"},"content":"        completedTaskCounter -\u003d -1;"},{"lineNumber":72,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":74,"author":{"gitId":"ManikaHennedige"},"content":"    public static Task getRecentTask(boolean manipulatedTask) {"},{"lineNumber":75,"author":{"gitId":"ManikaHennedige"},"content":"        if (manipulatedTask) {"},{"lineNumber":76,"author":{"gitId":"ManikaHennedige"},"content":"            return recentTask;"},{"lineNumber":77,"author":{"gitId":"ManikaHennedige"},"content":"        } else {"},{"lineNumber":78,"author":{"gitId":"ManikaHennedige"},"content":"            return tasks.get(getTaskCounter() - 1);"},{"lineNumber":79,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":82,"author":{"gitId":"ManikaHennedige"},"content":"    public static void incrementTaskCounter(){"},{"lineNumber":83,"author":{"gitId":"ManikaHennedige"},"content":"        taskCounter++;"},{"lineNumber":84,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":86,"author":{"gitId":"ManikaHennedige"},"content":"    public static void incrementCompletedTaskCounter() {"},{"lineNumber":87,"author":{"gitId":"ManikaHennedige"},"content":"        completedTaskCounter++;"},{"lineNumber":88,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":90,"author":{"gitId":"ManikaHennedige"},"content":"    // standard string return format for all tasks subclasses expand on this format"},{"lineNumber":91,"author":{"gitId":"ManikaHennedige"},"content":"    @Override"},{"lineNumber":92,"author":{"gitId":"ManikaHennedige"},"content":"    public String toString(){"},{"lineNumber":93,"author":{"gitId":"ManikaHennedige"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();"},{"lineNumber":94,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":96,"author":{"gitId":"ManikaHennedige"},"content":"    // Check for exceptions"},{"lineNumber":97,"author":{"gitId":"ManikaHennedige"},"content":"    public static void checkTaskIndex(int queryTask) throws TaskNotExistException {"},{"lineNumber":98,"author":{"gitId":"ManikaHennedige"},"content":"        if (queryTask \u003e taskCounter - 1) {"},{"lineNumber":99,"author":{"gitId":"ManikaHennedige"},"content":"            throw new TaskNotExistException();"},{"lineNumber":100,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":103,"author":{"gitId":"ManikaHennedige"},"content":"    public static void checkTaskComplete(int queryTask) throws  TaskAlreadyCompletedException {"},{"lineNumber":104,"author":{"gitId":"ManikaHennedige"},"content":"        if (tasks.get(queryTask).isDone()) {"},{"lineNumber":105,"author":{"gitId":"ManikaHennedige"},"content":"            throw new TaskAlreadyCompletedException();"},{"lineNumber":106,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"ManikaHennedige"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":108}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"import duke.exception.MissingTaskDescriptionException;"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":"public class Todo extends Task {"},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":"    public Todo(String description) {"},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":11,"author":{"gitId":"ManikaHennedige"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"ManikaHennedige"},"content":"    public String toString(){"},{"lineNumber":13,"author":{"gitId":"ManikaHennedige"},"content":"        return \"Todo : \" + super.toString();"},{"lineNumber":14,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":16,"author":{"gitId":"ManikaHennedige"},"content":"    public static void checkTodoInput(String[] taskDetails) throws MissingTaskDescriptionException {"},{"lineNumber":17,"author":{"gitId":"ManikaHennedige"},"content":"        if (taskDetails[0] \u003d\u003d null) {"},{"lineNumber":18,"author":{"gitId":"ManikaHennedige"},"content":"            throw new MissingTaskDescriptionException();"},{"lineNumber":19,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":22,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":23,"author":{"gitId":"ManikaHennedige"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":23}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"import duke.datamanager.FileManager;"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":"public class UI {"},{"lineNumber":9,"author":{"gitId":"ManikaHennedige"},"content":"    public static String logo \u003d \" ____        _        \\n\""},{"lineNumber":10,"author":{"gitId":"ManikaHennedige"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":11,"author":{"gitId":"ManikaHennedige"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":12,"author":{"gitId":"ManikaHennedige"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":13,"author":{"gitId":"ManikaHennedige"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":14,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":15,"author":{"gitId":"ManikaHennedige"},"content":"    public static String divider \u003d \"-----------------------------------\";"},{"lineNumber":16,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":17,"author":{"gitId":"ManikaHennedige"},"content":"    public static void showWelcomeScreen() {"},{"lineNumber":18,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":19,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(divider);"},{"lineNumber":20,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(\"Hello there! I\u0027m Duke\");"},{"lineNumber":21,"author":{"gitId":"ManikaHennedige"},"content":"        showLoadDataScreen();"},{"lineNumber":22,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(\"I have the high ground! How may I help you?\");"},{"lineNumber":23,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(divider);"},{"lineNumber":24,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":26,"author":{"gitId":"ManikaHennedige"},"content":"    public static void showLoadDataScreen() {"},{"lineNumber":27,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(\"Searching for saved data...\");"},{"lineNumber":28,"author":{"gitId":"ManikaHennedige"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"ManikaHennedige"},"content":"            FileManager.readFile();"},{"lineNumber":30,"author":{"gitId":"ManikaHennedige"},"content":"            System.out.println(\"Loading saved data...\");"},{"lineNumber":31,"author":{"gitId":"ManikaHennedige"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"ManikaHennedige"},"content":"            System.out.println(\"No data found - please ensure that a directory \" +"},{"lineNumber":33,"author":{"gitId":"ManikaHennedige"},"content":"                    \"called \u0027data\u0027 is in your project directory\");"},{"lineNumber":34,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":37,"author":{"gitId":"ManikaHennedige"},"content":"    public static void showSaveDataScreen() {"},{"lineNumber":38,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(\"Saving data...\");"},{"lineNumber":39,"author":{"gitId":"ManikaHennedige"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"ManikaHennedige"},"content":"            FileManager.saveToFile();"},{"lineNumber":41,"author":{"gitId":"ManikaHennedige"},"content":"            System.out.println(\"Data saved successfully!\");"},{"lineNumber":42,"author":{"gitId":"ManikaHennedige"},"content":"        } catch (IOException e) {"},{"lineNumber":43,"author":{"gitId":"ManikaHennedige"},"content":"            System.out.println(\"Unable to save - please create a directory called \u0027data\u0027 in the project directory!\");"},{"lineNumber":44,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":47,"author":{"gitId":"ManikaHennedige"},"content":"    public static void requestInput() {"},{"lineNumber":48,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(divider);"},{"lineNumber":49,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(\"What is thy bidding, my master?\");"},{"lineNumber":50,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(divider);"},{"lineNumber":51,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":53,"author":{"gitId":"ManikaHennedige"},"content":"    public static void showAllTasks() {"},{"lineNumber":54,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(\"This is your current list:\");"},{"lineNumber":55,"author":{"gitId":"ManikaHennedige"},"content":"        for (int i \u003d 0; i \u003c Task.getTaskCounter(); i++){"},{"lineNumber":56,"author":{"gitId":"ManikaHennedige"},"content":"            int displayedTask \u003d i + 1;"},{"lineNumber":57,"author":{"gitId":"ManikaHennedige"},"content":"            System.out.println(displayedTask + \". \" + Task.getTaskList().get(i));"},{"lineNumber":58,"author":{"gitId":"ManikaHennedige"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(\"Of these tasks, you still have \" + Task.getRemainingTasks() + \" to complete!\");"},{"lineNumber":60,"author":{"gitId":"ManikaHennedige"},"content":"        UI.requestInput();"},{"lineNumber":61,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":63,"author":{"gitId":"ManikaHennedige"},"content":"    public static void taskAddedSuccessfully() {"},{"lineNumber":64,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(\"Roger Roger. The following task has been added:\");"},{"lineNumber":65,"author":{"gitId":"ManikaHennedige"},"content":"        boolean getCompletedTask \u003d false;"},{"lineNumber":66,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(Task.getRecentTask(getCompletedTask));"},{"lineNumber":67,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(\"You now have \" + Task.getTaskCounter() + \" tasks in your list!\");"},{"lineNumber":68,"author":{"gitId":"ManikaHennedige"},"content":"        showSaveDataScreen();"},{"lineNumber":69,"author":{"gitId":"ManikaHennedige"},"content":"        UI.requestInput();"},{"lineNumber":70,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":72,"author":{"gitId":"ManikaHennedige"},"content":"    public static void taskCompletedSuccessfully() {"},{"lineNumber":73,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(\"The Force is with you! The following task has been marked as done:\");"},{"lineNumber":74,"author":{"gitId":"ManikaHennedige"},"content":"        boolean getCompletedTask \u003d true;"},{"lineNumber":75,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(Task.getRecentTask(getCompletedTask));"},{"lineNumber":76,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(\"You still have \" + Task.getRemainingTasks() + \" tasks to complete in your list!\");"},{"lineNumber":77,"author":{"gitId":"ManikaHennedige"},"content":"        showSaveDataScreen();"},{"lineNumber":78,"author":{"gitId":"ManikaHennedige"},"content":"        UI.requestInput();"},{"lineNumber":79,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":81,"author":{"gitId":"ManikaHennedige"},"content":"    public static void taskDeletedSuccessfully() {"},{"lineNumber":82,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(\"I am altering the deal. The following task has been deleted:\");"},{"lineNumber":83,"author":{"gitId":"ManikaHennedige"},"content":"        boolean getDeletedTask \u003d true;"},{"lineNumber":84,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(Task.getRecentTask(getDeletedTask));"},{"lineNumber":85,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(\"You still have \" + Task.getRemainingTasks() + \" tasks to complete in your list!\");"},{"lineNumber":86,"author":{"gitId":"ManikaHennedige"},"content":"        showSaveDataScreen();"},{"lineNumber":87,"author":{"gitId":"ManikaHennedige"},"content":"        UI.requestInput();"},{"lineNumber":88,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":90,"author":{"gitId":"ManikaHennedige"},"content":"    public static void showFarewellScreen() {"},{"lineNumber":91,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(UI.divider);"},{"lineNumber":92,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(\"Bye! Hope to hear from you again soon!\");"},{"lineNumber":93,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(UI.divider);"},{"lineNumber":94,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"ManikaHennedige"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":95}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"todo Manika Hennedige: Answer CS2113 tutorial questions"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":"deadline weekly CS2113 || Monday 9pm"},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"list"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":"event CS2113 || Friday 4-6pm"},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":"list"},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":"deadline kill all the jedi ||"},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":"event master the force"},{"lineNumber":9,"author":{"gitId":"ManikaHennedige"},"content":"event || master the Force"}],"authorContributionMap":{"ManikaHennedige":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"ManikaHennedige"},"content":"java -classpath ..\\bin duke.controller.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"ManikaHennedige":1,"-":20}}]
