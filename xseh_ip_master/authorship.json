[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"xseh"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"xseh"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"xseh"},"content":""},{"lineNumber":11,"author":{"gitId":"xseh"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"xseh"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"xseh"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"xseh"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"xseh"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"xseh"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"xseh":9,"-":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xseh"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"xseh"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"xseh"},"content":"        System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":6,"author":{"gitId":"xseh"},"content":"        System.out.println(\"     Hello! I\u0027m Duke\");"},{"lineNumber":7,"author":{"gitId":"xseh"},"content":"        System.out.println(\"     What can I do for you?\");"},{"lineNumber":8,"author":{"gitId":"xseh"},"content":"        System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":9,"author":{"gitId":"xseh"},"content":""},{"lineNumber":10,"author":{"gitId":"xseh"},"content":"        Task[] list \u003d new Task[100];"},{"lineNumber":11,"author":{"gitId":"xseh"},"content":"        int lengthOfList \u003d 0;"},{"lineNumber":12,"author":{"gitId":"xseh"},"content":""},{"lineNumber":13,"author":{"gitId":"xseh"},"content":"        while (true) {"},{"lineNumber":14,"author":{"gitId":"xseh"},"content":"            Scanner in \u003d new Scanner(System.in);"},{"lineNumber":15,"author":{"gitId":"xseh"},"content":"            // Remove trailing spaces"},{"lineNumber":16,"author":{"gitId":"xseh"},"content":"            String command \u003d in.nextLine().trim();"},{"lineNumber":17,"author":{"gitId":"xseh"},"content":""},{"lineNumber":18,"author":{"gitId":"xseh"},"content":"            switch (command.split(\" \")[0].toLowerCase()) {"},{"lineNumber":19,"author":{"gitId":"xseh"},"content":"            case \"bye\":"},{"lineNumber":20,"author":{"gitId":"xseh"},"content":"                // Print bye statement and exit program"},{"lineNumber":21,"author":{"gitId":"xseh"},"content":"                // Fallthrough"},{"lineNumber":22,"author":{"gitId":"xseh"},"content":"                System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":23,"author":{"gitId":"xseh"},"content":"                System.out.println(\"     Bye. Hope to see you again soon!\");"},{"lineNumber":24,"author":{"gitId":"xseh"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");"},{"lineNumber":25,"author":{"gitId":"xseh"},"content":"                in.close();"},{"lineNumber":26,"author":{"gitId":"xseh"},"content":"                return;"},{"lineNumber":27,"author":{"gitId":"xseh"},"content":"            case \"list\":"},{"lineNumber":28,"author":{"gitId":"xseh"},"content":"                // Print every task in list"},{"lineNumber":29,"author":{"gitId":"xseh"},"content":"                System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":30,"author":{"gitId":"xseh"},"content":"                System.out.println(\"     Here are the tasks in your list: \");"},{"lineNumber":31,"author":{"gitId":"xseh"},"content":"                for (int i \u003d 0; i \u003c lengthOfList; i++) {"},{"lineNumber":32,"author":{"gitId":"xseh"},"content":"                    System.out.println(String.format(\"     %d.[%s] %s\", i+1, list[i].getStatusIcon(), "},{"lineNumber":33,"author":{"gitId":"xseh"},"content":"                        list[i].getDescription()));"},{"lineNumber":34,"author":{"gitId":"xseh"},"content":"                }"},{"lineNumber":35,"author":{"gitId":"xseh"},"content":""},{"lineNumber":36,"author":{"gitId":"xseh"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");"},{"lineNumber":37,"author":{"gitId":"xseh"},"content":"                break;"},{"lineNumber":38,"author":{"gitId":"xseh"},"content":"            case \"done\":"},{"lineNumber":39,"author":{"gitId":"xseh"},"content":"                System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":40,"author":{"gitId":"xseh"},"content":"                int taskNumber \u003d Integer.parseInt(command.substring(command.indexOf(\" \")+1)) - 1;"},{"lineNumber":41,"author":{"gitId":"xseh"},"content":"                // Ensure that the task number fit the length of task"},{"lineNumber":42,"author":{"gitId":"xseh"},"content":"                if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c lengthOfList) {"},{"lineNumber":43,"author":{"gitId":"xseh"},"content":"                    list[taskNumber].setStatus();"},{"lineNumber":44,"author":{"gitId":"xseh"},"content":"                    "},{"lineNumber":45,"author":{"gitId":"xseh"},"content":"                    System.out.println(\"     Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":46,"author":{"gitId":"xseh"},"content":"                    System.out.println(String.format(\"       [%s] %s\", list[taskNumber].getStatusIcon(), "},{"lineNumber":47,"author":{"gitId":"xseh"},"content":"                        list[taskNumber].getDescription()));"},{"lineNumber":48,"author":{"gitId":"xseh"},"content":"                } else {"},{"lineNumber":49,"author":{"gitId":"xseh"},"content":"                    System.out.println(\"     Task not found!\");"},{"lineNumber":50,"author":{"gitId":"xseh"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"xseh"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");"},{"lineNumber":52,"author":{"gitId":"xseh"},"content":"                break;"},{"lineNumber":53,"author":{"gitId":"xseh"},"content":"            case \"\": "},{"lineNumber":54,"author":{"gitId":"xseh"},"content":"                // If no command detected, do nothing and await another command"},{"lineNumber":55,"author":{"gitId":"xseh"},"content":"                break;"},{"lineNumber":56,"author":{"gitId":"xseh"},"content":"            default:"},{"lineNumber":57,"author":{"gitId":"xseh"},"content":"                // Add new Task to list"},{"lineNumber":58,"author":{"gitId":"xseh"},"content":"                list[lengthOfList] \u003d new Task(command);"},{"lineNumber":59,"author":{"gitId":"xseh"},"content":"                lengthOfList++;"},{"lineNumber":60,"author":{"gitId":"xseh"},"content":""},{"lineNumber":61,"author":{"gitId":"xseh"},"content":"                // Print notification of addition"},{"lineNumber":62,"author":{"gitId":"xseh"},"content":"                System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":63,"author":{"gitId":"xseh"},"content":"                System.out.println(\"     added: \" + command);"},{"lineNumber":64,"author":{"gitId":"xseh"},"content":"                System.out.println(\"    ____________________________________________________________\\n\");"},{"lineNumber":65,"author":{"gitId":"xseh"},"content":"                break;"},{"lineNumber":66,"author":{"gitId":"xseh"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"xseh"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"xseh":65,"-":4}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xseh"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"xseh"},"content":"    /** Description of task */"},{"lineNumber":3,"author":{"gitId":"xseh"},"content":"    protected String description;"},{"lineNumber":4,"author":{"gitId":"xseh"},"content":"    /** Boolean to track if task is completed */"},{"lineNumber":5,"author":{"gitId":"xseh"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"xseh"},"content":""},{"lineNumber":7,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"xseh"},"content":"     * Creates a Task object with the given description. "},{"lineNumber":9,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":10,"author":{"gitId":"xseh"},"content":"     * @param description Task description. "},{"lineNumber":11,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"xseh"},"content":"    public Task(String description) {"},{"lineNumber":13,"author":{"gitId":"xseh"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"xseh"},"content":"        this.isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"xseh"},"content":""},{"lineNumber":17,"author":{"gitId":"xseh"},"content":"    public String getDescription() {"},{"lineNumber":18,"author":{"gitId":"xseh"},"content":"        return description;"},{"lineNumber":19,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"xseh"},"content":""},{"lineNumber":21,"author":{"gitId":"xseh"},"content":"    public void setDescription(String description) {"},{"lineNumber":22,"author":{"gitId":"xseh"},"content":"        this.description \u003d description;"},{"lineNumber":23,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"xseh"},"content":""},{"lineNumber":25,"author":{"gitId":"xseh"},"content":"    public boolean getStatus() {"},{"lineNumber":26,"author":{"gitId":"xseh"},"content":"        return isDone;"},{"lineNumber":27,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"xseh"},"content":""},{"lineNumber":29,"author":{"gitId":"xseh"},"content":"    public void setStatus() {"},{"lineNumber":30,"author":{"gitId":"xseh"},"content":"        isDone \u003d true;"},{"lineNumber":31,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"xseh"},"content":""},{"lineNumber":33,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"xseh"},"content":"     * Returns the status icon depending on isDone boolean. "},{"lineNumber":35,"author":{"gitId":"xseh"},"content":"     * If the task is done (i.e. isDone is true), \"X\" is returned. "},{"lineNumber":36,"author":{"gitId":"xseh"},"content":"     * If the task is not done (i.e. isDone is false), \" \" is returned. "},{"lineNumber":37,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":38,"author":{"gitId":"xseh"},"content":"     * @return Status icon"},{"lineNumber":39,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"xseh"},"content":"    public String getStatusIcon() {"},{"lineNumber":41,"author":{"gitId":"xseh"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":42,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"xseh"},"content":"}"}],"authorContributionMap":{"xseh":43}}]
