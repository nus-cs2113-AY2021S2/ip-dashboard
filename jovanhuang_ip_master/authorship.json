[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jovanhuang"},"content":"# Duke\u0027s User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"jovanhuang"},"content":"## Quick start to Jovan\u0027s Duke program!"},{"lineNumber":4,"author":{"gitId":"jovanhuang"},"content":"1) Ensure that you have Java 11 or above installed."},{"lineNumber":5,"author":{"gitId":"jovanhuang"},"content":"2) Download the latest version of `Duke` from [here](https://github.com/jovanhuang/ip/releases/download/A-Release/IP.jar)."},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"jovanhuang"},"content":"## Features in Duke Program"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"jovanhuang"},"content":"### View tasks in list: `list`"},{"lineNumber":10,"author":{"gitId":"jovanhuang"},"content":"Show the list of tasks"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"jovanhuang"},"content":"#### Format: `list`"},{"lineNumber":13,"author":{"gitId":"jovanhuang"},"content":"##### Example of Usage:"},{"lineNumber":14,"author":{"gitId":"jovanhuang"},"content":"Input:"},{"lineNumber":15,"author":{"gitId":"jovanhuang"},"content":"```text"},{"lineNumber":16,"author":{"gitId":"jovanhuang"},"content":"list"},{"lineNumber":17,"author":{"gitId":"jovanhuang"},"content":"```"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"jovanhuang"},"content":"Output:"},{"lineNumber":20,"author":{"gitId":"jovanhuang"},"content":"```text"},{"lineNumber":21,"author":{"gitId":"jovanhuang"},"content":"Here are the tasks in your list:"},{"lineNumber":22,"author":{"gitId":"jovanhuang"},"content":"1.[T][ ] dance"},{"lineNumber":23,"author":{"gitId":"jovanhuang"},"content":"2.[D][ ] Finish CS3245 (by: Thurs 2pm)"},{"lineNumber":24,"author":{"gitId":"jovanhuang"},"content":"3.[E][ ] sleep (at: 2pm-4pm)"},{"lineNumber":25,"author":{"gitId":"jovanhuang"},"content":"4.[T][ ] danceeeee"},{"lineNumber":26,"author":{"gitId":"jovanhuang"},"content":"```"},{"lineNumber":27,"author":{"gitId":"jovanhuang"},"content":"### Delete tasks : `delete`"},{"lineNumber":28,"author":{"gitId":"jovanhuang"},"content":"Delete task using task number"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"jovanhuang"},"content":"#### Format: `delete TASKNUMBER`"},{"lineNumber":31,"author":{"gitId":"jovanhuang"},"content":"##### Example of Usage:"},{"lineNumber":32,"author":{"gitId":"jovanhuang"},"content":"Input:"},{"lineNumber":33,"author":{"gitId":"jovanhuang"},"content":"```text"},{"lineNumber":34,"author":{"gitId":"jovanhuang"},"content":"delete 3"},{"lineNumber":35,"author":{"gitId":"jovanhuang"},"content":"```"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"jovanhuang"},"content":"Output:"},{"lineNumber":38,"author":{"gitId":"jovanhuang"},"content":"```text"},{"lineNumber":39,"author":{"gitId":"jovanhuang"},"content":"Noted. I\u0027ve removed this task:"},{"lineNumber":40,"author":{"gitId":"jovanhuang"},"content":"[E][ ] sleep (at: 2pm-4pm)"},{"lineNumber":41,"author":{"gitId":"jovanhuang"},"content":"Now you have 3 tasks in the list."},{"lineNumber":42,"author":{"gitId":"jovanhuang"},"content":"```"},{"lineNumber":43,"author":{"gitId":"jovanhuang"},"content":"### Mark task as completed: `done`"},{"lineNumber":44,"author":{"gitId":"jovanhuang"},"content":"Marks a task as completed using task number"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"jovanhuang"},"content":"#### Format: `done TASKNUMBER`"},{"lineNumber":47,"author":{"gitId":"jovanhuang"},"content":"##### Example of Usage:"},{"lineNumber":48,"author":{"gitId":"jovanhuang"},"content":"Input:"},{"lineNumber":49,"author":{"gitId":"jovanhuang"},"content":"```text"},{"lineNumber":50,"author":{"gitId":"jovanhuang"},"content":"done 1"},{"lineNumber":51,"author":{"gitId":"jovanhuang"},"content":"```"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"jovanhuang"},"content":"Output:"},{"lineNumber":55,"author":{"gitId":"jovanhuang"},"content":"```text"},{"lineNumber":56,"author":{"gitId":"jovanhuang"},"content":"Nice! I\u0027ve marked this task as done:"},{"lineNumber":57,"author":{"gitId":"jovanhuang"},"content":"[T][X]  dance"},{"lineNumber":58,"author":{"gitId":"jovanhuang"},"content":"```"},{"lineNumber":59,"author":{"gitId":"jovanhuang"},"content":"### Add a todo task: `todo`"},{"lineNumber":60,"author":{"gitId":"jovanhuang"},"content":"Add a todo task to the task list"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"jovanhuang"},"content":"#### Format: `todo TODO_DESCRIPTION`"},{"lineNumber":63,"author":{"gitId":"jovanhuang"},"content":"##### Example of Usage:"},{"lineNumber":64,"author":{"gitId":"jovanhuang"},"content":"Input:"},{"lineNumber":65,"author":{"gitId":"jovanhuang"},"content":"```text"},{"lineNumber":66,"author":{"gitId":"jovanhuang"},"content":"todo run"},{"lineNumber":67,"author":{"gitId":"jovanhuang"},"content":"```"},{"lineNumber":68,"author":{"gitId":"jovanhuang"},"content":"Output:"},{"lineNumber":69,"author":{"gitId":"jovanhuang"},"content":"```text"},{"lineNumber":70,"author":{"gitId":"jovanhuang"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":71,"author":{"gitId":"jovanhuang"},"content":"    [T][ ]  run"},{"lineNumber":72,"author":{"gitId":"jovanhuang"},"content":"Now you have 5 task(s) in the list."},{"lineNumber":73,"author":{"gitId":"jovanhuang"},"content":"```"},{"lineNumber":74,"author":{"gitId":"jovanhuang"},"content":"### Add a deadline task: `deadline`"},{"lineNumber":75,"author":{"gitId":"jovanhuang"},"content":"Add a deadline task to the task list"},{"lineNumber":76,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":77,"author":{"gitId":"jovanhuang"},"content":"#### Format: `deadline DEADLINE_DESCRIPTION /by TIME`"},{"lineNumber":78,"author":{"gitId":"jovanhuang"},"content":"##### Example of Usage:"},{"lineNumber":79,"author":{"gitId":"jovanhuang"},"content":"Input:"},{"lineNumber":80,"author":{"gitId":"jovanhuang"},"content":"```text"},{"lineNumber":81,"author":{"gitId":"jovanhuang"},"content":"deadline submit CS3223 Project /by Sunday 2359"},{"lineNumber":82,"author":{"gitId":"jovanhuang"},"content":"```"},{"lineNumber":83,"author":{"gitId":"jovanhuang"},"content":"Output:"},{"lineNumber":84,"author":{"gitId":"jovanhuang"},"content":"```text"},{"lineNumber":85,"author":{"gitId":"jovanhuang"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":86,"author":{"gitId":"jovanhuang"},"content":"    [D][ ]  submit CS3223 Project (by: Sunday 2359)"},{"lineNumber":87,"author":{"gitId":"jovanhuang"},"content":"Now you have 6 task(s) in the list."},{"lineNumber":88,"author":{"gitId":"jovanhuang"},"content":"```"},{"lineNumber":89,"author":{"gitId":"jovanhuang"},"content":"### Add an event task: `event`"},{"lineNumber":90,"author":{"gitId":"jovanhuang"},"content":"Add an event task to the task list"},{"lineNumber":91,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":92,"author":{"gitId":"jovanhuang"},"content":"#### Format: `event EVENT_DESCRIPTION /at TIME`"},{"lineNumber":93,"author":{"gitId":"jovanhuang"},"content":"##### Example of Usage:"},{"lineNumber":94,"author":{"gitId":"jovanhuang"},"content":"Input:"},{"lineNumber":95,"author":{"gitId":"jovanhuang"},"content":"```text"},{"lineNumber":96,"author":{"gitId":"jovanhuang"},"content":"event attend John\u0027s Birthday Party /at Monday 1430 to 1530"},{"lineNumber":97,"author":{"gitId":"jovanhuang"},"content":"```"},{"lineNumber":98,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":99,"author":{"gitId":"jovanhuang"},"content":"Output:"},{"lineNumber":100,"author":{"gitId":"jovanhuang"},"content":"```text"},{"lineNumber":101,"author":{"gitId":"jovanhuang"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":102,"author":{"gitId":"jovanhuang"},"content":"    [E][ ]  attend John\u0027s Birthday Party (at: Monday 1430 to Monday 1530)"},{"lineNumber":103,"author":{"gitId":"jovanhuang"},"content":"Now you have 7 task(s) in the list."},{"lineNumber":104,"author":{"gitId":"jovanhuang"},"content":"```"},{"lineNumber":105,"author":{"gitId":"jovanhuang"},"content":"### Find a task: `find`"},{"lineNumber":106,"author":{"gitId":"jovanhuang"},"content":"Find a task from the task list"},{"lineNumber":107,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":108,"author":{"gitId":"jovanhuang"},"content":"#### Format: `find KEYWORD`"},{"lineNumber":109,"author":{"gitId":"jovanhuang"},"content":"##### Example of Usage:"},{"lineNumber":110,"author":{"gitId":"jovanhuang"},"content":"Input:"},{"lineNumber":111,"author":{"gitId":"jovanhuang"},"content":"```text"},{"lineNumber":112,"author":{"gitId":"jovanhuang"},"content":"find danceee"},{"lineNumber":113,"author":{"gitId":"jovanhuang"},"content":"```"},{"lineNumber":114,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":115,"author":{"gitId":"jovanhuang"},"content":"Output:"},{"lineNumber":116,"author":{"gitId":"jovanhuang"},"content":"```text"},{"lineNumber":117,"author":{"gitId":"jovanhuang"},"content":"Here are the matching tasks in your list: "},{"lineNumber":118,"author":{"gitId":"jovanhuang"},"content":"1.[T][ ] danceeeee"},{"lineNumber":119,"author":{"gitId":"jovanhuang"},"content":"```"},{"lineNumber":120,"author":{"gitId":"jovanhuang"},"content":"### Terminate Program: `bye`"},{"lineNumber":121,"author":{"gitId":"jovanhuang"},"content":"Quit program"},{"lineNumber":122,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":123,"author":{"gitId":"jovanhuang"},"content":"#### Format: `bye`"},{"lineNumber":124,"author":{"gitId":"jovanhuang"},"content":"##### Example of Usage:"},{"lineNumber":125,"author":{"gitId":"jovanhuang"},"content":"Input:"},{"lineNumber":126,"author":{"gitId":"jovanhuang"},"content":"```text"},{"lineNumber":127,"author":{"gitId":"jovanhuang"},"content":"bye"},{"lineNumber":128,"author":{"gitId":"jovanhuang"},"content":"```"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"jovanhuang"},"content":"Output:"},{"lineNumber":131,"author":{"gitId":"jovanhuang"},"content":"```text"},{"lineNumber":132,"author":{"gitId":"jovanhuang"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":133,"author":{"gitId":"jovanhuang"},"content":"________________________________"},{"lineNumber":134,"author":{"gitId":"jovanhuang"},"content":"```"},{"lineNumber":135,"author":{"gitId":"jovanhuang"},"content":"## FAQ"},{"lineNumber":136,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":137,"author":{"gitId":"jovanhuang"},"content":"Q: How do I start this program?"},{"lineNumber":138,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":139,"author":{"gitId":"jovanhuang"},"content":"A: After downloading the jar file, copy the absolute path of jar file and run the following on your command line:"},{"lineNumber":140,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":141,"author":{"gitId":"jovanhuang"},"content":"```java -jar ABSOLUTE_PATH_OF_JAR_FILE```"},{"lineNumber":142,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":143,"author":{"gitId":"jovanhuang"},"content":"## Command Summary"},{"lineNumber":144,"author":{"gitId":"jovanhuang"},"content":"* ```list```"},{"lineNumber":145,"author":{"gitId":"jovanhuang"},"content":"* ```delete TASKNUMBER```"},{"lineNumber":146,"author":{"gitId":"jovanhuang"},"content":"* ```done TASKNUMBER```"},{"lineNumber":147,"author":{"gitId":"jovanhuang"},"content":"* ```todo TODO_DESCRIPTION```"},{"lineNumber":148,"author":{"gitId":"jovanhuang"},"content":"* ```deadline DEADLINE_DESCRIPTION /by TIME```"},{"lineNumber":149,"author":{"gitId":"jovanhuang"},"content":"* ```event EVENT_DESCRIPTION /at TIME```"},{"lineNumber":150,"author":{"gitId":"jovanhuang"},"content":"* ```find KEYWORD```"},{"lineNumber":151,"author":{"gitId":"jovanhuang"},"content":"* ```bye```"},{"lineNumber":152,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":153,"author":{"gitId":"jovanhuang"},"content":"## The end"}],"authorContributionMap":{"-":12,"jovanhuang":141}},{"path":"src/main/java/duke/DukeStart.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovanhuang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jovanhuang"},"content":"import duke.ui.MainUI;"},{"lineNumber":4,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":5,"author":{"gitId":"jovanhuang"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":7,"author":{"gitId":"jovanhuang"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"jovanhuang"},"content":" * Represent the start of the Duke Program"},{"lineNumber":9,"author":{"gitId":"jovanhuang"},"content":" */"},{"lineNumber":10,"author":{"gitId":"jovanhuang"},"content":"public class DukeStart {"},{"lineNumber":11,"author":{"gitId":"jovanhuang"},"content":"    private MainUI ui;"},{"lineNumber":12,"author":{"gitId":"jovanhuang"},"content":"    private static Scanner in \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":14,"author":{"gitId":"jovanhuang"},"content":"    public DukeStart() {"},{"lineNumber":15,"author":{"gitId":"jovanhuang"},"content":"        ui \u003d new MainUI();"},{"lineNumber":16,"author":{"gitId":"jovanhuang"},"content":"        ui.displayUI(in);"},{"lineNumber":17,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":19,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"jovanhuang"},"content":"     * Start the program"},{"lineNumber":21,"author":{"gitId":"jovanhuang"},"content":"     * @param args takes in arguments from commandline"},{"lineNumber":22,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jovanhuang"},"content":"    public static void main(String[] args) {"},{"lineNumber":24,"author":{"gitId":"jovanhuang"},"content":"        new DukeStart();"},{"lineNumber":25,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}"},{"lineNumber":27,"author":{"gitId":"jovanhuang"},"content":""}],"authorContributionMap":{"-":1,"jovanhuang":26}},{"path":"src/main/java/duke/accessfile/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovanhuang"},"content":"package duke.accessfile;"},{"lineNumber":2,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jovanhuang"},"content":"import duke.ui.MainUI;"},{"lineNumber":4,"author":{"gitId":"jovanhuang"},"content":"import duke.task.Deadline;"},{"lineNumber":5,"author":{"gitId":"jovanhuang"},"content":"import duke.task.Event;"},{"lineNumber":6,"author":{"gitId":"jovanhuang"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"jovanhuang"},"content":"import duke.task.Todo;"},{"lineNumber":8,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":9,"author":{"gitId":"jovanhuang"},"content":"import java.io.*;"},{"lineNumber":10,"author":{"gitId":"jovanhuang"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":11,"author":{"gitId":"jovanhuang"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"jovanhuang"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":14,"author":{"gitId":"jovanhuang"},"content":"import static duke.ui.MainUI.FILE_PATH;"},{"lineNumber":15,"author":{"gitId":"jovanhuang"},"content":"import static duke.ui.MainUI.taskArrayList;"},{"lineNumber":16,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":17,"author":{"gitId":"jovanhuang"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"jovanhuang"},"content":" * Represents a manager that manipulates files"},{"lineNumber":19,"author":{"gitId":"jovanhuang"},"content":" */"},{"lineNumber":20,"author":{"gitId":"jovanhuang"},"content":"public class FileManager {"},{"lineNumber":21,"author":{"gitId":"jovanhuang"},"content":"    private Deadline deadline;"},{"lineNumber":22,"author":{"gitId":"jovanhuang"},"content":"    private Event event;"},{"lineNumber":23,"author":{"gitId":"jovanhuang"},"content":"    private Todo todo;"},{"lineNumber":24,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":25,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":26,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"jovanhuang"},"content":"     * create a folder called directoryName in current directory"},{"lineNumber":28,"author":{"gitId":"jovanhuang"},"content":"     * @param directoryName name of folder to be created"},{"lineNumber":29,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"jovanhuang"},"content":"    public void createDirectory(String directoryName) {"},{"lineNumber":31,"author":{"gitId":"jovanhuang"},"content":"        File relativePathFileName \u003d new File(directoryName);"},{"lineNumber":32,"author":{"gitId":"jovanhuang"},"content":"        String fullPath \u003d relativePathFileName.getAbsolutePath();"},{"lineNumber":33,"author":{"gitId":"jovanhuang"},"content":"        File absolutePathFileName \u003d new File(fullPath);"},{"lineNumber":34,"author":{"gitId":"jovanhuang"},"content":"        boolean bool \u003d absolutePathFileName.mkdirs();"},{"lineNumber":35,"author":{"gitId":"jovanhuang"},"content":"        if (bool) {"},{"lineNumber":36,"author":{"gitId":"jovanhuang"},"content":"            System.out.println(\"\u0027data\u0027 folder created successfully\");"},{"lineNumber":37,"author":{"gitId":"jovanhuang"},"content":"        } else {"},{"lineNumber":38,"author":{"gitId":"jovanhuang"},"content":"            System.out.println(\"Sorry, couldn\u0027t create \u0027data\u0027 folder in your directory\");"},{"lineNumber":39,"author":{"gitId":"jovanhuang"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":42,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"jovanhuang"},"content":"     *Prints the message after creating a new file"},{"lineNumber":44,"author":{"gitId":"jovanhuang"},"content":"     * @param data name of the file object"},{"lineNumber":45,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"jovanhuang"},"content":"    public void printMessageForCreatingNewFile(File data) {"},{"lineNumber":47,"author":{"gitId":"jovanhuang"},"content":"        System.out.println(\"Your file that stores all your tasks is not found! (data/duke.txt) :(\");"},{"lineNumber":48,"author":{"gitId":"jovanhuang"},"content":"        System.out.println(\"Creating new file now to store your future tasks! :)\");"},{"lineNumber":49,"author":{"gitId":"jovanhuang"},"content":"        System.out.println(\"File created: \" + data.getName());"},{"lineNumber":50,"author":{"gitId":"jovanhuang"},"content":"        MainUI.printDivider();"},{"lineNumber":51,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":53,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"jovanhuang"},"content":"     * load the data from duke.txt into our program\u0027s task arraylist"},{"lineNumber":55,"author":{"gitId":"jovanhuang"},"content":"     * @return returns the loaded task array list"},{"lineNumber":56,"author":{"gitId":"jovanhuang"},"content":"     * @throws FileNotFoundException exception arises when duke.txt cannot be found"},{"lineNumber":57,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"jovanhuang"},"content":"    public ArrayList\u003cTask\u003e loadData() throws FileNotFoundException {"},{"lineNumber":59,"author":{"gitId":"jovanhuang"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":60,"author":{"gitId":"jovanhuang"},"content":"        System.out.println(\"Loading data from your file, \u0027duke.txt\u0027...\");"},{"lineNumber":61,"author":{"gitId":"jovanhuang"},"content":"        File data \u003d new File(FILE_PATH);"},{"lineNumber":62,"author":{"gitId":"jovanhuang"},"content":"        taskArrayList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":63,"author":{"gitId":"jovanhuang"},"content":"        Scanner sc \u003d new Scanner(data);"},{"lineNumber":64,"author":{"gitId":"jovanhuang"},"content":"        while (sc.hasNext()) {"},{"lineNumber":65,"author":{"gitId":"jovanhuang"},"content":"            String taskSentence \u003d sc.nextLine();"},{"lineNumber":66,"author":{"gitId":"jovanhuang"},"content":"            char taskCategory \u003d taskSentence.charAt(1);"},{"lineNumber":67,"author":{"gitId":"jovanhuang"},"content":"            boolean isDone \u003d taskSentence.substring(4, 5).compareTo(\"X\") \u003d\u003d 0;"},{"lineNumber":68,"author":{"gitId":"jovanhuang"},"content":"            switch (taskCategory) {"},{"lineNumber":69,"author":{"gitId":"jovanhuang"},"content":"            case \u0027T\u0027:"},{"lineNumber":70,"author":{"gitId":"jovanhuang"},"content":"                String toDoDescription \u003d taskSentence.substring(7);"},{"lineNumber":71,"author":{"gitId":"jovanhuang"},"content":"                todo \u003d new Todo(toDoDescription);"},{"lineNumber":72,"author":{"gitId":"jovanhuang"},"content":"                if (isDone) {"},{"lineNumber":73,"author":{"gitId":"jovanhuang"},"content":"                    todo.markAsDone();"},{"lineNumber":74,"author":{"gitId":"jovanhuang"},"content":"                }"},{"lineNumber":75,"author":{"gitId":"jovanhuang"},"content":"                taskArrayList.add(todo);"},{"lineNumber":76,"author":{"gitId":"jovanhuang"},"content":"                break;"},{"lineNumber":77,"author":{"gitId":"jovanhuang"},"content":"            case \u0027D\u0027:"},{"lineNumber":78,"author":{"gitId":"jovanhuang"},"content":"                int dueDateStartingIndex \u003d taskSentence.indexOf(\"(by:\");"},{"lineNumber":79,"author":{"gitId":"jovanhuang"},"content":"                String dueDate \u003d taskSentence.substring(dueDateStartingIndex + 5, taskSentence.length() - 1);"},{"lineNumber":80,"author":{"gitId":"jovanhuang"},"content":"                String deadlineDescription \u003d taskSentence.substring(7, dueDateStartingIndex);"},{"lineNumber":81,"author":{"gitId":"jovanhuang"},"content":"                deadline \u003d new Deadline(deadlineDescription, dueDate);"},{"lineNumber":82,"author":{"gitId":"jovanhuang"},"content":"                if (isDone) {"},{"lineNumber":83,"author":{"gitId":"jovanhuang"},"content":"                    deadline.markAsDone();"},{"lineNumber":84,"author":{"gitId":"jovanhuang"},"content":"                }"},{"lineNumber":85,"author":{"gitId":"jovanhuang"},"content":"                taskArrayList.add(deadline);"},{"lineNumber":86,"author":{"gitId":"jovanhuang"},"content":"                break;"},{"lineNumber":87,"author":{"gitId":"jovanhuang"},"content":"            case \u0027E\u0027:"},{"lineNumber":88,"author":{"gitId":"jovanhuang"},"content":"                int durationStartingIndex \u003d taskSentence.indexOf(\"(at:\");"},{"lineNumber":89,"author":{"gitId":"jovanhuang"},"content":"                String duration \u003d taskSentence.substring(durationStartingIndex + 5, taskSentence.length() - 1);"},{"lineNumber":90,"author":{"gitId":"jovanhuang"},"content":"                String eventDescription \u003d taskSentence.substring(7, durationStartingIndex);"},{"lineNumber":91,"author":{"gitId":"jovanhuang"},"content":"                event \u003d new Event(eventDescription, duration);"},{"lineNumber":92,"author":{"gitId":"jovanhuang"},"content":"                if (isDone) {"},{"lineNumber":93,"author":{"gitId":"jovanhuang"},"content":"                    event.markAsDone();"},{"lineNumber":94,"author":{"gitId":"jovanhuang"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"jovanhuang"},"content":"                taskArrayList.add(event);"},{"lineNumber":96,"author":{"gitId":"jovanhuang"},"content":"                break;"},{"lineNumber":97,"author":{"gitId":"jovanhuang"},"content":"            default:"},{"lineNumber":98,"author":{"gitId":"jovanhuang"},"content":"                break;"},{"lineNumber":99,"author":{"gitId":"jovanhuang"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"jovanhuang"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"jovanhuang"},"content":"        System.out.println(\"Done loading the data!\");"},{"lineNumber":102,"author":{"gitId":"jovanhuang"},"content":"        MainUI.printDivider();"},{"lineNumber":103,"author":{"gitId":"jovanhuang"},"content":"        return taskArrayList;"},{"lineNumber":104,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":106,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"jovanhuang"},"content":"     * Updates the data file by writing task array list into duke.txt file"},{"lineNumber":108,"author":{"gitId":"jovanhuang"},"content":"     * @throws IOException throws exception from FileOutPutStream"},{"lineNumber":109,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"jovanhuang"},"content":"    public void updateDataFile() throws IOException {"},{"lineNumber":111,"author":{"gitId":"jovanhuang"},"content":"        PrintStream out \u003d new PrintStream(new FileOutputStream(MainUI.FILE_PATH));"},{"lineNumber":112,"author":{"gitId":"jovanhuang"},"content":"        PrintStream stdout \u003d System.out;"},{"lineNumber":113,"author":{"gitId":"jovanhuang"},"content":"        System.setOut(out);"},{"lineNumber":114,"author":{"gitId":"jovanhuang"},"content":"        for (Task task : taskArrayList) {"},{"lineNumber":115,"author":{"gitId":"jovanhuang"},"content":"            System.out.println(task);"},{"lineNumber":116,"author":{"gitId":"jovanhuang"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"jovanhuang"},"content":"        System.setOut(stdout);"},{"lineNumber":118,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":120,"author":{"gitId":"jovanhuang"},"content":"}"}],"authorContributionMap":{"jovanhuang":120}},{"path":"src/main/java/duke/accessfile/FileNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovanhuang"},"content":"package duke.accessfile;"},{"lineNumber":2,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jovanhuang"},"content":"public class FileNotFoundException extends Exception {"},{"lineNumber":4,"author":{"gitId":"jovanhuang"},"content":"}"}],"authorContributionMap":{"jovanhuang":4}},{"path":"src/main/java/duke/command/CommandNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovanhuang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jovanhuang"},"content":"public class CommandNotFoundException extends Exception {"},{"lineNumber":4,"author":{"gitId":"jovanhuang"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":6,"author":{"gitId":"jovanhuang"},"content":"    public String getMessage() {"},{"lineNumber":7,"author":{"gitId":"jovanhuang"},"content":"        String errorMessage \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what this command means :-( \\n\" + \"Please try again!\";"},{"lineNumber":8,"author":{"gitId":"jovanhuang"},"content":"        return errorMessage;"},{"lineNumber":9,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jovanhuang"},"content":"}"}],"authorContributionMap":{"jovanhuang":10}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovanhuang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jovanhuang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jovanhuang"},"content":" * Represents a deadline task."},{"lineNumber":5,"author":{"gitId":"jovanhuang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jovanhuang"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":8,"author":{"gitId":"jovanhuang"},"content":"    protected String by;"},{"lineNumber":9,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":10,"author":{"gitId":"jovanhuang"},"content":"    public static final String DEADLINE_LABEL \u003d \"[D]\";"},{"lineNumber":11,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":12,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"jovanhuang"},"content":"     * Constructor for Deadline class"},{"lineNumber":14,"author":{"gitId":"jovanhuang"},"content":"     * @param description a string on what the deadline is about"},{"lineNumber":15,"author":{"gitId":"jovanhuang"},"content":"     * @param by a date which represents the due date of the deadline task"},{"lineNumber":16,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"jovanhuang"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":18,"author":{"gitId":"jovanhuang"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"jovanhuang"},"content":"        this.by \u003d by;"},{"lineNumber":20,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":22,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"jovanhuang"},"content":"     * Gets \u0027by\u0027 String"},{"lineNumber":24,"author":{"gitId":"jovanhuang"},"content":"     * @return the string \u0027by\u0027"},{"lineNumber":25,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"jovanhuang"},"content":"    public String getBy() {"},{"lineNumber":27,"author":{"gitId":"jovanhuang"},"content":"        return by;"},{"lineNumber":28,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":30,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"jovanhuang"},"content":"     * Changes the string of \u0027by\u0027"},{"lineNumber":32,"author":{"gitId":"jovanhuang"},"content":"     * @param by the new due date of the deadline task"},{"lineNumber":33,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"jovanhuang"},"content":"    public void setBy(String by) {"},{"lineNumber":35,"author":{"gitId":"jovanhuang"},"content":"        this.by \u003d by;"},{"lineNumber":36,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":38,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"jovanhuang"},"content":"     * Checks if the description of deadline exists"},{"lineNumber":40,"author":{"gitId":"jovanhuang"},"content":"     * @param input the substring of user\u0027s input that is supposed to contain deadline\u0027s description"},{"lineNumber":41,"author":{"gitId":"jovanhuang"},"content":"     * @throws TaskDescriptionMissingException Exception error upon missing task description error"},{"lineNumber":42,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"jovanhuang"},"content":"    public void checkIfDeadlineDescriptionExists(String input) throws TaskDescriptionMissingException {"},{"lineNumber":44,"author":{"gitId":"jovanhuang"},"content":"        if (input.isBlank()) {"},{"lineNumber":45,"author":{"gitId":"jovanhuang"},"content":"            Task.decreaseTaskCount();"},{"lineNumber":46,"author":{"gitId":"jovanhuang"},"content":"            throw new TaskDescriptionMissingException();"},{"lineNumber":47,"author":{"gitId":"jovanhuang"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":50,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"jovanhuang"},"content":"     * Override \u0027toString\u0027 method to print out a customised message when printing a deadline object."},{"lineNumber":52,"author":{"gitId":"jovanhuang"},"content":"     * @return"},{"lineNumber":53,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"jovanhuang"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"jovanhuang"},"content":"    public String toString() {"},{"lineNumber":56,"author":{"gitId":"jovanhuang"},"content":"        return DEADLINE_LABEL + super.toString() + \"(by: \" + by + \")\";"},{"lineNumber":57,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"jovanhuang"},"content":"}"},{"lineNumber":59,"author":{"gitId":"jovanhuang"},"content":""}],"authorContributionMap":{"jovanhuang":59}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovanhuang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jovanhuang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jovanhuang"},"content":" * Represents an event task"},{"lineNumber":5,"author":{"gitId":"jovanhuang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jovanhuang"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":8,"author":{"gitId":"jovanhuang"},"content":"    protected String eventPeriod;"},{"lineNumber":9,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":10,"author":{"gitId":"jovanhuang"},"content":"    public static final String EVENT_LABEL \u003d \"[E]\";"},{"lineNumber":11,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":12,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"jovanhuang"},"content":"     * Constructor for event class"},{"lineNumber":14,"author":{"gitId":"jovanhuang"},"content":"     * @param description a string on what the event is about"},{"lineNumber":15,"author":{"gitId":"jovanhuang"},"content":"     * @param eventPeriod a date period which represents the duration of the event task"},{"lineNumber":16,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"jovanhuang"},"content":"    public Event(String description, String eventPeriod) {"},{"lineNumber":18,"author":{"gitId":"jovanhuang"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"jovanhuang"},"content":"        this.eventPeriod \u003d eventPeriod;"},{"lineNumber":20,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":22,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"jovanhuang"},"content":"     * Gets event period"},{"lineNumber":24,"author":{"gitId":"jovanhuang"},"content":"     * @return the event period in string"},{"lineNumber":25,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"jovanhuang"},"content":"    public String getEventPeriod() {"},{"lineNumber":27,"author":{"gitId":"jovanhuang"},"content":"        return eventPeriod;"},{"lineNumber":28,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":30,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"jovanhuang"},"content":"     * Changes the string of event period"},{"lineNumber":32,"author":{"gitId":"jovanhuang"},"content":"     * @param eventPeriod the new duration period of the event task"},{"lineNumber":33,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"jovanhuang"},"content":"    public void setEventPeriod(String eventPeriod) {"},{"lineNumber":35,"author":{"gitId":"jovanhuang"},"content":"        this.eventPeriod \u003d eventPeriod;"},{"lineNumber":36,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":38,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"jovanhuang"},"content":"     * Override \u0027toString\u0027 method to print out a customised message when printing a event object."},{"lineNumber":40,"author":{"gitId":"jovanhuang"},"content":"     * @return"},{"lineNumber":41,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"jovanhuang"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"jovanhuang"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"jovanhuang"},"content":"        return EVENT_LABEL + super.toString() + \"(at: \" + eventPeriod + \")\";"},{"lineNumber":45,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"jovanhuang"},"content":"}"}],"authorContributionMap":{"jovanhuang":46}},{"path":"src/main/java/duke/task/StringParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovanhuang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jovanhuang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jovanhuang"},"content":" * Represents a string manipulator."},{"lineNumber":5,"author":{"gitId":"jovanhuang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jovanhuang"},"content":"public class StringParser {"},{"lineNumber":7,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":8,"author":{"gitId":"jovanhuang"},"content":"    public static final int OUT_OF_BOUND_INDEX \u003d -1;"},{"lineNumber":9,"author":{"gitId":"jovanhuang"},"content":"    public static final int DONE_TASK_NUMBER_INDEX \u003d 5;"},{"lineNumber":10,"author":{"gitId":"jovanhuang"},"content":"    public static final int DELETED_TASK_NUMBER_INDEX \u003d 7;"},{"lineNumber":11,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":12,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"jovanhuang"},"content":"     * Returns the first word of the string"},{"lineNumber":14,"author":{"gitId":"jovanhuang"},"content":"     * @param input the whole string"},{"lineNumber":15,"author":{"gitId":"jovanhuang"},"content":"     * @return first word of the string"},{"lineNumber":16,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"jovanhuang"},"content":"    public String getFirstWord(String input) {"},{"lineNumber":18,"author":{"gitId":"jovanhuang"},"content":"        return input.split(\" \")[0];"},{"lineNumber":19,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":21,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"jovanhuang"},"content":"     * Returns the whole string after the first slash in the string"},{"lineNumber":23,"author":{"gitId":"jovanhuang"},"content":"     * @param input the whole string"},{"lineNumber":24,"author":{"gitId":"jovanhuang"},"content":"     * @return the string after the slash in the sentence"},{"lineNumber":25,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"jovanhuang"},"content":"    public String getStringAfterSlash(String input) {"},{"lineNumber":27,"author":{"gitId":"jovanhuang"},"content":"        return input.substring(input.indexOf(\"/\") + 1 + 2 + 1);"},{"lineNumber":28,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":30,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"jovanhuang"},"content":"     * Returns the index after the first whitespace in the string"},{"lineNumber":32,"author":{"gitId":"jovanhuang"},"content":"     * @param input the whole string"},{"lineNumber":33,"author":{"gitId":"jovanhuang"},"content":"     * @return the index after the first whitespace"},{"lineNumber":34,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"jovanhuang"},"content":"    public String getIndexOfStringAfterWhiteSpace(String input) {"},{"lineNumber":36,"author":{"gitId":"jovanhuang"},"content":"        int firstWhiteSpaceIndex \u003d input.indexOf(\" \");"},{"lineNumber":37,"author":{"gitId":"jovanhuang"},"content":"        if (firstWhiteSpaceIndex \u003d\u003d OUT_OF_BOUND_INDEX) {"},{"lineNumber":38,"author":{"gitId":"jovanhuang"},"content":"            return input.substring(input.length());"},{"lineNumber":39,"author":{"gitId":"jovanhuang"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"jovanhuang"},"content":"        return input.substring(firstWhiteSpaceIndex + 1);"},{"lineNumber":41,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":43,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"jovanhuang"},"content":"     * Returns the string found in between the first whitespace and the first slash"},{"lineNumber":45,"author":{"gitId":"jovanhuang"},"content":"     * Meant for getting the task description of (for eg: deadline task)"},{"lineNumber":46,"author":{"gitId":"jovanhuang"},"content":"     * @param input the whole string"},{"lineNumber":47,"author":{"gitId":"jovanhuang"},"content":"     * @return the string found in between the first whitespace and the first slash"},{"lineNumber":48,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"jovanhuang"},"content":"    public String getStringAfterWhiteSpaceAndBeforeSlash(String input) {"},{"lineNumber":50,"author":{"gitId":"jovanhuang"},"content":"        int firstWhiteSpaceIndex \u003d input.indexOf(\" \");"},{"lineNumber":51,"author":{"gitId":"jovanhuang"},"content":"        int firstSlashIndex \u003d input.indexOf(\"/\");"},{"lineNumber":52,"author":{"gitId":"jovanhuang"},"content":"        if (firstWhiteSpaceIndex \u003d\u003d OUT_OF_BOUND_INDEX) {"},{"lineNumber":53,"author":{"gitId":"jovanhuang"},"content":"            return input.substring(input.length());"},{"lineNumber":54,"author":{"gitId":"jovanhuang"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"jovanhuang"},"content":"        if (firstSlashIndex \u003d\u003d OUT_OF_BOUND_INDEX) {"},{"lineNumber":56,"author":{"gitId":"jovanhuang"},"content":"            return input.substring(firstWhiteSpaceIndex + 1, input.length());"},{"lineNumber":57,"author":{"gitId":"jovanhuang"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"jovanhuang"},"content":"        return input.substring(firstWhiteSpaceIndex + 1, firstSlashIndex);"},{"lineNumber":59,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":61,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"jovanhuang"},"content":"     * return the task number that is done"},{"lineNumber":63,"author":{"gitId":"jovanhuang"},"content":"     * @param input whole string"},{"lineNumber":64,"author":{"gitId":"jovanhuang"},"content":"     * @return number of task that is done"},{"lineNumber":65,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"jovanhuang"},"content":"    public int getTaskNumberDone(String input) {"},{"lineNumber":67,"author":{"gitId":"jovanhuang"},"content":"        return Integer.parseInt(input.substring(DONE_TASK_NUMBER_INDEX));"},{"lineNumber":68,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":70,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"jovanhuang"},"content":"     * return the task number that is deleted"},{"lineNumber":72,"author":{"gitId":"jovanhuang"},"content":"     * @param input the whole string"},{"lineNumber":73,"author":{"gitId":"jovanhuang"},"content":"     * @return number of task that is deleted"},{"lineNumber":74,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"jovanhuang"},"content":"    public int getTaskNumberDeleted(String input) {"},{"lineNumber":76,"author":{"gitId":"jovanhuang"},"content":"        return Integer.parseInt(input.substring(DELETED_TASK_NUMBER_INDEX));"},{"lineNumber":77,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":79,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"jovanhuang"},"content":"     * return the keyword for finding matches"},{"lineNumber":81,"author":{"gitId":"jovanhuang"},"content":"     * @param input whole string"},{"lineNumber":82,"author":{"gitId":"jovanhuang"},"content":"     * @return keyword to find a match"},{"lineNumber":83,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"jovanhuang"},"content":"    public String getKeyword(String input) {"},{"lineNumber":85,"author":{"gitId":"jovanhuang"},"content":"        String keyword \u003d input.split(\" \")[1];"},{"lineNumber":86,"author":{"gitId":"jovanhuang"},"content":"        return keyword;"},{"lineNumber":87,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":89,"author":{"gitId":"jovanhuang"},"content":"}"}],"authorContributionMap":{"jovanhuang":89}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovanhuang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jovanhuang"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"jovanhuang"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"jovanhuang"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":7,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"jovanhuang"},"content":"     * Total number of tasks keyed in Duke program"},{"lineNumber":9,"author":{"gitId":"jovanhuang"},"content":"     **/"},{"lineNumber":10,"author":{"gitId":"jovanhuang"},"content":"    private static int taskCount \u003d 0;"},{"lineNumber":11,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":12,"author":{"gitId":"jovanhuang"},"content":"    public Task(String description) {"},{"lineNumber":13,"author":{"gitId":"jovanhuang"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"jovanhuang"},"content":"        this.isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"jovanhuang"},"content":"        taskCount +\u003d 1;"},{"lineNumber":16,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":18,"author":{"gitId":"jovanhuang"},"content":"    public String getStatusIcon() {"},{"lineNumber":19,"author":{"gitId":"jovanhuang"},"content":"        return (isDone ? \"X\" : \" \");  //return tick or X symbols"},{"lineNumber":20,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":22,"author":{"gitId":"jovanhuang"},"content":"    public static int getTaskCount() {"},{"lineNumber":23,"author":{"gitId":"jovanhuang"},"content":"        return taskCount;"},{"lineNumber":24,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":26,"author":{"gitId":"jovanhuang"},"content":"    public String getDescription() {"},{"lineNumber":27,"author":{"gitId":"jovanhuang"},"content":"        return description;"},{"lineNumber":28,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":30,"author":{"gitId":"jovanhuang"},"content":"    public boolean getIsDone() {"},{"lineNumber":31,"author":{"gitId":"jovanhuang"},"content":"        return isDone;"},{"lineNumber":32,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":34,"author":{"gitId":"jovanhuang"},"content":"    public void setDescription(String description) {"},{"lineNumber":35,"author":{"gitId":"jovanhuang"},"content":"        this.description \u003d description;"},{"lineNumber":36,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":38,"author":{"gitId":"jovanhuang"},"content":"    public void markAsDone() {"},{"lineNumber":39,"author":{"gitId":"jovanhuang"},"content":"        isDone \u003d true;"},{"lineNumber":40,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":42,"author":{"gitId":"jovanhuang"},"content":"    public static void increaseTaskCount() {"},{"lineNumber":43,"author":{"gitId":"jovanhuang"},"content":"        taskCount +\u003d 1;"},{"lineNumber":44,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":46,"author":{"gitId":"jovanhuang"},"content":"    public static void decreaseTaskCount() {"},{"lineNumber":47,"author":{"gitId":"jovanhuang"},"content":"        taskCount -\u003d 1;"},{"lineNumber":48,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":50,"author":{"gitId":"jovanhuang"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"jovanhuang"},"content":"    public String toString() {"},{"lineNumber":52,"author":{"gitId":"jovanhuang"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();"},{"lineNumber":53,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"jovanhuang"},"content":"}"}],"authorContributionMap":{"jovanhuang":54}},{"path":"src/main/java/duke/task/TaskDescriptionMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovanhuang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jovanhuang"},"content":"public class TaskDescriptionMissingException extends Exception {"},{"lineNumber":4,"author":{"gitId":"jovanhuang"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"jovanhuang"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"jovanhuang"},"content":"        String errorMessage \u003d \"☹ OOPS!!! The description of a task cannot be empty. \\n\" + \"Please try again!\";"},{"lineNumber":7,"author":{"gitId":"jovanhuang"},"content":"        return errorMessage;"},{"lineNumber":8,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"jovanhuang"},"content":"}"}],"authorContributionMap":{"jovanhuang":9}},{"path":"src/main/java/duke/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovanhuang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jovanhuang"},"content":"import duke.accessfile.FileManager;"},{"lineNumber":4,"author":{"gitId":"jovanhuang"},"content":"import duke.command.CommandNotFoundException;"},{"lineNumber":5,"author":{"gitId":"jovanhuang"},"content":"import duke.ui.MainUI;"},{"lineNumber":6,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":7,"author":{"gitId":"jovanhuang"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":9,"author":{"gitId":"jovanhuang"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":11,"author":{"gitId":"jovanhuang"},"content":"import static duke.ui.MainUI.taskArrayList;"},{"lineNumber":12,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":13,"author":{"gitId":"jovanhuang"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"jovanhuang"},"content":" * Represents a manager that does operations for tasks (eg: add/delete tasks)"},{"lineNumber":15,"author":{"gitId":"jovanhuang"},"content":" */"},{"lineNumber":16,"author":{"gitId":"jovanhuang"},"content":"public class TaskManager {"},{"lineNumber":17,"author":{"gitId":"jovanhuang"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";"},{"lineNumber":18,"author":{"gitId":"jovanhuang"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";"},{"lineNumber":19,"author":{"gitId":"jovanhuang"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";"},{"lineNumber":20,"author":{"gitId":"jovanhuang"},"content":"    public static final String DONE_COMMAND \u003d \"done\";"},{"lineNumber":21,"author":{"gitId":"jovanhuang"},"content":"    public static final String DELETE_COMMAND \u003d \"delete\";"},{"lineNumber":22,"author":{"gitId":"jovanhuang"},"content":"    public static final String FIND_COMMAND \u003d \"find\";"},{"lineNumber":23,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":24,"author":{"gitId":"jovanhuang"},"content":"    private static final String ADDED_TASK_MESSAGE \u003d \"Got it. I have added this task: \";"},{"lineNumber":25,"author":{"gitId":"jovanhuang"},"content":"    private static final String MARKED_TASK_AS_DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done: \";"},{"lineNumber":26,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":27,"author":{"gitId":"jovanhuang"},"content":"    private FileManager fileManager;"},{"lineNumber":28,"author":{"gitId":"jovanhuang"},"content":"    private StringParser stringParser;"},{"lineNumber":29,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":30,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"jovanhuang"},"content":"     * Constructor for Task Manager"},{"lineNumber":32,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"jovanhuang"},"content":"    public TaskManager() {"},{"lineNumber":34,"author":{"gitId":"jovanhuang"},"content":"        fileManager \u003d new FileManager();"},{"lineNumber":35,"author":{"gitId":"jovanhuang"},"content":"        stringParser \u003d new StringParser();"},{"lineNumber":36,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":38,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"jovanhuang"},"content":"     * Handles incoming commands to complete task, add tasks, delete tasks and find tasks that matches a keyword."},{"lineNumber":40,"author":{"gitId":"jovanhuang"},"content":"     * @param input input from user"},{"lineNumber":41,"author":{"gitId":"jovanhuang"},"content":"     * @throws CommandNotFoundException Exception will be thrown when command is not recognisable"},{"lineNumber":42,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"jovanhuang"},"content":"    public void handleTask(String input) throws CommandNotFoundException {"},{"lineNumber":44,"author":{"gitId":"jovanhuang"},"content":"        String firstWord \u003d stringParser.getFirstWord(input);"},{"lineNumber":45,"author":{"gitId":"jovanhuang"},"content":"        switch (firstWord) {"},{"lineNumber":46,"author":{"gitId":"jovanhuang"},"content":"        case DONE_COMMAND:"},{"lineNumber":47,"author":{"gitId":"jovanhuang"},"content":"            try {"},{"lineNumber":48,"author":{"gitId":"jovanhuang"},"content":"                int taskNumberDone \u003d stringParser.getTaskNumberDone(input);"},{"lineNumber":49,"author":{"gitId":"jovanhuang"},"content":"                markTaskAsDone(taskNumberDone);"},{"lineNumber":50,"author":{"gitId":"jovanhuang"},"content":"                fileManager.updateDataFile();"},{"lineNumber":51,"author":{"gitId":"jovanhuang"},"content":"            } catch (IOException e) {"},{"lineNumber":52,"author":{"gitId":"jovanhuang"},"content":"                System.out.println(\"IOError at Done command\");"},{"lineNumber":53,"author":{"gitId":"jovanhuang"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"jovanhuang"},"content":"            break;"},{"lineNumber":55,"author":{"gitId":"jovanhuang"},"content":"        case TODO_COMMAND:"},{"lineNumber":56,"author":{"gitId":"jovanhuang"},"content":"            try {"},{"lineNumber":57,"author":{"gitId":"jovanhuang"},"content":"                String taskDescription \u003d stringParser.getIndexOfStringAfterWhiteSpace(input);"},{"lineNumber":58,"author":{"gitId":"jovanhuang"},"content":"                Todo t \u003d new Todo(taskDescription);"},{"lineNumber":59,"author":{"gitId":"jovanhuang"},"content":"                t.checkIfToDoDescriptionExists(taskDescription);"},{"lineNumber":60,"author":{"gitId":"jovanhuang"},"content":"                taskArrayList.add(t);"},{"lineNumber":61,"author":{"gitId":"jovanhuang"},"content":"                printMessageAfterTaskIsAdded(t);"},{"lineNumber":62,"author":{"gitId":"jovanhuang"},"content":"                fileManager.updateDataFile();"},{"lineNumber":63,"author":{"gitId":"jovanhuang"},"content":"            } catch (TaskDescriptionMissingException e) {"},{"lineNumber":64,"author":{"gitId":"jovanhuang"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":65,"author":{"gitId":"jovanhuang"},"content":"                MainUI.printDivider();"},{"lineNumber":66,"author":{"gitId":"jovanhuang"},"content":"            } catch (IOException e) {"},{"lineNumber":67,"author":{"gitId":"jovanhuang"},"content":"                System.out.println(\"IOError at TODO Command\");"},{"lineNumber":68,"author":{"gitId":"jovanhuang"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"jovanhuang"},"content":"            break;"},{"lineNumber":70,"author":{"gitId":"jovanhuang"},"content":"        case DEADLINE_COMMAND:"},{"lineNumber":71,"author":{"gitId":"jovanhuang"},"content":"            try {"},{"lineNumber":72,"author":{"gitId":"jovanhuang"},"content":"                String dueDate \u003d stringParser.getStringAfterSlash(input);"},{"lineNumber":73,"author":{"gitId":"jovanhuang"},"content":"                String taskDescription \u003d stringParser.getStringAfterWhiteSpaceAndBeforeSlash(input);"},{"lineNumber":74,"author":{"gitId":"jovanhuang"},"content":"                Deadline d \u003d new Deadline(taskDescription, dueDate);"},{"lineNumber":75,"author":{"gitId":"jovanhuang"},"content":"                d.checkIfDeadlineDescriptionExists(taskDescription);"},{"lineNumber":76,"author":{"gitId":"jovanhuang"},"content":"                taskArrayList.add(d);"},{"lineNumber":77,"author":{"gitId":"jovanhuang"},"content":"                printMessageAfterTaskIsAdded(d);"},{"lineNumber":78,"author":{"gitId":"jovanhuang"},"content":"                fileManager.updateDataFile();"},{"lineNumber":79,"author":{"gitId":"jovanhuang"},"content":"            } catch (TaskDescriptionMissingException e) {"},{"lineNumber":80,"author":{"gitId":"jovanhuang"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":81,"author":{"gitId":"jovanhuang"},"content":"                MainUI.printDivider();"},{"lineNumber":82,"author":{"gitId":"jovanhuang"},"content":"            } catch (IOException e) {"},{"lineNumber":83,"author":{"gitId":"jovanhuang"},"content":"                System.out.println(\"IOError at DEADLINE Command\");"},{"lineNumber":84,"author":{"gitId":"jovanhuang"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"jovanhuang"},"content":"            break;"},{"lineNumber":86,"author":{"gitId":"jovanhuang"},"content":"        case EVENT_COMMAND:"},{"lineNumber":87,"author":{"gitId":"jovanhuang"},"content":"            try {"},{"lineNumber":88,"author":{"gitId":"jovanhuang"},"content":"                String eventPeriod \u003d stringParser.getStringAfterSlash(input);"},{"lineNumber":89,"author":{"gitId":"jovanhuang"},"content":"                String taskDescription \u003d stringParser.getStringAfterWhiteSpaceAndBeforeSlash(input);"},{"lineNumber":90,"author":{"gitId":"jovanhuang"},"content":"                Event e \u003d new Event(taskDescription, eventPeriod);"},{"lineNumber":91,"author":{"gitId":"jovanhuang"},"content":"                taskArrayList.add(e);"},{"lineNumber":92,"author":{"gitId":"jovanhuang"},"content":"                printMessageAfterTaskIsAdded(e);"},{"lineNumber":93,"author":{"gitId":"jovanhuang"},"content":"                fileManager.updateDataFile();"},{"lineNumber":94,"author":{"gitId":"jovanhuang"},"content":"            } catch (IOException e) {"},{"lineNumber":95,"author":{"gitId":"jovanhuang"},"content":"                System.out.println(\"IOError at EVENT Command\");"},{"lineNumber":96,"author":{"gitId":"jovanhuang"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"jovanhuang"},"content":"            break;"},{"lineNumber":98,"author":{"gitId":"jovanhuang"},"content":"        case DELETE_COMMAND:"},{"lineNumber":99,"author":{"gitId":"jovanhuang"},"content":"            try {"},{"lineNumber":100,"author":{"gitId":"jovanhuang"},"content":"                int taskNumberDeleted \u003d stringParser.getTaskNumberDeleted(input);"},{"lineNumber":101,"author":{"gitId":"jovanhuang"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + taskArrayList.get(taskNumberDeleted - 1));"},{"lineNumber":102,"author":{"gitId":"jovanhuang"},"content":"                taskArrayList.remove(taskNumberDeleted - 1);"},{"lineNumber":103,"author":{"gitId":"jovanhuang"},"content":"                Task.decreaseTaskCount();"},{"lineNumber":104,"author":{"gitId":"jovanhuang"},"content":"                System.out.println(\"Now you have \" + Task.getTaskCount() + \" tasks in the list.\");"},{"lineNumber":105,"author":{"gitId":"jovanhuang"},"content":"                fileManager.updateDataFile();"},{"lineNumber":106,"author":{"gitId":"jovanhuang"},"content":"            } catch (IOException e) {"},{"lineNumber":107,"author":{"gitId":"jovanhuang"},"content":"                System.out.println(\"IOError at DELETE Command\");"},{"lineNumber":108,"author":{"gitId":"jovanhuang"},"content":"            }"},{"lineNumber":109,"author":{"gitId":"jovanhuang"},"content":"            break;"},{"lineNumber":110,"author":{"gitId":"jovanhuang"},"content":"        case FIND_COMMAND:"},{"lineNumber":111,"author":{"gitId":"jovanhuang"},"content":"            String keyword \u003d stringParser.getKeyword(input);"},{"lineNumber":112,"author":{"gitId":"jovanhuang"},"content":"            ArrayList\u003cTask\u003e matches \u003d find(keyword);"},{"lineNumber":113,"author":{"gitId":"jovanhuang"},"content":"            printMatchingTasks(matches);"},{"lineNumber":114,"author":{"gitId":"jovanhuang"},"content":"            break;"},{"lineNumber":115,"author":{"gitId":"jovanhuang"},"content":"        default:"},{"lineNumber":116,"author":{"gitId":"jovanhuang"},"content":"            throw new CommandNotFoundException();"},{"lineNumber":117,"author":{"gitId":"jovanhuang"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":119,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":121,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"jovanhuang"},"content":"     * Returns an arraylist containing all the tasks that matches the keyword"},{"lineNumber":123,"author":{"gitId":"jovanhuang"},"content":"     * @param keyword user\u0027s input for keyword"},{"lineNumber":124,"author":{"gitId":"jovanhuang"},"content":"     * @return arraylist of all the matching tasks"},{"lineNumber":125,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"jovanhuang"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {"},{"lineNumber":127,"author":{"gitId":"jovanhuang"},"content":"        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();"},{"lineNumber":128,"author":{"gitId":"jovanhuang"},"content":"        for (Task task : taskArrayList) {"},{"lineNumber":129,"author":{"gitId":"jovanhuang"},"content":"            if (task.getDescription().contains(keyword)) {"},{"lineNumber":130,"author":{"gitId":"jovanhuang"},"content":"                matches.add(task);"},{"lineNumber":131,"author":{"gitId":"jovanhuang"},"content":"            }"},{"lineNumber":132,"author":{"gitId":"jovanhuang"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"jovanhuang"},"content":"        return matches;"},{"lineNumber":134,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":136,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"jovanhuang"},"content":"     * Prints the message when task has been added to Task List"},{"lineNumber":138,"author":{"gitId":"jovanhuang"},"content":"     * @param task Task object that has been added"},{"lineNumber":139,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"jovanhuang"},"content":"    public void printMessageAfterTaskIsAdded(Task task) {"},{"lineNumber":141,"author":{"gitId":"jovanhuang"},"content":"        MainUI.printDivider();"},{"lineNumber":142,"author":{"gitId":"jovanhuang"},"content":"        System.out.println(ADDED_TASK_MESSAGE);"},{"lineNumber":143,"author":{"gitId":"jovanhuang"},"content":"        System.out.println(\"\\t\" + task);"},{"lineNumber":144,"author":{"gitId":"jovanhuang"},"content":"        printTaskCount();"},{"lineNumber":145,"author":{"gitId":"jovanhuang"},"content":"        MainUI.printDivider();"},{"lineNumber":146,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":148,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"jovanhuang"},"content":"     * Prints the number of tasks in the task list"},{"lineNumber":150,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"jovanhuang"},"content":"    public void printTaskCount() {"},{"lineNumber":152,"author":{"gitId":"jovanhuang"},"content":"        System.out.println(\"Now you have \" + Task.getTaskCount() + \" task(s) in the list.\");"},{"lineNumber":153,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":155,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"jovanhuang"},"content":"     * Marks the task as done in the task list"},{"lineNumber":157,"author":{"gitId":"jovanhuang"},"content":"     * @param taskNumber task number of a task that is done"},{"lineNumber":158,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"jovanhuang"},"content":"    public void markTaskAsDone(int taskNumber) {"},{"lineNumber":160,"author":{"gitId":"jovanhuang"},"content":"        System.out.println(MARKED_TASK_AS_DONE_MESSAGE);"},{"lineNumber":161,"author":{"gitId":"jovanhuang"},"content":"        taskArrayList.get(taskNumber - 1).markAsDone();"},{"lineNumber":162,"author":{"gitId":"jovanhuang"},"content":"        System.out.println(taskArrayList.get(taskNumber - 1));"},{"lineNumber":163,"author":{"gitId":"jovanhuang"},"content":"        MainUI.printDivider();"},{"lineNumber":164,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":165,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":167,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":168,"author":{"gitId":"jovanhuang"},"content":"     * Prints all the tasks in task array list"},{"lineNumber":169,"author":{"gitId":"jovanhuang"},"content":"     * @param taskArrayList task array list containing all the tasks"},{"lineNumber":170,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":171,"author":{"gitId":"jovanhuang"},"content":"    public void printAllTasks(ArrayList\u003cTask\u003e taskArrayList) {"},{"lineNumber":172,"author":{"gitId":"jovanhuang"},"content":"        int TaskCount \u003d 0;"},{"lineNumber":173,"author":{"gitId":"jovanhuang"},"content":"        MainUI.printDivider();"},{"lineNumber":174,"author":{"gitId":"jovanhuang"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":175,"author":{"gitId":"jovanhuang"},"content":"        for (Task task : taskArrayList) {"},{"lineNumber":176,"author":{"gitId":"jovanhuang"},"content":"            TaskCount +\u003d 1;"},{"lineNumber":177,"author":{"gitId":"jovanhuang"},"content":"            System.out.println(TaskCount + \".\" + task);"},{"lineNumber":178,"author":{"gitId":"jovanhuang"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"jovanhuang"},"content":"        MainUI.printDivider();"},{"lineNumber":180,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":182,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":183,"author":{"gitId":"jovanhuang"},"content":"     * Prints all the task that matches user\u0027s keyword in task array list"},{"lineNumber":184,"author":{"gitId":"jovanhuang"},"content":"     * @param taskArrayList task array list containing all the tasks"},{"lineNumber":185,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":186,"author":{"gitId":"jovanhuang"},"content":"    public void printMatchingTasks(ArrayList\u003cTask\u003e taskArrayList) {"},{"lineNumber":187,"author":{"gitId":"jovanhuang"},"content":"        int TaskCount \u003d 0;"},{"lineNumber":188,"author":{"gitId":"jovanhuang"},"content":"        MainUI.printDivider();"},{"lineNumber":189,"author":{"gitId":"jovanhuang"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":190,"author":{"gitId":"jovanhuang"},"content":"        for (Task task : taskArrayList) {"},{"lineNumber":191,"author":{"gitId":"jovanhuang"},"content":"            TaskCount +\u003d 1;"},{"lineNumber":192,"author":{"gitId":"jovanhuang"},"content":"            System.out.println(TaskCount + \".\" + task);"},{"lineNumber":193,"author":{"gitId":"jovanhuang"},"content":"        }"},{"lineNumber":194,"author":{"gitId":"jovanhuang"},"content":"        MainUI.printDivider();"},{"lineNumber":195,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":197,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":198,"author":{"gitId":"jovanhuang"},"content":"}"}],"authorContributionMap":{"jovanhuang":198}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovanhuang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jovanhuang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jovanhuang"},"content":" * Represent a todo task"},{"lineNumber":5,"author":{"gitId":"jovanhuang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jovanhuang"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":8,"author":{"gitId":"jovanhuang"},"content":"    public static final String TODO_LABEL \u003d \"[T]\";"},{"lineNumber":9,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":10,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"jovanhuang"},"content":"     * Constructor for todo"},{"lineNumber":12,"author":{"gitId":"jovanhuang"},"content":"     * @param description describes what the todo task is about"},{"lineNumber":13,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"jovanhuang"},"content":"    public Todo(String description) {"},{"lineNumber":15,"author":{"gitId":"jovanhuang"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":18,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"jovanhuang"},"content":"     * Checks if Todo\u0027s description is misssing"},{"lineNumber":20,"author":{"gitId":"jovanhuang"},"content":"     * @param input the part of the todo string where description should appear"},{"lineNumber":21,"author":{"gitId":"jovanhuang"},"content":"     * @throws TaskDescriptionMissingException exception arises when todo\u0027s description is not found"},{"lineNumber":22,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jovanhuang"},"content":"    public static void checkIfToDoDescriptionExists(String input) throws TaskDescriptionMissingException {"},{"lineNumber":24,"author":{"gitId":"jovanhuang"},"content":"        if (input.isBlank()) {"},{"lineNumber":25,"author":{"gitId":"jovanhuang"},"content":"            Task.decreaseTaskCount();"},{"lineNumber":26,"author":{"gitId":"jovanhuang"},"content":"            throw new TaskDescriptionMissingException();"},{"lineNumber":27,"author":{"gitId":"jovanhuang"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":30,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"jovanhuang"},"content":"     * Override \u0027toString\u0027 method to print out a customised message when printing a todo object."},{"lineNumber":32,"author":{"gitId":"jovanhuang"},"content":"     * @return"},{"lineNumber":33,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"jovanhuang"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"jovanhuang"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"jovanhuang"},"content":"        return TODO_LABEL + super.toString();"},{"lineNumber":37,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"jovanhuang"},"content":"}"}],"authorContributionMap":{"jovanhuang":38}},{"path":"src/main/java/duke/ui/MainUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jovanhuang"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":3,"author":{"gitId":"jovanhuang"},"content":"import duke.accessfile.FileManager;"},{"lineNumber":4,"author":{"gitId":"jovanhuang"},"content":"import duke.command.CommandNotFoundException;"},{"lineNumber":5,"author":{"gitId":"jovanhuang"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"jovanhuang"},"content":"import duke.task.TaskManager;"},{"lineNumber":7,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":8,"author":{"gitId":"jovanhuang"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"jovanhuang"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"jovanhuang"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"jovanhuang"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":13,"author":{"gitId":"jovanhuang"},"content":"public class MainUI {"},{"lineNumber":14,"author":{"gitId":"jovanhuang"},"content":"    public static final String LIST_COMMAND \u003d \"list\";"},{"lineNumber":15,"author":{"gitId":"jovanhuang"},"content":"    public static final String BYE_COMMAND \u003d \"bye\";"},{"lineNumber":16,"author":{"gitId":"jovanhuang"},"content":"    public static final String FILE_PATH \u003d \"data/duke.txt\";"},{"lineNumber":17,"author":{"gitId":"jovanhuang"},"content":"    public static final String DIRECTORY_NAME \u003d \"data\";"},{"lineNumber":18,"author":{"gitId":"jovanhuang"},"content":"    public static boolean isEnding \u003d false;"},{"lineNumber":19,"author":{"gitId":"jovanhuang"},"content":"    public static ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"jovanhuang"},"content":"    public static final String LOGO_STRING \u003d \" ____        _        \\n\""},{"lineNumber":21,"author":{"gitId":"jovanhuang"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":22,"author":{"gitId":"jovanhuang"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":23,"author":{"gitId":"jovanhuang"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":24,"author":{"gitId":"jovanhuang"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":25,"author":{"gitId":"jovanhuang"},"content":"    private FileManager fileManager;"},{"lineNumber":26,"author":{"gitId":"jovanhuang"},"content":"    private TaskManager taskManager;"},{"lineNumber":27,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":28,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"jovanhuang"},"content":"     * Constructor for MainUI class. FileManager and TaskManager will be instantiated here."},{"lineNumber":30,"author":{"gitId":"jovanhuang"},"content":"      */"},{"lineNumber":31,"author":{"gitId":"jovanhuang"},"content":"    public MainUI() {"},{"lineNumber":32,"author":{"gitId":"jovanhuang"},"content":"        fileManager \u003d new FileManager();"},{"lineNumber":33,"author":{"gitId":"jovanhuang"},"content":"        taskManager \u003d new TaskManager();"},{"lineNumber":34,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":36,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"jovanhuang"},"content":"     * Calls program to run"},{"lineNumber":38,"author":{"gitId":"jovanhuang"},"content":"     * @param in Scanner input"},{"lineNumber":39,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"jovanhuang"},"content":"    public void displayUI(Scanner in) {"},{"lineNumber":41,"author":{"gitId":"jovanhuang"},"content":"        runProgram(in);"},{"lineNumber":42,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":44,"author":{"gitId":"jovanhuang"},"content":"    private void runProgram(Scanner in) {"},{"lineNumber":45,"author":{"gitId":"jovanhuang"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"jovanhuang"},"content":"            File data \u003d new File(FILE_PATH);"},{"lineNumber":47,"author":{"gitId":"jovanhuang"},"content":"            if (data.createNewFile()) {"},{"lineNumber":48,"author":{"gitId":"jovanhuang"},"content":"                fileManager.printMessageForCreatingNewFile(data);"},{"lineNumber":49,"author":{"gitId":"jovanhuang"},"content":"            } else {"},{"lineNumber":50,"author":{"gitId":"jovanhuang"},"content":"                taskArrayList \u003d fileManager.loadData();"},{"lineNumber":51,"author":{"gitId":"jovanhuang"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"jovanhuang"},"content":"        } catch (IOException e) {"},{"lineNumber":53,"author":{"gitId":"jovanhuang"},"content":"            System.out.println(\"We couldn\u0027t find the \u0027data\u0027 folder in your directory. This data folder will store your tasks.\");"},{"lineNumber":54,"author":{"gitId":"jovanhuang"},"content":"            System.out.println(\"Creating \u0027data\u0027 folder now...\");"},{"lineNumber":55,"author":{"gitId":"jovanhuang"},"content":"            fileManager.createDirectory(DIRECTORY_NAME);"},{"lineNumber":56,"author":{"gitId":"jovanhuang"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"jovanhuang"},"content":"        printWelcomeMessage();"},{"lineNumber":58,"author":{"gitId":"jovanhuang"},"content":"        while (!isEnding) {"},{"lineNumber":59,"author":{"gitId":"jovanhuang"},"content":"            String input \u003d in.nextLine();"},{"lineNumber":60,"author":{"gitId":"jovanhuang"},"content":"            switch (input) {"},{"lineNumber":61,"author":{"gitId":"jovanhuang"},"content":"            case LIST_COMMAND:"},{"lineNumber":62,"author":{"gitId":"jovanhuang"},"content":"                taskManager.printAllTasks(taskArrayList);"},{"lineNumber":63,"author":{"gitId":"jovanhuang"},"content":"                break;"},{"lineNumber":64,"author":{"gitId":"jovanhuang"},"content":"            case BYE_COMMAND:"},{"lineNumber":65,"author":{"gitId":"jovanhuang"},"content":"                stopProgram();"},{"lineNumber":66,"author":{"gitId":"jovanhuang"},"content":"                break;"},{"lineNumber":67,"author":{"gitId":"jovanhuang"},"content":"            default:"},{"lineNumber":68,"author":{"gitId":"jovanhuang"},"content":"                try {"},{"lineNumber":69,"author":{"gitId":"jovanhuang"},"content":"                    taskManager.handleTask(input);"},{"lineNumber":70,"author":{"gitId":"jovanhuang"},"content":"                } catch (CommandNotFoundException e) {"},{"lineNumber":71,"author":{"gitId":"jovanhuang"},"content":"                    System.out.println(e.getMessage());"},{"lineNumber":72,"author":{"gitId":"jovanhuang"},"content":"                }"},{"lineNumber":73,"author":{"gitId":"jovanhuang"},"content":"                break;"},{"lineNumber":74,"author":{"gitId":"jovanhuang"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"jovanhuang"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":78,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"jovanhuang"},"content":"     * Print a chunk of strings for the introduction of Duke program"},{"lineNumber":80,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"jovanhuang"},"content":"    public void printWelcomeMessage() {"},{"lineNumber":82,"author":{"gitId":"jovanhuang"},"content":"        System.out.println(\"Hello from\\n\" + LOGO_STRING);"},{"lineNumber":83,"author":{"gitId":"jovanhuang"},"content":"        printDivider();"},{"lineNumber":84,"author":{"gitId":"jovanhuang"},"content":"        System.out.println(\"Hello, I\u0027m Duke\");"},{"lineNumber":85,"author":{"gitId":"jovanhuang"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":86,"author":{"gitId":"jovanhuang"},"content":"        System.out.println();"},{"lineNumber":87,"author":{"gitId":"jovanhuang"},"content":"        printDivider();"},{"lineNumber":88,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":90,"author":{"gitId":"jovanhuang"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"jovanhuang"},"content":"     * Print message before exiting Duke program"},{"lineNumber":92,"author":{"gitId":"jovanhuang"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"jovanhuang"},"content":"    public void stopProgram() {"},{"lineNumber":94,"author":{"gitId":"jovanhuang"},"content":"        isEnding \u003d true;"},{"lineNumber":95,"author":{"gitId":"jovanhuang"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":96,"author":{"gitId":"jovanhuang"},"content":"        printDivider();"},{"lineNumber":97,"author":{"gitId":"jovanhuang"},"content":"        System.exit(0);"},{"lineNumber":98,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":100,"author":{"gitId":"jovanhuang"},"content":"    public static void printDivider() {"},{"lineNumber":101,"author":{"gitId":"jovanhuang"},"content":"        System.out.println(\"________________________________\");"},{"lineNumber":102,"author":{"gitId":"jovanhuang"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":104,"author":{"gitId":"jovanhuang"},"content":""},{"lineNumber":105,"author":{"gitId":"jovanhuang"},"content":"}"}],"authorContributionMap":{"jovanhuang":105}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jovanhuang"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"jovanhuang"},"content":"list"},{"lineNumber":3,"author":{"gitId":"jovanhuang"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"jovanhuang"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"jovanhuang"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":6,"author":{"gitId":"jovanhuang"},"content":"bye"}],"authorContributionMap":{"jovanhuang":6}}]
