[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"### Feature 1: Bye"},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"Exits program"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"### Feature 2: Todo"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"Adds a todo task to the list"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"### Feature 3: Event"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"Adds an event task to the list"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"### Feature 4: Deadline"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":"Adds a deadline task to the list"},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"### Feature 5: List"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"Prints out all the tasks stored in the list"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"### Feature 6: Done"},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"Marks a task in the list as completed"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":"### Feature 7: Delete"},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"Deletes a task from the list"},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"### Feature 8: Find"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":"Finds a task from the list that contains a certain keyword"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":"### `bye` - Exits program"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":"An exit message will be printed before the program exits"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"rageqqq"},"content":"`bye`"},{"lineNumber":38,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":39,"author":{"gitId":"rageqqq"},"content":"Expected outcome:"},{"lineNumber":40,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":41,"author":{"gitId":"rageqqq"},"content":"`Bye. Hope to see you again soon!`"},{"lineNumber":42,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":43,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":44,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":45,"author":{"gitId":"rageqqq"},"content":"### `todo (description)` - Adds a todo task"},{"lineNumber":46,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":47,"author":{"gitId":"rageqqq"},"content":"The task added will be printed to show that the task has been added"},{"lineNumber":48,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":49,"author":{"gitId":"rageqqq"},"content":"Example of usage:"},{"lineNumber":50,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":51,"author":{"gitId":"rageqqq"},"content":"`todo sleep`"},{"lineNumber":52,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":53,"author":{"gitId":"rageqqq"},"content":"Expected outcome:"},{"lineNumber":54,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":55,"author":{"gitId":"rageqqq"},"content":"` Got it. I\u0027ve added this task:`"},{"lineNumber":56,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":57,"author":{"gitId":"rageqqq"},"content":"`[T][✘] sleep`"},{"lineNumber":58,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":59,"author":{"gitId":"rageqqq"},"content":"`Now you have 1 tasks in the list.`"},{"lineNumber":60,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":61,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":62,"author":{"gitId":"rageqqq"},"content":"### `event (description) (/at time)` - Adds an event task"},{"lineNumber":63,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":64,"author":{"gitId":"rageqqq"},"content":"The task added will be printed to show that the task has been added"},{"lineNumber":65,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":66,"author":{"gitId":"rageqqq"},"content":"Example of usage:"},{"lineNumber":67,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":68,"author":{"gitId":"rageqqq"},"content":"`event sleep /at 9pm`"},{"lineNumber":69,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":70,"author":{"gitId":"rageqqq"},"content":"Expected outcome:"},{"lineNumber":71,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":72,"author":{"gitId":"rageqqq"},"content":"` Got it. I\u0027ve added this task:`"},{"lineNumber":73,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":74,"author":{"gitId":"rageqqq"},"content":"`[E][✘] sleep  (at: 9pm)`"},{"lineNumber":75,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":76,"author":{"gitId":"rageqqq"},"content":"`Now you have 1 tasks in the list.`"},{"lineNumber":77,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":78,"author":{"gitId":"rageqqq"},"content":"### `deadline (description) (/by time)` - Adds a deadline task"},{"lineNumber":79,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":80,"author":{"gitId":"rageqqq"},"content":"The task added will be printed to show that the task has been added"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"rageqqq"},"content":"Example of usage:"},{"lineNumber":83,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":84,"author":{"gitId":"rageqqq"},"content":"`deadline sleep /by 9pm`"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"rageqqq"},"content":"` Got it. I\u0027ve added this task:`"},{"lineNumber":89,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":90,"author":{"gitId":"rageqqq"},"content":"`[D][✘] sleep  (by: 9pm)`"},{"lineNumber":91,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":92,"author":{"gitId":"rageqqq"},"content":"`Now you have 1 tasks in the list.`"},{"lineNumber":93,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":94,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":95,"author":{"gitId":"rageqqq"},"content":"### `list` - Prints all the tasks"},{"lineNumber":96,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":97,"author":{"gitId":"rageqqq"},"content":"All the tasks in the list will be printed"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"rageqqq"},"content":"`list`"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"rageqqq"},"content":"` Here are the tasks in your list:`"},{"lineNumber":106,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":107,"author":{"gitId":"rageqqq"},"content":"`1.[D][✘] sleep  (by: 9pm)`"},{"lineNumber":108,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":109,"author":{"gitId":"rageqqq"},"content":"### `done (task number)` - Marks a task as complete"},{"lineNumber":110,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":111,"author":{"gitId":"rageqqq"},"content":"The task that is marked as complete will be printed"},{"lineNumber":112,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":113,"author":{"gitId":"rageqqq"},"content":"Example of usage:"},{"lineNumber":114,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":115,"author":{"gitId":"rageqqq"},"content":"`done 1`"},{"lineNumber":116,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":117,"author":{"gitId":"rageqqq"},"content":"Expected outcome:"},{"lineNumber":118,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":119,"author":{"gitId":"rageqqq"},"content":"` Nice! I\u0027ve marked this task as done:`"},{"lineNumber":120,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":121,"author":{"gitId":"rageqqq"},"content":"`[D][✓] sleep  (by: 9pm)`"},{"lineNumber":122,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":123,"author":{"gitId":"rageqqq"},"content":"### `delete (task number)` - Deletes a task"},{"lineNumber":124,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":125,"author":{"gitId":"rageqqq"},"content":"The tasks that is deleted will be printed"},{"lineNumber":126,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":127,"author":{"gitId":"rageqqq"},"content":"Example of usage:"},{"lineNumber":128,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":129,"author":{"gitId":"rageqqq"},"content":"`delete 1`"},{"lineNumber":130,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":131,"author":{"gitId":"rageqqq"},"content":"Expected outcome:"},{"lineNumber":132,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":133,"author":{"gitId":"rageqqq"},"content":"` Noted. I\u0027ve removed this task:`"},{"lineNumber":134,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":135,"author":{"gitId":"rageqqq"},"content":"`[D][✓] sleep  (by: 9pm)`"},{"lineNumber":136,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":137,"author":{"gitId":"rageqqq"},"content":"`Now you have 0 tasks in the list.`"},{"lineNumber":138,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":139,"author":{"gitId":"rageqqq"},"content":"### `find (keyword)` - Finds tasks that contains keyword"},{"lineNumber":140,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":141,"author":{"gitId":"rageqqq"},"content":"All tasks that contains the keyword will be printed"},{"lineNumber":142,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":143,"author":{"gitId":"rageqqq"},"content":"Example of usage:"},{"lineNumber":144,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":145,"author":{"gitId":"rageqqq"},"content":"`find sleep`"},{"lineNumber":146,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":147,"author":{"gitId":"rageqqq"},"content":"Expected outcome:"},{"lineNumber":148,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":149,"author":{"gitId":"rageqqq"},"content":"` Here are the matching tasks in your list:`"},{"lineNumber":150,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":151,"author":{"gitId":"rageqqq"},"content":"`1.[D][✓] sleep  (by: 9pm)`"}],"authorContributionMap":{"rageqqq":130,"-":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"import exception.DukeException;"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"import tasks.Task;"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"import tasks.Deadline;"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"import tasks.Event;"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"import tasks.ToDo;"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"import ui.Ui;"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"import parser.Parser;"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"    private static final Ui ui \u003d new Ui();"},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"    private static final Parser parser \u003d new Parser();"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"    private static final ArrayList\u003cTask\u003e Tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":"     * Prints all the tasks which is stored in the Task arraylist"},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":"    public static void printList(){"},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":"        ui.showToUser(ui.DIVIDER, \"Here are the tasks in your list:\");"},{"lineNumber":30,"author":{"gitId":"rageqqq"},"content":"        for (int i\u003d0; i\u003cTasks.size(); ++i){"},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":"            Task task \u003d Tasks.get(i);"},{"lineNumber":32,"author":{"gitId":"rageqqq"},"content":"            Integer taskNumber \u003d i+1;"},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":"            ui.showToUser(taskNumber + \".\" + task.toString());"},{"lineNumber":34,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"rageqqq"},"content":"        ui.showToUser(ui.DIVIDER);"},{"lineNumber":36,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":38,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"rageqqq"},"content":"     * Prints the task which the user added"},{"lineNumber":40,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"rageqqq"},"content":"    public static void printTaskAdded(){"},{"lineNumber":43,"author":{"gitId":"rageqqq"},"content":"        ui.showToUser("},{"lineNumber":44,"author":{"gitId":"rageqqq"},"content":"                ui.DIVIDER,"},{"lineNumber":45,"author":{"gitId":"rageqqq"},"content":"                \" Got it. I\u0027ve added this task:\\n\" + Tasks.get(Tasks.size()-1).toString(),"},{"lineNumber":46,"author":{"gitId":"rageqqq"},"content":"                \"Now you have \" + Tasks.size() + \" tasks in the list.\","},{"lineNumber":47,"author":{"gitId":"rageqqq"},"content":"                ui.DIVIDER);"},{"lineNumber":48,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":50,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"rageqqq"},"content":"     * Checks if the user input is valid"},{"lineNumber":52,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"rageqqq"},"content":"     * @param words user input split into individual words"},{"lineNumber":54,"author":{"gitId":"rageqqq"},"content":"     * @throws DukeException If input is not a valid command for the program"},{"lineNumber":55,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"rageqqq"},"content":"    public static void findTask(String input) {"},{"lineNumber":57,"author":{"gitId":"rageqqq"},"content":"        int taskCount \u003d 1;"},{"lineNumber":58,"author":{"gitId":"rageqqq"},"content":"        ui.showToUser(ui.DIVIDER, \"Here are the matching tasks in your list:\");"},{"lineNumber":59,"author":{"gitId":"rageqqq"},"content":"        for (Task task : Tasks) {"},{"lineNumber":60,"author":{"gitId":"rageqqq"},"content":"            if (task.getDescription().contains(input)){"},{"lineNumber":61,"author":{"gitId":"rageqqq"},"content":"                ui.showToUser(taskCount + \".\" + task.toString());"},{"lineNumber":62,"author":{"gitId":"rageqqq"},"content":"                taskCount++;"},{"lineNumber":63,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"rageqqq"},"content":"        ui.showToUser(ui.DIVIDER);"},{"lineNumber":66,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":68,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":69,"author":{"gitId":"rageqqq"},"content":"    public static void validateInput(String[] words) throws DukeException {"},{"lineNumber":70,"author":{"gitId":"rageqqq"},"content":"        if(parser.parseCommand(words)) {"},{"lineNumber":71,"author":{"gitId":"rageqqq"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":72,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":75,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"rageqqq"},"content":"     * Checks if the todo command is valid"},{"lineNumber":77,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"rageqqq"},"content":"     * @param words user input split into description"},{"lineNumber":79,"author":{"gitId":"rageqqq"},"content":"     * @throws DukeException If input is not a valid todo command"},{"lineNumber":80,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"rageqqq"},"content":"    public static void validateToDoInput(String[] words) throws DukeException {"},{"lineNumber":82,"author":{"gitId":"rageqqq"},"content":"        if(parser.parseToDoCommand(words)) {"},{"lineNumber":83,"author":{"gitId":"rageqqq"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":84,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":87,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"rageqqq"},"content":"     * Checks if the list command is valid"},{"lineNumber":89,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"rageqqq"},"content":"     * @param words user input"},{"lineNumber":91,"author":{"gitId":"rageqqq"},"content":"     * @throws DukeException If input is not a valid list command"},{"lineNumber":92,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"rageqqq"},"content":"    public static void validateListInput(String[] words) throws DukeException {"},{"lineNumber":94,"author":{"gitId":"rageqqq"},"content":"        if (parser.parseListCommand(words)) {"},{"lineNumber":95,"author":{"gitId":"rageqqq"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a list should be empty.\");"},{"lineNumber":96,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":99,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"rageqqq"},"content":"     * Loads the file and stores the information into the ArrayList Tasks"},{"lineNumber":101,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"rageqqq"},"content":"     * @throws FileNotFoundException If the file cannot be found"},{"lineNumber":103,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"rageqqq"},"content":"    public static void loadFile() throws FileNotFoundException {"},{"lineNumber":105,"author":{"gitId":"rageqqq"},"content":"        File f \u003d new File(\"tasks.txt\");"},{"lineNumber":106,"author":{"gitId":"rageqqq"},"content":"        if (!f.exists()) {"},{"lineNumber":107,"author":{"gitId":"rageqqq"},"content":"            throw new FileNotFoundException();"},{"lineNumber":108,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"rageqqq"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":110,"author":{"gitId":"rageqqq"},"content":"        while (s.hasNext()) {"},{"lineNumber":111,"author":{"gitId":"rageqqq"},"content":"            String input \u003d s.nextLine();"},{"lineNumber":112,"author":{"gitId":"rageqqq"},"content":"            String[] words \u003d input.split(\" \");"},{"lineNumber":113,"author":{"gitId":"rageqqq"},"content":"            boolean isTodo \u003d words[0].equals(\"T\");"},{"lineNumber":114,"author":{"gitId":"rageqqq"},"content":"            boolean isDeadline \u003d words[0].equals(\"D\");"},{"lineNumber":115,"author":{"gitId":"rageqqq"},"content":"            boolean isEvent \u003d words[0].equals(\"E\");"},{"lineNumber":116,"author":{"gitId":"rageqqq"},"content":"            boolean isDone \u003d words[1].equals(\"Y\");"},{"lineNumber":117,"author":{"gitId":"rageqqq"},"content":"            input \u003d input.substring(4);"},{"lineNumber":118,"author":{"gitId":"rageqqq"},"content":"            words \u003d input.split(\"/d\");"},{"lineNumber":119,"author":{"gitId":"rageqqq"},"content":"            if (isDeadline) {"},{"lineNumber":120,"author":{"gitId":"rageqqq"},"content":"                Deadline deadline \u003d new Deadline(words[0], words[1]);"},{"lineNumber":121,"author":{"gitId":"rageqqq"},"content":"                Tasks.add(deadline);"},{"lineNumber":122,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"rageqqq"},"content":"            else if (isEvent) {"},{"lineNumber":124,"author":{"gitId":"rageqqq"},"content":"                Event event \u003d new Event(words[0], words[1]);"},{"lineNumber":125,"author":{"gitId":"rageqqq"},"content":"                Tasks.add(event);"},{"lineNumber":126,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"rageqqq"},"content":"            else if (isTodo) {"},{"lineNumber":128,"author":{"gitId":"rageqqq"},"content":"                ToDo toDo \u003d new ToDo(words[0]);"},{"lineNumber":129,"author":{"gitId":"rageqqq"},"content":"                Tasks.add(toDo);"},{"lineNumber":130,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"rageqqq"},"content":"            if (isDone) {"},{"lineNumber":132,"author":{"gitId":"rageqqq"},"content":"                Tasks.get(Tasks.size()-1).taskComplete();"},{"lineNumber":133,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":134,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":137,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"rageqqq"},"content":"     * Saves the tasks information from the ArrayList into the file specified"},{"lineNumber":139,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":140,"author":{"gitId":"rageqqq"},"content":"     * @param filepath Name of the file"},{"lineNumber":141,"author":{"gitId":"rageqqq"},"content":"     * @throws IOException If there is something wrong with writing into the file"},{"lineNumber":142,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":143,"author":{"gitId":"rageqqq"},"content":"    public static void saveFile(String filepath) throws IOException {"},{"lineNumber":144,"author":{"gitId":"rageqqq"},"content":"        FileWriter fw \u003d new FileWriter(filepath);"},{"lineNumber":145,"author":{"gitId":"rageqqq"},"content":"        for (Task task: Tasks) {"},{"lineNumber":146,"author":{"gitId":"rageqqq"},"content":"            fw.write(task.toSaveFormat());"},{"lineNumber":147,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"rageqqq"},"content":"        fw.close();"},{"lineNumber":149,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":151,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":152,"author":{"gitId":"rageqqq"},"content":"     * Runs the code necessary for the bot to run"},{"lineNumber":153,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":154,"author":{"gitId":"rageqqq"},"content":"     * @param args User input at the start of the program"},{"lineNumber":155,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":157,"author":{"gitId":"rageqqq"},"content":"        String line;"},{"lineNumber":158,"author":{"gitId":"rageqqq"},"content":"        Scanner Input \u003d new Scanner(System.in);"},{"lineNumber":159,"author":{"gitId":"rageqqq"},"content":"        ui.showIntroMessage();"},{"lineNumber":160,"author":{"gitId":"rageqqq"},"content":"        try {"},{"lineNumber":161,"author":{"gitId":"rageqqq"},"content":"            loadFile();"},{"lineNumber":162,"author":{"gitId":"rageqqq"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":163,"author":{"gitId":"rageqqq"},"content":"            ui.showToUser(\"File Not Found\", \"Creating new file...\");"},{"lineNumber":164,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"rageqqq"},"content":"        line \u003d Input.nextLine();"},{"lineNumber":166,"author":{"gitId":"rageqqq"},"content":"        boolean inSystem \u003d !line.equals(\"bye\");"},{"lineNumber":167,"author":{"gitId":"rageqqq"},"content":"        while (inSystem) {"},{"lineNumber":168,"author":{"gitId":"rageqqq"},"content":"            String[] words \u003d line.split(\" \");"},{"lineNumber":169,"author":{"gitId":"rageqqq"},"content":"            boolean isList \u003d words[0].equals(\"list\");"},{"lineNumber":170,"author":{"gitId":"rageqqq"},"content":"            boolean isDone \u003d words[0].equals(\"done\");"},{"lineNumber":171,"author":{"gitId":"rageqqq"},"content":"            boolean isTodo \u003d words[0].equals(\"todo\");"},{"lineNumber":172,"author":{"gitId":"rageqqq"},"content":"            boolean isDeadline \u003d words[0].equals(\"deadline\");"},{"lineNumber":173,"author":{"gitId":"rageqqq"},"content":"            boolean isEvent \u003d words[0].equals(\"event\");"},{"lineNumber":174,"author":{"gitId":"rageqqq"},"content":"            boolean isDelete \u003d words[0].equals(\"delete\");"},{"lineNumber":175,"author":{"gitId":"rageqqq"},"content":"            boolean isFind \u003d words[0].equals(\"find\");"},{"lineNumber":176,"author":{"gitId":"rageqqq"},"content":"            try {"},{"lineNumber":177,"author":{"gitId":"rageqqq"},"content":"                validateInput(words);"},{"lineNumber":178,"author":{"gitId":"rageqqq"},"content":"            } catch (Exception e) {"},{"lineNumber":179,"author":{"gitId":"rageqqq"},"content":"                ui.showToUser(e.getMessage());"},{"lineNumber":180,"author":{"gitId":"rageqqq"},"content":"                line \u003d Input.nextLine();"},{"lineNumber":181,"author":{"gitId":"rageqqq"},"content":"                inSystem \u003d !line.equals(\"bye\");"},{"lineNumber":182,"author":{"gitId":"rageqqq"},"content":"                continue;"},{"lineNumber":183,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":184,"author":{"gitId":"rageqqq"},"content":"            if (isList) {"},{"lineNumber":185,"author":{"gitId":"rageqqq"},"content":"                try {"},{"lineNumber":186,"author":{"gitId":"rageqqq"},"content":"                    validateListInput(words);"},{"lineNumber":187,"author":{"gitId":"rageqqq"},"content":"                } catch (Exception e) {"},{"lineNumber":188,"author":{"gitId":"rageqqq"},"content":"                    ui.showToUser(e.getMessage());"},{"lineNumber":189,"author":{"gitId":"rageqqq"},"content":"                    line \u003d Input.nextLine();"},{"lineNumber":190,"author":{"gitId":"rageqqq"},"content":"                    inSystem \u003d !line.equals(\"bye\");"},{"lineNumber":191,"author":{"gitId":"rageqqq"},"content":"                    continue;"},{"lineNumber":192,"author":{"gitId":"rageqqq"},"content":"                }"},{"lineNumber":193,"author":{"gitId":"rageqqq"},"content":"                printList();"},{"lineNumber":194,"author":{"gitId":"rageqqq"},"content":"            } else if (isDone) {"},{"lineNumber":195,"author":{"gitId":"rageqqq"},"content":"                int taskNumber \u003d Integer.parseInt(words[1]) - 1;"},{"lineNumber":196,"author":{"gitId":"rageqqq"},"content":"                Tasks.get(taskNumber).taskComplete();"},{"lineNumber":197,"author":{"gitId":"rageqqq"},"content":"                ui.showToUser(ui.DIVIDER, \"Nice! I\u0027ve marked this task as done:\\n\" + \" \" + Tasks.get(taskNumber).toString(), ui.DIVIDER);"},{"lineNumber":198,"author":{"gitId":"rageqqq"},"content":"            } else if (isDelete) {"},{"lineNumber":199,"author":{"gitId":"rageqqq"},"content":"                int taskNumber \u003d Integer.parseInt(words[1]) - 1;"},{"lineNumber":200,"author":{"gitId":"rageqqq"},"content":"                ui.showToUser(ui.DIVIDER, \"Noted. I\u0027ve removed this task:\\n\" + Tasks.get(taskNumber).toString());"},{"lineNumber":201,"author":{"gitId":"rageqqq"},"content":"                Tasks.remove(taskNumber);"},{"lineNumber":202,"author":{"gitId":"rageqqq"},"content":"                ui.showToUser(\"Now you have \" + Tasks.size() + \" tasks in the list.\", ui.DIVIDER);"},{"lineNumber":203,"author":{"gitId":"rageqqq"},"content":"            } else if (isTodo) {"},{"lineNumber":204,"author":{"gitId":"rageqqq"},"content":"                try {"},{"lineNumber":205,"author":{"gitId":"rageqqq"},"content":"                    validateToDoInput(words);"},{"lineNumber":206,"author":{"gitId":"rageqqq"},"content":"                } catch (Exception e) {"},{"lineNumber":207,"author":{"gitId":"rageqqq"},"content":"                    ui.showToUser(e.getMessage());"},{"lineNumber":208,"author":{"gitId":"rageqqq"},"content":"                    line \u003d Input.nextLine();"},{"lineNumber":209,"author":{"gitId":"rageqqq"},"content":"                    inSystem \u003d !line.equals(\"bye\");"},{"lineNumber":210,"author":{"gitId":"rageqqq"},"content":"                    continue;"},{"lineNumber":211,"author":{"gitId":"rageqqq"},"content":"                }"},{"lineNumber":212,"author":{"gitId":"rageqqq"},"content":"                line \u003d line.replace(\"todo \", \"\");"},{"lineNumber":213,"author":{"gitId":"rageqqq"},"content":"                ToDo toDo \u003d new ToDo(line);"},{"lineNumber":214,"author":{"gitId":"rageqqq"},"content":"                Tasks.add(toDo);"},{"lineNumber":215,"author":{"gitId":"rageqqq"},"content":"                printTaskAdded();"},{"lineNumber":216,"author":{"gitId":"rageqqq"},"content":"            } else if (isDeadline) {"},{"lineNumber":217,"author":{"gitId":"rageqqq"},"content":"                line \u003d line.replace(\"deadline \", \"\");"},{"lineNumber":218,"author":{"gitId":"rageqqq"},"content":"                words \u003d line.split(\"/by \");"},{"lineNumber":219,"author":{"gitId":"rageqqq"},"content":"                Deadline deadline \u003d new Deadline(words[0], words[1]);"},{"lineNumber":220,"author":{"gitId":"rageqqq"},"content":"                Tasks.add(deadline);"},{"lineNumber":221,"author":{"gitId":"rageqqq"},"content":"                printTaskAdded();"},{"lineNumber":222,"author":{"gitId":"rageqqq"},"content":"            } else if (isEvent) {"},{"lineNumber":223,"author":{"gitId":"rageqqq"},"content":"                line \u003d line.replace(\"event \", \"\");"},{"lineNumber":224,"author":{"gitId":"rageqqq"},"content":"                words \u003d line.split(\"/at \");"},{"lineNumber":225,"author":{"gitId":"rageqqq"},"content":"                Event event \u003d new Event(words[0], words[1]);"},{"lineNumber":226,"author":{"gitId":"rageqqq"},"content":"                Tasks.add(event);"},{"lineNumber":227,"author":{"gitId":"rageqqq"},"content":"                printTaskAdded();"},{"lineNumber":228,"author":{"gitId":"rageqqq"},"content":"            } else if (isFind) {"},{"lineNumber":229,"author":{"gitId":"rageqqq"},"content":"                line \u003d line.replace(\"find \", \"\");"},{"lineNumber":230,"author":{"gitId":"rageqqq"},"content":"                findTask(line);"},{"lineNumber":231,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":232,"author":{"gitId":"rageqqq"},"content":"            line \u003d Input.nextLine();"},{"lineNumber":233,"author":{"gitId":"rageqqq"},"content":"            inSystem \u003d !line.equals(\"bye\");"},{"lineNumber":234,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":235,"author":{"gitId":"rageqqq"},"content":"        String file \u003d \"tasks.txt\";"},{"lineNumber":236,"author":{"gitId":"rageqqq"},"content":"        try {"},{"lineNumber":237,"author":{"gitId":"rageqqq"},"content":"            saveFile(file);"},{"lineNumber":238,"author":{"gitId":"rageqqq"},"content":"        } catch (IOException e) {"},{"lineNumber":239,"author":{"gitId":"rageqqq"},"content":"            ui.showToUser(\"Something went wrong: \" + e.getMessage());"},{"lineNumber":240,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":241,"author":{"gitId":"rageqqq"},"content":"        ui.showExitMessage();"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":243,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":244,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"rageqqq":240,"-":4}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"public class DukeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"    public DukeException(String s) {"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"        super(s);"},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":7}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"     * Checks if the command is a valid input"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"     * @param input User input"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"     * @return true if command is invalid otherwise false"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"    public boolean parseCommand(String[] input){"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"        String[] validInputs \u003d {\"list\", \"done\", \"todo\", \"deadline\", \"event\", \"delete\", \"find\"};"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":"        return !Arrays.asList(validInputs).contains(input[0]);"},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"     * Checks if todo command is a valid input"},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"     * @param input User input"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"     * @return true if input is of size 1 otherwise false"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"    public boolean parseToDoCommand(String[] input) {"},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":"        return input.length \u003d\u003d 1;"},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":"     * Checks if list command is a valid input"},{"lineNumber":30,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":"     * @param input User input"},{"lineNumber":32,"author":{"gitId":"rageqqq"},"content":"     * @return true if input size is greater than 1 otherwise false"},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"rageqqq"},"content":"    public boolean parseListCommand(String[] input) {"},{"lineNumber":35,"author":{"gitId":"rageqqq"},"content":"        return input.length \u003e 1;"},{"lineNumber":36,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":37}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"    protected String by;"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"     * Creates a Deadline Class which is a subclass of the Task Class"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"     * @param description description of the task"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"     * @param by deadline of the task"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"        this.by \u003d by;"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"     * Returns every information about the task in correct format for storage"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"     * @return String that has all the information about the task"},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":"    public String toSaveFormat() {"},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"        if (isDone) {"},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":"            return \"D \" + \"Y \" + description + \"/d\" + by + \"\\n\";"},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":"        else {"},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":"            return \"D \" + \"N \" + description + \"/d\" + by + \"\\n\";"},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":32,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":"     * Returns every information about the task in correct format for printing"},{"lineNumber":34,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"rageqqq"},"content":"     * @return String that has all the information about the task"},{"lineNumber":36,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"rageqqq"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"rageqqq"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"rageqqq"},"content":"        return \"[D]\" + super.getStatus() + \" \" + super.getDescription() + \" (by: \" + by + \")\";"},{"lineNumber":40,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":42,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":42}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"     * Creates an Event class that is a subclass of Task class"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"     * @param description description of the task"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"     * @param at time which the task takes place"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"    public Event(String description, String at) {"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"        this.at \u003d at;"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"     * Returns every information about the task in correct format for storage"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"     * @return String that has all the information about the task"},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":"    public String toSaveFormat() {"},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"        if (isDone) {"},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":"            return \"E \" + \"Y \" + description + \"/d\" + at + \"\\n\";"},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":"        else {"},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":"            return \"E \" + \"N \" + description + \"/d\" + at + \"\\n\";"},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":32,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":"     * Returns every information about the task in correct format for printing"},{"lineNumber":34,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"rageqqq"},"content":"     * @return String that has all the information about the task"},{"lineNumber":36,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"rageqqq"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"rageqqq"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"rageqqq"},"content":"        return \"[E]\" + super.getStatus() + \" \" + super.getDescription() + \" (at: \" + at + \")\";"},{"lineNumber":40,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":41}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"     * Creates a new Task class with the necessary information"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"     * @param description Description of the task"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"    public Task(String description) {"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"        this.isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"     * Returns the status of the task"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"     * @return Tick if task is completed otherwise Cross"},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"    public String getStatusIcon() {"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":"     * Returns the status of the task in proper formatting"},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":"     * @return Proper format of the status"},{"lineNumber":30,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":"    public String getStatus() {"},{"lineNumber":32,"author":{"gitId":"rageqqq"},"content":"        return \"[\" + getStatusIcon() + \"]\";"},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":35,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"rageqqq"},"content":"     * Returns description of the task"},{"lineNumber":37,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"rageqqq"},"content":"     * @return description"},{"lineNumber":39,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"rageqqq"},"content":"    public String getDescription() {"},{"lineNumber":41,"author":{"gitId":"rageqqq"},"content":"        return description;"},{"lineNumber":42,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":44,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"rageqqq"},"content":"     * Returns every information of the task in correct format"},{"lineNumber":46,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"rageqqq"},"content":"     * @return status and description in correct format"},{"lineNumber":48,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"rageqqq"},"content":"    public String toString() {"},{"lineNumber":50,"author":{"gitId":"rageqqq"},"content":"        return getStatus() + \" \" + getDescription();"},{"lineNumber":51,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":53,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"rageqqq"},"content":"     * Returns every information of the task in correct format for storage into file"},{"lineNumber":55,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"rageqqq"},"content":"     * @return status and description in correct format"},{"lineNumber":57,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"rageqqq"},"content":"    public String toSaveFormat() {"},{"lineNumber":59,"author":{"gitId":"rageqqq"},"content":"        return description;"},{"lineNumber":60,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":62,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"rageqqq"},"content":"     * Changes isDone variable to true to signify that the task is complete"},{"lineNumber":64,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"rageqqq"},"content":"    public void taskComplete() {"},{"lineNumber":66,"author":{"gitId":"rageqqq"},"content":"        isDone \u003d true;"},{"lineNumber":67,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":69,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":70,"author":{"gitId":"rageqqq"},"content":"}"},{"lineNumber":71,"author":{"gitId":"rageqqq"},"content":""}],"authorContributionMap":{"rageqqq":71}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"    public ToDo(String description) {"},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"     * Returns every information about the task in correct format for storage"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"     * @return String that has all the information about the task"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":"    public String toSaveFormat() {"},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"        if (isDone) {"},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"            return \"T \" + \"Y \" + description + \"\\n\";"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"        else {"},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"            return \"T \" + \"N \" + description + \"\\n\";"},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":"     * Returns every information about the task in correct format for printing"},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":"     * @return String that has all the information about the task"},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"rageqqq"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":"        return \"[T]\" + super.getStatus() + \" \" + super.getDescription();"},{"lineNumber":32,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":33}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"    public final String DIVIDER \u003d \"____________________________________________________________\";"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"    private static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"    private static final String INTRO_MESSAGE \u003d \" Hello! I\u0027m Duke\\n\" + \" What can I do for you?\";"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"     * Organises Welcome message into correct format before calling showToUser to print"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"    public void showIntroMessage(){"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"        showToUser(DIVIDER, INTRO_MESSAGE, DIVIDER);"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"     * Organises Exit message into correct format before calling showToUser to print"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"    public void showExitMessage() {"},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"        showToUser(DIVIDER, EXIT_MESSAGE, DIVIDER);"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":"     * Prints any String given into the command line interface"},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":"     * @param message message that the bot wants to send to the user"},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":"    public void showToUser(String... message) {"},{"lineNumber":30,"author":{"gitId":"rageqqq"},"content":"        for (String m : message) {"},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":"            System.out.println(m);"},{"lineNumber":32,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":35,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":35}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"T N sleep"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":"T N eat"}],"authorContributionMap":{"rageqqq":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":"deadline return book /by sunday"},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"list"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"bye"}],"authorContributionMap":{"rageqqq":5}}]
