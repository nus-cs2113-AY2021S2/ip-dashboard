[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"rageqqq":9,"-":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"    public static void printList(Task[] Tasks, Integer totalTasks){"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"        for (Integer i\u003d0; i\u003ctotalTasks; ++i){"},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"            Task task \u003d Tasks[i];"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"            Integer taskNumber \u003d i+1;"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"            System.out.println(taskNumber + \".\" + task.toString());"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"    public static int printTaskAdded(Task[] Tasks, Integer totalTasks){"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"        printDashLine();"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\\n\" + Tasks[totalTasks].toString());"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"        totalTasks++;"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");"},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"        printDashLine();"},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"        return totalTasks;"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"    public static void printDashLine(){"},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":"        Integer totalTasks \u003d 0;"},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"        Task[] Tasks \u003d  new Task[100];"},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":"        String Line;"},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"        String IntroMessage \u003d \" Hello! I\u0027m Duke\\n\" + \" What can I do for you?\";"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":"        String OutroMessage \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":"        Scanner Input \u003d new Scanner(System.in);"},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":"        printDashLine();"},{"lineNumber":30,"author":{"gitId":"rageqqq"},"content":"        System.out.println(IntroMessage);"},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":"        printDashLine();"},{"lineNumber":32,"author":{"gitId":"rageqqq"},"content":"        Line \u003d Input.nextLine();"},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":"        boolean notBye \u003d !Line.equals(\"bye\");"},{"lineNumber":34,"author":{"gitId":"rageqqq"},"content":"        while(notBye){"},{"lineNumber":35,"author":{"gitId":"rageqqq"},"content":"            String[] words \u003d Line.split(\" \");"},{"lineNumber":36,"author":{"gitId":"rageqqq"},"content":"            boolean isList \u003d Line.equals(\"list\");"},{"lineNumber":37,"author":{"gitId":"rageqqq"},"content":"            boolean isDone \u003d words[0].equals(\"done\");"},{"lineNumber":38,"author":{"gitId":"rageqqq"},"content":"            boolean isTodo \u003d words[0].equals(\"todo\");"},{"lineNumber":39,"author":{"gitId":"rageqqq"},"content":"            boolean isDeadline \u003d words[0].equals(\"deadline\");"},{"lineNumber":40,"author":{"gitId":"rageqqq"},"content":"            boolean isEvent \u003d words[0].equals(\"event\");"},{"lineNumber":41,"author":{"gitId":"rageqqq"},"content":"            if(isList){"},{"lineNumber":42,"author":{"gitId":"rageqqq"},"content":"                printDashLine();"},{"lineNumber":43,"author":{"gitId":"rageqqq"},"content":"                System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":44,"author":{"gitId":"rageqqq"},"content":"                printList(Tasks, totalTasks);"},{"lineNumber":45,"author":{"gitId":"rageqqq"},"content":"                printDashLine();"},{"lineNumber":46,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"rageqqq"},"content":"            else if(isDone) {"},{"lineNumber":48,"author":{"gitId":"rageqqq"},"content":"                int taskNumber \u003d Integer.parseInt(words[1]) - 1;"},{"lineNumber":49,"author":{"gitId":"rageqqq"},"content":"                Tasks[taskNumber].isDone \u003d true;"},{"lineNumber":50,"author":{"gitId":"rageqqq"},"content":"                printDashLine();"},{"lineNumber":51,"author":{"gitId":"rageqqq"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + \" \" + Tasks[taskNumber].getStatus() + \" \" + Tasks[taskNumber].getDescription());"},{"lineNumber":52,"author":{"gitId":"rageqqq"},"content":"                printDashLine();"},{"lineNumber":53,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"rageqqq"},"content":"            else if (isTodo){"},{"lineNumber":55,"author":{"gitId":"rageqqq"},"content":"                Line \u003d Line.replace(\"todo \", \"\");"},{"lineNumber":56,"author":{"gitId":"rageqqq"},"content":"                ToDo toDo \u003d new ToDo(Line);"},{"lineNumber":57,"author":{"gitId":"rageqqq"},"content":"                Tasks[totalTasks] \u003d toDo;"},{"lineNumber":58,"author":{"gitId":"rageqqq"},"content":"                totalTasks \u003d printTaskAdded(Tasks,totalTasks);"},{"lineNumber":59,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"rageqqq"},"content":"            else if (isDeadline){"},{"lineNumber":61,"author":{"gitId":"rageqqq"},"content":"                Line \u003d Line.replace(\"deadline \", \"\");"},{"lineNumber":62,"author":{"gitId":"rageqqq"},"content":"                words \u003d Line.split(\"/by \");"},{"lineNumber":63,"author":{"gitId":"rageqqq"},"content":"                Deadline deadline \u003d new Deadline(words[0], words[1]);"},{"lineNumber":64,"author":{"gitId":"rageqqq"},"content":"                Tasks[totalTasks] \u003d deadline;"},{"lineNumber":65,"author":{"gitId":"rageqqq"},"content":"                totalTasks \u003d printTaskAdded(Tasks,totalTasks);"},{"lineNumber":66,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"rageqqq"},"content":"            else if (isEvent){"},{"lineNumber":68,"author":{"gitId":"rageqqq"},"content":"                Line \u003d Line.replace(\"event \", \"\");"},{"lineNumber":69,"author":{"gitId":"rageqqq"},"content":"                words \u003d Line.split(\"/at \");"},{"lineNumber":70,"author":{"gitId":"rageqqq"},"content":"                Event event \u003d new Event(words[0], words[1]);"},{"lineNumber":71,"author":{"gitId":"rageqqq"},"content":"                Tasks[totalTasks] \u003d event;"},{"lineNumber":72,"author":{"gitId":"rageqqq"},"content":"                totalTasks \u003d printTaskAdded(Tasks,totalTasks);"},{"lineNumber":73,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"rageqqq"},"content":"            else {"},{"lineNumber":75,"author":{"gitId":"rageqqq"},"content":"                Task t \u003d new Task(Line);"},{"lineNumber":76,"author":{"gitId":"rageqqq"},"content":"                Tasks[totalTasks] \u003d t;"},{"lineNumber":77,"author":{"gitId":"rageqqq"},"content":"                totalTasks++;"},{"lineNumber":78,"author":{"gitId":"rageqqq"},"content":"                printDashLine();"},{"lineNumber":79,"author":{"gitId":"rageqqq"},"content":"                System.out.println(\" added: \" + Line);"},{"lineNumber":80,"author":{"gitId":"rageqqq"},"content":"                printDashLine();"},{"lineNumber":81,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"rageqqq"},"content":"            Line \u003d Input.nextLine();"},{"lineNumber":83,"author":{"gitId":"rageqqq"},"content":"            notBye \u003d !Line.equals(\"bye\");"},{"lineNumber":84,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"rageqqq"},"content":"        printDashLine();"},{"lineNumber":86,"author":{"gitId":"rageqqq"},"content":"        System.out.println(OutroMessage);"},{"lineNumber":87,"author":{"gitId":"rageqqq"},"content":"        printDashLine();"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"rageqqq":85,"-":4}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":"    protected String Description;"},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"    protected Integer ID;"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"    public Task(String Description) {"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"        this.Description \u003d Description;"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"    public String getStatusIcon() {"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":"    public String getStatus() {"},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"        return \"[\" + getStatusIcon() + \"]\";"},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"    public String getDescription() {"},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"        return Description;"},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"        return getStatus() + \" \" + getDescription();"},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":"}"},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":30,"author":{"gitId":"rageqqq"},"content":"class Deadline extends Task {"},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":"    protected String by;"},{"lineNumber":32,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":"    public Deadline(String Description, String by) {"},{"lineNumber":34,"author":{"gitId":"rageqqq"},"content":"        super(Description);"},{"lineNumber":35,"author":{"gitId":"rageqqq"},"content":"        this.by \u003d by;"},{"lineNumber":36,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":38,"author":{"gitId":"rageqqq"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"rageqqq"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"rageqqq"},"content":"        return \"[D]\" + super.getStatus() + \" \" + super.getDescription() + \" (by: \" + by + \")\";"},{"lineNumber":41,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":43,"author":{"gitId":"rageqqq"},"content":"}"},{"lineNumber":44,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":45,"author":{"gitId":"rageqqq"},"content":"class ToDo extends Task {"},{"lineNumber":46,"author":{"gitId":"rageqqq"},"content":"    protected String by;"},{"lineNumber":47,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":48,"author":{"gitId":"rageqqq"},"content":"    public ToDo(String Description) {"},{"lineNumber":49,"author":{"gitId":"rageqqq"},"content":"        super(Description);"},{"lineNumber":50,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":52,"author":{"gitId":"rageqqq"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"rageqqq"},"content":"    public String toString() {"},{"lineNumber":54,"author":{"gitId":"rageqqq"},"content":"        return \"[T]\" + super.getStatus() + \" \" + super.getDescription();"},{"lineNumber":55,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"rageqqq"},"content":"}"},{"lineNumber":57,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":58,"author":{"gitId":"rageqqq"},"content":"class Event extends Task {"},{"lineNumber":59,"author":{"gitId":"rageqqq"},"content":"    protected String at;"},{"lineNumber":60,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":61,"author":{"gitId":"rageqqq"},"content":"    public Event(String Description, String at) {"},{"lineNumber":62,"author":{"gitId":"rageqqq"},"content":"        super(Description);"},{"lineNumber":63,"author":{"gitId":"rageqqq"},"content":"        this.at \u003d at;"},{"lineNumber":64,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":66,"author":{"gitId":"rageqqq"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"rageqqq"},"content":"    public String toString() {"},{"lineNumber":68,"author":{"gitId":"rageqqq"},"content":"        return \"[E]\" + super.getStatus() + \" \" + super.getDescription() + \" (at: \" + at + \")\";"},{"lineNumber":69,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":70}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":"deadline return book /by sunday"},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"list"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"bye"}],"authorContributionMap":{"rageqqq":5}}]
