[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"import tasks.Task;"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"import tasks.Deadline;"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"import tasks.Event;"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"import tasks.ToDo;"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"    public static void printList(ArrayList\u003cTask\u003e Tasks){"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"        for (int i\u003d0; i\u003cTasks.size(); ++i){"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":"            Task task \u003d Tasks.get(i);"},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"            Integer taskNumber \u003d i+1;"},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"            System.out.println(taskNumber + \".\" + task.toString());"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"    public static void printTaskAdded(ArrayList\u003cTask\u003e Tasks){"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"        printDashLine();"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\\n\" + Tasks.get(Tasks.size()-1).toString());"},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"        System.out.println(\"Now you have \" + Tasks.size() + \" tasks in the list.\");"},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":"        printDashLine();"},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":"    public static void printDashLine(){"},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":30,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":32,"author":{"gitId":"rageqqq"},"content":"    public static void validateInput(String[] words) throws DukeException {"},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":"        boolean isList \u003d words[0].equals(\"list\");"},{"lineNumber":34,"author":{"gitId":"rageqqq"},"content":"        boolean isDone \u003d words[0].equals(\"done\");"},{"lineNumber":35,"author":{"gitId":"rageqqq"},"content":"        boolean isTodo \u003d words[0].equals(\"todo\");"},{"lineNumber":36,"author":{"gitId":"rageqqq"},"content":"        boolean isDeadline \u003d words[0].equals(\"deadline\");"},{"lineNumber":37,"author":{"gitId":"rageqqq"},"content":"        boolean isEvent \u003d words[0].equals(\"event\");"},{"lineNumber":38,"author":{"gitId":"rageqqq"},"content":"        boolean isDelete \u003d words[0].equals(\"delete\");"},{"lineNumber":39,"author":{"gitId":"rageqqq"},"content":"        boolean invalidCommand \u003d !(isList || isDone || isTodo || isDeadline || isEvent || isDelete);"},{"lineNumber":40,"author":{"gitId":"rageqqq"},"content":"        if(invalidCommand) {"},{"lineNumber":41,"author":{"gitId":"rageqqq"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":42,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":45,"author":{"gitId":"rageqqq"},"content":"    public static void validateToDoInput(String[] words) throws DukeException {"},{"lineNumber":46,"author":{"gitId":"rageqqq"},"content":"        boolean invalidToDoInput \u003d words.length \u003d\u003d 1;"},{"lineNumber":47,"author":{"gitId":"rageqqq"},"content":"        if(invalidToDoInput) {"},{"lineNumber":48,"author":{"gitId":"rageqqq"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":49,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":52,"author":{"gitId":"rageqqq"},"content":"    public static void validateListInput(String[] words) throws DukeException {"},{"lineNumber":53,"author":{"gitId":"rageqqq"},"content":"        boolean invalidListInput \u003d words.length \u003e 1;"},{"lineNumber":54,"author":{"gitId":"rageqqq"},"content":"        if (invalidListInput) {"},{"lineNumber":55,"author":{"gitId":"rageqqq"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a list should be empty.\");"},{"lineNumber":56,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":59,"author":{"gitId":"rageqqq"},"content":"    public static void loadFile(ArrayList\u003cTask\u003e tasks) throws FileNotFoundException {"},{"lineNumber":60,"author":{"gitId":"rageqqq"},"content":"        File f \u003d new File(\"tasks.txt\");"},{"lineNumber":61,"author":{"gitId":"rageqqq"},"content":"        if (!f.exists()) {"},{"lineNumber":62,"author":{"gitId":"rageqqq"},"content":"            throw new FileNotFoundException();"},{"lineNumber":63,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"rageqqq"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":65,"author":{"gitId":"rageqqq"},"content":"        while (s.hasNext()) {"},{"lineNumber":66,"author":{"gitId":"rageqqq"},"content":"            String input \u003d s.nextLine();"},{"lineNumber":67,"author":{"gitId":"rageqqq"},"content":"            String[] words \u003d input.split(\" \");"},{"lineNumber":68,"author":{"gitId":"rageqqq"},"content":"            boolean isTodo \u003d words[0].equals(\"T\");"},{"lineNumber":69,"author":{"gitId":"rageqqq"},"content":"            boolean isDeadline \u003d words[0].equals(\"D\");"},{"lineNumber":70,"author":{"gitId":"rageqqq"},"content":"            boolean isEvent \u003d words[0].equals(\"E\");"},{"lineNumber":71,"author":{"gitId":"rageqqq"},"content":"            boolean isDone \u003d words[1].equals(\"Y\");"},{"lineNumber":72,"author":{"gitId":"rageqqq"},"content":"            input \u003d input.substring(4);"},{"lineNumber":73,"author":{"gitId":"rageqqq"},"content":"            words \u003d input.split(\"/d\");"},{"lineNumber":74,"author":{"gitId":"rageqqq"},"content":"            if (isDeadline) {"},{"lineNumber":75,"author":{"gitId":"rageqqq"},"content":"                Deadline deadline \u003d new Deadline(words[0], words[1]);"},{"lineNumber":76,"author":{"gitId":"rageqqq"},"content":"                tasks.add(deadline);"},{"lineNumber":77,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"rageqqq"},"content":"            else if (isEvent) {"},{"lineNumber":79,"author":{"gitId":"rageqqq"},"content":"                Event event \u003d new Event(words[0], words[1]);"},{"lineNumber":80,"author":{"gitId":"rageqqq"},"content":"                tasks.add(event);"},{"lineNumber":81,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"rageqqq"},"content":"            else if (isTodo) {"},{"lineNumber":83,"author":{"gitId":"rageqqq"},"content":"                ToDo toDo \u003d new ToDo(words[0]);"},{"lineNumber":84,"author":{"gitId":"rageqqq"},"content":"                tasks.add(toDo);"},{"lineNumber":85,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"rageqqq"},"content":"            if (isDone) {"},{"lineNumber":87,"author":{"gitId":"rageqqq"},"content":"                tasks.get(tasks.size()-1).taskComplete();"},{"lineNumber":88,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":92,"author":{"gitId":"rageqqq"},"content":"    public static void saveFile(String filepath, ArrayList\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":93,"author":{"gitId":"rageqqq"},"content":"        FileWriter fw \u003d new FileWriter(filepath);"},{"lineNumber":94,"author":{"gitId":"rageqqq"},"content":"        for (Task task: tasks) {"},{"lineNumber":95,"author":{"gitId":"rageqqq"},"content":"            fw.write(task.toSaveFormat());"},{"lineNumber":96,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"rageqqq"},"content":"        fw.close();"},{"lineNumber":98,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":101,"author":{"gitId":"rageqqq"},"content":"        ArrayList\u003cTask\u003e Tasks \u003d  new ArrayList\u003cTask\u003e();"},{"lineNumber":102,"author":{"gitId":"rageqqq"},"content":"        String line;"},{"lineNumber":103,"author":{"gitId":"rageqqq"},"content":"        String INTRO_MESSAGE \u003d \" Hello! I\u0027m Duke\\n\" + \" What can I do for you?\";"},{"lineNumber":104,"author":{"gitId":"rageqqq"},"content":"        String OUTRO_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":105,"author":{"gitId":"rageqqq"},"content":"        Scanner Input \u003d new Scanner(System.in);"},{"lineNumber":106,"author":{"gitId":"rageqqq"},"content":"        printDashLine();"},{"lineNumber":107,"author":{"gitId":"rageqqq"},"content":"        System.out.println(INTRO_MESSAGE);"},{"lineNumber":108,"author":{"gitId":"rageqqq"},"content":"        printDashLine();"},{"lineNumber":109,"author":{"gitId":"rageqqq"},"content":"        try {"},{"lineNumber":110,"author":{"gitId":"rageqqq"},"content":"            loadFile(Tasks);"},{"lineNumber":111,"author":{"gitId":"rageqqq"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":112,"author":{"gitId":"rageqqq"},"content":"            System.out.println(\"File Not Found\");"},{"lineNumber":113,"author":{"gitId":"rageqqq"},"content":"            System.out.println(\"Creating new file...\");"},{"lineNumber":114,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"rageqqq"},"content":"        line \u003d Input.nextLine();"},{"lineNumber":116,"author":{"gitId":"rageqqq"},"content":"        boolean inSystem \u003d !line.equals(\"bye\");"},{"lineNumber":117,"author":{"gitId":"rageqqq"},"content":"        while(inSystem){"},{"lineNumber":118,"author":{"gitId":"rageqqq"},"content":"            String[] words \u003d line.split(\" \");"},{"lineNumber":119,"author":{"gitId":"rageqqq"},"content":"            boolean isList \u003d words[0].equals(\"list\");"},{"lineNumber":120,"author":{"gitId":"rageqqq"},"content":"            boolean isDone \u003d words[0].equals(\"done\");"},{"lineNumber":121,"author":{"gitId":"rageqqq"},"content":"            boolean isTodo \u003d words[0].equals(\"todo\");"},{"lineNumber":122,"author":{"gitId":"rageqqq"},"content":"            boolean isDeadline \u003d words[0].equals(\"deadline\");"},{"lineNumber":123,"author":{"gitId":"rageqqq"},"content":"            boolean isEvent \u003d words[0].equals(\"event\");"},{"lineNumber":124,"author":{"gitId":"rageqqq"},"content":"            boolean isDelete \u003d words[0].equals(\"delete\");"},{"lineNumber":125,"author":{"gitId":"rageqqq"},"content":"            try {"},{"lineNumber":126,"author":{"gitId":"rageqqq"},"content":"                validateInput(words);"},{"lineNumber":127,"author":{"gitId":"rageqqq"},"content":"            } catch (Exception e){"},{"lineNumber":128,"author":{"gitId":"rageqqq"},"content":"                System.out.println(e);"},{"lineNumber":129,"author":{"gitId":"rageqqq"},"content":"                line \u003d Input.nextLine();"},{"lineNumber":130,"author":{"gitId":"rageqqq"},"content":"                inSystem \u003d !line.equals(\"bye\");"},{"lineNumber":131,"author":{"gitId":"rageqqq"},"content":"                continue;"},{"lineNumber":132,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":133,"author":{"gitId":"rageqqq"},"content":"            if(isList){"},{"lineNumber":134,"author":{"gitId":"rageqqq"},"content":"                try {"},{"lineNumber":135,"author":{"gitId":"rageqqq"},"content":"                    validateListInput(words);"},{"lineNumber":136,"author":{"gitId":"rageqqq"},"content":"                } catch (Exception e) {"},{"lineNumber":137,"author":{"gitId":"rageqqq"},"content":"                    System.out.println(e);"},{"lineNumber":138,"author":{"gitId":"rageqqq"},"content":"                    line \u003d Input.nextLine();"},{"lineNumber":139,"author":{"gitId":"rageqqq"},"content":"                    inSystem \u003d !line.equals(\"bye\");"},{"lineNumber":140,"author":{"gitId":"rageqqq"},"content":"                    continue;"},{"lineNumber":141,"author":{"gitId":"rageqqq"},"content":"                }"},{"lineNumber":142,"author":{"gitId":"rageqqq"},"content":"                printDashLine();"},{"lineNumber":143,"author":{"gitId":"rageqqq"},"content":"                System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":144,"author":{"gitId":"rageqqq"},"content":"                printList(Tasks);"},{"lineNumber":145,"author":{"gitId":"rageqqq"},"content":"                printDashLine();"},{"lineNumber":146,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":147,"author":{"gitId":"rageqqq"},"content":"            else if(isDone) {"},{"lineNumber":148,"author":{"gitId":"rageqqq"},"content":"                int taskNumber \u003d Integer.parseInt(words[1]) - 1;"},{"lineNumber":149,"author":{"gitId":"rageqqq"},"content":"                Tasks.get(taskNumber).taskComplete();"},{"lineNumber":150,"author":{"gitId":"rageqqq"},"content":"                printDashLine();"},{"lineNumber":151,"author":{"gitId":"rageqqq"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + \" \" + Tasks.get(taskNumber).toString());"},{"lineNumber":152,"author":{"gitId":"rageqqq"},"content":"                printDashLine();"},{"lineNumber":153,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":154,"author":{"gitId":"rageqqq"},"content":"            else if(isDelete) {"},{"lineNumber":155,"author":{"gitId":"rageqqq"},"content":"                int taskNumber \u003d Integer.parseInt(words[1]) - 1;"},{"lineNumber":156,"author":{"gitId":"rageqqq"},"content":"                printDashLine();"},{"lineNumber":157,"author":{"gitId":"rageqqq"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + Tasks.get(taskNumber).toString());"},{"lineNumber":158,"author":{"gitId":"rageqqq"},"content":"                Tasks.remove(taskNumber);"},{"lineNumber":159,"author":{"gitId":"rageqqq"},"content":"                System.out.println(\"Now you have \" + Tasks.size() + \" tasks in the list.\");"},{"lineNumber":160,"author":{"gitId":"rageqqq"},"content":"                printDashLine();"},{"lineNumber":161,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":162,"author":{"gitId":"rageqqq"},"content":"            else if (isTodo){"},{"lineNumber":163,"author":{"gitId":"rageqqq"},"content":"                try {"},{"lineNumber":164,"author":{"gitId":"rageqqq"},"content":"                    validateToDoInput(words);"},{"lineNumber":165,"author":{"gitId":"rageqqq"},"content":"                } catch (Exception e) {"},{"lineNumber":166,"author":{"gitId":"rageqqq"},"content":"                    System.out.println(e);"},{"lineNumber":167,"author":{"gitId":"rageqqq"},"content":"                    line \u003d Input.nextLine();"},{"lineNumber":168,"author":{"gitId":"rageqqq"},"content":"                    inSystem \u003d !line.equals(\"bye\");"},{"lineNumber":169,"author":{"gitId":"rageqqq"},"content":"                    continue;"},{"lineNumber":170,"author":{"gitId":"rageqqq"},"content":"                }"},{"lineNumber":171,"author":{"gitId":"rageqqq"},"content":"                line \u003d line.replace(\"todo \", \"\");"},{"lineNumber":172,"author":{"gitId":"rageqqq"},"content":"                ToDo toDo \u003d new ToDo(line);"},{"lineNumber":173,"author":{"gitId":"rageqqq"},"content":"                Tasks.add(toDo);"},{"lineNumber":174,"author":{"gitId":"rageqqq"},"content":"                printTaskAdded(Tasks);"},{"lineNumber":175,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":176,"author":{"gitId":"rageqqq"},"content":"            else if (isDeadline){"},{"lineNumber":177,"author":{"gitId":"rageqqq"},"content":"                line \u003d line.replace(\"deadline \", \"\");"},{"lineNumber":178,"author":{"gitId":"rageqqq"},"content":"                words \u003d line.split(\"/by \");"},{"lineNumber":179,"author":{"gitId":"rageqqq"},"content":"                Deadline deadline \u003d new Deadline(words[0], words[1]);"},{"lineNumber":180,"author":{"gitId":"rageqqq"},"content":"                Tasks.add(deadline);"},{"lineNumber":181,"author":{"gitId":"rageqqq"},"content":"                printTaskAdded(Tasks);"},{"lineNumber":182,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":183,"author":{"gitId":"rageqqq"},"content":"            else if (isEvent) {"},{"lineNumber":184,"author":{"gitId":"rageqqq"},"content":"                line \u003d line.replace(\"event \", \"\");"},{"lineNumber":185,"author":{"gitId":"rageqqq"},"content":"                words \u003d line.split(\"/at \");"},{"lineNumber":186,"author":{"gitId":"rageqqq"},"content":"                Event event \u003d new Event(words[0], words[1]);"},{"lineNumber":187,"author":{"gitId":"rageqqq"},"content":"                Tasks.add(event);"},{"lineNumber":188,"author":{"gitId":"rageqqq"},"content":"                printTaskAdded(Tasks);"},{"lineNumber":189,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":190,"author":{"gitId":"rageqqq"},"content":"            line \u003d Input.nextLine();"},{"lineNumber":191,"author":{"gitId":"rageqqq"},"content":"            inSystem \u003d !line.equals(\"bye\");"},{"lineNumber":192,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"rageqqq"},"content":"        String file \u003d \"tasks.txt\";"},{"lineNumber":194,"author":{"gitId":"rageqqq"},"content":"        try{"},{"lineNumber":195,"author":{"gitId":"rageqqq"},"content":"            saveFile(file, Tasks);"},{"lineNumber":196,"author":{"gitId":"rageqqq"},"content":"        } catch (IOException e) {"},{"lineNumber":197,"author":{"gitId":"rageqqq"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());"},{"lineNumber":198,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":199,"author":{"gitId":"rageqqq"},"content":"        printDashLine();"},{"lineNumber":200,"author":{"gitId":"rageqqq"},"content":"        System.out.println(OUTRO_MESSAGE);"},{"lineNumber":201,"author":{"gitId":"rageqqq"},"content":"        printDashLine();"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"rageqqq":199,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"public class DukeException extends Exception{"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":"    DukeException(String s) {"},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"        super(s);"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":5}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"    protected String by;"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"    public String toSaveFormat() {"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"        if (isDone) {"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"            return \"D \" + \"Y \" + description + \"/d\" + by + \"\\n\";"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"        else {"},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"            return \"D \" + \"N \" + description + \"/d\" + by + \"\\n\";"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":"        return \"[D]\" + super.getStatus() + \" \" + super.getDescription() + \" (by: \" + by + \")\";"},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":26}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"    public Event(String description, String at) {"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"        this.at \u003d at;"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"    public String toSaveFormat() {"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"        if (isDone) {"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"            return \"E \" + \"Y \" + description + \"/d\" + at + \"\\n\";"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"        else {"},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"            return \"E \" + \"N \" + description + \"/d\" + at + \"\\n\";"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":"        return \"[E]\" + super.getStatus() + \" \" + super.getDescription() + \" (at: \" + at + \")\";"},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":25}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"    public String getStatus() {"},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"        return \"[\" + getStatusIcon() + \"]\";"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"    public String getDescription() {"},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"        return description;"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":"        return getStatus() + \" \" + getDescription();"},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":"    public String toSaveFormat() {"},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":"        return description;"},{"lineNumber":30,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":32,"author":{"gitId":"rageqqq"},"content":"    public void taskComplete() {"},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":"        isDone \u003d true;"},{"lineNumber":34,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":36,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":37,"author":{"gitId":"rageqqq"},"content":"}"},{"lineNumber":38,"author":{"gitId":"rageqqq"},"content":""}],"authorContributionMap":{"rageqqq":38}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"    public ToDo(String description) {"},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"    public String toSaveFormat() {"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"        if (isDone) {"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"            return \"T \" + \"Y \" + description + \"\\n\";"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"        else {"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":"            return \"T \" + \"N \" + description + \"\\n\";"},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"        return \"[T]\" + super.getStatus() + \" \" + super.getDescription();"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":23}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"T N sleep"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":"T N eat"}],"authorContributionMap":{"rageqqq":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":"deadline return book /by sunday"},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"list"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"bye"}],"authorContributionMap":{"rageqqq":5}}]
