[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"rageqqq":9,"-":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"    public static void printList(Task[] Tasks, Integer IDCounter){"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"        for (int i\u003d1; i\u003c\u003dIDCounter-1; ++i){"},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"            Task task \u003d Tasks[i];"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"            System.out.println(task.getID() + \".\" + task.getStatus() + \" \" + task.getDescription() + \"\\n\");"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"        Integer IDCounter \u003d 1;"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"        Task[] Tasks \u003d  new Task[101];"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"        String Line;"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"        String DashLine \u003d \"____________________________________________________________\\n\";"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":"        String IntroMessage \u003d \" Hello! I\u0027m Duke\\n\" + \" What can I do for you?\\n\";"},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"        String OutroMessage \u003d \"Bye. Hope to see you again soon!\\n\";"},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"        Scanner Input \u003d new Scanner(System.in);"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"        System.out.println(DashLine + IntroMessage + DashLine);"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"        Line \u003d Input.nextLine();"},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"        while(!Line.equals(\"bye\")){"},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"            if(Line.equals(\"list\")){"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"                System.out.println(DashLine + \"Here are the tasks in your list:\\n\");"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":"                printList(Tasks, IDCounter);"},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"                System.out.println(DashLine);"},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"            else if (Line.contains(\"done\")){"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":"                String[] words \u003d Line.split(\" \");"},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":"                int i \u003d Integer.parseInt(words[1]);"},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":"                Tasks[i].isDone \u003d true;"},{"lineNumber":30,"author":{"gitId":"rageqqq"},"content":"                System.out.println(DashLine + \"Nice! I\u0027ve marked this task as done:\\n\" + \" \" + Tasks[i].getStatus() + \" \" + Tasks[i].getDescription() + \"\\n\" + DashLine);"},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"rageqqq"},"content":"            else {"},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":"                Task t \u003d new Task(Line, IDCounter);"},{"lineNumber":34,"author":{"gitId":"rageqqq"},"content":"                Tasks[IDCounter] \u003d t;"},{"lineNumber":35,"author":{"gitId":"rageqqq"},"content":"                IDCounter++;"},{"lineNumber":36,"author":{"gitId":"rageqqq"},"content":"                System.out.println(DashLine + \" added: \" + Line + \"\\n\" + DashLine);"},{"lineNumber":37,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"rageqqq"},"content":"            Line \u003d Input.nextLine();"},{"lineNumber":39,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"rageqqq"},"content":"        System.out.println(DashLine + OutroMessage + DashLine);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"rageqqq":38,"-":4}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":"    protected String Description;"},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"    protected Integer ID;"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"    public Task(String Description, Integer ID) {"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"        this.Description \u003d Description;"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"        this.ID \u003d ID;"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"    public String getStatus() {"},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"        String Status \u003d \"[\" + getStatusIcon() + \"]\";"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"        return Status;"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"    public String getDescription() {"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"        return Description;"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":"    public String getID() {"},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"        return String.valueOf(ID);"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":29}}]
