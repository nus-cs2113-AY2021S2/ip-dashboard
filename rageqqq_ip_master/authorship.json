[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":"import tasks.Task;"},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"import tasks.Deadline;"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"import tasks.Event;"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"import tasks.ToDo;"},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"    public static void printList(Task[] Tasks, Integer totalTasks){"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"        for (Integer i\u003d0; i\u003ctotalTasks; ++i){"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"            Task task \u003d Tasks[i];"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"            Integer taskNumber \u003d i+1;"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"            System.out.println(taskNumber + \".\" + task.toString());"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"    public static int printTaskAdded(Task[] Tasks, Integer totalTasks){"},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"        printDashLine();"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\\n\" + Tasks[totalTasks].toString());"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"        totalTasks++;"},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");"},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"        printDashLine();"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"        return totalTasks;"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":"    public static void printDashLine(){"},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":"    public static void validateInput(String[] words) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"rageqqq"},"content":"        boolean isList \u003d words[0].equals(\"list\");"},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":"        boolean isDone \u003d words[0].equals(\"done\");"},{"lineNumber":32,"author":{"gitId":"rageqqq"},"content":"        boolean isTodo \u003d words[0].equals(\"todo\");"},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":"        boolean isDeadline \u003d words[0].equals(\"deadline\");"},{"lineNumber":34,"author":{"gitId":"rageqqq"},"content":"        boolean isEvent \u003d words[0].equals(\"event\");"},{"lineNumber":35,"author":{"gitId":"rageqqq"},"content":"        boolean invalidCommand \u003d !(isList || isDone || isTodo || isDeadline || isEvent);"},{"lineNumber":36,"author":{"gitId":"rageqqq"},"content":"        if(invalidCommand) {"},{"lineNumber":37,"author":{"gitId":"rageqqq"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":38,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":41,"author":{"gitId":"rageqqq"},"content":"    public static void validateToDoInput(String[] words) throws DukeException {"},{"lineNumber":42,"author":{"gitId":"rageqqq"},"content":"        boolean invalidToDoInput \u003d words.length \u003d\u003d 1;"},{"lineNumber":43,"author":{"gitId":"rageqqq"},"content":"        if(invalidToDoInput) {"},{"lineNumber":44,"author":{"gitId":"rageqqq"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":45,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":48,"author":{"gitId":"rageqqq"},"content":"    public static void validateListInput(String[] words) throws DukeException {"},{"lineNumber":49,"author":{"gitId":"rageqqq"},"content":"        boolean invalidListInput \u003d words.length \u003e 1;"},{"lineNumber":50,"author":{"gitId":"rageqqq"},"content":"        if (invalidListInput) {"},{"lineNumber":51,"author":{"gitId":"rageqqq"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a list should be empty.\");"},{"lineNumber":52,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":56,"author":{"gitId":"rageqqq"},"content":"        Integer totalTasks \u003d 0;"},{"lineNumber":57,"author":{"gitId":"rageqqq"},"content":"        Task[] Tasks \u003d  new Task[100];"},{"lineNumber":58,"author":{"gitId":"rageqqq"},"content":"        String line;"},{"lineNumber":59,"author":{"gitId":"rageqqq"},"content":"        String INTRO_MESSAGE \u003d \" Hello! I\u0027m Duke\\n\" + \" What can I do for you?\";"},{"lineNumber":60,"author":{"gitId":"rageqqq"},"content":"        String OUTRO_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"},{"lineNumber":61,"author":{"gitId":"rageqqq"},"content":"        Scanner Input \u003d new Scanner(System.in);"},{"lineNumber":62,"author":{"gitId":"rageqqq"},"content":"        printDashLine();"},{"lineNumber":63,"author":{"gitId":"rageqqq"},"content":"        System.out.println(INTRO_MESSAGE);"},{"lineNumber":64,"author":{"gitId":"rageqqq"},"content":"        printDashLine();"},{"lineNumber":65,"author":{"gitId":"rageqqq"},"content":"        line \u003d Input.nextLine();"},{"lineNumber":66,"author":{"gitId":"rageqqq"},"content":"        boolean inSystem \u003d !line.equals(\"bye\");"},{"lineNumber":67,"author":{"gitId":"rageqqq"},"content":"        while(inSystem){"},{"lineNumber":68,"author":{"gitId":"rageqqq"},"content":"            String[] words \u003d line.split(\" \");"},{"lineNumber":69,"author":{"gitId":"rageqqq"},"content":"            boolean isList \u003d words[0].equals(\"list\");"},{"lineNumber":70,"author":{"gitId":"rageqqq"},"content":"            boolean isDone \u003d words[0].equals(\"done\");"},{"lineNumber":71,"author":{"gitId":"rageqqq"},"content":"            boolean isTodo \u003d words[0].equals(\"todo\");"},{"lineNumber":72,"author":{"gitId":"rageqqq"},"content":"            boolean isDeadline \u003d words[0].equals(\"deadline\");"},{"lineNumber":73,"author":{"gitId":"rageqqq"},"content":"            boolean isEvent \u003d words[0].equals(\"event\");"},{"lineNumber":74,"author":{"gitId":"rageqqq"},"content":"            try {"},{"lineNumber":75,"author":{"gitId":"rageqqq"},"content":"                validateInput(words);"},{"lineNumber":76,"author":{"gitId":"rageqqq"},"content":"            } catch (Exception e){"},{"lineNumber":77,"author":{"gitId":"rageqqq"},"content":"                System.out.println(e);"},{"lineNumber":78,"author":{"gitId":"rageqqq"},"content":"                line \u003d Input.nextLine();"},{"lineNumber":79,"author":{"gitId":"rageqqq"},"content":"                inSystem \u003d !line.equals(\"bye\");"},{"lineNumber":80,"author":{"gitId":"rageqqq"},"content":"                continue;"},{"lineNumber":81,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"rageqqq"},"content":"            if(isList){"},{"lineNumber":83,"author":{"gitId":"rageqqq"},"content":"                try {"},{"lineNumber":84,"author":{"gitId":"rageqqq"},"content":"                    validateListInput(words);"},{"lineNumber":85,"author":{"gitId":"rageqqq"},"content":"                } catch (Exception e) {"},{"lineNumber":86,"author":{"gitId":"rageqqq"},"content":"                    System.out.println(e);"},{"lineNumber":87,"author":{"gitId":"rageqqq"},"content":"                    line \u003d Input.nextLine();"},{"lineNumber":88,"author":{"gitId":"rageqqq"},"content":"                    inSystem \u003d !line.equals(\"bye\");"},{"lineNumber":89,"author":{"gitId":"rageqqq"},"content":"                    continue;"},{"lineNumber":90,"author":{"gitId":"rageqqq"},"content":"                }"},{"lineNumber":91,"author":{"gitId":"rageqqq"},"content":"                printDashLine();"},{"lineNumber":92,"author":{"gitId":"rageqqq"},"content":"                System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":93,"author":{"gitId":"rageqqq"},"content":"                printList(Tasks, totalTasks);"},{"lineNumber":94,"author":{"gitId":"rageqqq"},"content":"                printDashLine();"},{"lineNumber":95,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"rageqqq"},"content":"            else if(isDone) {"},{"lineNumber":97,"author":{"gitId":"rageqqq"},"content":"                int taskNumber \u003d Integer.parseInt(words[1]) - 1;"},{"lineNumber":98,"author":{"gitId":"rageqqq"},"content":"                Tasks[taskNumber].taskComplete();"},{"lineNumber":99,"author":{"gitId":"rageqqq"},"content":"                printDashLine();"},{"lineNumber":100,"author":{"gitId":"rageqqq"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + \" \" + Tasks[taskNumber].getStatus() + \" \" + Tasks[taskNumber].getDescription());"},{"lineNumber":101,"author":{"gitId":"rageqqq"},"content":"                printDashLine();"},{"lineNumber":102,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"rageqqq"},"content":"            else if (isTodo){"},{"lineNumber":104,"author":{"gitId":"rageqqq"},"content":"                try {"},{"lineNumber":105,"author":{"gitId":"rageqqq"},"content":"                    validateToDoInput(words);"},{"lineNumber":106,"author":{"gitId":"rageqqq"},"content":"                } catch (Exception e) {"},{"lineNumber":107,"author":{"gitId":"rageqqq"},"content":"                    System.out.println(e);"},{"lineNumber":108,"author":{"gitId":"rageqqq"},"content":"                    line \u003d Input.nextLine();"},{"lineNumber":109,"author":{"gitId":"rageqqq"},"content":"                    inSystem \u003d !line.equals(\"bye\");"},{"lineNumber":110,"author":{"gitId":"rageqqq"},"content":"                    continue;"},{"lineNumber":111,"author":{"gitId":"rageqqq"},"content":"                }"},{"lineNumber":112,"author":{"gitId":"rageqqq"},"content":"                line \u003d line.replace(\"todo \", \"\");"},{"lineNumber":113,"author":{"gitId":"rageqqq"},"content":"                ToDo toDo \u003d new ToDo(line);"},{"lineNumber":114,"author":{"gitId":"rageqqq"},"content":"                Tasks[totalTasks] \u003d toDo;"},{"lineNumber":115,"author":{"gitId":"rageqqq"},"content":"                totalTasks \u003d printTaskAdded(Tasks,totalTasks);"},{"lineNumber":116,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"rageqqq"},"content":"            else if (isDeadline){"},{"lineNumber":118,"author":{"gitId":"rageqqq"},"content":"                line \u003d line.replace(\"deadline \", \"\");"},{"lineNumber":119,"author":{"gitId":"rageqqq"},"content":"                words \u003d line.split(\"/by \");"},{"lineNumber":120,"author":{"gitId":"rageqqq"},"content":"                Deadline deadline \u003d new Deadline(words[0], words[1]);"},{"lineNumber":121,"author":{"gitId":"rageqqq"},"content":"                Tasks[totalTasks] \u003d deadline;"},{"lineNumber":122,"author":{"gitId":"rageqqq"},"content":"                totalTasks \u003d printTaskAdded(Tasks,totalTasks);"},{"lineNumber":123,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"rageqqq"},"content":"            else if (isEvent) {"},{"lineNumber":125,"author":{"gitId":"rageqqq"},"content":"                line \u003d line.replace(\"event \", \"\");"},{"lineNumber":126,"author":{"gitId":"rageqqq"},"content":"                words \u003d line.split(\"/at \");"},{"lineNumber":127,"author":{"gitId":"rageqqq"},"content":"                Event event \u003d new Event(words[0], words[1]);"},{"lineNumber":128,"author":{"gitId":"rageqqq"},"content":"                Tasks[totalTasks] \u003d event;"},{"lineNumber":129,"author":{"gitId":"rageqqq"},"content":"                totalTasks \u003d printTaskAdded(Tasks, totalTasks);"},{"lineNumber":130,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"rageqqq"},"content":"            line \u003d Input.nextLine();"},{"lineNumber":132,"author":{"gitId":"rageqqq"},"content":"            inSystem \u003d !line.equals(\"bye\");"},{"lineNumber":133,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"rageqqq"},"content":"        printDashLine();"},{"lineNumber":135,"author":{"gitId":"rageqqq"},"content":"        System.out.println(OUTRO_MESSAGE);"},{"lineNumber":136,"author":{"gitId":"rageqqq"},"content":"        printDashLine();"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"rageqqq":134,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"public class DukeException extends Exception{"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":"    DukeException(String s) {"},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"        super(s);"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":5}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"    protected String by;"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"        return \"[D]\" + super.getStatus() + \" \" + super.getDescription() + \" (by: \" + by + \")\";"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":16}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"    public Event(String description, String at) {"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"        this.at \u003d at;"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"        return \"[E]\" + super.getStatus() + \" \" + super.getDescription() + \" (at: \" + at + \")\";"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":15}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"    public String getStatus() {"},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"        return \"[\" + getStatusIcon() + \"]\";"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"    public String getDescription() {"},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"        return description;"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":"        return getStatus() + \" \" + getDescription();"},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":"    public void taskComplete() {"},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":"        isDone \u003d true;"},{"lineNumber":30,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":32,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":"}"},{"lineNumber":34,"author":{"gitId":"rageqqq"},"content":""}],"authorContributionMap":{"rageqqq":34}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"    public ToDo(String description) {"},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"        return \"[T]\" + super.getStatus() + \" \" + super.getDescription();"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rageqqq"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":"deadline return book /by sunday"},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"list"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"bye"}],"authorContributionMap":{"rageqqq":5}}]
