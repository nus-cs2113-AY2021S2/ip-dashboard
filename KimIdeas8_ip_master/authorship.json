[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"# com.testsmarker.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"1. After that, locate the `src/main/java/com.testsmarker.Duke.java` file, right-click it, and choose `Run com.testsmarker.Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"KimIdeas8":10,"-":16}},{"path":"src/main/java/com/testsmarker/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"package com.testsmarker;"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"        String line \u003d \"____________________________________________________________\";"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"        System.out.println(line);"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"        System.out.println(\"Hello! I\u0027m Duke\"); //greets"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":"        System.out.println(line);"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"        //echoes user inputs:"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":"        String input \u003d \"\";"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":"        tasks list[] \u003d new tasks[100];"},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":"        int itemCount \u003d 0;"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"        input \u003d in.nextLine();"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"        while (!input.equals(\"bye\")) {"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":"            System.out.println(line);"},{"lineNumber":26,"author":{"gitId":"KimIdeas8"},"content":"            if (input.equals(\"list\")){"},{"lineNumber":27,"author":{"gitId":"KimIdeas8"},"content":"                System.out.println(\"Here are the tasks in your lists:\");"},{"lineNumber":28,"author":{"gitId":"KimIdeas8"},"content":"                for (int i \u003d 0; i \u003c itemCount; i++){"},{"lineNumber":29,"author":{"gitId":"KimIdeas8"},"content":"                    System.out.println(i+1 + \".[\" + list[i].getStatusIcon() + \"] \"+ list[i].getDescription());"},{"lineNumber":30,"author":{"gitId":"KimIdeas8"},"content":"                }"},{"lineNumber":31,"author":{"gitId":"KimIdeas8"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"KimIdeas8"},"content":"            else if (input.startsWith(\"done\")){"},{"lineNumber":33,"author":{"gitId":"KimIdeas8"},"content":"                String[] word \u003d input.split(\" \");"},{"lineNumber":34,"author":{"gitId":"KimIdeas8"},"content":"                int index \u003d Integer.parseInt(word[1]) - 1; //obtain task number(which starts from 1)"},{"lineNumber":35,"author":{"gitId":"KimIdeas8"},"content":"                list[index].markAsDone(); //mark task by current command as done"},{"lineNumber":36,"author":{"gitId":"KimIdeas8"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":37,"author":{"gitId":"KimIdeas8"},"content":"                System.out.println(\"[\" + list[index].getStatusIcon() + \"] \" + list[index].getDescription());"},{"lineNumber":38,"author":{"gitId":"KimIdeas8"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"KimIdeas8"},"content":"            else {"},{"lineNumber":40,"author":{"gitId":"KimIdeas8"},"content":"                System.out.println(\"added: \" + input); //output based on user input"},{"lineNumber":41,"author":{"gitId":"KimIdeas8"},"content":"                list[itemCount] \u003d new tasks(input); //create new task \"input\" and store to array \u0027list\u0027"},{"lineNumber":42,"author":{"gitId":"KimIdeas8"},"content":"                itemCount++;"},{"lineNumber":43,"author":{"gitId":"KimIdeas8"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"KimIdeas8"},"content":"            System.out.println(line);"},{"lineNumber":45,"author":{"gitId":"KimIdeas8"},"content":"            input \u003d in.nextLine();"},{"lineNumber":46,"author":{"gitId":"KimIdeas8"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":48,"author":{"gitId":"KimIdeas8"},"content":"        //exits with \"bye\":"},{"lineNumber":49,"author":{"gitId":"KimIdeas8"},"content":"        System.out.println(line);"},{"lineNumber":50,"author":{"gitId":"KimIdeas8"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\"); //exits"},{"lineNumber":51,"author":{"gitId":"KimIdeas8"},"content":"        System.out.println(line);"},{"lineNumber":52,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"KimIdeas8":50,"-":4}},{"path":"src/main/java/com/testsmarker/tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"package com.testsmarker;"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"public class tasks {"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"    public tasks(String description) {"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"    public String getStatusIcon() {"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"    public String getDescription(){"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"        return this.description;"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":"    public void markAsDone(){"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"        this.isDone \u003d true;"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":"}"}],"authorContributionMap":{"KimIdeas8":25}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"java -classpath ..\\bin com.testsmarker.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"KimIdeas8":1,"-":20}}]
