[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"KimIdeas8":9,"-":17}},{"path":"src/main/java/com/ip/tasksmanager/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"package com.ip.tasksmanager;"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"public class Deadlines extends Tasks {"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"    protected String date;"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"    public Deadlines(String description, String date) {"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"        this.typeOfTask \u003d \"D\";"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"        this.date \u003d date;"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"    public String getTypeOfTask() {"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":"        return this.typeOfTask;"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"    public String getDate() {"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"        return this.date;"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"    public String convertToTaskOutputString() {"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"        return \"[\" + getTypeOfTask() + \"]\" + super.convertToTaskOutputString()  + \"(\" + \"by: \" + this.date + \")\";"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":26,"author":{"gitId":"KimIdeas8"},"content":"}"}],"authorContributionMap":{"KimIdeas8":26}},{"path":"src/main/java/com/ip/tasksmanager/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"package com.ip.tasksmanager;"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"    public static String line \u003d \"____________________________________________________________\";"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"    public static final int INPUT_PHRASES_COUNT \u003d 2;"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"    public static Tasks[] tasks \u003d new Tasks[100]; //for storing (all types of) tasks"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"    public static int taskCount \u003d 0; //for counting tasks"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"    public static String taskInputString; //contains taskName and taskDate (from user\u0027s input)"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"    public static String taskName;"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":"    public static String taskDate;"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"     * Prints some lines to welcome the user:"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":"    public static void saysHiToUser() {"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":"        //Greeting:"},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":"        System.out.println(line);"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":"        System.out.println(line);"},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":27,"author":{"gitId":"KimIdeas8"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"KimIdeas8"},"content":"     * Prints some lines when user exits:"},{"lineNumber":29,"author":{"gitId":"KimIdeas8"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"KimIdeas8"},"content":"    public static void saysByeToUser() {"},{"lineNumber":31,"author":{"gitId":"KimIdeas8"},"content":"        //exits with \"bye\":"},{"lineNumber":32,"author":{"gitId":"KimIdeas8"},"content":"        System.out.println(line);"},{"lineNumber":33,"author":{"gitId":"KimIdeas8"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\"); //exits"},{"lineNumber":34,"author":{"gitId":"KimIdeas8"},"content":"        System.out.println(line);"},{"lineNumber":35,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":37,"author":{"gitId":"KimIdeas8"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"KimIdeas8"},"content":"     * Removes taskType from user\u0027s entire input string"},{"lineNumber":39,"author":{"gitId":"KimIdeas8"},"content":"     * Stores remaining string (with taskName and taskDate combined) in static variable taskInputString"},{"lineNumber":40,"author":{"gitId":"KimIdeas8"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"KimIdeas8"},"content":"     * @param input - entire input string of the user, made of taskType + taskName + taskDate"},{"lineNumber":42,"author":{"gitId":"KimIdeas8"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"KimIdeas8"},"content":"    public static void separateTypeOfTaskAndTaskInputString(String input) {"},{"lineNumber":44,"author":{"gitId":"KimIdeas8"},"content":"        //find position between taskType and rest of task description"},{"lineNumber":45,"author":{"gitId":"KimIdeas8"},"content":"        int taskInputStringPosition \u003d input.indexOf(\" \") + 1;"},{"lineNumber":46,"author":{"gitId":"KimIdeas8"},"content":"        taskInputString \u003d input.substring(taskInputStringPosition);"},{"lineNumber":47,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":49,"author":{"gitId":"KimIdeas8"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"KimIdeas8"},"content":"     * Takes in the remaining \u0027taskInputString\u0027 of the user\u0027s input"},{"lineNumber":51,"author":{"gitId":"KimIdeas8"},"content":"     * Splits it into two parts, the name and date of the task"},{"lineNumber":52,"author":{"gitId":"KimIdeas8"},"content":"     * and stores it in two static variables, taskName \u0026 taskDate respectively"},{"lineNumber":53,"author":{"gitId":"KimIdeas8"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"KimIdeas8"},"content":"     * @param taskInput - essentially taskInputString, which does not include taskType"},{"lineNumber":55,"author":{"gitId":"KimIdeas8"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"KimIdeas8"},"content":"    public static void splitTaskNameAndDate(String taskInput) {"},{"lineNumber":57,"author":{"gitId":"KimIdeas8"},"content":"        int beforeDatePosition \u003d taskInput.indexOf(\"/\");"},{"lineNumber":58,"author":{"gitId":"KimIdeas8"},"content":"        int datePosition \u003d beforeDatePosition + 4;"},{"lineNumber":59,"author":{"gitId":"KimIdeas8"},"content":"        taskName \u003d taskInput.substring(0, beforeDatePosition);"},{"lineNumber":60,"author":{"gitId":"KimIdeas8"},"content":"        taskDate \u003d taskInput.substring(datePosition);"},{"lineNumber":61,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":63,"author":{"gitId":"KimIdeas8"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"KimIdeas8"},"content":"     * Prints out the taskType, status, taskName and taskDate of the task added by the user"},{"lineNumber":65,"author":{"gitId":"KimIdeas8"},"content":"     * and prints the current total number of tasks in the user\u0027s list"},{"lineNumber":66,"author":{"gitId":"KimIdeas8"},"content":"     * Add to total taskCount (since new task is added)"},{"lineNumber":67,"author":{"gitId":"KimIdeas8"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"KimIdeas8"},"content":"    public static void printAddedTask() {"},{"lineNumber":69,"author":{"gitId":"KimIdeas8"},"content":"        System.out.println(\"  \" + tasks[taskCount].convertToTaskOutputString()); //prints task added"},{"lineNumber":70,"author":{"gitId":"KimIdeas8"},"content":"        taskCount++;"},{"lineNumber":71,"author":{"gitId":"KimIdeas8"},"content":"        //prints current total number of tasks (in the list of tasks):"},{"lineNumber":72,"author":{"gitId":"KimIdeas8"},"content":"        System.out.print(\"Now you have \" + taskCount + \" task\");"},{"lineNumber":73,"author":{"gitId":"KimIdeas8"},"content":"        if (taskCount \u003e 1) {"},{"lineNumber":74,"author":{"gitId":"KimIdeas8"},"content":"            System.out.print(\"s\");"},{"lineNumber":75,"author":{"gitId":"KimIdeas8"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"KimIdeas8"},"content":"        System.out.println(\" in the list.\");"},{"lineNumber":77,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":79,"author":{"gitId":"KimIdeas8"},"content":"    public static void main(String[] args) {"},{"lineNumber":80,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":81,"author":{"gitId":"KimIdeas8"},"content":"        saysHiToUser();"},{"lineNumber":82,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":83,"author":{"gitId":"KimIdeas8"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":84,"author":{"gitId":"KimIdeas8"},"content":"        String input \u003d in.nextLine(); //take in User\u0027s first input:"},{"lineNumber":85,"author":{"gitId":"KimIdeas8"},"content":"        //list, mark or add user\u0027s tasks (until user inputs \"bye\"):"},{"lineNumber":86,"author":{"gitId":"KimIdeas8"},"content":"        while (!input.equals(\"bye\")) {"},{"lineNumber":87,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":88,"author":{"gitId":"KimIdeas8"},"content":"            System.out.println(line); //start of current response to User"},{"lineNumber":89,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":90,"author":{"gitId":"KimIdeas8"},"content":"            //add and store task to list of tasks"},{"lineNumber":91,"author":{"gitId":"KimIdeas8"},"content":"            if (input.startsWith(\"todo\")) {"},{"lineNumber":92,"author":{"gitId":"KimIdeas8"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":93,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":94,"author":{"gitId":"KimIdeas8"},"content":"                separateTypeOfTaskAndTaskInputString(input);"},{"lineNumber":95,"author":{"gitId":"KimIdeas8"},"content":"                taskName \u003d taskInputString;"},{"lineNumber":96,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":97,"author":{"gitId":"KimIdeas8"},"content":"                tasks[taskCount] \u003d new ToDos(taskName); //add task to list"},{"lineNumber":98,"author":{"gitId":"KimIdeas8"},"content":"                printAddedTask();"},{"lineNumber":99,"author":{"gitId":"KimIdeas8"},"content":"            } else if (input.startsWith(\"deadline\")) {"},{"lineNumber":100,"author":{"gitId":"KimIdeas8"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":101,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":102,"author":{"gitId":"KimIdeas8"},"content":"                separateTypeOfTaskAndTaskInputString(input);"},{"lineNumber":103,"author":{"gitId":"KimIdeas8"},"content":"                splitTaskNameAndDate(taskInputString);"},{"lineNumber":104,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":105,"author":{"gitId":"KimIdeas8"},"content":"                tasks[taskCount] \u003d new Deadlines(taskName, taskDate); //add task to list"},{"lineNumber":106,"author":{"gitId":"KimIdeas8"},"content":"                printAddedTask();"},{"lineNumber":107,"author":{"gitId":"KimIdeas8"},"content":"            } else if (input.startsWith(\"event\")) {"},{"lineNumber":108,"author":{"gitId":"KimIdeas8"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":109,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":110,"author":{"gitId":"KimIdeas8"},"content":"                separateTypeOfTaskAndTaskInputString(input);"},{"lineNumber":111,"author":{"gitId":"KimIdeas8"},"content":"                splitTaskNameAndDate(taskInputString);"},{"lineNumber":112,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":113,"author":{"gitId":"KimIdeas8"},"content":"                tasks[taskCount] \u003d new Events(taskName, taskDate); //add task to list"},{"lineNumber":114,"author":{"gitId":"KimIdeas8"},"content":"                printAddedTask();"},{"lineNumber":115,"author":{"gitId":"KimIdeas8"},"content":"            }"},{"lineNumber":116,"author":{"gitId":"KimIdeas8"},"content":"            //OR: lists all the user\u0027s current tasks in the format of taskType,taskStatus,taskName(and taskDate):"},{"lineNumber":117,"author":{"gitId":"KimIdeas8"},"content":"            else if (input.startsWith(\"list\")) {"},{"lineNumber":118,"author":{"gitId":"KimIdeas8"},"content":"                System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":119,"author":{"gitId":"KimIdeas8"},"content":"                for (int i \u003d 0; i \u003c taskCount; i++) {"},{"lineNumber":120,"author":{"gitId":"KimIdeas8"},"content":"                    int taskNumber \u003d i+1; //stores the current numbering of the bulleted tasks"},{"lineNumber":121,"author":{"gitId":"KimIdeas8"},"content":"                    System.out.println(taskNumber + \".\" + tasks[i].convertToTaskOutputString());"},{"lineNumber":122,"author":{"gitId":"KimIdeas8"},"content":"                }"},{"lineNumber":123,"author":{"gitId":"KimIdeas8"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"KimIdeas8"},"content":"            //OR: mark current task as \u0027done\u0027 \u0026 outputs the taskType,taskStatus,taskName(and taskDate):"},{"lineNumber":125,"author":{"gitId":"KimIdeas8"},"content":"            else if (input.startsWith(\"done\")) {"},{"lineNumber":126,"author":{"gitId":"KimIdeas8"},"content":"                String[] commandAndTaskNumber \u003d input.split(\" \");"},{"lineNumber":127,"author":{"gitId":"KimIdeas8"},"content":"                int index \u003d Integer.parseInt(commandAndTaskNumber[1]) - 1; //obtain task number(which starts from 1)"},{"lineNumber":128,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":129,"author":{"gitId":"KimIdeas8"},"content":"                tasks[index].markAsDone(); //mark task given by current command as \u0027done\u0027"},{"lineNumber":130,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":131,"author":{"gitId":"KimIdeas8"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":132,"author":{"gitId":"KimIdeas8"},"content":"                System.out.println(\" \" + tasks[index].convertToTaskOutputString());"},{"lineNumber":133,"author":{"gitId":"KimIdeas8"},"content":"            }"},{"lineNumber":134,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":135,"author":{"gitId":"KimIdeas8"},"content":"            System.out.println(line); //end of current response to User"},{"lineNumber":136,"author":{"gitId":"KimIdeas8"},"content":"            //takes in next input:"},{"lineNumber":137,"author":{"gitId":"KimIdeas8"},"content":"            input \u003d in.nextLine();"},{"lineNumber":138,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":139,"author":{"gitId":"KimIdeas8"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":141,"author":{"gitId":"KimIdeas8"},"content":"        saysByeToUser();"},{"lineNumber":142,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":144,"author":{"gitId":"KimIdeas8"},"content":"}"}],"authorContributionMap":{"KimIdeas8":144}},{"path":"src/main/java/com/ip/tasksmanager/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"package com.ip.tasksmanager;"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"public class Events extends Tasks {"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"    protected String date;"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"    public Events(String description, String date) {"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"        this.typeOfTask \u003d \"E\";"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"        this.date \u003d date;"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"    public String getTypeOfTask() {"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":"        return this.typeOfTask;"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"    public String getDate() {"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"        return this.date;"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"    public String convertToTaskOutputString() {"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"        return \"[\" + getTypeOfTask() + \"]\" + super.convertToTaskOutputString() + \"(\" + \"at: \" + this.date + \")\";"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":26,"author":{"gitId":"KimIdeas8"},"content":"}"}],"authorContributionMap":{"KimIdeas8":26}},{"path":"src/main/java/com/ip/tasksmanager/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"package com.ip.tasksmanager;"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"public class Tasks {"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"    protected String typeOfTask;"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"    public Tasks(String description) {"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"        this.description \u003d description;"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"        this.isDone \u003d false;"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":"    public void markAsDone() {"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":"        this.isDone \u003d true;"},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"    public String getStatusIcon() {"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":"        return (isDone ? \"\\u2713\" : \" \"); //return tick or blank space"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"    public String getDescription() {"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"        return this.description;"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":26,"author":{"gitId":"KimIdeas8"},"content":"    //common output for \u0027todo\u0027, \u0027deadlines\u0027, \u0027events\u0027 + \u0027tasks\u0027 + \u0027done\u0027 command:"},{"lineNumber":27,"author":{"gitId":"KimIdeas8"},"content":"    public String convertToTaskOutputString() {"},{"lineNumber":28,"author":{"gitId":"KimIdeas8"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"},{"lineNumber":29,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":31,"author":{"gitId":"KimIdeas8"},"content":"}"}],"authorContributionMap":{"KimIdeas8":31}},{"path":"src/main/java/com/ip/tasksmanager/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"package com.ip.tasksmanager;"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"public class ToDos extends Tasks {"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"    public ToDos(String description) {"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"        this.typeOfTask \u003d \"T\";"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"    public String getTypeOfTask() {"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"        return this.typeOfTask;"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":"    public String convertToTaskOutputString() {"},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":"        return \"[\" + getTypeOfTask() + \"]\" + super.convertToTaskOutputString();"},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":""},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":"}"}],"authorContributionMap":{"KimIdeas8":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"done 4"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"list"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"deadline return book /by Sunday"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"bye"}],"authorContributionMap":{"KimIdeas8":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\com\\ip\\tasksmanager\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"java -classpath ..\\bin com.ip.tasksmanager.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"KimIdeas8":2,"-":19}}]
