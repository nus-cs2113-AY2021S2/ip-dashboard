[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lamzf1998"},"content":"# Duke project "},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"lamzf1998"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java baddest mascot _Duke the Dawg_. Given below are input commands:"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"lamzf1998"},"content":"- todo _TASKNAME_ : adds a todo task to the list"},{"lineNumber":6,"author":{"gitId":"lamzf1998"},"content":"- event _TASKNAME_ /at _TASKDATETIME_ : adds a event task to the list"},{"lineNumber":7,"author":{"gitId":"lamzf1998"},"content":"- deadline _TASKNAME_ /by _TASKDATETIME_ : adds a deadline task to the list"},{"lineNumber":8,"author":{"gitId":"lamzf1998"},"content":"- list : displays list of tasks"},{"lineNumber":9,"author":{"gitId":"lamzf1998"},"content":"- done _NUMBER_ : checks task as done"},{"lineNumber":10,"author":{"gitId":"lamzf1998"},"content":"- delete _NUMBER_ : removes task from list"},{"lineNumber":11,"author":{"gitId":"lamzf1998"},"content":"- save : save task list in a seperate text file"},{"lineNumber":12,"author":{"gitId":"lamzf1998"},"content":"- bye : exits system"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"lamzf1998"},"content":"If the task list is saved, it will be re-loaded into the console for edits upon running duke.main()."},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"lamzf1998":11,"-":12}},{"path":"src/main/java/duke/Controller/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamzf1998"},"content":"package duke.controller;"},{"lineNumber":2,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":3,"author":{"gitId":"lamzf1998"},"content":"public class Parser {"},{"lineNumber":4,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":5,"author":{"gitId":"lamzf1998"},"content":"    /*Methods to process the input of the user."},{"lineNumber":6,"author":{"gitId":"lamzf1998"},"content":"If input is not valid, returns string nonsense."},{"lineNumber":7,"author":{"gitId":"lamzf1998"},"content":"The type of task is indicated by the first substring and the task description is found after the first blank space."},{"lineNumber":8,"author":{"gitId":"lamzf1998"},"content":"If a forward slash present,  ths substring is split into the task and the end date which is indicated by the slash."},{"lineNumber":9,"author":{"gitId":"lamzf1998"},"content":"Exception handling includes cases where no tasks are specified, invalid inputs, no date or time being specified (for event and deadline)*/"},{"lineNumber":10,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":11,"author":{"gitId":"lamzf1998"},"content":"    public String extractTask(String input) {"},{"lineNumber":12,"author":{"gitId":"lamzf1998"},"content":"        String Task;"},{"lineNumber":13,"author":{"gitId":"lamzf1998"},"content":"        if (input.equalsIgnoreCase(\"list\")) {"},{"lineNumber":14,"author":{"gitId":"lamzf1998"},"content":"            return \"list\";"},{"lineNumber":15,"author":{"gitId":"lamzf1998"},"content":"        } else if (input.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":16,"author":{"gitId":"lamzf1998"},"content":"            return \"bye\";"},{"lineNumber":17,"author":{"gitId":"lamzf1998"},"content":"        } else if (input.contains(\"done\")) {"},{"lineNumber":18,"author":{"gitId":"lamzf1998"},"content":"            return \"done\";"},{"lineNumber":19,"author":{"gitId":"lamzf1998"},"content":"        } else if (input.contains(\"delete\")) {"},{"lineNumber":20,"author":{"gitId":"lamzf1998"},"content":"            return \"delete\";"},{"lineNumber":21,"author":{"gitId":"lamzf1998"},"content":"        } else if (input.contains(\"save\")) {"},{"lineNumber":22,"author":{"gitId":"lamzf1998"},"content":"            return \"save\";"},{"lineNumber":23,"author":{"gitId":"lamzf1998"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"lamzf1998"},"content":"        else if (input.contains(\"todo\") || input.contains(\"deadline\") || input.contains(\"event\")) {"},{"lineNumber":25,"author":{"gitId":"lamzf1998"},"content":"            int indexOfSpace \u003d input.indexOf(\" \");"},{"lineNumber":26,"author":{"gitId":"lamzf1998"},"content":"            if (indexOfSpace \u003d\u003d -1) {"},{"lineNumber":27,"author":{"gitId":"lamzf1998"},"content":"                return \"retry\";"},{"lineNumber":28,"author":{"gitId":"lamzf1998"},"content":"            } else {"},{"lineNumber":29,"author":{"gitId":"lamzf1998"},"content":"                String subString \u003d input.substring(indexOfSpace + 1);"},{"lineNumber":30,"author":{"gitId":"lamzf1998"},"content":"                if (subString.contains(\"/\")) {"},{"lineNumber":31,"author":{"gitId":"lamzf1998"},"content":"                    int indexOfSlash \u003d subString.indexOf(\"/\");"},{"lineNumber":32,"author":{"gitId":"lamzf1998"},"content":"                    Task \u003d subString.substring(0, indexOfSlash - 1);"},{"lineNumber":33,"author":{"gitId":"lamzf1998"},"content":"                } else {"},{"lineNumber":34,"author":{"gitId":"lamzf1998"},"content":"                    Task \u003d subString;"},{"lineNumber":35,"author":{"gitId":"lamzf1998"},"content":"                }"},{"lineNumber":36,"author":{"gitId":"lamzf1998"},"content":"                return Task;"},{"lineNumber":37,"author":{"gitId":"lamzf1998"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"lamzf1998"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"lamzf1998"},"content":"            return \"nonsense\";"},{"lineNumber":40,"author":{"gitId":"lamzf1998"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":43,"author":{"gitId":"lamzf1998"},"content":"    public String extractDate(String input) {"},{"lineNumber":44,"author":{"gitId":"lamzf1998"},"content":"        String Date \u003d null;"},{"lineNumber":45,"author":{"gitId":"lamzf1998"},"content":"        if (input.equalsIgnoreCase(\"list\")) {"},{"lineNumber":46,"author":{"gitId":"lamzf1998"},"content":"            return \"list\";"},{"lineNumber":47,"author":{"gitId":"lamzf1998"},"content":"        } else if (input.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":48,"author":{"gitId":"lamzf1998"},"content":"            return \"bye\";"},{"lineNumber":49,"author":{"gitId":"lamzf1998"},"content":"        } else if (input.contains(\"done\")) {"},{"lineNumber":50,"author":{"gitId":"lamzf1998"},"content":"            return \"done\";"},{"lineNumber":51,"author":{"gitId":"lamzf1998"},"content":"        } else if (input.contains(\"todo\")) {"},{"lineNumber":52,"author":{"gitId":"lamzf1998"},"content":"            return \"todo\";"},{"lineNumber":53,"author":{"gitId":"lamzf1998"},"content":"        } else if (input.contains(\"delete\")) {"},{"lineNumber":54,"author":{"gitId":"lamzf1998"},"content":"            return \"delete\";"},{"lineNumber":55,"author":{"gitId":"lamzf1998"},"content":"        } else if (input.contains(\"save\")) {"},{"lineNumber":56,"author":{"gitId":"lamzf1998"},"content":"            return \"save\";"},{"lineNumber":57,"author":{"gitId":"lamzf1998"},"content":"        } else if (input.contains(\"deadline\") || input.contains(\"event\")) {"},{"lineNumber":58,"author":{"gitId":"lamzf1998"},"content":"            int indexOfSpace \u003d input.indexOf(\" \");"},{"lineNumber":59,"author":{"gitId":"lamzf1998"},"content":"            String subString \u003d input.substring(indexOfSpace + 1);"},{"lineNumber":60,"author":{"gitId":"lamzf1998"},"content":"            if (subString.contains(\"/\")) {"},{"lineNumber":61,"author":{"gitId":"lamzf1998"},"content":"                int indexOfSlash \u003d subString.indexOf(\"/\");"},{"lineNumber":62,"author":{"gitId":"lamzf1998"},"content":"                String subStringDate \u003d subString.substring(indexOfSlash);"},{"lineNumber":63,"author":{"gitId":"lamzf1998"},"content":"                int indexNext \u003d subStringDate.indexOf(\" \");"},{"lineNumber":64,"author":{"gitId":"lamzf1998"},"content":"                if (indexNext \u003d\u003d -1) {"},{"lineNumber":65,"author":{"gitId":"lamzf1998"},"content":"                    return \"missing\";"},{"lineNumber":66,"author":{"gitId":"lamzf1998"},"content":"                } else {"},{"lineNumber":67,"author":{"gitId":"lamzf1998"},"content":"                    Date \u003d subStringDate.substring(indexNext + 1);"},{"lineNumber":68,"author":{"gitId":"lamzf1998"},"content":"                    return Date;"},{"lineNumber":69,"author":{"gitId":"lamzf1998"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"lamzf1998"},"content":"            } else {"},{"lineNumber":71,"author":{"gitId":"lamzf1998"},"content":"                return \"missing\";"},{"lineNumber":72,"author":{"gitId":"lamzf1998"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"lamzf1998"},"content":"        } else {"},{"lineNumber":74,"author":{"gitId":"lamzf1998"},"content":"            return \"nonsense\";"},{"lineNumber":75,"author":{"gitId":"lamzf1998"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"lamzf1998"},"content":"}"},{"lineNumber":78,"author":{"gitId":"lamzf1998"},"content":""}],"authorContributionMap":{"lamzf1998":78}},{"path":"src/main/java/duke/Controller/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamzf1998"},"content":"package duke.controller;"},{"lineNumber":2,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":3,"author":{"gitId":"lamzf1998"},"content":"import duke.tasks.Deadline;"},{"lineNumber":4,"author":{"gitId":"lamzf1998"},"content":"import duke.tasks.Event;"},{"lineNumber":5,"author":{"gitId":"lamzf1998"},"content":"import duke.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"lamzf1998"},"content":"import duke.tasks.toDo;"},{"lineNumber":7,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":8,"author":{"gitId":"lamzf1998"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"lamzf1998"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":10,"author":{"gitId":"lamzf1998"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"lamzf1998"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"lamzf1998"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"lamzf1998"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":15,"author":{"gitId":"lamzf1998"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":17,"author":{"gitId":"lamzf1998"},"content":"    public void saveFile(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":18,"author":{"gitId":"lamzf1998"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"lamzf1998"},"content":"            FileWriter writer \u003d new FileWriter(\"saveDuke.txt\");"},{"lineNumber":20,"author":{"gitId":"lamzf1998"},"content":"            for (Task task : tasks) {"},{"lineNumber":21,"author":{"gitId":"lamzf1998"},"content":"                if (task instanceof toDo) {"},{"lineNumber":22,"author":{"gitId":"lamzf1998"},"content":"                    writer.write(\"T\" + \" / \" + task.getSaveDone() + \" / \" + task.getDescription());"},{"lineNumber":23,"author":{"gitId":"lamzf1998"},"content":"                } else if (task instanceof Deadline) {"},{"lineNumber":24,"author":{"gitId":"lamzf1998"},"content":"                    writer.write(\"D\" + \" / \" + task.getSaveDone() + \" / \" + task.getDescription() + \" / \" + ((Deadline) task).getByDate());"},{"lineNumber":25,"author":{"gitId":"lamzf1998"},"content":"                } else if (task instanceof Event) {"},{"lineNumber":26,"author":{"gitId":"lamzf1998"},"content":"                    writer.write(\"E\" + \" / \" + task.getSaveDone() + \" / \" + task.getDescription() + \" / \" + ((Event) task).getAtDate());"},{"lineNumber":27,"author":{"gitId":"lamzf1998"},"content":"                }"},{"lineNumber":28,"author":{"gitId":"lamzf1998"},"content":"                writer.write(\"\\n\");"},{"lineNumber":29,"author":{"gitId":"lamzf1998"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"lamzf1998"},"content":"            writer.close();"},{"lineNumber":31,"author":{"gitId":"lamzf1998"},"content":"            System.out.print(\"Yea cuhhhh... filed saved!\\n\");"},{"lineNumber":32,"author":{"gitId":"lamzf1998"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"lamzf1998"},"content":"            System.out.println(\"Cannot save file my G!\");"},{"lineNumber":34,"author":{"gitId":"lamzf1998"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"lamzf1998"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":38,"author":{"gitId":"lamzf1998"},"content":"    public ArrayList\u003cTask\u003e printFileContents() {"},{"lineNumber":39,"author":{"gitId":"lamzf1998"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":40,"author":{"gitId":"lamzf1998"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"lamzf1998"},"content":"            File saveDuke \u003d new File(\"saveDuke.txt\");"},{"lineNumber":42,"author":{"gitId":"lamzf1998"},"content":"            Scanner fileReader \u003d new Scanner(saveDuke);"},{"lineNumber":43,"author":{"gitId":"lamzf1998"},"content":"            while (fileReader.hasNext()) {"},{"lineNumber":44,"author":{"gitId":"lamzf1998"},"content":"                String line \u003d fileReader.nextLine();"},{"lineNumber":45,"author":{"gitId":"lamzf1998"},"content":"                String[] stringSplit \u003d line.split(\" / \");"},{"lineNumber":46,"author":{"gitId":"lamzf1998"},"content":"                if (stringSplit[0].equals(\"T\")) {"},{"lineNumber":47,"author":{"gitId":"lamzf1998"},"content":"                    Task task \u003d new toDo(stringSplit[2]);"},{"lineNumber":48,"author":{"gitId":"lamzf1998"},"content":"                    if (stringSplit[1].equals(\"0\")) {"},{"lineNumber":49,"author":{"gitId":"lamzf1998"},"content":"                        task.setAsDone(false);"},{"lineNumber":50,"author":{"gitId":"lamzf1998"},"content":"                    } else {"},{"lineNumber":51,"author":{"gitId":"lamzf1998"},"content":"                        task.setAsDone(true);"},{"lineNumber":52,"author":{"gitId":"lamzf1998"},"content":"                    }"},{"lineNumber":53,"author":{"gitId":"lamzf1998"},"content":"                    tasks.add(task);"},{"lineNumber":54,"author":{"gitId":"lamzf1998"},"content":"                } else if (stringSplit[0].equals(\"E\")) {"},{"lineNumber":55,"author":{"gitId":"lamzf1998"},"content":"                    Task task \u003d new Event(stringSplit[2], stringSplit[3]);"},{"lineNumber":56,"author":{"gitId":"lamzf1998"},"content":"                    if (stringSplit[1].equals(\"0\")) {"},{"lineNumber":57,"author":{"gitId":"lamzf1998"},"content":"                        task.setAsDone(false);"},{"lineNumber":58,"author":{"gitId":"lamzf1998"},"content":"                    } else {"},{"lineNumber":59,"author":{"gitId":"lamzf1998"},"content":"                        task.setAsDone(true);"},{"lineNumber":60,"author":{"gitId":"lamzf1998"},"content":"                    }"},{"lineNumber":61,"author":{"gitId":"lamzf1998"},"content":"                    tasks.add(task);"},{"lineNumber":62,"author":{"gitId":"lamzf1998"},"content":"                } else if (stringSplit[0].equals(\"D\")) {"},{"lineNumber":63,"author":{"gitId":"lamzf1998"},"content":"                    Task task \u003d new Deadline(stringSplit[2], stringSplit[3]);"},{"lineNumber":64,"author":{"gitId":"lamzf1998"},"content":"                    if (stringSplit[1].equals(\"0\")) {"},{"lineNumber":65,"author":{"gitId":"lamzf1998"},"content":"                        task.setAsDone(false);"},{"lineNumber":66,"author":{"gitId":"lamzf1998"},"content":"                    } else {"},{"lineNumber":67,"author":{"gitId":"lamzf1998"},"content":"                        task.setAsDone(true);"},{"lineNumber":68,"author":{"gitId":"lamzf1998"},"content":"                    }"},{"lineNumber":69,"author":{"gitId":"lamzf1998"},"content":"                    tasks.add(task);"},{"lineNumber":70,"author":{"gitId":"lamzf1998"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"lamzf1998"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"lamzf1998"},"content":"            fileReader.close();"},{"lineNumber":73,"author":{"gitId":"lamzf1998"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":74,"author":{"gitId":"lamzf1998"},"content":"            System.out.println(\"Cannot load file...you are clapped! Churn up new list please.\");"},{"lineNumber":75,"author":{"gitId":"lamzf1998"},"content":"            return tasks;"},{"lineNumber":76,"author":{"gitId":"lamzf1998"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"lamzf1998"},"content":"        System.out.println(\"File loaded boi...lets gooooooo!\");"},{"lineNumber":78,"author":{"gitId":"lamzf1998"},"content":"        return tasks;"},{"lineNumber":79,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"lamzf1998"},"content":"}"}],"authorContributionMap":{"lamzf1998":80}},{"path":"src/main/java/duke/Controller/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamzf1998"},"content":"package duke.controller;"},{"lineNumber":2,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":3,"author":{"gitId":"lamzf1998"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"lamzf1998"},"content":"import duke.tasks.Deadline;"},{"lineNumber":5,"author":{"gitId":"lamzf1998"},"content":"import duke.tasks.Event;"},{"lineNumber":6,"author":{"gitId":"lamzf1998"},"content":"import duke.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"lamzf1998"},"content":"import duke.tasks.toDo;"},{"lineNumber":8,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":9,"author":{"gitId":"lamzf1998"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":11,"author":{"gitId":"lamzf1998"},"content":"    public TaskList() {}"},{"lineNumber":12,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":13,"author":{"gitId":"lamzf1998"},"content":"    public void printTaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":14,"author":{"gitId":"lamzf1998"},"content":"        int number \u003d 1;"},{"lineNumber":15,"author":{"gitId":"lamzf1998"},"content":"        System.out.println(\"Here are the tings in yo list: \");"},{"lineNumber":16,"author":{"gitId":"lamzf1998"},"content":"        for (Task task : tasks) {"},{"lineNumber":17,"author":{"gitId":"lamzf1998"},"content":"            System.out.println(number + \". \" + task.printDescription());"},{"lineNumber":18,"author":{"gitId":"lamzf1998"},"content":"            number++;"},{"lineNumber":19,"author":{"gitId":"lamzf1998"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":22,"author":{"gitId":"lamzf1998"},"content":"    public void showDone(ArrayList\u003cTask\u003e tasks, String input) {"},{"lineNumber":23,"author":{"gitId":"lamzf1998"},"content":"        int indexSpace \u003d input.indexOf(\" \");"},{"lineNumber":24,"author":{"gitId":"lamzf1998"},"content":"        if (indexSpace \u003d\u003d -1) {"},{"lineNumber":25,"author":{"gitId":"lamzf1998"},"content":"            System.out.println(\"I see you forget how to type numbers yea... you donut! Type in your task number man!\");"},{"lineNumber":26,"author":{"gitId":"lamzf1998"},"content":"        } else {"},{"lineNumber":27,"author":{"gitId":"lamzf1998"},"content":"            String numberString \u003d input.substring(indexSpace + 1);"},{"lineNumber":28,"author":{"gitId":"lamzf1998"},"content":"            int taskNumber \u003d Integer.parseInt(numberString);"},{"lineNumber":29,"author":{"gitId":"lamzf1998"},"content":"            try {"},{"lineNumber":30,"author":{"gitId":"lamzf1998"},"content":"                if (taskNumber \u003e tasks.size() || taskNumber \u003d\u003d 0) {"},{"lineNumber":31,"author":{"gitId":"lamzf1998"},"content":"                    throw new NullPointerException(\"Are you blind? There is no such task number you fool!\");"},{"lineNumber":32,"author":{"gitId":"lamzf1998"},"content":"                }"},{"lineNumber":33,"author":{"gitId":"lamzf1998"},"content":"                tasks.get(taskNumber - 1).markAsDone();"},{"lineNumber":34,"author":{"gitId":"lamzf1998"},"content":"                System.out.println(\"Awwww yeah! I\u0027ve marked this task as done... brrrrrap brrrrrap: \");"},{"lineNumber":35,"author":{"gitId":"lamzf1998"},"content":"                System.out.println(tasks.get(taskNumber - 1).printDescription());"},{"lineNumber":36,"author":{"gitId":"lamzf1998"},"content":"            } catch (NullPointerException e) {"},{"lineNumber":37,"author":{"gitId":"lamzf1998"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":38,"author":{"gitId":"lamzf1998"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"lamzf1998"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":42,"author":{"gitId":"lamzf1998"},"content":"    public void deleteTask(ArrayList\u003cTask\u003e tasks, String input) {"},{"lineNumber":43,"author":{"gitId":"lamzf1998"},"content":"        int indexSpace \u003d input.indexOf(\" \");"},{"lineNumber":44,"author":{"gitId":"lamzf1998"},"content":"        if (indexSpace \u003d\u003d -1) {"},{"lineNumber":45,"author":{"gitId":"lamzf1998"},"content":"            System.out.println(\"I see you forget how to type numbers yea... you donut! Type in your task number man!\");"},{"lineNumber":46,"author":{"gitId":"lamzf1998"},"content":"        } else {"},{"lineNumber":47,"author":{"gitId":"lamzf1998"},"content":"            String numberString \u003d input.substring(indexSpace + 1);"},{"lineNumber":48,"author":{"gitId":"lamzf1998"},"content":"            int taskNumber \u003d Integer.parseInt(numberString);"},{"lineNumber":49,"author":{"gitId":"lamzf1998"},"content":"            try {"},{"lineNumber":50,"author":{"gitId":"lamzf1998"},"content":"                if (taskNumber \u003e tasks.size() || taskNumber \u003d\u003d 0) {"},{"lineNumber":51,"author":{"gitId":"lamzf1998"},"content":"                    throw new NullPointerException(\"Are you blind? There is no such task number you fool!\");"},{"lineNumber":52,"author":{"gitId":"lamzf1998"},"content":"                }"},{"lineNumber":53,"author":{"gitId":"lamzf1998"},"content":"                System.out.println(\"Awwww yeah! I\u0027ve deleted this task like a beast: \");"},{"lineNumber":54,"author":{"gitId":"lamzf1998"},"content":"                System.out.println(tasks.get(taskNumber - 1).printDescription());"},{"lineNumber":55,"author":{"gitId":"lamzf1998"},"content":"                tasks.remove(taskNumber - 1);"},{"lineNumber":56,"author":{"gitId":"lamzf1998"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":57,"author":{"gitId":"lamzf1998"},"content":"            } catch (NullPointerException e) {"},{"lineNumber":58,"author":{"gitId":"lamzf1998"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":59,"author":{"gitId":"lamzf1998"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"lamzf1998"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":63,"author":{"gitId":"lamzf1998"},"content":"    public void printToDo(ArrayList\u003cTask\u003e tasks, String input, String description) {"},{"lineNumber":64,"author":{"gitId":"lamzf1998"},"content":"        Task todo \u003d new toDo(description);"},{"lineNumber":65,"author":{"gitId":"lamzf1998"},"content":"        tasks.add(todo);"},{"lineNumber":66,"author":{"gitId":"lamzf1998"},"content":"        System.out.println(\"Ayy I got you my brother. I\u0027ve added this ting: \");"},{"lineNumber":67,"author":{"gitId":"lamzf1998"},"content":"        System.out.println(todo.printDescription());"},{"lineNumber":68,"author":{"gitId":"lamzf1998"},"content":"        System.out.println(\"Dayuum son! You have \" + tasks.size() + \" mad tings in the list.\");"},{"lineNumber":69,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":71,"author":{"gitId":"lamzf1998"},"content":"    public void printDeadline(ArrayList\u003cTask\u003e tasks, String input, String description, String date) {"},{"lineNumber":72,"author":{"gitId":"lamzf1998"},"content":"        Task deadline \u003d new Deadline(description, date);"},{"lineNumber":73,"author":{"gitId":"lamzf1998"},"content":"        tasks.add(deadline);"},{"lineNumber":74,"author":{"gitId":"lamzf1998"},"content":"        System.out.println(\"Ayy I got you my brother. I\u0027ve added this ting: \");"},{"lineNumber":75,"author":{"gitId":"lamzf1998"},"content":"        System.out.println(deadline.printDescription());"},{"lineNumber":76,"author":{"gitId":"lamzf1998"},"content":"        System.out.println(\"Jeeeeeeez! You have \" + tasks.size() + \" mad tings in the list.\");"},{"lineNumber":77,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":79,"author":{"gitId":"lamzf1998"},"content":"    public void printEvent(ArrayList\u003cTask\u003e tasks, String input, String description, String date) {"},{"lineNumber":80,"author":{"gitId":"lamzf1998"},"content":"        Task event \u003d new Event(description, date);"},{"lineNumber":81,"author":{"gitId":"lamzf1998"},"content":"        tasks.add(event);"},{"lineNumber":82,"author":{"gitId":"lamzf1998"},"content":"        System.out.println(\"Ayy I got you my brother. I\u0027ve added this ting: \");"},{"lineNumber":83,"author":{"gitId":"lamzf1998"},"content":"        System.out.println(event.printDescription());"},{"lineNumber":84,"author":{"gitId":"lamzf1998"},"content":"        System.out.println(\"I feer! You have \" + tasks.size() + \" mad tings in the list.\");"},{"lineNumber":85,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"lamzf1998"},"content":"}"}],"authorContributionMap":{"lamzf1998":86}},{"path":"src/main/java/duke/Controller/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamzf1998"},"content":"package duke.controller;"},{"lineNumber":2,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":3,"author":{"gitId":"lamzf1998"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":5,"author":{"gitId":"lamzf1998"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"lamzf1998"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":8,"author":{"gitId":"lamzf1998"},"content":"public class UI {"},{"lineNumber":9,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":10,"author":{"gitId":"lamzf1998"},"content":"    private TaskList tasklist \u003d new TaskList();"},{"lineNumber":11,"author":{"gitId":"lamzf1998"},"content":"    private Parser parser \u003d new Parser();"},{"lineNumber":12,"author":{"gitId":"lamzf1998"},"content":"    private Storage store \u003d new Storage();"},{"lineNumber":13,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":14,"author":{"gitId":"lamzf1998"},"content":"    public UI() {};"},{"lineNumber":15,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":16,"author":{"gitId":"lamzf1998"},"content":"    public void displayWelcome() {"},{"lineNumber":17,"author":{"gitId":"lamzf1998"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":18,"author":{"gitId":"lamzf1998"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":19,"author":{"gitId":"lamzf1998"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":20,"author":{"gitId":"lamzf1998"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":21,"author":{"gitId":"lamzf1998"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":22,"author":{"gitId":"lamzf1998"},"content":"        System.out.println(logo);"},{"lineNumber":23,"author":{"gitId":"lamzf1998"},"content":"        System.out.println(\"Ay yo homie! You lookin PENGGGGGGGG today!\\nIt\u0027s ya boi Duke the Dawg. What can I do for ma G?\\n\");"},{"lineNumber":24,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":26,"author":{"gitId":"lamzf1998"},"content":"    public void handleTasklist(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":27,"author":{"gitId":"lamzf1998"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":28,"author":{"gitId":"lamzf1998"},"content":"        Boolean isSame \u003d true;"},{"lineNumber":29,"author":{"gitId":"lamzf1998"},"content":"        while (isSame) {"},{"lineNumber":30,"author":{"gitId":"lamzf1998"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":31,"author":{"gitId":"lamzf1998"},"content":"            String stringTask \u003d parser.extractTask(input);"},{"lineNumber":32,"author":{"gitId":"lamzf1998"},"content":"            String stringDate \u003d parser.extractDate(input);"},{"lineNumber":33,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":34,"author":{"gitId":"lamzf1998"},"content":"             /* If input is \"bye\", system exits with message."},{"lineNumber":35,"author":{"gitId":"lamzf1998"},"content":"             If input is \"list\", list of tasks will be displayed."},{"lineNumber":36,"author":{"gitId":"lamzf1998"},"content":"             If input is \"done\", the task number to be marked as done."},{"lineNumber":37,"author":{"gitId":"lamzf1998"},"content":"                - Exception handling for \"done\" includes not indicating task number and input task number out of range."},{"lineNumber":38,"author":{"gitId":"lamzf1998"},"content":"             If input is \"delete\", the task number is removed from the list."},{"lineNumber":39,"author":{"gitId":"lamzf1998"},"content":"                - Exception handling for \"delete\" includes not indicating task number and input task number out of range."},{"lineNumber":40,"author":{"gitId":"lamzf1998"},"content":"             If input is \"save\", the task list is save in a seperate txt file."},{"lineNumber":41,"author":{"gitId":"lamzf1998"},"content":"             If input is \"todo\", classify task as ToDo."},{"lineNumber":42,"author":{"gitId":"lamzf1998"},"content":"             If input is \"Deadline\", classify task as Deadline."},{"lineNumber":43,"author":{"gitId":"lamzf1998"},"content":"             If input is \"Event\", classify task as Event."},{"lineNumber":44,"author":{"gitId":"lamzf1998"},"content":"             If there is no task specified after specifying the type of task, system will prompt for another input*/"},{"lineNumber":45,"author":{"gitId":"lamzf1998"},"content":"            if (stringTask.contains(\"retry\")) {"},{"lineNumber":46,"author":{"gitId":"lamzf1998"},"content":"                System.out.println(\"Hoi allow it fam! Why you got no tasks? Are you dumb? Try again... you melon!\");"},{"lineNumber":47,"author":{"gitId":"lamzf1998"},"content":"                continue;"},{"lineNumber":48,"author":{"gitId":"lamzf1998"},"content":"            } else if (stringDate.contains(\"missing\")) {"},{"lineNumber":49,"author":{"gitId":"lamzf1998"},"content":"                System.out.println(\"Hoi you forgot your date yea? Type in your time period boi!\");"},{"lineNumber":50,"author":{"gitId":"lamzf1998"},"content":"                continue;"},{"lineNumber":51,"author":{"gitId":"lamzf1998"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":53,"author":{"gitId":"lamzf1998"},"content":"            if (input.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":54,"author":{"gitId":"lamzf1998"},"content":"                System.out.println(\"Ciao Ciao. See ya soon fam!\");"},{"lineNumber":55,"author":{"gitId":"lamzf1998"},"content":"                isSame \u003d false;"},{"lineNumber":56,"author":{"gitId":"lamzf1998"},"content":"                System.exit(0);"},{"lineNumber":57,"author":{"gitId":"lamzf1998"},"content":"            } else if (input.equalsIgnoreCase(\"list\")) {"},{"lineNumber":58,"author":{"gitId":"lamzf1998"},"content":"                tasklist.printTaskList(tasks);"},{"lineNumber":59,"author":{"gitId":"lamzf1998"},"content":"            } else if (input.contains(\"done\")) {"},{"lineNumber":60,"author":{"gitId":"lamzf1998"},"content":"                tasklist.showDone(tasks, input);"},{"lineNumber":61,"author":{"gitId":"lamzf1998"},"content":"            } else if (input.contains(\"delete\")) {"},{"lineNumber":62,"author":{"gitId":"lamzf1998"},"content":"                tasklist.deleteTask(tasks, input);"},{"lineNumber":63,"author":{"gitId":"lamzf1998"},"content":"            } else if (input.contains(\"todo\")) {"},{"lineNumber":64,"author":{"gitId":"lamzf1998"},"content":"                tasklist.printToDo(tasks, input, stringTask);"},{"lineNumber":65,"author":{"gitId":"lamzf1998"},"content":"            } else if (input.contains(\"deadline\")) {"},{"lineNumber":66,"author":{"gitId":"lamzf1998"},"content":"                tasklist.printDeadline(tasks, input, stringTask, stringDate);"},{"lineNumber":67,"author":{"gitId":"lamzf1998"},"content":"            } else if (input.contains(\"event\")) {"},{"lineNumber":68,"author":{"gitId":"lamzf1998"},"content":"                tasklist.printEvent(tasks, input, stringTask, stringDate);"},{"lineNumber":69,"author":{"gitId":"lamzf1998"},"content":"            } else if (input.contains(\"save\")){"},{"lineNumber":70,"author":{"gitId":"lamzf1998"},"content":"                store.saveFile(tasks);"},{"lineNumber":71,"author":{"gitId":"lamzf1998"},"content":"            } else {"},{"lineNumber":72,"author":{"gitId":"lamzf1998"},"content":"                System.out.println(\"What are you tryna say to me? Chatting nonsense yea?\");"},{"lineNumber":73,"author":{"gitId":"lamzf1998"},"content":"                continue;"},{"lineNumber":74,"author":{"gitId":"lamzf1998"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"lamzf1998"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}"},{"lineNumber":78,"author":{"gitId":"lamzf1998"},"content":""}],"authorContributionMap":{"lamzf1998":76,"-":2}},{"path":"src/main/java/duke/Main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamzf1998"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":3,"author":{"gitId":"lamzf1998"},"content":"import duke.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"lamzf1998"},"content":"import duke.controller.UI;"},{"lineNumber":5,"author":{"gitId":"lamzf1998"},"content":"import duke.controller.Storage;"},{"lineNumber":6,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":7,"author":{"gitId":"lamzf1998"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"lamzf1998"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":10,"author":{"gitId":"lamzf1998"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":12,"author":{"gitId":"lamzf1998"},"content":"    private static UI ui \u003d new UI();"},{"lineNumber":13,"author":{"gitId":"lamzf1998"},"content":"    private static Storage storage \u003d new Storage();"},{"lineNumber":14,"author":{"gitId":"lamzf1998"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":15,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":16,"author":{"gitId":"lamzf1998"},"content":"    public Duke() {}"},{"lineNumber":17,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":18,"author":{"gitId":"lamzf1998"},"content":"    public void load() {"},{"lineNumber":19,"author":{"gitId":"lamzf1998"},"content":"        tasks \u003d storage.printFileContents();"},{"lineNumber":20,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":22,"author":{"gitId":"lamzf1998"},"content":"    public void run() throws IOException {"},{"lineNumber":23,"author":{"gitId":"lamzf1998"},"content":"        ui.displayWelcome();"},{"lineNumber":24,"author":{"gitId":"lamzf1998"},"content":"        load();"},{"lineNumber":25,"author":{"gitId":"lamzf1998"},"content":"        ui.handleTasklist(tasks);"},{"lineNumber":26,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":28,"author":{"gitId":"lamzf1998"},"content":"    public static void main(String[] args) throws IOException{"},{"lineNumber":29,"author":{"gitId":"lamzf1998"},"content":"        Duke duke \u003d new Duke();"},{"lineNumber":30,"author":{"gitId":"lamzf1998"},"content":"        duke.run();"},{"lineNumber":31,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"lamzf1998"},"content":"}"}],"authorContributionMap":{"lamzf1998":32}},{"path":"src/main/java/duke/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamzf1998"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":3,"author":{"gitId":"lamzf1998"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"lamzf1998"},"content":"    protected String byDate;"},{"lineNumber":5,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":6,"author":{"gitId":"lamzf1998"},"content":"    public Deadline() {}"},{"lineNumber":7,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":8,"author":{"gitId":"lamzf1998"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":9,"author":{"gitId":"lamzf1998"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"lamzf1998"},"content":"        this.byDate \u003d by;"},{"lineNumber":11,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":13,"author":{"gitId":"lamzf1998"},"content":"    public String getByDate() {"},{"lineNumber":14,"author":{"gitId":"lamzf1998"},"content":"        return byDate;"},{"lineNumber":15,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":17,"author":{"gitId":"lamzf1998"},"content":"    public String printDescription() {"},{"lineNumber":18,"author":{"gitId":"lamzf1998"},"content":"        return \"[D]\" + super.printDescription() + \" (by: \" + byDate + \")\";"},{"lineNumber":19,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"lamzf1998"},"content":"}"}],"authorContributionMap":{"lamzf1998":20}},{"path":"src/main/java/duke/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamzf1998"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":3,"author":{"gitId":"lamzf1998"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"lamzf1998"},"content":"    protected String atDate;"},{"lineNumber":5,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":6,"author":{"gitId":"lamzf1998"},"content":"    public Event() {};"},{"lineNumber":7,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":8,"author":{"gitId":"lamzf1998"},"content":"    public Event(String description, String at) {"},{"lineNumber":9,"author":{"gitId":"lamzf1998"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"lamzf1998"},"content":"        this.atDate \u003d at;"},{"lineNumber":11,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":13,"author":{"gitId":"lamzf1998"},"content":"    public String getAtDate() {"},{"lineNumber":14,"author":{"gitId":"lamzf1998"},"content":"        return atDate;"},{"lineNumber":15,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":17,"author":{"gitId":"lamzf1998"},"content":"    public String printDescription() {"},{"lineNumber":18,"author":{"gitId":"lamzf1998"},"content":"        return \"[E]\" + super.printDescription() + \" (at: \" + atDate + \")\";"},{"lineNumber":19,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"lamzf1998"},"content":"}"}],"authorContributionMap":{"lamzf1998":20}},{"path":"src/main/java/duke/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamzf1998"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":3,"author":{"gitId":"lamzf1998"},"content":"public class Task{"},{"lineNumber":4,"author":{"gitId":"lamzf1998"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"lamzf1998"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":7,"author":{"gitId":"lamzf1998"},"content":"    public Task() {}"},{"lineNumber":8,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":9,"author":{"gitId":"lamzf1998"},"content":"    public Task(String description) {"},{"lineNumber":10,"author":{"gitId":"lamzf1998"},"content":"        this.description \u003d description;"},{"lineNumber":11,"author":{"gitId":"lamzf1998"},"content":"        this.isDone \u003d false;"},{"lineNumber":12,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":14,"author":{"gitId":"lamzf1998"},"content":"    public String getDescription() {"},{"lineNumber":15,"author":{"gitId":"lamzf1998"},"content":"        return description;"},{"lineNumber":16,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":18,"author":{"gitId":"lamzf1998"},"content":"    public void addDescription(String description) {"},{"lineNumber":19,"author":{"gitId":"lamzf1998"},"content":"        this.description \u003d description;"},{"lineNumber":20,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":22,"author":{"gitId":"lamzf1998"},"content":"    public void setAsDone(boolean done) {"},{"lineNumber":23,"author":{"gitId":"lamzf1998"},"content":"        isDone \u003d done;"},{"lineNumber":24,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":26,"author":{"gitId":"lamzf1998"},"content":"    public void markAsDone() {"},{"lineNumber":27,"author":{"gitId":"lamzf1998"},"content":"        isDone \u003d true;"},{"lineNumber":28,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":30,"author":{"gitId":"lamzf1998"},"content":"    public String getStatusIcon() {"},{"lineNumber":31,"author":{"gitId":"lamzf1998"},"content":"        return (isDone ? \"\\u2713\" : \"\\u0020\");"},{"lineNumber":32,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":34,"author":{"gitId":"lamzf1998"},"content":"    public String printDescription() {"},{"lineNumber":35,"author":{"gitId":"lamzf1998"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":36,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":38,"author":{"gitId":"lamzf1998"},"content":"    public int getSaveDone() {"},{"lineNumber":39,"author":{"gitId":"lamzf1998"},"content":"        return (isDone? 1:0);"},{"lineNumber":40,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"lamzf1998"},"content":"}"}],"authorContributionMap":{"lamzf1998":41}},{"path":"src/main/java/duke/Tasks/toDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamzf1998"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":3,"author":{"gitId":"lamzf1998"},"content":"public class toDo extends Task {"},{"lineNumber":4,"author":{"gitId":"lamzf1998"},"content":"    public toDo() {};"},{"lineNumber":5,"author":{"gitId":"lamzf1998"},"content":"    public toDo(String description) {"},{"lineNumber":6,"author":{"gitId":"lamzf1998"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"lamzf1998"},"content":""},{"lineNumber":9,"author":{"gitId":"lamzf1998"},"content":"    public String printDescription() {"},{"lineNumber":10,"author":{"gitId":"lamzf1998"},"content":"        return \"[T]\" + super.printDescription();"},{"lineNumber":11,"author":{"gitId":"lamzf1998"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"lamzf1998"},"content":"}"}],"authorContributionMap":{"lamzf1998":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lamzf1998"},"content":"todo running"},{"lineNumber":2,"author":{"gitId":"lamzf1998"},"content":"list"},{"lineNumber":3,"author":{"gitId":"lamzf1998"},"content":"bye"}],"authorContributionMap":{"lamzf1998":3}}]
