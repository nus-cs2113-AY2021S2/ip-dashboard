[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"# duke.main.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"1. After that, locate the `src/main/java/duke.main.Duke.java` file, right-click it, and choose `Run duke.main.Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"-":24,"blank-bank":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"- [Introduction](#2)"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"- [Setup](#3)"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"- [Notes](#1)"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"-  [Features](#a) "},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"   - [Adding tasks](#a)"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"     - [todo](#a)"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"     - [deadline](#b)"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"     - [event](#c)"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"   - [Listing all tasks](#d)"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"   - [Completing a task](#e)"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"   - [Find](#f)"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"\t - [Description](#f)"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"\t  - [Date](#g)"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"   - [Save and exit](#i)"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"***"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"# \u003ca name\u003d\"2\"\u003e\u003c/a\u003e Introduction"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"Your very own application to manage your to-do list!"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"# \u003ca name\u003d\"3\"\u003e\u003c/a\u003e Setup"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 1. Copy the jar file "},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 2. Launch the jar file using the following command in `CMD`"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `java -jar [path to your runnable jar file]`"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"\u003cbr /\u003e\u003cbr\u003e"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; In the event that some characters are not properly printed in the terminal, use the following commands:"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `chcp 65001`"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `java -jar -Dfile.encoding\u003dUTF-8 [path to your runnable jar file]`"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"***"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"# \u003ca name\u003d\"1\"\u003e\u003c/a\u003e Notes"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"**General Formatting:**"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Description - Describes the functionality of the feature"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Formatting - Describes the code formatting to use a feature"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Examples - Examples of how to use a feature"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Example output - Snapshot of how the usage of a feature will appear in the application"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"\u003cbr /\u003e \u003cbr\u003e"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"**Additional notes:**"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; The square brackets specifies that user input is required"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `command [variable input]`"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"***"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"# Features"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"***"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"## \u003ca name\u003d\"a\"\u003e\u003c/a\u003e Adding tasks: Todo"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"**Description:**"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding a simple task using the `todo` command"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"**Formatting:**"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `todo` [task description]"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"**Examples:**"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding the task \"read shakespeare\""},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `todo read shakespeare`"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding the task \"finish java quiz\""},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `todo finish java quiz`"},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"**Example output:**"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"todo read shakespeare"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"  [T][✘] read shakespeare"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":"Now you have 1 tasks in the list."},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":"***"},{"lineNumber":93,"author":{"gitId":"blank-bank"},"content":"## \u003ca name\u003d\"b\"\u003e\u003c/a\u003e Adding tasks: Deadline"},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":95,"author":{"gitId":"blank-bank"},"content":"**Description:**"},{"lineNumber":96,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":97,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding a deadline task using the `deadline` command."},{"lineNumber":98,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":99,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; A deadline consist of a **description** and a **date**."},{"lineNumber":100,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":101,"author":{"gitId":"blank-bank"},"content":"**Formatting:**"},{"lineNumber":102,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":103,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `deadline [task description] /by [date in format YYYY-MM-DD]`"},{"lineNumber":104,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":105,"author":{"gitId":"blank-bank"},"content":"**Examples**"},{"lineNumber":106,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":107,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding the deadline \"read shakespeare by 8 Mar 2021\""},{"lineNumber":108,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":109,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `deadline read shakespeare /by 2021-03-08`"},{"lineNumber":110,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":111,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding the deadline \"finish java quiz by 16 Nov 2021\""},{"lineNumber":112,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":113,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `deadline finish java quiz /by 2021-11-16`"},{"lineNumber":114,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":115,"author":{"gitId":"blank-bank"},"content":"**Example output**"},{"lineNumber":116,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":117,"author":{"gitId":"blank-bank"},"content":"deadline read shakespeare /by 2021-03-08"},{"lineNumber":118,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":119,"author":{"gitId":"blank-bank"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":120,"author":{"gitId":"blank-bank"},"content":"  [D][✘] read shakespeare (by: Mar-08-2021 )"},{"lineNumber":121,"author":{"gitId":"blank-bank"},"content":"Now you have 1 tasks in the list."},{"lineNumber":122,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":123,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":124,"author":{"gitId":"blank-bank"},"content":"***"},{"lineNumber":125,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":126,"author":{"gitId":"blank-bank"},"content":"## \u003ca name\u003d\"c\"\u003e\u003c/a\u003e Adding tasks: Event"},{"lineNumber":127,"author":{"gitId":"blank-bank"},"content":"**Description:**"},{"lineNumber":128,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":129,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding an event task using the `event` command."},{"lineNumber":130,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":131,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; An event consist of a **description** and a **date**."},{"lineNumber":132,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":133,"author":{"gitId":"blank-bank"},"content":"**Formatting:**"},{"lineNumber":134,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":135,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `event [task description] /at [date in format YYYY-MM-DD]`"},{"lineNumber":136,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":137,"author":{"gitId":"blank-bank"},"content":"**Examples**"},{"lineNumber":138,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":139,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding the event \"read shakespeare by 8 Mar 2021\""},{"lineNumber":140,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":141,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `event shakespeare\u0027s play /at 2021-03-08`"},{"lineNumber":142,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":143,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding the event \"java quiz by 16 Nov 2021\""},{"lineNumber":144,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":145,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `event java quiz /at 2021-11-16`"},{"lineNumber":146,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":147,"author":{"gitId":"blank-bank"},"content":"**Example output**"},{"lineNumber":148,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":149,"author":{"gitId":"blank-bank"},"content":"event shakespeare\u0027s play /at 2021-03-08"},{"lineNumber":150,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":151,"author":{"gitId":"blank-bank"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":152,"author":{"gitId":"blank-bank"},"content":"  [E][✘] shakespeare\u0027s play (by: Mar-08-2021 )"},{"lineNumber":153,"author":{"gitId":"blank-bank"},"content":"Now you have 1 tasks in the list."},{"lineNumber":154,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":155,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":156,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":157,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":158,"author":{"gitId":"blank-bank"},"content":"## \u003ca name\u003d\"d\"\u003e\u003c/a\u003e Listing all tasks"},{"lineNumber":159,"author":{"gitId":"blank-bank"},"content":"**Description:**"},{"lineNumber":160,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":161,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;List all tasks (todo, deadline, event)"},{"lineNumber":162,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":163,"author":{"gitId":"blank-bank"},"content":"**Formatting:**"},{"lineNumber":164,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":165,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`list`"},{"lineNumber":166,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":167,"author":{"gitId":"blank-bank"},"content":"**Example output**"},{"lineNumber":168,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":169,"author":{"gitId":"blank-bank"},"content":"list"},{"lineNumber":170,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":171,"author":{"gitId":"blank-bank"},"content":"Here are the tasks in your list:"},{"lineNumber":172,"author":{"gitId":"blank-bank"},"content":"1.[T][✘] read shakespeare"},{"lineNumber":173,"author":{"gitId":"blank-bank"},"content":"2.[D][✘] read shakespeare (by: Mar-08-2021 )"},{"lineNumber":174,"author":{"gitId":"blank-bank"},"content":"3.[E][✘] shakespeare\u0027s play (at: Mar-08-2021 )"},{"lineNumber":175,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":176,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":177,"author":{"gitId":"blank-bank"},"content":"***"},{"lineNumber":178,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":179,"author":{"gitId":"blank-bank"},"content":"## \u003ca name\u003d\"e\"\u003e\u003c/a\u003e Completing a task"},{"lineNumber":180,"author":{"gitId":"blank-bank"},"content":"**Description:**"},{"lineNumber":181,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":182,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Set the task to be done."},{"lineNumber":183,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":184,"author":{"gitId":"blank-bank"},"content":"**Formatting:**"},{"lineNumber":185,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":186,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`done [index]`"},{"lineNumber":187,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":188,"author":{"gitId":"blank-bank"},"content":"**Examples**"},{"lineNumber":189,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":190,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`done 1`"},{"lineNumber":191,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":192,"author":{"gitId":"blank-bank"},"content":"**Example output**"},{"lineNumber":193,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":194,"author":{"gitId":"blank-bank"},"content":"Here are the tasks in your list:"},{"lineNumber":195,"author":{"gitId":"blank-bank"},"content":"1.[T][✘] read shakespeare"},{"lineNumber":196,"author":{"gitId":"blank-bank"},"content":"2.[D][✘] read shakespeare (by: Mar-08-2021 )"},{"lineNumber":197,"author":{"gitId":"blank-bank"},"content":"3.[E][✘] shakespeare\u0027s play (at: Mar-08-2021 )"},{"lineNumber":198,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":199,"author":{"gitId":"blank-bank"},"content":"done 1"},{"lineNumber":200,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":201,"author":{"gitId":"blank-bank"},"content":"Nice! I\u0027ve marked this task as done: "},{"lineNumber":202,"author":{"gitId":"blank-bank"},"content":"[✓] read shakespeare"},{"lineNumber":203,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":204,"author":{"gitId":"blank-bank"},"content":"list"},{"lineNumber":205,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":206,"author":{"gitId":"blank-bank"},"content":"Here are the tasks in your list:"},{"lineNumber":207,"author":{"gitId":"blank-bank"},"content":"1.[T][✓] read shakespeare"},{"lineNumber":208,"author":{"gitId":"blank-bank"},"content":"2.[D][✘] read shakespeare (by: Mar-08-2021 )"},{"lineNumber":209,"author":{"gitId":"blank-bank"},"content":"3.[E][✘] shakespeare\u0027s play (at: Mar-08-2021 )"},{"lineNumber":210,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":211,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":212,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":213,"author":{"gitId":"blank-bank"},"content":"## \u003ca name\u003d\"f\"\u003e\u003c/a\u003e Find tasks: Description"},{"lineNumber":214,"author":{"gitId":"blank-bank"},"content":"**Description:**"},{"lineNumber":215,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":216,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Find specific tasks based on similar descriptions."},{"lineNumber":217,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":218,"author":{"gitId":"blank-bank"},"content":"**Formatting:**"},{"lineNumber":219,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":220,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `find [task description]`"},{"lineNumber":221,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":222,"author":{"gitId":"blank-bank"},"content":"**Examples**"},{"lineNumber":223,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":224,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Find any tasks with the phrase \"read shakespeare\" in description"},{"lineNumber":225,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":226,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `find read shakespeare`"},{"lineNumber":227,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":228,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Find any tasks with the word book description"},{"lineNumber":229,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":230,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`find book`"},{"lineNumber":231,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":232,"author":{"gitId":"blank-bank"},"content":"**Example output**"},{"lineNumber":233,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":234,"author":{"gitId":"blank-bank"},"content":"find read shakespeare"},{"lineNumber":235,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":236,"author":{"gitId":"blank-bank"},"content":"Here are the matching tasks in your list:"},{"lineNumber":237,"author":{"gitId":"blank-bank"},"content":"1.[T][✓] read shakespeare"},{"lineNumber":238,"author":{"gitId":"blank-bank"},"content":"2.[D][✘] read shakespeare (by: Mar-08-2021 )"},{"lineNumber":239,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":240,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":241,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":242,"author":{"gitId":"blank-bank"},"content":"## \u003ca name\u003d\"g\"\u003e\u003c/a\u003e Find tasks: Date"},{"lineNumber":243,"author":{"gitId":"blank-bank"},"content":"**Description:**"},{"lineNumber":244,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":245,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Find specific tasks based on date input."},{"lineNumber":246,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":247,"author":{"gitId":"blank-bank"},"content":"**Formatting:**"},{"lineNumber":248,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":249,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Find all events that occur on a specific date"},{"lineNumber":250,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":251,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `findAt [Date with format YYYY-MM-DD]`"},{"lineNumber":252,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":253,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Find all deadlines that occurs before a specific date"},{"lineNumber":254,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":255,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `findBy [Date with format YYYY-MM-DD]`"},{"lineNumber":256,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":257,"author":{"gitId":"blank-bank"},"content":"**Examples**"},{"lineNumber":258,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":259,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Find events happening on 10 March 2021"},{"lineNumber":260,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":261,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `findAt 2021-03-10`"},{"lineNumber":262,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":263,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Find all deadlines that occurs before a 10 March 2021"},{"lineNumber":264,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":265,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `findBy 2021-03-10`"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"blank-bank"},"content":"**Example output**"},{"lineNumber":268,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":269,"author":{"gitId":"blank-bank"},"content":"Here are the tasks in your list:"},{"lineNumber":270,"author":{"gitId":"blank-bank"},"content":"1.[T][✓] read shakespeare"},{"lineNumber":271,"author":{"gitId":"blank-bank"},"content":"2.[D][✘] read shakespeare (by: Mar-08-2021 )"},{"lineNumber":272,"author":{"gitId":"blank-bank"},"content":"3.[E][✘] shakespeare\u0027s play (at: Mar-08-2021 )"},{"lineNumber":273,"author":{"gitId":"blank-bank"},"content":"4.[D][✘] watch wandaVision (by: Mar-10-2021 )"},{"lineNumber":274,"author":{"gitId":"blank-bank"},"content":"5.[E][✘] homework submission (at: Mar-08-2021 )"},{"lineNumber":275,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":276,"author":{"gitId":"blank-bank"},"content":"findAt 2021-03-08"},{"lineNumber":277,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":278,"author":{"gitId":"blank-bank"},"content":"Here are the matching tasks in your list:"},{"lineNumber":279,"author":{"gitId":"blank-bank"},"content":"1.[E][✘] shakespeare\u0027s play (at: Mar-08-2021 )"},{"lineNumber":280,"author":{"gitId":"blank-bank"},"content":"2.[E][✘] homework submission (at: Mar-08-2021 )"},{"lineNumber":281,"author":{"gitId":"blank-bank"},"content":"____________________________________________________"},{"lineNumber":282,"author":{"gitId":"blank-bank"},"content":"findBy 2021-03-10"},{"lineNumber":283,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":284,"author":{"gitId":"blank-bank"},"content":"Here are the matching tasks in your list:"},{"lineNumber":285,"author":{"gitId":"blank-bank"},"content":"1.[D][✘] read shakespeare (by: Mar-08-2021 )"},{"lineNumber":286,"author":{"gitId":"blank-bank"},"content":"2.[D][✘] watch wandaVision (by: Mar-10-2021 )"},{"lineNumber":287,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"blank-bank"},"content":"## \u003ca name\u003d\"i\"\u003e\u003c/a\u003e Save and exit"},{"lineNumber":290,"author":{"gitId":"blank-bank"},"content":"**Description:**"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Save all tasks in file and exits"},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"blank-bank"},"content":"**Formatting:**"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`bye`"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"blank-bank"},"content":"**Example output**"},{"lineNumber":299,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":300,"author":{"gitId":"blank-bank"},"content":"bye"},{"lineNumber":301,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":302,"author":{"gitId":"blank-bank"},"content":"File is overwritten."},{"lineNumber":303,"author":{"gitId":"blank-bank"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":304,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":305,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":306,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"-":16,"blank-bank":290}},{"path":"list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"D\tfalse\towennsdck\tOct-10-2020 "},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"D\tfalse\tppp\tOct-11-2020 "},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"D\tfalse\tqqq\tOct-12-2020 "},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"D\tfalse\teee\tOct-13-2020 "},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"E\ttrue\tparty\tSep-09-2020 "},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"T\tfalse\towen"}],"authorContributionMap":{"blank-bank":6}},{"path":"src/main/java/duke/exceptions/DeadlineParameterExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"/** DeadlineParameterExceptions class to handle deadline parameter exception. */"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"public class DeadlineParameterExceptions extends Exception{"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":5}},{"path":"src/main/java/duke/exceptions/EventParameterExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"/** EventParameterExceptions class to handle Event parameter exception. */"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"public class EventParameterExceptions extends Exception{"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":5}},{"path":"src/main/java/duke/exceptions/InvalidCommandExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"/** InvalidCommandExceptions class to handle invalid commands exception. */"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"public class InvalidCommandExceptions extends Exception{"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":5}},{"path":"src/main/java/duke/exceptions/InvalidIndexExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"/** InvalidIndexExceptions class to handle invalid index exception. */"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"public class InvalidIndexExceptions extends Exception{"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":5}},{"path":"src/main/java/duke/exceptions/InvalidParameterLengthExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"/** InvalidParameterLengthExceptions class to handle insufficient parameters exception. */"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"public class InvalidParameterLengthExceptions extends Exception{"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":5}},{"path":"src/main/java/duke/items/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.items;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import static duke.main.UI.convertDateToStringFormat;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":" * Deadline class"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":" */"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"public class Deadline extends Task {"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"    protected String by;"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"     * Deadline constructor"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"     * @param description Description of the task"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"     * @param byInput input String of date"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    public Deadline(String description, String byInput) {"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"        this.by \u003d byInput;"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"     * Change the by attribute of Deadline"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"     * @param byInput new String of date"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"    public void setBy(String byInput) {"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"        this.by \u003d byInput;"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"     * Returns the by attribute of Deadline object"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"     * @return this.by"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"    public String getBy() {"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"        return this.by;"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"     * Returns the Type of Deadline object"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"     * @return String \"D\""},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"    public String getType() {"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"        return \"D\";"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"     * Prints the Deadline object in a certain format"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"    public void print(){"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"        if (this.isDone) {"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"[D][√] \" + description + \" (by: \" + by + \")\");"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"        } else {"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"[D][X] \" + description + \" (by: \" + by + \")\");"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":61}},{"path":"src/main/java/duke/items/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.items;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":" * Event class"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":" */"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"    private String at;"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"     * Event constructor"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"     * @param description Description of the task"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"     * @param atInput input String of date"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"    public Event(String description, String atInput) {"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"        this.at \u003d atInput;"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"     * Change the by attribute of Event"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"     * @param atInput new String of date"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"    public void setAt(String atInput) {"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"        this.at \u003d atInput;"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"     * Returns the at attribute of Event object"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"     * @return this.at"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"    public String getAt() {"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"        return this.at;"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"     * Returns the Type of Event object"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"     * @return String \"E\""},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"    public String getType() {"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"        return \"E\";"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"     * Prints the Event object in a certain format"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"    public void print(){"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"        if (this.isDone) {"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"[E][√] \" + description + \" (at: \" + at + \")\" );"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"        } else {"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"[E][X] \" + description + \" (at: \" + at + \")\" );"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":60}},{"path":"src/main/java/duke/items/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.items;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import duke.exceptions.*;"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import duke.main.UI;"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import static duke.main.Parser.*;"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import static duke.main.UI.convertDateToStringFormat;"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"import static duke.main.UI.convertStringFormatToDate;"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"/** Parent class for other classes (todo, deadline, event) */"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"public class Task {"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"    private static int numOfTasks \u003d 0;"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    protected String description;"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"    protected boolean isDone;"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    protected static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"     * Returns the ArrayList from Task"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"     * @return ArrayList"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"    public static ArrayList getList(){"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"        return list;"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"     * Returns the number of Tasks that are in the ArrayList list"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"     * @return numOfTasks"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"    public static int getNumOfTasks() {"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"        return numOfTasks;"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"     * Prints each Task in the list using print() function"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"    public static void printList(){"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"        for (int i \u003d0; i\u003cnumOfTasks;i++) {"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"            System.out.print(i+1 + \".\");"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"            list.get(i).print();"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"     * Adds the given Task object into the ArrayList list"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"     * @param task Task object to be added"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"    public static void addTask(Task task){"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"        list.add(task);"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"        numOfTasks++;"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"     * Adds a Todo task object into the ArrayList list"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"     * @param line Input command"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"     * @throws InvalidParameterLengthExceptions  If length of entire todo command is \u003c 2"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"    public static void addTodo(String line) throws InvalidParameterLengthExceptions {"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"        validateTodoCommand(line);"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"        Todo todo \u003d new Todo(extractTodo(line));"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"        list.add(todo);"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"        numOfTasks++;"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"        System.out.print(\"  \");"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"        todo.print();"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"        UI.displayListUpdate();"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"     * Adds a Deadline task object into the ArrayList list"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"     * @param line Input command"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"     * @throws DeadlineParameterExceptions  If /by is missing"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":"     * @throws EventParameterExceptions  If /at is missing"},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"     * @throws InvalidParameterLengthExceptions  If number of parameters \u003c 4"},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"    public static void addDeadline(String line) throws EventParameterExceptions, InvalidParameterLengthExceptions, DeadlineParameterExceptions {"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"        String[] extractDeadline \u003d extractDeadlineAndEvent(line);"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"        Deadline deadline \u003d new Deadline(extractDeadline[0], convertDateToStringFormat(extractDeadline[1]));"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"        list.add(deadline);"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"        numOfTasks++;"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":"        System.out.print(\"  \");"},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":"        deadline.print();"},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"        UI.displayListUpdate();"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":93,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":"     * Adds a Event task object into the ArrayList list"},{"lineNumber":95,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"blank-bank"},"content":"     * @param line Input command"},{"lineNumber":97,"author":{"gitId":"blank-bank"},"content":"     * @throws DeadlineParameterExceptions  If /by is missing"},{"lineNumber":98,"author":{"gitId":"blank-bank"},"content":"     * @throws EventParameterExceptions  If /at is missing"},{"lineNumber":99,"author":{"gitId":"blank-bank"},"content":"     * @throws InvalidParameterLengthExceptions  If number of parameters \u003c 4"},{"lineNumber":100,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"blank-bank"},"content":"    public static void addEvent(String line) throws EventParameterExceptions, InvalidParameterLengthExceptions, DeadlineParameterExceptions {"},{"lineNumber":102,"author":{"gitId":"blank-bank"},"content":"        String[] extractEvent \u003d extractDeadlineAndEvent(line);"},{"lineNumber":103,"author":{"gitId":"blank-bank"},"content":"        Event event \u003d new Event(extractEvent[0], convertDateToStringFormat(extractEvent[1]));"},{"lineNumber":104,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":105,"author":{"gitId":"blank-bank"},"content":"        list.add(event);"},{"lineNumber":106,"author":{"gitId":"blank-bank"},"content":"        numOfTasks++;"},{"lineNumber":107,"author":{"gitId":"blank-bank"},"content":"        System.out.print(\"  \");"},{"lineNumber":108,"author":{"gitId":"blank-bank"},"content":"        event.print();"},{"lineNumber":109,"author":{"gitId":"blank-bank"},"content":"        UI.displayListUpdate();"},{"lineNumber":110,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":112,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":113,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"blank-bank"},"content":"     * Finds all the Tasks in list that contains the given String"},{"lineNumber":115,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":116,"author":{"gitId":"blank-bank"},"content":"     * @param find String item used to search the Tasks in the list"},{"lineNumber":117,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"blank-bank"},"content":"    public static void findTask(String find) {"},{"lineNumber":119,"author":{"gitId":"blank-bank"},"content":"        int counter \u003d 1;"},{"lineNumber":120,"author":{"gitId":"blank-bank"},"content":"        for (int i \u003d0; i\u003cnumOfTasks;i++) {"},{"lineNumber":121,"author":{"gitId":"blank-bank"},"content":"            if (list.get(i).description.contains(find)) {"},{"lineNumber":122,"author":{"gitId":"blank-bank"},"content":"                System.out.print(counter + \".\");"},{"lineNumber":123,"author":{"gitId":"blank-bank"},"content":"                list.get(i).print();"},{"lineNumber":124,"author":{"gitId":"blank-bank"},"content":"                counter++;"},{"lineNumber":125,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":126,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":129,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"blank-bank"},"content":"     * Prints all Events on a specific date"},{"lineNumber":131,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":132,"author":{"gitId":"blank-bank"},"content":"     * @param find date to search"},{"lineNumber":133,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"blank-bank"},"content":"    public static void findAt(String find){"},{"lineNumber":135,"author":{"gitId":"blank-bank"},"content":"        int counter \u003d 1;"},{"lineNumber":136,"author":{"gitId":"blank-bank"},"content":"        for (int i \u003d0; i\u003cnumOfTasks;i++) {"},{"lineNumber":137,"author":{"gitId":"blank-bank"},"content":"            if ( (list.get(i) instanceof Event) \u0026\u0026 ((Event) list.get(i)).getAt().equals(find)){"},{"lineNumber":138,"author":{"gitId":"blank-bank"},"content":"                System.out.print(counter + \".\");"},{"lineNumber":139,"author":{"gitId":"blank-bank"},"content":"                list.get(i).print();"},{"lineNumber":140,"author":{"gitId":"blank-bank"},"content":"                counter++;"},{"lineNumber":141,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":145,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":146,"author":{"gitId":"blank-bank"},"content":"     * Prints all Deadlines before and including a certain date"},{"lineNumber":147,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":148,"author":{"gitId":"blank-bank"},"content":"     * @param find date to search"},{"lineNumber":149,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"blank-bank"},"content":"    public static void findBy(String find){"},{"lineNumber":151,"author":{"gitId":"blank-bank"},"content":"        int counter \u003d 1;"},{"lineNumber":152,"author":{"gitId":"blank-bank"},"content":"        for (int i \u003d0; i\u003cnumOfTasks;i++) {"},{"lineNumber":153,"author":{"gitId":"blank-bank"},"content":"            if ( !(list.get(i) instanceof Deadline)){"},{"lineNumber":154,"author":{"gitId":"blank-bank"},"content":"                continue;"},{"lineNumber":155,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":156,"author":{"gitId":"blank-bank"},"content":"            LocalDate inputDate \u003d LocalDate.parse(find);"},{"lineNumber":157,"author":{"gitId":"blank-bank"},"content":"            LocalDate current \u003d convertStringFormatToDate(((Deadline)list.get(i)).getBy());"},{"lineNumber":158,"author":{"gitId":"blank-bank"},"content":"            if (!(inputDate.isBefore(current))){"},{"lineNumber":159,"author":{"gitId":"blank-bank"},"content":"                System.out.print(counter + \".\");"},{"lineNumber":160,"author":{"gitId":"blank-bank"},"content":"                list.get(i).print();"},{"lineNumber":161,"author":{"gitId":"blank-bank"},"content":"                counter++;"},{"lineNumber":162,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":166,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":167,"author":{"gitId":"blank-bank"},"content":"     * Removes a Task from the list"},{"lineNumber":168,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":169,"author":{"gitId":"blank-bank"},"content":"     * @param index Task number"},{"lineNumber":170,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":171,"author":{"gitId":"blank-bank"},"content":"    public static void deleteTask(int index) {"},{"lineNumber":172,"author":{"gitId":"blank-bank"},"content":"        numOfTasks--;"},{"lineNumber":173,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":174,"author":{"gitId":"blank-bank"},"content":"        System.out.print(\"  \");"},{"lineNumber":175,"author":{"gitId":"blank-bank"},"content":"        list.get(index).print();"},{"lineNumber":176,"author":{"gitId":"blank-bank"},"content":"        list.remove(index);"},{"lineNumber":177,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":179,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"blank-bank"},"content":"     * Set a specified Task to be done"},{"lineNumber":181,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":182,"author":{"gitId":"blank-bank"},"content":"     * @param index Task number"},{"lineNumber":183,"author":{"gitId":"blank-bank"},"content":"     * @throws InvalidIndexExceptions  If index out of range"},{"lineNumber":184,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":185,"author":{"gitId":"blank-bank"},"content":"    public static void setDone(int index) throws InvalidIndexExceptions{"},{"lineNumber":186,"author":{"gitId":"blank-bank"},"content":"        if (index \u003e\u003d numOfTasks){"},{"lineNumber":187,"author":{"gitId":"blank-bank"},"content":"            throw new InvalidIndexExceptions();"},{"lineNumber":188,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":189,"author":{"gitId":"blank-bank"},"content":"        list.get(index).isDone \u003d true;"},{"lineNumber":190,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":191,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"[√] \" + list.get(index).getDescription());"},{"lineNumber":192,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":194,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":195,"author":{"gitId":"blank-bank"},"content":"     * Task object initialisation"},{"lineNumber":196,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":197,"author":{"gitId":"blank-bank"},"content":"     * @param description  Description of the Task"},{"lineNumber":198,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":199,"author":{"gitId":"blank-bank"},"content":"    public Task(String description) {"},{"lineNumber":200,"author":{"gitId":"blank-bank"},"content":"        this.description \u003d description;"},{"lineNumber":201,"author":{"gitId":"blank-bank"},"content":"        this.isDone \u003d false;"},{"lineNumber":202,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":204,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":205,"author":{"gitId":"blank-bank"},"content":"     * Prints the Task in a fixed format"},{"lineNumber":206,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":207,"author":{"gitId":"blank-bank"},"content":"    public void print(){"},{"lineNumber":208,"author":{"gitId":"blank-bank"},"content":"        if (this.isDone) {"},{"lineNumber":209,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"[T][√] \" + description );"},{"lineNumber":210,"author":{"gitId":"blank-bank"},"content":"        } else {"},{"lineNumber":211,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"[T][X] \" + description );"},{"lineNumber":212,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":215,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":216,"author":{"gitId":"blank-bank"},"content":"     * Returns Description of the given Task object"},{"lineNumber":217,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":218,"author":{"gitId":"blank-bank"},"content":"     * @return Description"},{"lineNumber":219,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":220,"author":{"gitId":"blank-bank"},"content":"    public String getDescription() {"},{"lineNumber":221,"author":{"gitId":"blank-bank"},"content":"        return description;"},{"lineNumber":222,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":224,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":225,"author":{"gitId":"blank-bank"},"content":"     * Changes the description attribute of Task"},{"lineNumber":226,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":227,"author":{"gitId":"blank-bank"},"content":"    public void setDescription(String description) {"},{"lineNumber":228,"author":{"gitId":"blank-bank"},"content":"        this.description \u003d description;"},{"lineNumber":229,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":231,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":232,"author":{"gitId":"blank-bank"},"content":"     * Returns Type of the given Task object"},{"lineNumber":233,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":234,"author":{"gitId":"blank-bank"},"content":"     * @return Type"},{"lineNumber":235,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":236,"author":{"gitId":"blank-bank"},"content":"    public String getType() {"},{"lineNumber":237,"author":{"gitId":"blank-bank"},"content":"        return \"T\";"},{"lineNumber":238,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":239,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":240,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":241,"author":{"gitId":"blank-bank"},"content":"     * Returns whether the Task is done"},{"lineNumber":242,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":243,"author":{"gitId":"blank-bank"},"content":"     * @return boolean of isDone"},{"lineNumber":244,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":245,"author":{"gitId":"blank-bank"},"content":"    public boolean isDone() {"},{"lineNumber":246,"author":{"gitId":"blank-bank"},"content":"        return this.isDone;"},{"lineNumber":247,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":249,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":250,"author":{"gitId":"blank-bank"},"content":"     * Changes the isDone attribute of Task"},{"lineNumber":251,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":252,"author":{"gitId":"blank-bank"},"content":"    public void setDone() {"},{"lineNumber":253,"author":{"gitId":"blank-bank"},"content":"        this.isDone \u003d true;"},{"lineNumber":254,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":255,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":255}},{"path":"src/main/java/duke/items/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.items;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":" * Todo class"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":" */"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"     * Todo constructor"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"     * @param description Description of the task"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    public Todo(String description) {"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":16}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"     * Prints welcome and goodbye message"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"     * Calls fileHandling"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"     * Calls run function from parser"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"     * Main function that combines all functions from other files"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"    public static void main(String[] args) {"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"        UI.displayWelcomeMessage();"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"        UI.printLine();"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"        Storage.fileHandling();"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"        Parser.run();"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"        UI.displayByeMessage();"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":18}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import java.text.ParseException;"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import duke.exceptions.*;"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import duke.items.Task;"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"import static duke.main.UI.convertDateToStringFormat;"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"/** Class in charge of understanding input commands */"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"public class Parser {"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"     * Check number of parameters in input command is valid"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"     * @param line  entire input command"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"     * @throws InvalidParameterLengthExceptions  If length of entire todo command is \u003c 2"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"    public static void validateTodoCommand(String line) throws InvalidParameterLengthExceptions {"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"        if (line.split(\" \").length \u003c 2){"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"            throw new InvalidParameterLengthExceptions();"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"     * Returns the index of the character \"/\" in the input command"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"     * while checking for the validity of the command"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"     * @param line  entire input command"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"     * @return index of \"/\" in the /by indicator"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"     * @throws DeadlineParameterExceptions  If /by is missing"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"     * @throws InvalidParameterLengthExceptions  If number of parameters \u003c 4"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"    public static int validateDeadlineCommand(String line) throws DeadlineParameterExceptions, InvalidParameterLengthExceptions {"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"        int indexOfSlash;"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"        if (line.split(\" \").length \u003c 4){"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"            throw new InvalidParameterLengthExceptions();"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"        indexOfSlash \u003d line.indexOf(\"/by\");"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"        if (indexOfSlash \u003d\u003d -1) {"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"            throw new DeadlineParameterExceptions();"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"        return indexOfSlash;"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"     * Returns the index of the character \"/\" in the input command"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"     * while checking for the validity of the command"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"     * @param line  entire input command"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"     * @return index of \"/\" in the /at indicator"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"     * @throws EventParameterExceptions  If /at is missing"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"     * @throws InvalidParameterLengthExceptions  If number of parameters \u003c 4"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"    public static int validateEventCommand(String line) throws EventParameterExceptions, InvalidParameterLengthExceptions {"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"        int indexOfSlash;"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"        if (line.split(\" \").length \u003c 4){"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"            throw new InvalidParameterLengthExceptions();"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"        indexOfSlash \u003d line.indexOf(\"/at\");"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"        if (indexOfSlash \u003d\u003d -1){"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"            throw new EventParameterExceptions();"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"        return indexOfSlash;"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"     * Returns the command keyword of a an input line"},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"     * @param line  entire input command"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"     * @return command keyword"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"    public static String getCommand(String line) {"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"        return line.split(\" \")[0];"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":"     * Returns the description of a todo task input"},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"     * @param line  entire input command"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"     * @return String description of the todo task"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"    public static String extractTodo(String line) {"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"        return line.substring(line.indexOf(\" \") + 1);"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"     * Returns the description and date of an Deadline/Event task input"},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"blank-bank"},"content":"     * @param line  entire input command"},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":"     * @return String array containing description and date of the Deadline/Event task"},{"lineNumber":95,"author":{"gitId":"blank-bank"},"content":"     * @throws DeadlineParameterExceptions  If /by is missing for deadline task"},{"lineNumber":96,"author":{"gitId":"blank-bank"},"content":"     * @throws EventParameterExceptions  If /at is missing for event task"},{"lineNumber":97,"author":{"gitId":"blank-bank"},"content":"     * @throws InvalidParameterLengthExceptions  If number of parameters \u003c 4"},{"lineNumber":98,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"blank-bank"},"content":"    public static String[] extractDeadlineAndEvent(String line) throws InvalidParameterLengthExceptions,"},{"lineNumber":100,"author":{"gitId":"blank-bank"},"content":"            DeadlineParameterExceptions, EventParameterExceptions {"},{"lineNumber":101,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":102,"author":{"gitId":"blank-bank"},"content":"        int indexOfSlash;"},{"lineNumber":103,"author":{"gitId":"blank-bank"},"content":"        if (getCommand(line).equals(\"deadline\")) {"},{"lineNumber":104,"author":{"gitId":"blank-bank"},"content":"            indexOfSlash \u003d validateDeadlineCommand(line);"},{"lineNumber":105,"author":{"gitId":"blank-bank"},"content":"        } else {"},{"lineNumber":106,"author":{"gitId":"blank-bank"},"content":"            indexOfSlash \u003d validateEventCommand(line);"},{"lineNumber":107,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"blank-bank"},"content":"        String[] returnList \u003d new String[2];"},{"lineNumber":109,"author":{"gitId":"blank-bank"},"content":"        returnList[0] \u003d  line.substring(line.indexOf(\" \") + 1, indexOfSlash - 1);"},{"lineNumber":110,"author":{"gitId":"blank-bank"},"content":"        returnList[1] \u003d  line.substring(indexOfSlash + 4);"},{"lineNumber":111,"author":{"gitId":"blank-bank"},"content":"        return returnList;"},{"lineNumber":112,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":114,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"blank-bank"},"content":"     * Decides which functions to run based on the input command"},{"lineNumber":116,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"blank-bank"},"content":"     * @param line  entire input command"},{"lineNumber":118,"author":{"gitId":"blank-bank"},"content":"     * @return integer -1 when input request to exit, else 1"},{"lineNumber":119,"author":{"gitId":"blank-bank"},"content":"     * @throws InvalidCommandExceptions  If unrecognised command is used."},{"lineNumber":120,"author":{"gitId":"blank-bank"},"content":"     * @throws InvalidParameterLengthExceptions  If number of parameters does not match command used."},{"lineNumber":121,"author":{"gitId":"blank-bank"},"content":"     * @throws DeadlineParameterExceptions  If Deadline command format is not adhered to."},{"lineNumber":122,"author":{"gitId":"blank-bank"},"content":"     * @throws EventParameterExceptions  If Event command format is not adhered to."},{"lineNumber":123,"author":{"gitId":"blank-bank"},"content":"     * @throws InvalidIndexExceptions  If index out of range."},{"lineNumber":124,"author":{"gitId":"blank-bank"},"content":"     * @throws IOException  If input output error occurs."},{"lineNumber":125,"author":{"gitId":"blank-bank"},"content":"     * @throws ParseException If date conversion error occurs"},{"lineNumber":126,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"blank-bank"},"content":"    public static int commandHandler(String line) throws InvalidCommandExceptions, InvalidParameterLengthExceptions,"},{"lineNumber":128,"author":{"gitId":"blank-bank"},"content":"            DeadlineParameterExceptions, EventParameterExceptions, InvalidIndexExceptions, IOException, ParseException {"},{"lineNumber":129,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":130,"author":{"gitId":"blank-bank"},"content":"        switch (getCommand(line)) {"},{"lineNumber":131,"author":{"gitId":"blank-bank"},"content":"        case (\"bye\"):"},{"lineNumber":132,"author":{"gitId":"blank-bank"},"content":"            Storage.writeToFile();"},{"lineNumber":133,"author":{"gitId":"blank-bank"},"content":"            return -1;"},{"lineNumber":134,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":135,"author":{"gitId":"blank-bank"},"content":"        case (\"list\"):"},{"lineNumber":136,"author":{"gitId":"blank-bank"},"content":"            UI.displayListPreamble();"},{"lineNumber":137,"author":{"gitId":"blank-bank"},"content":"            Task.printList();"},{"lineNumber":138,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":139,"author":{"gitId":"blank-bank"},"content":"        case (\"done\"):"},{"lineNumber":140,"author":{"gitId":"blank-bank"},"content":"            Task.setDone(Integer.parseInt(line.split(\" \")[1]) - 1);"},{"lineNumber":141,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":142,"author":{"gitId":"blank-bank"},"content":"        case (\"delete\"):"},{"lineNumber":143,"author":{"gitId":"blank-bank"},"content":"            int indexToDelete \u003d Integer.parseInt(line.split(\" \")[1]) - 1;"},{"lineNumber":144,"author":{"gitId":"blank-bank"},"content":"            if (indexToDelete \u003e\u003d Task.getNumOfTasks()){"},{"lineNumber":145,"author":{"gitId":"blank-bank"},"content":"                throw new InvalidIndexExceptions();"},{"lineNumber":146,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":147,"author":{"gitId":"blank-bank"},"content":"            Task.deleteTask(indexToDelete);"},{"lineNumber":148,"author":{"gitId":"blank-bank"},"content":"            UI.displayListUpdate();"},{"lineNumber":149,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":150,"author":{"gitId":"blank-bank"},"content":"        case (\"find\"):"},{"lineNumber":151,"author":{"gitId":"blank-bank"},"content":"            UI.displayFindPreamble();"},{"lineNumber":152,"author":{"gitId":"blank-bank"},"content":"            Task.findTask(line.split(\" \")[1]);"},{"lineNumber":153,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":154,"author":{"gitId":"blank-bank"},"content":"        case (\"findAt\"):"},{"lineNumber":155,"author":{"gitId":"blank-bank"},"content":"            UI.displayFindPreamble();"},{"lineNumber":156,"author":{"gitId":"blank-bank"},"content":"            Task.findAt(convertDateToStringFormat(line.split(\" \")[1]));"},{"lineNumber":157,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":158,"author":{"gitId":"blank-bank"},"content":"        case (\"findBy\"):"},{"lineNumber":159,"author":{"gitId":"blank-bank"},"content":"            UI.displayFindPreamble();"},{"lineNumber":160,"author":{"gitId":"blank-bank"},"content":"            Task.findBy(line.split(\" \")[1]);"},{"lineNumber":161,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":162,"author":{"gitId":"blank-bank"},"content":"        case (\"todo\"):"},{"lineNumber":163,"author":{"gitId":"blank-bank"},"content":"            Task.addTodo(line);"},{"lineNumber":164,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":165,"author":{"gitId":"blank-bank"},"content":"        case (\"deadline\"):"},{"lineNumber":166,"author":{"gitId":"blank-bank"},"content":"            Task.addDeadline(line);"},{"lineNumber":167,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":168,"author":{"gitId":"blank-bank"},"content":"        case (\"event\"):"},{"lineNumber":169,"author":{"gitId":"blank-bank"},"content":"            Task.addEvent(line);"},{"lineNumber":170,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":171,"author":{"gitId":"blank-bank"},"content":"        default:"},{"lineNumber":172,"author":{"gitId":"blank-bank"},"content":"            throw new InvalidCommandExceptions();"},{"lineNumber":173,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"blank-bank"},"content":"        return 1;"},{"lineNumber":175,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":177,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":178,"author":{"gitId":"blank-bank"},"content":"     * Runs loop that repeatedly calls for input command"},{"lineNumber":179,"author":{"gitId":"blank-bank"},"content":"     * Runs commandHandler for each input command"},{"lineNumber":180,"author":{"gitId":"blank-bank"},"content":"     * Catches error and decides error message"},{"lineNumber":181,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":182,"author":{"gitId":"blank-bank"},"content":"    public static void run(){"},{"lineNumber":183,"author":{"gitId":"blank-bank"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":184,"author":{"gitId":"blank-bank"},"content":"        while (true) {"},{"lineNumber":185,"author":{"gitId":"blank-bank"},"content":"            String line;"},{"lineNumber":186,"author":{"gitId":"blank-bank"},"content":"            line \u003d in.nextLine();"},{"lineNumber":187,"author":{"gitId":"blank-bank"},"content":"            UI.printLine();"},{"lineNumber":188,"author":{"gitId":"blank-bank"},"content":"            try {"},{"lineNumber":189,"author":{"gitId":"blank-bank"},"content":"                if (commandHandler(line) \u003d\u003d -1) {"},{"lineNumber":190,"author":{"gitId":"blank-bank"},"content":"                    break;"},{"lineNumber":191,"author":{"gitId":"blank-bank"},"content":"                }"},{"lineNumber":192,"author":{"gitId":"blank-bank"},"content":"            } catch (InvalidCommandExceptions e) {"},{"lineNumber":193,"author":{"gitId":"blank-bank"},"content":"                UI.InvalidCommandErrorMessage();"},{"lineNumber":194,"author":{"gitId":"blank-bank"},"content":"            } catch (InvalidParameterLengthExceptions e){"},{"lineNumber":195,"author":{"gitId":"blank-bank"},"content":"                UI.InvalidParameterLengthErrorMessage(line);"},{"lineNumber":196,"author":{"gitId":"blank-bank"},"content":"            } catch (EventParameterExceptions e){"},{"lineNumber":197,"author":{"gitId":"blank-bank"},"content":"                UI.EventParameterErrorMessage();"},{"lineNumber":198,"author":{"gitId":"blank-bank"},"content":"            } catch (DeadlineParameterExceptions e){"},{"lineNumber":199,"author":{"gitId":"blank-bank"},"content":"                UI.DeadlineParameterErrorMessage();"},{"lineNumber":200,"author":{"gitId":"blank-bank"},"content":"            } catch (InvalidIndexExceptions e){"},{"lineNumber":201,"author":{"gitId":"blank-bank"},"content":"                UI.InvalidIndexErrorMessage();"},{"lineNumber":202,"author":{"gitId":"blank-bank"},"content":"            } catch (DateTimeParseException e){"},{"lineNumber":203,"author":{"gitId":"blank-bank"},"content":"                UI.InvalidDateErrorMessage(line);"},{"lineNumber":204,"author":{"gitId":"blank-bank"},"content":"            } catch (ParseException | IOException e){"},{"lineNumber":205,"author":{"gitId":"blank-bank"},"content":"                e.printStackTrace();"},{"lineNumber":206,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":207,"author":{"gitId":"blank-bank"},"content":"            UI.printLine();"},{"lineNumber":208,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":209,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"blank-bank"},"content":"}"},{"lineNumber":211,"author":{"gitId":"blank-bank"},"content":""}],"authorContributionMap":{"blank-bank":211}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import duke.items.Deadline;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import duke.items.Event;"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import duke.items.Task;"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import duke.items.Todo;"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"import java.util.Scanner;"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":" * Class in charge of file IO"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":" */"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"public class Storage {"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"     * Handles the file IO process"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"    public static void fileHandling(){"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"            loadFile();"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"            createFile();"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"     * Loads data into current list of tasks"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"     * @param line  Each line (1 line represents 1 task) in saved records (list.txt)"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"    public static void loadTask(String line){"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"        String[] arr \u003d line.split(\"\\t\");"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"        switch(arr[0]){"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"        case (\"T\"):"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"            Todo todo \u003d new Todo(arr[2]);"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"            if (arr[1].equals(\"true\")) {"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"                todo.setDone();"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"            Task.addTask(todo);"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"        case (\"D\"):"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"            Deadline deadline \u003d new Deadline(arr[2], arr[3]);"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"            if (arr[1].equals(\"true\")) {"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"                deadline.setDone();"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"            Task.addTask(deadline);"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"        case (\"E\"):"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"            Event event \u003d new Event(arr[2], arr[3]);"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"            if (arr[1].equals(\"true\")) {"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"                event.setDone();"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"            Task.addTask(event);"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"     * Reads input from the file list.txt"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"     * @throws FileNotFoundException  If file does not exist"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"    public static void loadFile() throws FileNotFoundException {"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"        File f \u003d new File(\"list.txt\"); // create a File for the given file path"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"        Scanner s \u003d new Scanner(f);            // create a Scanner using the File as the source"},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"        while (s.hasNext()) {"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"            loadTask(s.nextLine());"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"     * Writes every task that exists within the Task list into the given format in list.txt"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"     * @throws IOException  If write errors occurs"},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"    public static void writeToFile() throws IOException {"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"        createFile();"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"        FileWriter fw \u003d new FileWriter(\"list.txt\");"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":"        for (int i\u003d0; i\u003cTask.getNumOfTasks(); i++) {"},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"            ArrayList\u003cTask\u003e buffer \u003d Task.getList();"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"            fw.write(formWriteData(buffer.get(i)));"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":"        fw.close();"},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":93,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":"     * Returns the formatted String (of a task), to be stored in a .txt file"},{"lineNumber":95,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"blank-bank"},"content":"     * @param task  Current task to be formatted into String"},{"lineNumber":97,"author":{"gitId":"blank-bank"},"content":"     * @return Formatted String"},{"lineNumber":98,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"blank-bank"},"content":"    public static String formWriteData(Task task) {"},{"lineNumber":100,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":101,"author":{"gitId":"blank-bank"},"content":"        switch (task.getType()) {"},{"lineNumber":102,"author":{"gitId":"blank-bank"},"content":"        case (\"T\"):"},{"lineNumber":103,"author":{"gitId":"blank-bank"},"content":"            return (task.getType() + \"\\t\" + task.isDone() + \"\\t\" + task.getDescription() + \"\\n\");"},{"lineNumber":104,"author":{"gitId":"blank-bank"},"content":"        case (\"D\"):"},{"lineNumber":105,"author":{"gitId":"blank-bank"},"content":"            Deadline temp1 \u003d (Deadline) (task);"},{"lineNumber":106,"author":{"gitId":"blank-bank"},"content":"            return (temp1.getType() + \"\\t\" + temp1.isDone() + \"\\t\" + temp1.getDescription() + \"\\t\" + temp1.getBy() + \"\\n\");"},{"lineNumber":107,"author":{"gitId":"blank-bank"},"content":"        default:"},{"lineNumber":108,"author":{"gitId":"blank-bank"},"content":"            Event temp2 \u003d (Event) (task);"},{"lineNumber":109,"author":{"gitId":"blank-bank"},"content":"            return (temp2.getType() + \"\\t\" + temp2.isDone() + \"\\t\" + temp2.getDescription() + \"\\t\" + temp2.getAt() + \"\\n\");"},{"lineNumber":110,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":113,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"blank-bank"},"content":"     * Creates file if file does not exist"},{"lineNumber":115,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":116,"author":{"gitId":"blank-bank"},"content":"     * @throws IllegalArgumentException  If input errors occur"},{"lineNumber":117,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"blank-bank"},"content":"    public static void createFile(){"},{"lineNumber":119,"author":{"gitId":"blank-bank"},"content":"        try {"},{"lineNumber":120,"author":{"gitId":"blank-bank"},"content":"            File myObj \u003d new File(\"list.txt\");"},{"lineNumber":121,"author":{"gitId":"blank-bank"},"content":"            if (myObj.createNewFile()) {"},{"lineNumber":122,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"File created: \" + myObj.getName());"},{"lineNumber":123,"author":{"gitId":"blank-bank"},"content":"            } else {"},{"lineNumber":124,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"File is overwritten.\");"},{"lineNumber":125,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":126,"author":{"gitId":"blank-bank"},"content":"        } catch (IOException e) {"},{"lineNumber":127,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":128,"author":{"gitId":"blank-bank"},"content":"            e.printStackTrace();"},{"lineNumber":129,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":131}},{"path":"src/main/java/duke/main/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import duke.items.Task;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import static duke.main.Parser.getCommand;"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"/** Class in charge of UI printing */"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"public class UI {"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"    private static final String DEADLINE_TEMPLATE \u003d \"deadline \u003ctask\u003e /by \u003cYYYY-MM-DD\u003e\";"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    private static final String EVENT_TEMPLATE \u003d \"event \u003ctask\u003e /at \u003cYYYY-MM-DD\u003e\";"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"    private static final String TODO_TEMPLATE \u003d \"todo read book\";"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    private static final String DATE_TEMPLATE \u003d \"\u003cYYYY-MM-DD\u003e\";"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"    public static void printLine() {"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"     * Prints the welcome message."},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"    public static void displayWelcomeMessage(){"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Hello! I\u0027m duke.main.Duke\\nWhat can I do for you?\");"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"     * Prints the goodbye message"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"    public static void displayByeMessage(){"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"        UI.printLine();"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"     * Printing the output when using the list function"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"    public static void displayListPreamble() {"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"        if (Task.getNumOfTasks() !\u003d 0){"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"     * Printing the output when using the find function"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"    public static void displayFindPreamble() {"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"        if (Task.getNumOfTasks() !\u003d 0){"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"        else {"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"There are no matching task in your list:\");"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"     * Prints the updated number of tasks in list"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"    public static void displayListUpdate() {"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"        if (Task.getNumOfTasks() \u003d\u003d 0){"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"There are no tasks in your list\");"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"        else {"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"Now you have \" + Task.getNumOfTasks() + \" tasks in the list.\");"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"     * Error message for invalid commands"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"    public static void InvalidCommandErrorMessage(){"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\" ☹ OOPS!!! Invalid Command :-(\");"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"     * Error message for too little input parameters"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"    public static void InvalidParameterLengthErrorMessage(String line){"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\" ☹ OOPS!!! Insufficient number of inputs for command: \" + getCommand(line));"},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\" Example inputs:\");"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"        switch (getCommand(line)){"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":"        case (\"deadline\"):"},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\" \\t \" + DEADLINE_TEMPLATE);"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":"        case (\"event\"):"},{"lineNumber":93,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\" \\t \" + EVENT_TEMPLATE);"},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":95,"author":{"gitId":"blank-bank"},"content":"        case (\"todo\"):"},{"lineNumber":96,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\" \\t \" + TODO_TEMPLATE);"},{"lineNumber":97,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":98,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":101,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"blank-bank"},"content":"     * Error message for invalid date format"},{"lineNumber":103,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"blank-bank"},"content":"    public static void InvalidDateErrorMessage(String line){"},{"lineNumber":105,"author":{"gitId":"blank-bank"},"content":"        String[] arr \u003d line.split(\" \");"},{"lineNumber":106,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\" ☹ OOPS!!! Invalid format for date: \" + arr[arr.length-1]);"},{"lineNumber":107,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\" Input format:\");"},{"lineNumber":108,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\" \\t \" + DATE_TEMPLATE);"},{"lineNumber":109,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":111,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"blank-bank"},"content":"     * Error message when the /at indicator is not present when event command is used"},{"lineNumber":113,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"blank-bank"},"content":"    public static void EventParameterErrorMessage(){"},{"lineNumber":115,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\" ☹ OOPS!!! For \\\"event\\\" command please input \\\"/at\\\"\");"},{"lineNumber":116,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":118,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"blank-bank"},"content":"     * Error message when the /by indicator is not present when deadline command is used"},{"lineNumber":120,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"blank-bank"},"content":"    public static void DeadlineParameterErrorMessage(){"},{"lineNumber":122,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\" ☹ OOPS!!! For \\\"deadline\\\" command please input \\\"/by\\\"\");"},{"lineNumber":123,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":125,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"blank-bank"},"content":"     * Error message when the the integer parameter is out of range"},{"lineNumber":127,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"blank-bank"},"content":"    public static void InvalidIndexErrorMessage(){"},{"lineNumber":129,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\" ☹ OOPS!!! Index is out of range\");"},{"lineNumber":130,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":132,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":133,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":134,"author":{"gitId":"blank-bank"},"content":"     * Returns a String in the formatted version of the date input"},{"lineNumber":135,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":136,"author":{"gitId":"blank-bank"},"content":"     * @param date date in the YYYY-MM-DD format"},{"lineNumber":137,"author":{"gitId":"blank-bank"},"content":"     * @return String in the MMM-DD-YYYY date format"},{"lineNumber":138,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"blank-bank"},"content":"    public static String convertDateToStringFormat(String date){"},{"lineNumber":140,"author":{"gitId":"blank-bank"},"content":"        LocalDate myDateObj \u003d LocalDate.parse(date);"},{"lineNumber":141,"author":{"gitId":"blank-bank"},"content":"        DateTimeFormatter myFormatObj \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy \");"},{"lineNumber":142,"author":{"gitId":"blank-bank"},"content":"        return myDateObj.format(myFormatObj);"},{"lineNumber":143,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":145,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":146,"author":{"gitId":"blank-bank"},"content":"     * Returns a LocalDate object based on the String input"},{"lineNumber":147,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":148,"author":{"gitId":"blank-bank"},"content":"     * @param input date in the MMM-DD-YYYY format"},{"lineNumber":149,"author":{"gitId":"blank-bank"},"content":"     * @return LocalDate object"},{"lineNumber":150,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"blank-bank"},"content":"    public static LocalDate convertStringFormatToDate(String input){"},{"lineNumber":152,"author":{"gitId":"blank-bank"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM-d-yyyy \");"},{"lineNumber":153,"author":{"gitId":"blank-bank"},"content":"        return LocalDate.parse(input, formatter);"},{"lineNumber":154,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":156,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":156}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"java -classpath ..\\bin duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":20,"blank-bank":1}}]
