[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"# duke.main.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"1. After that, locate the `src/main/java/duke.main.Duke.java` file, right-click it, and choose `Run duke.main.Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"-":24,"blank-bank":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"-  [Features](#a) "},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"   - [Adding tasks](#a)"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"    \t- [todo](#a)"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"    \t- [deadline](#b)"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"\t - [event](#c)"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"   - [Listing all tasks](#d)"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"   - [Completing a task](#e)"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"   - [Find](#f)"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"\t - [Description](#f)"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"\t  - [Date](#g)"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"   - [Save and exit](#i)"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"***"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"Notes: "},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"The square brackets specifies that user input is required"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"`command [variable input]`"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"***"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"## Features"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"***"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"## \u003ca name\u003d\"a\"\u003e\u003c/a\u003e Adding tasks: Todo"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"**Description:**"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"Adding a simple task using the todo command"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"**Formatting:**"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"`todo` [task description]"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"**Examples**"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding the task \"read shakespeare\""},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `todo read shakespeare`"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding the task \"finish java quiz\""},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `todo finish java quiz`"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"**Example output**"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"todo read shakespeare"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"  [T][✘] read shakespeare"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"Now you have 1 tasks in the list."},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"***"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"## \u003ca name\u003d\"b\"\u003e\u003c/a\u003e Adding tasks: Deadline"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"**Description:**"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding a deadline task using the `deadline` command."},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; A deadline consist of a **description** and a **date**."},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"**Formatting:**"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0027deadline [task description] /by [date in format YYYY-MM-DD]`"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"**Examples**"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding the deadline \"read shakespeare by 8 Mar 2021\""},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `deadline read shakespeare /by 2021-03-08`"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding the deadline \"finish java quiz by 16 Nov 2021\""},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `deadline finish java quiz /by 2021-11-16`"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"**Example output**"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"deadline read shakespeare /by 2021-03-08"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"  [D][✘] read shakespeare (by: Mar-08-2021 )"},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":"Now you have 1 tasks in the list."},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"***"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"## \u003ca name\u003d\"c\"\u003e\u003c/a\u003e Adding tasks: Event"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"**Description:**"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding an event task using the `event` command."},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; An event consist of a **description** and a **date**."},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":93,"author":{"gitId":"blank-bank"},"content":"**Formatting:**"},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":95,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `event [task description] /at [date in format YYYY-MM-DD]`"},{"lineNumber":96,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":97,"author":{"gitId":"blank-bank"},"content":"**Examples**"},{"lineNumber":98,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":99,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding the event \"read shakespeare by 8 Mar 2021\""},{"lineNumber":100,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":101,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `event shakespeare\u0027s play /at 2021-03-08`"},{"lineNumber":102,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":103,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding the event \"java quiz by 16 Nov 2021\""},{"lineNumber":104,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":105,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `event java quiz /at 2021-11-16`"},{"lineNumber":106,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":107,"author":{"gitId":"blank-bank"},"content":"**Example output**"},{"lineNumber":108,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":109,"author":{"gitId":"blank-bank"},"content":"event shakespeare\u0027s play /at 2021-03-08"},{"lineNumber":110,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":111,"author":{"gitId":"blank-bank"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":112,"author":{"gitId":"blank-bank"},"content":"  [E][✘] shakespeare\u0027s play (by: Mar-08-2021 )"},{"lineNumber":113,"author":{"gitId":"blank-bank"},"content":"Now you have 1 tasks in the list."},{"lineNumber":114,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":115,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":116,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":117,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":118,"author":{"gitId":"blank-bank"},"content":"## \u003ca name\u003d\"d\"\u003e\u003c/a\u003e Listing all tasks"},{"lineNumber":119,"author":{"gitId":"blank-bank"},"content":"**Description:**"},{"lineNumber":120,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":121,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;List all tasks (todo, deadline, event)"},{"lineNumber":122,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":123,"author":{"gitId":"blank-bank"},"content":"**Formatting:**"},{"lineNumber":124,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":125,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`list`"},{"lineNumber":126,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":127,"author":{"gitId":"blank-bank"},"content":"**Example output**"},{"lineNumber":128,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":129,"author":{"gitId":"blank-bank"},"content":"list"},{"lineNumber":130,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":131,"author":{"gitId":"blank-bank"},"content":"Here are the tasks in your list:"},{"lineNumber":132,"author":{"gitId":"blank-bank"},"content":"1.[T][✘] read shakespeare"},{"lineNumber":133,"author":{"gitId":"blank-bank"},"content":"2.[D][✘] read shakespeare (by: Mar-08-2021 )"},{"lineNumber":134,"author":{"gitId":"blank-bank"},"content":"3.[E][✘] shakespeare\u0027s play (at: Mar-08-2021 )"},{"lineNumber":135,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":136,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":137,"author":{"gitId":"blank-bank"},"content":"***"},{"lineNumber":138,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":139,"author":{"gitId":"blank-bank"},"content":"## \u003ca name\u003d\"e\"\u003e\u003c/a\u003e Completing a task"},{"lineNumber":140,"author":{"gitId":"blank-bank"},"content":"**Description:**"},{"lineNumber":141,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":142,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Set the task to be done."},{"lineNumber":143,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":144,"author":{"gitId":"blank-bank"},"content":"**Formatting:**"},{"lineNumber":145,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":146,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`done [index]`"},{"lineNumber":147,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":148,"author":{"gitId":"blank-bank"},"content":"**Examples**"},{"lineNumber":149,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":150,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`done 1`"},{"lineNumber":151,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":152,"author":{"gitId":"blank-bank"},"content":"**Example output**"},{"lineNumber":153,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":154,"author":{"gitId":"blank-bank"},"content":"Here are the tasks in your list:"},{"lineNumber":155,"author":{"gitId":"blank-bank"},"content":"1.[T][✘] read shakespeare"},{"lineNumber":156,"author":{"gitId":"blank-bank"},"content":"2.[D][✘] read shakespeare (by: Mar-08-2021 )"},{"lineNumber":157,"author":{"gitId":"blank-bank"},"content":"3.[E][✘] shakespeare\u0027s play (at: Mar-08-2021 )"},{"lineNumber":158,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":159,"author":{"gitId":"blank-bank"},"content":"done 1"},{"lineNumber":160,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":161,"author":{"gitId":"blank-bank"},"content":"Nice! I\u0027ve marked this task as done: "},{"lineNumber":162,"author":{"gitId":"blank-bank"},"content":"[✓] read shakespeare"},{"lineNumber":163,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":164,"author":{"gitId":"blank-bank"},"content":"list"},{"lineNumber":165,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":166,"author":{"gitId":"blank-bank"},"content":"Here are the tasks in your list:"},{"lineNumber":167,"author":{"gitId":"blank-bank"},"content":"1.[T][✓] read shakespeare"},{"lineNumber":168,"author":{"gitId":"blank-bank"},"content":"2.[D][✘] read shakespeare (by: Mar-08-2021 )"},{"lineNumber":169,"author":{"gitId":"blank-bank"},"content":"3.[E][✘] shakespeare\u0027s play (at: Mar-08-2021 )"},{"lineNumber":170,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":171,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":172,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":173,"author":{"gitId":"blank-bank"},"content":"## \u003ca name\u003d\"f\"\u003e\u003c/a\u003e Find tasks: Description"},{"lineNumber":174,"author":{"gitId":"blank-bank"},"content":"**Description:**"},{"lineNumber":175,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":176,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Find specific tasks based on similar descriptions."},{"lineNumber":177,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":178,"author":{"gitId":"blank-bank"},"content":"**Formatting:**"},{"lineNumber":179,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":180,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`find [task description]`"},{"lineNumber":181,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":182,"author":{"gitId":"blank-bank"},"content":"**Examples**"},{"lineNumber":183,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":184,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Find any tasks with the phrase \"read shakespeare\" in description"},{"lineNumber":185,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":186,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `find read shakespeare`"},{"lineNumber":187,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":188,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Find any tasks with the word book description"},{"lineNumber":189,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":190,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`find book`"},{"lineNumber":191,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":192,"author":{"gitId":"blank-bank"},"content":"**Example output**"},{"lineNumber":193,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":194,"author":{"gitId":"blank-bank"},"content":"find read shakespeare"},{"lineNumber":195,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":196,"author":{"gitId":"blank-bank"},"content":"Here are the matching tasks in your list:"},{"lineNumber":197,"author":{"gitId":"blank-bank"},"content":"1.[T][✓] read shakespeare"},{"lineNumber":198,"author":{"gitId":"blank-bank"},"content":"2.[D][✘] read shakespeare (by: Mar-08-2021 )"},{"lineNumber":199,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":200,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":201,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":202,"author":{"gitId":"blank-bank"},"content":"## \u003ca name\u003d\"g\"\u003e\u003c/a\u003e Find tasks: Date"},{"lineNumber":203,"author":{"gitId":"blank-bank"},"content":"**Description:**"},{"lineNumber":204,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":205,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Find specific tasks based on date input."},{"lineNumber":206,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":207,"author":{"gitId":"blank-bank"},"content":"**Formatting:**"},{"lineNumber":208,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":209,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Find all events that occur on a specific date"},{"lineNumber":210,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":211,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `findAt [Date with format YYYY-MM-DD]`"},{"lineNumber":212,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":213,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Find all deadlines that occurs before a specific date"},{"lineNumber":214,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":215,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `findBy [Date with format YYYY-MM-DD]`"},{"lineNumber":216,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":217,"author":{"gitId":"blank-bank"},"content":"**Examples**"},{"lineNumber":218,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":219,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Find events on "},{"lineNumber":220,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":221,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `findAt 2021-03-0`"},{"lineNumber":222,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":223,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Find any tasks with the word book description"},{"lineNumber":224,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":225,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `findBy 2021-03-10`"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"blank-bank"},"content":"**Example output**"},{"lineNumber":228,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":229,"author":{"gitId":"blank-bank"},"content":"Here are the tasks in your list:"},{"lineNumber":230,"author":{"gitId":"blank-bank"},"content":"1.[T][✓] read shakespeare"},{"lineNumber":231,"author":{"gitId":"blank-bank"},"content":"2.[D][✘] read shakespeare (by: Mar-08-2021 )"},{"lineNumber":232,"author":{"gitId":"blank-bank"},"content":"3.[E][✘] shakespeare\u0027s play (at: Mar-08-2021 )"},{"lineNumber":233,"author":{"gitId":"blank-bank"},"content":"4.[D][✘] watch wandaVision (by: Mar-10-2021 )"},{"lineNumber":234,"author":{"gitId":"blank-bank"},"content":"5.[E][✘] homework submission (at: Mar-08-2021 )"},{"lineNumber":235,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":236,"author":{"gitId":"blank-bank"},"content":"findAt 2021-03-08"},{"lineNumber":237,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":238,"author":{"gitId":"blank-bank"},"content":"Here are the matching tasks in your list:"},{"lineNumber":239,"author":{"gitId":"blank-bank"},"content":"1.[E][✘] shakespeare\u0027s play (at: Mar-08-2021 )"},{"lineNumber":240,"author":{"gitId":"blank-bank"},"content":"2.[E][✘] homework submission (at: Mar-08-2021 )"},{"lineNumber":241,"author":{"gitId":"blank-bank"},"content":"____________________________________________________"},{"lineNumber":242,"author":{"gitId":"blank-bank"},"content":"findBy 2021-03-10"},{"lineNumber":243,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":244,"author":{"gitId":"blank-bank"},"content":"Here are the matching tasks in your list:"},{"lineNumber":245,"author":{"gitId":"blank-bank"},"content":"1.[D][✘] read shakespeare (by: Mar-08-2021 )"},{"lineNumber":246,"author":{"gitId":"blank-bank"},"content":"2.[D][✘] watch wandaVision (by: Mar-10-2021 )"},{"lineNumber":247,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"blank-bank"},"content":"## \u003ca name\u003d\"i\"\u003e\u003c/a\u003e Save and exit"},{"lineNumber":250,"author":{"gitId":"blank-bank"},"content":"**Description:**"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Save all tasks in file and exits"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"blank-bank"},"content":"**Formatting:**"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`bye`"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"blank-bank"},"content":"**Example output**"},{"lineNumber":259,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":260,"author":{"gitId":"blank-bank"},"content":"bye"},{"lineNumber":261,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":262,"author":{"gitId":"blank-bank"},"content":"File is overwritten."},{"lineNumber":263,"author":{"gitId":"blank-bank"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":264,"author":{"gitId":"blank-bank"},"content":"____________________________________________________________"},{"lineNumber":265,"author":{"gitId":"blank-bank"},"content":"```"},{"lineNumber":266,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"-":16,"blank-bank":250}},{"path":"list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"D\ttrue\tsdf\t1289"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"D\tfalse\towen\t123 4252"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"D\tfalse\tweidn\t12930"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e master"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"T\tfalse\towenwefo oqdn oasd fm "},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"T\tfalse\tcasowensdfkansd v"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"D\tfalse\towennsdck\tOct-10-2020 "},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"D\tfalse\tppp\tOct-11-2020 "},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"D\tfalse\tqqq\tOct-12-2020 "},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"D\tfalse\teee\tOct-13-2020 "},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 0fad1c0... Level 9: Find"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e master"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e master"}],"authorContributionMap":{"blank-bank":21}},{"path":"src/main/java/duke/exceptions/DeadlineParameterExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":" * DeadlineParameterExceptions class to handle deadline parameter exception."},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":" */"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"public class DeadlineParameterExceptions extends Exception{"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":7}},{"path":"src/main/java/duke/exceptions/EventParameterExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":" * EventParameterExceptions class to handle Event parameter exception."},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":" */"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"public class EventParameterExceptions extends Exception{"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":7}},{"path":"src/main/java/duke/exceptions/InvalidCommandExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":" * InvalidCommandExceptions class to handle invalid commands exception."},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":" */"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"public class InvalidCommandExceptions extends Exception{"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":7}},{"path":"src/main/java/duke/exceptions/InvalidIndexExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":" * InvalidIndexExceptions class to handle invalid index exception."},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":" */"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"public class InvalidIndexExceptions extends Exception{"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":7}},{"path":"src/main/java/duke/exceptions/InvalidParameterLengthExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":" * InvalidParameterLengthExceptions class to handle insufficient parameters exception."},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":" */"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"public class InvalidParameterLengthExceptions extends Exception{"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":7}},{"path":"src/main/java/duke/items/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.items;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import static duke.main.UI.convertDateToStringFormat;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":" * Deadline class"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":" */"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"public class Deadline extends Task {"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"    protected String by;"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"     * Deadline constructor"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"     * @param description Description of the task"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"     * @param byInput input String of date"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    public Deadline(String description, String byInput) {"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"        this.by \u003d byInput;"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"     * Change the by attribute of Deadline"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"     * @param byInput new String of date"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"    public void setBy(String byInput) {"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"        this.by \u003d byInput;"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"     * Returns the by attribute of Deadline object"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"     * @return this.by"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"    public String getBy() {"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"        return this.by;"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"     * Returns the Type of Deadline object"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"     * @return String \"D\""},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"    public String getType() {"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"        return \"D\";"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"     * Prints the Deadline object in a certain format"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"    public void print(){"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"        if (this.isDone) {"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"[D][\\u2713] \" + description + \" (by: \" + by + \")\");"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"        } else {"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"[D][\\u2718] \" + description + \" (by: \" + by + \")\");"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":61}},{"path":"src/main/java/duke/items/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.items;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":" * Event class"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":" */"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"    private String at;"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"     * Event constructor"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"     * @param description Description of the task"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"     * @param atInput input String of date"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"    public Event(String description, String atInput) {"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"        this.at \u003d atInput;"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"     * Change the by attribute of Event"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"     * @param atInput new String of date"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"    public void setAt(String atInput) {"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"        this.at \u003d atInput;"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"     * Returns the at attribute of Event object"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"     * @return this.at"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"    public String getAt() {"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"        return this.at;"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"     * Returns the Type of Event object"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"     * @return String \"E\""},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"    public String getType() {"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"        return \"E\";"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"     * Prints the Event object in a certain format"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"    public void print(){"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"        if (this.isDone) {"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"[E][\\u2713] \" + description + \" (at: \" + at + \")\" );"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"        } else {"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"[E][\\u2718] \" + description + \" (at: \" + at + \")\" );"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":60}},{"path":"src/main/java/duke/items/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.items;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import java.text.ParseException;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import duke.exceptions.*;"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import static duke.main.UI.stringPatternToDate;"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":" * Parent class for other classes (todo, deadline, event)"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":" */"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"public class Task {"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"    private static int numOfTasks \u003d 0;"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    protected String description;"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"    protected boolean isDone;"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    protected static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"     * Returns the ArrayList from Task"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"     * @return ArrayList"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"    public static ArrayList getList(){"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"        return list;"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"     * Returns the number of Tasks that are in the ArrayList list"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"     * @return numOfTasks"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"    public static int getNumOfTasks() {"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"        return numOfTasks;"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"     * Prints each Task in the list using print() function"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"    public static void printList(){"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"        for (int i \u003d0; i\u003cnumOfTasks;i++) {"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"            System.out.print(i+1 + \".\");"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"            list.get(i).print();"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"     * Adds the given Task object into the ArrayList list"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"     * @param task Task object to be added"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"    public static void addTask(Task task) {"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"        list.add(task);"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"        numOfTasks++;"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"     * Finds all the Tasks in list that contains the given String"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"     * @param find String item used to search the Tasks in the list"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"    public static void findTask(String find) {"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"        int counter \u003d 1;"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"        for (int i \u003d0; i\u003cnumOfTasks;i++) {"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"            if (list.get(i).description.contains(find)) {"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"                System.out.print(counter + \".\");"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"                list.get(i).print();"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"                counter++;"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"     * Prints all Events on a specific date"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"     * @param find date to search"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"    public static void findAt(String find){"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":"        int counter \u003d 1;"},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"        for (int i \u003d0; i\u003cnumOfTasks;i++) {"},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":"            if ( (list.get(i) instanceof Event) \u0026\u0026 ((Event) list.get(i)).getAt().equals(find)){"},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"                System.out.print(counter + \".\");"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"                list.get(i).print();"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"                counter++;"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"     * Prints all Deadlines before and including a certain date"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":"     * @param find date to search"},{"lineNumber":93,"author":{"gitId":"blank-bank"},"content":"     * @throws ParseException  If there is an error with date conversion"},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"blank-bank"},"content":"    public static void findBy(String find) throws ParseException {"},{"lineNumber":96,"author":{"gitId":"blank-bank"},"content":"        int counter \u003d 1;"},{"lineNumber":97,"author":{"gitId":"blank-bank"},"content":"        for (int i \u003d0; i\u003cnumOfTasks;i++) {"},{"lineNumber":98,"author":{"gitId":"blank-bank"},"content":"            if ( !(list.get(i) instanceof Deadline)){"},{"lineNumber":99,"author":{"gitId":"blank-bank"},"content":"                continue;"},{"lineNumber":100,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"blank-bank"},"content":"            LocalDate inputDate \u003d LocalDate.parse(find);"},{"lineNumber":102,"author":{"gitId":"blank-bank"},"content":"            LocalDate current \u003d stringPatternToDate(((Deadline)list.get(i)).getBy());"},{"lineNumber":103,"author":{"gitId":"blank-bank"},"content":"            if (!(inputDate.isBefore(current))){"},{"lineNumber":104,"author":{"gitId":"blank-bank"},"content":"                System.out.print(counter + \".\");"},{"lineNumber":105,"author":{"gitId":"blank-bank"},"content":"                list.get(i).print();"},{"lineNumber":106,"author":{"gitId":"blank-bank"},"content":"                counter++;"},{"lineNumber":107,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"blank-bank"},"content":"     * Removes a Task from the list"},{"lineNumber":112,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":113,"author":{"gitId":"blank-bank"},"content":"     * @param index Task number"},{"lineNumber":114,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"blank-bank"},"content":"    public static void deleteTask(int index) {"},{"lineNumber":116,"author":{"gitId":"blank-bank"},"content":"        numOfTasks--;"},{"lineNumber":117,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":118,"author":{"gitId":"blank-bank"},"content":"        System.out.print(\"  \");"},{"lineNumber":119,"author":{"gitId":"blank-bank"},"content":"        list.get(index).print();"},{"lineNumber":120,"author":{"gitId":"blank-bank"},"content":"        list.remove(index);"},{"lineNumber":121,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":123,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"blank-bank"},"content":"     * Set a specified Task to be done"},{"lineNumber":125,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":126,"author":{"gitId":"blank-bank"},"content":"     * @param index Task number"},{"lineNumber":127,"author":{"gitId":"blank-bank"},"content":"     * @throws InvalidIndexExceptions  If index out of range"},{"lineNumber":128,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"blank-bank"},"content":"    public static void setDone(int index) throws InvalidIndexExceptions{"},{"lineNumber":130,"author":{"gitId":"blank-bank"},"content":"        if (index \u003e\u003d numOfTasks){"},{"lineNumber":131,"author":{"gitId":"blank-bank"},"content":"            throw new InvalidIndexExceptions();"},{"lineNumber":132,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"blank-bank"},"content":"        list.get(index).isDone \u003d true;"},{"lineNumber":134,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":135,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"[\\u2713] \" + list.get(index).getDescription());"},{"lineNumber":136,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":138,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":139,"author":{"gitId":"blank-bank"},"content":"     * Task object initialisation"},{"lineNumber":140,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":141,"author":{"gitId":"blank-bank"},"content":"     * @param description  Description of the Task"},{"lineNumber":142,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":143,"author":{"gitId":"blank-bank"},"content":"    public Task(String description) {"},{"lineNumber":144,"author":{"gitId":"blank-bank"},"content":"        this.description \u003d description;"},{"lineNumber":145,"author":{"gitId":"blank-bank"},"content":"        this.isDone \u003d false;"},{"lineNumber":146,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":148,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"blank-bank"},"content":"     * Prints the Task in a fixed format"},{"lineNumber":150,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"blank-bank"},"content":"    public void print(){"},{"lineNumber":152,"author":{"gitId":"blank-bank"},"content":"        if (this.isDone) {"},{"lineNumber":153,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"[T][\\u2713] \" + description );"},{"lineNumber":154,"author":{"gitId":"blank-bank"},"content":"        } else {"},{"lineNumber":155,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"[T][\\u2718] \" + description );"},{"lineNumber":156,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":159,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":160,"author":{"gitId":"blank-bank"},"content":"     * Returns Description of the given Task object"},{"lineNumber":161,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":162,"author":{"gitId":"blank-bank"},"content":"     * @return Description"},{"lineNumber":163,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":164,"author":{"gitId":"blank-bank"},"content":"    public String getDescription() {"},{"lineNumber":165,"author":{"gitId":"blank-bank"},"content":"        return description;"},{"lineNumber":166,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":168,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":169,"author":{"gitId":"blank-bank"},"content":"     * Change the description attribute of Task"},{"lineNumber":170,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":171,"author":{"gitId":"blank-bank"},"content":"    public void setDescription(String description) {"},{"lineNumber":172,"author":{"gitId":"blank-bank"},"content":"        this.description \u003d description;"},{"lineNumber":173,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":175,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":176,"author":{"gitId":"blank-bank"},"content":"     * Returns Type of the given Task object"},{"lineNumber":177,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":178,"author":{"gitId":"blank-bank"},"content":"     * @return Type"},{"lineNumber":179,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":180,"author":{"gitId":"blank-bank"},"content":"    public String getType() {"},{"lineNumber":181,"author":{"gitId":"blank-bank"},"content":"        return \"T\";"},{"lineNumber":182,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":184,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":185,"author":{"gitId":"blank-bank"},"content":"     * Returns whether the Task is done"},{"lineNumber":186,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":187,"author":{"gitId":"blank-bank"},"content":"     * @return boolean of isDone"},{"lineNumber":188,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":189,"author":{"gitId":"blank-bank"},"content":"    public boolean isDone() {"},{"lineNumber":190,"author":{"gitId":"blank-bank"},"content":"        return this.isDone;"},{"lineNumber":191,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":193,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":194,"author":{"gitId":"blank-bank"},"content":"     * Change the isDone attribute of Task"},{"lineNumber":195,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":196,"author":{"gitId":"blank-bank"},"content":"    public void setDone() {"},{"lineNumber":197,"author":{"gitId":"blank-bank"},"content":"        this.isDone \u003d true;"},{"lineNumber":198,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":199}},{"path":"src/main/java/duke/items/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.items;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":" * Todo class"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":" */"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"     * Todo constructor"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"     * @param description Description of the task"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    public Todo(String description) {"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":16}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"     * Prints welcome and goodbye message"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"     * Calls fileHandling"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"     * Calls run function from parser"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"     * Main function that combines all functions from other files"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"    public static void main(String[] args) {"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"        UI.welcomeMessage();"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"        UI.printLine();"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"        Storage.fileHandling();"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"        Parser.run();"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"        UI.byeMessage();"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":18}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import java.text.ParseException;"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import duke.exceptions.*;"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"import duke.items.Deadline;"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"import duke.items.Event;"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"import duke.items.Task;"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"import duke.items.Todo;"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"import static duke.main.UI.convertDateToStringFormat;"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":" * Class in charge of understanding input commands"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":" */"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"public class Parser {"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"    private static final String[] VALID_COMMANDS \u003d {\"findBy\", \"findAt\", \"find\", \"bye\", \"done\", \"list\", \"todo\", \"event\", \"deadline\", \"delete\"};"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"     * Check that command word (1st word of input) is valid"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"     * @param line  command used"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"     * @return integer 1 if valid, else 0"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"    public static int validateCommand(String line){"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"        if ((Arrays.asList(VALID_COMMANDS).contains(line))) {"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"            return 1;"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"        } else {"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"            return 0;"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"     * Check number of parameters in input command is valid"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"     * @param line  entire input command"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"     * @throws InvalidParameterLengthExceptions  If length of entire todo command is \u003c 2"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"    public static void validateTodoCommand(String line) throws InvalidParameterLengthExceptions {"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"        if (line.split(\" \").length \u003c 2){"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"            throw new InvalidParameterLengthExceptions();"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"     * Returns the index of the character \"/\" in the input command"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"     * while checking for the validity of the command"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"     * @param line  entire input command"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"     * @return index of \"/\" in the /by indicator"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"     * @throws DeadlineParameterExceptions  If /by is missing"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"     * @throws InvalidParameterLengthExceptions  If number of parameters \u003c 4"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"    public static int validateDeadlineCommand(String line) throws DeadlineParameterExceptions, InvalidParameterLengthExceptions {"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"        int indexOfSlash;"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"        if (line.split(\" \").length \u003c 4){"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"            throw new InvalidParameterLengthExceptions();"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"        indexOfSlash \u003d line.indexOf(\"/by\");"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"        if (indexOfSlash \u003d\u003d -1) {"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"            throw new DeadlineParameterExceptions();"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"        return indexOfSlash;"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"     * Returns the index of the character \"/\" in the input command"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"     * while checking for the validity of the command"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"     * @param line  entire input command"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"     * @return index of \"/\" in the /at indicator"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"     * @throws EventParameterExceptions  If /at is missing"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":"     * @throws InvalidParameterLengthExceptions  If number of parameters \u003c 4"},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":"    public static int validateEventCommand(String line) throws EventParameterExceptions, InvalidParameterLengthExceptions {"},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"        int indexOfSlash;"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"        if (line.split(\" \").length \u003c 4){"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"            throw new InvalidParameterLengthExceptions();"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"        indexOfSlash \u003d line.indexOf(\"/at\");"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"        if (indexOfSlash \u003d\u003d -1){"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":"            throw new EventParameterExceptions();"},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"        return indexOfSlash;"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":93,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":"     * Main parser function that decides the respective functions"},{"lineNumber":95,"author":{"gitId":"blank-bank"},"content":"     * to run based on the input command"},{"lineNumber":96,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"blank-bank"},"content":"     * @param line  entire input command"},{"lineNumber":98,"author":{"gitId":"blank-bank"},"content":"     * @return integer -1 when input request to exit, else 1"},{"lineNumber":99,"author":{"gitId":"blank-bank"},"content":"     * @throws InvalidCommandExceptions  If unrecognised command is used."},{"lineNumber":100,"author":{"gitId":"blank-bank"},"content":"     * @throws InvalidParameterLengthExceptions  If number of parameters does not match command used."},{"lineNumber":101,"author":{"gitId":"blank-bank"},"content":"     * @throws DeadlineParameterExceptions  If Deadline command format is not adhered to."},{"lineNumber":102,"author":{"gitId":"blank-bank"},"content":"     * @throws EventParameterExceptions  If Event command format is not adhered to."},{"lineNumber":103,"author":{"gitId":"blank-bank"},"content":"     * @throws InvalidIndexExceptions  If index out of range."},{"lineNumber":104,"author":{"gitId":"blank-bank"},"content":"     * @throws IOException  If input output error occurs."},{"lineNumber":105,"author":{"gitId":"blank-bank"},"content":"     * @throws ParseException If date conversion error occurs"},{"lineNumber":106,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"blank-bank"},"content":"    public static int commandHandler(String line) throws InvalidCommandExceptions, InvalidParameterLengthExceptions,"},{"lineNumber":108,"author":{"gitId":"blank-bank"},"content":"            DeadlineParameterExceptions, EventParameterExceptions, InvalidIndexExceptions, IOException, ParseException {"},{"lineNumber":109,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":110,"author":{"gitId":"blank-bank"},"content":"        String[] arr;"},{"lineNumber":111,"author":{"gitId":"blank-bank"},"content":"        arr \u003d line.split(\" \");"},{"lineNumber":112,"author":{"gitId":"blank-bank"},"content":"        if (validateCommand(arr[0]) \u003d\u003d 0){"},{"lineNumber":113,"author":{"gitId":"blank-bank"},"content":"            throw new InvalidCommandExceptions();"},{"lineNumber":114,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"blank-bank"},"content":"        switch (arr[0]) {"},{"lineNumber":116,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":117,"author":{"gitId":"blank-bank"},"content":"        case (\"bye\"):"},{"lineNumber":118,"author":{"gitId":"blank-bank"},"content":"            Storage.writeToFile();"},{"lineNumber":119,"author":{"gitId":"blank-bank"},"content":"            return -1;"},{"lineNumber":120,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":121,"author":{"gitId":"blank-bank"},"content":"        case (\"list\"):"},{"lineNumber":122,"author":{"gitId":"blank-bank"},"content":"            UI.listPreamble();"},{"lineNumber":123,"author":{"gitId":"blank-bank"},"content":"            Task.printList();"},{"lineNumber":124,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":125,"author":{"gitId":"blank-bank"},"content":"        case (\"done\"):"},{"lineNumber":126,"author":{"gitId":"blank-bank"},"content":"            Task.setDone(Integer.parseInt(line.split(\" \")[1]) - 1);"},{"lineNumber":127,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":128,"author":{"gitId":"blank-bank"},"content":"        case (\"delete\"):"},{"lineNumber":129,"author":{"gitId":"blank-bank"},"content":"            int indexToDelete \u003d Integer.parseInt(line.split(\" \")[1]) - 1;"},{"lineNumber":130,"author":{"gitId":"blank-bank"},"content":"            if (indexToDelete \u003e\u003d Task.getNumOfTasks()){"},{"lineNumber":131,"author":{"gitId":"blank-bank"},"content":"                throw new InvalidIndexExceptions();"},{"lineNumber":132,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":133,"author":{"gitId":"blank-bank"},"content":"            Task.deleteTask(Integer.parseInt(line.split(\" \")[1]) - 1);"},{"lineNumber":134,"author":{"gitId":"blank-bank"},"content":"            UI.listUpdate();"},{"lineNumber":135,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":136,"author":{"gitId":"blank-bank"},"content":"        case (\"find\"):"},{"lineNumber":137,"author":{"gitId":"blank-bank"},"content":"            UI.findPreamble();"},{"lineNumber":138,"author":{"gitId":"blank-bank"},"content":"            Task.findTask(line.split(\" \")[1]);"},{"lineNumber":139,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":140,"author":{"gitId":"blank-bank"},"content":"        case (\"findAt\"):"},{"lineNumber":141,"author":{"gitId":"blank-bank"},"content":"            UI.findPreamble();"},{"lineNumber":142,"author":{"gitId":"blank-bank"},"content":"            Task.findAt(convertDateToStringFormat(line.split(\" \")[1]));"},{"lineNumber":143,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":144,"author":{"gitId":"blank-bank"},"content":"        case (\"findBy\"):"},{"lineNumber":145,"author":{"gitId":"blank-bank"},"content":"            UI.findPreamble();"},{"lineNumber":146,"author":{"gitId":"blank-bank"},"content":"            Task.findBy(line.split(\" \")[1]);"},{"lineNumber":147,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":148,"author":{"gitId":"blank-bank"},"content":"        case (\"todo\"):"},{"lineNumber":149,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":150,"author":{"gitId":"blank-bank"},"content":"            validateTodoCommand(line);"},{"lineNumber":151,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":152,"author":{"gitId":"blank-bank"},"content":"            Todo todo \u003d new Todo(line.substring(line.indexOf(\" \") + 1));"},{"lineNumber":153,"author":{"gitId":"blank-bank"},"content":"            Task.addTask(todo);"},{"lineNumber":154,"author":{"gitId":"blank-bank"},"content":"            System.out.print(\"  \");"},{"lineNumber":155,"author":{"gitId":"blank-bank"},"content":"            todo.print();"},{"lineNumber":156,"author":{"gitId":"blank-bank"},"content":"            UI.listUpdate();"},{"lineNumber":157,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":158,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":159,"author":{"gitId":"blank-bank"},"content":"        case (\"deadline\"):"},{"lineNumber":160,"author":{"gitId":"blank-bank"},"content":"            int indexOfSlash \u003d validateDeadlineCommand(line);"},{"lineNumber":161,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":162,"author":{"gitId":"blank-bank"},"content":"            String item \u003d line.substring(line.indexOf(\" \") + 1, indexOfSlash - 1);"},{"lineNumber":163,"author":{"gitId":"blank-bank"},"content":"            String extra \u003d line.substring(indexOfSlash + 4);"},{"lineNumber":164,"author":{"gitId":"blank-bank"},"content":"            Deadline deadline \u003d new Deadline(item, convertDateToStringFormat(extra));"},{"lineNumber":165,"author":{"gitId":"blank-bank"},"content":"            Task.addTask(deadline);"},{"lineNumber":166,"author":{"gitId":"blank-bank"},"content":"            System.out.print(\"  \");"},{"lineNumber":167,"author":{"gitId":"blank-bank"},"content":"            deadline.print();"},{"lineNumber":168,"author":{"gitId":"blank-bank"},"content":"            UI.listUpdate();"},{"lineNumber":169,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":170,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":171,"author":{"gitId":"blank-bank"},"content":"        case (\"event\"):"},{"lineNumber":172,"author":{"gitId":"blank-bank"},"content":"            indexOfSlash \u003d validateEventCommand(line);"},{"lineNumber":173,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":174,"author":{"gitId":"blank-bank"},"content":"            item \u003d line.substring(line.indexOf(\" \") + 1, indexOfSlash - 1);"},{"lineNumber":175,"author":{"gitId":"blank-bank"},"content":"            extra \u003d line.substring(indexOfSlash + 4);"},{"lineNumber":176,"author":{"gitId":"blank-bank"},"content":"            Event event \u003d new Event(item, convertDateToStringFormat(extra));"},{"lineNumber":177,"author":{"gitId":"blank-bank"},"content":"            Task.addTask(event);"},{"lineNumber":178,"author":{"gitId":"blank-bank"},"content":"            System.out.print(\"  \");"},{"lineNumber":179,"author":{"gitId":"blank-bank"},"content":"            event.print();"},{"lineNumber":180,"author":{"gitId":"blank-bank"},"content":"            UI.listUpdate();"},{"lineNumber":181,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"blank-bank"},"content":"        return 1;"},{"lineNumber":183,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":185,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":186,"author":{"gitId":"blank-bank"},"content":"     * Runs loop that repeatedly calls for input command"},{"lineNumber":187,"author":{"gitId":"blank-bank"},"content":"     * Runs commandHandler for each input command"},{"lineNumber":188,"author":{"gitId":"blank-bank"},"content":"     * Catches error and decides error message"},{"lineNumber":189,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":190,"author":{"gitId":"blank-bank"},"content":"    public static void run(){"},{"lineNumber":191,"author":{"gitId":"blank-bank"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":192,"author":{"gitId":"blank-bank"},"content":"        while (true) {"},{"lineNumber":193,"author":{"gitId":"blank-bank"},"content":"            String line;"},{"lineNumber":194,"author":{"gitId":"blank-bank"},"content":"            line \u003d in.nextLine();"},{"lineNumber":195,"author":{"gitId":"blank-bank"},"content":"            UI.printLine();"},{"lineNumber":196,"author":{"gitId":"blank-bank"},"content":"            try {"},{"lineNumber":197,"author":{"gitId":"blank-bank"},"content":"                if (commandHandler(line) \u003d\u003d -1) {"},{"lineNumber":198,"author":{"gitId":"blank-bank"},"content":"                    break;"},{"lineNumber":199,"author":{"gitId":"blank-bank"},"content":"                }"},{"lineNumber":200,"author":{"gitId":"blank-bank"},"content":"            } catch (InvalidCommandExceptions e) {"},{"lineNumber":201,"author":{"gitId":"blank-bank"},"content":"                UI.InvalidCommandErrorMessage();"},{"lineNumber":202,"author":{"gitId":"blank-bank"},"content":"            } catch (InvalidParameterLengthExceptions e){"},{"lineNumber":203,"author":{"gitId":"blank-bank"},"content":"                UI.InvalidParameterLengthErrorMessage(line);"},{"lineNumber":204,"author":{"gitId":"blank-bank"},"content":"            } catch (EventParameterExceptions e){"},{"lineNumber":205,"author":{"gitId":"blank-bank"},"content":"                UI.EventParameterErrorMessage();"},{"lineNumber":206,"author":{"gitId":"blank-bank"},"content":"            } catch (DeadlineParameterExceptions e){"},{"lineNumber":207,"author":{"gitId":"blank-bank"},"content":"                UI.DeadlineParameterErrorMessage();"},{"lineNumber":208,"author":{"gitId":"blank-bank"},"content":"            } catch (InvalidIndexExceptions e){"},{"lineNumber":209,"author":{"gitId":"blank-bank"},"content":"                UI.InvalidIndexErrorMessage();"},{"lineNumber":210,"author":{"gitId":"blank-bank"},"content":"            } catch (DateTimeParseException e){"},{"lineNumber":211,"author":{"gitId":"blank-bank"},"content":"                UI.InvalidDateErrorMessage(line);"},{"lineNumber":212,"author":{"gitId":"blank-bank"},"content":"            } catch (ParseException | IOException e){"},{"lineNumber":213,"author":{"gitId":"blank-bank"},"content":"                e.printStackTrace();"},{"lineNumber":214,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":215,"author":{"gitId":"blank-bank"},"content":"            UI.printLine();"},{"lineNumber":216,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":217,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":219,"author":{"gitId":"blank-bank"},"content":"}"},{"lineNumber":220,"author":{"gitId":"blank-bank"},"content":""}],"authorContributionMap":{"blank-bank":220}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import duke.items.Deadline;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import duke.items.Event;"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import duke.items.Task;"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import duke.items.Todo;"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":" * Class in charge of file IO"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":" */"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"public class Storage {"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"     * Handles the file IO process"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"    public static void fileHandling(){"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"            loadFile();"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"            createFile();"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"     * Obtains past list records from list.txt to load them into current list of tasks"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"     * @param line  Each line in saved records (list.txt)"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"    public static void loadTask(String line){"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"        String[] arr \u003d line.split(\"\\t\");"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"        switch(arr[0]){"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"        case (\"T\"):"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"            Todo current1 \u003d new Todo(arr[2]);"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"            if (arr[1].equals(\"true\")) {"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"                current1.setDone();"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"            Task.addTask(current1);"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"        case (\"D\"):"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"            Deadline current2 \u003d new Deadline(arr[2], arr[3]);"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"            if (arr[1].equals(\"true\")) {"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"                current2.setDone();"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"            Task.addTask(current2);"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"        case (\"E\"):"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"            Event current3 \u003d new Event(arr[2], arr[3]);"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"            if (arr[1].equals(\"true\")) {"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"                current3.setDone();"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"            Task.addTask(current3);"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"     * Reads input from the file list.txt"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"     * @throws FileNotFoundException  If file does not exist"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"    public static void loadFile() throws FileNotFoundException {"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"        File f \u003d new File(\"list.txt\"); // create a File for the given file path"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"        while (s.hasNext()) {"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"            loadTask(s.nextLine());"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"     * Write every task that exists within the Task list into the given format in list.txt"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"     * @throws IOException  If write errors occurs"},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"    public static void writeToFile() throws IOException {"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"        createFile();"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"        FileWriter fw \u003d new FileWriter(\"list.txt\");"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":"        for (int i\u003d0; i\u003cTask.getNumOfTasks(); i++) {"},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"            ArrayList\u003cTask\u003e buffer \u003d Task.getList();"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"            switch (buffer.get(i).getType()) {"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":"            case (\"T\"):"},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"                fw.write(buffer.get(i).getType() + \"\\t\" + buffer.get(i).isDone() + \"\\t\" + buffer.get(i).getDescription() + \"\\n\");"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"                break;"},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":"            case (\"D\"):"},{"lineNumber":93,"author":{"gitId":"blank-bank"},"content":"                Deadline temp1 \u003d (Deadline)(buffer.get(i));"},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":"                fw.write(buffer.get(i).getType() + \"\\t\" + buffer.get(i).isDone() + \"\\t\" + buffer.get(i).getDescription() + \"\\t\" + temp1.getBy() + \"\\n\");"},{"lineNumber":95,"author":{"gitId":"blank-bank"},"content":"                break;"},{"lineNumber":96,"author":{"gitId":"blank-bank"},"content":"            case (\"E\"):"},{"lineNumber":97,"author":{"gitId":"blank-bank"},"content":"                Event temp2 \u003d (Event) (buffer.get(i));"},{"lineNumber":98,"author":{"gitId":"blank-bank"},"content":"                fw.write(buffer.get(i).getType() + \"\\t\" + buffer.get(i).isDone() + \"\\t\" + buffer.get(i).getDescription() + \"\\t\" + temp2.getAt() + \"\\n\");"},{"lineNumber":99,"author":{"gitId":"blank-bank"},"content":"                break;"},{"lineNumber":100,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"blank-bank"},"content":"        fw.close();"},{"lineNumber":103,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":105,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"blank-bank"},"content":"     * Creates file if file does not exist"},{"lineNumber":107,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":108,"author":{"gitId":"blank-bank"},"content":"     * @throws IllegalArgumentException  If input errors occur"},{"lineNumber":109,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"blank-bank"},"content":"    public static void createFile(){"},{"lineNumber":111,"author":{"gitId":"blank-bank"},"content":"        try {"},{"lineNumber":112,"author":{"gitId":"blank-bank"},"content":"            File myObj \u003d new File(\"list.txt\");"},{"lineNumber":113,"author":{"gitId":"blank-bank"},"content":"            if (myObj.createNewFile()) {"},{"lineNumber":114,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"File created: \" + myObj.getName());"},{"lineNumber":115,"author":{"gitId":"blank-bank"},"content":"            } else {"},{"lineNumber":116,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"File is overwritten.\");"},{"lineNumber":117,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"blank-bank"},"content":"        } catch (IOException e) {"},{"lineNumber":119,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":120,"author":{"gitId":"blank-bank"},"content":"            e.printStackTrace();"},{"lineNumber":121,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":124,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":125,"author":{"gitId":"blank-bank"},"content":"}"},{"lineNumber":126,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":127,"author":{"gitId":"blank-bank"},"content":""}],"authorContributionMap":{"blank-bank":127}},{"path":"src/main/java/duke/main/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import duke.items.Task;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import java.text.ParseException;"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":" * Class in charge of UI printing"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":" */"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"public class UI {"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    private static final String DEADLINE_TEMPLATE \u003d \"deadline \u003ctask\u003e /by \u003cYYYY-MM-DD\u003e\";"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"    private static final String EVENT_TEMPLATE \u003d \"event \u003ctask\u003e /at \u003cYYYY-MM-DD\u003e\";"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    private static final String TODO_TEMPLATE \u003d \"todo read book\";"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"    private static final String DATE_TEMPLATE \u003d \"\u003cYYYY-MM-DD\u003e\";"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    public static void printLine() {"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"     * Printing the output when using the list function"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"    public static void listPreamble() {"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"        if (Task.getNumOfTasks() !\u003d 0){"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"    public static void findPreamble() {"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"        if (Task.getNumOfTasks() !\u003d 0){"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"        else {"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"There are no matching task in your list:\");"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"     * Prints the updated number of tasks in list"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"    public static void listUpdate() {"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"        if (Task.getNumOfTasks() \u003d\u003d 0){"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"There are no tasks in your list\");"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"        else {"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"Now you have \" + Task.getNumOfTasks() + \" tasks in the list.\");"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"     * Prints the welcome message."},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"    public static void welcomeMessage(){"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Hello! I\u0027m duke.main.Duke\\nWhat can I do for you?\");"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"     * Error message for invalid commands"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"    public static void InvalidCommandErrorMessage(){"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\" ☹ OOPS!!! Invalid Command :-(\");"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"     * Error message for too little input parameters"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"    public static void InvalidParameterLengthErrorMessage(String line){"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\" ☹ OOPS!!! Insufficient number of inputs for command: \" + line.split(\" \")[0]);"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\" Example inputs:\");"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"        switch (line.split(\" \")[0]){"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"        case (\"deadline\"):"},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\" \\t \" + DEADLINE_TEMPLATE);"},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"        case (\"event\"):"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\" \\t \" + EVENT_TEMPLATE);"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"        case (\"todo\"):"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\" \\t \" + TODO_TEMPLATE);"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"blank-bank"},"content":"     * Error message for invalid date format"},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"blank-bank"},"content":"    public static void InvalidDateErrorMessage(String line){"},{"lineNumber":96,"author":{"gitId":"blank-bank"},"content":"        String[] arr \u003d line.split(\" \");"},{"lineNumber":97,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\" ☹ OOPS!!! Invalid format for date: \" + arr[arr.length-1]);"},{"lineNumber":98,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\" Input format:\");"},{"lineNumber":99,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\" \\t \" + DATE_TEMPLATE);"},{"lineNumber":100,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":102,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"blank-bank"},"content":"     * Error message when the /at indicator is not present when event command is used"},{"lineNumber":104,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"blank-bank"},"content":"    public static void EventParameterErrorMessage(){"},{"lineNumber":106,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\" ☹ OOPS!!! For \\\"event\\\" command please input \\\"/at\\\"\");"},{"lineNumber":107,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":109,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"blank-bank"},"content":"     * Error message when the /by indicator is not present when deadline command is used"},{"lineNumber":111,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"blank-bank"},"content":"    public static void DeadlineParameterErrorMessage(){"},{"lineNumber":113,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\" ☹ OOPS!!! For \\\"event\\\" command please input \\\"/by\\\"\");"},{"lineNumber":114,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":116,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"blank-bank"},"content":"     * Error message when the the integer parameter is out of range"},{"lineNumber":118,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"blank-bank"},"content":"    public static void InvalidIndexErrorMessage(){"},{"lineNumber":120,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\" ☹ OOPS!!! Index is out of range\");"},{"lineNumber":121,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":123,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"blank-bank"},"content":"     * Prints the goodbye message"},{"lineNumber":125,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"blank-bank"},"content":"    public static void byeMessage(){"},{"lineNumber":127,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":128,"author":{"gitId":"blank-bank"},"content":"        UI.printLine();"},{"lineNumber":129,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":131,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":132,"author":{"gitId":"blank-bank"},"content":"     * Returns a String in the formatted version of the date input"},{"lineNumber":133,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":134,"author":{"gitId":"blank-bank"},"content":"     * @param date date in the YYYY-MM-DD format"},{"lineNumber":135,"author":{"gitId":"blank-bank"},"content":"     * @return String in the MMM-DD-YYYY date format"},{"lineNumber":136,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"blank-bank"},"content":"    public static String convertDateToStringFormat(String date) throws ParseException{"},{"lineNumber":138,"author":{"gitId":"blank-bank"},"content":"        LocalDate myDateObj \u003d LocalDate.parse(date);"},{"lineNumber":139,"author":{"gitId":"blank-bank"},"content":"        DateTimeFormatter myFormatObj \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy \");"},{"lineNumber":140,"author":{"gitId":"blank-bank"},"content":"        return myDateObj.format(myFormatObj);"},{"lineNumber":141,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":143,"author":{"gitId":"blank-bank"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"blank-bank"},"content":"     * Returns a LocalDate object based on the String input"},{"lineNumber":145,"author":{"gitId":"blank-bank"},"content":"     *"},{"lineNumber":146,"author":{"gitId":"blank-bank"},"content":"     * @param input date in the MMM-DD-YYYY format"},{"lineNumber":147,"author":{"gitId":"blank-bank"},"content":"     * @return LocalDate object"},{"lineNumber":148,"author":{"gitId":"blank-bank"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"blank-bank"},"content":"    public static LocalDate stringPatternToDate(String input) throws ParseException {"},{"lineNumber":150,"author":{"gitId":"blank-bank"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM-d-yyyy \");"},{"lineNumber":151,"author":{"gitId":"blank-bank"},"content":"        return LocalDate.parse(input, formatter);"},{"lineNumber":152,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":154,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":154}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"java -classpath ..\\bin duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":20,"blank-bank":1}}]
