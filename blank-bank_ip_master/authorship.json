[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"# duke.main.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update IntelliJ to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"### On IntelliJ version 2020.3.1 (latest) and beyond"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into IntelliJ as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"1. After that, locate the `src/main/java/duke.main.Duke.java` file, right-click it, and choose `Run duke.main.Duke.main()`. If the setup is correct, you should see something like the output below."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"-":24,"blank-bank":2}},{"path":"src/main/java/duke/exceptions/DeadlineParameterExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class DeadlineParameterExceptions extends Exception{"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":4}},{"path":"src/main/java/duke/exceptions/EventParameterExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class EventParameterExceptions extends Exception{"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":4}},{"path":"src/main/java/duke/exceptions/InvalidCommandExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class InvalidCommandExceptions extends Exception{"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":4}},{"path":"src/main/java/duke/exceptions/InvalidIndexExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class InvalidIndexExceptions extends Exception{"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":4}},{"path":"src/main/java/duke/exceptions/InvalidParameterLengthExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class InvalidParameterLengthExceptions extends Exception{"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":4}},{"path":"src/main/java/duke/items/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.items;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"    protected String by;"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"    public Deadline(String description, String byInput) {"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"        this.by \u003d byInput;"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"    public void setBy(String byInput) {"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"        this.by \u003d byInput;"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"    public String getBy() {"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"        return this.by;"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"    public String getType() {"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"        return \"D\";"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"    public void print(){"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"        if (this.isDone) {"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"[D][\\u2713] \" + description + \" (by: \" + by + \")\");"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"[D][\\u2718] \" + description + \" (by: \" + by + \")\");"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":29}},{"path":"src/main/java/duke/items/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.items;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"public class Event extends Task {"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"    private String at;"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"    public Event(String description, String atInput) {"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"        this.at \u003d atInput;"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"    public void setAt(String atInput) {"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"        this.at \u003d atInput;"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"    public String getAt() {"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"        return this.at;"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"    public String getType() {"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"        return \"E\";"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"    public void print(){"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"        if (this.isDone) {"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"[E][\\u2713] \" + description + \" (at: \" + at + \")\" );"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"        } else {"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"[E][\\u2718] \" + description + \" (at: \" + at + \")\" );"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":30}},{"path":"src/main/java/duke/items/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.items;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import duke.exceptions.InvalidIndexExceptions;"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"    private static int numOfTasks \u003d 0;"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"    protected String description;"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"    protected static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    public static ArrayList getList(){"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"        return list;"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"    public static int getNumOfTasks() {"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"        return numOfTasks;"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"    public static void printList(){"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"        for (int i \u003d0; i\u003cnumOfTasks;i++) {"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"            System.out.print(i+1 + \".\");"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"            list.get(i).print();"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"    public static void addTask(Task task) {"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"        list.add(task);"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"        numOfTasks++;"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"    public static void deleteTask(int index) {"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"        numOfTasks--;"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"        System.out.print(\"  \");"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"        list.get(index).print();"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"        list.remove(index);"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Now you have \" + numOfTasks + \" tasks in the list.\");"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"    public static void setDone(int index) throws InvalidIndexExceptions{"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"        if (index \u003e\u003d numOfTasks){"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"            throw new InvalidIndexExceptions();"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"        list.get(index).isDone \u003d true;"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"[\\u2713] \" + list.get(index).getDescription());"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"    public Task(String description) {"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"        this.description \u003d description;"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"        this.isDone \u003d false;"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"    public void print(){"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"        if (this.isDone) {"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"[T][\\u2713] \" + description );"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"        } else {"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"[T][\\u2718] \" + description );"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"    public String getDescription() {"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"        return description;"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"    public void setDescription(String description) {"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"        this.description \u003d description;"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"    public String getType() {"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"        return \"T\";"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"    public boolean isDone() {return this.isDone;}"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"    public void setDone() {this.isDone \u003d true;};"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":70}},{"path":"src/main/java/duke/items/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.items;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"    public Todo(String description) {"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":7}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import duke.exceptions.*;"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import duke.items.*;"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"import static duke.main.Utils.createFile;"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"import static duke.main.Utils.loadFile;"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"    public static void main(String[] args) {"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"        Task[] list \u003d new Task[100];"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"        int taskInList \u003d 0;"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"        Utils.welcomeMessage();"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"        Utils.printLine();"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"            loadFile();"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"            createFile();"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"        while (true) {"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"            String line;"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"            line \u003d in.nextLine();"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"            Utils.printLine();"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"            try {"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"                if (Utils.commandHandler(line) \u003d\u003d -1) {"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"                    break;"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"                }"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"            } catch (InvalidCommandExceptions e) {"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"            } catch (InvalidParameterLengthExceptions | DeadlineParameterExceptions"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"                    | EventParameterExceptions e){"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\" ☹ OOPS!!! Invalid parameter input for command: \" + line.split(\" \")[0]);"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"            } catch (InvalidIndexExceptions e){"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\" ☹ OOPS!!! Index is out of range\");"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"            } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"                e.printStackTrace();"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"            Utils.printLine();"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"        Utils.printLine();"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"        Utils.printLine();"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":49}},{"path":"src/main/java/duke/main/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import duke.exceptions.*;"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import duke.items.*;"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"public class Utils {"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"    private static String[] VALID_COMMANDS \u003d {\"bye\", \"done\", \"list\", \"todo\", \"event\", \"deadline\", \"delete\"};"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"    public static void printLine() {"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"____________________________________________________________\");"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"    public static void welcomeMessage(){"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Hello! I\u0027m duke.main.Duke\\nWhat can I do for you?\");"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"    public static int validateCommand(String line){"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"        if ((Arrays.asList(VALID_COMMANDS).contains(line))) {"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"            return 1;"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"            return 0;"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"    public static int validateParameter(String line) {"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"        int indexOfSlash \u003d -1;"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"        if (line.split(\" \")[0].equals(\"deadline\")) {"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"            indexOfSlash \u003d line.indexOf(\"/by\");"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"        } else if (line.split(\" \")[0].equals(\"event\")) {"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"            indexOfSlash \u003d line.indexOf(\"/at\");"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"        return indexOfSlash;"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"    public static void createFile(){"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"            File myObj \u003d new File(\"list.txt\");"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"            if (myObj.createNewFile()) {"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"File created: \" + myObj.getName());"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"            } else {"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"File already exists.\");"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"        } catch (IOException e) {"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"            e.printStackTrace();"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"    public static void writeToFile() throws IOException {"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"        createFile();"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"        FileWriter fw \u003d new FileWriter(\"list.txt\");"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"        for (int i\u003d0; i\u003cTask.getNumOfTasks(); i++) {"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"            ArrayList\u003cTask\u003e buffer \u003d Task.getList();"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"            switch (buffer.get(i).getType()) {"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"            case (\"T\"):"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"                fw.write(buffer.get(i).getType() + \"\\t\" + buffer.get(i).isDone() + \"\\t\" + buffer.get(i).getDescription() + \"\\n\");"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"                break;"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"            case (\"D\"):"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"                Deadline temp1 \u003d (Deadline)(buffer.get(i));"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"                fw.write(buffer.get(i).getType() + \"\\t\" + buffer.get(i).isDone() + \"\\t\" + buffer.get(i).getDescription() + \"\\t\" + temp1.getBy() + \"\\n\");"},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"                break;"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"            case (\"E\"):"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"                Event temp2 \u003d (Event) (buffer.get(i));"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"                fw.write(buffer.get(i).getType() + \"\\t\" + buffer.get(i).isDone() + \"\\t\" + buffer.get(i).getDescription() + \"\\t\" + temp2.getAt() + \"\\n\");"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"                break;"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":"        fw.close();"},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"    public static void loadFile() throws FileNotFoundException {"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"        File f \u003d new File(\"list.txt\"); // create a File for the given file path"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":"        while (s.hasNext()) {"},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"            loadTask(s.nextLine());"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"    public static void loadTask(String line){"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"        String[] arr \u003d line.split(\"\\t\");"},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":"        switch(arr[0]){"},{"lineNumber":93,"author":{"gitId":"blank-bank"},"content":"        case (\"T\"):"},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":"            Todo current1 \u003d new Todo(arr[2]);"},{"lineNumber":95,"author":{"gitId":"blank-bank"},"content":"            if (arr[1].equals(\"true\")) {"},{"lineNumber":96,"author":{"gitId":"blank-bank"},"content":"                current1.setDone();"},{"lineNumber":97,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"blank-bank"},"content":"            Task.addTask(current1);"},{"lineNumber":99,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":100,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":101,"author":{"gitId":"blank-bank"},"content":"        case (\"D\"):"},{"lineNumber":102,"author":{"gitId":"blank-bank"},"content":"            Deadline current2 \u003d new Deadline(arr[2], arr[3]);"},{"lineNumber":103,"author":{"gitId":"blank-bank"},"content":"            if (arr[1].equals(\"true\")) {"},{"lineNumber":104,"author":{"gitId":"blank-bank"},"content":"                current2.setDone();"},{"lineNumber":105,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"blank-bank"},"content":"            Task.addTask(current2);"},{"lineNumber":107,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":108,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":109,"author":{"gitId":"blank-bank"},"content":"        case (\"E\"):"},{"lineNumber":110,"author":{"gitId":"blank-bank"},"content":"            Event current3 \u003d new Event(arr[2], arr[3]);"},{"lineNumber":111,"author":{"gitId":"blank-bank"},"content":"            if (arr[1].equals(\"true\")) {"},{"lineNumber":112,"author":{"gitId":"blank-bank"},"content":"                current3.setDone();"},{"lineNumber":113,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":114,"author":{"gitId":"blank-bank"},"content":"            Task.addTask(current3);"},{"lineNumber":115,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":116,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":117,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":120,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":121,"author":{"gitId":"blank-bank"},"content":"    public static int commandHandler(String line) throws InvalidCommandExceptions,InvalidParameterLengthExceptions,"},{"lineNumber":122,"author":{"gitId":"blank-bank"},"content":"            DeadlineParameterExceptions, EventParameterExceptions, InvalidIndexExceptions, IOException {"},{"lineNumber":123,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":124,"author":{"gitId":"blank-bank"},"content":"        String[] arr;"},{"lineNumber":125,"author":{"gitId":"blank-bank"},"content":"        arr \u003d line.split(\" \");"},{"lineNumber":126,"author":{"gitId":"blank-bank"},"content":"        if (validateCommand(arr[0]) \u003d\u003d 0){"},{"lineNumber":127,"author":{"gitId":"blank-bank"},"content":"            throw new InvalidCommandExceptions();"},{"lineNumber":128,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"blank-bank"},"content":"        switch (arr[0]) {"},{"lineNumber":130,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":131,"author":{"gitId":"blank-bank"},"content":"        case (\"bye\"):"},{"lineNumber":132,"author":{"gitId":"blank-bank"},"content":"            writeToFile();"},{"lineNumber":133,"author":{"gitId":"blank-bank"},"content":"            return -1;"},{"lineNumber":134,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":135,"author":{"gitId":"blank-bank"},"content":"        case (\"list\"):"},{"lineNumber":136,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":137,"author":{"gitId":"blank-bank"},"content":"            Task.printList();"},{"lineNumber":138,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":139,"author":{"gitId":"blank-bank"},"content":"        case (\"done\"):"},{"lineNumber":140,"author":{"gitId":"blank-bank"},"content":"            Task.setDone(Integer.parseInt(line.split(\" \")[1]) - 1);"},{"lineNumber":141,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":142,"author":{"gitId":"blank-bank"},"content":"        case (\"delete\"):"},{"lineNumber":143,"author":{"gitId":"blank-bank"},"content":"            Task.deleteTask(Integer.parseInt(line.split(\" \")[1]) - 1);"},{"lineNumber":144,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":145,"author":{"gitId":"blank-bank"},"content":"        default:"},{"lineNumber":146,"author":{"gitId":"blank-bank"},"content":"            int indexOfSpace \u003d line.indexOf(\" \");"},{"lineNumber":147,"author":{"gitId":"blank-bank"},"content":"            if (line.split(\" \").length \u003c 2){"},{"lineNumber":148,"author":{"gitId":"blank-bank"},"content":"                throw new InvalidParameterLengthExceptions();"},{"lineNumber":149,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":150,"author":{"gitId":"blank-bank"},"content":"            String type \u003d line.substring(0, indexOfSpace);"},{"lineNumber":151,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":152,"author":{"gitId":"blank-bank"},"content":"            switch (type) {"},{"lineNumber":153,"author":{"gitId":"blank-bank"},"content":"            case (\"todo\"):"},{"lineNumber":154,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":155,"author":{"gitId":"blank-bank"},"content":"                Task.addTask(new Todo(line.substring(indexOfSpace + 1)));"},{"lineNumber":156,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"  [T][\\u2718] \" + line.substring(indexOfSpace + 1));"},{"lineNumber":157,"author":{"gitId":"blank-bank"},"content":"                break;"},{"lineNumber":158,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":159,"author":{"gitId":"blank-bank"},"content":"            case (\"deadline\"):"},{"lineNumber":160,"author":{"gitId":"blank-bank"},"content":"                int indexOfSlash \u003d validateParameter(line);"},{"lineNumber":161,"author":{"gitId":"blank-bank"},"content":"                if (indexOfSlash \u003d\u003d -1){"},{"lineNumber":162,"author":{"gitId":"blank-bank"},"content":"                    throw new DeadlineParameterExceptions();"},{"lineNumber":163,"author":{"gitId":"blank-bank"},"content":"                }"},{"lineNumber":164,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":165,"author":{"gitId":"blank-bank"},"content":"                String item \u003d line.substring(indexOfSpace + 1, indexOfSlash - 1);"},{"lineNumber":166,"author":{"gitId":"blank-bank"},"content":"                String extra \u003d line.substring(indexOfSlash + 4);"},{"lineNumber":167,"author":{"gitId":"blank-bank"},"content":"                Task.addTask(new Deadline(item, extra));"},{"lineNumber":168,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"  [D][\\u2718] \" + item + \" (by: \" + extra + \")\");"},{"lineNumber":169,"author":{"gitId":"blank-bank"},"content":"                break;"},{"lineNumber":170,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":171,"author":{"gitId":"blank-bank"},"content":"            case (\"event\"):"},{"lineNumber":172,"author":{"gitId":"blank-bank"},"content":"                indexOfSlash \u003d validateParameter(line);"},{"lineNumber":173,"author":{"gitId":"blank-bank"},"content":"                if ( indexOfSlash \u003d\u003d -1){"},{"lineNumber":174,"author":{"gitId":"blank-bank"},"content":"                    throw new EventParameterExceptions();"},{"lineNumber":175,"author":{"gitId":"blank-bank"},"content":"                }"},{"lineNumber":176,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":177,"author":{"gitId":"blank-bank"},"content":"                item \u003d line.substring(indexOfSpace + 1, indexOfSlash - 1);"},{"lineNumber":178,"author":{"gitId":"blank-bank"},"content":"                extra \u003d line.substring(indexOfSlash + 4);"},{"lineNumber":179,"author":{"gitId":"blank-bank"},"content":"                Task.addTask(new Event(item, extra));"},{"lineNumber":180,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"  [E][\\u2718] \" + item + \" (at: \" + extra + \")\");"},{"lineNumber":181,"author":{"gitId":"blank-bank"},"content":"                break;"},{"lineNumber":182,"author":{"gitId":"blank-bank"},"content":"            default:"},{"lineNumber":183,"author":{"gitId":"blank-bank"},"content":"                System.out.println(9);"},{"lineNumber":184,"author":{"gitId":"blank-bank"},"content":"                throw new InvalidCommandExceptions();"},{"lineNumber":185,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":186,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"Now you have \" + Task.getNumOfTasks() + \" tasks in the list.\");"},{"lineNumber":187,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"blank-bank"},"content":"        return 1;"},{"lineNumber":189,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":191,"author":{"gitId":"blank-bank"},"content":"}"},{"lineNumber":192,"author":{"gitId":"blank-bank"},"content":""}],"authorContributionMap":{"blank-bank":192}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"java -classpath ..\\bin duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":20,"blank-bank":1}}]
