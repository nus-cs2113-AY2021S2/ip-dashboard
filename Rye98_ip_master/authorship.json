[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"# Duke "},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"Duke is a personal task planner. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"## Running in command line"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"Load the iP.jar file."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"### Using Duke"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"1. If the setup is correct, you should see something like the output below."},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":"\t  ____________________________________________________________"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"\t  Hello! I\u0027m Duke. "},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"\t  What can I do for you? "},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"\t  ____________________________________________________________"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"   "},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"2. The commands accepted by Duke are `list`, `done`, `delete`, `find`. To add a task for Duke to track, use the command words `todo`, `deadline`, and `event`. "},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"    1. A `todo` task will require a simple task description. Duke echos upon receiving a `todo` task successfully."},{"lineNumber":23,"author":{"gitId":"Rye98"},"content":"   ```"},{"lineNumber":24,"author":{"gitId":"Rye98"},"content":"   todo read book"},{"lineNumber":25,"author":{"gitId":"Rye98"},"content":"\t    ____________________________________________________________"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":"\t    Got it. I\u0027ve added this task: "},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"\t    [T][✘] read book"},{"lineNumber":28,"author":{"gitId":"Rye98"},"content":"\t    Now you have 1 tasks in the list."},{"lineNumber":29,"author":{"gitId":"Rye98"},"content":"\t    ____________________________________________________________"},{"lineNumber":30,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":31,"author":{"gitId":"Rye98"},"content":"   ```"},{"lineNumber":32,"author":{"gitId":"Rye98"},"content":"   2. A `deadline` task will require the user to enter a task description, as well as a deadline to when the task should be completed by. Use `/by` to separate the task description from the deadline. For example:"},{"lineNumber":33,"author":{"gitId":"Rye98"},"content":"   ```"},{"lineNumber":34,"author":{"gitId":"Rye98"},"content":"   deadline return book /by Tuesday 6pm"},{"lineNumber":35,"author":{"gitId":"Rye98"},"content":"\t    ____________________________________________________________"},{"lineNumber":36,"author":{"gitId":"Rye98"},"content":"\t    [D][✘] return book (by: Tuesday 6pm)"},{"lineNumber":37,"author":{"gitId":"Rye98"},"content":"\t    Now you have 2 tasks in the list."},{"lineNumber":38,"author":{"gitId":"Rye98"},"content":"\t    ____________________________________________________________"},{"lineNumber":39,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":40,"author":{"gitId":"Rye98"},"content":"   ```"},{"lineNumber":41,"author":{"gitId":"Rye98"},"content":"   3.  A `event` task will require the user to enter a task description, as well as the timing for the event. Use `/at` to separate the task description from the event timing. For example:"},{"lineNumber":42,"author":{"gitId":"Rye98"},"content":"   ```"},{"lineNumber":43,"author":{"gitId":"Rye98"},"content":"   event family dinner /at Friday 6-7pm"},{"lineNumber":44,"author":{"gitId":"Rye98"},"content":"\t    ____________________________________________________________"},{"lineNumber":45,"author":{"gitId":"Rye98"},"content":"\t    [E][✘] family dinner (at: Friday 6-7pm)"},{"lineNumber":46,"author":{"gitId":"Rye98"},"content":"\t    Now you have 3 tasks in the list."},{"lineNumber":47,"author":{"gitId":"Rye98"},"content":"\t    ____________________________________________________________"},{"lineNumber":48,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":49,"author":{"gitId":"Rye98"},"content":"   ```"},{"lineNumber":50,"author":{"gitId":"Rye98"},"content":"   4. Using the command word `list` will cause Duke to list out all the current tasks saved."},{"lineNumber":51,"author":{"gitId":"Rye98"},"content":"   ```"},{"lineNumber":52,"author":{"gitId":"Rye98"},"content":"   list"},{"lineNumber":53,"author":{"gitId":"Rye98"},"content":"\t   ____________________________________________________________"},{"lineNumber":54,"author":{"gitId":"Rye98"},"content":"\t   Here are the tasks in your list:"},{"lineNumber":55,"author":{"gitId":"Rye98"},"content":"\t   01. [T][✘] read book"},{"lineNumber":56,"author":{"gitId":"Rye98"},"content":"\t   02. [D][✘] return book (by: Tuesday 6pm)"},{"lineNumber":57,"author":{"gitId":"Rye98"},"content":"\t   03. [E][✘] family dinner (at: Friday 6-7pm)"},{"lineNumber":58,"author":{"gitId":"Rye98"},"content":"\t   ____________________________________________________________"},{"lineNumber":59,"author":{"gitId":"Rye98"},"content":"   ```"},{"lineNumber":60,"author":{"gitId":"Rye98"},"content":"   5. Using the command word `done` will cause Duke to mark one of the tasks as completed. The status of the task will change from a ✘ to a ✓. When using the `done` command word, the index of the task which is to be marked as done must also be given. For example:"},{"lineNumber":61,"author":{"gitId":"Rye98"},"content":"   ```"},{"lineNumber":62,"author":{"gitId":"Rye98"},"content":"   done 2"},{"lineNumber":63,"author":{"gitId":"Rye98"},"content":"\t    ____________________________________________________________"},{"lineNumber":64,"author":{"gitId":"Rye98"},"content":"\t    Nice! I\u0027ve marked this task as done: "},{"lineNumber":65,"author":{"gitId":"Rye98"},"content":"\t    02. [✓] return book"},{"lineNumber":66,"author":{"gitId":"Rye98"},"content":"\t    ____________________________________________________________"},{"lineNumber":67,"author":{"gitId":"Rye98"},"content":"   ```"},{"lineNumber":68,"author":{"gitId":"Rye98"},"content":"   6. Using the command word `delete` will cause Duke to delete one of the tasks saved. Similar to `done`, the index of the task to be deleted must also be given. For example:"},{"lineNumber":69,"author":{"gitId":"Rye98"},"content":"   ```"},{"lineNumber":70,"author":{"gitId":"Rye98"},"content":"   delete 1"},{"lineNumber":71,"author":{"gitId":"Rye98"},"content":"\t    ____________________________________________________________"},{"lineNumber":72,"author":{"gitId":"Rye98"},"content":"\t    Noted. I have removed this task. "},{"lineNumber":73,"author":{"gitId":"Rye98"},"content":"\t    [T][✘] read book"},{"lineNumber":74,"author":{"gitId":"Rye98"},"content":"\t    You now have 2tasks in the list."},{"lineNumber":75,"author":{"gitId":"Rye98"},"content":"\t    ____________________________________________________________"},{"lineNumber":76,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":77,"author":{"gitId":"Rye98"},"content":"   ```"},{"lineNumber":78,"author":{"gitId":"Rye98"},"content":"   at this point, using `list` will cause Duke to reply with the following:"},{"lineNumber":79,"author":{"gitId":"Rye98"},"content":"   ```"},{"lineNumber":80,"author":{"gitId":"Rye98"},"content":"   list"},{"lineNumber":81,"author":{"gitId":"Rye98"},"content":"\t  ____________________________________________________________"},{"lineNumber":82,"author":{"gitId":"Rye98"},"content":"\t  Here are the tasks in your list:"},{"lineNumber":83,"author":{"gitId":"Rye98"},"content":"\t  01. [D][✓] return book (by: Tuesday 6pm)"},{"lineNumber":84,"author":{"gitId":"Rye98"},"content":"\t  02. [E][✘] family dinner (at: Friday 6-7pm)"},{"lineNumber":85,"author":{"gitId":"Rye98"},"content":"\t  ____________________________________________________________"},{"lineNumber":86,"author":{"gitId":"Rye98"},"content":"   ```"},{"lineNumber":87,"author":{"gitId":"Rye98"},"content":"   7. To properly terminate Duke, use the command word `bye`."},{"lineNumber":88,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":89,"author":{"gitId":"Rye98"},"content":"   bye"},{"lineNumber":90,"author":{"gitId":"Rye98"},"content":"\t  ____________________________________________________________"},{"lineNumber":91,"author":{"gitId":"Rye98"},"content":"\t  Bye. Hope to see you again soon!"},{"lineNumber":92,"author":{"gitId":"Rye98"},"content":"\t  ____________________________________________________________"},{"lineNumber":93,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":94,"author":{"gitId":"Rye98"},"content":"3. If Duke has been used previously, a text file named `duke.txt` would be present in the same folder of the iP.jar file. When running Duke again, the contents of the `duke.txt` file would be read, and the tasks would be loaded automatically. If there are tasks loaded, using the command word `list` would cause the tasks to be shown. For example\""},{"lineNumber":95,"author":{"gitId":"Rye98"},"content":"```"},{"lineNumber":96,"author":{"gitId":"Rye98"},"content":"\t____________________________________________________________"},{"lineNumber":97,"author":{"gitId":"Rye98"},"content":"\tHello! I\u0027m Duke. "},{"lineNumber":98,"author":{"gitId":"Rye98"},"content":"\tWhat can I do for you? "},{"lineNumber":99,"author":{"gitId":"Rye98"},"content":"\t____________________________________________________________"},{"lineNumber":100,"author":{"gitId":"Rye98"},"content":"list"},{"lineNumber":101,"author":{"gitId":"Rye98"},"content":"\t____________________________________________________________"},{"lineNumber":102,"author":{"gitId":"Rye98"},"content":"\t Here are the tasks in your list:"},{"lineNumber":103,"author":{"gitId":"Rye98"},"content":"\t01. [D][✓] return book (by: Tuesday 6pm)"},{"lineNumber":104,"author":{"gitId":"Rye98"},"content":"\t02. [E][✘] family dinner (at: Friday 6-7pm)"},{"lineNumber":105,"author":{"gitId":"Rye98"},"content":"\t____________________________________________________________"},{"lineNumber":106,"author":{"gitId":"-"},"content":"```"}],"authorContributionMap":{"Rye98":96,"-":10}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"public class Deadline extends Task{"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"    private static String by;"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"    public Deadline(String description, String by){"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"        this.natureOfTask \u003d \"D\";"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"    public String getDeadline(){"},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"        return this.by;"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"    public String getSpecialDescription(){"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"        return this.getDeadline();"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"}"}],"authorContributionMap":{"Rye98":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"import Exceptions.IllegalCommandWordException;"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"import Exceptions.MissingDeadlineException;"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"import Exceptions.MissingEventTimeException;"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"    private static Storage storage \u003d new Storage();"},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"    private static TaskList tasks \u003d new TaskList();"},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"    private static Ui ui \u003d new Ui();"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"        ui.greetUser();"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":"            tasks.setupTasks();"},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"        } catch (FileNotFoundException | StringIndexOutOfBoundsException |"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"                MissingDeadlineException | MissingEventTimeException e) {"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"            System.out.println(\"Error when attempting to read duke.txt. No data will be read.\");"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":24,"author":{"gitId":"Rye98"},"content":"        String line;"},{"lineNumber":25,"author":{"gitId":"Rye98"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":"        line \u003d in.nextLine();"},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"        while(line.toLowerCase().equals(\"bye\") !\u003d true){"},{"lineNumber":28,"author":{"gitId":"Rye98"},"content":"            System.out.println(\"\\t\" + ui.SECTION_DIVIDER);"},{"lineNumber":29,"author":{"gitId":"Rye98"},"content":"            try {"},{"lineNumber":30,"author":{"gitId":"Rye98"},"content":"                Parser.handleInput(line);"},{"lineNumber":31,"author":{"gitId":"Rye98"},"content":"            } catch (IllegalCommandWordException e){"},{"lineNumber":32,"author":{"gitId":"Rye98"},"content":"                System.out.print(\"\\tInvalid input! Please start with a valid command word!\\n\");"},{"lineNumber":33,"author":{"gitId":"Rye98"},"content":"            } finally {"},{"lineNumber":34,"author":{"gitId":"Rye98"},"content":"                System.out.println(\"\\t\" + ui.SECTION_DIVIDER);"},{"lineNumber":35,"author":{"gitId":"Rye98"},"content":"                line \u003d in.nextLine();"},{"lineNumber":36,"author":{"gitId":"Rye98"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"Rye98"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"Rye98"},"content":"        ui.signOff();"},{"lineNumber":39,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":40,"author":{"gitId":"Rye98"},"content":"        Storage.saveTasksToFile();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Rye98":38,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"public class Event extends Task{"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"    private static String timeOfEvent;"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"    public Event(String description, String timing){"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"        timeOfEvent \u003d timing;"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"        this.natureOfTask \u003d \"E\";"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"    public String getTimeOfEvent(){"},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"        return this.timeOfEvent;"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"    public String getSpecialDescription(){"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"        return this.getTimeOfEvent();"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + timeOfEvent + \")\";"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"}"}],"authorContributionMap":{"Rye98":22}},{"path":"src/main/java/Exceptions/IllegalCommandWordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"package Exceptions;"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"public class IllegalCommandWordException extends Exception{"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"}"}],"authorContributionMap":{"Rye98":4}},{"path":"src/main/java/Exceptions/MissingDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"package Exceptions;"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"public class MissingDeadlineException extends Exception{"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"}"}],"authorContributionMap":{"Rye98":4}},{"path":"src/main/java/Exceptions/MissingEventTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"package Exceptions;"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"public class MissingEventTimeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"}"}],"authorContributionMap":{"Rye98":4}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"import Exceptions.IllegalCommandWordException;"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"import Exceptions.MissingDeadlineException;"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"import Exceptions.MissingEventTimeException;"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"    public Parser() {}"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"    private static final String COMMAND_WORDS \u003d \"list\" + \"done\" + \"todo\" + \"deadline\" + \"event\" + \"delete\" + \"find\";"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"    static void handleInput(String line) throws IllegalCommandWordException {"},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"        /**"},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"         * Handles the immediate input from the user."},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":"         *"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":"         * Priority given:"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"         * 1. List"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"         * 2. Done"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"         * 3. Delete"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":"         * 4. FInd"},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"         * 5. todo/deadline/event"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"         *"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"         * Throws an error if the command word is does not belong to any of the above."},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"         */"},{"lineNumber":23,"author":{"gitId":"Rye98"},"content":"        line \u003d line.trim();"},{"lineNumber":24,"author":{"gitId":"Rye98"},"content":"        String[] wordsEntered \u003d line.split(\" \");"},{"lineNumber":25,"author":{"gitId":"Rye98"},"content":"        if (!COMMAND_WORDS.contains(wordsEntered[0].toLowerCase())) {"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":"            throw new IllegalCommandWordException();"},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"        } else if (line.toLowerCase().equals(\"list\")){"},{"lineNumber":28,"author":{"gitId":"Rye98"},"content":"            TaskList.listTasks();"},{"lineNumber":29,"author":{"gitId":"Rye98"},"content":"        } else if (line.toLowerCase().contains(\"done\")){"},{"lineNumber":30,"author":{"gitId":"Rye98"},"content":"            TaskList.markTaskAsDone(line);"},{"lineNumber":31,"author":{"gitId":"Rye98"},"content":"        } else if (line.toLowerCase().contains(\"delete\")) {"},{"lineNumber":32,"author":{"gitId":"Rye98"},"content":"            TaskList.deleteTask(line);"},{"lineNumber":33,"author":{"gitId":"Rye98"},"content":"        } else if (line.toLowerCase().contains(\"find\")) {"},{"lineNumber":34,"author":{"gitId":"Rye98"},"content":"            TaskList.findTask(line);"},{"lineNumber":35,"author":{"gitId":"Rye98"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"Rye98"},"content":"            try {"},{"lineNumber":37,"author":{"gitId":"Rye98"},"content":"                TaskList.addTask(line);"},{"lineNumber":38,"author":{"gitId":"Rye98"},"content":"            } catch (MissingDeadlineException e) {"},{"lineNumber":39,"author":{"gitId":"Rye98"},"content":"                System.out.print(\"\\tSorry, please indicate a valid deadline!\\n\");"},{"lineNumber":40,"author":{"gitId":"Rye98"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":41,"author":{"gitId":"Rye98"},"content":"                System.out.print(\"\\tSorry, please check if sufficient inputs are given.\\n\" +"},{"lineNumber":42,"author":{"gitId":"Rye98"},"content":"                        \"\\tTODO: details\\n\" +"},{"lineNumber":43,"author":{"gitId":"Rye98"},"content":"                        \"\\tDeadline: details, deadline\\n\" +"},{"lineNumber":44,"author":{"gitId":"Rye98"},"content":"                        \"\\tEvent: details, time of event\\n\");"},{"lineNumber":45,"author":{"gitId":"Rye98"},"content":"            } catch (MissingEventTimeException e) {"},{"lineNumber":46,"author":{"gitId":"Rye98"},"content":"                System.out.print(\"\\tSorry, please indicate a valid event time!\\n\");"},{"lineNumber":47,"author":{"gitId":"Rye98"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"Rye98"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Rye98"},"content":"}"}],"authorContributionMap":{"Rye98":50}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"import java.io.FileWriter;"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"public class Storage {"},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"    public Storage() {}"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"    static void writeToFile(String filePath, String textToAdd) throws IOException {"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"        /**"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"         * Clears the content of the current"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"         * duke.txt file."},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"         * (also creates one if duke.txt does not exist)"},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"         */"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":"        fw.write(textToAdd);"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"        fw.close();"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":"    static void appendToFile(String filePath, String textToAppend) throws IOException {"},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"        /**"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"         * Adds in tasks from TaskList to duke.txt"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"         */"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"},{"lineNumber":23,"author":{"gitId":"Rye98"},"content":"        fw.write(textToAppend);"},{"lineNumber":24,"author":{"gitId":"Rye98"},"content":"        fw.close();"},{"lineNumber":25,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"    static void saveTasksToFile(){"},{"lineNumber":28,"author":{"gitId":"Rye98"},"content":"        /**"},{"lineNumber":29,"author":{"gitId":"Rye98"},"content":"         * Saves the tasks from lists to duke.txt"},{"lineNumber":30,"author":{"gitId":"Rye98"},"content":"         */"},{"lineNumber":31,"author":{"gitId":"Rye98"},"content":"        try{"},{"lineNumber":32,"author":{"gitId":"Rye98"},"content":"            writeToFile(\"duke.txt\", \"\");"},{"lineNumber":33,"author":{"gitId":"Rye98"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"Rye98"},"content":"            System.out.println(\"Something went wrong when attempting to reset duke.txt: \" + e.getMessage());"},{"lineNumber":35,"author":{"gitId":"Rye98"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"Rye98"},"content":"        for (Task t : TaskList.tasks) {"},{"lineNumber":37,"author":{"gitId":"Rye98"},"content":"            try {"},{"lineNumber":38,"author":{"gitId":"Rye98"},"content":"                String lineToWrite \u003d t.getNatureOfTask() + \" ~ \" + ((t.getIsDone())?\"1\":\"0\") +"},{"lineNumber":39,"author":{"gitId":"Rye98"},"content":"                        \" ~ \" + t.getDescription() + \" ~ \" + t.getSpecialDescription();"},{"lineNumber":40,"author":{"gitId":"Rye98"},"content":"                appendToFile(\"duke.txt\", lineToWrite + System.lineSeparator());"},{"lineNumber":41,"author":{"gitId":"Rye98"},"content":"            } catch (IOException e) {"},{"lineNumber":42,"author":{"gitId":"Rye98"},"content":"                System.out.println(\"Something went wrong when attempting to write duke.txt: \" + e.getMessage());"},{"lineNumber":43,"author":{"gitId":"Rye98"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"Rye98"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Rye98"},"content":"}"}],"authorContributionMap":{"Rye98":46}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"    private String description;"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"    private boolean isDone;"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"    public String natureOfTask;"},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"    public Task(String description){"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"        this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"    public String getDescription() {"},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"        return description;"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"    public String getStatusIcon() {"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"    public void markAsDone(){"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"        this.isDone \u003d true;"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":23,"author":{"gitId":"Rye98"},"content":"    public String getNatureOfTask(){"},{"lineNumber":24,"author":{"gitId":"Rye98"},"content":"        return this.natureOfTask;"},{"lineNumber":25,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"    public Boolean getIsDone(){"},{"lineNumber":28,"author":{"gitId":"Rye98"},"content":"        return this.isDone;"},{"lineNumber":29,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":31,"author":{"gitId":"Rye98"},"content":"    public String getSpecialDescription(){"},{"lineNumber":32,"author":{"gitId":"Rye98"},"content":"        return \"\";"},{"lineNumber":33,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":35,"author":{"gitId":"Rye98"},"content":"    public String toString(){"},{"lineNumber":36,"author":{"gitId":"Rye98"},"content":"        return String.format(\"[\" + this.getStatusIcon() + \"] \" + this.getDescription());"},{"lineNumber":37,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Rye98"},"content":"}"}],"authorContributionMap":{"Rye98":38}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"import Exceptions.MissingDeadlineException;"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"import Exceptions.MissingEventTimeException;"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList();"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":"    public TaskList() {}"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"    public static void addTask(String taskDescription) throws"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"            MissingDeadlineException, MissingEventTimeException {"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":"        /**"},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"         * Adds new tasks to TaskList."},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"         * Does a simple check for invalid input, if command word is given with no task description."},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"         */"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"        Task t;"},{"lineNumber":23,"author":{"gitId":"Rye98"},"content":"        if (taskDescription.contains(\"todo\")) {"},{"lineNumber":24,"author":{"gitId":"Rye98"},"content":"            if (taskDescription.length() \u003c 5) {"},{"lineNumber":25,"author":{"gitId":"Rye98"},"content":"                throw new IndexOutOfBoundsException();"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"            t \u003d new Todo(taskDescription.substring(5));"},{"lineNumber":28,"author":{"gitId":"Rye98"},"content":"            System.out.println(\"\\tGot it. I\u0027ve added this task: \");"},{"lineNumber":29,"author":{"gitId":"Rye98"},"content":"        } else if (taskDescription.contains(\"deadline\")) {"},{"lineNumber":30,"author":{"gitId":"Rye98"},"content":"            // Adds task as a Deadline"},{"lineNumber":31,"author":{"gitId":"Rye98"},"content":"            taskDescription.replace(\"deadline \", \"\");"},{"lineNumber":32,"author":{"gitId":"Rye98"},"content":"            int byIndex \u003d taskDescription.indexOf(\"/by \");"},{"lineNumber":33,"author":{"gitId":"Rye98"},"content":"            if (byIndex \u003d\u003d -1 || taskDescription.length() \u003c byIndex + 4) {"},{"lineNumber":34,"author":{"gitId":"Rye98"},"content":"                throw new MissingDeadlineException();"},{"lineNumber":35,"author":{"gitId":"Rye98"},"content":"            } else {"},{"lineNumber":36,"author":{"gitId":"Rye98"},"content":"                t \u003d new Deadline(taskDescription.substring(9, byIndex - 1), taskDescription.substring(byIndex + 4));"},{"lineNumber":37,"author":{"gitId":"Rye98"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"Rye98"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"Rye98"},"content":"            // Adds task as an Event."},{"lineNumber":40,"author":{"gitId":"Rye98"},"content":"            taskDescription.replace(\"event \", \"\");"},{"lineNumber":41,"author":{"gitId":"Rye98"},"content":"            int atIndex \u003d taskDescription.indexOf(\"/at \");"},{"lineNumber":42,"author":{"gitId":"Rye98"},"content":"            if (atIndex \u003d\u003d -1 || taskDescription.length() \u003c atIndex + 4) {"},{"lineNumber":43,"author":{"gitId":"Rye98"},"content":"                throw new MissingEventTimeException();"},{"lineNumber":44,"author":{"gitId":"Rye98"},"content":"            } else {"},{"lineNumber":45,"author":{"gitId":"Rye98"},"content":"                t \u003d new Event(taskDescription.substring(6, atIndex - 1), taskDescription.substring(atIndex + 4));"},{"lineNumber":46,"author":{"gitId":"Rye98"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"Rye98"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Rye98"},"content":"        tasks.add(t);"},{"lineNumber":49,"author":{"gitId":"Rye98"},"content":"        System.out.println(\"\\t\" + t);"},{"lineNumber":50,"author":{"gitId":"Rye98"},"content":"        System.out.println(\"\\tNow you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":51,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":53,"author":{"gitId":"Rye98"},"content":"    public static void markTaskAsDone(String taskDescription){"},{"lineNumber":54,"author":{"gitId":"Rye98"},"content":"        /**"},{"lineNumber":55,"author":{"gitId":"Rye98"},"content":"         * Marks one of the tasks as done."},{"lineNumber":56,"author":{"gitId":"Rye98"},"content":"         * Throws an error if index given is invalid."},{"lineNumber":57,"author":{"gitId":"Rye98"},"content":"         */"},{"lineNumber":58,"author":{"gitId":"Rye98"},"content":"        String[] input \u003d taskDescription.split(\" \");        // input \u003d [\"Done\", taskIndex]"},{"lineNumber":59,"author":{"gitId":"Rye98"},"content":"        int taskIndex \u003d Integer.parseInt(input[1]);"},{"lineNumber":60,"author":{"gitId":"Rye98"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"Rye98"},"content":"            tasks.get(taskIndex - 1).markAsDone();"},{"lineNumber":62,"author":{"gitId":"Rye98"},"content":"            System.out.println(\"\\t Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":63,"author":{"gitId":"Rye98"},"content":"            String output \u003d String.format(\"%02d. [%s] %s\", taskIndex, tasks.get(taskIndex - 1).getStatusIcon(), tasks.get(taskIndex - 1).getDescription());"},{"lineNumber":64,"author":{"gitId":"Rye98"},"content":"            System.out.println(\"\\t\" + output);"},{"lineNumber":65,"author":{"gitId":"Rye98"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":66,"author":{"gitId":"Rye98"},"content":"            System.out.println(\"\\t Invalid task number!\");"},{"lineNumber":67,"author":{"gitId":"Rye98"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":68,"author":{"gitId":"Rye98"},"content":"            System.out.println(\"\\t Please enter the task number instead!\");"},{"lineNumber":69,"author":{"gitId":"Rye98"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":72,"author":{"gitId":"Rye98"},"content":"    public static void listTasks(){"},{"lineNumber":73,"author":{"gitId":"Rye98"},"content":"        /**"},{"lineNumber":74,"author":{"gitId":"Rye98"},"content":"         * Lists out the things under tasks."},{"lineNumber":75,"author":{"gitId":"Rye98"},"content":"         */"},{"lineNumber":76,"author":{"gitId":"Rye98"},"content":"        System.out.println(\"\\t Here are the tasks in your list:\");"},{"lineNumber":77,"author":{"gitId":"Rye98"},"content":"        int i \u003d 0;"},{"lineNumber":78,"author":{"gitId":"Rye98"},"content":"        for(Task t : tasks){"},{"lineNumber":79,"author":{"gitId":"Rye98"},"content":"            String output \u003d String.format(\"%02d. %s\", i+1, t);"},{"lineNumber":80,"author":{"gitId":"Rye98"},"content":"            System.out.println(\"\\t\" + output);"},{"lineNumber":81,"author":{"gitId":"Rye98"},"content":"            i++;"},{"lineNumber":82,"author":{"gitId":"Rye98"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":85,"author":{"gitId":"Rye98"},"content":"    public static void deleteTask(String taskDescription){"},{"lineNumber":86,"author":{"gitId":"Rye98"},"content":"        /**"},{"lineNumber":87,"author":{"gitId":"Rye98"},"content":"         * Deletes a task based on the index given by user."},{"lineNumber":88,"author":{"gitId":"Rye98"},"content":"         * Throws an error if invalid index is given."},{"lineNumber":89,"author":{"gitId":"Rye98"},"content":"         */"},{"lineNumber":90,"author":{"gitId":"Rye98"},"content":"        String[] input \u003d taskDescription.split(\" \");        // input \u003d [\"Done\", taskIndex]"},{"lineNumber":91,"author":{"gitId":"Rye98"},"content":"        int taskIndex \u003d Integer.parseInt(input[1]);"},{"lineNumber":92,"author":{"gitId":"Rye98"},"content":"        try {"},{"lineNumber":93,"author":{"gitId":"Rye98"},"content":"            String taskInformation \u003d tasks.get(taskIndex-1).toString();"},{"lineNumber":94,"author":{"gitId":"Rye98"},"content":"            tasks.remove(taskIndex - 1);"},{"lineNumber":95,"author":{"gitId":"Rye98"},"content":"            System.out.println(\"\\t Noted. I have removed this task. \");"},{"lineNumber":96,"author":{"gitId":"Rye98"},"content":"            System.out.println(\"\\t\" + taskInformation);"},{"lineNumber":97,"author":{"gitId":"Rye98"},"content":"            System.out.println(\"\\t You now have \" + tasks.size() + \"tasks in the list.\");"},{"lineNumber":98,"author":{"gitId":"Rye98"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":99,"author":{"gitId":"Rye98"},"content":"            System.out.println(\"\\t Invalid task number!\");"},{"lineNumber":100,"author":{"gitId":"Rye98"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":101,"author":{"gitId":"Rye98"},"content":"            System.out.println(\"\\t Please enter the task number instead!\");"},{"lineNumber":102,"author":{"gitId":"Rye98"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":105,"author":{"gitId":"Rye98"},"content":"    public static void findTask(String description){"},{"lineNumber":106,"author":{"gitId":"Rye98"},"content":"        /**"},{"lineNumber":107,"author":{"gitId":"Rye98"},"content":"         * Finds and prints tasks which task\u0027s description"},{"lineNumber":108,"author":{"gitId":"Rye98"},"content":"         * contains the user input."},{"lineNumber":109,"author":{"gitId":"Rye98"},"content":"         */"},{"lineNumber":110,"author":{"gitId":"Rye98"},"content":"        int matchingTasks \u003d 0;"},{"lineNumber":111,"author":{"gitId":"Rye98"},"content":"        String keyword \u003d description.replace(\"find \", \"\");"},{"lineNumber":112,"author":{"gitId":"Rye98"},"content":"        for(Task t : tasks){"},{"lineNumber":113,"author":{"gitId":"Rye98"},"content":"            if (t.getDescription().contains(keyword)) {"},{"lineNumber":114,"author":{"gitId":"Rye98"},"content":"                if (matchingTasks \u003d\u003d 0) {"},{"lineNumber":115,"author":{"gitId":"Rye98"},"content":"                    System.out.println(\"\\tHere are the matching tasks in your list:\");"},{"lineNumber":116,"author":{"gitId":"Rye98"},"content":"                }"},{"lineNumber":117,"author":{"gitId":"Rye98"},"content":"                String output \u003d String.format(\"%02d. %s\", matchingTasks+1, t);"},{"lineNumber":118,"author":{"gitId":"Rye98"},"content":"                System.out.println(\"\\t\" + output);"},{"lineNumber":119,"author":{"gitId":"Rye98"},"content":"                matchingTasks++;"},{"lineNumber":120,"author":{"gitId":"Rye98"},"content":"            }"},{"lineNumber":121,"author":{"gitId":"Rye98"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"Rye98"},"content":"        if (matchingTasks \u003d\u003d 0) {"},{"lineNumber":123,"author":{"gitId":"Rye98"},"content":"            System.out.println(\"\\tNo tasks with matching description is found.\");"},{"lineNumber":124,"author":{"gitId":"Rye98"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":127,"author":{"gitId":"Rye98"},"content":"    public static void setupTasks() throws FileNotFoundException,"},{"lineNumber":128,"author":{"gitId":"Rye98"},"content":"            MissingDeadlineException, MissingEventTimeException {"},{"lineNumber":129,"author":{"gitId":"Rye98"},"content":"        /**"},{"lineNumber":130,"author":{"gitId":"Rye98"},"content":"         * Reads in current tasks when main() starts running."},{"lineNumber":131,"author":{"gitId":"Rye98"},"content":"         * If duke.txt does not exist, then a new txt file will be created."},{"lineNumber":132,"author":{"gitId":"Rye98"},"content":"         * If duke.txt exists, contents will be loaded into TaskList"},{"lineNumber":133,"author":{"gitId":"Rye98"},"content":"         */"},{"lineNumber":134,"author":{"gitId":"Rye98"},"content":"        File f \u003d new File(\"duke.txt\");"},{"lineNumber":135,"author":{"gitId":"Rye98"},"content":"        if (!f.exists()) {"},{"lineNumber":136,"author":{"gitId":"Rye98"},"content":"            try{"},{"lineNumber":137,"author":{"gitId":"Rye98"},"content":"                Storage.writeToFile(\"duke.txt\", \"\");"},{"lineNumber":138,"author":{"gitId":"Rye98"},"content":"            } catch (IOException e) {"},{"lineNumber":139,"author":{"gitId":"Rye98"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());"},{"lineNumber":140,"author":{"gitId":"Rye98"},"content":"            }"},{"lineNumber":141,"author":{"gitId":"Rye98"},"content":"        } else {"},{"lineNumber":142,"author":{"gitId":"Rye98"},"content":"            // Reads in inputs from the file and update tasks"},{"lineNumber":143,"author":{"gitId":"Rye98"},"content":"            Scanner s \u003d new Scanner(f);"},{"lineNumber":144,"author":{"gitId":"Rye98"},"content":"            while (s.hasNext()){"},{"lineNumber":145,"author":{"gitId":"Rye98"},"content":"                String line \u003d s.nextLine();"},{"lineNumber":146,"author":{"gitId":"Rye98"},"content":"                String[] contents \u003d line.split(\" ~ \");"},{"lineNumber":147,"author":{"gitId":"Rye98"},"content":"                String taskDescription \u003d contents[2];"},{"lineNumber":148,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":149,"author":{"gitId":"Rye98"},"content":"                switch (contents[0]){"},{"lineNumber":150,"author":{"gitId":"Rye98"},"content":"                case \"T\":{"},{"lineNumber":151,"author":{"gitId":"Rye98"},"content":"                    Todo t \u003d new Todo(taskDescription);"},{"lineNumber":152,"author":{"gitId":"Rye98"},"content":"                    if (contents[1].contains(\"1\")) {"},{"lineNumber":153,"author":{"gitId":"Rye98"},"content":"                        t.markAsDone();"},{"lineNumber":154,"author":{"gitId":"Rye98"},"content":"                    }"},{"lineNumber":155,"author":{"gitId":"Rye98"},"content":"                    tasks.add(t);"},{"lineNumber":156,"author":{"gitId":"Rye98"},"content":"                    break;"},{"lineNumber":157,"author":{"gitId":"Rye98"},"content":"                }"},{"lineNumber":158,"author":{"gitId":"Rye98"},"content":"                case \"D\":{"},{"lineNumber":159,"author":{"gitId":"Rye98"},"content":"                    Deadline d \u003d new Deadline(taskDescription, contents[contents.length -1]);"},{"lineNumber":160,"author":{"gitId":"Rye98"},"content":"                    if (contents[1].contains(\"1\")) {"},{"lineNumber":161,"author":{"gitId":"Rye98"},"content":"                        d.markAsDone();"},{"lineNumber":162,"author":{"gitId":"Rye98"},"content":"                    }"},{"lineNumber":163,"author":{"gitId":"Rye98"},"content":"                    tasks.add(d);"},{"lineNumber":164,"author":{"gitId":"Rye98"},"content":"                    break;"},{"lineNumber":165,"author":{"gitId":"Rye98"},"content":"                }"},{"lineNumber":166,"author":{"gitId":"Rye98"},"content":"                case \"E\":{"},{"lineNumber":167,"author":{"gitId":"Rye98"},"content":"                    Event e \u003d new Event(taskDescription, contents[contents.length -1]);"},{"lineNumber":168,"author":{"gitId":"Rye98"},"content":"                    if (contents[1].contains(\"1\")) {"},{"lineNumber":169,"author":{"gitId":"Rye98"},"content":"                        e.markAsDone();"},{"lineNumber":170,"author":{"gitId":"Rye98"},"content":"                    }"},{"lineNumber":171,"author":{"gitId":"Rye98"},"content":"                    tasks.add(e);"},{"lineNumber":172,"author":{"gitId":"Rye98"},"content":"                    break;"},{"lineNumber":173,"author":{"gitId":"Rye98"},"content":"                }"},{"lineNumber":174,"author":{"gitId":"Rye98"},"content":"                }"},{"lineNumber":175,"author":{"gitId":"Rye98"},"content":"            }"},{"lineNumber":176,"author":{"gitId":"Rye98"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"Rye98"},"content":"}"}],"authorContributionMap":{"Rye98":178}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"public class Todo extends Task{"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"    public Todo(String description){"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"        this.natureOfTask \u003d \"T\";"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"    public String toString(){"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"        return String.format(\"[T]\" + super.toString());"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"}"}],"authorContributionMap":{"Rye98":11}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"public class Ui {"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"    public Ui() {"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"    public static final String SECTION_DIVIDER \u003d \"____________________________________________________________\";"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"    public static void greetUser(){"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"        String greeting \u003d \"\\t\" + SECTION_DIVIDER + \"\\n\""},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"                + \"\\tHello! I\u0027m Duke. \\n\""},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"                + \"\\tWhat can I do for you? \\n\""},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"                + \"\\t\" + SECTION_DIVIDER;"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":"        System.out.println(greeting);"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":""},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"    public static void signOff(){"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"        String sign_off \u003d \"\\t\" + SECTION_DIVIDER + \"\\n\""},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":"                + \"\\tBye. Hope to see you again soon!\\n\""},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"                + \"\\t\" + SECTION_DIVIDER;"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"        System.out.println(sign_off);"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"}"}],"authorContributionMap":{"Rye98":22}}]
